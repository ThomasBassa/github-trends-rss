<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C, Today</title><link>https://github.com/trending/c?since=daily</link><description>The top repositories on GitHub for c, measured daily</description><pubDate>Wed, 06 Nov 2019 01:06:11 GMT</pubDate><lastBuildDate>Wed, 06 Nov 2019 01:06:11 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>git/git #1 in C, Today</title><link>https://github.com/git/git</link><description>&lt;p&gt;&lt;i&gt;Git Source Code Mirror - This is a publish-only repository and all pull requests are ignored. Please follow Documentation/SubmittingPatches procedure for any of your improvements.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://dev.azure.com/git/git/_build/latest?definitionId=11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/254dd63d83b7a6d1406ce05d85b385b4d140801b/68747470733a2f2f6465762e617a7572652e636f6d2f6769742f6769742f5f617069732f6275696c642f7374617475732f6769742e676974" alt="Build Status" data-canonical-src="https://dev.azure.com/git/git/_apis/build/status/git.git" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-git---fast-scalable-distributed-revision-control-system" class="anchor" aria-hidden="true" href="#git---fast-scalable-distributed-revision-control-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git - fast, scalable, distributed revision control system&lt;/h1&gt;
&lt;p&gt;Git is a fast, scalable, distributed revision control system with an
unusually rich command set that provides both high-level operations
and full access to internals.&lt;/p&gt;
&lt;p&gt;Git is an Open Source project covered by the GNU General Public
License version 2 (some parts of it are under different licenses,
compatible with the GPLv2). It was originally written by Linus
Torvalds with help of a group of hackers around the net.&lt;/p&gt;
&lt;p&gt;Please read the file &lt;a href="INSTALL"&gt;INSTALL&lt;/a&gt; for installation instructions.&lt;/p&gt;
&lt;p&gt;Many Git online resources are accessible from &lt;a href="https://git-scm.com/" rel="nofollow"&gt;https://git-scm.com/&lt;/a&gt;
including full documentation and Git related tools.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/gittutorial.txt"&gt;Documentation/gittutorial.txt&lt;/a&gt; to get started, then see
&lt;a href="Documentation/giteveryday.txt"&gt;Documentation/giteveryday.txt&lt;/a&gt; for a useful minimum set of commands, and
&lt;code&gt;Documentation/git-&amp;lt;commandname&amp;gt;.txt&lt;/code&gt; for documentation of each command.
If git has been correctly installed, then the tutorial can also be
read with &lt;code&gt;man gittutorial&lt;/code&gt; or &lt;code&gt;git help tutorial&lt;/code&gt;, and the
documentation of each command with &lt;code&gt;man git-&amp;lt;commandname&amp;gt;&lt;/code&gt; or &lt;code&gt;git help &amp;lt;commandname&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;CVS users may also want to read &lt;a href="Documentation/gitcvs-migration.txt"&gt;Documentation/gitcvs-migration.txt&lt;/a&gt;
(&lt;code&gt;man gitcvs-migration&lt;/code&gt; or &lt;code&gt;git help cvs-migration&lt;/code&gt; if git is
installed).&lt;/p&gt;
&lt;p&gt;The user discussion and development of Git take place on the Git
mailing list -- everyone is welcome to post bug reports, feature
requests, comments and patches to &lt;a href="mailto:git@vger.kernel.org"&gt;git@vger.kernel.org&lt;/a&gt; (read
&lt;a href="Documentation/SubmittingPatches"&gt;Documentation/SubmittingPatches&lt;/a&gt; for instructions on patch submission).
To subscribe to the list, send an email with just "subscribe git" in
the body to &lt;a href="mailto:majordomo@vger.kernel.org"&gt;majordomo@vger.kernel.org&lt;/a&gt;. The mailing list archives are
available at &lt;a href="https://public-inbox.org/git/" rel="nofollow"&gt;https://public-inbox.org/git/&lt;/a&gt;,
&lt;a href="http://marc.info/?l=git" rel="nofollow"&gt;http://marc.info/?l=git&lt;/a&gt; and other archival sites.&lt;/p&gt;
&lt;p&gt;Issues which are security relevant should be disclosed privately to
the Git Security mailing list &lt;a href="mailto:git-security@googlegroups.com"&gt;git-security@googlegroups.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The maintainer frequently sends the "What's cooking" reports that
list the current status of various development topics to the mailing
list.  The discussion following them give a good reference for
project status, development direction and remaining tasks.&lt;/p&gt;
&lt;p&gt;The name "git" was given by Linus Torvalds when he wrote the very
first version. He described the tool as "the stupid content tracker"
and the name as (depending on your mood):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;random three-letter combination that is pronounceable, and not
actually used by any common UNIX command.  The fact that it is a
mispronunciation of "get" may or may not be relevant.&lt;/li&gt;
&lt;li&gt;stupid. contemptible and despicable. simple. Take your pick from the
dictionary of slang.&lt;/li&gt;
&lt;li&gt;"global information tracker": you're in a good mood, and it actually
works for you. Angels sing, and a light suddenly fills the room.&lt;/li&gt;
&lt;li&gt;"goddamn idiotic truckload of sh*t": when it breaks&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>git</author><guid isPermaLink="false">https://github.com/git/git</guid><pubDate>Wed, 06 Nov 2019 00:01:00 GMT</pubDate></item><item><title>DaveGamble/cJSON #2 in C, Today</title><link>https://github.com/DaveGamble/cJSON</link><description>&lt;p&gt;&lt;i&gt;Ultralightweight JSON parser in ANSI C&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cjson" class="anchor" aria-hidden="true" href="#cjson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cJSON&lt;/h1&gt;
&lt;p&gt;Ultralightweight JSON parser in ANSI C.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#welcome-to-cjson"&gt;Welcome to cJSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building"&gt;Building&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#copying-the-source"&gt;Copying the source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cmake"&gt;CMake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#makefile"&gt;Makefile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#including-cjson"&gt;Including cJSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-structure"&gt;Data Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#working-with-the-data-structure"&gt;Working with the data structure&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#basic-types"&gt;Basic types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#arrays"&gt;Arrays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#objects"&gt;Objects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#parsing-json"&gt;Parsing JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#printing-json"&gt;Printing JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#example"&gt;Example&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#printing"&gt;Printing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#parsing"&gt;Parsing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#caveats"&gt;Caveats&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#zero-character"&gt;Zero Character&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#character-encoding"&gt;Character Encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c-standard"&gt;C Standard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#floating-point-numbers"&gt;Floating Point Numbers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deep-nesting-of-arrays-and-objects"&gt;Deep Nesting Of Arrays And Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thread-safety"&gt;Thread Safety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#case-sensitivity"&gt;Case Sensitivity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#duplicate-object-members"&gt;Duplicate Object Members&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#enjoy-cjson"&gt;Enjoy cJSON!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT License&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Copyright (c) 2009-2017 Dave Gamble and cJSON contributors&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-welcome-to-cjson" class="anchor" aria-hidden="true" href="#welcome-to-cjson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to cJSON.&lt;/h3&gt;
&lt;p&gt;cJSON aims to be the dumbest possible parser that you can get your job done with.
It's a single file of C, and a single header file.&lt;/p&gt;
&lt;p&gt;JSON is described best here: &lt;a href="http://www.json.org/" rel="nofollow"&gt;http://www.json.org/&lt;/a&gt;
It's like XML, but fat-free. You use it to move data around, store things, or just
generally represent your program's state.&lt;/p&gt;
&lt;p&gt;As a library, cJSON exists to take away as much legwork as it can, but not get in your way.
As a point of pragmatism (i.e. ignoring the truth), I'm going to say that you can use it
in one of two modes: Auto and Manual. Let's have a quick run-through.&lt;/p&gt;
&lt;p&gt;I lifted some JSON from this page: &lt;a href="http://www.json.org/fatfree.html" rel="nofollow"&gt;http://www.json.org/fatfree.html&lt;/a&gt;
That page inspired me to write cJSON, which is a parser that tries to share the same
philosophy as JSON itself. Simple, dumb, out of the way.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h3&gt;
&lt;p&gt;There are several ways to incorporate cJSON into your project.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-copying-the-source" class="anchor" aria-hidden="true" href="#copying-the-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;copying the source&lt;/h4&gt;
&lt;p&gt;Because the entire library is only one C file and one header file, you can just copy &lt;code&gt;cJSON.h&lt;/code&gt; and &lt;code&gt;cJSON.c&lt;/code&gt; to your projects source and start using it.&lt;/p&gt;
&lt;p&gt;cJSON is written in ANSI C (C89) in order to support as many platforms and compilers as possible.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cmake" class="anchor" aria-hidden="true" href="#cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMake&lt;/h4&gt;
&lt;p&gt;With CMake, cJSON supports a full blown build system. This way you get the most features. CMake with an equal or higher version than 2.8.5 is supported. With CMake it is recommended to do an out of tree build, meaning the compiled files are put in a directory separate from the source files. So in order to build cJSON with CMake on a Unix platform, make a &lt;code&gt;build&lt;/code&gt; directory and run CMake inside it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir build
cd build
cmake ..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will create a Makefile and a bunch of other files. You can then compile it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And install it with &lt;code&gt;make install&lt;/code&gt; if you want. By default it installs the headers &lt;code&gt;/usr/local/include/cjson&lt;/code&gt; and the libraries to &lt;code&gt;/usr/local/lib&lt;/code&gt;. It also installs files for pkg-config to make it easier to detect and use an existing installation of CMake. And it installs CMake config files, that can be used by other CMake based projects to discover the library.&lt;/p&gt;
&lt;p&gt;You can change the build process with a list of different options that you can pass to CMake. Turn them on with &lt;code&gt;On&lt;/code&gt; and off with &lt;code&gt;Off&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-DENABLE_CJSON_TEST=On&lt;/code&gt;: Enable building the tests. (on by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-DENABLE_CJSON_UTILS=On&lt;/code&gt;: Enable building cJSON_Utils. (off by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-DENABLE_TARGET_EXPORT=On&lt;/code&gt;: Enable the export of CMake targets. Turn off if it makes problems. (on by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-DENABLE_CUSTOM_COMPILER_FLAGS=On&lt;/code&gt;: Enable custom compiler flags (currently for Clang, GCC and MSVC). Turn off if it makes problems. (on by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-DENABLE_VALGRIND=On&lt;/code&gt;: Run tests with &lt;a href="http://valgrind.org" rel="nofollow"&gt;valgrind&lt;/a&gt;. (off by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-DENABLE_SANITIZERS=On&lt;/code&gt;: Compile cJSON with &lt;a href="https://github.com/google/sanitizers/wiki/AddressSanitizer"&gt;AddressSanitizer&lt;/a&gt; and &lt;a href="https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html" rel="nofollow"&gt;UndefinedBehaviorSanitizer&lt;/a&gt; enabled (if possible). (off by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-DENABLE_SAFE_STACK&lt;/code&gt;: Enable the &lt;a href="https://clang.llvm.org/docs/SafeStack.html" rel="nofollow"&gt;SafeStack&lt;/a&gt; instrumentation pass. Currently only works with the Clang compiler. (off by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-DBUILD_SHARED_LIBS=On&lt;/code&gt;: Build the shared libraries. (on by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-DBUILD_SHARED_AND_STATIC_LIBS=On&lt;/code&gt;: Build both shared and static libraries. (off by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-DCMAKE_INSTALL_PREFIX=/usr&lt;/code&gt;: Set a prefix for the installation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-DENABLE_LOCALES=On&lt;/code&gt;: Enable the usage of localeconv method. ( on by default )&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-DCJSON_OVERRIDE_BUILD_SHARED_LIBS=On&lt;/code&gt;: Enable overriding the value of &lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt; with &lt;code&gt;-DCJSON_BUILD_SHARED_LIBS&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are packaging cJSON for a distribution of Linux, you would probably take these steps for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir build
cd build
cmake .. -DENABLE_CJSON_UTILS=On -DENABLE_CJSON_TEST=Off -DCMAKE_INSTALL_PREFIX=/usr
make
make DESTDIR=$pkgdir install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Windows CMake is usually used to create a Visual Studio solution file by running it inside the Developer Command Prompt for Visual Studio, for exact steps follow the official documentation from CMake and Microsoft and use the online search engine of your choice. The descriptions of the the options above still generally apply, although not all of them work on Windows.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-makefile" class="anchor" aria-hidden="true" href="#makefile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Makefile&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This Method is deprecated. Use CMake if at all possible. Makefile support is limited to fixing bugs.&lt;/p&gt;
&lt;p&gt;If you don't have CMake available, but still have GNU make. You can use the makefile to build cJSON:&lt;/p&gt;
&lt;p&gt;Run this command in the directory with the source code and it will automatically compile static and shared libraries and a little test program (not the full test suite).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want, you can install the compiled library to your system using &lt;code&gt;make install&lt;/code&gt;. By default it will install the headers in &lt;code&gt;/usr/local/include/cjson&lt;/code&gt; and the libraries in &lt;code&gt;/usr/local/lib&lt;/code&gt;. But you can change this behavior by setting the &lt;code&gt;PREFIX&lt;/code&gt; and &lt;code&gt;DESTDIR&lt;/code&gt; variables: &lt;code&gt;make PREFIX=/usr DESTDIR=temp install&lt;/code&gt;. And uninstall them with: &lt;code&gt;make PREFIX=/usr DESTDIR=temp uninstall&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-including-cjson" class="anchor" aria-hidden="true" href="#including-cjson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Including cJSON&lt;/h3&gt;
&lt;p&gt;If you installed it via CMake or the Makefile, you can include cJSON like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;cjson/cJSON.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-data-structure" class="anchor" aria-hidden="true" href="#data-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Structure&lt;/h3&gt;
&lt;p&gt;cJSON represents JSON data using the &lt;code&gt;cJSON&lt;/code&gt; struct data type:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; The cJSON structure: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;typedef&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; cJSON
{
    &lt;span class="pl-k"&gt;struct&lt;/span&gt; cJSON *next;
    &lt;span class="pl-k"&gt;struct&lt;/span&gt; cJSON *prev;
    &lt;span class="pl-k"&gt;struct&lt;/span&gt; cJSON *child;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; type;
    &lt;span class="pl-k"&gt;char&lt;/span&gt; *valuestring;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; writing to valueint is DEPRECATED, use cJSON_SetNumberValue instead &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; valueint;
    &lt;span class="pl-k"&gt;double&lt;/span&gt; valuedouble;
    &lt;span class="pl-k"&gt;char&lt;/span&gt; *string;
} cJSON;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An item of this type represents a JSON value. The type is stored in &lt;code&gt;type&lt;/code&gt; as a bit-flag (&lt;strong&gt;this means that you cannot find out the type by just comparing the value of &lt;code&gt;type&lt;/code&gt;&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;To check the type of an item, use the corresponding &lt;code&gt;cJSON_Is...&lt;/code&gt; function. It does a &lt;code&gt;NULL&lt;/code&gt; check followed by a type check and returns a boolean value if the item is of this type.&lt;/p&gt;
&lt;p&gt;The type can be one of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cJSON_Invalid&lt;/code&gt; (check with &lt;code&gt;cJSON_IsInvalid&lt;/code&gt;): Represents an invalid item that doesn't contain any value. You automatically have this type if you set the item to all zero bytes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cJSON_False&lt;/code&gt; (check with &lt;code&gt;cJSON_IsFalse&lt;/code&gt;): Represents a &lt;code&gt;false&lt;/code&gt; boolean value. You can also check for boolean values in general with &lt;code&gt;cJSON_IsBool&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cJSON_True&lt;/code&gt; (check with &lt;code&gt;cJSON_IsTrue&lt;/code&gt;): Represents a &lt;code&gt;true&lt;/code&gt; boolean value. You can also check for boolean values in general with &lt;code&gt;cJSON_IsBool&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cJSON_NULL&lt;/code&gt; (check with &lt;code&gt;cJSON_IsNull&lt;/code&gt;): Represents a &lt;code&gt;null&lt;/code&gt; value.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cJSON_Number&lt;/code&gt; (check with &lt;code&gt;cJSON_IsNumber&lt;/code&gt;): Represents a number value. The value is stored as a double in &lt;code&gt;valuedouble&lt;/code&gt; and also in &lt;code&gt;valueint&lt;/code&gt;. If the number is outside of the range of an integer, &lt;code&gt;INT_MAX&lt;/code&gt; or &lt;code&gt;INT_MIN&lt;/code&gt; are used for &lt;code&gt;valueint&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cJSON_String&lt;/code&gt; (check with &lt;code&gt;cJSON_IsString&lt;/code&gt;): Represents a string value. It is stored in the form of a zero terminated string in &lt;code&gt;valuestring&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cJSON_Array&lt;/code&gt; (check with &lt;code&gt;cJSON_IsArray&lt;/code&gt;): Represent an array value. This is implemented by pointing &lt;code&gt;child&lt;/code&gt; to a linked list of &lt;code&gt;cJSON&lt;/code&gt; items that represent the values in the array. The elements are linked together using &lt;code&gt;next&lt;/code&gt; and &lt;code&gt;prev&lt;/code&gt;, where the first element has &lt;code&gt;prev == NULL&lt;/code&gt; and the last element &lt;code&gt;next == NULL&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cJSON_Object&lt;/code&gt; (check with &lt;code&gt;cJSON_IsObject&lt;/code&gt;): Represents an object value. Objects are stored same way as an array, the only difference is that the items in the object store their keys in &lt;code&gt;string&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cJSON_Raw&lt;/code&gt; (check with &lt;code&gt;cJSON_IsRaw&lt;/code&gt;): Represents any kind of JSON that is stored as a zero terminated array of characters in &lt;code&gt;valuestring&lt;/code&gt;. This can be used, for example, to avoid printing the same static JSON over and over again to save performance. cJSON will never create this type when parsing. Also note that cJSON doesn't check if it is valid JSON.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally there are the following two flags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cJSON_IsReference&lt;/code&gt;: Specifies that the item that &lt;code&gt;child&lt;/code&gt; points to and/or &lt;code&gt;valuestring&lt;/code&gt; is not owned by this item, it is only a reference. So &lt;code&gt;cJSON_Delete&lt;/code&gt; and other functions will only deallocate this item, not it's children/valuestring.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cJSON_StringIsConst&lt;/code&gt;: This means that &lt;code&gt;string&lt;/code&gt; points to a constant string. This means that &lt;code&gt;cJSON_Delete&lt;/code&gt; and other functions will not try to deallocate &lt;code&gt;string&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-working-with-the-data-structure" class="anchor" aria-hidden="true" href="#working-with-the-data-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working with the data structure&lt;/h3&gt;
&lt;p&gt;For every value type there is a &lt;code&gt;cJSON_Create...&lt;/code&gt; function that can be used to create an item of that type.
All of these will allocate a &lt;code&gt;cJSON&lt;/code&gt; struct that can later be deleted with &lt;code&gt;cJSON_Delete&lt;/code&gt;.
Note that you have to delete them at some point, otherwise you will get a memory leak.
&lt;strong&gt;Important&lt;/strong&gt;: If you have added an item to an array or an object already, you &lt;strong&gt;mustn't&lt;/strong&gt; delete it with &lt;code&gt;cJSON_Delete&lt;/code&gt;. Adding it to an array or object transfers its ownership so that when that array or object is deleted, it gets deleted as well.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-basic-types" class="anchor" aria-hidden="true" href="#basic-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic types&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;null&lt;/strong&gt; is created with &lt;code&gt;cJSON_CreateNull&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;booleans&lt;/strong&gt; are created with &lt;code&gt;cJSON_CreateTrue&lt;/code&gt;, &lt;code&gt;cJSON_CreateFalse&lt;/code&gt; or &lt;code&gt;cJSON_CreateBool&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;numbers&lt;/strong&gt; are created with &lt;code&gt;cJSON_CreateNumber&lt;/code&gt;. This will set both &lt;code&gt;valuedouble&lt;/code&gt; and &lt;code&gt;valueint&lt;/code&gt;. If the number is outside of the range of an integer, &lt;code&gt;INT_MAX&lt;/code&gt; or &lt;code&gt;INT_MIN&lt;/code&gt; are used for &lt;code&gt;valueint&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;strings&lt;/strong&gt; are created with &lt;code&gt;cJSON_CreateString&lt;/code&gt; (copies the string) or with &lt;code&gt;cJSON_CreateStringReference&lt;/code&gt; (directly points to the string. This means that &lt;code&gt;valuestring&lt;/code&gt; won't be deleted by &lt;code&gt;cJSON_Delete&lt;/code&gt; and you are responsible for it's lifetime, useful for constants)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-arrays" class="anchor" aria-hidden="true" href="#arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arrays&lt;/h4&gt;
&lt;p&gt;You can create an empty array with &lt;code&gt;cJSON_CreateArray&lt;/code&gt;. &lt;code&gt;cJSON_CreateArrayReference&lt;/code&gt; can be used to create an array that doesn't "own" its content, so its content doesn't get deleted by &lt;code&gt;cJSON_Delete&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To add items to an array, use &lt;code&gt;cJSON_AddItemToArray&lt;/code&gt; to append items to the end.
Using &lt;code&gt;cJSON_AddItemReferenceToArray&lt;/code&gt; an element can be added as a reference to another item, array or string. This means that &lt;code&gt;cJSON_Delete&lt;/code&gt; will not delete that items &lt;code&gt;child&lt;/code&gt; or &lt;code&gt;valuestring&lt;/code&gt; properties, so no double frees are occurring if they are already used elsewhere.
To insert items in the middle, use &lt;code&gt;cJSON_InsertItemInArray&lt;/code&gt;. It will insert an item at the given 0 based index and shift all the existing items to the right.&lt;/p&gt;
&lt;p&gt;If you want to take an item out of an array at a given index and continue using it, use &lt;code&gt;cJSON_DetachItemFromArray&lt;/code&gt;, it will return the detached item, so be sure to assign it to a pointer, otherwise you will have a memory leak.&lt;/p&gt;
&lt;p&gt;Deleting items is done with &lt;code&gt;cJSON_DeleteItemFromArray&lt;/code&gt;. It works like &lt;code&gt;cJSON_DetachItemFromArray&lt;/code&gt;, but deletes the detached item via &lt;code&gt;cJSON_Delete&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can also replace an item in an array in place. Either with &lt;code&gt;cJSON_ReplaceItemInArray&lt;/code&gt; using an index or with &lt;code&gt;cJSON_ReplaceItemViaPointer&lt;/code&gt; given a pointer to an element. &lt;code&gt;cJSON_ReplaceItemViaPointer&lt;/code&gt; will return &lt;code&gt;0&lt;/code&gt; if it fails. What this does internally is to detach the old item, delete it and insert the new item in its place.&lt;/p&gt;
&lt;p&gt;To get the size of an array, use &lt;code&gt;cJSON_GetArraySize&lt;/code&gt;. Use &lt;code&gt;cJSON_GetArrayItem&lt;/code&gt; to get an element at a given index.&lt;/p&gt;
&lt;p&gt;Because an array is stored as a linked list, iterating it via index is inefficient (&lt;code&gt;O(n²)&lt;/code&gt;), so you can iterate over an array using the &lt;code&gt;cJSON_ArrayForEach&lt;/code&gt; macro in &lt;code&gt;O(n)&lt;/code&gt; time complexity.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objects" class="anchor" aria-hidden="true" href="#objects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objects&lt;/h4&gt;
&lt;p&gt;You can create an empty object with &lt;code&gt;cJSON_CreateObject&lt;/code&gt;. &lt;code&gt;cJSON_CreateObjectReference&lt;/code&gt; can be used to create an object that doesn't "own" its content, so its content doesn't get deleted by &lt;code&gt;cJSON_Delete&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To add items to an object, use &lt;code&gt;cJSON_AddItemToObject&lt;/code&gt;. Use &lt;code&gt;cJSON_AddItemToObjectCS&lt;/code&gt; to add an item to an object with a name that is a constant or reference (key of the item, &lt;code&gt;string&lt;/code&gt; in the &lt;code&gt;cJSON&lt;/code&gt; struct), so that it doesn't get freed by &lt;code&gt;cJSON_Delete&lt;/code&gt;.
Using &lt;code&gt;cJSON_AddItemReferenceToArray&lt;/code&gt; an element can be added as a reference to another object, array or string. This means that &lt;code&gt;cJSON_Delete&lt;/code&gt; will not delete that items &lt;code&gt;child&lt;/code&gt; or &lt;code&gt;valuestring&lt;/code&gt; properties, so no double frees are occurring if they are already used elsewhere.&lt;/p&gt;
&lt;p&gt;If you want to take an item out of an object, use &lt;code&gt;cJSON_DetachItemFromObjectCaseSensitive&lt;/code&gt;, it will return the detached item, so be sure to assign it to a pointer, otherwise you will have a memory leak.&lt;/p&gt;
&lt;p&gt;Deleting items is done with &lt;code&gt;cJSON_DeleteItemFromObjectCaseSensitive&lt;/code&gt;. It works like &lt;code&gt;cJSON_DetachItemFromObjectCaseSensitive&lt;/code&gt; followed by &lt;code&gt;cJSON_Delete&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can also replace an item in an object in place. Either with &lt;code&gt;cJSON_ReplaceItemInObjectCaseSensitive&lt;/code&gt; using a key or with &lt;code&gt;cJSON_ReplaceItemViaPointer&lt;/code&gt; given a pointer to an element. &lt;code&gt;cJSON_ReplaceItemViaPointer&lt;/code&gt; will return &lt;code&gt;0&lt;/code&gt; if it fails. What this does internally is to detach the old item, delete it and insert the new item in its place.&lt;/p&gt;
&lt;p&gt;To get the size of an object, you can use &lt;code&gt;cJSON_GetArraySize&lt;/code&gt;, this works because internally objects are stored as arrays.&lt;/p&gt;
&lt;p&gt;If you want to access an item in an object, use &lt;code&gt;cJSON_GetObjectItemCaseSensitive&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To iterate over an object, you can use the &lt;code&gt;cJSON_ArrayForEach&lt;/code&gt; macro the same way as for arrays.&lt;/p&gt;
&lt;p&gt;cJSON also provides convenient helper functions for quickly creating a new item and adding it to an object, like &lt;code&gt;cJSON_AddNullToObject&lt;/code&gt;. They return a pointer to the new item or &lt;code&gt;NULL&lt;/code&gt; if they failed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-parsing-json" class="anchor" aria-hidden="true" href="#parsing-json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parsing JSON&lt;/h3&gt;
&lt;p&gt;Given some JSON in a zero terminated string, you can parse it with &lt;code&gt;cJSON_Parse&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;cJSON *json = cJSON_Parse(string);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will parse the JSON and allocate a tree of &lt;code&gt;cJSON&lt;/code&gt; items that represents it. Once it returns, you are fully responsible for deallocating it after use with &lt;code&gt;cJSON_Delete&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The allocator used by &lt;code&gt;cJSON_Parse&lt;/code&gt; is &lt;code&gt;malloc&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt; by default but can be changed (globally) with &lt;code&gt;cJSON_InitHooks&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If an error occurs a pointer to the position of the error in the input string can be accessed using &lt;code&gt;cJSON_GetErrorPtr&lt;/code&gt;. Note though that this can produce race conditions in multithreading scenarios, in that case it is better to use &lt;code&gt;cJSON_ParseWithOpts&lt;/code&gt; with &lt;code&gt;return_parse_end&lt;/code&gt;.
By default, characters in the input string that follow the parsed JSON will not be considered as an error.&lt;/p&gt;
&lt;p&gt;If you want more options, use &lt;code&gt;cJSON_ParseWithOpts(const char *value, const char **return_parse_end, cJSON_bool require_null_terminated)&lt;/code&gt;.
&lt;code&gt;return_parse_end&lt;/code&gt; returns a pointer to the end of the JSON in the input string or the position that an error occurs at (thereby replacing &lt;code&gt;cJSON_GetErrorPtr&lt;/code&gt; in a thread safe way). &lt;code&gt;require_null_terminated&lt;/code&gt;, if set to &lt;code&gt;1&lt;/code&gt; will make it an error if the input string contains data after the JSON.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-printing-json" class="anchor" aria-hidden="true" href="#printing-json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Printing JSON&lt;/h3&gt;
&lt;p&gt;Given a tree of &lt;code&gt;cJSON&lt;/code&gt; items, you can print them as a string using &lt;code&gt;cJSON_Print&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;char&lt;/span&gt; *string = cJSON_Print(json);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will allocate a string and print a JSON representation of the tree into it. Once it returns, you are fully responsible for deallocating it after use with your allocator. (usually &lt;code&gt;free&lt;/code&gt;, depends on what has been set with &lt;code&gt;cJSON_InitHooks&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cJSON_Print&lt;/code&gt; will print with whitespace for formatting. If you want to print without formatting, use &lt;code&gt;cJSON_PrintUnformatted&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you have a rough idea of how big your resulting string will be, you can use &lt;code&gt;cJSON_PrintBuffered(const cJSON *item, int prebuffer, cJSON_bool fmt)&lt;/code&gt;. &lt;code&gt;fmt&lt;/code&gt; is a boolean to turn formatting with whitespace on and off. &lt;code&gt;prebuffer&lt;/code&gt; specifies the first buffer size to use for printing. &lt;code&gt;cJSON_Print&lt;/code&gt; currently uses 256 bytes for it's first buffer size. Once printing runs out of space, a new buffer is allocated and the old gets copied over before printing is continued.&lt;/p&gt;
&lt;p&gt;These dynamic buffer allocations can be completely avoided by using &lt;code&gt;cJSON_PrintPreallocated(cJSON *item, char *buffer, const int length, const cJSON_bool format)&lt;/code&gt;. It takes a buffer to a pointer to print to and it's length. If the length is reached, printing will fail and it returns &lt;code&gt;0&lt;/code&gt;. In case of success, &lt;code&gt;1&lt;/code&gt; is returned. Note that you should provide 5 bytes more than is actually needed, because cJSON is not 100% accurate in estimating if the provided memory is enough.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h3&gt;
&lt;p&gt;In this example we want to build and parse the following JSON:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Awesome 4K&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resolutions&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        {
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;width&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1280&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;height&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;720&lt;/span&gt;
        },
        {
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;width&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1920&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;height&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1080&lt;/span&gt;
        },
        {
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;width&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;3840&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;height&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;2160&lt;/span&gt;
        }
    ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-printing" class="anchor" aria-hidden="true" href="#printing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Printing&lt;/h4&gt;
&lt;p&gt;Let's build the above JSON and print it to a string:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;create a monitor with a list of supported resolutions&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;NOTE: Returns a heap allocated string, you are required to free it after use.&lt;/span&gt;
&lt;span class="pl-k"&gt;char&lt;/span&gt;* &lt;span class="pl-en"&gt;create_monitor&lt;/span&gt;(&lt;span class="pl-k"&gt;void&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;unsigned&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; resolution_numbers[&lt;span class="pl-c1"&gt;3&lt;/span&gt;][&lt;span class="pl-c1"&gt;2&lt;/span&gt;] = {
        {&lt;span class="pl-c1"&gt;1280&lt;/span&gt;, &lt;span class="pl-c1"&gt;720&lt;/span&gt;},
        {&lt;span class="pl-c1"&gt;1920&lt;/span&gt;, &lt;span class="pl-c1"&gt;1080&lt;/span&gt;},
        {&lt;span class="pl-c1"&gt;3840&lt;/span&gt;, &lt;span class="pl-c1"&gt;2160&lt;/span&gt;}
    };
    &lt;span class="pl-k"&gt;char&lt;/span&gt; *string = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    cJSON *name = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    cJSON *resolutions = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    cJSON *resolution = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    cJSON *width = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    cJSON *height = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; &lt;span class="pl-c1"&gt;index&lt;/span&gt; = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;

    cJSON *monitor = &lt;span class="pl-c1"&gt;cJSON_CreateObject&lt;/span&gt;();
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (monitor == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
    }

    name = &lt;span class="pl-c1"&gt;cJSON_CreateString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Awesome 4K&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (name == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
    }
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; after creation was successful, immediately add it to the monitor,&lt;/span&gt;
&lt;span class="pl-c"&gt;     * thereby transferring ownership of the pointer to it &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;cJSON_AddItemToObject&lt;/span&gt;(monitor, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, name);

    resolutions = &lt;span class="pl-c1"&gt;cJSON_CreateArray&lt;/span&gt;();
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (resolutions == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
    }
    &lt;span class="pl-c1"&gt;cJSON_AddItemToObject&lt;/span&gt;(monitor, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resolutions&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, resolutions);

    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-c1"&gt;index&lt;/span&gt; = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-c1"&gt;index&lt;/span&gt; &amp;lt; (&lt;span class="pl-k"&gt;sizeof&lt;/span&gt;(resolution_numbers) / (&lt;span class="pl-c1"&gt;2&lt;/span&gt; * &lt;span class="pl-k"&gt;sizeof&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt;))); ++&lt;span class="pl-c1"&gt;index&lt;/span&gt;)
    {
        resolution = &lt;span class="pl-c1"&gt;cJSON_CreateObject&lt;/span&gt;();
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (resolution == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
        }
        &lt;span class="pl-c1"&gt;cJSON_AddItemToArray&lt;/span&gt;(resolutions, resolution);

        width = &lt;span class="pl-c1"&gt;cJSON_CreateNumber&lt;/span&gt;(resolution_numbers[&lt;span class="pl-c1"&gt;index&lt;/span&gt;][&lt;span class="pl-c1"&gt;0&lt;/span&gt;]);
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (width == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
        }
        &lt;span class="pl-c1"&gt;cJSON_AddItemToObject&lt;/span&gt;(resolution, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;width&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, width);

        height = &lt;span class="pl-c1"&gt;cJSON_CreateNumber&lt;/span&gt;(resolution_numbers[&lt;span class="pl-c1"&gt;index&lt;/span&gt;][&lt;span class="pl-c1"&gt;1&lt;/span&gt;]);
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (height == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
        }
        &lt;span class="pl-c1"&gt;cJSON_AddItemToObject&lt;/span&gt;(resolution, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;height&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, height);
    }

    string = &lt;span class="pl-c1"&gt;cJSON_Print&lt;/span&gt;(monitor);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (string == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
    {
        &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(stderr, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed to print monitor.&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }

end:
    &lt;span class="pl-c1"&gt;cJSON_Delete&lt;/span&gt;(monitor);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; string;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively we can use the &lt;code&gt;cJSON_Add...ToObject&lt;/code&gt; helper functions to make our lifes a little easier:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;NOTE: Returns a heap allocated string, you are required to free it after use.&lt;/span&gt;
&lt;span class="pl-k"&gt;char&lt;/span&gt; *&lt;span class="pl-en"&gt;create_monitor_with_helpers&lt;/span&gt;(&lt;span class="pl-k"&gt;void&lt;/span&gt;)
{
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;unsigned&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; resolution_numbers[&lt;span class="pl-c1"&gt;3&lt;/span&gt;][&lt;span class="pl-c1"&gt;2&lt;/span&gt;] = {
        {&lt;span class="pl-c1"&gt;1280&lt;/span&gt;, &lt;span class="pl-c1"&gt;720&lt;/span&gt;},
        {&lt;span class="pl-c1"&gt;1920&lt;/span&gt;, &lt;span class="pl-c1"&gt;1080&lt;/span&gt;},
        {&lt;span class="pl-c1"&gt;3840&lt;/span&gt;, &lt;span class="pl-c1"&gt;2160&lt;/span&gt;}
    };
    &lt;span class="pl-k"&gt;char&lt;/span&gt; *string = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    cJSON *resolutions = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; &lt;span class="pl-c1"&gt;index&lt;/span&gt; = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;

    cJSON *monitor = &lt;span class="pl-c1"&gt;cJSON_CreateObject&lt;/span&gt;();

    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;cJSON_AddStringToObject&lt;/span&gt;(monitor, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Awesome 4K&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
    }

    resolutions = &lt;span class="pl-c1"&gt;cJSON_AddArrayToObject&lt;/span&gt;(monitor, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resolutions&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (resolutions == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
    }

    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-c1"&gt;index&lt;/span&gt; = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-c1"&gt;index&lt;/span&gt; &amp;lt; (&lt;span class="pl-k"&gt;sizeof&lt;/span&gt;(resolution_numbers) / (&lt;span class="pl-c1"&gt;2&lt;/span&gt; * &lt;span class="pl-k"&gt;sizeof&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt;))); ++&lt;span class="pl-c1"&gt;index&lt;/span&gt;)
    {
        cJSON *resolution = &lt;span class="pl-c1"&gt;cJSON_CreateObject&lt;/span&gt;();

        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;cJSON_AddNumberToObject&lt;/span&gt;(resolution, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;width&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, resolution_numbers[&lt;span class="pl-c1"&gt;index&lt;/span&gt;][&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
        }

        &lt;span class="pl-k"&gt;if&lt;/span&gt;(&lt;span class="pl-c1"&gt;cJSON_AddNumberToObject&lt;/span&gt;(resolution, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;height&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, resolution_numbers[&lt;span class="pl-c1"&gt;index&lt;/span&gt;][&lt;span class="pl-c1"&gt;1&lt;/span&gt;]) == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
        {
            &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
        }

        &lt;span class="pl-c1"&gt;cJSON_AddItemToArray&lt;/span&gt;(resolutions, resolution);
    }

    string = &lt;span class="pl-c1"&gt;cJSON_Print&lt;/span&gt;(monitor);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (string == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(stderr, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed to print monitor.&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }

end:
    &lt;span class="pl-c1"&gt;cJSON_Delete&lt;/span&gt;(monitor);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; string;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-parsing" class="anchor" aria-hidden="true" href="#parsing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parsing&lt;/h4&gt;
&lt;p&gt;In this example we will parse a JSON in the above format and check if the monitor supports a Full HD resolution while printing some diagnostic output:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; return 1 if the monitor supports full hd, 0 otherwise &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;supports_full_hd&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; * &lt;span class="pl-k"&gt;const&lt;/span&gt; monitor)
{
    &lt;span class="pl-k"&gt;const&lt;/span&gt; cJSON *resolution = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; cJSON *resolutions = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; cJSON *name = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    &lt;span class="pl-k"&gt;int&lt;/span&gt; status = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    cJSON *monitor_json = &lt;span class="pl-c1"&gt;cJSON_Parse&lt;/span&gt;(monitor);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (monitor_json == &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
    {
        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *error_ptr = &lt;span class="pl-c1"&gt;cJSON_GetErrorPtr&lt;/span&gt;();
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (error_ptr != &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;)
        {
            &lt;span class="pl-c1"&gt;fprintf&lt;/span&gt;(stderr, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Error before: &lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, error_ptr);
        }
        status = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
        &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
    }

    name = &lt;span class="pl-c1"&gt;cJSON_GetObjectItemCaseSensitive&lt;/span&gt;(monitor_json, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;cJSON_IsString&lt;/span&gt;(name) &amp;amp;&amp;amp; (name-&amp;gt;&lt;span class="pl-smi"&gt;valuestring&lt;/span&gt; != &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;))
    {
        &lt;span class="pl-c1"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Checking monitor &lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-cce"&gt;\"\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, name-&amp;gt;&lt;span class="pl-smi"&gt;valuestring&lt;/span&gt;);
    }

    resolutions = &lt;span class="pl-c1"&gt;cJSON_GetObjectItemCaseSensitive&lt;/span&gt;(monitor_json, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resolutions&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;cJSON_ArrayForEach&lt;/span&gt;(resolution, resolutions)
    {
        cJSON *width = &lt;span class="pl-c1"&gt;cJSON_GetObjectItemCaseSensitive&lt;/span&gt;(resolution, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;width&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        cJSON *height = &lt;span class="pl-c1"&gt;cJSON_GetObjectItemCaseSensitive&lt;/span&gt;(resolution, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;height&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

        &lt;span class="pl-k"&gt;if&lt;/span&gt; (!&lt;span class="pl-c1"&gt;cJSON_IsNumber&lt;/span&gt;(width) || !&lt;span class="pl-c1"&gt;cJSON_IsNumber&lt;/span&gt;(height))
        {
            status = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
            &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
        }

        &lt;span class="pl-k"&gt;if&lt;/span&gt; ((width-&amp;gt;&lt;span class="pl-smi"&gt;valuedouble&lt;/span&gt; == &lt;span class="pl-c1"&gt;1920&lt;/span&gt;) &amp;amp;&amp;amp; (height-&amp;gt;&lt;span class="pl-smi"&gt;valuedouble&lt;/span&gt; == &lt;span class="pl-c1"&gt;1080&lt;/span&gt;))
        {
            status = &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
            &lt;span class="pl-k"&gt;goto&lt;/span&gt; end;
        }
    }

end:
    &lt;span class="pl-c1"&gt;cJSON_Delete&lt;/span&gt;(monitor_json);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; status;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that there are no NULL checks except for the result of &lt;code&gt;cJSON_Parse&lt;/code&gt; because &lt;code&gt;cJSON_GetObjectItemCaseSensitive&lt;/code&gt; checks for &lt;code&gt;NULL&lt;/code&gt; inputs already, so a &lt;code&gt;NULL&lt;/code&gt; value is just propagated and &lt;code&gt;cJSON_IsNumber&lt;/code&gt; and &lt;code&gt;cJSON_IsString&lt;/code&gt; return &lt;code&gt;0&lt;/code&gt; if the input is &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-caveats" class="anchor" aria-hidden="true" href="#caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-zero-character" class="anchor" aria-hidden="true" href="#zero-character"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zero Character&lt;/h4&gt;
&lt;p&gt;cJSON doesn't support strings that contain the zero character &lt;code&gt;'\0'&lt;/code&gt; or &lt;code&gt;\u0000&lt;/code&gt;. This is impossible with the current API because strings are zero terminated.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-character-encoding" class="anchor" aria-hidden="true" href="#character-encoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Character Encoding&lt;/h4&gt;
&lt;p&gt;cJSON only supports UTF-8 encoded input. In most cases it doesn't reject invalid UTF-8 as input though, it just propagates it through as is. As long as the input doesn't contain invalid UTF-8, the output will always be valid UTF-8.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-c-standard" class="anchor" aria-hidden="true" href="#c-standard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C Standard&lt;/h4&gt;
&lt;p&gt;cJSON is written in ANSI C (or C89, C90). If your compiler or C library doesn't follow this standard, correct behavior is not guaranteed.&lt;/p&gt;
&lt;p&gt;NOTE: ANSI C is not C++ therefore it shouldn't be compiled with a C++ compiler. You can compile it with a C compiler and link it with your C++ code however. Although compiling with a C++ compiler might work, correct behavior is not guaranteed.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-floating-point-numbers" class="anchor" aria-hidden="true" href="#floating-point-numbers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Floating Point Numbers&lt;/h4&gt;
&lt;p&gt;cJSON does not officially support any &lt;code&gt;double&lt;/code&gt; implementations other than IEEE754 double precision floating point numbers. It might still work with other implementations but bugs with these will be considered invalid.&lt;/p&gt;
&lt;p&gt;The maximum length of a floating point literal that cJSON supports is currently 63 characters.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-deep-nesting-of-arrays-and-objects" class="anchor" aria-hidden="true" href="#deep-nesting-of-arrays-and-objects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deep Nesting Of Arrays And Objects&lt;/h4&gt;
&lt;p&gt;cJSON doesn't support arrays and objects that are nested too deeply because this would result in a stack overflow. To prevent this cJSON limits the depth to &lt;code&gt;CJSON_NESTING_LIMIT&lt;/code&gt; which is 1000 by default but can be changed at compile time.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-thread-safety" class="anchor" aria-hidden="true" href="#thread-safety"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thread Safety&lt;/h4&gt;
&lt;p&gt;In general cJSON is &lt;strong&gt;not thread safe&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;However it is thread safe under the following conditions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cJSON_GetErrorPtr&lt;/code&gt; is never used (the &lt;code&gt;return_parse_end&lt;/code&gt; parameter of &lt;code&gt;cJSON_ParseWithOpts&lt;/code&gt; can be used instead)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cJSON_InitHooks&lt;/code&gt; is only ever called before using cJSON in any threads.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setlocale&lt;/code&gt; is never called before all calls to cJSON functions have returned.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-case-sensitivity" class="anchor" aria-hidden="true" href="#case-sensitivity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Case Sensitivity&lt;/h4&gt;
&lt;p&gt;When cJSON was originally created, it didn't follow the JSON standard and didn't make a distinction between uppercase and lowercase letters. If you want the correct, standard compliant, behavior, you need to use the &lt;code&gt;CaseSensitive&lt;/code&gt; functions where available.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-duplicate-object-members" class="anchor" aria-hidden="true" href="#duplicate-object-members"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Duplicate Object Members&lt;/h4&gt;
&lt;p&gt;cJSON supports parsing and printing JSON that contains objects that have multiple members with the same name. &lt;code&gt;cJSON_GetObjectItemCaseSensitive&lt;/code&gt; however will always only return the first one.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-enjoy-cjson" class="anchor" aria-hidden="true" href="#enjoy-cjson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enjoy cJSON!&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Dave Gamble (original author)&lt;/li&gt;
&lt;li&gt;Max Bruckner (current maintainer)&lt;/li&gt;
&lt;li&gt;and the other &lt;a href="CONTRIBUTORS.md"&gt;cJSON contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>DaveGamble</author><guid isPermaLink="false">https://github.com/DaveGamble/cJSON</guid><pubDate>Wed, 06 Nov 2019 00:02:00 GMT</pubDate></item><item><title>jwchoi384/Gaussian_YOLOv3 #3 in C, Today</title><link>https://github.com/jwchoi384/Gaussian_YOLOv3</link><description>&lt;p&gt;&lt;i&gt;Gaussian YOLOv3: An Accurate and Fast Object Detector Using Localization Uncertainty for Autonomous Driving (ICCV, 2019)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-gaussian-yolov3-an-accurate-and-fast-object-detector-using-localization-uncertainty-for-autonomous-driving" class="anchor" aria-hidden="true" href="#gaussian-yolov3-an-accurate-and-fast-object-detector-using-localization-uncertainty-for-autonomous-driving"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gaussian YOLOv3: An Accurate and Fast Object Detector Using Localization Uncertainty for Autonomous Driving&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/jwchoi384/Gaussian_YOLOv3"&gt;Gaussian YOLOv3 implementation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This repository contains the code for our &lt;strong&gt;ICCV 2019&lt;/strong&gt; &lt;a href="http://openaccess.thecvf.com/content_ICCV_2019/html/Choi_Gaussian_YOLOv3_An_Accurate_and_Fast_Object_Detector_Using_Localization_ICCV_2019_paper.html" rel="nofollow"&gt;Paper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The proposed algorithm is implemented based on the &lt;a href="https://github.com/pjreddie/darknet"&gt;YOLOv3 official code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/56669525/67075282-d2dc1200-f1c5-11e9-8af9-9f874e89197d.png"&gt;&lt;img src="https://user-images.githubusercontent.com/56669525/67075282-d2dc1200-f1c5-11e9-8af9-9f874e89197d.png" width="100%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The provided example weight file ("&lt;a href="https://drive.google.com/open?id=1Eutnens-3z6o4LYe0PZXJ1VYNwcZ6-2Y" rel="nofollow"&gt;Gaussian_yolov3_BDD.weights&lt;/a&gt;") is not the weight file used in the paper, but newly trained weight for release code validation. Because this weight file is more accurate than the weight used in the paper, we provide this file in the repository.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-poster" class="anchor" aria-hidden="true" href="#poster"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Poster&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/56669525/67777222-c64c9900-faa4-11e9-861d-4ea3b36db986.PNG"&gt;&lt;img src="https://user-images.githubusercontent.com/56669525/67777222-c64c9900-faa4-11e9-861d-4ea3b36db986.PNG" width="100%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;@InProceedings{Choi_2019_ICCV,
author = {Choi, Jiwoong and Chun, Dayoung and Kim, Hyun and Lee, Hyuk-Jae},
title = {Gaussian YOLOv3: An Accurate and Fast Object Detector Using Localization Uncertainty for Autonomous Driving},
booktitle = {The IEEE International Conference on Computer Vision (ICCV)},
month = {October},
year = {2019}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;The code was tested on&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ubuntu 16.04, NVIDIA GTX 1080 Ti with CUDA 8.0 and cuDNNv7, OpenCV 3.4.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ubuntu 16.04, NVIDIA Titan Xp with CUDA 9.0 and cuDNNv7, OpenCV 3.3.0&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;Please see the YOLOv3 website instructions &lt;a href="https://pjreddie.com/darknet/yolo/" rel="nofollow"&gt;setup&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dataset" class="anchor" aria-hidden="true" href="#dataset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dataset&lt;/h2&gt;
&lt;p&gt;We tested our algorithm using Berkeley deep drive (BDD) dataset.&lt;/p&gt;
&lt;p&gt;If you want to use BDD dataset, please see &lt;a href="https://bdd-data.berkeley.edu/" rel="nofollow"&gt;BDD website&lt;/a&gt; and download the dataset.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-training" class="anchor" aria-hidden="true" href="#training"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Training&lt;/h2&gt;
&lt;p&gt;For training, you must make image list file (&lt;em&gt;e.g.,&lt;/em&gt; "train_bdd_list.txt") and ground-truth data. Please see these websites: &lt;a href="https://pjreddie.com/darknet/yolo/" rel="nofollow"&gt;YOLOv3&lt;/a&gt;, &lt;a href="https://timebutt.github.io/static/how-to-train-yolov2-to-detect-custom-objects/" rel="nofollow"&gt;How to train YOLO&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;List files ("train_bdd_list.txt", "val_bdd_list.txt", "test_bdd_list.txt") in the repository are an example. You must modify the directory of the file name in the list to match the path where the dataset is located on your computer.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Download pre-trained weights &lt;a href="http://pjreddie.com/media/files/darknet53.conv.74" rel="nofollow"&gt;darknet53.conv.74&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Download the code&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;git clone https&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;github.com/jwchoi384/Gaussian_YOLOv3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;cd Gaussian_YOLOv3&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compile the code&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set batch=64 and subdivisions=16 in the cfg file.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We used 4 gpus in our experiment. If your computer runs out of GPU memory when training, please increase subdivision size in the cfg file.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Start training by using the command line&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;./&lt;/span&gt;darknet detector train cfg&lt;span class="pl-k"&gt;/&lt;/span&gt;BDD.&lt;span class="pl-smi"&gt;data&lt;/span&gt; cfg&lt;span class="pl-k"&gt;/&lt;/span&gt;Gaussian_yolov3_BDD.&lt;span class="pl-smi"&gt;cfg&lt;/span&gt; darknet53.&lt;span class="pl-smi"&gt;conv&lt;/span&gt;.74&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to use multiple gpus,&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;./&lt;/span&gt;darknet detector train cfg&lt;span class="pl-k"&gt;/&lt;/span&gt;BDD.&lt;span class="pl-smi"&gt;data&lt;/span&gt; cfg&lt;span class="pl-k"&gt;/&lt;/span&gt;Gaussian_yolov3_BDD.&lt;span class="pl-smi"&gt;cfg&lt;/span&gt; darknet53.&lt;span class="pl-smi"&gt;conv&lt;/span&gt;.74 &lt;span class="pl-k"&gt;-&lt;/span&gt;gpus &lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-inference" class="anchor" aria-hidden="true" href="#inference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inference&lt;/h2&gt;
&lt;p&gt;Download the Gaussian_YOLOv3 example weight file. &lt;a href="https://drive.google.com/open?id=1Eutnens-3z6o4LYe0PZXJ1VYNwcZ6-2Y" rel="nofollow"&gt;Gaussian_yolov3_BDD.weights&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Set batch=1 and subdivisions=1 in the cfg file.&lt;/p&gt;
&lt;p&gt;Run the following commands.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./darknet detector test cfg/BDD.data cfg/Gaussian_yolov3_BDD.cfg Gaussian_yolov3_BDD.weights data/example.jpg&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can see the result:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/56669525/67030475-7091fb80-f14a-11e9-8eeb-e71a8f3b4ee2.jpg"&gt;&lt;img src="https://user-images.githubusercontent.com/56669525/67030475-7091fb80-f14a-11e9-8eeb-e71a8f3b4ee2.jpg" width="80%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-evaluation" class="anchor" aria-hidden="true" href="#evaluation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Evaluation&lt;/h2&gt;
&lt;p&gt;Download the Gaussian_YOLOv3 example weight file. &lt;a href="https://drive.google.com/open?id=1Eutnens-3z6o4LYe0PZXJ1VYNwcZ6-2Y" rel="nofollow"&gt;Gaussian_yolov3_BDD.weights&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For evaluation, you MUST change the batch and subdivision size in cfg file.
Like this: &lt;code&gt;batch = 1, subdivision = 1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Run the following commands. You can get a detection speed of more than 42 FPS.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;make&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;./darknet detector valid cfg/BDD.data cfg/Gaussian_yolov3_BDD.cfg Gaussian_yolov3_BDD.weights&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cd bdd_evaluation/&lt;/code&gt; (We got this code from &lt;a href="https://github.com/ucbdrive/bdd-data"&gt;https://github.com/ucbdrive/bdd-data&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;python evaluate.py det gt_bdd_val.json ../results/bdd_results.json&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You will get:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AP : 9.45 (bike)
AP : 40.28 (bus)
AP : 40.56 (car)
AP : 8.66 (motor)
AP : 16.85 (person)
AP : 10.59 (rider)
AP : 7.91 (traffic light)
AP : 23.15 (traffic sign)
AP : 0.00 (train)
AP : 40.28 (truck)
[9.448295420802772, 40.28022967768842, 40.562338308273596, 8.658317480713093, 16.85103955706777, 10.588396343004272, 7.914563796458698, 23.147189144825003, 0.0, 40.27786994583501] 

9.45 40.28 40.56 8.66 16.85 10.59 7.91 23.15 0.00 40.28

mAP 19.77 (512 x 512 input resolution)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to get the mAP for BDD test set,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Change the list file in cfg file ("val_bdd_list.txt" --&amp;gt; "test_bdd_list.txt" in "cfg/BDD.data")&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./darknet detector valid cfg/BDD.data cfg/Gaussian_yolov3_BDD.cfg Gaussian_yolov3_BDD.weights&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Upload result file ("results/bdd_results.json") on BDD evaluation server&lt;/code&gt; &lt;a href="https://bdd-data.berkeley.edu/portal.html" rel="nofollow"&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;On the BDD test set, we got 19.2 mAP (512 x 512 input resolution).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;For questions about our paper or code, please contact Jiwoong Choi.&lt;/p&gt;
&lt;p&gt;&lt;a href="mailto:jwchoi384@gmail.com"&gt;jwchoi384@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jwchoi384</author><guid isPermaLink="false">https://github.com/jwchoi384/Gaussian_YOLOv3</guid><pubDate>Wed, 06 Nov 2019 00:03:00 GMT</pubDate></item><item><title>vurtun/nuklear #4 in C, Today</title><link>https://github.com/vurtun/nuklear</link><description>&lt;p&gt;&lt;i&gt;A single-header ANSI C gui library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="Readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nuklear" class="anchor" aria-hidden="true" href="#nuklear"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nuklear&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/vurtun/nuklear" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e371dd25dfe791d50cb104097ad159b685d4c56c/68747470733a2f2f7472617669732d63692e6f72672f76757274756e2f6e756b6c6561722e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/vurtun/nuklear.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a minimal state immediate mode graphical user interface toolkit
written in ANSI C and licensed under public domain. It was designed as a simple
embeddable user interface for application and does not have any dependencies,
a default render backend or OS window and input handling but instead provides a very modular
library approach by using simple input state for input and draw
commands describing primitive shapes as output. So instead of providing a
layered library that tries to abstract over a number of platform and
render backends it only focuses on the actual UI.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Immediate mode graphical user interface toolkit&lt;/li&gt;
&lt;li&gt;Single header library&lt;/li&gt;
&lt;li&gt;Written in C89 (ANSI C)&lt;/li&gt;
&lt;li&gt;Small codebase (~18kLOC)&lt;/li&gt;
&lt;li&gt;Focus on portability, efficiency and simplicity&lt;/li&gt;
&lt;li&gt;No dependencies (not even the standard library if not wanted)&lt;/li&gt;
&lt;li&gt;Fully skinnable and customizable&lt;/li&gt;
&lt;li&gt;Low memory footprint with total memory control if needed or wanted&lt;/li&gt;
&lt;li&gt;UTF-8 support&lt;/li&gt;
&lt;li&gt;No global or hidden state&lt;/li&gt;
&lt;li&gt;Customizable library modules (you can compile and use only what you need)&lt;/li&gt;
&lt;li&gt;Optional font baker and vertex buffer output&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cdn.statically.io/gh/vurtun/nuklear/master/doc/nuklear.html" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;This library is self contained in one single header file and can be used either
in header only mode or in implementation mode. The header only mode is used
by default when included and allows including this header in other headers
and does not contain the actual implementation.&lt;/p&gt;
&lt;p&gt;The implementation mode requires to define  the preprocessor macro
&lt;code&gt;NK_IMPLEMENTATION&lt;/code&gt; in &lt;em&gt;one&lt;/em&gt; .c/.cpp file before &lt;code&gt;#include&lt;/code&gt;ing this file, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;NK_IMPLEMENTATION&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nuklear.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;IMPORTANT: Every time you include "nuklear.h" you have to define the same optional flags.
This is very important not doing it either leads to compiler errors or even worse stack corruptions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gallery&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/11761525/ae06f0ca-a0c6-11e5-819d-5610b25f6ef4.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/11761525/ae06f0ca-a0c6-11e5-819d-5610b25f6ef4.gif" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/13538240/acd96876-e249-11e5-9547-5ac0b19667a0.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/13538240/acd96876-e249-11e5-9547-5ac0b19667a0.png" alt="screen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/13538243/b04acd4c-e249-11e5-8fd2-ad7744a5b446.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/13538243/b04acd4c-e249-11e5-8fd2-ad7744a5b446.png" alt="screen2" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/9976995/e81ac04a-5ef7-11e5-872b-acd54fbeee03.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/9976995/e81ac04a-5ef7-11e5-872b-acd54fbeee03.gif" alt="node" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/15991632/76494854-30b8-11e6-9555-a69840d0d50b.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/15991632/76494854-30b8-11e6-9555-a69840d0d50b.png" alt="skinning" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/14902576/339926a8-0d9c-11e6-9fee-a8b73af04473.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/14902576/339926a8-0d9c-11e6-9fee-a8b73af04473.png" alt="gamepad" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; init gui state &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; nk_context ctx;
&lt;span class="pl-en"&gt;nk_init_fixed&lt;/span&gt;(&amp;amp;ctx, calloc(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, MAX_MEMORY), MAX_MEMORY, &amp;amp;font);

&lt;span class="pl-k"&gt;enum&lt;/span&gt; {EASY, HARD};
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; op = EASY;
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;float&lt;/span&gt; value = &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;6f&lt;/span&gt;;
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; i =  &lt;span class="pl-c1"&gt;20&lt;/span&gt;;

&lt;span class="pl-k"&gt;if&lt;/span&gt; (nk_begin(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Show&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, nk_rect(&lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;220&lt;/span&gt;, &lt;span class="pl-c1"&gt;220&lt;/span&gt;),
    NK_WINDOW_BORDER|NK_WINDOW_MOVABLE|NK_WINDOW_CLOSABLE)) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; fixed widget pixel width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_static&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;80&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_button_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;button&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; event handling &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; fixed widget window ratio width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_dynamic&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_option_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;easy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, op == EASY)) op = EASY;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_option_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hard&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, op == HARD)) op = HARD;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; custom widget pixel width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_begin&lt;/span&gt;(&amp;amp;ctx, NK_STATIC, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    {
        &lt;span class="pl-c1"&gt;nk_layout_row_push&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;50&lt;/span&gt;);
        &lt;span class="pl-c1"&gt;nk_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Volume:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, NK_TEXT_LEFT);
        &lt;span class="pl-c1"&gt;nk_layout_row_push&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;110&lt;/span&gt;);
        &lt;span class="pl-c1"&gt;nk_slider_float&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &amp;amp;value, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-c1"&gt;0f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;1f&lt;/span&gt;);
    }
    &lt;span class="pl-c1"&gt;nk_layout_row_end&lt;/span&gt;(&amp;amp;ctx);
}
&lt;span class="pl-en"&gt;nk_end&lt;/span&gt;(&amp;amp;ctx);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/10187981/584ecd68-675c-11e5-897c-822ef534a876.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/10187981/584ecd68-675c-11e5-897c-822ef534a876.png" alt="example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bindings" class="anchor" aria-hidden="true" href="#bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bindings&lt;/h2&gt;
&lt;p&gt;There are a number of nuklear bindings for different languges created by other authors.
I cannot atest for their quality since I am not necessarily proficient in either of these
languages. Furthermore there are no guarantee that all bindings will always be kept up to date:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/glegris/nuklear4j"&gt;Java&lt;/a&gt; by Guillaume Legris&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Timu5/bindbc-nuklear"&gt;D&lt;/a&gt; by Mateusz Muszyński&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang-ui/nuklear"&gt;Golang&lt;/a&gt; by &lt;a href="mailto:golang-ui@github.com"&gt;golang-ui@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snuk182/nuklear-rust"&gt;Rust&lt;/a&gt; by &lt;a href="mailto:snuk182@github.com"&gt;snuk182@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wasamasa/nuklear"&gt;Chicken&lt;/a&gt; by &lt;a href="mailto:wasamasa@github.com"&gt;wasamasa@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zacharycarter/nuklear-nim"&gt;Nim&lt;/a&gt; by &lt;a href="mailto:zacharycarter@github.com"&gt;zacharycarter@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lua
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/keharriso/love-nuklear"&gt;LÖVE-Nuklear&lt;/a&gt; by Kevin Harrison&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stetre/moonnuklear"&gt;MoonNuklear&lt;/a&gt; by Stefano Trettel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Python
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/billsix/pyNuklear"&gt;pyNuklear&lt;/a&gt; by William Emerison Six (ctypes-based wrapper)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nathanrw/nuklear-cffi"&gt;pynk&lt;/a&gt; by &lt;a href="mailto:nathanrw@github.com"&gt;nathanrw@github.com&lt;/a&gt; (cffi binding)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cartman300/NuklearDotNet"&gt;CSharp/.NET&lt;/a&gt; by &lt;a href="mailto:cartman300@github.com"&gt;cartman300@github.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Developed by Micha Mettke and every direct or indirect contributor to the GitHub.&lt;/p&gt;
&lt;p&gt;Embeds &lt;code&gt;stb_texedit&lt;/code&gt;, &lt;code&gt;stb_truetype&lt;/code&gt; and &lt;code&gt;stb_rectpack&lt;/code&gt; by Sean Barrett (public domain)
Embeds &lt;code&gt;ProggyClean.ttf&lt;/code&gt; font by Tristan Grimmer (MIT license).&lt;/p&gt;
&lt;p&gt;Big thank you to Omar Cornut (ocornut@github) for his &lt;a href="https://github.com/ocornut/imgui"&gt;imgui&lt;/a&gt; library and
giving me the inspiration for this library, Casey Muratori for handmade hero
and his original immediate mode graphical user interface idea and Sean
Barrett for his amazing single header &lt;a href="https://github.com/nothings/stb"&gt;libraries&lt;/a&gt; which restored my faith
in libraries and brought me to create some of my own. Finally Apoorva Joshi for his singe-header &lt;a href="http://apoorvaj.io/single-header-packer.html" rel="nofollow"&gt;file packer&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;------------------------------------------------------------------------------
This software is available under 2 licenses -- choose whichever you prefer.
------------------------------------------------------------------------------
ALTERNATIVE A - MIT License
Copyright (c) 2017 Micha Mettke
Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
------------------------------------------------------------------------------
ALTERNATIVE B - Public Domain (www.unlicense.org)
This is free and unencumbered software released into the public domain.
Anyone is free to copy, modify, publish, use, compile, sell, or distribute this
software, either in source code form or as a compiled binary, for any purpose,
commercial or non-commercial, and by any means.
In jurisdictions that recognize copyright laws, the author or authors of this
software dedicate any and all copyright interest in the software to the public
domain. We make this dedication for the benefit of the public at large and to
the detriment of our heirs and successors. We intend this dedication to be an
overt act of relinquishment in perpetuity of all present and future rights to
this software under copyright law.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-----------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vurtun</author><guid isPermaLink="false">https://github.com/vurtun/nuklear</guid><pubDate>Wed, 06 Nov 2019 00:04:00 GMT</pubDate></item><item><title>robertdavidgraham/masscan #5 in C, Today</title><link>https://github.com/robertdavidgraham/masscan</link><description>&lt;p&gt;&lt;i&gt;TCP port scanner, spews SYN packets asynchronously, scanning entire Internet in under 5 minutes.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/robertdavidgraham/masscan.svg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8bc4e9187fc331ef3f2de95bc8e43f92db64e448/68747470733a2f2f7472617669732d63692e6f72672f726f62657274646176696467726168616d2f6d61737363616e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/robertdavidgraham/masscan.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-masscan-mass-ip-port-scanner" class="anchor" aria-hidden="true" href="#masscan-mass-ip-port-scanner"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MASSCAN: Mass IP port scanner&lt;/h1&gt;
&lt;p&gt;This is an Internet-scale port scanner. It can scan the entire Internet
in under 6 minutes, transmitting 10 million packets per second,
from a single machine.&lt;/p&gt;
&lt;p&gt;It's input/output is similar to &lt;code&gt;nmap&lt;/code&gt;, the most famous port scanner.
When in doubt, try one of those features.&lt;/p&gt;
&lt;p&gt;Internally, it uses asynchronous tranmissions, similar to port scanners
like  &lt;code&gt;scanrand&lt;/code&gt;, &lt;code&gt;unicornscan&lt;/code&gt;, and &lt;code&gt;ZMap&lt;/code&gt;. It's more flexible, allowing
arbitrary port and address ranges.&lt;/p&gt;
&lt;p&gt;NOTE: masscan uses a its own &lt;strong&gt;custom TCP/IP stack&lt;/strong&gt;. Anything other than
simple port scans may cause conflict with the local TCP/IP stack. This means you
need to either the &lt;code&gt;--src-ip&lt;/code&gt; option to run from a different IP address, or
use &lt;code&gt;--src-port&lt;/code&gt; to configure which source ports masscan uses, then also
configure the internal firewall (like &lt;code&gt;pf&lt;/code&gt; or &lt;code&gt;iptables&lt;/code&gt;) to firewall those ports
from the rest of the operating system.&lt;/p&gt;
&lt;p&gt;This tool is free, but consider contributing money to its developement:
Bitcoin wallet address: 1MASSCANaHUiyTtR3bJ2sLGuMw5kDBaj4T&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;p&gt;On Debian/Ubuntu, it goes something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install git gcc make libpcap-dev
$ git clone https://github.com/robertdavidgraham/masscan
$ cd masscan
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This puts the program in the &lt;code&gt;masscan/bin&lt;/code&gt; subdirectory. You'll have to
manually copy it to something like &lt;code&gt;/usr/local/bin&lt;/code&gt; if you want to
install it elsewhere on the system.&lt;/p&gt;
&lt;p&gt;The source consists of a lot of small files, so building goes a lot faster
by using the multi-threaded build:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make -j
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While Linux is the primary target platform, the code runs well on many other
systems. Here's some additional build info:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows w/ Visual Studio: use the VS10 project&lt;/li&gt;
&lt;li&gt;Windows w/ MingGW: just type &lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows w/ cygwin: won't work&lt;/li&gt;
&lt;li&gt;Mac OS X /w XCode: use the XCode4 project&lt;/li&gt;
&lt;li&gt;Mac OS X /w cmdline: just type &lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;FreeBSD: type &lt;code&gt;gmake&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;other: try just compiling all the files together&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-pf_ring" class="anchor" aria-hidden="true" href="#pf_ring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PF_RING&lt;/h2&gt;
&lt;p&gt;To get beyond 2 million packets/second, you need an Intel 10-gbps Ethernet
adapter and a special driver known as &lt;a href="http://www.ntop.org/products/packet-capture/pf_ring/pf_ring-zc-zero-copy/" rel="nofollow"&gt;"PF_RING ZC" from ntop&lt;/a&gt;. Masscan doesn't need to be rebuilt in order to use PF_RING. To use PF_RING,
you need to build the following components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libpfring.so&lt;/code&gt; (installed in /usr/lib/libpfring.so)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pf_ring.ko&lt;/code&gt; (their kernel driver)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ixgbe.ko&lt;/code&gt; (their version of the Intel 10-gbps Ethernet driver)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You don't need to build their version of &lt;code&gt;libpcap.so&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When Masscan detects that an adapter is named something like &lt;code&gt;zc:enp1s0&lt;/code&gt; instead
of something like &lt;code&gt;enp1s0&lt;/code&gt;, it'll automatically switch to PF_RING ZC mode.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-regression-testing" class="anchor" aria-hidden="true" href="#regression-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Regression testing&lt;/h2&gt;
&lt;p&gt;The project contains a built-in self-test:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make regress
bin/masscan --regress
selftest: success!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This tests a lot of tricky bits of the code. You should do this after building.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance-testing" class="anchor" aria-hidden="true" href="#performance-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance testing&lt;/h2&gt;
&lt;p&gt;To test performance, run something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bin/masscan 0.0.0.0/4 -p80 --rate 100000000 --router-mac 66-55-44-33-22-11
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The bogus &lt;code&gt;--router-mac&lt;/code&gt; keeps packets on the local network segments so that
they won't go out to the Internet.&lt;/p&gt;
&lt;p&gt;You can also test in "offline" mode, which is how fast the program runs
without the transmit overhead:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bin/masscan 0.0.0.0/4 -p80 --rate 100000000 --offline
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This second benchmark shows roughly how fast the program would run if it were
using PF_RING, which has near zero overhead.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;p&gt;Usage is similar to &lt;code&gt;nmap&lt;/code&gt;. To scan a network segment for some ports:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan -p80,8000-8100 10.0.0.0/8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scan the 10.x.x.x subnet, all 16 million addresses&lt;/li&gt;
&lt;li&gt;scans port 80 and the range 8000 to 8100, or 102 addresses total&lt;/li&gt;
&lt;li&gt;print output to &lt;code&gt;&amp;lt;stdout&amp;gt;&lt;/code&gt; that can be redirected to a file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To see the complete list of options, use the &lt;code&gt;--echo&lt;/code&gt; feature. This
dumps the current configuration and exits. This output can be used as input back
into the program:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan -p80,8000-8100 10.0.0.0/8 --echo &amp;gt; xxx.conf
# masscan -c xxx.conf --rate 1000
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-banner-checking" class="anchor" aria-hidden="true" href="#banner-checking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Banner checking&lt;/h2&gt;
&lt;p&gt;Masscan can do more than just detect whether ports are open. It can also
complete the TCP connection and interaction with the application at that
port in order to grab simple "banner" information.&lt;/p&gt;
&lt;p&gt;The problem with this is that masscan contains its own TCP/IP stack
separate from the system you run it on. When the local system receives
a SYN-ACK from the probed target, it responds with a RST packet that kills
the connection before masscan can grab the banner.&lt;/p&gt;
&lt;p&gt;The easiest way to prevent this is to assign masscan a separate IP
address. This would look like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 10.0.0.0/8 -p80 --banners --source-ip 192.168.1.200
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The address you choose has to be on the local subnet and not otherwise
be used by another system.&lt;/p&gt;
&lt;p&gt;In some cases, such as WiFi, this isn't possible. In those cases, you can
firewall the port that masscan uses. This prevents the local TCP/IP stack
from seeing the packet, but masscan still sees it since it bypasses the
local stack. For Linux, this would look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# iptables -A INPUT -p tcp --dport 61000 -j DROP
# masscan 10.0.0.0/8 -p80 --banners --source-port 61000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You probably want to pick ports that don't conflict with ports Linux might otherwise
choose for source-ports. You can see the range Linux uses, and reconfigure
that range, by looking in the file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/proc/sys/net/ipv4/ip_local_port_range
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the latest version of Kali Linux (2018-August), that range is  32768  to  60999, so
you should choose ports either below 32768 or 61000 and above.&lt;/p&gt;
&lt;p&gt;Setting an &lt;code&gt;iptables&lt;/code&gt; rule only lasts until the next reboot. You need to lookup how to
save the configuration depending upon your distro, such as using &lt;code&gt;iptables-save&lt;/code&gt;
and/or &lt;code&gt;iptables-persistant&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Mac OS X and BSD, there are similar steps. To find out the ranges to avoid,
use a command like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# sysctl net.inet.ip.portrange.first net.inet.ip.portrange.last
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On FreeBSD and older MacOS, use an &lt;code&gt;ipfw&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# sudo ipfw add 1 deny tcp from any to any 40000 in
# masscan 10.0.0.0/8 -p80 --banners --source-port 40000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On newer MacOS and OpenBSD, use the &lt;code&gt;pf&lt;/code&gt; packet-filter utility.
Edit the file &lt;code&gt;/etc/pf.conf&lt;/code&gt; to add a line like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;block in proto tcp from any to any port 40000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then to enable the firewall, run the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pfctrl -E    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the firewall is already running, then either reboot or reload the rules
with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pfctl -f /etc/pf.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Windows doesn't respond with RST packets, so neither of these techniques
are necessary. However, masscan is still designed to work best using its
own IP address, so you should run that way when possible, even when its
not strictly necessary.&lt;/p&gt;
&lt;p&gt;The same thing is needed for other checks, such as the &lt;code&gt;--heartbleed&lt;/code&gt; check,
which is just a form of banner checking.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-scan-the-entire-internet" class="anchor" aria-hidden="true" href="#how-to-scan-the-entire-internet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to scan the entire Internet&lt;/h2&gt;
&lt;p&gt;While useful for smaller, internal networks, the program is really designed
with the entire Internet in mind. It might look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Scanning the entire Internet is bad. For one thing, parts of the Internet react
badly to being scanned. For another thing, some sites track scans and add you
to a ban list, which will get you firewalled from useful parts of the Internet.
Therefore, you want to exclude a lot of ranges. To blacklist or exclude ranges,
you want to use the following syntax:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535 --excludefile exclude.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This just prints the results to the command-line. You probably want them
saved to a file instead. Therefore, you want something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535 -oX scan.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This saves the results in an XML file, allowing you to easily dump the
results in a database or something.&lt;/p&gt;
&lt;p&gt;But, this only goes at the default rate of 100 packets/second, which will
take forever to scan the Internet. You need to speed it up as so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535 --max-rate 100000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This increases the rate to 100,000 packets/second, which will scan the
entire Internet (minus excludes) in about 10 hours per port (or 655,360 hours
if scanning all ports).&lt;/p&gt;
&lt;p&gt;The thing to notice about this command-line is that these are all &lt;code&gt;nmap&lt;/code&gt;
compatible options. In addition, "invisible" options compatible with &lt;code&gt;nmap&lt;/code&gt;
are also set for you: &lt;code&gt;-sS -Pn -n --randomize-hosts --send-eth&lt;/code&gt;. Likewise,
the format of the XML file is inspired by &lt;code&gt;nmap&lt;/code&gt;. There are, of course, a
lot of differences, because the &lt;em&gt;asynchronous&lt;/em&gt; nature of the program
leads to a fundamentally different approach to the problem.&lt;/p&gt;
&lt;p&gt;The above command-line is a bit cumbersome. Instead of putting everything
on the command-line, it can be stored in a file instead. The above settings
would look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# My Scan
rate =  100000.00
output-format = xml
output-status = all
output-filename = scan.xml
ports = 0-65535
range = 0.0.0.0-255.255.255.255
excludefile = exclude.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To use this configuration file, use the &lt;code&gt;-c&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan -c myscan.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This also makes things easier when you repeat a scan.&lt;/p&gt;
&lt;p&gt;By default, masscan first loads the configuration file
&lt;code&gt;/etc/masscan/masscan.conf&lt;/code&gt;. Any later configuration parameters override what's
in this default configuration file. That's where I put my "excludefile"
parameter, so that I don't ever forget it. It just works automatically.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-output" class="anchor" aria-hidden="true" href="#getting-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting output&lt;/h2&gt;
&lt;p&gt;By default, masscan produces fairly large text files, but it's easy
to convert them into any other format. There are five supported output formats:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;xml:  Just use the parameter &lt;code&gt;-oX &amp;lt;filename&amp;gt;&lt;/code&gt;.
Or, use the parameters &lt;code&gt;--output-format xml&lt;/code&gt; and &lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;binary: This is the masscan builtin format. It produces much smaller files, so that
when I scan the Internet my disk doesn't fill up. They need to be parsed,
though. The command line option &lt;code&gt;--readscan&lt;/code&gt; will read binary scan files.
Using &lt;code&gt;--readscan&lt;/code&gt; with the &lt;code&gt;-oX&lt;/code&gt; option will produce a XML version of the
results file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;grepable: This is an implementation of the Nmap -oG
output that can be easily parsed by command-line tools. Just use the
parameter &lt;code&gt;-oG &amp;lt;filename&amp;gt;&lt;/code&gt;. Or, use the parameters &lt;code&gt;--output-format grepable&lt;/code&gt; and
&lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;json: This saves the results in JSON format. Just use the
parameter &lt;code&gt;-oJ &amp;lt;filename&amp;gt;&lt;/code&gt;. Or, use the parameters &lt;code&gt;--output-format json&lt;/code&gt; and
&lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;list: This is a simple list with one host and port pair
per line. Just use the parameter &lt;code&gt;-oL &amp;lt;filename&amp;gt;&lt;/code&gt;. Or, use the parameters
&lt;code&gt;--output-format list&lt;/code&gt; and &lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;. The format is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;port state&amp;gt; &amp;lt;protocol&amp;gt; &amp;lt;port number&amp;gt; &amp;lt;IP address&amp;gt; &amp;lt;POSIX timestamp&amp;gt;  
open tcp 80 XXX.XXX.XXX.XXX 1390380064
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-comparison-with-nmap" class="anchor" aria-hidden="true" href="#comparison-with-nmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comparison with Nmap&lt;/h2&gt;
&lt;p&gt;Where reasonable, every effort has been taken to make the program familiar
to &lt;code&gt;nmap&lt;/code&gt; users, even though it's fundamentally different. Two important
differences are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no default ports to scan, you must specify &lt;code&gt;-p &amp;lt;ports&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;target hosts are IP addresses or simple ranges, not DNS names, nor
the funky subnet ranges &lt;code&gt;nmap&lt;/code&gt; can use (like &lt;code&gt;10.0.0-255.0-255&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can think of &lt;code&gt;masscan&lt;/code&gt; as having the following settings permanently
enabled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-sS&lt;/code&gt;: this does SYN scan only (currently, will change in the future)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Pn&lt;/code&gt;: doesn't ping hosts first, which is fundamental to the async operation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: no DNS resolution happens&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--randomize-hosts&lt;/code&gt;: scan completely randomized&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--send-eth&lt;/code&gt;: sends using raw &lt;code&gt;libpcap&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want a list of additional &lt;code&gt;nmap&lt;/code&gt; compatible settings, use the following
command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan --nmap
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-transmit-rate-important" class="anchor" aria-hidden="true" href="#transmit-rate-important"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transmit rate (IMPORTANT!!)&lt;/h2&gt;
&lt;p&gt;This program spews out packets very fast. On Windows, or from VMs,
it can do 300,000 packets/second. On Linux (no virtualization) it'll
do 1.6 million packets-per-second. That's fast enough to melt most networks.&lt;/p&gt;
&lt;p&gt;Note that it'll only melt your own network. It randomizes the target
IP addresses so that it shouldn't overwhelm any distant network.&lt;/p&gt;
&lt;p&gt;By default, the rate is set to 100 packets/second. To increase the rate to
a million use something like &lt;code&gt;--rate 1000000&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-design" class="anchor" aria-hidden="true" href="#design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design&lt;/h1&gt;
&lt;p&gt;This section describes the major design issues of the program.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-layout" class="anchor" aria-hidden="true" href="#code-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Layout&lt;/h2&gt;
&lt;p&gt;The file &lt;code&gt;main.c&lt;/code&gt; contains the &lt;code&gt;main()&lt;/code&gt; function, as you'd expect. It also
contains the &lt;code&gt;transmit_thread()&lt;/code&gt; and &lt;code&gt;receive_thread()&lt;/code&gt; functions. These
functions have been deliberately flattened and heavily commented so that you
can read the design of the program simply by stepping line-by-line through
each of these.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-asynchronous" class="anchor" aria-hidden="true" href="#asynchronous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous&lt;/h2&gt;
&lt;p&gt;This is an &lt;em&gt;asynchronous&lt;/em&gt; design. In other words, it is to &lt;code&gt;nmap&lt;/code&gt; what
the &lt;code&gt;nginx&lt;/code&gt; web-server is to &lt;code&gt;Apache&lt;/code&gt;. It has separate transmit and receive
threads that are largely independent from each other. It's the same sort of
design found in &lt;code&gt;scanrand&lt;/code&gt;, &lt;code&gt;unicornscan&lt;/code&gt;, and &lt;code&gt;ZMap&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Because it's asynchronous, it runs as fast as the underlying packet transmit
allows.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-randomization" class="anchor" aria-hidden="true" href="#randomization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Randomization&lt;/h2&gt;
&lt;p&gt;A key difference between Masscan and other scanners is the way it randomizes
targets.&lt;/p&gt;
&lt;p&gt;The fundamental principle is to have a single index variable that starts at
zero and is incremented by one for every probe. In C code, this is expressed
as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for (i = 0; i &amp;lt; range; i++) {
    scan(i);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have to translate the index into an IP address. Let's say that you want to
scan all "private" IP addresses. That would be the table of ranges like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;192.168.0.0/16
10.0.0.0/8
172.16.0.0/12
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, the first 64k indexes are appended to 192.168.x.x to form
the target address. Then, the next 16-million are appended to 10.x.x.x.
The remaining indexes in the range are applied to 172.16.x.x.&lt;/p&gt;
&lt;p&gt;In this example, we only have three ranges. When scanning the entire Internet,
we have in practice more than 100 ranges. That's because you have to blacklist
or exclude a lot of sub-ranges. This chops up the desired range into hundreds
of smaller ranges.&lt;/p&gt;
&lt;p&gt;This leads to one of the slowest parts of the code. We transmit 10 million
packets per second, and have to convert an index variable to an IP address
for each and every probe. We solve this by doing a "binary search" in a small
amount of memory. At this packet rate, cache efficiencies start to dominate
over algorithm efficiencies. There are a lot of more efficient techniques in
theory, but they all require so much memory as to be slower in practice.&lt;/p&gt;
&lt;p&gt;We call the function that translates from an index into an IP address
the &lt;code&gt;pick()&lt;/code&gt; function. In use, it looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for (i = 0; i &amp;lt; range; i++) {
    ip = pick(addresses, i);
    scan(ip);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Masscan supports not only IP address ranges, but also port ranges. This means
we need to pick from the index variable both an IP address and a port. This
is fairly straightforward:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;range = ip_count * port_count;
for (i = 0; i &amp;lt; range; i++) {
    ip   = pick(addresses, i / port_count);
    port = pick(ports,     i % port_count);
    scan(ip, port);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This leads to another expensive part of the code. The division/modulus
instructions are around 90 clock cycles, or 30 nanoseconds, on x86 CPUs. When
transmitting at a rate of 10 million packets/second, we have only
100 nanoseconds per packet. I see no way to optimize this any better. Luckily,
though, two such operations can be executed simultaneously, so doing two
of these as shown above is no more expensive than doing one.&lt;/p&gt;
&lt;p&gt;There are actually some easy optimizations for the above performance problems,
but they all rely upon &lt;code&gt;i++&lt;/code&gt;, the fact that the index variable increases one
by one through the scan. Actually, we need to randomize this variable. We
need to randomize the order of IP addresses that we scan or we'll blast the
heck out of target networks that aren't built for this level of speed. We
need to spread our traffic evenly over the target.&lt;/p&gt;
&lt;p&gt;The way we randomize is simply by encrypting the index variable. By definition,
encryption is random, and creates a 1-to-1 mapping between the original index
variable and the output. This means that while we linearly go through the
range, the output IP addresses are completely random. In code, this looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;range = ip_count * port_count;
for (i = 0; i &amp;lt; range; i++) {
    x = encrypt(i);
    ip   = pick(addresses, x / port_count);
    port = pick(ports,     x % port_count);
    scan(ip, port);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This also has a major cost. Since the range is an unpredictable size instead
of a nice even power of 2, we can't use cheap binary techniques like
AND (&amp;amp;) and XOR (^). Instead, we have to use expensive operations like
MODULUS (%). In my current benchmarks, it's taking 40 nanoseconds to
encrypt the variable.&lt;/p&gt;
&lt;p&gt;This architecture allows for lots of cool features. For example, it supports
"shards". You can setup 5 machines each doing a fifth of the scan, or
&lt;code&gt;range / shard_count&lt;/code&gt;. Shards can be multiple machines, or simply multiple
network adapters on the same machine, or even (if you want) multiple IP
source addresses on the same network adapter.&lt;/p&gt;
&lt;p&gt;Or, you can use a 'seed' or 'key' to the encryption function, so that you get
a different order each time you scan, like &lt;code&gt;x = encrypt(seed, i)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can also pause the scan by exiting out of the program, and simply
remembering the current value of &lt;code&gt;i&lt;/code&gt;, and restart it later. I do that a lot
during development. I see something going wrong with my Internet scan, so
I hit  to stop the scan, then restart it after I've fixed the bug.&lt;/p&gt;
&lt;p&gt;Another feature is retransmits/retries. Packets sometimes get dropped on the
Internet, so you can send two packets back-to-back. However, something that
drops one packet may drop the immediately following packet. Therefore, you
want to send the copy about 1 second apart. This is simple. We already have
a 'rate' variable, which is the number of packets-per-second rate we are
transmitting at, so the retransmit function is simply to use &lt;code&gt;i + rate&lt;/code&gt;
as the index. One of these days I'm going to do a study of the Internet,
and differentiate "back-to-back", "1 second", "10 second", and "1 minute"
retransmits this way in order to see if there is any difference in what
gets dropped.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-c10-scalability" class="anchor" aria-hidden="true" href="#c10-scalability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C10 Scalability&lt;/h2&gt;
&lt;p&gt;The asynchronous technique is known as a solution to the "c10k problem".
Masscan is designed for the next level of scalability, the "C10M problem".&lt;/p&gt;
&lt;p&gt;The C10M solution is to bypass the kernel. There are three primary kernel
bypasses in Masscan:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;custom network driver&lt;/li&gt;
&lt;li&gt;user-mode TCP stack&lt;/li&gt;
&lt;li&gt;user-mode synchronization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Masscan can use the PF_RING DNA driver. This driver DMAs packets directly
from user-mode memory to the network driver with zero kernel involvement.
That allows software, even with a slow CPU, to transmit packets at the maximum
rate the hardware allows. If you put 8 10-gbps network cards in a computer,
this means it could transmit at 100-million packets/second.&lt;/p&gt;
&lt;p&gt;Masscan has its own built-in TCP stack for grabbing banners from TCP
connections. This means it can easily support 10 million concurrent TCP
connections, assuming of course that the computer has enough memory.&lt;/p&gt;
&lt;p&gt;Masscan has no "mutex". Modern mutexes (aka. futexes) are mostly user-mode,
but they have two problems. The first problem is that they cause cache-lines
to bounce quickly back-and-forth between CPUs. The second is that when there
is contention, they'll do a system call into the kernel, which kills
performance. Mutexes on the fast path of a program severely limits scalability.
Instead, Masscan uses "rings" to synchronize things, such as when the
user-mode TCP stack in the receive thread needs to transmit a packet without
interfering with the transmit thread.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-portability" class="anchor" aria-hidden="true" href="#portability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Portability&lt;/h2&gt;
&lt;p&gt;The code runs well on Linux, Windows, and Mac OS X. All the important bits are
in standard C (C90). It therefore compiles on Visual Studio with Microsoft's
compiler, the Clang/LLVM compiler on Mac OS X, and GCC on Linux.&lt;/p&gt;
&lt;p&gt;Windows and Macs aren't tuned for packet transmit, and get only about 300,000
packets-per-second, whereas Linux can do 1,500,000 packets/second. That's
probably faster than you want anyway.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-safe-code" class="anchor" aria-hidden="true" href="#safe-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Safe code&lt;/h2&gt;
&lt;p&gt;A bounty is offered for vulnerabilities, see the VULNINFO.md file for more
information.&lt;/p&gt;
&lt;p&gt;This project uses safe functions like &lt;code&gt;strcpy_s()&lt;/code&gt; instead of unsafe functions
like &lt;code&gt;strcpy()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This project has automated unit regression tests (&lt;code&gt;make regress&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h2&gt;
&lt;p&gt;A lot of effort has gone into making the input/output look like &lt;code&gt;nmap&lt;/code&gt;, which
everyone who does port scans is (or should be) familiar with.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h1&gt;
&lt;p&gt;This tool created by Robert Graham:
email: &lt;a href="mailto:robert_david_graham@yahoo.com"&gt;robert_david_graham@yahoo.com&lt;/a&gt;
twitter: @ErrataRob&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>robertdavidgraham</author><guid isPermaLink="false">https://github.com/robertdavidgraham/masscan</guid><pubDate>Wed, 06 Nov 2019 00:05:00 GMT</pubDate></item><item><title>darktable-org/darktable #6 in C, Today</title><link>https://github.com/darktable-org/darktable</link><description>&lt;p&gt;&lt;i&gt;darktable is an open source photography workflow application and raw developer&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--darktable--" class="anchor" aria-hidden="true" href="#-darktable--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://www.darktable.org/" rel="nofollow"&gt;&lt;img src="/data/pixmaps/idbutton.png?raw=true" alt="icon" style="max-width:100%;"&gt;&lt;/a&gt; darktable &lt;a href="https://travis-ci.org/darktable-org/darktable" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f81740e899d54446a0c9b6ea3a9fd365f2a52bf1/68747470733a2f2f7472617669732d63692e6f72672f6461726b7461626c652d6f72672f6461726b7461626c652e7376673f6272616e63683d6d6173746572" alt="build status" data-canonical-src="https://travis-ci.org/darktable-org/darktable.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/470" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a78653624aa25f834011e60ba2f531875b14de70/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f3437302f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/470/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;darktable is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.darktable.org/" title="darktable homepage" rel="nofollow"&gt;https://www.darktable.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Write a blog about darktable&lt;/li&gt;
&lt;li&gt;Create a tutorial for darktable&lt;/li&gt;
&lt;li&gt;Help expand the &lt;a href="https://www.darktable.org/redmine/projects/users/wiki" rel="nofollow"&gt;user wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Answer questions on the &lt;a href="https://www.mail-archive.com/darktable-user@lists.darktable.org/" rel="nofollow"&gt;user mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Share your ideas on the &lt;a href="https://www.mail-archive.com/darktable-dev@lists.darktable.org/" rel="nofollow"&gt;developer mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test &lt;a href="https://www.darktable.org/install/" rel="nofollow"&gt;releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Review &lt;a href="https://github.com/darktable-org/darktable/pulls"&gt;pull requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Start &lt;a href="https://www.darktable.org/redmine/projects/darktable/wiki/Contributing_code" rel="nofollow"&gt;hacking on darktable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;Note that &lt;a href="https://github.com/darktable-org/rawspeed"&gt;rawspeed&lt;/a&gt; is tracked via a git submodule, so after checking-out the darktable, you need to update/checkout rawspeed,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git submodule init
git submodule update&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-easy-way" class="anchor" aria-hidden="true" href="#easy-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Easy way&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./build.sh --prefix /opt/darktable --build-type Release&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manual-way" class="anchor" aria-hidden="true" href="#manual-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual way&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir build/
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; build/
cmake -DCMAKE_INSTALL_PREFIX=/opt/darktable/ ..
make
sudo make install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-further-reading" class="anchor" aria-hidden="true" href="#further-reading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Further reading&lt;/h3&gt;
&lt;p&gt;There is a &lt;a href="https://redmine.darktable.org/projects/darktable/wiki/Building_darktable_20" rel="nofollow"&gt;comprehensive list&lt;/a&gt; of build instructions for all the widely used Linux distributions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Check that you have the latest &lt;a href="http://www.gphoto.org/" title="gphoto2 homepage" rel="nofollow"&gt;gphoto2 library&lt;/a&gt; installed in order to support the newest cameras.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-wiki" class="anchor" aria-hidden="true" href="#wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wiki&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.darktable.org/redmine/projects/users/wiki" title="darktable user wiki" rel="nofollow"&gt;User wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.darktable.org/redmine/projects/darktable/wiki" title="darktable developer wiki" rel="nofollow"&gt;Developer wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-mailing-lists" class="anchor" aria-hidden="true" href="#mailing-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mailing lists&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Users [&lt;a href="mailto:darktable-user+subscribe@lists.darktable.org"&gt;subscribe&lt;/a&gt; | &lt;a href="https://www.mail-archive.com/darktable-user@lists.darktable.org/" rel="nofollow"&gt;archive&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Developer [&lt;a href="mailto:darktable-dev+subscribe@lists.darktable.org"&gt;subscribe&lt;/a&gt; | &lt;a href="https://www.mail-archive.com/darktable-dev@lists.darktable.org/" rel="nofollow"&gt;archive&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;CI (read-only, high traffic!) [&lt;a href="mailto:darktable-ci+subscribe@lists.darktable.org"&gt;subscribe&lt;/a&gt; | &lt;a href="https://www.mail-archive.com/darktable-ci@lists.darktable.org/" rel="nofollow"&gt;archive&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>darktable-org</author><guid isPermaLink="false">https://github.com/darktable-org/darktable</guid><pubDate>Wed, 06 Nov 2019 00:06:00 GMT</pubDate></item><item><title>hanwckf/rt-n56u #7 in C, Today</title><link>https://github.com/hanwckf/rt-n56u</link><description>&lt;p&gt;&lt;i&gt;Padavan&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.com/hanwckf/rt-n56u" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ef902511763f1023f60724ab6407f1be2b258ae/68747470733a2f2f7472617669732d63692e636f6d2f68616e77636b662f72742d6e3536752e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/hanwckf/rt-n56u.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5ec56e79027133f4afcb4f6da239406b25aecc77/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f68616e77636b662f72742d6e3536752f746f74616c"&gt;&lt;img src="https://camo.githubusercontent.com/5ec56e79027133f4afcb4f6da239406b25aecc77/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f68616e77636b662f72742d6e3536752f746f74616c" alt="GitHub All Releases" data-canonical-src="https://img.shields.io/github/downloads/hanwckf/rt-n56u/total" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/hanwckf/rt-n56u/releases"&gt;&lt;img src="https://camo.githubusercontent.com/984514e2def8915567c149244365efb9156b72d8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f68616e77636b662f72742d6e3536752e737667" alt="release" data-canonical-src="https://img.shields.io/github/release/hanwckf/rt-n56u.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-readme" class="anchor" aria-hidden="true" href="#readme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;README&lt;/h1&gt;
&lt;p&gt;Welcome to the rt-n56u project&lt;/p&gt;
&lt;p&gt;This project aims to improve the rt-n56u and other supported devices on the software part, allowing power user to take full control over their hardware.
This project was created in hope to be useful, but comes without warranty or support. Installing it will probably void your warranty.
Contributors of this project are not responsible for what happens next.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-get-set-up" class="anchor" aria-hidden="true" href="#how-do-i-get-set-up"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I get set up?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/padavan/rt-n56u/wiki/EN/HowToMakeFirmware" rel="nofollow"&gt;Get the tools to build the system&lt;/a&gt; or &lt;a href="https://bitbucket.org/padavan/rt-n56u/downloads" rel="nofollow"&gt;Download pre-built system image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Feed the device with the system image file (Follow instructions of updating your current system)&lt;/li&gt;
&lt;li&gt;Perform factory reset&lt;/li&gt;
&lt;li&gt;Open web browser on &lt;a href="http://my.router" rel="nofollow"&gt;http://my.router&lt;/a&gt; to configure the services&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-contribution-guidelines" class="anchor" aria-hidden="true" href="#contribution-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution guidelines&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To be completed&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-特别说明" class="anchor" aria-hidden="true" href="#特别说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;特别说明&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;汉化字典来自 &lt;a href="https://github.com/gorden5566/padavan"&gt;https://github.com/gorden5566/padavan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-固件特点" class="anchor" aria-hidden="true" href="#固件特点"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;固件特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;a href="https://github.com/gorden5566/padavan"&gt;gorden5566&lt;/a&gt;的汉化字典&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aria2/aria2"&gt;aria2&lt;/a&gt;可选使用较新版本的预编译程序 &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_ARIA2_NEW_PREBUILD_BIN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;aria2前端更换为&lt;a href="https://github.com/mayswind/AriaNg"&gt;AriaNg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/curl/curl"&gt;curl&lt;/a&gt;可选编译可执行程序&lt;code&gt;CONFIG_FIRMWARE_INCLUDE_CURL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用了&lt;a href="http://pm.freize.net/index.html" rel="nofollow"&gt;PROMETHEUS&lt;/a&gt;提供的部分补丁，包括新版本的类库、软件包和WIFI驱动补丁&lt;/li&gt;
&lt;li&gt;使用了&lt;a href="https://github.com/Linaro1985/padavan-ng"&gt;Linaro1985/padavan-ng&lt;/a&gt;的部分软件包&lt;/li&gt;
&lt;li&gt;集成以下软件&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/scutclient"&gt;scutclient&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chenhaowen01/gdut-drcom"&gt;gdut-drcom&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_GDUT_DRCOM&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/dogcom"&gt;dogcom&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_DOGCOM&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/minieap"&gt;minieap&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_MINIEAP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/njit8021xclient"&gt;njit-client&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mzweilin/napt66"&gt;napt66&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_NAPT66&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shadowsocksr-backup/shadowsocksr-libev"&gt;ssr&lt;/a&gt;/&lt;a href="https://github.com/shadowsocks/shadowsocks-libev"&gt;ss&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shadowsocks/shadowsocks-libev"&gt;ss-server&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SSSERVER&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SoftEtherVPN/SoftEtherVPN_Stable"&gt;softether-vpnserver&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SoftEtherVPN/SoftEtherVPN_Stable"&gt;softether-vpnclient&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SoftEtherVPN/SoftEtherVPN_Stable"&gt;softether-vpncmd&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aa65535/hev-dns-forwarder"&gt;dns-forwarder&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/vlmcsd"&gt;vlmcsd&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_VLMCSD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tsl0922/ttyd"&gt;ttyd&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_TTYD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ohse.de/uwe/software/lrzsz.html" rel="nofollow"&gt;lrzsz&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_LRZSZ&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hisham.hm/htop/releases/" rel="nofollow"&gt;htop&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_HTOP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nano-editor.org/dist/" rel="nofollow"&gt;nano&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_NANO&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iperf.fr/" rel="nofollow"&gt;iperf3&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_IPERF3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/dump1090"&gt;dump1090&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_DUMP1090&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/osmocom/rtl-sdr"&gt;rtl-sdr&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_RTL_SDR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Linaro1985/padavan-ng/tree/master/trunk/user/samba36"&gt;samba3.6&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SMBD36&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/traviscross/mtr"&gt;mtr&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_MTR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dest-unreach.org/socat" rel="nofollow"&gt;socat&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SOCAT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://socks-relay.sourceforge.io" rel="nofollow"&gt;srelay&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SRELAY&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/mentohust"&gt;mentohust&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_MENTOHUST&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fatedier/frp"&gt;frpc&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_FRPC&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fatedier/frp"&gt;frps&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_FRPS&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;已适配除官方适配外的以下机型&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;WR1200JS (USB)&lt;/li&gt;
&lt;li&gt;NEWIFI3 (USB)&lt;/li&gt;
&lt;li&gt;PSG1218&lt;/li&gt;
&lt;li&gt;K2P&lt;/li&gt;
&lt;li&gt;K2P-USB (USB)&lt;/li&gt;
&lt;li&gt;MZ-R13&lt;/li&gt;
&lt;li&gt;MZ-R13P&lt;/li&gt;
&lt;li&gt;HC5661A&lt;/li&gt;
&lt;li&gt;OYE-001 (USB)&lt;/li&gt;
&lt;li&gt;MI-MINI (USB)&lt;/li&gt;
&lt;li&gt;MI-3 (USB)&lt;/li&gt;
&lt;li&gt;5K-W20 (USB)&lt;/li&gt;
&lt;li&gt;JCG-AC860M (USB)&lt;/li&gt;
&lt;li&gt;JCG-836PRO (USB)&lt;/li&gt;
&lt;li&gt;DIR-882 (USB)&lt;/li&gt;
&lt;li&gt;DIR-878&lt;/li&gt;
&lt;li&gt;RT-AC1200GU (USB)&lt;/li&gt;
&lt;li&gt;XY-C1 (USB)&lt;/li&gt;
&lt;li&gt;NEWIFI-MINI (USB)&lt;/li&gt;
&lt;li&gt;HC5861B&lt;/li&gt;
&lt;li&gt;360P2 (USB)&lt;/li&gt;
&lt;li&gt;MR2600 (USB)&lt;/li&gt;
&lt;li&gt;PSG1208&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-编译说明" class="anchor" aria-hidden="true" href="#编译说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;编译说明&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;安装依赖包&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt-get update
sudo apt-get install unzip libtool curl cmake gperf gawk flex bison nano \
git python-docutils gettext automake autopoint texinfo build-essential fakeroot \
pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;克隆源码&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone --depth=1 https://gitee.com/hanwckf/rt-n56u.git /opt/rt-n56u
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;git clone --depth=1 https://github.com/hanwckf/rt-n56u.git /opt/rt-n56u&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;编译工具链&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /opt/rt-n56u/toolchain-mipsel
./clean_sources
./build_toolchain_3.4.x&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;(可选)修改机型配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;nano /opt/rt-n56u/trunk/configs/templates/PSG1218.config&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;清理代码树并开始编译&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /opt/rt-n56u/trunk
sudo ./clear_tree
fakeroot ./build_firmware_modify PSG1218
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;脚本第一个参数为路由型号，在trunk/configs/templates/中&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;编译好的固件在trunk/images里&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-请参阅" class="anchor" aria-hidden="true" href="#请参阅"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;请参阅&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/cb51fb0fb2ac" rel="nofollow"&gt;https://www.jianshu.com/p/cb51fb0fb2ac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/d76a63a12eae" rel="nofollow"&gt;https://www.jianshu.com/p/d76a63a12eae&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/6b8403cdea46" rel="nofollow"&gt;https://www.jianshu.com/p/6b8403cdea46&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hanwckf</author><guid isPermaLink="false">https://github.com/hanwckf/rt-n56u</guid><pubDate>Wed, 06 Nov 2019 00:07:00 GMT</pubDate></item><item><title>jemalloc/jemalloc #8 in C, Today</title><link>https://github.com/jemalloc/jemalloc</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;jemalloc is a general purpose malloc(3) implementation that emphasizes
fragmentation avoidance and scalable concurrency support.  jemalloc first came
into use as the FreeBSD libc allocator in 2005, and since then it has found its
way into numerous applications that rely on its predictable behavior.  In 2010
jemalloc development efforts broadened to include developer support features
such as heap profiling and extensive monitoring/tuning hooks.  Modern jemalloc
releases continue to be integrated back into FreeBSD, and therefore versatility
remains critical.  Ongoing development efforts trend toward making jemalloc
among the best allocators for a broad range of demanding applications, and
eliminating/mitigating weaknesses that have practical repercussions for real
world applications.

The COPYING file contains copyright and licensing information.

The INSTALL file contains information on how to configure, build, and install
jemalloc.

The ChangeLog file contains a brief summary of changes for each release.

URL: &lt;a href="http://jemalloc.net/" rel="nofollow"&gt;http://jemalloc.net/&lt;/a&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>jemalloc</author><guid isPermaLink="false">https://github.com/jemalloc/jemalloc</guid><pubDate>Wed, 06 Nov 2019 00:08:00 GMT</pubDate></item><item><title>juliocesarfort/public-pentesting-reports #9 in C, Today</title><link>https://github.com/juliocesarfort/public-pentesting-reports</link><description>&lt;p&gt;&lt;i&gt;Curated list of  public penetration test reports released by several consulting firms and academic security groups&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-public-penetration-testing-reports" class="anchor" aria-hidden="true" href="#public-penetration-testing-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Public penetration testing reports&lt;/h1&gt;
&lt;p&gt;Curated list of public penetration test reports released by several consulting firms and academic security groups.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>juliocesarfort</author><guid isPermaLink="false">https://github.com/juliocesarfort/public-pentesting-reports</guid><pubDate>Wed, 06 Nov 2019 00:09:00 GMT</pubDate></item><item><title>facebook/zstd #10 in C, Today</title><link>https://github.com/facebook/zstd</link><description>&lt;p&gt;&lt;i&gt;Zstandard - Fast real-time compression algorithm&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/facebook/zstd/dev/doc/images/zstd_logo86.png"&gt;&lt;img src="https://raw.githubusercontent.com/facebook/zstd/dev/doc/images/zstd_logo86.png" alt="Zstandard" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Zstandard&lt;/strong&gt;, or &lt;code&gt;zstd&lt;/code&gt; as short version, is a fast lossless compression algorithm,
targeting real-time compression scenarios at zlib-level and better compression ratios.
It's backed by a very fast entropy stage, provided by &lt;a href="https://github.com/Cyan4973/FiniteStateEntropy"&gt;Huff0 and FSE library&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The project is provided as an open-source dual &lt;a href="LICENSE"&gt;BSD&lt;/a&gt; and &lt;a href="COPYING"&gt;GPLv2&lt;/a&gt; licensed &lt;strong&gt;C&lt;/strong&gt; library,
and a command line utility producing and decoding &lt;code&gt;.zst&lt;/code&gt;, &lt;code&gt;.gz&lt;/code&gt;, &lt;code&gt;.xz&lt;/code&gt; and &lt;code&gt;.lz4&lt;/code&gt; files.
Should your project require another programming language,
a list of known ports and bindings is provided on &lt;a href="http://www.zstd.net/#other-languages" rel="nofollow"&gt;Zstandard homepage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Development branch status:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/facebook/zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b5d141da23951adb465b2975ee9550048c703b9/68747470733a2f2f7472617669732d63692e6f72672f66616365626f6f6b2f7a7374642e7376673f6272616e63683d646576" alt="Build Status" title="Continuous Integration test suite" data-canonical-src="https://travis-ci.org/facebook/zstd.svg?branch=dev" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/YannCollet/zstd-p0yf0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24c1b80141c393a1de83716b92268d9dabc02d69/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f78743338776264786a6b356d7262656d2f6272616e63682f6465763f7376673d74727565" alt="Build status" title="Windows test suite" data-canonical-src="https://ci.appveyor.com/api/projects/status/xt38wbdxjk5mrbem/branch/dev?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/facebook/zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/17a2aa1bae71dd23de1e50ce454a985b26f08910/68747470733a2f2f636972636c6563692e636f6d2f67682f66616365626f6f6b2f7a7374642f747265652f6465762e7376673f7374796c653d736869656c64" alt="Build status" title="Short test suite" data-canonical-src="https://circleci.com/gh/facebook/zstd/tree/dev.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cirrus-ci.com/github/facebook/zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce5aba60b966c76c39b58d4b64aaf8f2dc96c5ed/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f66616365626f6f6b2f7a7374642e7376673f6272616e63683d646576" alt="Build status" data-canonical-src="https://api.cirrus-ci.com/github/facebook/zstd.svg?branch=dev" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43aa9aa52b889d2a708f34c3f799f400e24fad63/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f7a7374642e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/zstd.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmarks&lt;/h2&gt;
&lt;p&gt;For reference, several fast compression algorithms were tested and compared
on a server running Arch Linux (&lt;code&gt;Linux version 5.0.5-arch1-1&lt;/code&gt;),
with a Core i9-9900K CPU @ 5.0GHz,
using &lt;a href="https://github.com/inikep/lzbench"&gt;lzbench&lt;/a&gt;, an open-source in-memory benchmark by @inikep
compiled with &lt;a href="https://gcc.gnu.org/" rel="nofollow"&gt;gcc&lt;/a&gt; 8.2.1,
on the &lt;a href="http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia" rel="nofollow"&gt;Silesia compression corpus&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compressor name&lt;/th&gt;
&lt;th&gt;Ratio&lt;/th&gt;
&lt;th&gt;Compression&lt;/th&gt;
&lt;th&gt;Decompress.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;zstd 1.4.4 -1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.884&lt;/td&gt;
&lt;td&gt;520 MB/s&lt;/td&gt;
&lt;td&gt;1600 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zlib 1.2.11 -1&lt;/td&gt;
&lt;td&gt;2.743&lt;/td&gt;
&lt;td&gt;110 MB/s&lt;/td&gt;
&lt;td&gt;440 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;brotli 1.0.7 -0&lt;/td&gt;
&lt;td&gt;2.701&lt;/td&gt;
&lt;td&gt;430 MB/s&lt;/td&gt;
&lt;td&gt;470 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;quicklz 1.5.0 -1&lt;/td&gt;
&lt;td&gt;2.238&lt;/td&gt;
&lt;td&gt;600 MB/s&lt;/td&gt;
&lt;td&gt;800 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lzo1x 2.09 -1&lt;/td&gt;
&lt;td&gt;2.106&lt;/td&gt;
&lt;td&gt;680 MB/s&lt;/td&gt;
&lt;td&gt;950 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lz4 1.8.3&lt;/td&gt;
&lt;td&gt;2.101&lt;/td&gt;
&lt;td&gt;800 MB/s&lt;/td&gt;
&lt;td&gt;4220 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;snappy 1.1.4&lt;/td&gt;
&lt;td&gt;2.073&lt;/td&gt;
&lt;td&gt;580 MB/s&lt;/td&gt;
&lt;td&gt;2020 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lzf 3.6 -1&lt;/td&gt;
&lt;td&gt;2.077&lt;/td&gt;
&lt;td&gt;440 MB/s&lt;/td&gt;
&lt;td&gt;930 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Zstd can also offer stronger compression ratios at the cost of compression speed.
Speed vs Compression trade-off is configurable by small increments.
Decompression speed is preserved and remains roughly the same at all settings,
a property shared by most LZ compression algorithms, such as &lt;a href="http://www.zlib.net/" rel="nofollow"&gt;zlib&lt;/a&gt; or lzma.&lt;/p&gt;
&lt;p&gt;The following tests were run
on a server running Linux Debian (&lt;code&gt;Linux version 4.14.0-3-amd64&lt;/code&gt;)
with a Core i7-6700K CPU @ 4.0GHz,
using &lt;a href="https://github.com/inikep/lzbench"&gt;lzbench&lt;/a&gt;, an open-source in-memory benchmark by @inikep
compiled with &lt;a href="https://gcc.gnu.org/" rel="nofollow"&gt;gcc&lt;/a&gt; 7.3.0,
on the &lt;a href="http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia" rel="nofollow"&gt;Silesia compression corpus&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compression Speed vs Ratio&lt;/th&gt;
&lt;th&gt;Decompression Speed&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/CSpeed2.png"&gt;&lt;img src="doc/images/CSpeed2.png" alt="Compression Speed vs Ratio" title="Compression Speed vs Ratio" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/DSpeed3.png"&gt;&lt;img src="doc/images/DSpeed3.png" alt="Decompression Speed" title="Decompression Speed" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A few other algorithms can produce higher compression ratios at slower speeds, falling outside of the graph.
For a larger picture including slow modes, &lt;a href="doc/images/DCspeed5.png"&gt;click on this link&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-case-for-small-data-compression" class="anchor" aria-hidden="true" href="#the-case-for-small-data-compression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The case for Small Data compression&lt;/h2&gt;
&lt;p&gt;Previous charts provide results applicable to typical file and stream scenarios (several MB). Small data comes with different perspectives.&lt;/p&gt;
&lt;p&gt;The smaller the amount of data to compress, the more difficult it is to compress. This problem is common to all compression algorithms, and reason is, compression algorithms learn from past data how to compress future data. But at the beginning of a new data set, there is no "past" to build upon.&lt;/p&gt;
&lt;p&gt;To solve this situation, Zstd offers a &lt;strong&gt;training mode&lt;/strong&gt;, which can be used to tune the algorithm for a selected type of data.
Training Zstandard is achieved by providing it with a few samples (one file per sample). The result of this training is stored in a file called "dictionary", which must be loaded before compression and decompression.
Using this dictionary, the compression ratio achievable on small data improves dramatically.&lt;/p&gt;
&lt;p&gt;The following example uses the &lt;code&gt;github-users&lt;/code&gt; &lt;a href="https://github.com/facebook/zstd/releases/tag/v1.1.3"&gt;sample set&lt;/a&gt;, created from &lt;a href="https://developer.github.com/v3/users/#get-all-users"&gt;github public API&lt;/a&gt;.
It consists of roughly 10K records weighing about 1KB each.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compression Ratio&lt;/th&gt;
&lt;th&gt;Compression Speed&lt;/th&gt;
&lt;th&gt;Decompression Speed&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/dict-cr.png"&gt;&lt;img src="doc/images/dict-cr.png" alt="Compression Ratio" title="Compression Ratio" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/dict-cs.png"&gt;&lt;img src="doc/images/dict-cs.png" alt="Compression Speed" title="Compression Speed" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/dict-ds.png"&gt;&lt;img src="doc/images/dict-ds.png" alt="Decompression Speed" title="Decompression Speed" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;These compression gains are achieved while simultaneously providing &lt;em&gt;faster&lt;/em&gt; compression and decompression speeds.&lt;/p&gt;
&lt;p&gt;Training works if there is some correlation in a family of small data samples. The more data-specific a dictionary is, the more efficient it is (there is no &lt;em&gt;universal dictionary&lt;/em&gt;).
Hence, deploying one dictionary per type of data will provide the greatest benefits.
Dictionary gains are mostly effective in the first few KB. Then, the compression algorithm will gradually use previously decoded content to better compress the rest of the file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dictionary-compression-how-to" class="anchor" aria-hidden="true" href="#dictionary-compression-how-to"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dictionary compression How To:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create the dictionary&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zstd --train FullPathToTrainingSet/* -o dictionaryName&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compress with dictionary&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zstd -D dictionaryName FILE&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Decompress with dictionary&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zstd -D dictionaryName --decompress FILE.zst&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-build-instructions" class="anchor" aria-hidden="true" href="#build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build instructions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-makefile" class="anchor" aria-hidden="true" href="#makefile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Makefile&lt;/h3&gt;
&lt;p&gt;If your system is compatible with standard &lt;code&gt;make&lt;/code&gt; (or &lt;code&gt;gmake&lt;/code&gt;),
invoking &lt;code&gt;make&lt;/code&gt; in root directory will generate &lt;code&gt;zstd&lt;/code&gt; cli in root directory.&lt;/p&gt;
&lt;p&gt;Other available options include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;make install&lt;/code&gt; : create and install zstd cli, library and man pages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make check&lt;/code&gt; : create and run &lt;code&gt;zstd&lt;/code&gt;, tests its behavior on local platform&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cmake" class="anchor" aria-hidden="true" href="#cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cmake&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;cmake&lt;/code&gt; project generator is provided within &lt;code&gt;build/cmake&lt;/code&gt;.
It can generate Makefiles or other build scripts
to create &lt;code&gt;zstd&lt;/code&gt; binary, and &lt;code&gt;libzstd&lt;/code&gt; dynamic and static libraries.&lt;/p&gt;
&lt;p&gt;By default, &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; is set to &lt;code&gt;Release&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-meson" class="anchor" aria-hidden="true" href="#meson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meson&lt;/h3&gt;
&lt;p&gt;A Meson project is provided within &lt;a href="build/meson"&gt;&lt;code&gt;build/meson&lt;/code&gt;&lt;/a&gt;. Follow
build instructions in that directory.&lt;/p&gt;
&lt;p&gt;You can also take a look at &lt;a href=".travis.yml"&gt;&lt;code&gt;.travis.yml&lt;/code&gt;&lt;/a&gt; file for an
example about how Meson is used to build this project.&lt;/p&gt;
&lt;p&gt;Note that default build type is &lt;strong&gt;release&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-visual-studio-windows" class="anchor" aria-hidden="true" href="#visual-studio-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Studio (Windows)&lt;/h3&gt;
&lt;p&gt;Going into &lt;code&gt;build&lt;/code&gt; directory, you will find additional possibilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Projects for Visual Studio 2005, 2008 and 2010.
&lt;ul&gt;
&lt;li&gt;VS2010 project is compatible with VS2012, VS2013, VS2015 and VS2017.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Automated build scripts for Visual compiler by &lt;a href="https://github.com/KrzysFR"&gt;@KrzysFR&lt;/a&gt;, in &lt;code&gt;build/VS_scripts&lt;/code&gt;,
which will build &lt;code&gt;zstd&lt;/code&gt; cli and &lt;code&gt;libzstd&lt;/code&gt; library without any need to open Visual Studio solution.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-buck" class="anchor" aria-hidden="true" href="#buck"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Buck&lt;/h3&gt;
&lt;p&gt;You can build the zstd binary via buck by executing: &lt;code&gt;buck build programs:zstd&lt;/code&gt; from the root of the repo.
The output binary will be in &lt;code&gt;buck-out/gen/programs/&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;Zstandard is currently deployed within Facebook. It is used continuously to compress large amounts of data in multiple formats and use cases.
Zstandard is considered safe for production environments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Zstandard is dual-licensed under &lt;a href="LICENSE"&gt;BSD&lt;/a&gt; and &lt;a href="COPYING"&gt;GPLv2&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;The "dev" branch is the one where all contributions are merged before reaching "master".
If you plan to propose a patch, please commit into the "dev" branch, or its own feature branch.
Direct commit to "master" are not permitted.
For more information, please read &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/zstd</guid><pubDate>Wed, 06 Nov 2019 00:10:00 GMT</pubDate></item><item><title>alibaba/AliOS-Things #11 in C, Today</title><link>https://github.com/alibaba/AliOS-Things</link><description>&lt;p&gt;&lt;i&gt;AliOS Things latest version: https://github.com/alibaba/AliOS-Things/tree/rel_3.0.0. Please go to  https://aliosthings.iot.aliyun.com to get your minimal code.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;br&gt;
&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b22dc13660937ac469855743f983fcd7ac718c0f/68747470733a2f2f696d672e616c6963646e2e636f6d2f7466732f544231653155377679416e424b4e6a535a4676585861544b5858612d3937332d3230302e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b22dc13660937ac469855743f983fcd7ac718c0f/68747470733a2f2f696d672e616c6963646e2e636f6d2f7466732f544231653155377679416e424b4e6a535a4676585861544b5858612d3937332d3230302e706e67" height="60" data-canonical-src="https://img.alicdn.com/tfs/TB1e1U7vyAnBKNjSZFvXXaTKXXa-973-200.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div align="center"&gt;
&lt;p&gt;&lt;a href="https://gitter.im/aliosthings/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d9eae1c41dcc3d25ec2f2d8d8e288de8d33fa36/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f616c696f737468696e67732f4c6f6262792e7376673f7374796c653d666c61742d737175617265" alt="Join the chat at https://gitter.im/aliosthings/Lobby" data-canonical-src="https://img.shields.io/gitter/room/aliosthings/Lobby.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;EN | &lt;a href="./README-zh.md"&gt;中文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AliOS Things is Alibaba's IoT version of AliOS Family, it was announced in &lt;a href="https://yunqi.aliyun.com" rel="nofollow"&gt;The Computing Conference 2017&lt;/a&gt; in Hangzhou by Alibaba Cloud, and open sourced in 20&lt;sup&gt;th&lt;/sup&gt;, October, 2017 at github:&lt;a href="https://github.com/alibaba/AliOS-Things"&gt;https://github.com/alibaba/AliOS-Things&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-architecture-overview" class="anchor" aria-hidden="true" href="#architecture-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture Overview&lt;/h2&gt;
&lt;p&gt;AliOS Things supports multiple architectures, including ARM, C-Sky, MIPS, RISCV, rl78, rx600, xtensa etc. 200+ AliOS Things certified chips and modules, and 100+ certified sensors.&lt;/p&gt;
&lt;p&gt;AliOS Things adapts Layered Architecture and Component Architecture including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BSP: Board Support Package&lt;/li&gt;
&lt;li&gt;HAL: Hardware Abstraction Layer, includes WiFi, UART, Flash etc.&lt;/li&gt;
&lt;li&gt;Kernel: includes Rhino RTOS Kernel, VFS, KV Storage, CLI, C++ etc.&lt;/li&gt;
&lt;li&gt;Network: includes LwIP(Lightweight TCP/IP), uMesh mesh networking stack, BLE(Bluetooth Low Energy), LoRaWan stack, AT Commands Module etc.&lt;/li&gt;
&lt;li&gt;Security: includes TLS(mbedTLS and cutomized iTLS), ID2, SST(Trusted Storage), Crypto, TEE(Trusted Execution Environment) etc.&lt;/li&gt;
&lt;li&gt;AOS API: AliOS Things exposed APIs for Application and Middleware&lt;/li&gt;
&lt;li&gt;Middleware: Alibaba's value-added and commonly seen IoT components, includes Linkkit, OTA(Differential Incremental Security Upgrade), ulog(log service), uData(Sensor Framework), uLocation(Location Framework), WiFi Provision etc.&lt;/li&gt;
&lt;li&gt;Application: a lot of sample codes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All modules have been organized as Components, Configuring via menuconfig, which enables applications to choose components needed easily.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AliOS Things wiki: &lt;a href="https://github.com/alibaba/AliOS-Things/wiki"&gt;Github Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AliOS Things documentation: &lt;a href="https://dev.iot.aliyun.com/doc" rel="nofollow"&gt;Alibaba Cloud IoT Documentation&lt;/a&gt; | AliOS Things&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-contribute" class="anchor" aria-hidden="true" href="#how-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to contribute&lt;/h3&gt;
&lt;p&gt;Please refer to &lt;a href="https://github.com/alibaba/AliOS-Things/wiki/contributing"&gt;Contributing Guideline&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-quick-start-by-command-line-using-ubuntu-machine" class="anchor" aria-hidden="true" href="#quick-start-by-command-line-using-ubuntu-machine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start by Command Line using Ubuntu Machine&lt;/h3&gt;
&lt;p&gt;Please refer to &lt;a href="https://github.com/alibaba/AliOS-Things/wiki/Quick-Start"&gt;Quick Start&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-quick-start-by-alios-studio" class="anchor" aria-hidden="true" href="#quick-start-by-alios-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start by AliOS Studio&lt;/h3&gt;
&lt;p&gt;AliOS Things uses &lt;a href="https://code.visualstudio.com/" rel="nofollow"&gt;vscode&lt;/a&gt; as IDE, supporting Windows/MAC/Linux.
Please refer to &lt;a href="https://github.com/alibaba/AliOS-Things/wiki/AliOS-Things-Studio"&gt;AliOS Studio&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-iot-platform" class="anchor" aria-hidden="true" href="#iot-platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IoT Platform&lt;/h3&gt;
&lt;p&gt;AliOS Things can help you connect your devices to &lt;a href="https://iot.console.aliyun.com/quick_start" rel="nofollow"&gt;Alibaba Cloud IoT platform&lt;/a&gt; more quickly.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://img.alicdn.com/tfs/TB1X2HOhYPpK1RjSZFFXXa5PpXa-970-1280.png" rel="nofollow"&gt;DingTalk Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.aliyun.com/group/aliiot" rel="nofollow"&gt;Alibaba Cloud IoT Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;AliOS Things is released under the &lt;a href="LICENSE"&gt;Apache 2.0 license&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>alibaba</author><guid isPermaLink="false">https://github.com/alibaba/AliOS-Things</guid><pubDate>Wed, 06 Nov 2019 00:11:00 GMT</pubDate></item><item><title>espressif/esp-idf #12 in C, Today</title><link>https://github.com/espressif/esp-idf</link><description>&lt;p&gt;&lt;i&gt;Espressif IoT Development Framework. Official development framework for ESP32.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-espressif-iot-development-framework" class="anchor" aria-hidden="true" href="#espressif-iot-development-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Espressif IoT Development Framework&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./README_CN.md"&gt;中文版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1af20a2147d12aca36403d0181d88e229da2640f/68747470733a2f2f72656164746865646f63732e636f6d2f70726f6a656374732f6573707265737369662d6573702d6964662f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.com/projects/espressif-esp-idf/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP-IDF is the official development framework for the &lt;a href="https://espressif.com/en/products/hardware/esp32/overview" rel="nofollow"&gt;ESP32&lt;/a&gt; chip.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-developing-with-esp-idf" class="anchor" aria-hidden="true" href="#developing-with-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing With ESP-IDF&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-esp-idf" class="anchor" aria-hidden="true" href="#setting-up-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting Up ESP-IDF&lt;/h2&gt;
&lt;p&gt;See setup guides for detailed instructions to set up the ESP-IDF:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/stable/get-started/" rel="nofollow"&gt;Getting Started Guide for the stable ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/" rel="nofollow"&gt;Getting Started Guide for the latest (master branch) ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-non-github-forks" class="anchor" aria-hidden="true" href="#non-github-forks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-GitHub forks&lt;/h3&gt;
&lt;p&gt;ESP-IDF uses relative locations as its submodules URLs (&lt;a href=".gitmodules"&gt;.gitmodules&lt;/a&gt;). So they link to GitHub.
If ESP-IDF is forked to a Git repository which is not on GitHub, you will need to run the script
&lt;a href="tools/set-submodules-to-github.sh"&gt;tools/set-submodules-to-github.sh&lt;/a&gt; after git clone.
The script sets absolute URLs for all submodules, allowing &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; to complete.
If cloning ESP-IDF from GitHub, this step is not needed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-finding-a-project" class="anchor" aria-hidden="true" href="#finding-a-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Finding a Project&lt;/h2&gt;
&lt;p&gt;As well as the &lt;a href="https://github.com/espressif/esp-idf-template"&gt;esp-idf-template&lt;/a&gt; project mentioned in Getting Started, ESP-IDF comes with some example projects in the &lt;a href="examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt;
&lt;p&gt;Once you've found the project you want to work with, change to its directory and you can configure and build it.&lt;/p&gt;
&lt;p&gt;To start your own project based on an example, copy the example project directory outside of the ESP-IDF directory.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-reference" class="anchor" aria-hidden="true" href="#quick-reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Reference&lt;/h1&gt;
&lt;p&gt;See the Getting Started guide links above for a detailed setup guide. This is a quick reference for common commands when working with ESP-IDF projects:&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup-build-environment" class="anchor" aria-hidden="true" href="#setup-build-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup Build Environment&lt;/h2&gt;
&lt;p&gt;(See Getting Started guide for a full list of required steps with details.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install host build dependencies mentioned in Getting Started guide.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;tools/&lt;/code&gt; directory to the PATH&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;python -m pip install -r requirements.txt&lt;/code&gt; to install Python dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-the-project" class="anchor" aria-hidden="true" href="#configuring-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py menuconfig&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Opens a text-based configuration menu for the project.&lt;/li&gt;
&lt;li&gt;Use up &amp;amp; down arrow keys to navigate the menu.&lt;/li&gt;
&lt;li&gt;Use Enter key to go into a submenu, Escape key to go out or to exit.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;?&lt;/code&gt; to see a help screen. Enter key exits the help screen.&lt;/li&gt;
&lt;li&gt;Use Space key, or &lt;code&gt;Y&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; keys to enable (Yes) and disable (No) configuration items with checkboxes "&lt;code&gt;[*]&lt;/code&gt;"&lt;/li&gt;
&lt;li&gt;Pressing &lt;code&gt;?&lt;/code&gt; while highlighting a configuration item displays help about that item.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;/&lt;/code&gt; to search the configuration items.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once done configuring, press Escape multiple times to exit and say "Yes" to save the new configuration when prompted.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-the-project" class="anchor" aria-hidden="true" href="#compiling-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py build&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;... will compile app, bootloader and generate a partition table based on the config.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-flashing-the-project" class="anchor" aria-hidden="true" href="#flashing-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flashing the Project&lt;/h2&gt;
&lt;p&gt;When the build finishes, it will print a command line to use esptool.py to flash the chip. However you can also do this automatically by running:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py -p PORT flash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replace PORT with the name of your serial port (like &lt;code&gt;COM3&lt;/code&gt; on Windows, &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; on Linux, or &lt;code&gt;/dev/cu.usbserial-X&lt;/code&gt; on MacOS. If the &lt;code&gt;-p&lt;/code&gt; option is left out, &lt;code&gt;idf.py flash&lt;/code&gt; will try to flash the first available serial port.&lt;/p&gt;
&lt;p&gt;This will flash the entire project (app, bootloader and partition table) to a new chip. The settings for serial port flashing can be configured with &lt;code&gt;idf.py menuconfig&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You don't need to run &lt;code&gt;idf.py build&lt;/code&gt; before running &lt;code&gt;idf.py flash&lt;/code&gt;, &lt;code&gt;idf.py flash&lt;/code&gt; will automatically rebuild anything which needs it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-viewing-serial-output" class="anchor" aria-hidden="true" href="#viewing-serial-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Viewing Serial Output&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py monitor&lt;/code&gt; target uses the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;idf_monitor tool&lt;/a&gt; to display serial output from the ESP32. idf_monitor also has a range of features to decode crash output and interact with the device. &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;Check the documentation page for details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exit the monitor by typing Ctrl-].&lt;/p&gt;
&lt;p&gt;To build, flash and monitor output in one pass, you can run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py flash monitor&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling--flashing-only-the-app" class="anchor" aria-hidden="true" href="#compiling--flashing-only-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling &amp;amp; Flashing Only the App&lt;/h2&gt;
&lt;p&gt;After the initial flash, you may just want to build and flash just your app, not the bootloader and partition table:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;idf.py app&lt;/code&gt; - build just the app.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; - flash just the app.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; will automatically rebuild the app if any source files have changed.&lt;/p&gt;
&lt;p&gt;(In normal development there's no downside to reflashing the bootloader and partition table each time, if they haven't changed.)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-erasing-flash" class="anchor" aria-hidden="true" href="#erasing-flash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Erasing Flash&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py flash&lt;/code&gt; target does not erase the entire flash contents. However it is sometimes useful to set the device back to a totally erased state, particularly when making partition table changes or OTA app updates. To erase the entire flash, run &lt;code&gt;idf.py erase_flash&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This can be combined with other targets, ie &lt;code&gt;idf.py -p PORT erase_flash flash&lt;/code&gt; will erase everything and then re-flash the new app, bootloader and partition table.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Documentation for the latest version: &lt;a href="https://docs.espressif.com/projects/esp-idf/" rel="nofollow"&gt;https://docs.espressif.com/projects/esp-idf/&lt;/a&gt;. This documentation is built from the &lt;a href="docs"&gt;docs directory&lt;/a&gt; of this repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="https://esp32.com/" rel="nofollow"&gt;esp32.com forum&lt;/a&gt; is a place to ask questions and find community resources.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/esp-idf/issues"&gt;Check the Issues section on github&lt;/a&gt; if you find a bug or have a feature request. Please check existing Issues before opening a new one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're interested in contributing to ESP-IDF, please check the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/contribute/index.html" rel="nofollow"&gt;Contributions Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>espressif</author><guid isPermaLink="false">https://github.com/espressif/esp-idf</guid><pubDate>Wed, 06 Nov 2019 00:12:00 GMT</pubDate></item><item><title>Azure/azure-iot-sdk-c #13 in C, Today</title><link>https://github.com/Azure/azure-iot-sdk-c</link><description>&lt;p&gt;&lt;i&gt;A C99 SDK for connecting devices to Microsoft Azure IoT services&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-azure-iot-c-sdks-and-libraries" class="anchor" aria-hidden="true" href="#azure-iot-c-sdks-and-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Azure IoT C SDKs and Libraries&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://azure-iot-sdks.visualstudio.com/azure-iot-sdks/_build/latest?definitionId=85" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5bb2ba48a1c36e9711488af5a8f4bfc036c45c8/68747470733a2f2f617a7572652d696f742d73646b732e76697375616c73747564696f2e636f6d2f617a7572652d696f742d73646b732f5f617069732f6275696c642f7374617475732f632f696e746567726174652d696e746f2d7265706f2d43" alt="Build Status" data-canonical-src="https://azure-iot-sdks.visualstudio.com/azure-iot-sdks/_apis/build/status/c/integrate-into-repo-C" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository contains the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Azure IoT Hub Device C SDK&lt;/strong&gt; to connect devices running C code to Azure IoT Hub.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Azure IoT Hub Device Provisioning Service Client SDK&lt;/strong&gt; for enrolling devices with &lt;a href="https://docs.microsoft.com/azure/iot-dps/" rel="nofollow"&gt;Azure IoT Device Provisioning Services&lt;/a&gt; and managing enrollments lists.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Azure IoT Hub Service C SDK&lt;/strong&gt; to interface with an Azure IoT Hub service instance from a server-side C application.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Serializer Library for C&lt;/strong&gt; to help serialize and deserialize data on your device.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-packages-and-libraries" class="anchor" aria-hidden="true" href="#packages-and-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packages and Libraries&lt;/h2&gt;
&lt;p&gt;The simplest way to get started with the Azure IoT SDKs is to use the following packages and libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux: &lt;a href="./iothub_client/readme.md#aptgetpackage"&gt;Device SDK on apt-get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mbed:                                      &lt;a href="./iothub_client/readme.md#mbed"&gt;Device SDK library on MBED&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Arduino:                                   &lt;a href="./iothub_client/readme.md#arduino"&gt;Device SDK library in the Arduino IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows:                                   &lt;a href="./doc/setting_up_vcpkg.md#setup-c-sdk-vcpkg-for-windows-development-environment"&gt;Device SDK on Vcpkg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;iOS:                                       &lt;a href="https://cocoapods.org/pods/AzureIoTHubClient" rel="nofollow"&gt;Device SDK on CocoaPod&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-samples" class="anchor" aria-hidden="true" href="#samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples&lt;/h2&gt;
&lt;p&gt;Here are a set of simple samples that will help you get started:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./iothub_client/samples/"&gt;Device SDK Samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./iothub_service_client/samples/"&gt;Service SDK Samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./serializer/samples/"&gt;Serializer Library Samples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-compile-the-sdk" class="anchor" aria-hidden="true" href="#compile-the-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile the SDK&lt;/h2&gt;
&lt;p&gt;When no package or library is available for your platform or if you want to modify the SDK code, or port the SDK to a new platform, then you can leverage the build environment provided in the repository.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./iothub_client/readme.md#compile"&gt;Device SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./iothub_service_client/readme.md#compile"&gt;Service SDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sdk-api-reference-documentation" class="anchor" aria-hidden="true" href="#sdk-api-reference-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SDK API Reference Documentation&lt;/h2&gt;
&lt;p&gt;The API reference documentation for the C SDKs can be found &lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-c-sdk-ref/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-azure-iot-sdks" class="anchor" aria-hidden="true" href="#other-azure-iot-sdks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Azure IoT SDKs&lt;/h2&gt;
&lt;p&gt;To find Azure IoT SDKs in other languages, please refer to the &lt;a href="https://github.com/azure/azure-iot-sdks"&gt;azure-iot-sdks&lt;/a&gt; repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developing-azure-iot-applications" class="anchor" aria-hidden="true" href="#developing-azure-iot-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing Azure IoT Applications&lt;/h2&gt;
&lt;p&gt;To learn more about building Azure IoT Applications, you can visit the &lt;a href="http://azure.com/iotdev" rel="nofollow"&gt;Azure IoT Dev Center&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-key-features-and-roadmap" class="anchor" aria-hidden="true" href="#key-features-and-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Features and Roadmap&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-device-client-sdk" class="anchor" aria-hidden="true" href="#device-client-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Device Client SDK&lt;/h3&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt; feature available  &lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt; feature planned but not supported  &lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt; no support planned&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;th&gt;mqtt&lt;/th&gt;
&lt;th&gt;mqtt-ws&lt;/th&gt;
&lt;th&gt;amqp&lt;/th&gt;
&lt;th&gt;amqp-ws&lt;/th&gt;
&lt;th&gt;https&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-security-deployment" rel="nofollow"&gt;Authentication&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;Connect your device to IoT Hub securely with supported authentication, including private key, SASToken, X-509 Self Signed and Certificate Authority (CA) Signed.  *IoT Hub only supports X-509 CA Signed over AMQP and MQTT at the moment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messages-d2c" rel="nofollow"&gt;Send device-to-cloud message&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;Send device-to-cloud messages (max 256KB) to IoT Hub with the option to add custom properties.  IoT Hub only supports batch send over AMQP and HTTPS only at the moment.  This SDK supports batch send over HTTP.  * Batch send over AMQP and AMQP-WS, and add system properties on D2C messages are in progress.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messages-c2d" rel="nofollow"&gt;Receive cloud-to-device messages&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Receive cloud-to-device messages and read associated custom and system properties from IoT Hub, with the option to complete/reject/abandon C2D messages.  *IoT Hub supports the option to complete/reject/abandon C2D messages over HTTPS and AMQP only at the moment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins" rel="nofollow"&gt;Device Twins&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;IoT Hub persists a device twin for each device that you connect to IoT Hub.  The device can perform operations like get twin tags, subscribe to desired properties.  *Send reported properties version and desired properties version are in progress.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-direct-methods" rel="nofollow"&gt;Direct Methods&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;IoT Hub gives you the ability to invoke direct methods on devices from the cloud.  The SDK supports handler for method specific and generic operation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload" rel="nofollow"&gt;Upload file to Blob&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;A device can initiate a file upload and notifies IoT Hub when the upload is complete.   File upload requires HTTPS connection, but can be initiated from client using any protocol for other operations.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/rest/api/iothub/common-error-codes" rel="nofollow"&gt;Connection Status and Error reporting&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Error reporting for IoT Hub supported error code.  *This SDK supports error reporting on authentication and Device Not Found.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Retry policies&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Retry policy for unsuccessful device-to-cloud messages have two options: no try, exponential backoff with jitter (default).   *Custom retry policy is in progress.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Devices multiplexing over single connection&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Connection Pooling - Specifying number of connections&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This SDK also contains options you can set and platform specific features.  You can find detail list in this &lt;a href="./doc/Iothub_sdk_options.md"&gt;document&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-service-client-sdk" class="anchor" aria-hidden="true" href="#service-client-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Service Client SDK&lt;/h3&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt; feature available  &lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt; feature planned but not supported  &lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt; no support planned&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry" rel="nofollow"&gt;Identity registry (CRUD)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;Use your backend app to perform CRUD operation for individual device or in bulk.  This SDK supports CRUD operation on individual device with create device from ID/Key pair only.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messages-c2d" rel="nofollow"&gt;Cloud-to-device messaging&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Use your backend app to send cloud-to-device messages in AMQP and AMQP-WS, and set up cloud-to-device message receivers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-direct-methods" rel="nofollow"&gt;Direct Methods operations&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Use your backend app to invoke direct method on device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins" rel="nofollow"&gt;Device Twins operations&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;Use your backend app to perform device twin operations.  *Twin reported property update callback and replace twin are in progress.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language" rel="nofollow"&gt;Query&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Use your backend app to perform query for information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-jobs" rel="nofollow"&gt;Jobs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Use your backend app to perform job operation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload" rel="nofollow"&gt;File Upload&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Set up your backend app to send file upload notification receiver.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-provisioning-client-sdk" class="anchor" aria-hidden="true" href="#provisioning-client-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Provisioning client SDK&lt;/h3&gt;
&lt;p&gt;This repository contains &lt;a href="./provisioning_client"&gt;provisioning client SDK&lt;/a&gt; for the &lt;a href="https://docs.microsoft.com/azure/iot-dps/" rel="nofollow"&gt;Device Provisioning Service&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt; feature available  &lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt; feature planned but not supported  &lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt; no support planned&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;th&gt;mqtt&lt;/th&gt;
&lt;th&gt;mqtt-ws&lt;/th&gt;
&lt;th&gt;amqp&lt;/th&gt;
&lt;th&gt;amqp-ws&lt;/th&gt;
&lt;th&gt;https&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;TPM Individual Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;This SDK supports connecting your device to the Device Provisioning Service via &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-service#enrollment" rel="nofollow"&gt;individual enrollment&lt;/a&gt; using &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-security#trusted-platform-module-tpm" rel="nofollow"&gt;Trusted Platform Module&lt;/a&gt;.  This &lt;a href="https://docs.microsoft.com/azure/iot-dps/quick-create-simulated-device" rel="nofollow"&gt;quickstart&lt;/a&gt; reviews how to create a simulated device for individual enrollment with TPM. TPM over MQTT is currently not supported by the Device Provisioning Service.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X.509 Individual Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;This SDK supports connecting your device to the Device Provisioning Service via &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-service#enrollment" rel="nofollow"&gt;individual enrollment&lt;/a&gt; using &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-security#leaf-certificate" rel="nofollow"&gt;X.509 leaf certificate&lt;/a&gt;.  This &lt;a href="https://docs.microsoft.com/azure/iot-dps/quick-create-simulated-device-x509" rel="nofollow"&gt;quickstart&lt;/a&gt; reviews how to create a simulated device for individual enrollment with X.509.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X.509 Enrollment Group&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;This SDK supports connecting your device to the Device Provisioning Service via &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-service#enrollment" rel="nofollow"&gt;enrollment group&lt;/a&gt; using &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-security#root-certificate" rel="nofollow"&gt;X.509 root certificate&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-provisioniong-service-sdk" class="anchor" aria-hidden="true" href="#provisioniong-service-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Provisioniong Service SDK&lt;/h3&gt;
&lt;p&gt;This repository contains &lt;a href="./provisioning/service/"&gt;provisioning service client SDK&lt;/a&gt; for the Device Provisioning Service to &lt;a href="https://docs.microsoft.com/en-us/azure/iot-dps/how-to-manage-enrollments-sdks" rel="nofollow"&gt;programmatically enroll devices&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Support&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CRUD Operation with TPM Individual Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Programmatically manage device enrollment using TPM with the service SDK.  Please visit the &lt;a href="./provisioning_service_client/"&gt;samples folder&lt;/a&gt; to learn more about this feature.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bulk CRUD Operation with TPM Individual Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Programmatically bulk manage device enrollment using TPM with the service SDK.  Please visit the &lt;a href="./provisioning_service_client/"&gt;samples folder&lt;/a&gt; to learn more about this feature.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CRUD Operation with X.509 Individual Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Programmatically manage device enrollment using X.509 individual enrollment with the service SDK.  Please visit the &lt;a href="./provisioning/service/samples/"&gt;samples folder&lt;/a&gt; to learn more about this feature.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CRUD Operation with X.509 Group Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Programmatically manage device enrollment using X.509 group enrollment with the service SDK.  Please visit the &lt;a href="./provisioning_service_client/"&gt;samples folder&lt;/a&gt; to learn more about this feature.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Query enrollments&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Programmatically query registration states with the service SDK.  Please visit the &lt;a href="./provisioning_service_client/"&gt;samples folder&lt;/a&gt; to learn more about this feature.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-os-platforms-and-hardware-compatibility" class="anchor" aria-hidden="true" href="#os-platforms-and-hardware-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OS Platforms and Hardware Compatibility&lt;/h2&gt;
&lt;p&gt;The IoT Hub device SDK for C can be used with a broad range of OS platforms and devices.&lt;/p&gt;
&lt;p&gt;The minimum requirements are for the device platform to support the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Being capable of establishing an IP connection&lt;/strong&gt;: only IP-capable devices can communicate directly with Azure IoT Hub.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Support TLS&lt;/strong&gt;: required to establish a secure communication channel with Azure IoT Hub.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Support SHA-256&lt;/strong&gt; (optional): necessary to generate the secure token for authenticating the device with the service. Different authentication methods are available and not all require SHA-256.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Have a Real Time Clock or implement code to connect to an NTP server&lt;/strong&gt;: necessary for both establishing the TLS connection and generating the secure token for authentication.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Having at least 64KB of RAM&lt;/strong&gt;: the memory footprint of the SDK depends on the SDK and protocol used as well as the platform targeted. The smallest footprint is achieved targeting microcontrollers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Having at least 4KB of RAM set for incoming SSL max content length buffer&lt;/strong&gt;: For some TLS libraries, this may be a configurable option and default may have been set as &lt;strong&gt;4KB&lt;/strong&gt; for low memory footprint devices. During TLS handshake, IoT Hub service will send Server Hello which includes IoT Hub server side certificates as part of Server Hello payload.
During &lt;strong&gt;renewal&lt;/strong&gt; of these IoT Hub server side certificates, check will be made on IoT Hub service side to prevent &lt;strong&gt;Server Hello&lt;/strong&gt; exceeding 4KB limit so that existing devices which are set for 4KB limit continue to work as before after certificate renewals.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Platform support details can be found in &lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-device-sdk-platform-support" rel="nofollow"&gt;this document&lt;/a&gt;.
You can find an exhaustive list of the OS platforms the various SDKs have been tested against in the &lt;a href="https://catalog.azureiotsuite.com/" rel="nofollow"&gt;Azure Certified for IoT device catalog&lt;/a&gt;. Note that you might still be able to use the SDKs on OS and hardware platforms that are not listed on this page: all the SDKs are open sourced and designed to be portable. If you have suggestions, feedback or issues to report, refer to the Contribution and Support sections below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-porting-the-azure-iot-device-client-sdk-for-c-to-new-devices" class="anchor" aria-hidden="true" href="#porting-the-azure-iot-device-client-sdk-for-c-to-new-devices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Porting the Azure IoT Device Client SDK for C to New Devices&lt;/h2&gt;
&lt;p&gt;The C SDKs and Libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Are written in ANSI C (C99) and avoids compiler extensions to maximize code portability and broad platform compatibility.&lt;/li&gt;
&lt;li&gt;Expose a platform abstraction layer to isolate OS dependencies (threading and mutual exclusion mechanisms, communications protocol e.g. HTTP). Refer to our &lt;a href="https://github.com/Azure/azure-c-shared-utility/blob/master/devdoc/porting_guide.md"&gt;porting guide&lt;/a&gt; for more information about our abstraction layer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the repository you will find instructions and build tools to compile and run the device client SDK for C on Linux, Windows and microcontroller platforms (refer to the links above for more information on compiling the device client for C).&lt;/p&gt;
&lt;p&gt;If you are considering porting the device client SDK for C to a new platform, check out the &lt;a href="https://github.com/Azure/azure-c-shared-utility/blob/master/devdoc/porting_guide.md"&gt;porting guide&lt;/a&gt; document.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-feedback-and-issues" class="anchor" aria-hidden="true" href="#contribution-feedback-and-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution, Feedback and Issues&lt;/h2&gt;
&lt;p&gt;If you encounter any bugs, have suggestions for new features or if you would like to become an active contributor to this project please follow the instructions provided in the &lt;a href=".github/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Have a feature request for SDKs? Please post it on &lt;a href="https://feedback.azure.com/forums/321918-azure-iot" rel="nofollow"&gt;User Voice&lt;/a&gt; to help us prioritize.&lt;/li&gt;
&lt;li&gt;Have a technical question? Ask on &lt;a href="https://stackoverflow.com/questions/tagged/azure-iot-hub" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; with tag "azure-iot-hub".&lt;/li&gt;
&lt;li&gt;Need Support? Every customer with an active Azure subscription has access to &lt;a href="https://docs.microsoft.com/en-us/azure/azure-supportability/how-to-create-azure-support-request" rel="nofollow"&gt;support&lt;/a&gt; with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team&lt;/li&gt;
&lt;li&gt;Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (&lt;a href="https://github.com/Azure/azure-iot-sdk-c"&gt;C&lt;/a&gt;, &lt;a href="https://github.com/Azure/azure-iot-sdk-java"&gt;Java&lt;/a&gt;, &lt;a href="https://github.com/Azure/azure-iot-sdk-csharp"&gt;.NET&lt;/a&gt;, &lt;a href="https://github.com/Azure/azure-iot-sdk-node"&gt;Node.js&lt;/a&gt;, &lt;a href="https://github.com/Azure/azure-iot-sdk-python"&gt;Python&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-read-more" class="anchor" aria-hidden="true" href="#read-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Read more&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/" rel="nofollow"&gt;Azure IoT Hub documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/devbox_setup.md"&gt;Prepare your development environment to use the Azure IoT device SDK for C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aka.ms/howtocreateazureiothub" rel="nofollow"&gt;Setup IoT Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/documentation/articles/iot-hub-device-sdk-c-intro/" rel="nofollow"&gt;Azure IoT device SDK for C tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-c-shared-utility/blob/master/devdoc/porting_guide.md"&gt;How to port the C libraries to other OS platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/SDK_cross_compile_example.md"&gt;Cross compilation example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-c-sdk-ref/" rel="nofollow"&gt;C SDKs API reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sdk-folder-structure" class="anchor" aria-hidden="true" href="#sdk-folder-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SDK Folder Structure&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-c-utility-uamqp-umqtt-parson" class="anchor" aria-hidden="true" href="#c-utility-uamqp-umqtt-parson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/c-utility, /uamqp, /umqtt, /parson&lt;/h3&gt;
&lt;p&gt;These are git submodules that contain code, such as adapters and protocol implementations, shared with other projects. Note that some of them contain nested submodules.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-blob" class="anchor" aria-hidden="true" href="#blob"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/blob&lt;/h3&gt;
&lt;p&gt;This folder contains client components that enable access to Azure blob storage.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dps_client" class="anchor" aria-hidden="true" href="#dps_client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/dps_client&lt;/h3&gt;
&lt;p&gt;This folder contains client library for device provisioning service.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-certs" class="anchor" aria-hidden="true" href="#certs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/certs&lt;/h3&gt;
&lt;p&gt;Contains certificates needed to communicate with Azure IoT Hub.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-doc" class="anchor" aria-hidden="true" href="#doc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/doc&lt;/h3&gt;
&lt;p&gt;This folder contains application development guides and device setup instructions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build_all" class="anchor" aria-hidden="true" href="#build_all"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/build_all&lt;/h3&gt;
&lt;p&gt;This folder contains platform-specific build scripts for the client libraries and dependent components.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-iothub_client" class="anchor" aria-hidden="true" href="#iothub_client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/iothub_client&lt;/h3&gt;
&lt;p&gt;Contains Azure IoT Hub client components that provide the raw messaging capabilities of the library. Refer to the API documentation and samples for information on how to use it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;build: has one subfolder for each platform (e.g. Windows, Linux, Mbed). Contains makefiles, batch files, and solutions that are used to generate the library binaries.&lt;/li&gt;
&lt;li&gt;devdoc: contains requirements, designs notes, manuals.&lt;/li&gt;
&lt;li&gt;inc: public include files.&lt;/li&gt;
&lt;li&gt;src: client libraries source files.&lt;/li&gt;
&lt;li&gt;samples: contains simple samples.&lt;/li&gt;
&lt;li&gt;tests: unit and end-to-end tests for source code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-serializer" class="anchor" aria-hidden="true" href="#serializer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/serializer&lt;/h3&gt;
&lt;p&gt;Contains libraries that provide modeling and JSON serialization capabilities on top of the raw messaging library. These libraries facilitate uploading structured data and command and control for use with Azure IoT services. Refer to the API documentation and samples for information on how to use it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;build: has one subfolder for each platform (e.g. Windows, Linux, Mbed). Contains makefiles, batch files, and solutions that are used to generate the library binaries.&lt;/li&gt;
&lt;li&gt;devdoc: contains requirements, designs notes, manuals.&lt;/li&gt;
&lt;li&gt;inc: public include files.&lt;/li&gt;
&lt;li&gt;src: client libraries source files.&lt;/li&gt;
&lt;li&gt;samples: contains simple samples.&lt;/li&gt;
&lt;li&gt;tests: unit tests and end-to-end tests for source code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-iothub_service_client" class="anchor" aria-hidden="true" href="#iothub_service_client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/iothub_service_client&lt;/h3&gt;
&lt;p&gt;Contains libraries that enable interactions with the IoT Hub service to perform operations such as sending messages to devices and managing the device identity registry.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-testtools" class="anchor" aria-hidden="true" href="#testtools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/testtools&lt;/h3&gt;
&lt;p&gt;Contains tools that are currently used in testing the client libraries: Mocking Framework (micromock), Generic Test Runner (CTest), Unit Test Project Template, etc.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/tools&lt;/h3&gt;
&lt;p&gt;Miscellaneous tools: compilembed, mbed_build, traceabilitytool (checks spec requirements vs code implementation).&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-long-term-support" class="anchor" aria-hidden="true" href="#long-term-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Long Term Support&lt;/h1&gt;
&lt;p&gt;The project offers a Long Term Support (LTS) version to allow users that do not need the latest features to be shielded from unwanted changes.&lt;/p&gt;
&lt;p&gt;A new LTS version will be created every 6 months. The lifetime of an LTS branch is currently planned for one year. LTS branches receive all bug fixes that fall in one of these categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;security bugfixes&lt;/li&gt;
&lt;li&gt;critical bugfixes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No new features will be picked up in an LTS branch.&lt;/p&gt;
&lt;p&gt;LTS branches are named lts_&lt;em&gt;mm&lt;/em&gt;_&lt;em&gt;yyyy&lt;/em&gt;, where &lt;em&gt;mm&lt;/em&gt; and &lt;em&gt;yyyy&lt;/em&gt; are the month and year when the branch was created. An example of such a branch is &lt;em&gt;lts_07_2017&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-schedule1" class="anchor" aria-hidden="true" href="#schedule1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schedule&lt;sup&gt;1&lt;/sup&gt;&lt;/h2&gt;
&lt;p&gt;Below is a table showing the mapping of the LTS branches to the packages released&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Package&lt;/th&gt;
&lt;th align="center"&gt;Github Branch&lt;/th&gt;
&lt;th align="center"&gt;LTS Status&lt;/th&gt;
&lt;th align="center"&gt;LTS Start Date&lt;/th&gt;
&lt;th align="center"&gt;Maintenance End Date&lt;/th&gt;
&lt;th align="center"&gt;Removed Date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Vcpkg: 2019-07-01.1&lt;br&gt; Xenial: 0.2.0.0-21xenial&lt;br&gt; Trusty: 0.2.0-21trusty&lt;br&gt; Bionic: 0.2.0.0-14bionic&lt;br&gt;&lt;/td&gt;
&lt;td align="center"&gt;lts_07_2019&lt;/td&gt;
&lt;td align="center"&gt;Active&lt;/td&gt;
&lt;td align="center"&gt;2019-07-01&lt;/td&gt;
&lt;td align="center"&gt;2020-07-01&lt;/td&gt;
&lt;td align="center"&gt;2020-07-01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Vcpkg: 1.2.14-1&lt;br&gt; Xenial: 0.2.0.0-16xenial&lt;br&gt; Trusty: 0.2.0-16trusty&lt;br&gt; Bionic: 0.2.0.0-9bionic&lt;br&gt;&lt;/td&gt;
&lt;td align="center"&gt;lts_01_2019&lt;/td&gt;
&lt;td align="center"&gt;Active&lt;/td&gt;
&lt;td align="center"&gt;2019-01-31&lt;/td&gt;
&lt;td align="center"&gt;2020-01-31&lt;/td&gt;
&lt;td align="center"&gt;2020-01-31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Nuget: 1.2.10&lt;br&gt; Xenial: 0.2.0.0-12xenial&lt;br&gt; Trusty: 0.2.0-12trusty&lt;br&gt; Bionic: 0.2.0.0-5bionic&lt;br&gt;&lt;/td&gt;
&lt;td align="center"&gt;lts_10_2018&lt;/td&gt;
&lt;td align="center"&gt;Active&lt;/td&gt;
&lt;td align="center"&gt;2018-10-03&lt;/td&gt;
&lt;td align="center"&gt;2019-10-03&lt;/td&gt;
&lt;td align="center"&gt;2019-10-03&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt; All scheduled dates are subject to change by the Azure IoT SDK team.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-planned-release-schedule" class="anchor" aria-hidden="true" href="#planned-release-schedule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Planned Release Schedule&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./lts_branches.png"&gt;&lt;img src="./lts_branches.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;p&gt;Microsoft collects performance and usage information which may be used to provide and improve Microsoft products and services and enhance your experience.  To learn more, review the &lt;a href="https://go.microsoft.com/fwlink/?LinkId=521839&amp;amp;clcid=0x409" rel="nofollow"&gt;privacy statement&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Azure</author><guid isPermaLink="false">https://github.com/Azure/azure-iot-sdk-c</guid><pubDate>Wed, 06 Nov 2019 00:13:00 GMT</pubDate></item><item><title>zephyrproject-rtos/zephyr #14 in C, Today</title><link>https://github.com/zephyrproject-rtos/zephyr</link><description>&lt;p&gt;&lt;i&gt;Primary Git Repository for the Zephyr Project. Zephyr is a new generation, scalable, optimized, secure RTOS for multiple hardware architectures.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a href="https://www.zephyrproject.org" rel="nofollow"&gt;
  &lt;p align="center"&gt;
    &lt;img src="doc/images/Zephyr-Project.png" style="max-width:100%;"&gt;
  &lt;/p&gt;
&lt;/a&gt;

&lt;a href="https://bestpractices.coreinfrastructure.org/projects/74" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b972176ff3cc1b05418042ea4ba7ea5ada4c002/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f37342f6261646765" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/74/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e6dac3ced16d1df7fda34ae359303e08c6167b7f/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3538666662326238626161356533303730303265316437392f62616467653f6272616e63683d6d6173746572"&gt;&lt;img src="https://camo.githubusercontent.com/e6dac3ced16d1df7fda34ae359303e08c6167b7f/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3538666662326238626161356533303730303265316437392f62616467653f6272616e63683d6d6173746572" data-canonical-src="https://api.shippable.com/projects/58ffb2b8baa5e307002e1d79/badge?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The Zephyr Project is a scalable real-time operating system (RTOS) supporting
multiple hardware architectures, optimized for resource constrained devices,
and built with security in mind.&lt;/p&gt;
&lt;p&gt;The Zephyr OS is based on a small-footprint kernel designed for use on
resource-constrained systems: from simple embedded environmental sensors and
LED wearables to sophisticated smart watches and IoT wireless gateways.&lt;/p&gt;
&lt;p&gt;The Zephyr kernel supports multiple architectures, including ARM Cortex-M,
Intel x86, ARC, Nios II, Tensilica Xtensa, and RISC-V, and a large number of
&lt;a href="http://docs.zephyrproject.org/latest/boards/index.html" rel="nofollow"&gt;supported boards&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-getting-started"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Welcome to Zephyr! See the &lt;a href="http://docs.zephyrproject.org/latest/introduction/index.html" rel="nofollow"&gt;Introduction to Zephyr&lt;/a&gt; for a high-level overview,
and the documentation's &lt;a href="http://docs.zephyrproject.org/latest/getting_started/index.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt; to start developing.&lt;/p&gt;
&lt;a name="user-content-community-support"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-community-support" class="anchor" aria-hidden="true" href="#community-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Support&lt;/h2&gt;
&lt;p&gt;Community support is provided via mailing lists and Slack; see the Resources
below for details.&lt;/p&gt;
&lt;a name="user-content-resources"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;p&gt;Here's a quick summary of resources to help you find your way around:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Help&lt;/strong&gt;: &lt;a href="https://docs.zephyrproject.org/latest/guides/getting-help.html" rel="nofollow"&gt;Asking for Help Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href="http://docs.zephyrproject.org" rel="nofollow"&gt;http://docs.zephyrproject.org&lt;/a&gt; (&lt;a href="http://docs.zephyrproject.org/latest/getting_started/index.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source Code&lt;/strong&gt;: &lt;a href="https://github.com/zephyrproject-rtos/zephyr"&gt;https://github.com/zephyrproject-rtos/zephyr&lt;/a&gt; is the main
repository; &lt;a href="https://elixir.bootlin.com/zephyr/latest/source" rel="nofollow"&gt;https://elixir.bootlin.com/zephyr/latest/source&lt;/a&gt; contains a
searchable index&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Releases&lt;/strong&gt;: &lt;a href="https://zephyrproject.org/developers/#downloads" rel="nofollow"&gt;https://zephyrproject.org/developers/#downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Samples and example code&lt;/strong&gt;: see &lt;a href="http://docs.zephyrproject.org/latest/samples/index.html" rel="nofollow"&gt;Sample and Demo Code Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mailing Lists&lt;/strong&gt;: &lt;a href="mailto:users@lists.zephyrproject.org"&gt;users@lists.zephyrproject.org&lt;/a&gt; and
&lt;a href="mailto:devel@lists.zephyrproject.org"&gt;devel@lists.zephyrproject.org&lt;/a&gt; are the main user and developer mailing lists,
respectively. You can join the developer's list and search its archives at
&lt;a href="https://lists.zephyrproject.org/g/devel" rel="nofollow"&gt;Zephyr Development mailing list&lt;/a&gt;. The other &lt;a href="https://lists.zephyrproject.org/g/main/subgroups" rel="nofollow"&gt;Zephyr mailing list
subgroups&lt;/a&gt; have their own archives and sign-up pages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nightly CI Build Status&lt;/strong&gt;: &lt;a href="https://lists.zephyrproject.org/g/builds" rel="nofollow"&gt;https://lists.zephyrproject.org/g/builds&lt;/a&gt;
The &lt;a href="mailto:builds@lists.zephyrproject.org"&gt;builds@lists.zephyrproject.org&lt;/a&gt; mailing list archives the CI
(shippable) nightly build results.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Zephyr's Slack workspace is &lt;a href="https://zephyrproject.slack.com" rel="nofollow"&gt;https://zephyrproject.slack.com&lt;/a&gt;.  Use
this &lt;a href="https://tinyurl.com/y5glwylp" rel="nofollow"&gt;Slack Invite&lt;/a&gt; to register.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contributing&lt;/strong&gt;: see the &lt;a href="http://docs.zephyrproject.org/latest/contribute/index.html" rel="nofollow"&gt;Contribution Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wiki&lt;/strong&gt;: &lt;a href="https://github.com/zephyrproject-rtos/zephyr/wiki"&gt;Zephyr GitHub wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href="https://github.com/zephyrproject-rtos/zephyr/issues"&gt;https://github.com/zephyrproject-rtos/zephyr/issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security Issues&lt;/strong&gt;: Email &lt;a href="mailto:vulnerabilities@zephyrproject.org"&gt;vulnerabilities@zephyrproject.org&lt;/a&gt; to report
security issues; also see our &lt;a href="http://docs.zephyrproject.org/latest/security/index.html" rel="nofollow"&gt;Security&lt;/a&gt; documentation. Security issues are
tracked separately at &lt;a href="https://zephyrprojectsec.atlassian.net" rel="nofollow"&gt;https://zephyrprojectsec.atlassian.net&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zephyr Project Website&lt;/strong&gt;: &lt;a href="https://zephyrproject.org" rel="nofollow"&gt;https://zephyrproject.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>zephyrproject-rtos</author><guid isPermaLink="false">https://github.com/zephyrproject-rtos/zephyr</guid><pubDate>Wed, 06 Nov 2019 00:14:00 GMT</pubDate></item><item><title>openwrt/openwrt #15 in C, Today</title><link>https://github.com/openwrt/openwrt</link><description>&lt;p&gt;&lt;i&gt;This repository is a mirror of https://git.openwrt.org/openwrt/openwrt.git It is for reference only and is not active for check-ins or for reporting issues.  We will continue to accept Pull Requests here. They will be merged via staging trees then into openwrt.git. All issues should be reported at: https://bugs.openwrt.org&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;  _______                     ________        __
 |       |.-----.-----.-----.|  |  |  |.----.|  |_
 |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|
 |_______||   __|_____|__|__||________||__|  |____|
          |__| W I R E L E S S   F R E E D O M
 -----------------------------------------------------

This is the buildsystem for the OpenWrt Linux distribution.

To build your own firmware you need a Linux, BSD or MacOSX system (case
sensitive filesystem required). Cygwin is unsupported because of the lack
of a case sensitive file system.

You need gcc, binutils, bzip2, flex, python3.5+, perl, make, find, grep, diff,
unzip, gawk, getopt, subversion, libz-dev and libc headers installed.

1. Run "./scripts/feeds update -a" to obtain all the latest package definitions
defined in feeds.conf / feeds.conf.default

2. Run "./scripts/feeds install -a" to install symlinks for all obtained
packages into package/feeds/

3. Run "make menuconfig" to select your preferred configuration for the
toolchain, target system &amp;amp; firmware packages.

4. Run "make" to build your firmware. This will download all sources, build
the cross-compile toolchain and then cross-compile the Linux kernel &amp;amp; all
chosen applications for your target system.

Sunshine!
	Your OpenWrt Community
	&lt;a href="http://www.openwrt.org" rel="nofollow"&gt;http://www.openwrt.org&lt;/a&gt;


&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>openwrt</author><guid isPermaLink="false">https://github.com/openwrt/openwrt</guid><pubDate>Wed, 06 Nov 2019 00:15:00 GMT</pubDate></item><item><title>thestr4ng3r/chiaki #16 in C, Today</title><link>https://github.com/thestr4ng3r/chiaki</link><description>&lt;p&gt;&lt;i&gt;Free and Open Source PS4 Remote Play Client&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/chiaki_wide.png"&gt;&lt;img src="assets/chiaki_wide.png" alt="Chiaki Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-chiaki" class="anchor" aria-hidden="true" href="#chiaki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chiaki&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This project is not endorsed or certified by Sony Interactive Entertainment LLC.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/thestr4ng3r/chiaki" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ba7081c5890546f7a26c5fb771f9973c048f1bd8/68747470733a2f2f7472617669732d63692e636f6d2f746865737472346e6733722f636869616b692e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.com/thestr4ng3r/chiaki.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/thestr4ng3r/chiaki" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d267934a32892b80ab5acbe236317c85e4d9fd1f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f646e6a39636d78356d6d6161617765723f7376673d74727565" alt="AppVeyor Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/dnj9cmx5mmaaawer?svg=true" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://builds.sr.ht/~thestr4ng3r/chiaki?" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e94a85745f2bd06ab4542438f2bf0793625a9f7c/68747470733a2f2f6275696c64732e73722e68742f7e746865737472346e6733722f636869616b692e737667" alt="builds.sr.ht Status" data-canonical-src="https://builds.sr.ht/~thestr4ng3r/chiaki.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chiaki is a Free and Open Source Software Client for PlayStation 4 Remote Play
for Linux, Android, macOS, Windows and potentially even more platforms.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/screenshot.png"&gt;&lt;img src="assets/screenshot.png" alt="Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Everything necessary for a full streaming session, including the initial
registration and wakeup of the console, is supported.
The following features however are yet to be implemented:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Congestion Control&lt;/li&gt;
&lt;li&gt;H264 Error Concealment (FEC and active error recovery however are implemented)&lt;/li&gt;
&lt;li&gt;Touchpad support (Triggering the Touchpad Button is currently possible by pressing &lt;code&gt;T&lt;/code&gt; on the keyboard)&lt;/li&gt;
&lt;li&gt;Rumble&lt;/li&gt;
&lt;li&gt;Configurable Keybindings&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;You can either download a pre-built release (easier) or build Chiaki from source.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-downloading-a-release" class="anchor" aria-hidden="true" href="#downloading-a-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading a Release&lt;/h3&gt;
&lt;p&gt;Builds are provided for Linux, Android, macOS and Windows.&lt;/p&gt;
&lt;p&gt;You can download them &lt;a href="https://github.com/thestr4ng3r/chiaki/releases"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: The provided file is an &lt;a href="https://appimage.org/" rel="nofollow"&gt;AppImage&lt;/a&gt;. Simply make it executable (&lt;code&gt;chmod +x &amp;lt;file&amp;gt;.AppImage&lt;/code&gt;) and run it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt;: Install from &lt;a href="https://play.google.com/store/apps/details?id=com.metallic.chiaki" rel="nofollow"&gt;Google Play&lt;/a&gt; or download the APK from GitHub.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: Drag the application from the &lt;code&gt;.dmg&lt;/code&gt; into your Applications folder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Extract the &lt;code&gt;.zip&lt;/code&gt; file and execute &lt;code&gt;chiaki.exe&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from Source&lt;/h3&gt;
&lt;p&gt;Dependencies are CMake, Qt 5 with QtMultimedia, QtOpenGL and QtSvg, FFMPEG (libavcodec with H264 is enough), libopus, OpenSSL 1.1,
protoc and the protobuf Python library (only used during compilation for Nanopb).
Then, Chiaki builds just like any other CMake project:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git submodule update --init
mkdir build &amp;amp;&amp;amp; cd build
cmake ..
make
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;If your PS4 is on your local network, is turned on or in standby mode and does not have Discovery explicitly disabled, Chiaki should find it.
Otherwise, you can add it manually.
To do so, click the "+" icon in the top right, and enter your PS4's IP address.&lt;/p&gt;
&lt;p&gt;You will then need to register your PS4 with Chiaki. You will need two more pieces of information to do this.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-obtaining-your-psn-accountid" class="anchor" aria-hidden="true" href="#obtaining-your-psn-accountid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obtaining your PSN AccountID&lt;/h3&gt;
&lt;p&gt;Starting with PS4 7.0, it is necessary to use a so-called "AccountID" as opposed to the "Online-ID" for registration (streaming itself did not change).
This ID seems to be a unique identifier for a PSN Account and it can be obtained from the PSN after logging in using OAuth.
A Python 3 script which does this is provided in &lt;a href="scripts/psn-account-id.py"&gt;scripts/psn-account-id.py&lt;/a&gt;.
Simply run it in a terminal and follow the instructions. Once you know your ID, write it down. You will likely never have to do this process again.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-obtaining-a-registration-pin" class="anchor" aria-hidden="true" href="#obtaining-a-registration-pin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obtaining a Registration PIN&lt;/h3&gt;
&lt;p&gt;To register a PS4 with a PIN, it must be put into registration mode. To do this, on your PS4, simply go to:
Settings -&amp;gt; Remote Play (ensure this is ticked) -&amp;gt; Add Device&lt;/p&gt;
&lt;p&gt;You can now double-click your PS4 in Chiaki's main window to start Remote Play.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;This project has only been made possible because of the following Open Source projects:
&lt;a href="https://github.com/radare/radare2"&gt;radare2&lt;/a&gt;,
&lt;a href="https://cutter.re/" rel="nofollow"&gt;Cutter&lt;/a&gt;,
&lt;a href="https://www.frida.re/" rel="nofollow"&gt;Frida&lt;/a&gt; and
&lt;a href="https://x64dbg.com/" rel="nofollow"&gt;x64dbg&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also thanks to &lt;a href="https://github.com/delroth"&gt;delroth&lt;/a&gt; for analyzing the registration and wakeup protocol,
&lt;a href="https://github.com/grill2010"&gt;grill2010&lt;/a&gt; for analyzing the PSN's OAuth Login,
as well as a huge thank you to &lt;a href="https://github.com/FioraAeterna"&gt;FioraAeterna&lt;/a&gt; for giving me some
extremely helpful information about FEC and error correction.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;Created by Florian Märkl.&lt;/p&gt;
&lt;p&gt;This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.&lt;/p&gt;
&lt;p&gt;This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.&lt;/p&gt;
&lt;p&gt;You should have received a copy of the GNU General Public License
along with this program.  If not, see &lt;a href="https://www.gnu.org/licenses/" rel="nofollow"&gt;https://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>thestr4ng3r</author><guid isPermaLink="false">https://github.com/thestr4ng3r/chiaki</guid><pubDate>Wed, 06 Nov 2019 00:16:00 GMT</pubDate></item><item><title>hak5darren/USB-Rubber-Ducky #17 in C, Today</title><link>https://github.com/hak5darren/USB-Rubber-Ducky</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body txt" data-path="README.txt"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;      _      _      _      USB       _      _      _
   __(.)&amp;lt; __(.)&amp;gt; __(.)=   Rubber   &amp;gt;(.)__ &amp;lt;(.)__ =(.)__
   \___)  \___)  \___)    Ducky!    (___/  (___/  (___/ 

The USB Rubber Ducky is a Human Interface Device programmable with a simple scripting language allowing penetration testers to quickly and easily craft and deploy security auditing payloads that mimic human keyboard input. The source is written in C and requires the AVR Studio 5 IDE from atmel.com/avrstudio. Hardware is commercially available at hakshop.com. Tools and payloads can be found at usbrubberducky.com. Quack!
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>hak5darren</author><guid isPermaLink="false">https://github.com/hak5darren/USB-Rubber-Ducky</guid><pubDate>Wed, 06 Nov 2019 00:17:00 GMT</pubDate></item><item><title>Tencent/TencentOS-tiny #18 in C, Today</title><link>https://github.com/Tencent/TencentOS-tiny</link><description>&lt;p&gt;&lt;i&gt;腾讯物联网终端操作系统&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./doc/picture/introduction/TencentOS_tiny_log.png"&gt;&lt;img src="./doc/picture/introduction/TencentOS_tiny_log.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Tencent/TencentOS-tiny/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/43ebe0af6641302a6fb0791f90d60986556e9229/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4253442d626c75652e737667" alt="license" data-canonical-src="http://img.shields.io/badge/license-BSD-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Tencent/TencentOS-tiny/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/a56a4d6198416d6ce12b4b534a2bf1f4ba4ff2e4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d626c75652e737667" alt="PRs Welcome" data-canonical-src="https://img.shields.io/badge/PRs-welcome-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/Tencent/TencentOS-tiny" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1a64a6b6e339472e0abe66ac5dcd031cdf25d558/68747470733a2f2f7472617669732d63692e6f72672f54656e63656e742f54656e63656e744f532d74696e792e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://travis-ci.org/Tencent/TencentOS-tiny.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="README_en.md"&gt;(English Documents Available)&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-一tencentos-tiny-简介" class="anchor" aria-hidden="true" href="#一tencentos-tiny-简介"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;一、TencentOS Tiny 简介&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cloud.tencent.com/product/tos-tiny" rel="nofollow"&gt;TencentOS tiny&lt;/a&gt;是腾讯面向物联网领域开发的实时操作系统，具有低功耗，低资源占用，模块化，安全可靠等特点，可有效提升物联网终端产品开发效率。TencentOS tiny 提供精简的 RTOS 内核，内核组件可裁剪可配置，可快速移植到多种主流 MCU (如STM32全系列)及模组芯片上。而且，基于RTOS内核提供了丰富的物联网组件，内部集成主流物联网协议栈（如 CoAP/MQTT/TLS/DTLS/LoRaWAN/NB-IoT 等），可助力物联网终端设备及业务快速接入腾讯云物联网平台。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-1tencentos-tiny整体架构" class="anchor" aria-hidden="true" href="#1tencentos-tiny整体架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1、TencentOS tiny整体架构&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./doc/picture/introduction/TencentOS_tiny_Architecture.png"&gt;&lt;img src="./doc/picture/introduction/TencentOS_tiny_Architecture.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;
TencentOS tiny 主体架构图，从下到上主要包括：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CPU 库&lt;/strong&gt; ：TencentOS tiny 支持的 CPU IP 核架构，当前主要支持 ARM Cortex M0/3/4/7。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;驱动管理层&lt;/strong&gt; ：包括板级支持包（BSP，主要由 MCU 芯片厂家开发与维护）、硬件抽象（HAL，主要由 TencentOS tiny提供，方便不同芯片的适配与移植）、设备驱动（Drivers，例如 Wi-Fi、GPRS、LoRa 等模块的驱动程序）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;内核&lt;/strong&gt; ：TencentOS tiny 实时内核包括任务管理、实时调度、时间管理、中断管理、内存管理、异常处理、软件定时器、链表、消息队列、信号量、互斥锁、事件标志等模块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IoT 协议栈&lt;/strong&gt;：TencentOS tiny 提供 lwip、AT Adapter、SAL 层，支持不同的网络硬件，例如以太网、串口 Wi-Fi、GPRS、NB-IoT、4G等通信模块。TCP/IP 网络协议栈上提供常用的物联网协议栈，例如 CoAP、MQTT，支撑终端业务快速接入腾讯云。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安全框架&lt;/strong&gt;：TencentOS tiny 为了确保物联网终端数据传输安全以及设备认证安全，提供了完整的安全解决方案。安全框架提供的 DTLS 和 TLS 安全协议，加固了 COAP 及 MQTT 的传输层，可确保物联网终端在对接腾讯云时实现安全认证和数据加密；另外针对低资源的终端硬件，安全框架还提供与腾讯云 IoTHub 配套的密钥认证方案，确保资源受限设备也能在一定程度上实现设备安全认证。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;组件框架&lt;/strong&gt;：TencentOS tiny 提供文件系统、KV 存储、自组网、JS 引擎、低功耗框架、设备框架、OTA、调试工具链等一系列组件，供用户根据业务场景选用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开放 API（规划开发中）&lt;/strong&gt;：TencentOS tiny 将在协议中间件和框架层上提供开放 API 函数，方便用户调用中间件功能，使用户无需过多关心中间件具体实现，快速对接腾讯云，实现终端业务上云的需求，期望最大程度减少终端物联网产品开发周期，节省开发成本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例应用&lt;/strong&gt;：TencentOS tiny 提供的示例代码，模块测试代码等，方便用户参考使用。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-2tencentos-tiny优势" class="anchor" aria-hidden="true" href="#2tencentos-tiny优势"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2、TencentOS tiny优势&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-1小体积" class="anchor" aria-hidden="true" href="#1小体积"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(1).小体积&lt;/h3&gt;
&lt;p&gt;最小内核：RAM 0.6KB，ROM 1.8KB
典型LoraWAN及传感器应用：RAM 3.3KB，ROM 12KB&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2低功耗" class="anchor" aria-hidden="true" href="#2低功耗"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(2).低功耗&lt;/h3&gt;
&lt;p&gt;休眠最低功耗低至2 uA
支持外设功耗管理框架&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3丰富的iot组件" class="anchor" aria-hidden="true" href="#3丰富的iot组件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(3).丰富的IoT组件&lt;/h3&gt;
&lt;p&gt;集成主流IoT协议栈
多种通信模组SAL层适配框架；
支持OTA升级
提供简单易用端云API，加速用户业务接入腾讯云&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-4可靠的安全框架" class="anchor" aria-hidden="true" href="#4可靠的安全框架"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(4).可靠的安全框架&lt;/h3&gt;
&lt;p&gt;多样化的安全分级方案
均衡安全需求&amp;amp;成本控制&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5良好的可移植性" class="anchor" aria-hidden="true" href="#5良好的可移植性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(5).良好的可移植性&lt;/h3&gt;
&lt;p&gt;内核及IoT组件高度解耦，提供标准适配层
提供自动化移植工具，提升开发效率&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-6便捷的调试手段" class="anchor" aria-hidden="true" href="#6便捷的调试手段"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(6).便捷的调试手段&lt;/h3&gt;
&lt;p&gt;提供云化的最后一屏调试功能
故障现场信息自动上传云平台，方便开发人员调试分析&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3tencentos-tiny携手合作伙伴共建iot生态" class="anchor" aria-hidden="true" href="#3tencentos-tiny携手合作伙伴共建iot生态"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3、TencentOS tiny携手合作伙伴共建IoT生态&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./doc/picture/introduction/Partners.png"&gt;&lt;img src="./doc/picture/introduction/Partners.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TencentOS tiny目前支持STM32、NXP、华大半导体、国民技术、GD32、Nordic、TI等主流MCU。当前已完成两套官方定制开发板设计，支持全系列STM32 NUCLEO官方评估板内核移植。TencentOS tiny 将携手合作伙伴为物联网终端厂家提供更优质的IoT终端软件解决方案，方便各种物联网设备快速接入腾讯云，共同扩展IoT生态，更好地支撑智慧城市、智能水表、智能家居、智能穿戴、车联网等多种行业应用。&lt;/p&gt;
&lt;p&gt;欢迎IoT相关项目合作，有合作需求的请邮件联系TencentOS tiny官方工作人员，邮箱地址 ： &lt;a href="mailto:supowang@tencent.com"&gt;supowang@tencent.com&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-二tencentos-tiny-代码目录" class="anchor" aria-hidden="true" href="#二tencentos-tiny-代码目录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;二、TencentOS tiny 代码目录&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/TencentOS-tiny-%E4%BB%A3%E7%A0%81%E7%9B%AE%E5%BD%95%E8%AF%B4%E6%98%8E.md"&gt;TencentOS tiny代码目录说明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-三tencentos-tiny-参考文档" class="anchor" aria-hidden="true" href="#三tencentos-tiny-参考文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;三、TencentOS tiny 参考文档&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-1移植指南" class="anchor" aria-hidden="true" href="#1移植指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1、移植指南&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/TencentOS-tiny-porting-guide-keil.md"&gt;TencentOS tiny移植指南（KEIL版本）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/TencentOS-tiny-porting-guide-iar.md"&gt;TencentOS tiny移植指南（IAR版本）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/TencentOS-tiny-porting-guide-gcc.md"&gt;TencentOS tiny移植指南（GCC版本）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-2tencentos-tiny-开发指南" class="anchor" aria-hidden="true" href="#2tencentos-tiny-开发指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2、TencentOS tiny 开发指南&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/4.TencentOS-tiny%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97.md"&gt;TencentOS tiny内核开发指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/5.TencentOS-tiny-SDK%E6%96%87%E6%A1%A3.md"&gt;TencentOS tiny API参考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/8.TencentOS-tiny%E5%AF%B9%E6%8E%A5%E8%85%BE%E8%AE%AF%E4%BA%91IoTHub%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97.md"&gt;TencentOS tiny对接腾讯云IoTHub开发指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-四tencentos-tiny-开源协议" class="anchor" aria-hidden="true" href="#四tencentos-tiny-开源协议"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;四、TencentOS tiny 开源协议&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;TencentOS tiny 遵循 &lt;a href="LICENSE"&gt;BSD-3开源许可协议&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-五tencentos-tiny-支持的物联网平台" class="anchor" aria-hidden="true" href="#五tencentos-tiny-支持的物联网平台"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;五、TencentOS tiny 支持的物联网平台&lt;/h1&gt;
&lt;p&gt;TencentOS tiny能支持物联网终端设备和业务快速接入&lt;a href="https://cloud.tencent.com/product/iotexplorer" rel="nofollow"&gt;腾讯云物联网平台IoT Explorer&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;TencentOS tiny结合腾讯云物联网开发平台IoT Explorer，已经构筑起连接通讯芯片到云开发的能力，加上已经建设完成的国内最大规模LoRa网络，腾讯彻底打通从芯片通讯开发、网络支撑服务，物理设备定义管理，数据分析和多场景应用开发等全链条IoT云开发服务能力，重新定义了物联网开发模式，助力亿级设备多方式多模式低门槛接入腾讯云服务。作为物联网基础设施建设服务者，腾讯将持续打造开放的物联网生态体系，促进物联网生态良性发展。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-六tencentos-tiny-快速入门参考" class="anchor" aria-hidden="true" href="#六tencentos-tiny-快速入门参考"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;六、TencentOS tiny 快速入门参考&lt;/h1&gt;
&lt;p&gt;TencentOS tiny联合合作伙伴(南京厚德物联网)设计了定制开发板，如下图：
&lt;a target="_blank" rel="noopener noreferrer" href="./doc/picture/introduction/EVB_MX.png"&gt;&lt;img src="./doc/picture/introduction/EVB_MX.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.holdiot.com/product/showproduct.php?id=8" rel="nofollow"&gt;TencentOS tiny定制开发板介绍页&lt;/a&gt;，开发者可以基于定制开发板进行快速入门学习，点击下载参考文档&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/TencentOS-tiny%E5%AE%9A%E5%88%B6%E5%BC%80%E5%8F%91%E6%9D%BF%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97.pdf"&gt;TencentOS-tiny定制开发板入门指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-七贡献代码" class="anchor" aria-hidden="true" href="#七贡献代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;七、贡献代码&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;在您自己的GitHub账户下Fork TencentOS tiny 开源项目；&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start="2"&gt;
&lt;li&gt;根据您的需求在本地clone 一份TencentOS tiny 代码；&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start="3"&gt;
&lt;li&gt;您修改或者新增功能后，push 到您fork的远程分支；&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start="4"&gt;
&lt;li&gt;创建 pull request，向TencentOS tiny官方开发分支提交合入请求；&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start="5"&gt;
&lt;li&gt;TencentOS tiny研发团队会定期review代码，通过测试后合入。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-八加入tencentos-tiny官方qq技术交流群" class="anchor" aria-hidden="true" href="#八加入tencentos-tiny官方qq技术交流群"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;八、加入TencentOS tiny官方QQ技术交流群&lt;/h1&gt;
&lt;p&gt;扫码加群，请备注TencentOS tiny开发者，工作人员会根据备注进行审核：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./doc/picture/introduction/qq.png"&gt;&lt;img src="./doc/picture/introduction/qq.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-九第三方开发者评测" class="anchor" aria-hidden="true" href="#九第三方开发者评测"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;九、第三方开发者评测&lt;/h1&gt;
&lt;p&gt;1.基于TencentOS tiny 的环境监测实战项目
&lt;a href="https://www.bilibili.com/video/av73782956?from=search&amp;amp;seid=4421984671929108231" rel="nofollow"&gt;【TencentOS tiny】环境监测实战项目最终完整版&lt;/a&gt;
感谢阿正的贡献&lt;/p&gt;
&lt;p&gt;2.基于野火stm32f103开发板上移植的TencentOS tiny 例程、源码剖析、视频讲解。
感谢CSDN博客专家杰杰的贡献&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-简单上手" class="anchor" aria-hidden="true" href="#简单上手"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;简单上手：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/101034426" rel="nofollow"&gt;超详细的 TencentOS tiny 移植到STM32F103全教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-深度源码分析" class="anchor" aria-hidden="true" href="#深度源码分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;深度源码分析：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/99618912" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（1）——task&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/99665883" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（2）——调度器&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/99687678" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（3）——队列&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/99781093" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（4）——消息队列&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/100052643" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（5）——信号量&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/100056641" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（6）——互斥锁&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/100492219" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（7）——事件&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jiejiemcu/article/details/101846089" rel="nofollow"&gt;【TencentOS tiny学习】源码分析（8）——软件定时器&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-配套例程" class="anchor" aria-hidden="true" href="#配套例程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;配套例程：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/hello-world"&gt;【TencentOS tiny学习】例程（0）——hello world&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/01-task"&gt;【TencentOS tiny学习】例程（1）——task&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/02-queue"&gt;【TencentOS tiny学习】例程（2）——队列&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/03-msg_queue"&gt;【TencentOS tiny学习】例程（3）——消息队列&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/04-sem"&gt;【TencentOS tiny学习】例程（4）——信号量&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/05-mutex"&gt;【TencentOS tiny学习】例程（5）——互斥锁&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/06-event"&gt;【TencentOS tiny学习】例程（6）——事件&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/07-timer"&gt;【TencentOS tiny学习】例程（7）——软件定时器&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/08-mmblk"&gt;【TencentOS tiny学习】例程（8）——内存池&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/09-mmheap"&gt;【TencentOS tiny学习】例程（9）——内存堆&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-视频教程" class="anchor" aria-hidden="true" href="#视频教程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;视频教程：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596?from=search&amp;amp;seid=10160676184801585522" rel="nofollow"&gt;【TencentOS tiny学习】视频汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=1" rel="nofollow"&gt;【视频】01-初识TencentOS tiny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=2" rel="nofollow"&gt;【视频】02-TencentOS tiny基础知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=3" rel="nofollow"&gt;【视频】03-TencentOS tiny移植&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=4" rel="nofollow"&gt;【视频】04-TencentOS tiny任务-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=5" rel="nofollow"&gt;【视频】05-TencentOS tiny任务-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=6" rel="nofollow"&gt;【视频】06-TencentOS tiny队列-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=7" rel="nofollow"&gt;【视频】07-TencentOS tiny队列-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=8" rel="nofollow"&gt;【视频】08-TencentOS tiny消息队列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=9" rel="nofollow"&gt;【视频】09-TencentOS tiny信号量-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=10" rel="nofollow"&gt;【视频】10-TencentOS tiny信号量-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=11" rel="nofollow"&gt;【视频】11-TencentOS tiny互斥锁-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=12" rel="nofollow"&gt;【视频】12-TencentOS tiny互斥锁-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=13" rel="nofollow"&gt;【视频】13-TencentOS tiny互斥锁-3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=14" rel="nofollow"&gt;【视频】14-TencentOS tiny事件-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=15" rel="nofollow"&gt;【视频】15-TencentOS tiny事件-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=16" rel="nofollow"&gt;【视频】16-TencentOS tiny软件定时器-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=11" rel="nofollow"&gt;【视频】17-TencentOS tiny软件定时器-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/av70478596/?p=18" rel="nofollow"&gt;【视频】18-TencentOS tiny软件定时器-3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-相关ppt资料" class="anchor" aria-hidden="true" href="#相关ppt资料"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;相关PPT资料：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jiejieTop/TencentOS-Demo/tree/master/PPT"&gt;【TencentOS tiny学习】视频PPT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Tencent</author><guid isPermaLink="false">https://github.com/Tencent/TencentOS-tiny</guid><pubDate>Wed, 06 Nov 2019 00:18:00 GMT</pubDate></item><item><title>chyyuu/ucore_os_lab #19 in C, Today</title><link>https://github.com/chyyuu/ucore_os_lab</link><description>&lt;p&gt;&lt;i&gt; os kernel labs  for operating systems course in Tsinghua University.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INTRODUCTION&lt;/h1&gt;
&lt;p&gt;ucore os labs was used as OS Experiments in OS Course Of Dept. of Computer Science &amp;amp; Technology, Tsinghua University.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chyyuu.gitbooks.io/ucore_os_docs/content/" rel="nofollow"&gt;ucore os lab docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NEWS&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2019.09.11: &lt;a href="http://os.cs.tsinghua.edu.cn/oscourse/OsTrain2019" rel="nofollow"&gt;OS Trainning Course Autumn Semester&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019.07.07: &lt;a href="https://github.com/rcore-os/rCore/wiki/tutorial"&gt;Tutorial of rCore Summer of Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019.03.01: &lt;a href="https://github.com/LearningOS/rcore_step_by_step"&gt;step_by_step rcore os labs from scratch&lt;/a&gt; is in progress. Thanks Qingling Pan, Fengyuan Liu's great work!&lt;/li&gt;
&lt;li&gt;2019.01.19: &lt;a href="https://github.com/oscourse-tsinghua/rcore_plus/tree/lab8-rv32"&gt;rcore os labs(pre-alpha version)&lt;/a&gt; on RISC-V(32bit) were released. Thanks Runji Wang, Wei Zhang, Zhenyang Dai, Jiajie Chen, Yuekai Jia, Cheng Lu...'s great work!&lt;/li&gt;
&lt;li&gt;2019.01.19: &lt;a href="https://github.com/oscourse-tsinghua/rcore_plus/tree/lab8-aarch64"&gt;rcore os labs(pre-pre-alpha version)&lt;/a&gt; on Raspberry Pi(AARCH 64bit) were released. Thanks Yuekai Jia, Runji Wang, Jiajie Chen...'s great work!&lt;/li&gt;
&lt;li&gt;2018.04.03：ucore os labs were ported on RISC-V(64bit) CPU（privileged arch spec 1.10). You can access &lt;a href="https://github.com/chyyuu/ucore_os_lab/tree/riscv64-priv-1.10"&gt;repo's riscv64-priv-1.10 branch&lt;/a&gt;. Thanks Zhengxing Shi's great work!&lt;/li&gt;
&lt;li&gt;2018.03.18: Weixiao Huang provided &lt;a href="https://github.com/weixiao-huang/silver-spoon"&gt;https://github.com/weixiao-huang/silver-spoon&lt;/a&gt; to support os labs in docker environment on windows/macos/linux. &lt;a href="https://github.com/weixiao-huang/silver-spoon/tree/master/docs"&gt;details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018.02.03：ucore os labs were ported on RISC-V(32bit) CPU（privileged arch spec 1.10). You can access &lt;a href="https://github.com/chyyuu/ucore_os_lab/tree/riscv32-priv-1.10"&gt;repo's riscv32-priv-1.10 branch&lt;/a&gt;. Thanks  Wei Zhang's great work!&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-maintainers" class="anchor" aria-hidden="true" href="#maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MAINTAINERS&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-os-course-for-dept-cs-in-tsinghua-univ-and-mooc-os-course" class="anchor" aria-hidden="true" href="#os-course-for-dept-cs-in-tsinghua-univ-and-mooc-os-course"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OS course for Dept. CS. in Tsinghua Univ., and MOOC OS course&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Chen, Yu: &lt;a href="mailto:yuchen@tsinghua.edu.cn"&gt;yuchen@tsinghua.edu.cn&lt;/a&gt; &lt;a href="http://soft.cs.tsinghua.edu.cn/~chen" rel="nofollow"&gt;http://soft.cs.tsinghua.edu.cn/~chen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Xiang, Yong: &lt;a href="mailto:xyong@tsinghua.edu.cn"&gt;xyong@tsinghua.edu.cn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mao, Junjie: &lt;a href="mailto:eternal.n08@gmail.com"&gt;eternal.n08@gmail.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Zhang, Wei: &lt;a href="mailto:zhangwei15@mails.tsinghua.edu.cn"&gt;zhangwei15@mails.tsinghua.edu.cn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wang, Runji: &lt;a href="mailto:wangrunji0408@163.com"&gt;wangrunji0408@163.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jia, Yuekai: &lt;a href="mailto:jiayk15@mails.tsinghua.edu.cn"&gt;jiayk15@mails.tsinghua.edu.cn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CONTENTS&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-labs-info" class="anchor" aria-hidden="true" href="#labs-info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;labs info&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;lab0: preparing
lab1: boot/protect mode/stack/interrupt
lab2: physical memory management
lab3: virtual memory management
lab4: kernel thread management
lab5: user process management
lab6: scheduling
lab7: mutex/sync
lab8: filesystem
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-tested-environment" class="anchor" aria-hidden="true" href="#tested-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TESTED ENVIRONMENT&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;UBUNTU 16.04 x86-64: GCC-7.3 
UBUNTU 14.04+: GCC-4.8.2+ CLANG-3.5+
FEDORA 20+: GCC-4.8.2+
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-exercise-steps" class="anchor" aria-hidden="true" href="#exercise-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EXERCISE STEPS&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;0 Get the newest os lab src code/docs.(Insure you can connect to github in ubuntu running on VrtualBox)
0.1 If you try to get all code
  $rm -rf ucore_lab
  $git clone git://github.com/chyyuu/ucore_os_lab.git
  $cd ucore_lab
0.2 If you cloned ucore_lab and only try to get the updated code
  $cd ucore_os_lab
  $git pull
1 $cd labX  
2 read code (specially the modified or added files)
3 add your code
4 compile your code
  $make
5 check your code
  $make qemu
OR
  $make grade

6 debug your code
  $make debug

7 handin your code
  $make handin
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-option" class="anchor" aria-hidden="true" href="#option"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OPTION&lt;/h1&gt;
&lt;p&gt;Now, ucore suuport LLVM/Clang-3.5 +
in step4:
$ USELLVM=1 make
then you will use clang to compile ucore&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-graderank" class="anchor" aria-hidden="true" href="#graderank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GRADE/RANK&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;Superman: Finish all OS labs in one month by yourself
Master: Finish all OS labs in two month by yourself
Veteran: Finish all OS labs in three month by yourself
Apprentice: Finish all OS labs in one semester with other guy's help
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-resource-repository" class="anchor" aria-hidden="true" href="#resource-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RESOURCE REPOSITORY&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;Basic OS labs (for students who learn OS course)
The newest lab codes and docs is in https://github.com/chyyuu/ucore_os_lab

Advanced OS labs (for OS geeks or hackers or guys with Superman/Master Rank)
The newest lab codes and docs is in https://github.com/chyyuu/ucore_plus
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-ucorers-contributors" class="anchor" aria-hidden="true" href="#ucorers-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UCORERS (Contributors)&lt;/h1&gt;
&lt;p&gt;Junjie Mao, Yuheng Chen, Cong Liu, Yang Yang, Zhun Qu, Shengwei Ren, Wenlei Zhu, Cao Zhang, Tong Sen, Xu Chen,
Cang Nan, Yujian Fang, Wentao Han, Kaichen Zhang, Xiaolin Guo, Tianfan Xue, Gang Hu, Cao Liu, Yu Su,Xinhao Yuan, Wei Zhang, Kaixiang Lei...&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-join-us-os-research-group-in-tsinghua-univ" class="anchor" aria-hidden="true" href="#join-us-os-research-group-in-tsinghua-univ"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join us, OS research group in Tsinghua Univ.&lt;/h1&gt;
&lt;p&gt;If you are interested in OS Research/Development, we welcome you to joining our OS research group:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS performance improvement for multicore architecture&lt;/li&gt;
&lt;li&gt;fuzzing/symbolic execution technologies on OS for finding kernel bugs&lt;/li&gt;
&lt;li&gt;improving performance and reliability on OS subsystem, such as device driver&lt;/li&gt;
&lt;li&gt;design OS specification and build correct OS&lt;/li&gt;
&lt;li&gt;OS &amp;amp; CPU(such as RISC-V）codesign&lt;/li&gt;
&lt;li&gt;other topics about OS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Just like &lt;a href="https://github.com/chyyuu/aos_course/blob/master/readinglist.md"&gt;other great OS researchs &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Send me email!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-other-info" class="anchor" aria-hidden="true" href="#other-info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OTHER INFO&lt;/h1&gt;
&lt;p&gt;ucore is a teaching OS which is derived from xv6&amp;amp;jos in MIT, OS161 in Harvard and Linux.&lt;/p&gt;
&lt;p&gt;ucore was developed and used in Department of Computer Science &amp;amp; Technology, Institute for Interdisciplinary Information Sciences, Tsinghua University.&lt;/p&gt;
&lt;p&gt;The codes in the files that constitute xv6&amp;amp;jos are Copyright (2006-Current) Frans Kaashoek, Robert Morris, and Russ Cox and uses MIT License.&lt;/p&gt;
&lt;p&gt;The codes in the files that constitute OS/161 are written by David A. Holland.&lt;/p&gt;
&lt;p&gt;The codes in the files that constitute ucore are Copyright (2010-Current) Yu Chen, Naizheng Wang, Yong Xiang and uses GPL License.&lt;/p&gt;
&lt;p&gt;The documents in the files that constitute ucore are Copyright (2010-Current) Yu Chen, Yong Xiang and uses Creative Commons Attribution/Share-Alike (CC-BY-SA) License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>chyyuu</author><guid isPermaLink="false">https://github.com/chyyuu/ucore_os_lab</guid><pubDate>Wed, 06 Nov 2019 00:19:00 GMT</pubDate></item><item><title>open62541/open62541 #20 in C, Today</title><link>https://github.com/open62541/open62541</link><description>&lt;p&gt;&lt;i&gt;Open source implementation of OPC UA (OPC Unified Architecture) aka IEC 62541 licensed under Mozilla Public License v2.0&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-open62541" class="anchor" aria-hidden="true" href="#open62541"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;open62541&lt;/h1&gt;
&lt;p&gt;open62541 (&lt;a href="http://open62541.org" rel="nofollow"&gt;http://open62541.org&lt;/a&gt;) is an open source and free implementation of OPC UA (OPC Unified Architecture) written in the common subset of the C99 and C++98 languages. The library is usable with all major compilers and provides the necessary tools to implement dedicated OPC UA clients and servers, or to integrate OPC UA-based communication into existing applications. open62541 library is platform independent. All platform-specific functionality is implemented via exchangeable plugins. Plugin implementations are provided for the major operating systems.&lt;/p&gt;
&lt;p&gt;open62541 is licensed under the Mozilla Public License v2.0 (MPLv2). This allows the open62541 library to be combined and distributed with any proprietary software. Only changes to the open62541 library itself need to be licensed under the MPLv2 when copied and distributed. The plugins, as well as the server and client examples are in the public domain (CC0 license). They can be reused under any license and changes do not have to be published.&lt;/p&gt;
&lt;p&gt;The library is &lt;a href="https://github.com/open62541/open62541/releases"&gt;available&lt;/a&gt; in standard source and binary form. In addition, the single-file source distribution merges the entire library into a single .c and .h file that can be easily added to existing projects. Example server and client implementations can be found in the &lt;a href="examples/"&gt;/examples&lt;/a&gt; directory or further down on this page.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-information" class="anchor" aria-hidden="true" href="#project-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Information&lt;/h2&gt;
&lt;p&gt;Build Status:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/open62541/open62541" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c2d97e2e69bc8ecba410457db24f2ea2b257cb57/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6f70656e36323534312f6f70656e36323534312f6d61737465722e737667" alt="Build Status" data-canonical-src="https://img.shields.io/travis/open62541/open62541/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/open62541/open62541/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c7509a67b46043da60228274825f2420af1b3d3/68747470733a2f2f6465762e617a7572652e636f6d2f6f70656e36323534312f6f70656e36323534312f5f617069732f6275696c642f7374617475732f6f70656e36323534312e6f70656e36323534313f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/open62541/open62541/_apis/build/status/open62541.open62541?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/open62541/open62541/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/149408d0e1a3f92ee0bd413c408227d2fa21f9c9/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6f70656e36323534312f6f70656e36323534313f6272616e63683d6d6173746572267376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/open62541/open62541?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cloud.docker.com/u/open62541/repository/docker/open62541/open62541" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0cddba3c48e0e82a79b10e0abcf0b2969f308ee1/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f636c6f75642f6275696c642f6f70656e36323534312f6f70656e3632353431" alt="Build Status" data-canonical-src="https://img.shields.io/docker/cloud/build/open62541/open62541" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Code Quality:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:open62541" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ccc4b74836567c48b2341350512b5d6ee24c65c2/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f6f70656e36323534312e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/open62541.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/app/open62541/open62541?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=open62541/open62541&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7297c95a13b74d904e0b3a3d89cb0001c51817f6/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3638616430386538393736323463373761363466633262653636636137623530" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/Grade/68ad08e897624c77a64fc2be66ca7b50" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/open62541/open62541/alerts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e4ccf2cf7aa5dc090879541731d0be3124a8837d/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f6f70656e36323534312f6f70656e36323534312e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Total Alerts" data-canonical-src="https://img.shields.io/lgtm/alerts/g/open62541/open62541.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/open62541/open62541?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ddc4d088c4575083801e059c51ea5c36cdb11228/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6f70656e36323534312f6f70656e36323534312f6d61737465722e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/open62541/open62541/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/open62541/open62541" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e920e4fe48e34d7e0a48dd8d7cb5207caba766f5/68747470733a2f2f636f6465636f762e696f2f67682f6f70656e36323534312f6f70656e36323534312f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/open62541/open62541/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/open62541/open62541/context:cpp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca12132995ead07d667bee9038e6f935e4f73447/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f672f6f70656e36323534312f6f70656e36323534312e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Code Quality: Cpp" data-canonical-src="https://img.shields.io/lgtm/grade/cpp/g/open62541/open62541.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;General Project Info:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.openhub.net/p/open62541/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c1318052dbe3571f016342a106a9fbfac1ffb8cc/68747470733a2f2f7777772e6f70656e6875622e6e65742f702f6f70656e36323534312f776964676574732f70726f6a6563745f7468696e5f62616467652e676966" alt="Open Hub Project Status" data-canonical-src="https://www.openhub.net/p/open62541/widgets/project_thin_badge.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/open62541/open62541/releases"&gt;&lt;img src="https://camo.githubusercontent.com/6480661ab278e3cdf9b2c8683bf94157c7478b81/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6f70656e36323534312f6f70656e36323534312f746f74616c2e737667" alt="Overall Downloads" data-canonical-src="https://img.shields.io/github/downloads/open62541/open62541/total.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features-and-certification" class="anchor" aria-hidden="true" href="#features-and-certification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features and Certification&lt;/h3&gt;
&lt;p&gt;open62541 implements the OPC UA binary protocol stack as well as a client and server SDK. The final server binaries can be well under 100kb, depending on the selected features and the size of the information model.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Communication Stack
&lt;ul&gt;
&lt;li&gt;OPC UA binary protocol&lt;/li&gt;
&lt;li&gt;OPC UA JSON encoding&lt;/li&gt;
&lt;li&gt;Secure communication with encrypted messages&lt;/li&gt;
&lt;li&gt;Exchangeable network layer (plugin) for using custom networking APIs (e.g. on embedded targets)&lt;/li&gt;
&lt;li&gt;Support for generating data types from standard XML definitions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Server
&lt;ul&gt;
&lt;li&gt;Support for all OPC UA node types&lt;/li&gt;
&lt;li&gt;Access control for individual nodes&lt;/li&gt;
&lt;li&gt;Support for generating server-side information models from standard XML definitions (nodesets)&lt;/li&gt;
&lt;li&gt;Support for adding and removing nodes and references also at runtime.&lt;/li&gt;
&lt;li&gt;Support for inheritance and instantiation of object- and variable-types (custom constructor/destructor, instantiation of child nodes)&lt;/li&gt;
&lt;li&gt;Support for subscriptions/monitoreditems (data change notifications and events)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Client
&lt;ul&gt;
&lt;li&gt;All OPC UA services supported&lt;/li&gt;
&lt;li&gt;Asynchronous service requests&lt;/li&gt;
&lt;li&gt;Background handling of subscriptions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Publish/Subscribe
&lt;ul&gt;
&lt;li&gt;UADP Binary protocol with UDP-multicast or Ethernet communication&lt;/li&gt;
&lt;li&gt;PubSub JSON encoding&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-official-certification" class="anchor" aria-hidden="true" href="#official-certification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Certification&lt;/h3&gt;
&lt;p&gt;The sample server (server_ctt) built using open62541 v1.0 is in conformance with the 'Micro Embedded Device Server' Profile of OPC Foundation supporting OPC UA client/server communication, subscriptions, method calls and security (encryption) with the security policies 'Basic128Rsa15', 'Basic256' and 'Basic256Sha256' and the facets 'method server' and 'node management'. See &lt;a href="https://open62541.org/certified-sdk" rel="nofollow"&gt;https://open62541.org/certified-sdk&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;PubSub (UADP) is implemented in open62541. But the feature cannot be certified at this point in time (Sep-2019) due to the lack of official test cases and testing tools.&lt;/p&gt;
&lt;p&gt;During development, the Conformance Testing Tools (CTT) of the OPC Foundation are regularly applied.
The CTT configuration and results are tracked at &lt;a href="https://github.com/open62541/open62541-ctt"&gt;https://github.com/open62541/open62541-ctt&lt;/a&gt;. The OPC UA profiles under regular test in the CTT are currently:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Micro Embedded Device Server&lt;/li&gt;
&lt;li&gt;Method Server Facet&lt;/li&gt;
&lt;li&gt;Node Management Facet&lt;/li&gt;
&lt;li&gt;Security Policies
&lt;ul&gt;
&lt;li&gt;Basic128Rsa15&lt;/li&gt;
&lt;li&gt;Basic256&lt;/li&gt;
&lt;li&gt;Basic256Sha256&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;User Tokens
&lt;ul&gt;
&lt;li&gt;Anonymous Facet&lt;/li&gt;
&lt;li&gt;User Name Password Server Facet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the page on &lt;a href="FEATURES.md"&gt;open62541 Features&lt;/a&gt; for an in-depth look at the support for the conformance units that make up the OPC UA profiles.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;On most systems, open62541 requires the C standard library only. For dependencies during the build process, see the following list and the &lt;a href="https://open62541.org/doc/current/building.html" rel="nofollow"&gt;build documentation&lt;/a&gt; for details.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Core Library: The core library has no dependencies besides the C99 standard headers.&lt;/li&gt;
&lt;li&gt;Default Plugins: The default plugins use the POSIX interfaces for networking and accessing the system clock. Ports to different (embedded) architectures are achieved by customizing the plugins.&lt;/li&gt;
&lt;li&gt;Building and Code Generation: The build environment is generated via CMake. Some code is auto-generated from XML definitions that are part of the OPC UA standard. The code generation scripts run with both Python 2 and 3.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;
Specific optional features are dependent on third-party libraries. These are all listed under the &lt;code&gt;deps/&lt;/code&gt; folder.
Depending on the selected feature set, some of these libraries will be included in the resulting library.&lt;/p&gt;
&lt;p&gt;More information on the third-party libraries can be found in the corresponding &lt;a href="deps/README.md"&gt;deps/README.md&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-code-quality" class="anchor" aria-hidden="true" href="#code-quality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Quality&lt;/h3&gt;
&lt;p&gt;We emphasize code quality. The following quality metrics are continuously checked and are ensured to hold before an official release is made:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zero errors indicated by the Compliance Testing Tool (CTT) of the OPC Foundation for the supported features&lt;/li&gt;
&lt;li&gt;Zero compiler warnings from GCC/Clang/MSVC with very strict compilation flags&lt;/li&gt;
&lt;li&gt;Zero issues indicated by unit tests (more than 80% coverage)&lt;/li&gt;
&lt;li&gt;Zero issues indicated by clang-analyzer, clang-tidy, cpp-check and the Codacy static code analysis tools&lt;/li&gt;
&lt;li&gt;Zero unresolved issues from fuzzing the library in Google's oss-fuzz infrastructure&lt;/li&gt;
&lt;li&gt;Zero issues indicated by Valgrind (Linux), DrMemory (Windows) and Clang AddressSanitizer / MemorySanitizer for the CTT tests, unit tests and fuzzing&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-documentation-and-support" class="anchor" aria-hidden="true" href="#documentation-and-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation and Support&lt;/h3&gt;
&lt;p&gt;A general introduction to OPC UA and the open62541 documentation can be found at &lt;a href="http://open62541.org/doc/current" rel="nofollow"&gt;http://open62541.org/doc/current&lt;/a&gt;.
Past releases of the library can be downloaded at &lt;a href="https://github.com/open62541/open62541/releases"&gt;https://github.com/open62541/open62541/releases&lt;/a&gt;.
To use the latest improvements, download a nightly build of the &lt;em&gt;single-file distribution&lt;/em&gt; (the entire library merged into a single source and header file) from &lt;a href="http://open62541.org/releases" rel="nofollow"&gt;http://open62541.org/releases&lt;/a&gt;. Nightly builds of MSVC binaries of the library are available &lt;a href="https://ci.appveyor.com/project/open62541/open62541/build/artifacts" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For individual discussion and support, use the following channels:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;a href="https://groups.google.com/d/forum/open62541" rel="nofollow"&gt;mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;our &lt;a href="http://webchat.freenode.net/?channels=%23open62541" rel="nofollow"&gt;IRC channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the &lt;a href="https://github.com/open62541/open62541/issues"&gt;bugtracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We want to foster an open and welcoming community. Please take our &lt;a href="CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt; into regard.&lt;/p&gt;
&lt;p&gt;Jointly with the overall open62541 community, the core maintainers steer the long-term development. The current core maintainers are (as of April 2018, in alphabetical order):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chris-Paul Iatrou (Dresden University of Technology, Chair for Process Control Systems Engineering)&lt;/li&gt;
&lt;li&gt;Florian Palm (RWTH Aachen University, Chair of Process Control Engineering)&lt;/li&gt;
&lt;li&gt;Julius Pfrommer (Fraunhofer IOSB, Karlsruhe)&lt;/li&gt;
&lt;li&gt;Stefan Profanter (fortiss, Munich)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-support--development" class="anchor" aria-hidden="true" href="#support--development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support &amp;amp; Development&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-commercial-support" class="anchor" aria-hidden="true" href="#commercial-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commercial Support&lt;/h3&gt;
&lt;p&gt;The open62541 community handles support requests for the open source library and its development. Custom development and individual support is provided by commercial partners that are affiliated with open62541:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kalycito.com/landing/open62541-commercial-partner" rel="nofollow"&gt;Kalycito Infotech, Tamil Nadu, INDIA&lt;/a&gt; for embedded and realtime IIoT applications (Contact: &lt;a href="mailto:enterprise.services@kalycito.com"&gt;enterprise.services@kalycito.com&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.basyskom.com/" rel="nofollow"&gt;basysKom GmbH, Darmstadt, Germany&lt;/a&gt; Software Engineering for Embedded Systems. (Contact: &lt;a href="mailto:info@basysKom.com"&gt;info@basysKom.com&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For custom development that shall eventually become part of the open62541 library, please keep one of the core maintainers in the loop. Again, please note that all changes to files that are already licensed under the MPLv2 automatically become MPLv2 as well. Static linking of the open62541 library with code under a different license is possible. All architecture-specific code is implemented in the form of exchangeable plugins under a very permissible CC0 license.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h3&gt;
&lt;p&gt;As an open source project, new contributors are encouraged to help improve open62541. The following are good starting points for new contributors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/open62541/open62541/issues"&gt;Report bugs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improve the &lt;a href="http://open62541.org/doc/current" rel="nofollow"&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Work on issues marked as "&lt;a href="https://github.com/open62541/open62541/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;good first issue&lt;/a&gt;"&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-success-stories-and-users-of-open62541" class="anchor" aria-hidden="true" href="#success-stories-and-users-of-open62541"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Success Stories and Users of open62541&lt;/h3&gt;
&lt;p&gt;A list of projects and companies using our open62541 stack can be found in our Wiki:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/open62541/open62541/wiki/References-to-open62541"&gt;https://github.com/open62541/open62541/wiki/References-to-open62541&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-and-code-usage" class="anchor" aria-hidden="true" href="#installation-and-code-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation and code usage&lt;/h2&gt;
&lt;p&gt;For every release, we provide some pre-packed release packages which you can directly use in your compile infrastructure.&lt;/p&gt;
&lt;p&gt;Have a look at the &lt;a href="https://github.com/open62541/open62541/releases"&gt;release page&lt;/a&gt; and the corresponding attached assets.&lt;/p&gt;
&lt;p&gt;A more detailed explanation on how to install the open62541 SDK is given in our &lt;a href="https://open62541.org/doc/current/installing.html" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can not directly download a .zip package from the main branches using the Github UI, since then some of the submodules and version strings are missing.
Therefore you have three options to install and use this stack:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Recommended:&lt;/strong&gt; Use any of the prepared packages attached to every release or in the package repository of your distro (if available).&lt;br&gt;
Please check the install guide for more info.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download a .zip package of special &lt;code&gt;pack/&lt;/code&gt; branches.&lt;br&gt;
These pack branches are up-to-date with the corresponding base branches, but already have the submodules in-place and the version string set correctly.&lt;br&gt;
Here are some direct download links for the current pack branches:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/open62541/open62541/archive/pack/master.zip"&gt;pack/master.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/open62541/open62541/archive/pack/1.0.zip"&gt;pack/1.0.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone this repository and initialize all the submodules using &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;. Then either use &lt;code&gt;make install&lt;/code&gt; or setup your CMake project correspondingly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;A complete list of examples can be found in the &lt;a href="https://github.com/open62541/open62541/tree/master/examples"&gt;examples directory&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To build the examples, we recommend to install the open62541 project as mentioned in previous section.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example-server-implementation" class="anchor" aria-hidden="true" href="#example-server-implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Server Implementation&lt;/h3&gt;
&lt;p&gt;The following simple server example can be built using gcc, after you installed open62541 on your system.&lt;/p&gt;
&lt;p&gt;Using the GCC compiler, just run &lt;code&gt;gcc -std=c99 -lopen62541 -DUA_ARCHITECTURE_POSIX &amp;lt;server.c&amp;gt; -o server&lt;/code&gt; (under Windows you may need to add &lt;code&gt; -lws2_32&lt;/code&gt;
and change &lt;code&gt;-DUA_ARCHITECTURE_POSIX&lt;/code&gt; to &lt;code&gt;-DUA_ARCHITECTURE_WIN32&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;signal.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;open62541/server.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;open62541/server_config_default.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

UA_Boolean running = &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;signalHandler&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; sig) {
    running = &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
}

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt;** argv)
{
    &lt;span class="pl-c1"&gt;signal&lt;/span&gt;(SIGINT, signalHandler); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; catch ctrl-c &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Create a server listening on port 4840 &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    UA_Server *server = &lt;span class="pl-c1"&gt;UA_Server_new&lt;/span&gt;();
    &lt;span class="pl-c1"&gt;UA_ServerConfig_setDefault&lt;/span&gt;(&lt;span class="pl-c1"&gt;UA_Server_getConfig&lt;/span&gt;(server));

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Add a variable node &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; 1) Define the node attributes &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    UA_VariableAttributes attr = UA_VariableAttributes_default;
    attr.&lt;span class="pl-smi"&gt;displayName&lt;/span&gt; = &lt;span class="pl-c1"&gt;UA_LOCALIZEDTEXT&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;en-US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the answer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    UA_Int32 myInteger = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;
    &lt;span class="pl-c1"&gt;UA_Variant_setScalar&lt;/span&gt;(&amp;amp;attr.&lt;span class="pl-smi"&gt;value&lt;/span&gt;, &amp;amp;myInteger, &amp;amp;UA_TYPES[UA_TYPES_INT32]);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; 2) Define where the node shall be added with which browsename &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    UA_NodeId newNodeId = &lt;span class="pl-c1"&gt;UA_NODEID_STRING&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the.answer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    UA_NodeId parentNodeId = &lt;span class="pl-c1"&gt;UA_NODEID_NUMERIC&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, UA_NS0ID_OBJECTSFOLDER);
    UA_NodeId parentReferenceNodeId = &lt;span class="pl-c1"&gt;UA_NODEID_NUMERIC&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, UA_NS0ID_ORGANIZES);
    UA_NodeId variableType = UA_NODEID_NULL; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; take the default variable type &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    UA_QualifiedName browseName = &lt;span class="pl-c1"&gt;UA_QUALIFIEDNAME&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the answer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; 3) Add the node &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;UA_Server_addVariableNode&lt;/span&gt;(server, newNodeId, parentNodeId, parentReferenceNodeId,
                              browseName, variableType, attr, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Run the server loop &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    UA_StatusCode status = &lt;span class="pl-c1"&gt;UA_Server_run&lt;/span&gt;(server, &amp;amp;running);

    &lt;span class="pl-c1"&gt;UA_Server_delete&lt;/span&gt;(server);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; status;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-example-client-implementation" class="anchor" aria-hidden="true" href="#example-client-implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Client Implementation&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;stdio.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;open62541/client.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;open62541/client_config_default.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;open62541/client_highlevel.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt; *argv[])
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Create a client and connect &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    UA_Client *client = &lt;span class="pl-c1"&gt;UA_Client_new&lt;/span&gt;();
    &lt;span class="pl-c1"&gt;UA_ClientConfig_setDefault&lt;/span&gt;(&lt;span class="pl-c1"&gt;UA_Client_getConfig&lt;/span&gt;(client));
    UA_StatusCode status = &lt;span class="pl-c1"&gt;UA_Client_connect&lt;/span&gt;(client, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;opc.tcp://localhost:4840&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt;(status != UA_STATUSCODE_GOOD) {
        &lt;span class="pl-c1"&gt;UA_Client_delete&lt;/span&gt;(client);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; status;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Read the value attribute of the node. UA_Client_readValueAttribute is a&lt;/span&gt;
&lt;span class="pl-c"&gt;     * wrapper for the raw read service available as UA_Client_Service_read. &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    UA_Variant value; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Variants can hold scalar values and arrays of any type &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;UA_Variant_init&lt;/span&gt;(&amp;amp;value);
    status = &lt;span class="pl-c1"&gt;UA_Client_readValueAttribute&lt;/span&gt;(client, &lt;span class="pl-c1"&gt;UA_NODEID_STRING&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the.answer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &amp;amp;value);
    &lt;span class="pl-k"&gt;if&lt;/span&gt;(status == UA_STATUSCODE_GOOD &amp;amp;&amp;amp;
       &lt;span class="pl-c1"&gt;UA_Variant_hasScalarType&lt;/span&gt;(&amp;amp;value, &amp;amp;UA_TYPES[UA_TYPES_INT32])) {
        &lt;span class="pl-c1"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the value is: &lt;span class="pl-c1"&gt;%i&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, *(UA_Int32*)value.&lt;span class="pl-smi"&gt;data&lt;/span&gt;);
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Clean up &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;UA_Variant_deleteMembers&lt;/span&gt;(&amp;amp;value);
    &lt;span class="pl-c1"&gt;UA_Client_delete&lt;/span&gt;(client); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Disconnects the client internally &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; status;
}&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>open62541</author><guid isPermaLink="false">https://github.com/open62541/open62541</guid><pubDate>Wed, 06 Nov 2019 00:20:00 GMT</pubDate></item><item><title>LiteOS/LiteOS #21 in C, Today</title><link>https://github.com/LiteOS/LiteOS</link><description>&lt;p&gt;&lt;i&gt;code and manual&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/LiteOS/LiteOS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e9d8ae8cd3466abc6e654c7b83638191975af34/68747470733a2f2f7472617669732d63692e6f72672f4c6974654f532f4c6974654f532e7376673f6272616e63683d646576656c6f70" alt="Build Status" data-canonical-src="https://travis-ci.org/LiteOS/LiteOS.svg?branch=develop" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-huawei-liteos简介" class="anchor" aria-hidden="true" href="#huawei-liteos简介"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Huawei LiteOS简介&lt;/h2&gt;
&lt;p&gt;Huawei LiteOS是华为面向物联网领域开发的一个基于实时内核的轻量级操作系统。本项目属于华为物联网操作系统&lt;a href="http://developer.huawei.com/ict/cn/site-iot/product/liteos" rel="nofollow"&gt;Huawei LiteOS&lt;/a&gt;源码，现有基础内核支持任务管理、内存管理、时间管理、通信机制、中断管理、队列管理、事件管理、定时器等操作系统基础组件，更好地支持低功耗场景，支持tickless机制，支持定时器对齐。&lt;/p&gt;
&lt;p&gt;同时提供端云协同能力，集成了LwM2M、CoAP、mbedtls、LwIP全套IoT互联协议栈，且在LwM2M的基础上，提供了AgentTiny模块，用户只需关注自身的应用，而不必关注LwM2M实现细节，直接使用AgentTiny封装的接口即可简单快速实现与云平台安全可靠的连接。&lt;/p&gt;
&lt;p&gt;Huawei LiteOS自开源社区发布以来，围绕NB-IoT物联网市场从技术、生态、解决方案、商用支持等多维度使能合作伙伴，构建开源的物联网生态,目前已经聚合了30+ MCU和解决方案合作伙伴，共同推出一批开源开发套件和行业解决方案，帮助众多行业客户快速的推出物联网终端和服务，客户涵盖抄表、停车、路灯、环保、共享单车、物流等众多行业，为开发者提供 “一站式” 完整软件平台，有效降低开发门槛、缩短开发周期。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-liteos-代码导读" class="anchor" aria-hidden="true" href="#liteos-代码导读"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LiteOS 代码导读&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/LiteOS_Code_Info.md"&gt;LiteOS内核源代码目录说明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该文档描述的是LiteOS内核源代码的详细信息。通过此文档读者可以了解LiteOS的源代码结构，以及LiteOS的main()函数的功能。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-liteos-开发指南" class="anchor" aria-hidden="true" href="#liteos-开发指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LiteOS 开发指南&lt;/h2&gt;
&lt;p&gt;&lt;a href="./doc/Huawei_LiteOS_Developer_Guide_zh.md"&gt;LiteOS开发指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://liteos.github.io/porting/" rel="nofollow"&gt;LiteOS移植指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该文档详细讲解了LiteOS各模块开发及其实现原理。用户可以根据该文档学习各模块的使用。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-liteos-接入云平台开发指南" class="anchor" aria-hidden="true" href="#liteos-接入云平台开发指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LiteOS 接入云平台开发指南&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SuYai/OceanConnectHelp"&gt;LiteOS接入华为云平台&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/Huawei_LiteOS_SDK_Developer_Guide.md"&gt;LiteOS SDK端云互通组件开发指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LiteOS SDK是Huawei LiteOS软件开发工具包（Software Development Kit），通过LiteOS SDK端云互通组件，简单快速地实现与华为 OceanConnect IoT平台安全可靠连接，可以大大减少开发周期，快速构建IoT产品。&lt;/p&gt;
&lt;p&gt;LiteOS SDK是Huawei LiteOS软件开发工具包（Software Development Kit），通过LiteOS SDK端云互通组件，简单快速地实现与华为 OceanConnect IoT平台安全可靠连接，可以大大减少开发周期，快速构建IoT产品。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./doc/Huawei_LiteOS_SDK_Coap_LwM2M_Developer_Guide_zh.md"&gt;LiteOS SDK端云互通组件Coap开发指南&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./doc/Huawei_LiteOS_SDK_MQTT_Developer_Guide.md"&gt;LiteOS SDK端云互通组件MQTT开发指南&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/LiteOS/LiteOS_Connect_to_3rd_Cloud"&gt;LiteOS接入3rd云平台&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-liteos-支持的硬件" class="anchor" aria-hidden="true" href="#liteos-支持的硬件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LiteOS 支持的硬件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;LiteOS开源项目目前支持ARM Cortex-M0，Cortex-M3，Cortex-M4，Cortex-M7等芯片架构&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./doc/LiteOS_Supported_board_list.md"&gt;LiteOS支持的开发板列表&lt;/a&gt;
Huawei LiteOS 联合业界主流MCU厂家，通过开发者活动，目前已经适配了30+ 通用 MCU开发套件，5套NB-IoT集成开发套件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-开源协议" class="anchor" aria-hidden="true" href="#开源协议"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;开源协议&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;遵循BSD-3开源许可协议&lt;/li&gt;
&lt;li&gt;&lt;a href="https://support.huaweicloud.com/productdesc-LiteOS/zh-cn_topic_0145347224.html" rel="nofollow"&gt;Huawei LiteOS 知识产权政策&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-liteos-git入门必读" class="anchor" aria-hidden="true" href="#liteos-git入门必读"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LiteOS Git入门必读&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/LiteOS_Commit_Message.md"&gt;LiteOS Commit Message规则&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该文档描述如何提交commit到LiteOS仓库，这是LiteOS开发必须遵守的commit规则，否则提交的commit会被驳回。请点链接了解详细信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/LiteOS_Contribute_Guide_GitGUI.md"&gt;Huawei LiteOS代码贡献流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该文档描述开发者如何创建自己的仓库，开发然后贡献代码到LiteOS仓库。请点链接了解详细信息。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-加入我们" class="anchor" aria-hidden="true" href="#加入我们"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;加入我们&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;欢迎提交issue对关心的问题发起讨论，欢迎提交PR参与特性建设&lt;/li&gt;
&lt;li&gt;如您有合作意向，希望加入Huawei LiteOS生态合作伙伴，请发邮件至&lt;a href="mailto:liteos@huawei.com"&gt;liteos@huawei.com&lt;/a&gt;，或访问&lt;a href="http://www.huawei.com/liteos" rel="nofollow"&gt;LiteOS官网&lt;/a&gt;，进一步了解详细信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>LiteOS</author><guid isPermaLink="false">https://github.com/LiteOS/LiteOS</guid><pubDate>Wed, 06 Nov 2019 00:21:00 GMT</pubDate></item><item><title>libjpeg-turbo/libjpeg-turbo #22 in C, Today</title><link>https://github.com/libjpeg-turbo/libjpeg-turbo</link><description>&lt;p&gt;&lt;i&gt;Main libjpeg-turbo repository&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-background" class="anchor" aria-hidden="true" href="#background"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Background&lt;/h1&gt;
&lt;p&gt;libjpeg-turbo is a JPEG image codec that uses SIMD instructions (MMX, SSE2,
AVX2, NEON, AltiVec) to accelerate baseline JPEG compression and decompression
on x86, x86-64, ARM, and PowerPC systems, as well as progressive JPEG
compression on x86 and x86-64 systems.  On such systems, libjpeg-turbo is
generally 2-6x as fast as libjpeg, all else being equal.  On other types of
systems, libjpeg-turbo can still outperform libjpeg by a significant amount, by
virtue of its highly-optimized Huffman coding routines.  In many cases, the
performance of libjpeg-turbo rivals that of proprietary high-speed JPEG codecs.&lt;/p&gt;
&lt;p&gt;libjpeg-turbo implements both the traditional libjpeg API as well as the less
powerful but more straightforward TurboJPEG API.  libjpeg-turbo also features
colorspace extensions that allow it to compress from/decompress to 32-bit and
big-endian pixel buffers (RGBX, XBGR, etc.), as well as a full-featured Java
interface.&lt;/p&gt;
&lt;p&gt;libjpeg-turbo was originally based on libjpeg/SIMD, an MMX-accelerated
derivative of libjpeg v6b developed by Miyasaka Masaru.  The TigerVNC and
VirtualGL projects made numerous enhancements to the codec in 2009, and in
early 2010, libjpeg-turbo spun off into an independent project, with the goal
of making high-speed JPEG compression/decompression technology available to a
broader range of users and developers.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;libjpeg-turbo is covered by three compatible BSD-style open source licenses.
Refer to &lt;a href="LICENSE.md"&gt;LICENSE.md&lt;/a&gt; for a roll-up of license terms.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building-libjpeg-turbo" class="anchor" aria-hidden="true" href="#building-libjpeg-turbo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building libjpeg-turbo&lt;/h1&gt;
&lt;p&gt;Refer to &lt;a href="BUILDING.md"&gt;BUILDING.md&lt;/a&gt; for complete instructions.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-using-libjpeg-turbo" class="anchor" aria-hidden="true" href="#using-libjpeg-turbo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using libjpeg-turbo&lt;/h1&gt;
&lt;p&gt;libjpeg-turbo includes two APIs that can be used to compress and decompress
JPEG images:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;TurboJPEG API&lt;/strong&gt;&lt;br&gt;
This API provides an easy-to-use interface for compressing and decompressing
JPEG images in memory.  It also provides some functionality that would not be
straightforward to achieve using the underlying libjpeg API, such as
generating planar YUV images and performing multiple simultaneous lossless
transforms on an image.  The Java interface for libjpeg-turbo is written on
top of the TurboJPEG API.  The TurboJPEG API is recommended for first-time
users of libjpeg-turbo.  Refer to &lt;a href="tjexample.c"&gt;tjexample.c&lt;/a&gt; and
&lt;a href="java/TJExample.java"&gt;TJExample.java&lt;/a&gt; for examples of its usage and to
&lt;a href="http://libjpeg-turbo.org/Documentation/Documentation" rel="nofollow"&gt;http://libjpeg-turbo.org/Documentation/Documentation&lt;/a&gt; for API documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;libjpeg API&lt;/strong&gt;&lt;br&gt;
This is the de facto industry-standard API for compressing and decompressing
JPEG images.  It is more difficult to use than the TurboJPEG API but also
more powerful.  The libjpeg API implementation in libjpeg-turbo is both
API/ABI-compatible and mathematically compatible with libjpeg v6b.  It can
also optionally be configured to be API/ABI-compatible with libjpeg v7 and v8
(see below.)  Refer to &lt;a href="cjpeg.c"&gt;cjpeg.c&lt;/a&gt; and &lt;a href="djpeg.c"&gt;djpeg.c&lt;/a&gt; for examples
of its usage and to &lt;a href="libjpeg.txt"&gt;libjpeg.txt&lt;/a&gt; for API documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is no significant performance advantage to either API when both are used
to perform similar operations.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-colorspace-extensions" class="anchor" aria-hidden="true" href="#colorspace-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Colorspace Extensions&lt;/h2&gt;
&lt;p&gt;libjpeg-turbo includes extensions that allow JPEG images to be compressed
directly from (and decompressed directly to) buffers that use BGR, BGRX,
RGBX, XBGR, and XRGB pixel ordering.  This is implemented with ten new
colorspace constants:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;JCS_EXT_RGB   /* red/green/blue */
JCS_EXT_RGBX  /* red/green/blue/x */
JCS_EXT_BGR   /* blue/green/red */
JCS_EXT_BGRX  /* blue/green/red/x */
JCS_EXT_XBGR  /* x/blue/green/red */
JCS_EXT_XRGB  /* x/red/green/blue */
JCS_EXT_RGBA  /* red/green/blue/alpha */
JCS_EXT_BGRA  /* blue/green/red/alpha */
JCS_EXT_ABGR  /* alpha/blue/green/red */
JCS_EXT_ARGB  /* alpha/red/green/blue */
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Setting &lt;code&gt;cinfo.in_color_space&lt;/code&gt; (compression) or &lt;code&gt;cinfo.out_color_space&lt;/code&gt;
(decompression) to one of these values will cause libjpeg-turbo to read the
red, green, and blue values from (or write them to) the appropriate position in
the pixel when compressing from/decompressing to an RGB buffer.&lt;/p&gt;
&lt;p&gt;Your application can check for the existence of these extensions at compile
time with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ifdef JCS_EXTENSIONS
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At run time, attempting to use these extensions with a libjpeg implementation
that does not support them will result in a "Bogus input colorspace" error.
Applications can trap this error in order to test whether run-time support is
available for the colorspace extensions.&lt;/p&gt;
&lt;p&gt;When using the RGBX, BGRX, XBGR, and XRGB colorspaces during decompression, the
X byte is undefined, and in order to ensure the best performance, libjpeg-turbo
can set that byte to whatever value it wishes.  If an application expects the X
byte to be used as an alpha channel, then it should specify &lt;code&gt;JCS_EXT_RGBA&lt;/code&gt;,
&lt;code&gt;JCS_EXT_BGRA&lt;/code&gt;, &lt;code&gt;JCS_EXT_ABGR&lt;/code&gt;, or &lt;code&gt;JCS_EXT_ARGB&lt;/code&gt;.  When these colorspace
constants are used, the X byte is guaranteed to be 0xFF, which is interpreted
as opaque.&lt;/p&gt;
&lt;p&gt;Your application can check for the existence of the alpha channel colorspace
extensions at compile time with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ifdef JCS_ALPHA_EXTENSIONS
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="jcstest.c"&gt;jcstest.c&lt;/a&gt;, located in the libjpeg-turbo source tree, demonstrates
how to check for the existence of the colorspace extensions at compile time and
run time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-libjpeg-v7-and-v8-apiabi-emulation" class="anchor" aria-hidden="true" href="#libjpeg-v7-and-v8-apiabi-emulation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libjpeg v7 and v8 API/ABI Emulation&lt;/h2&gt;
&lt;p&gt;With libjpeg v7 and v8, new features were added that necessitated extending the
compression and decompression structures.  Unfortunately, due to the exposed
nature of those structures, extending them also necessitated breaking backward
ABI compatibility with previous libjpeg releases.  Thus, programs that were
built to use libjpeg v7 or v8 did not work with libjpeg-turbo, since it is
based on the libjpeg v6b code base.  Although libjpeg v7 and v8 are not
as widely used as v6b, enough programs (including a few Linux distros) made
the switch that there was a demand to emulate the libjpeg v7 and v8 ABIs
in libjpeg-turbo.  It should be noted, however, that this feature was added
primarily so that applications that had already been compiled to use libjpeg
v7+ could take advantage of accelerated baseline JPEG encoding/decoding
without recompiling.  libjpeg-turbo does not claim to support all of the
libjpeg v7+ features, nor to produce identical output to libjpeg v7+ in all
cases (see below.)&lt;/p&gt;
&lt;p&gt;By passing an argument of &lt;code&gt;-DWITH_JPEG7=1&lt;/code&gt; or &lt;code&gt;-DWITH_JPEG8=1&lt;/code&gt; to &lt;code&gt;cmake&lt;/code&gt;, you
can build a version of libjpeg-turbo that emulates the libjpeg v7 or v8 ABI, so
that programs that are built against libjpeg v7 or v8 can be run with
libjpeg-turbo.  The following section describes which libjpeg v7+ features are
supported and which aren't.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-support-for-libjpeg-v7-and-v8-features" class="anchor" aria-hidden="true" href="#support-for-libjpeg-v7-and-v8-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support for libjpeg v7 and v8 Features&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-fully-supported" class="anchor" aria-hidden="true" href="#fully-supported"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fully supported&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;libjpeg: IDCT scaling extensions in decompressor&lt;/strong&gt;&lt;br&gt;
libjpeg-turbo supports IDCT scaling with scaling factors of 1/8, 1/4, 3/8,
1/2, 5/8, 3/4, 7/8, 9/8, 5/4, 11/8, 3/2, 13/8, 7/4, 15/8, and 2/1 (only 1/4
and 1/2 are SIMD-accelerated.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;libjpeg: Arithmetic coding&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;libjpeg: In-memory source and destination managers&lt;/strong&gt;&lt;br&gt;
See notes below.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;cjpeg: Separate quality settings for luminance and chrominance&lt;/strong&gt;&lt;br&gt;
Note that the libpjeg v7+ API was extended to accommodate this feature only
for convenience purposes.  It has always been possible to implement this
feature with libjpeg v6b (see rdswitch.c for an example.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;cjpeg: 32-bit BMP support&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;cjpeg: &lt;code&gt;-rgb&lt;/code&gt; option&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;jpegtran: Lossless cropping&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;jpegtran: &lt;code&gt;-perfect&lt;/code&gt; option&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;jpegtran: Forcing width/height when performing lossless crop&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;rdjpgcom: &lt;code&gt;-raw&lt;/code&gt; option&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;rdjpgcom: Locale awareness&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-not-supported" class="anchor" aria-hidden="true" href="#not-supported"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Not supported&lt;/h4&gt;
&lt;p&gt;NOTE:  As of this writing, extensive research has been conducted into the
usefulness of DCT scaling as a means of data reduction and SmartScale as a
means of quality improvement.  The reader is invited to peruse the research at
&lt;a href="http://www.libjpeg-turbo.org/About/SmartScale" rel="nofollow"&gt;http://www.libjpeg-turbo.org/About/SmartScale&lt;/a&gt; and draw his/her own conclusions,
but it is the general belief of our project that these features have not
demonstrated sufficient usefulness to justify inclusion in libjpeg-turbo.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;libjpeg: DCT scaling in compressor&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cinfo.scale_num&lt;/code&gt; and &lt;code&gt;cinfo.scale_denom&lt;/code&gt; are silently ignored.
There is no technical reason why DCT scaling could not be supported when
emulating the libjpeg v7+ API/ABI, but without the SmartScale extension (see
below), only scaling factors of 1/2, 8/15, 4/7, 8/13, 2/3, 8/11, 4/5, and
8/9 would be available, which is of limited usefulness.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;libjpeg: SmartScale&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cinfo.block_size&lt;/code&gt; is silently ignored.
SmartScale is an extension to the JPEG format that allows for DCT block
sizes other than 8x8.  Providing support for this new format would be
feasible (particularly without full acceleration.)  However, until/unless
the format becomes either an official industry standard or, at minimum, an
accepted solution in the community, we are hesitant to implement it, as
there is no sense of whether or how it might change in the future.  It is
our belief that SmartScale has not demonstrated sufficient usefulness as a
lossless format nor as a means of quality enhancement, and thus our primary
interest in providing this feature would be as a means of supporting
additional DCT scaling factors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;libjpeg: Fancy downsampling in compressor&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cinfo.do_fancy_downsampling&lt;/code&gt; is silently ignored.
This requires the DCT scaling feature, which is not supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;jpegtran: Scaling&lt;/strong&gt;&lt;br&gt;
This requires both the DCT scaling and SmartScale features, which are not
supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Lossless RGB JPEG files&lt;/strong&gt;&lt;br&gt;
This requires the SmartScale feature, which is not supported.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-what-about-libjpeg-v9" class="anchor" aria-hidden="true" href="#what-about-libjpeg-v9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What About libjpeg v9?&lt;/h3&gt;
&lt;p&gt;libjpeg v9 introduced yet another field to the JPEG compression structure
(&lt;code&gt;color_transform&lt;/code&gt;), thus making the ABI backward incompatible with that of
libjpeg v8.  This new field was introduced solely for the purpose of supporting
lossless SmartScale encoding.  Furthermore, there was actually no reason to
extend the API in this manner, as the color transform could have just as easily
been activated by way of a new JPEG colorspace constant, thus preserving
backward ABI compatibility.&lt;/p&gt;
&lt;p&gt;Our research (see link above) has shown that lossless SmartScale does not
generally accomplish anything that can't already be accomplished better with
existing, standard lossless formats.  Therefore, at this time it is our belief
that there is not sufficient technical justification for software projects to
upgrade from libjpeg v8 to libjpeg v9, and thus there is not sufficient
technical justification for us to emulate the libjpeg v9 ABI.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-in-memory-sourcedestination-managers" class="anchor" aria-hidden="true" href="#in-memory-sourcedestination-managers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In-Memory Source/Destination Managers&lt;/h2&gt;
&lt;p&gt;By default, libjpeg-turbo 1.3 and later includes the &lt;code&gt;jpeg_mem_src()&lt;/code&gt; and
&lt;code&gt;jpeg_mem_dest()&lt;/code&gt; functions, even when not emulating the libjpeg v8 API/ABI.
Previously, it was necessary to build libjpeg-turbo from source with libjpeg v8
API/ABI emulation in order to use the in-memory source/destination managers,
but several projects requested that those functions be included when emulating
the libjpeg v6b API/ABI as well.  This allows the use of those functions by
programs that need them, without breaking ABI compatibility for programs that
don't, and it allows those functions to be provided in the "official"
libjpeg-turbo binaries.&lt;/p&gt;
&lt;p&gt;Those who are concerned about maintaining strict conformance with the libjpeg
v6b or v7 API can pass an argument of &lt;code&gt;-DWITH_MEM_SRCDST=0&lt;/code&gt; to &lt;code&gt;cmake&lt;/code&gt; prior to
building libjpeg-turbo.  This will restore the pre-1.3 behavior, in which
&lt;code&gt;jpeg_mem_src()&lt;/code&gt; and &lt;code&gt;jpeg_mem_dest()&lt;/code&gt; are only included when emulating the
libjpeg v8 API/ABI.&lt;/p&gt;
&lt;p&gt;On Un*x systems, including the in-memory source/destination managers changes
the dynamic library version from 62.1.0 to 62.2.0 if using libjpeg v6b API/ABI
emulation and from 7.1.0 to 7.2.0 if using libjpeg v7 API/ABI emulation.&lt;/p&gt;
&lt;p&gt;Note that, on most Un*x systems, the dynamic linker will not look for a
function in a library until that function is actually used.  Thus, if a program
is built against libjpeg-turbo 1.3+ and uses &lt;code&gt;jpeg_mem_src()&lt;/code&gt; or
&lt;code&gt;jpeg_mem_dest()&lt;/code&gt;, that program will not fail if run against an older version
of libjpeg-turbo or against libjpeg v7- until the program actually tries to
call &lt;code&gt;jpeg_mem_src()&lt;/code&gt; or &lt;code&gt;jpeg_mem_dest()&lt;/code&gt;.  Such is not the case on Windows.
If a program is built against the libjpeg-turbo 1.3+ DLL and uses
&lt;code&gt;jpeg_mem_src()&lt;/code&gt; or &lt;code&gt;jpeg_mem_dest()&lt;/code&gt;, then it must use the libjpeg-turbo 1.3+
DLL at run time.&lt;/p&gt;
&lt;p&gt;Both cjpeg and djpeg have been extended to allow testing the in-memory
source/destination manager functions.  See their respective man pages for more
details.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mathematical-compatibility" class="anchor" aria-hidden="true" href="#mathematical-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mathematical Compatibility&lt;/h1&gt;
&lt;p&gt;For the most part, libjpeg-turbo should produce identical output to libjpeg
v6b.  The one exception to this is when using the floating point DCT/IDCT, in
which case the outputs of libjpeg v6b and libjpeg-turbo can differ for the
following reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The SSE/SSE2 floating point DCT implementation in libjpeg-turbo is ever so
slightly more accurate than the implementation in libjpeg v6b, but not by
any amount perceptible to human vision (generally in the range of 0.01 to
0.08 dB gain in PNSR.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When not using the SIMD extensions, libjpeg-turbo uses the more accurate
(and slightly faster) floating point IDCT algorithm introduced in libjpeg
v8a as opposed to the algorithm used in libjpeg v6b.  It should be noted,
however, that this algorithm basically brings the accuracy of the floating
point IDCT in line with the accuracy of the slow integer IDCT.  The floating
point DCT/IDCT algorithms are mainly a legacy feature, and they do not
produce significantly more accuracy than the slow integer algorithms (to put
numbers on this, the typical difference in PNSR between the two algorithms
is less than 0.10 dB, whereas changing the quality level by 1 in the upper
range of the quality scale is typically more like a 1.0 dB difference.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the floating point algorithms in libjpeg-turbo are not implemented using
SIMD instructions on a particular platform, then the accuracy of the
floating point DCT/IDCT can depend on the compiler settings.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While libjpeg-turbo does emulate the libjpeg v8 API/ABI, under the hood it is
still using the same algorithms as libjpeg v6b, so there are several specific
cases in which libjpeg-turbo cannot be expected to produce the same output as
libjpeg v8:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When decompressing using scaling factors of 1/2 and 1/4, because libjpeg v8
implements those scaling algorithms differently than libjpeg v6b does, and
libjpeg-turbo's SIMD extensions are based on the libjpeg v6b behavior.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When using chrominance subsampling, because libjpeg v8 implements this
with its DCT/IDCT scaling algorithms rather than with a separate
downsampling/upsampling algorithm.  In our testing, the subsampled/upsampled
output of libjpeg v8 is less accurate than that of libjpeg v6b for this
reason.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When decompressing using a scaling factor &amp;gt; 1 and merged (AKA "non-fancy" or
"non-smooth") chrominance upsampling, because libjpeg v8 does not support
merged upsampling with scaling factors &amp;gt; 1.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-performance-pitfalls" class="anchor" aria-hidden="true" href="#performance-pitfalls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Pitfalls&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-restart-markers" class="anchor" aria-hidden="true" href="#restart-markers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Restart Markers&lt;/h2&gt;
&lt;p&gt;The optimized Huffman decoder in libjpeg-turbo does not handle restart markers
in a way that makes the rest of the libjpeg infrastructure happy, so it is
necessary to use the slow Huffman decoder when decompressing a JPEG image that
has restart markers.  This can cause the decompression performance to drop by
as much as 20%, but the performance will still be much greater than that of
libjpeg.  Many consumer packages, such as PhotoShop, use restart markers when
generating JPEG images, so images generated by those programs will experience
this issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fast-integer-forward-dct-at-high-quality-levels" class="anchor" aria-hidden="true" href="#fast-integer-forward-dct-at-high-quality-levels"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fast Integer Forward DCT at High Quality Levels&lt;/h2&gt;
&lt;p&gt;The algorithm used by the SIMD-accelerated quantization function cannot produce
correct results whenever the fast integer forward DCT is used along with a JPEG
quality of 98-100.  Thus, libjpeg-turbo must use the non-SIMD quantization
function in those cases.  This causes performance to drop by as much as 40%.
It is therefore strongly advised that you use the slow integer forward DCT
whenever encoding images with a JPEG quality of 98 or higher.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-memory-debugger-pitfalls" class="anchor" aria-hidden="true" href="#memory-debugger-pitfalls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory Debugger Pitfalls&lt;/h1&gt;
&lt;p&gt;Valgrind and Memory Sanitizer (MSan) can generate false positives
(specifically, incorrect reports of uninitialized memory accesses) when used
with libjpeg-turbo's SIMD extensions.  It is generally recommended that the
SIMD extensions be disabled, either by passing an argument of &lt;code&gt;-DWITH_SIMD=0&lt;/code&gt;
to &lt;code&gt;cmake&lt;/code&gt; when configuring the build or by setting the environment variable
&lt;code&gt;JSIMD_FORCENONE&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; at run time, when testing libjpeg-turbo with Valgrind,
MSan, or other memory debuggers.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>libjpeg-turbo</author><guid isPermaLink="false">https://github.com/libjpeg-turbo/libjpeg-turbo</guid><pubDate>Wed, 06 Nov 2019 00:22:00 GMT</pubDate></item><item><title>alelievr/libft-unit-test #23 in C, Today</title><link>https://github.com/alelievr/libft-unit-test</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-libft-unit-tests" class="anchor" aria-hidden="true" href="#libft-unit-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libft Unit tests&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Important note: this version targets the new 42 subject of &lt;code&gt;libft&lt;/code&gt;, if you want to use the old one &lt;a href="https://github.com/alelievr/libft-unit-test/tree/old"&gt;you can access it on the old branch&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;libft-unit-test is a complete testing suite for 42's libft project, allowing you to test your lib, track your progress and benchmarking your lib (with system's libc or with another lib)&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;You must have the following file structure:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
|- libft/
|- libft-unit-tests/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Whereas:
&lt;code&gt;libft&lt;/code&gt; is your project folder.
&lt;code&gt;libft-unit-tests&lt;/code&gt; is the folder containing this repository.&lt;/p&gt;
&lt;p&gt;Afterwards, you can just &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;(NOTE: Before running &lt;code&gt;make&lt;/code&gt;, you can edit the &lt;code&gt;LIBFTDIR&lt;/code&gt; variable containing the path to your libft folder.)&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;p&gt;Run &lt;code&gt;make f&lt;/code&gt; or &lt;code&gt;./run_test&lt;/code&gt; when inside the repo's directory. &lt;code&gt;./run_test -b&lt;/code&gt; to use the Benchmark mode. (&lt;code&gt;-b&lt;/code&gt; option to compare with system's libc and &lt;code&gt;-v &amp;lt;libft file&amp;gt;&lt;/code&gt; option to compare with another libft file (should be &lt;code&gt;libft.so&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;the &lt;code&gt;-nospeed&lt;/code&gt; option is available if you're mad enough at your optimization. :)&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h1&gt;
&lt;p&gt;To get it work on linux:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install this two packages libbsd-dev and libncurses-dev&lt;/li&gt;
&lt;li&gt;Add a rule called 'so' in your Makefile to compile your libft in dynamic library instead of static (must be called "libft.so").&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-default-mode" class="anchor" aria-hidden="true" href="#default-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default mode&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d48094cc4a8bccb4610a3990794916ee74be9614/687474703a2f2f696d6167652e6e6f656c736861636b2e636f6d2f66696368696572732f323031362f33352f313437323932333734302d636170747572652d642d656372616e2d323031362d30392d30332d612d31392d32362d33322e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d48094cc4a8bccb4610a3990794916ee74be9614/687474703a2f2f696d6167652e6e6f656c736861636b2e636f6d2f66696368696572732f323031362f33352f313437323932333734302d636170747572652d642d656372616e2d323031362d30392d30332d612d31392d32362d33322e706e67" alt="Unit Testing" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-benchmark-mode" class="anchor" aria-hidden="true" href="#benchmark-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmark mode&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/89f54b0ab69793e585c503ac2d35ac73f09d053a/687474703a2f2f696d6167652e6e6f656c736861636b2e636f6d2f66696368696572732f323031362f33352f313437323932333734392d636170747572652d642d656372616e2d323031362d30392d30332d612d31392d32372d30392e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/89f54b0ab69793e585c503ac2d35ac73f09d053a/687474703a2f2f696d6167652e6e6f656c736861636b2e636f6d2f66696368696572732f323031362f33352f313437323932333734392d636170747572652d642d656372616e2d323031362d30392d30332d612d31392d32372d30392e706e67" alt="Benchmarking" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>alelievr</author><guid isPermaLink="false">https://github.com/alelievr/libft-unit-test</guid><pubDate>Wed, 06 Nov 2019 00:23:00 GMT</pubDate></item><item><title>curl/curl #24 in C, Today</title><link>https://github.com/curl/curl</link><description>&lt;p&gt;&lt;i&gt;A command line tool and library for transferring data with URL syntax, supporting HTTP, HTTPS, FTP, FTPS, GOPHER, TFTP, SCP, SFTP, SMB, TELNET, DICT, LDAP, LDAPS, FILE, IMAP, SMTP, POP3, RTSP and RTMP. libcurl offers a myriad of powerful features&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2827710d170e934dec1d3dc04eb9d1f9ed607dd8/68747470733a2f2f6375726c2e686178782e73652f6c6f676f2f6375726c2d6c6f676f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/2827710d170e934dec1d3dc04eb9d1f9ed607dd8/68747470733a2f2f6375726c2e686178782e73652f6c6f676f2f6375726c2d6c6f676f2e737667" alt="curl logo" data-canonical-src="https://curl.haxx.se/logo/curl-logo.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/63" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a596f952f581983bf6bd720d835460348840e64a/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f36332f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/63/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/curl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f6072b03989c48ffbbe3ca1b9ba01f955c818e9/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f6375726c2f62616467652e737667" alt="Coverity passed" data-canonical-src="https://scan.coverity.com/projects/curl/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/curl/curl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29481f0f6fb0e576ed3247845974ffef47f2ad8c/68747470733a2f2f7472617669732d63692e6f72672f6375726c2f6375726c2e7376673f6272616e63683d6d6173746572" alt="Travis-CI Build Status" data-canonical-src="https://travis-ci.org/curl/curl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/curlorg/curl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cb2279db176c044d2e6d5005db6f99d0ed026a31/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6c3176763331303239687568663467343f7376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/l1vv31029huhf4g4?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cirrus-ci.com/github/curl/curl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c811e2e2f4abf1abf859a1dfe7dac17b38b565cd/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f6375726c2f6375726c2e7376673f6272616e63683d6d6173746572" alt="Cirrus Build Status" data-canonical-src="https://api.cirrus-ci.com/github/curl/curl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/curl/curl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3916f28bf54128f21dd4a0247cd3cbb4c743811d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6375726c2f6375726c2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/curl/curl/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#backers"&gt;&lt;img src="https://camo.githubusercontent.com/dc39b547f0d2f5ff8192165a95a942cc9e924ce4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f6261636b6572732f62616467652e737667" alt="Backers on Open Collective" data-canonical-src="https://opencollective.com/curl/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/e9bcc3a3b558aee17eaa5ad70db4e3e07ae238ef/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f73706f6e736f72732f62616467652e737667" alt="Sponsors on Open Collective" data-canonical-src="https://opencollective.com/curl/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/curl/curl/context:cpp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8db34111354d4e858bb610c97e5fc74e1d3c9023/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f672f6375726c2f6375726c2e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Language Grade: C/C++" data-canonical-src="https://img.shields.io/lgtm/grade/cpp/g/curl/curl.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/app/curl/curl?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=curl/curl&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc442b82f9ee7ab250bdee5c6fd1f61ee3965952/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6431313438336130636335633465626439646134666639663763643536363930" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/Grade/d11483a0cc5c4ebd9da4ff9f7cd56690" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:curl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c57f0359295d967f29b0ba487c75073ca103c292/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f6375726c2e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/curl.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Curl is a command-line tool for transferring data specified with URL
syntax. Find out how to use curl by reading &lt;a href="https://curl.haxx.se/docs/manpage.html" rel="nofollow"&gt;the curl.1 man
page&lt;/a&gt; or &lt;a href="https://curl.haxx.se/docs/manual.html" rel="nofollow"&gt;the MANUAL
document&lt;/a&gt;. Find out how to install Curl
by reading &lt;a href="https://curl.haxx.se/docs/install.html" rel="nofollow"&gt;the INSTALL document&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;libcurl is the library curl is using to do its job. It is readily available to
be used by your software. Read &lt;a href="https://curl.haxx.se/libcurl/c/libcurl.html" rel="nofollow"&gt;the libcurl.3 man
page&lt;/a&gt; to learn how!&lt;/p&gt;
&lt;p&gt;You can find answers to the most frequent questions we get in &lt;a href="https://curl.haxx.se/docs/faq.html" rel="nofollow"&gt;the FAQ
document&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Study &lt;a href="https://curl.haxx.se/docs/copyright.html" rel="nofollow"&gt;the COPYING file&lt;/a&gt; for
distribution terms and similar. If you distribute curl binaries or other
binaries that involve libcurl, you might enjoy &lt;a href="https://curl.haxx.se/legal/licmix.html" rel="nofollow"&gt;the LICENSE-MIXING
document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;If you have problems, questions, ideas or suggestions, please contact us by
posting to a suitable &lt;a href="https://curl.haxx.se/mail/" rel="nofollow"&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All contributors to the project are listed in &lt;a href="https://curl.haxx.se/docs/thanks.html" rel="nofollow"&gt;the THANKS
document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-website" class="anchor" aria-hidden="true" href="#website"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Website&lt;/h2&gt;
&lt;p&gt;Visit the &lt;a href="https://curl.haxx.se/" rel="nofollow"&gt;curl web site&lt;/a&gt; for the latest news and
downloads.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-git" class="anchor" aria-hidden="true" href="#git"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git&lt;/h2&gt;
&lt;p&gt;To download the very latest source from the Git server do this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/curl/curl.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(you'll get a directory named curl created, filled with the source code)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-security-problems" class="anchor" aria-hidden="true" href="#security-problems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security problems&lt;/h2&gt;
&lt;p&gt;Report suspected security problems via &lt;a href="https://hackerone.com/curl" rel="nofollow"&gt;our HackerOne
page&lt;/a&gt; and not in public!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-notice" class="anchor" aria-hidden="true" href="#notice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notice&lt;/h2&gt;
&lt;p&gt;Curl contains pieces of source code that is Copyright (c) 1998, 1999 Kungliga
Tekniska Högskolan. This notice is included here to comply with the
distribution terms.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h2&gt;
&lt;p&gt;Thank you to all our backers! &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; [&lt;a href="https://opencollective.com/curl#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/curl#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5155931dc9ff23bd20921ced4f48a63079191052/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/curl/backers.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a
link to your website. [&lt;a href="https://opencollective.com/curl#sponsor" rel="nofollow"&gt;Become a
sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/curl/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d6fb4c68f9045a3e726893db10d7617cfb217f82/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/curl/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/curl/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0dbeb24ada182bbb771462ab3c19f07bafd7eac6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/curl/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/curl/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/55a28299e42e7ba9282fa1d00685d2e4ca716edd/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/curl/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/curl/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4005ff01249a9e9bbd880393818626e6dc276cba/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/curl/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/curl/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15c695ccd8354ac59929b1752ae96734e272864d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/curl/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/curl/sponsor/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/251b20129b0b3021e2068e243c58ef5004a3085e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f73706f6e736f722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/curl/sponsor/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/curl/sponsor/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/779026b1a04a4b2e91c6710c44e89c2f4d30d601/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f73706f6e736f722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/curl/sponsor/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/curl/sponsor/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/16f828bab74f4dd0e330693999393075ef280c36/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f73706f6e736f722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/curl/sponsor/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/curl/sponsor/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb5ab8bd41638d0cc076dc4c302fcedb1a2af165/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f73706f6e736f722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/curl/sponsor/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/curl/sponsor/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/538b23dd2dacc78027a0f5858439f18fdd05ec0b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6375726c2f73706f6e736f722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/curl/sponsor/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>curl</author><guid isPermaLink="false">https://github.com/curl/curl</guid><pubDate>Wed, 06 Nov 2019 00:24:00 GMT</pubDate></item><item><title>cylgom/ly #25 in C, Today</title><link>https://github.com/cylgom/ly</link><description>&lt;p&gt;&lt;i&gt;TUI (ncurses-like) display manager&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ly---a-tui-display-manager" class="anchor" aria-hidden="true" href="#ly---a-tui-display-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ly - a TUI display manager&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.codefactor.io/repository/github/cylgom/ly/overview/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b913d8ccbd6d0af567befa8f967fb1c889e21f99/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f63796c676f6d2f6c792f62616467652f6d6173746572" alt="CodeFactor" data-canonical-src="https://www.codefactor.io/repository/github/cylgom/ly/badge/master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5473047/42466218-8cb53d3c-83ae-11e8-8e53-bae3669f959c.png"&gt;&lt;img src="https://user-images.githubusercontent.com/5473047/42466218-8cb53d3c-83ae-11e8-8e53-bae3669f959c.png" alt="Ly screenshot" title="Ly screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ly is a lightweight TUI (ncurses-like) display manager for Linux and BSD.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;a C99 compiler (tested with tcc and gcc)&lt;/li&gt;
&lt;li&gt;a C standard library&lt;/li&gt;
&lt;li&gt;make&lt;/li&gt;
&lt;li&gt;pam&lt;/li&gt;
&lt;li&gt;xcb&lt;/li&gt;
&lt;li&gt;xorg&lt;/li&gt;
&lt;li&gt;xorg-xauth&lt;/li&gt;
&lt;li&gt;mcookie&lt;/li&gt;
&lt;li&gt;tput&lt;/li&gt;
&lt;li&gt;shutdown&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;The following desktop environments were tested with success&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;budgie&lt;/li&gt;
&lt;li&gt;cinnamon&lt;/li&gt;
&lt;li&gt;deepin&lt;/li&gt;
&lt;li&gt;enlightenment&lt;/li&gt;
&lt;li&gt;gnome&lt;/li&gt;
&lt;li&gt;i3&lt;/li&gt;
&lt;li&gt;kde&lt;/li&gt;
&lt;li&gt;lxde&lt;/li&gt;
&lt;li&gt;lxqt&lt;/li&gt;
&lt;li&gt;mate&lt;/li&gt;
&lt;li&gt;sway&lt;/li&gt;
&lt;li&gt;xfce&lt;/li&gt;
&lt;li&gt;pantheon&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ly should work with any X desktop environment, and provides
basic wayland support (sway works very well, for example).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-systemd" class="anchor" aria-hidden="true" href="#systemd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;systemd?&lt;/h2&gt;
&lt;p&gt;Unlike what you may have heard, Ly does not require &lt;code&gt;systemd&lt;/code&gt;,
and was even specifically designed not to depend on &lt;code&gt;logind&lt;/code&gt;.
You should be able to make it work easily with a better init,
changing the source code won't be necessary :)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cloning-and-compiling" class="anchor" aria-hidden="true" href="#cloning-and-compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cloning and Compiling&lt;/h2&gt;
&lt;p&gt;Clone the repository&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/cylgom/ly.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fetch submodules&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make github
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Compile&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Test in the configured tty (tty2 by default)
or a terminal emulator (but desktop environments won't start)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo make run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install Ly and the provided systemd service file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enable the service&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl enable ly.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you need to switch between ttys after Ly's start you also have to
disable getty on Ly's tty to prevent "login" from spawning on top of it&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl disable getty@tty2.service
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;You can find all the configuration in &lt;code&gt;/etc/ly/config.ini&lt;/code&gt;.
The file is commented, and includes the default values.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-controls" class="anchor" aria-hidden="true" href="#controls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Controls&lt;/h2&gt;
&lt;p&gt;Use the up and down arrow keys to change the current field, and the
left and right arrow keys to change the target desktop environment
while on the desktop field (above the login field).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tips" class="anchor" aria-hidden="true" href="#tips"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tips&lt;/h2&gt;
&lt;p&gt;The numlock and capslock state is printed in the top-right corner.
Use the F1 and F2 keys to respectively shutdown and reboot.
Take a look at your .xsession if X doesn't start, as it can interfere
(this file is launched with X to configure the display properly).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-psx-doom-fire-animation" class="anchor" aria-hidden="true" href="#psx-doom-fire-animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PSX DOOM fire animation&lt;/h2&gt;
&lt;p&gt;To enable the famous PSX DOOM fire described by &lt;a href="http://fabiensanglard.net/doom_fire_psx/index.html" rel="nofollow"&gt;Fabien Sanglard&lt;/a&gt;,
just uncomment &lt;code&gt;animate = true&lt;/code&gt; in &lt;code&gt;/etc/ly/config.ini&lt;/code&gt;. You may also
disable the main box borders with &lt;code&gt;hide_borders = true&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-information" class="anchor" aria-hidden="true" href="#additional-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Information&lt;/h2&gt;
&lt;p&gt;The name "Ly" is a tribute to the fairy from the game Rayman.
Ly was tested by oxodao, who is some seriously awesome dude.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cylgom</author><guid isPermaLink="false">https://github.com/cylgom/ly</guid><pubDate>Wed, 06 Nov 2019 00:25:00 GMT</pubDate></item></channel></rss>