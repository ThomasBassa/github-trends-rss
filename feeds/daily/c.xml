<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C, Today</title><link>https://github.com/trending/c?since=daily</link><description>The top repositories on GitHub for c, measured daily</description><pubDate>Mon, 09 Dec 2019 01:05:40 GMT</pubDate><lastBuildDate>Mon, 09 Dec 2019 01:05:40 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>Atmosphere-NX/Atmosphere #1 in C, Today</title><link>https://github.com/Atmosphere-NX/Atmosphere</link><description>&lt;p&gt;&lt;i&gt;Atmosphère is a work-in-progress customized firmware for the Nintendo Switch.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="img/banner.png?raw=true"&gt;&lt;img src="img/banner.png?raw=true" alt="Banner" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a131f62d28b8a90dd5de5d0063154a7735c7bf5a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76322d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/a131f62d28b8a90dd5de5d0063154a7735c7bf5a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76322d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-GPLv2-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discordapp.com/invite/ZdqEhed" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b4175720ede4f2621aa066ffbabb70ae30044679/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d446973636f72642d627269676874677265656e2e737667" alt="Chat on Discord" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Atmosphère is a work-in-progress customized firmware for the Nintendo Switch.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-components" class="anchor" aria-hidden="true" href="#components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Components&lt;/h1&gt;
&lt;p&gt;Atmosphère consists of multiple components, each of which replaces/modifies a different component of the system:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fusée: First-stage Loader, responsible for loading and validating stage 2 (custom TrustZone) plus package2 (Kernel/FIRM sysmodules), and patching them as needed. This replaces all functionality normally in Package1loader/NX Bootloader.
&lt;ul&gt;
&lt;li&gt;Sept: Payload used to enable support for runtime key derivation on 7.0.0.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Exosphère: Customized TrustZone, to run a customized Secure Monitor&lt;/li&gt;
&lt;li&gt;Thermosphère: EL2 EmuNAND support, i.e. backing up and using virtualized/redirected NAND images&lt;/li&gt;
&lt;li&gt;Stratosphère: Custom Sysmodule(s), both Rosalina style to extend the kernel/provide new features, and of the loader reimplementation style to hook important system actions&lt;/li&gt;
&lt;li&gt;Troposphère: Application-level Horizon OS patches, used to implement desirable CFW features&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h1&gt;
&lt;p&gt;This software is licensed under the terms of the GPLv2, with exemptions for specific projects noted below.&lt;/p&gt;
&lt;p&gt;You can find a copy of the license in the &lt;a href="LICENSE"&gt;LICENSE file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exemptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://github.com/yuzu-emu/yuzu"&gt;yuzu emulator project&lt;/a&gt; is exempt from GPLv2 licensing and may (at its option) instead license any source code authored for the Atmosphère project as GPLv2 or later.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h1&gt;
&lt;p&gt;Atmosphère is currently being developed and maintained by &lt;strong&gt;SciresM&lt;/strong&gt;, &lt;strong&gt;TuxSH&lt;/strong&gt;, &lt;strong&gt;hexkyz&lt;/strong&gt;, and &lt;strong&gt;fincs&lt;/strong&gt;.&lt;br&gt;
In no particular order, we credit the following for their invaluable contributions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;switchbrew&lt;/strong&gt; for the &lt;a href="https://github.com/switchbrew/libnx"&gt;libnx&lt;/a&gt; project and the extensive &lt;a href="http://switchbrew.org" rel="nofollow"&gt;documentation, research and tool development&lt;/a&gt; pertaining to the Nintendo Switch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;devkitPro&lt;/strong&gt; for the &lt;a href="https://devkitpro.org/" rel="nofollow"&gt;devkitA64&lt;/a&gt; toolchain and libnx support.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ReSwitched Team&lt;/strong&gt; for additional &lt;a href="https://reswitched.team/" rel="nofollow"&gt;documentation, research and tool development&lt;/a&gt; pertaining to the Nintendo Switch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ChaN&lt;/strong&gt; for the &lt;a href="http://elm-chan.org/fsw/ff/00index_e.html" rel="nofollow"&gt;FatFs&lt;/a&gt; module.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Marcus Geelnard&lt;/strong&gt; for the &lt;a href="https://sourceforge.net/projects/bcl/files/bcl/bcl-1.2.0" rel="nofollow"&gt;bcl-1.2.0&lt;/a&gt; library.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;naehrwert&lt;/strong&gt; and &lt;strong&gt;st4rk&lt;/strong&gt; for the original &lt;a href="https://github.com/nwert/hekate"&gt;hekate&lt;/a&gt; project and its hwinit code base.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CTCaer&lt;/strong&gt; for the continued &lt;a href="https://github.com/CTCaer/hekate"&gt;hekate&lt;/a&gt; project's fork and the &lt;a href="https://github.com/CTCaer/minerva_tc"&gt;minerva_tc&lt;/a&gt; project.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;m4xw&lt;/strong&gt; for development of the &lt;a href="https://github.com/m4xw/emummc"&gt;emuMMC&lt;/a&gt; project.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Riley&lt;/strong&gt; for suggesting "Atmosphere" as a Horizon OS reimplementation+customization project name.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hedgeberg&lt;/strong&gt; for research and hardware testing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lioncash&lt;/strong&gt; for code cleanup and general improvements.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;jaames&lt;/strong&gt; for designing and providing Atmosphère's graphical resources.&lt;/li&gt;
&lt;li&gt;Everyone who submitted entries for Atmosphère's &lt;a href="https://github.com/Atmosphere-NX/Atmosphere-splashes"&gt;splash design contest&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;All those who actively contribute to the Atmosphère repository.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Atmosphere-NX</author><guid isPermaLink="false">https://github.com/Atmosphere-NX/Atmosphere</guid><pubDate>Mon, 09 Dec 2019 00:01:00 GMT</pubDate></item><item><title>nothings/stb #2 in C, Today</title><link>https://github.com/nothings/stb</link><description>&lt;p&gt;&lt;i&gt;stb single-file public domain libraries for C/C++&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-stb" class="anchor" aria-hidden="true" href="#stb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;stb&lt;/h1&gt;
&lt;p&gt;single-file public domain (or MIT licensed) libraries for C/C++&lt;/p&gt;
&lt;p&gt;Noteworthy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;image loader: &lt;a href="stb_image.h"&gt;stb_image.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;image writer: &lt;a href="stb_image_write.h"&gt;stb_image_write.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;image resizer: &lt;a href="stb_image_resize.h"&gt;stb_image_resize.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;font text rasterizer: &lt;a href="stb_truetype.h"&gt;stb_truetype.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;typesafe containers: &lt;a href="stb_ds.h"&gt;stb_ds.h&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most libraries by stb, except: stb_dxt by Fabian "ryg" Giesen, stb_image_resize
by Jorge L. "VinoBS" Rodriguez, and stb_sprintf by Jeff Roberts.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-stb_libs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;library&lt;/th&gt;
&lt;th&gt;lastest version&lt;/th&gt;
&lt;th&gt;category&lt;/th&gt;
&lt;th&gt;LoC&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_vorbis.c"&gt;stb_vorbis.c&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.17&lt;/td&gt;
&lt;td&gt;audio&lt;/td&gt;
&lt;td&gt;5502&lt;/td&gt;
&lt;td&gt;decode ogg vorbis files from file/memory to float/16-bit signed output&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_image.h"&gt;stb_image.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.23&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;7559&lt;/td&gt;
&lt;td&gt;image loading/decoding from file/memory: JPG, PNG, TGA, BMP, PSD, GIF, HDR, PIC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_truetype.h"&gt;stb_truetype.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.22&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;4888&lt;/td&gt;
&lt;td&gt;parse, decode, and rasterize characters from truetype fonts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_image_write.h"&gt;stb_image_write.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.13&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;1619&lt;/td&gt;
&lt;td&gt;image writing to disk: PNG, TGA, BMP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_image_resize.h"&gt;stb_image_resize.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.96&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;2630&lt;/td&gt;
&lt;td&gt;resize images larger/smaller with good quality&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_rect_pack.h"&gt;stb_rect_pack.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;628&lt;/td&gt;
&lt;td&gt;simple 2D rectangle packer with decent quality&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_ds.h"&gt;stb_ds.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.62&lt;/td&gt;
&lt;td&gt;utility&lt;/td&gt;
&lt;td&gt;1723&lt;/td&gt;
&lt;td&gt;typesafe dynamic array and hash tables for C, will compile in C++&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_sprintf.h"&gt;stb_sprintf.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.06&lt;/td&gt;
&lt;td&gt;utility&lt;/td&gt;
&lt;td&gt;1860&lt;/td&gt;
&lt;td&gt;fast sprintf, snprintf for C/C++&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stretchy_buffer.h"&gt;stretchy_buffer.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.03&lt;/td&gt;
&lt;td&gt;utility&lt;/td&gt;
&lt;td&gt;262&lt;/td&gt;
&lt;td&gt;typesafe dynamic array for C (i.e. approximation to vector&amp;lt;&amp;gt;), doesn't compile as C++&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_textedit.h"&gt;stb_textedit.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.13&lt;/td&gt;
&lt;td&gt;user interface&lt;/td&gt;
&lt;td&gt;1404&lt;/td&gt;
&lt;td&gt;guts of a text editor for games etc implementing them from scratch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_voxel_render.h"&gt;stb_voxel_render.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.88&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;3806&lt;/td&gt;
&lt;td&gt;Minecraft-esque voxel rendering "engine" with many more features&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_dxt.h"&gt;stb_dxt.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.08b&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;728&lt;/td&gt;
&lt;td&gt;Fabian "ryg" Giesen's real-time DXT compressor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_perlin.h"&gt;stb_perlin.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.4&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;427&lt;/td&gt;
&lt;td&gt;revised Perlin noise (3D input, 1D output)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_easy_font.h"&gt;stb_easy_font.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;303&lt;/td&gt;
&lt;td&gt;quick-and-dirty easy-to-deploy bitmap font for printing frame rate, etc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_tilemap_editor.h"&gt;stb_tilemap_editor.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.41&lt;/td&gt;
&lt;td&gt;game dev&lt;/td&gt;
&lt;td&gt;4161&lt;/td&gt;
&lt;td&gt;embeddable tilemap editor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_herringbone_wang_tile.h"&gt;stb_herringbone_wa...&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.7&lt;/td&gt;
&lt;td&gt;game dev&lt;/td&gt;
&lt;td&gt;1221&lt;/td&gt;
&lt;td&gt;herringbone Wang tile map generator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_c_lexer.h"&gt;stb_c_lexer.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.11&lt;/td&gt;
&lt;td&gt;parsing&lt;/td&gt;
&lt;td&gt;966&lt;/td&gt;
&lt;td&gt;simplify writing parsers for C-like languages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_divide.h"&gt;stb_divide.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.92&lt;/td&gt;
&lt;td&gt;math&lt;/td&gt;
&lt;td&gt;421&lt;/td&gt;
&lt;td&gt;more useful 32-bit modulus e.g. "euclidean divide"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_connected_components.h"&gt;stb_connected_comp...&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.96&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;1049&lt;/td&gt;
&lt;td&gt;incrementally compute reachability on grids&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb.h"&gt;stb.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.35&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;14453&lt;/td&gt;
&lt;td&gt;helper functions for C, mostly redundant in C++; basically author's personal stuff&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_leakcheck.h"&gt;stb_leakcheck.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;190&lt;/td&gt;
&lt;td&gt;quick-and-dirty malloc/free leak-checking&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_include.h"&gt;stb_include.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.01&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;288&lt;/td&gt;
&lt;td&gt;implement recursive #include support, particularly for GLSL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Total libraries: 22&lt;br&gt;
Total lines of C code: 56088&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-whats-the-license" class="anchor" aria-hidden="true" href="#whats-the-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the license?&lt;/h4&gt;
&lt;p&gt;These libraries are in the public domain. You can do anything you
want with them. You have no legal obligation
to do anything else, although I appreciate attribution.&lt;/p&gt;
&lt;p&gt;They are also licensed under the MIT open source license, if you have lawyers
who are unhappy with public domain. Every source file includes an explicit
dual-license for you to choose from.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content--are-there-other-single-file-public-domainopen-source-libraries-with-minimal-dependencies-out-there" class="anchor" aria-hidden="true" href="#-are-there-other-single-file-public-domainopen-source-libraries-with-minimal-dependencies-out-there"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-other_libs"&gt;&lt;/a&gt; Are there other single-file public-domain/open source libraries with minimal dependencies out there?&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/nothings/single_file_libs"&gt;Yes.&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-if-i-wrap-an-stb-library-in-a-new-library-does-the-new-library-have-to-be-public-domainmit" class="anchor" aria-hidden="true" href="#if-i-wrap-an-stb-library-in-a-new-library-does-the-new-library-have-to-be-public-domainmit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If I wrap an stb library in a new library, does the new library have to be public domain/MIT?&lt;/h4&gt;
&lt;p&gt;No, because it's public domain you can freely relicense it to whatever license your new
library wants to be.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-whats-the-deal-with-sse-support-in-gcc-based-compilers" class="anchor" aria-hidden="true" href="#whats-the-deal-with-sse-support-in-gcc-based-compilers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the deal with SSE support in GCC-based compilers?&lt;/h4&gt;
&lt;p&gt;stb_image will either use SSE2 (if you compile with -msse2) or
will not use any SIMD at all, rather than trying to detect the
processor at runtime and handle it correctly. As I understand it,
the approved path in GCC for runtime-detection require
you to use multiple source files, one for each CPU configuration.
Because stb_image is a header-file library that compiles in only
one source file, there's no approved way to build both an
SSE-enabled and a non-SSE-enabled variation.&lt;/p&gt;
&lt;p&gt;While we've tried to work around it, we've had multiple issues over
the years due to specific versions of gcc breaking what we're doing,
so we've given up on it. See &lt;a href="https://github.com/nothings/stb/issues/280"&gt;https://github.com/nothings/stb/issues/280&lt;/a&gt;
and &lt;a href="https://github.com/nothings/stb/issues/410"&gt;https://github.com/nothings/stb/issues/410&lt;/a&gt; for examples.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-some-of-these-libraries-seem-redundant-to-existing-open-source-libraries-are-they-better-somehow" class="anchor" aria-hidden="true" href="#some-of-these-libraries-seem-redundant-to-existing-open-source-libraries-are-they-better-somehow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some of these libraries seem redundant to existing open source libraries. Are they better somehow?&lt;/h4&gt;
&lt;p&gt;Generally they're only better in that they're easier to integrate,
easier to use, and easier to release (single file; good API; no
attribution requirement). They may be less featureful, slower,
and/or use more memory. If you're already using an equivalent
library, there's probably no good reason to switch.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-can-i-link-directly-to-the-table-of-stb-libraries" class="anchor" aria-hidden="true" href="#can-i-link-directly-to-the-table-of-stb-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I link directly to the table of stb libraries?&lt;/h4&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/nothings/stb#stb_libs"&gt;this URL&lt;/a&gt; to link directly to that list.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-do-you-list-lines-of-code-its-a-terrible-metric" class="anchor" aria-hidden="true" href="#why-do-you-list-lines-of-code-its-a-terrible-metric"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why do you list "lines of code"? It's a terrible metric.&lt;/h4&gt;
&lt;p&gt;Just to give you some idea of the internal complexity of the library,
to help you manage your expectations, or to let you know what you're
getting into. While not all the libraries are written in the same
style, they're certainly similar styles, and so comparisons between
the libraries are probably still meaningful.&lt;/p&gt;
&lt;p&gt;Note though that the lines do include both the implementation, the
part that corresponds to a header file, and the documentation.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-single-file-headers" class="anchor" aria-hidden="true" href="#why-single-file-headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why single-file headers?&lt;/h4&gt;
&lt;p&gt;Windows doesn't have standard directories where libraries
live. That makes deploying libraries in Windows a lot more
painful than open source developers on Unix-derivates generally
realize. (It also makes library dependencies a lot worse in Windows.)&lt;/p&gt;
&lt;p&gt;There's also a common problem in Windows where a library was built
against a different version of the runtime library, which causes
link conflicts and confusion. Shipping the libs as headers means
you normally just compile them straight into your project without
making libraries, thus sidestepping that problem.&lt;/p&gt;
&lt;p&gt;Making them a single file makes it very easy to just
drop them into a project that needs them. (Of course you can
still put them in a proper shared library tree if you want.)&lt;/p&gt;
&lt;p&gt;Why not two files, one a header and one an implementation?
The difference between 10 files and 9 files is not a big deal,
but the difference between 2 files and 1 file is a big deal.
You don't need to zip or tar the files up, you don't have to
remember to attach &lt;em&gt;two&lt;/em&gt; files, etc.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-stb-is-this-something-to-do-with-set-top-boxes" class="anchor" aria-hidden="true" href="#why-stb-is-this-something-to-do-with-set-top-boxes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why "stb"? Is this something to do with Set-Top Boxes?&lt;/h4&gt;
&lt;p&gt;No, they are just the initials for my name, Sean T. Barrett.
This was not chosen out of egomania, but as a moderately sane
way of namespacing the filenames and source function names.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-will-you-add-more-image-types-to-stb_imageh" class="anchor" aria-hidden="true" href="#will-you-add-more-image-types-to-stb_imageh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Will you add more image types to stb_image.h?&lt;/h4&gt;
&lt;p&gt;If people submit them, I generally add them, but the goal of stb_image
is less for applications like image viewer apps (which need to support
every type of image under the sun) and more for things like games which
can choose what images to use, so I may decline to add them if they're
too rare or if the size of implementation vs. apparent benefit is too low.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-do-you-have-any-advice-on-how-to-create-my-own-single-file-library" class="anchor" aria-hidden="true" href="#do-you-have-any-advice-on-how-to-create-my-own-single-file-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Do you have any advice on how to create my own single-file library?&lt;/h4&gt;
&lt;p&gt;Yes. &lt;a href="https://github.com/nothings/stb/blob/master/docs/stb_howto.txt"&gt;https://github.com/nothings/stb/blob/master/docs/stb_howto.txt&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-public-domain" class="anchor" aria-hidden="true" href="#why-public-domain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why public domain?&lt;/h4&gt;
&lt;p&gt;I prefer it over GPL, LGPL, BSD, zlib, etc. for many reasons.
Some of them are listed here:
&lt;a href="https://github.com/nothings/stb/blob/master/docs/why_public_domain.md"&gt;https://github.com/nothings/stb/blob/master/docs/why_public_domain.md&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-c" class="anchor" aria-hidden="true" href="#why-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why C?&lt;/h4&gt;
&lt;p&gt;Primarily, because I use C, not C++. But it does also make it easier
for other people to use them from other languages.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-not-c99-stdinth-declare-anywhere-etc" class="anchor" aria-hidden="true" href="#why-not-c99-stdinth-declare-anywhere-etc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why not C99? stdint.h, declare-anywhere, etc.&lt;/h4&gt;
&lt;p&gt;I still use MSVC 6 (1998) as my IDE because it has better human factors
for me than later versions of MSVC.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nothings</author><guid isPermaLink="false">https://github.com/nothings/stb</guid><pubDate>Mon, 09 Dec 2019 00:02:00 GMT</pubDate></item><item><title>loadzero/si78c #3 in C, Today</title><link>https://github.com/loadzero/si78c</link><description>&lt;p&gt;&lt;i&gt;si78c is a memory accurate reimplementation of Space Invaders in C.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-si78c" class="anchor" aria-hidden="true" href="#si78c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;si78c&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;si78c&lt;/code&gt; is a memory accurate reimplementation of the 1978 arcade game Space Invaders in C.&lt;/p&gt;
&lt;p&gt;It requires the original arcade ROM to function to load various sprites and
other data, but does not use the original game code.&lt;/p&gt;
&lt;p&gt;It is not an emulation, but rather a restoration.&lt;/p&gt;
&lt;p&gt;It is however, accurate enough that it can be used to understand the inner
workings of the original system, in a more accessible manner.&lt;/p&gt;
&lt;p&gt;Many thanks to Christopher Cantrell at computerarcheology.com. Without his
painstaking work and excellent notes, this project would have taken a lot
longer.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-project-scale" class="anchor" aria-hidden="true" href="#project-scale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Scale&lt;/h1&gt;
&lt;p&gt;This was a reasonably large undertaking, requiring many iterations over several
months, and I would conservatively estimate that around 200 hours of work have
been put into the project so far.&lt;/p&gt;
&lt;p&gt;The original ROM is around 2000 lines of 8080 assembler, all of it game code.
The final published version of &lt;code&gt;si78c&lt;/code&gt; is around 1500 lines of game code, 500
lines of support code, and around 800 lines of comments.&lt;/p&gt;
&lt;p&gt;There are about twenty thousand more lines of unpublished code in the
background consisting of the previous iterations and other support scripts
and tools that needed to be written to get the job done.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-accuracy" class="anchor" aria-hidden="true" href="#accuracy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accuracy&lt;/h1&gt;
&lt;p&gt;When running, &lt;code&gt;si78c&lt;/code&gt; produces identical memory states (apart from the stack) to
the original version. As a natural side effect, it produces pixel accurate
frames compared to the original.&lt;/p&gt;
&lt;p&gt;Cycle timing is not particularly accurate, but the game code is not
particularly sensitive to this, as it uses interrupts for timing most
things, instead of clock cycles.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-audience" class="anchor" aria-hidden="true" href="#audience"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Audience&lt;/h1&gt;
&lt;p&gt;The intended audience is hackers, enthusiasts, scholars, students, historians,
and anyone else engaged in digital archaeology.&lt;/p&gt;
&lt;p&gt;The code is intended to be used as a more accessible guide to studying the
original game, and learning about its inner workings.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-conventions" class="anchor" aria-hidden="true" href="#conventions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conventions&lt;/h1&gt;
&lt;p&gt;Where practical, I have used the same or similar function and variable names as
Cantrell, to more easily aid people studying both versions. The code is also
laid out in a similar order to the original.&lt;/p&gt;
&lt;p&gt;Every function with a matching analog in the original system is signposted
with a comment like &lt;code&gt;xref 028e&lt;/code&gt;, which gives the address of the matching routine
in the original ROM.&lt;/p&gt;
&lt;p&gt;A few other places in the code like loops and branches are annotated similarly.&lt;/p&gt;
&lt;p&gt;To find more detail on code near an xref, you can use Cantrell's
excellent notes &lt;a href="https://computerarcheology.com/Arcade/SpaceInvaders/Code.html" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-threading" class="anchor" aria-hidden="true" href="#threading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Threading&lt;/h1&gt;
&lt;p&gt;The original code is interrupt driven, and partially co-operatively
multitasked. The game spends about a third of the time running the main
thread, which gets pre-empted by the midscreen and vblank interrupts. The other
two thirds of the time is split between those interrupt contexts, which are not
pre-empted, but decide when to return to main.&lt;/p&gt;
&lt;p&gt;It also contains some interesting parts like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;02D0: 31 00 24        LD      SP,$2400         // wipe the stack
02D3: FB              EI                       // drop isr context
02D4: CD D7 19        CALL    DsableGameTasks  // keep going from this point
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That code (running in an interrupt context) after detecting the player's death,
essentially wipes out all thread contexts (including itself), and then becomes
the new main context.&lt;/p&gt;
&lt;p&gt;To handle things like this in the this in si78c, I decided to use &lt;code&gt;ucontext&lt;/code&gt;
(user level threading) to give me more fine grained control over thread
switching, creation and destruction.&lt;/p&gt;
&lt;p&gt;The equivalent piece of code in C to the above is a bit messier, and involves
using &lt;code&gt;swapcontext&lt;/code&gt; to swap to a scheduler context, which then resets all the
contexts, and then swaps back and re-enters at the desired point.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations&lt;/h1&gt;
&lt;p&gt;There is no sound, as the sound hardware is not emulated.&lt;/p&gt;
&lt;p&gt;Cycle timing is not particularly accurate, as mentioned, but its not very
important in this case.&lt;/p&gt;
&lt;p&gt;The code will currently only work on little endian systems, as the original
system (8080) was little endian, and we use the ROM data as is.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-porting" class="anchor" aria-hidden="true" href="#porting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Porting&lt;/h1&gt;
&lt;p&gt;The game is known to build and run on Ubuntu 18.04 and MacOSX El Capitan, and
will likely run on other x86 Unix systems, as long as they support &lt;code&gt;ucontext&lt;/code&gt; and
&lt;code&gt;SDL2&lt;/code&gt;. Unfortunately, &lt;code&gt;ucontext&lt;/code&gt; is deprecated on MacOSX, so it may not run on
later versions.&lt;/p&gt;
&lt;p&gt;The game is written in the subset of C99 that is compatible with C++, and uses
no compiler extensions apart from attribute packed. It will build fine on GCC 3
and above, and most likely any Unix C or C++ compiler newer than that.&lt;/p&gt;
&lt;p&gt;Porting to a non unix system like Windows would require changing out &lt;code&gt;ucontext&lt;/code&gt;
to use threads or fibers. Porting to a simpler system like DOS, or something
bare metal will require writing some code to blit to the framebuffer, and
adapting to whatever native interrupt facilities are available.&lt;/p&gt;
&lt;p&gt;In terms of CPU grunt required, the code isn't particularly optimized, and
currently requires a 32-bit processor capable of at least 10 Mips. It could be
made to fit on a smaller system with a bit of work.&lt;/p&gt;
&lt;p&gt;The code assumes little endian. To port to a big endian system would require
further dissection of the ROM, to identify and swizzle any little endian data
when it is loaded.&lt;/p&gt;
&lt;p&gt;Porting the code to another language would not be a small task, and would most
likely require switching out the threading system, and converting the code to
not use pointers.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building-and-running" class="anchor" aria-hidden="true" href="#building-and-running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building and running&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;SDL2&lt;/code&gt; is required as a dependency, to install on Ubuntu, do this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install libsdl2-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To grab the code and build the binary, do this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/loadzero/si78c.git &amp;amp;&amp;amp; cd si78c
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As mentioned, the original arcade ROM is required, &lt;code&gt;invaders.zip&lt;/code&gt; from the
&lt;code&gt;MAME_078&lt;/code&gt; set is known to work.&lt;/p&gt;
&lt;p&gt;The constituent parts must be placed in a folder called &lt;code&gt;inv1&lt;/code&gt;, and have
these checksums:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ md5sum inv1/*

7d3b201f3e84af3b4fcb8ce8619ec9c6  inv1/invaders.e
7709a2576adb6fedcdfe175759e5c17a  inv1/invaders.f
9ec2dc89315a0d50c5e166f664f64a48  inv1/invaders.g
e87815985f5208bfa25d567c3fb52418  inv1/invaders.h
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./bin/si78c
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The keyboard controls are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a   LEFT
d   RIGHT
1   1P
2   2P
j   FIRE
5   COIN
t   TILT
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>loadzero</author><guid isPermaLink="false">https://github.com/loadzero/si78c</guid><pubDate>Mon, 09 Dec 2019 00:03:00 GMT</pubDate></item><item><title>qmk/qmk_firmware #4 in C, Today</title><link>https://github.com/qmk/qmk_firmware</link><description>&lt;p&gt;&lt;i&gt;Open-source keyboard firmware for Atmel AVR and Arm USB families&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-quantum-mechanical-keyboard-firmware" class="anchor" aria-hidden="true" href="#quantum-mechanical-keyboard-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quantum Mechanical Keyboard Firmware&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/qmk/qmk_firmware/tags"&gt;&lt;img src="https://camo.githubusercontent.com/005a8cc5adfcc19206d618115380a09cb3314d22/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f716d6b2f716d6b5f6669726d776172652e737667" alt="Current Version" data-canonical-src="https://img.shields.io/github/tag/qmk/qmk_firmware.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/qmk/qmk_firmware" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4147250bb924409bf797c2744c1d826a25e079c2/68747470733a2f2f7472617669732d63692e6f72672f716d6b2f716d6b5f6669726d776172652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/qmk/qmk_firmware.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/Uq7gcHh" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e83c9cf50c33b3ed75d93292d04e936fe12a764f/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3434303836383233303437353637373639362e737667" alt="Discord" data-canonical-src="https://img.shields.io/discord/440868230475677696.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://docs.qmk.fm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9f9a5acb55cfde5f5ec8d5c8fce65d87936e78b5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d72656164792d6f72616e67652e737667" alt="Docs Status" data-canonical-src="https://img.shields.io/badge/docs-ready-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/qmk/qmk_firmware/pulse/monthly"&gt;&lt;img src="https://camo.githubusercontent.com/d673a6b1f5c8471666f790b34e5692e2f40758ca/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f716d6b2f716d6b5f6669726d776172652e737667" alt="GitHub contributors" data-canonical-src="https://img.shields.io/github/contributors/qmk/qmk_firmware.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/qmk/qmk_firmware/"&gt;&lt;img src="https://camo.githubusercontent.com/ce360857e992e3080431dd31c3b30d73e78d7ce0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f716d6b2f716d6b5f6669726d776172652e7376673f7374796c653d736f6369616c266c6162656c3d466f726b" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/qmk/qmk_firmware.svg?style=social&amp;amp;label=Fork" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a keyboard firmware based on the &lt;a href="https://github.com/tmk/tmk_keyboard"&gt;tmk_keyboard firmware&lt;/a&gt; with some useful features for Atmel AVR and ARM controllers, and more specifically, the &lt;a href="https://olkb.com" rel="nofollow"&gt;OLKB product line&lt;/a&gt;, the &lt;a href="https://ergodox-ez.com" rel="nofollow"&gt;ErgoDox EZ&lt;/a&gt; keyboard, and the &lt;a href="https://clueboard.co" rel="nofollow"&gt;Clueboard product line&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.qmk.fm" rel="nofollow"&gt;See the official documentation on docs.qmk.fm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The docs are powered by &lt;a href="https://docsify.js.org/" rel="nofollow"&gt;Docsify&lt;/a&gt; and hosted on &lt;a href="/docs/"&gt;GitHub&lt;/a&gt;. They are also viewable offline; see &lt;a href="https://docs.qmk.fm/#/contributing?id=previewing-the-documentation" rel="nofollow"&gt;Previewing the Documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;You can request changes by making a fork and opening a &lt;a href="https://github.com/qmk/qmk_firmware/pulls"&gt;pull request&lt;/a&gt;, or by clicking the "Edit Document" link at the bottom of any page.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-keyboards" class="anchor" aria-hidden="true" href="#supported-keyboards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Keyboards&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/keyboards/planck/"&gt;Planck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/preonic/"&gt;Preonic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/ergodox_ez/"&gt;ErgoDox EZ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/clueboard/"&gt;Clueboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/clueboard/17/"&gt;Cluepad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/atreus/"&gt;Atreus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The project also includes community support for &lt;a href="/keyboards/"&gt;lots of other keyboards&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-maintainers" class="anchor" aria-hidden="true" href="#maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainers&lt;/h2&gt;
&lt;p&gt;QMK is developed and maintained by Jack Humbert of OLKB with contributions from the community, and of course, &lt;a href="https://github.com/tmk"&gt;Hasu&lt;/a&gt;. The OLKB product firmwares are maintained by &lt;a href="https://github.com/jackhumbert"&gt;Jack Humbert&lt;/a&gt;, the Ergodox EZ by &lt;a href="https://github.com/zsa"&gt;ZSA Technology Labs&lt;/a&gt;, the Clueboard by &lt;a href="https://github.com/skullydazed"&gt;Zach White&lt;/a&gt;, and the Atreus by &lt;a href="https://github.com/technomancy"&gt;Phil Hagelberg&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-official-website" class="anchor" aria-hidden="true" href="#official-website"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Website&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://qmk.fm" rel="nofollow"&gt;qmk.fm&lt;/a&gt; is the official website of QMK, where you can find links to this page, the documentation, and the keyboards supported by QMK.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>qmk</author><guid isPermaLink="false">https://github.com/qmk/qmk_firmware</guid><pubDate>Mon, 09 Dec 2019 00:04:00 GMT</pubDate></item><item><title>hak5darren/USB-Rubber-Ducky #5 in C, Today</title><link>https://github.com/hak5darren/USB-Rubber-Ducky</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body txt" data-path="README.txt"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;      _      _      _      USB       _      _      _
   __(.)&amp;lt; __(.)&amp;gt; __(.)=   Rubber   &amp;gt;(.)__ &amp;lt;(.)__ =(.)__
   \___)  \___)  \___)    Ducky!    (___/  (___/  (___/ 

The USB Rubber Ducky is a Human Interface Device programmable with a simple scripting language allowing penetration testers to quickly and easily craft and deploy security auditing payloads that mimic human keyboard input. The source is written in C and requires the AVR Studio 5 IDE from atmel.com/avrstudio. Hardware is commercially available at hakshop.com. Tools and payloads can be found at usbrubberducky.com. Quack!
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>hak5darren</author><guid isPermaLink="false">https://github.com/hak5darren/USB-Rubber-Ducky</guid><pubDate>Mon, 09 Dec 2019 00:05:00 GMT</pubDate></item><item><title>RIOT-OS/RIOT #6 in C, Today</title><link>https://github.com/RIOT-OS/RIOT</link><description>&lt;p&gt;&lt;i&gt;RIOT -  The friendly OS for IoT&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://ci.riot-os.org/nightlies.html#master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/49b8f5701cdb74ee04a9a4205ec52e7887fa1993/68747470733a2f2f63692e72696f742d6f732e6f72672f52494f542d4f532f52494f542f6d61737465722f6c61746573742f62616467652e737667" alt="Nightly CI status master" data-canonical-src="https://ci.riot-os.org/RIOT-OS/RIOT/master/latest/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://webchat.freenode.net?channels=%23riot-os" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d2ddeb06886348ec3dd2e28b95e9b40e99f47584/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4952432d6a6f696e253230636861742532302545322538362539322d626c75652e737667" alt="IRC" data-canonical-src="https://img.shields.io/badge/IRC-join%20chat%20%E2%86%92-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                      ZZZZZZ
                    ZZZZZZZZZZZZ
                  ZZZZZZZZZZZZZZZZ
                 ZZZZZZZ     ZZZZZZ
                ZZZZZZ        ZZZZZ
                ZZZZZ          ZZZZ
                ZZZZ           ZZZZZ
                ZZZZ           ZZZZ
                ZZZZ          ZZZZZ
                ZZZZ        ZZZZZZ
                ZZZZ     ZZZZZZZZ       777        7777       7777777777
          ZZ    ZZZZ   ZZZZZZZZ         777      77777777    77777777777
      ZZZZZZZ   ZZZZ  ZZZZZZZ           777     7777  7777       777
    ZZZZZZZZZ   ZZZZ    Z               777     777    777       777
   ZZZZZZ       ZZZZ                    777     777    777       777
  ZZZZZ         ZZZZ                    777     777    777       777
 ZZZZZ          ZZZZZ    ZZZZ           777     777    777       777
 ZZZZ           ZZZZZ    ZZZZZ          777     777    777       777
 ZZZZ           ZZZZZ     ZZZZZ         777     777    777       777
 ZZZZ           ZZZZ       ZZZZZ        777     777    777       777
 ZZZZZ         ZZZZZ        ZZZZZ       777     777    777       777
  ZZZZZZ     ZZZZZZ          ZZZZZ      777     7777777777       777
   ZZZZZZZZZZZZZZZ            ZZZZ      777      77777777        777
     ZZZZZZZZZZZ               Z
        ZZZZZ
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The friendly Operating System for IoT!&lt;/p&gt;
&lt;p&gt;RIOT is a real-time multi-threading operating system that supports a range of
devices that are typically found in the Internet of Things (IoT):
8-bit, 16-bit and 32-bit microcontrollers.&lt;/p&gt;
&lt;p&gt;RIOT is based on the following design principles: energy-efficiency, real-time
capabilities, small memory footprint, modularity, and uniform API access,
independent of the underlying hardware (this API offers partial POSIX
compliance).&lt;/p&gt;
&lt;p&gt;RIOT is developed by an international open source community which is
independent of specific vendors (e.g. similarly to the Linux community).
RIOT is licensed with LGPLv2.1, a copyleft license which fosters
indirect business models around the free open-source software platform
provided by RIOT, e.g. it is possible to link closed-source code with the
LGPL code.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FEATURES&lt;/h2&gt;
&lt;p&gt;RIOT is based on a microkernel architecture, and provides features including,
but not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a preemptive, tickless scheduler with priorities&lt;/li&gt;
&lt;li&gt;flexible memory management&lt;/li&gt;
&lt;li&gt;high resolution, long-term timers&lt;/li&gt;
&lt;li&gt;support 100+ boards based on AVR, MSP430, ESP8266, ESP32, MIPS, RISC-V,
ARM7 and ARM Cortex-M&lt;/li&gt;
&lt;li&gt;the native port allows to run RIOT as-is on Linux, BSD, and MacOS. Multiple
instances of RIOT running on a single machine can also be interconnected via
a simple virtual Ethernet bridge&lt;/li&gt;
&lt;li&gt;IPv6&lt;/li&gt;
&lt;li&gt;6LoWPAN (RFC4944, RFC6282, and RFC6775)&lt;/li&gt;
&lt;li&gt;UDP&lt;/li&gt;
&lt;li&gt;RPL (storing mode, P2P mode)&lt;/li&gt;
&lt;li&gt;CoAP&lt;/li&gt;
&lt;li&gt;CCN-Lite&lt;/li&gt;
&lt;li&gt;Sigfox&lt;/li&gt;
&lt;li&gt;LoRaWAN&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GETTING STARTED&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You want to start the RIOT? Just follow our
&lt;a href="https://doc.riot-os.org/index.html#the-quickest-start" rel="nofollow"&gt;quickstart guide&lt;/a&gt; or
try this
&lt;a href="https://github.com/RIOT-OS/Tutorials/blob/master/README.md"&gt;tutorial&lt;/a&gt;.
For specific toolchain installation, follow instructions in the
&lt;a href="https://doc.riot-os.org/getting-started.html" rel="nofollow"&gt;getting started&lt;/a&gt; page.&lt;/li&gt;
&lt;li&gt;The RIOT API itself can be built from the code using doxygen. The latest
version of the documentation is uploaded daily to
&lt;a href="https://riot-os.org/api" rel="nofollow"&gt;riot-os.org/api&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-native-port-with-networking" class="anchor" aria-hidden="true" href="#using-the-native-port-with-networking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;USING THE NATIVE PORT WITH NETWORKING&lt;/h3&gt;
&lt;p&gt;If you compile RIOT for the native cpu and include the &lt;code&gt;netdev_tap&lt;/code&gt; module,
you can specify a network interface like this: &lt;code&gt;PORT=tap0 make term&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-setting-up-a-tap-network" class="anchor" aria-hidden="true" href="#setting-up-a-tap-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SETTING UP A TAP NETWORK&lt;/h4&gt;
&lt;p&gt;There is a shell script in &lt;code&gt;RIOT/dist/tools/tapsetup&lt;/code&gt; called &lt;code&gt;tapsetup&lt;/code&gt; which
you can use to create a network of tap interfaces.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;USAGE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;To create a bridge and two (or &lt;code&gt;count&lt;/code&gt; at your option) tap interfaces:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./dist/tools/tapsetup/tapsetup [-c [&amp;lt;count&amp;gt;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CONTRIBUTE&lt;/h2&gt;
&lt;p&gt;To contribute something to RIOT, please refer to our
&lt;a href="CONTRIBUTING.md"&gt;contributing document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mailing-lists" class="anchor" aria-hidden="true" href="#mailing-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MAILING LISTS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;RIOT OS kernel developers list&lt;/li&gt;
&lt;li&gt;&lt;a href="mailto:devel@riot-os.org"&gt;devel@riot-os.org&lt;/a&gt; (&lt;a href="https://lists.riot-os.org/mailman/listinfo/devel" rel="nofollow"&gt;https://lists.riot-os.org/mailman/listinfo/devel&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;RIOT OS users list&lt;/li&gt;
&lt;li&gt;&lt;a href="mailto:users@riot-os.org"&gt;users@riot-os.org&lt;/a&gt; (&lt;a href="https://lists.riot-os.org/mailman/listinfo/users" rel="nofollow"&gt;https://lists.riot-os.org/mailman/listinfo/users&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;RIOT commits&lt;/li&gt;
&lt;li&gt;&lt;a href="mailto:commits@riot-os.org"&gt;commits@riot-os.org&lt;/a&gt; (&lt;a href="https://lists.riot-os.org/mailman/listinfo/commits" rel="nofollow"&gt;https://lists.riot-os.org/mailman/listinfo/commits&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Github notifications&lt;/li&gt;
&lt;li&gt;&lt;a href="mailto:notifications@riot-os.org"&gt;notifications@riot-os.org&lt;/a&gt;
(&lt;a href="https://lists.riot-os.org/mailman/listinfo/notifications" rel="nofollow"&gt;https://lists.riot-os.org/mailman/listinfo/notifications&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LICENSE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Most of the code developed by the RIOT community is licensed under the GNU
Lesser General Public License (LGPL) version 2.1 as published by the Free
Software Foundation.&lt;/li&gt;
&lt;li&gt;Some external sources, especially files developed by SICS are published under
a separate license.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All code files contain licensing information.&lt;/p&gt;
&lt;p&gt;For more information, see the RIOT website:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.riot-os.org" rel="nofollow"&gt;https://www.riot-os.org&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>RIOT-OS</author><guid isPermaLink="false">https://github.com/RIOT-OS/RIOT</guid><pubDate>Mon, 09 Dec 2019 00:06:00 GMT</pubDate></item><item><title>Ewenwan/ShiYanLou #7 in C, Today</title><link>https://github.com/Ewenwan/ShiYanLou</link><description>&lt;p&gt;&lt;i&gt;学习C &amp; C++ &amp; python&amp;汇编语言 数据结构 算法 操作系统 单片机  linux  面试&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-参考资料" class="anchor" aria-hidden="true" href="#参考资料"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;参考资料&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/jxt1234and2010/article/details/45201421" rel="nofollow"&gt;自动编程体系设想 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mylxsw/growing-up"&gt;程序猿成长计划&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://visualgo.net/zh" rel="nofollow"&gt;数据结构和算法动态可视化&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Ewenwan/Data-Structures-and-Algorithms-in-C"&gt;基础数据结构和算法的纯C语言实现&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/PLester/Interview-Notebook/tree/master/notes"&gt;计算机科学 面试笔记&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/CyC2018/CS-Notes/tree/master/docs/notes"&gt;计算机科学 面试笔记2 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythontutor.com/" rel="nofollow"&gt;可视化代码过程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Ewenwan/practice"&gt;各种工程实践代码参考 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Ewenwan/Cplusplus-Concurrency-In-Practice"&gt;c++ 多线程 并发 指南 实战&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cprogramming.com/" rel="nofollow"&gt;c/c++教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.zhihu.com/question/20410487" rel="nofollow"&gt;学习C++，应该循序渐进的看哪些书？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/skywang12345/p/3603935.html" rel="nofollow"&gt;数据结构与算法系列 目录&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nowcoder.com/discuss/19305?type=0&amp;amp;order=1&amp;amp;pos=14&amp;amp;page=1" rel="nofollow"&gt;刷完这65道题，面试通过率翻翻没问题 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Ewenwan/Messy_Test"&gt;c++代码实验&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ctolib.com/" rel="nofollow"&gt;源代码查找 热度 书籍 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://searchcode.com/" rel="nofollow"&gt;源代码查找 英文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Ewenwan/free-programming-books-zh_CN"&gt;免费的编程中文书籍索引&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Ewenwan/code_interview"&gt;代码面试较好 强烈推荐！！！！！&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/fk1174/article/details/52825826" rel="nofollow"&gt;nowcoder刷题笔记&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/fk1174/article/details/52744844" rel="nofollow"&gt;LeetCode刷题笔记&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/fk1174/article/details/51841025" rel="nofollow"&gt;跟我一起复习C++&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/x_r_su/article/details/52461557" rel="nofollow"&gt;Leetcode常用五大算法思想&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/neu_chenguangq/article/list/3" rel="nofollow"&gt;数据结构 博客参考 树 图 队列&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.weixinyu.info/2017/08/Use_GitHubPages_and_Jekyll_build_my_blog/" rel="nofollow"&gt;GitHub Pages+Jekyll搭建个人博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://baixin.io/2016/11/markdownTool/" rel="nofollow"&gt;Markdown工具集&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://github.com/oscourse-tsinghua"&gt;清华操作系统 github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/column/details/tennysonsky-linux.html" rel="nofollow"&gt;博客专栏 Linux环境编程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/tennysonsky/article/category/2835083" rel="nofollow"&gt;博客专栏 Linux网络编程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/column/details/tennysonsky.html" rel="nofollow"&gt;博客专栏 一步步学习C++&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/column/details/15161.html" rel="nofollow"&gt;博客专栏 C语言&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fishc.com/" rel="nofollow"&gt;鱼C工作室 C/C++/Python/Wed/数据结构和算法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/tennysonsky/article/category/1438449" rel="nofollow"&gt;图形界面编程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/cheese_pop?t=1" rel="nofollow"&gt;面试算法博客笔记&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/cyningsun/article/category/720182" rel="nofollow"&gt; 刘国平基础算法 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Ewenwan/cpp11"&gt;CPP11新特新 代码实战&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Ewenwan/modern-cpp-concepts"&gt;新特征 C++11/14/17  concepts and code snippets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Ewenwan/Cplusplus-Concurrency-In-Practice"&gt;A Detailed Cplusplus Concurrency Tutorial 《C++ 并发编程指南》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/xiaoweiChen/Cpp_Concurrency_In_Action"&gt;基于C++11新标准的并发和多线程编程深度指南 C++ Concurrency In Action&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Ewenwan/CPP-17-STL-cookbook"&gt;《C++17 STL cookbook》英文版的中文翻译 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/LeeWei4939/article/details/78806230" rel="nofollow"&gt;哈希学习&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.oracle.com/cd/E57201_01/" rel="nofollow"&gt;甲骨文公司编辑器Oracle Solaris Studio 12.4 Information Library (简体中文) c/cpp用户指南 数值计算指南 代码分析器 性能分析器 线程分析器&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.icourse163.org/course/HIT-1002123007" rel="nofollow"&gt;哈工大 编译原理 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cnblogs.com/zyrblog/p/6885922.html" rel="nofollow"&gt;编译原理——词法分析器实现&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.xuetangx.com/courses/course-v1:XIYOU+20180208+sp/about" rel="nofollow"&gt;编译技术 西电&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Ewenwan/gitbook"&gt;在线书籍编写模板 gitbook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/codefollower/My-Blog/blob/master/md-files/issues-001.md"&gt;循序渐进学习书目&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-包含内容" class="anchor" aria-hidden="true" href="#包含内容"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;包含内容：&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;	1. c

	2. c++

	3. python

	4. 汇编语言

	5. 数据机构和算法 面试

	6. 操作系统os

	7. 单片机stm32 arduino Ti-msp430 树莓派 px4 arm

	8. 数据挖掘

	9. 人机工程学

	10. 计算机科学
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-学习c应该循序渐进的看哪些书" class="anchor" aria-hidden="true" href="#学习c应该循序渐进的看哪些书"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;学习C++，应该循序渐进的看哪些书？&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-阶段--1" class="anchor" aria-hidden="true" href="#阶段--1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;阶段  1&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;《Essential  C++》
这是一本内容不多但很实用的C++入门书籍，强调快速上手与理解C++编程。
本书主要围绕一系列逐渐复杂的程序问题，以及用以解决这些问题的语言特性展开讲解。
你不只学到C++的函数和结构，也会学习到它们的设计目的和基本原理。

《C++ Primer》
本书对C++基本概念、技术、以及现代C++编程风格进行了全面而且权威的阐述，是C++初学者的最佳指南；
本书可以帮助你编写实用的程序，而无需首先精通每个语言细节。
对于中高级程序员，本书也是不可或缺的参考书。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-阶段--2" class="anchor" aria-hidden="true" href="#阶段--2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;阶段  2&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;《Effective C++》和《More effective C++》作者是Scott  Meyers。
你应该熟读它们，并清楚地理解每个项目。
该书围绕55条准则，每一条都介绍了一个可让你写出更好的C++程序代码的方法，并以特别设计过的例子详加讨论。

《Exceptional  C++（C++编程剖析）》和《More exceptional  C++》
这两本书中都包含了40个C++编程问题，这些问题会让你磨练自己的技能，最终成为优秀的C++程序员。
这些问题是Herb  Sutter精心挑选，与ISO/ANSI C++官方标准相一致，
帮助程序员在设计、架构和编码过程中保持良好的风格，从而使编写的C++软件更健壮、更高效。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-阶段--3" class="anchor" aria-hidden="true" href="#阶段--3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;阶段  3&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;《Inside  the C++ object model（深度探索C++对象模型）》
本书专注于C++面向对象程序设计的底层机制，
包括结构式语意、临时性对象的生成、封装、继承，以及虚拟——虚拟函数和虚拟继承，
帮助你理解程序的底层实现，以便写出更高效的代码。

《The  design and evolution of C++（C++语言的设计与演化）》
本书作者也是C++语言的设计者Bjarne  Stroustrup，作者在书中综合性地介绍了C++的发展历史，
C++中各种重要机制的本质意义和设计背景，这些机制的基本用途和使用方法，
讨论了C++所适合的应用领域及其未来的发展前景，既没有忽略关键性的详情，又没有过多地陷入技术细节。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-阶段--4" class="anchor" aria-hidden="true" href="#阶段--4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;阶段  4&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;《The  C++ standard library（C++标准程序库）》
这是标准模板库字典，你可以在本书中找到STL相关的一切知识。
本书焦点放在标准模板库、检查容器、迭代器、函数对象和STL算法上。
每一个元素都有深刻的呈现，包括其介绍、设计、运用实例、
细节解说、陷阱、意想不到的危险，以及相关类别和函数等。

《Effective  STL》
这是Scott  Meyers的第三本C++专著，也是学习STL最权威的书籍。
作者对书中的50个指导方针都作了详尽的分析，并配以示例。
通过这些规则，C++开发者可以最大限度地使用STL。

《Generic  programming and the STL（泛型编程与STL）》
本书阐述了泛型程序设计的核心理念：concepts（概念）、modeling（模型）和refinement（改善），
并为你展示这些观念如何导出STL的基础概念：iterators（迭代器）、
containers（容器）和function  objects（函数对象）。
按照本书所述，你可以把STL想象成一个由concepts组成的library，你将学习到STL正式结构并理解其强大的优势。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-阶段--5" class="anchor" aria-hidden="true" href="#阶段--5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;阶段  5&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;《Exceptional C++ style》
作者为Herb  Sutter。本书同样提出了40个C++风格相关的问题
，对一些至关重要的C++细节和相互关系提出了新的见解，
为当今的关键C++编程技术（如泛型编程、STL、异常安全等）提供了新的策略，
帮助开发者在开销与功能之间、优雅与可维护性之间、灵活性与过分灵活之间寻找完美的平衡点。

《C++  template》
这是一本关于C++模板的完整的参考手册和教程，它强调模板的使用实践，包含了现实世界中的例子。
每个C++程序员都应该好好读一读这本书。

《Modern  C++ design（现代C++设计）》
作者Andrei  Alexandrescu为C++程序员打开了一个新的局面。
本书提供了一些针对软件设计的前沿方法，如联合设计模式、泛型编程，
使程序员可以编写有表现力的、灵活的、高度可重用的代码。

《Thinking  in C++（C++编程思想）》
C++  领域权威著作，介绍了C++实用的编程技术和最佳的实践方法。
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-值得学习的开源代码" class="anchor" aria-hidden="true" href="#值得学习的开源代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;值得学习的开源代码&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-1webbench" class="anchor" aria-hidden="true" href="#1webbench"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.Webbench&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Webbench是一个在Linux下使用的非常简单的网站压测工具。
它使用fork()模拟多个客户端同时访问我们设定的URL，测试网站在压力下工作的性能，
最多可以模拟3万个并发连接去测试网站的负载能力。
Webbench使用C语言编写, 代码实在太简洁，源码加起来不到600行。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;项目主页: &lt;a href="http://home.tiscali.cz/~cz210552/webbench.html" rel="nofollow"&gt;http://home.tiscali.cz/~cz210552/webbench.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-2-tinyhttpd" class="anchor" aria-hidden="true" href="#2-tinyhttpd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Tinyhttpd&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;tinyhttpd是一个超轻量型Http Server，使用C语言开发，全部代码只有502行(包括注释)，
附带一个简单的Client，可以通过阅读这段代码理解一个 Http Server 的本质。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;项目主页: &lt;a href="http://sourceforge.net/projects/tinyhttpd/" rel="nofollow"&gt;http://sourceforge.net/projects/tinyhttpd/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3-cjson" class="anchor" aria-hidden="true" href="#3-cjson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. cJSON&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;cJSON是C语言中的一个JSON编解码器，非常轻量级，C文件只有500多行，速度也非常理想。
cJSON也存在几个弱点，虽然功能不是非常强大，但cJSON的小身板和速度是最值得赞赏的。
其代码被非常好地维护着，结构也简单易懂，可以作为一个非常好的C语言项目进行学习。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;项目主页: &lt;a href="http://sourceforge.net/projects/cjson/" rel="nofollow"&gt;http://sourceforge.net/projects/cjson/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-4-cmockery" class="anchor" aria-hidden="true" href="#4-cmockery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. CMockery&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;cmockery是google发布的用于C单元测试的一个轻量级的框架。
它很小巧，对其他开源包没有依赖，对被测试代码侵入性小。
cmockery的源代码行数不到3K，你阅读一下will_return和mock的源代码就一目了然了。

主要特点：
    免费且开源，google提供技术支持；
    轻量级的框架，使测试更加快速简单；
    避免使用复杂的编译器特性，对老版本的编译器来讲，兼容性好;
    并不强制要求待测代码必须依赖C99标准，这一特性对许多嵌入式系统的开发很有用
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;项目主页: &lt;a href="http://code.google.com/p/cmockery/downloads/list" rel="nofollow"&gt;http://code.google.com/p/cmockery/downloads/list&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-5-libev" class="anchor" aria-hidden="true" href="#5-libev"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. Libev&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;libev是一个开源的事件驱动库，基于epoll，kqueue等OS提供的基础设施。
其以高效出名，它可以将IO事件，定时器，和信号统一起来，统一放在事件处理这一套框架下处理。
基于Reactor模式，效率较高，并且代码精简（4.15版本8000多行），是学习事件驱动编程的很好的资源。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;项目主页: &lt;a href="http://software.schmorp.de/pkg/libev.html" rel="nofollow"&gt;http://software.schmorp.de/pkg/libev.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-6-memcached" class="anchor" aria-hidden="true" href="#6-memcached"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6. Memcached&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Memcached 是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。
它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态数据库驱动网站的速度。
Memcached 基于一个存储键/值对的 hashmap。
Memcached-1.4.7的代码量还是可以接受的，只有10K行左右。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;项目主页: &lt;a href="http://memcached.org/" rel="nofollow"&gt;http://memcached.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-7--lua" class="anchor" aria-hidden="true" href="#7--lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7.  Lua&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Lua很棒，Lua是巴西人发明的，这些都令我不爽，但是还不至于脸红，最多眼红。
让我脸红的是Lua的源代码，百分之一百的ANSI C，一点都不掺杂。
在任何支持ANSI C编译器的平台上都可以轻松编译通过。我试过，真是一点废话都没有。
Lua的代码数量足够小，5.1.4仅仅1.5W行，去掉空白行和注释估计能到1W行。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;项目主页: &lt;a href="http://www.lua.org/" rel="nofollow"&gt;http://www.lua.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-8-sqlite" class="anchor" aria-hidden="true" href="#8-sqlite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8. SQLite&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;SQLite是一个开源的嵌入式关系数据库，实现自包容、零配置、支持事务的SQL数据库引擎。 
其特点是高度便携、使用方便、结构紧凑、高效、可靠。足够小，大致3万行C代码，250K。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;项目主页: &lt;a href="http://www.sqlite.org/" rel="nofollow"&gt;http://www.sqlite.org/&lt;/a&gt; 。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-9-unix-v6" class="anchor" aria-hidden="true" href="#9-unix-v6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9. UNIX v6&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;UNIX V6 的内核源代码包括设备驱动程序在内 约有1 万行，这个数量的源代码，初学者是能够充分理解的。
有一种说法是一个人所能理解的代码量上限为1 万行，UNIX V6的内核源代码从数量上看正好在这个范围之内。
看到这里，大家是不是也有“如果只有1万行的话没准儿我也能学会”的想法呢？

另一方面，最近的操作系统，例如Linux 最新版的内核源代码据说超过了1000 万行。
就算不是初学者，想完全理解全部代码基本上也是不可能的。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;项目主页: &lt;a href="http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6" rel="nofollow"&gt;http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-10-netbsd" class="anchor" aria-hidden="true" href="#10-netbsd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10. NETBSD&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;NetBSD是一个免费的，具有高度移植性的 UNIX-like 操作系统，
是现行可移植平台最多的操作系统，可以在许多平台上执行，
从 64bit alpha 服务器到手持设备和嵌入式设备。
NetBSD计划的口号是：”Of course it runs NetBSD”。
它设计简洁，代码规范，拥有众多先进特性，使得它在业界和学术界广受好评。
由于简洁的设计和先进的特征，使得它在生产和研究方面，
都有卓越的表现，而且它也有受使用者支持的完整的源代码。
许多程序都可以很容易地通过NetBSD Packages Collection获得。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;项目主页: &lt;a href="http://www.netbsd.org/" rel="nofollow"&gt;http://www.netbsd.org/&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-0-个类型结构大小-sizeof" class="anchor" aria-hidden="true" href="#0-个类型结构大小-sizeof"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0 个类型结构大小 sizeof&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-3-语法" class="anchor" aria-hidden="true" href="#3-语法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 语法：&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sizeof有三种语法形式，如下：
1) sizeof( object );    // sizeof( 对象 );
2) sizeof( type_name ); // sizeof( 类型 );
3) sizeof object;       // sizeof 对象; 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-2-指针变量的sizeof---48" class="anchor" aria-hidden="true" href="#2-指针变量的sizeof---48"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 指针变量的sizeof   4/8&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt; 与计算机类型有关，32为计算机，地址长度为4字节
 64位的计算机，地长度为 8字节
 这里的指针包括所有类型的指针:
    字符指针、整形指针、字符串指针、指针的指针、函数指针、数组指针等。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-3数组的sizeof" class="anchor" aria-hidden="true" href="#3数组的sizeof"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.数组的sizeof&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;数组的sizeof值等于数组所占用的内存字节数，如：
char a1[] = "abc";
int a2[3];
sizeof( a1 ); // 结果为4，字符串末尾还存在一个NULL终止符
sizeof( a2 ); // 结果为3*4=12（依赖于int,这里int为4字节） 
// 这里注意 &amp;amp;a2和a2的值是相等的,都是a2[0]的地址
// 但是 &amp;amp;a2 的类型为 int *[10]
// 而a2的类型为 int* p

//数组元素数量求取
int c1 = sizeof( a1 ) / sizeof( char ); // 总长度/单个元素的长度(知道元素类型)
int c2 = sizeof( a1 ) / sizeof( a1[0] ); // 总长度/第一个元素的长度(不知道元素类型)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-4-sizeof进行结构体大小的判断" class="anchor" aria-hidden="true" href="#4-sizeof进行结构体大小的判断"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. sizeof进行结构体大小的判断&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;    需要看编译器是几个字节对齐 的，一般为4字节对齐
typedef struct
{
    int a;  // 占据第一个4字节
    char b; // 占据第二个4字节
}A_t;
typedef struct
{
    int a; // 占据第一个4字节
    char b;// 占据第二个4字节中的第一个字节
    char c;// 占据第二个4字节中的第二个字节
}B_t;
typedef struct
{
    char a;// 占据第一个4字节的第一个字节
    int b; // 占据第二个4字节
    char c;// 占据第三个4字节的第一个字节
}C_t;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-1-编程技巧-来自--effective-stl" class="anchor" aria-hidden="true" href="#1-编程技巧-来自--effective-stl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 编程技巧 来自  effective stl&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/u014110320/article/category/6411316" rel="nofollow"&gt;effective stl 博客参考&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-a浮点数判等" class="anchor" aria-hidden="true" href="#a浮点数判等"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;a)浮点数判等&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;判断两个浮点数a和b是否相等时，不要使用 a==b ,
应该判断两者的绝对值之差fabs(a-b)是否小于一个阈值 ，如1e-9
if(fabs(a-b) &amp;lt; 1e-9)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-b-char类型用作数组下标需要注意的问题" class="anchor" aria-hidden="true" href="#b-char类型用作数组下标需要注意的问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;b) char类型用作数组下标需要注意的问题&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;应该先将char 强制转换为 unsigned char后在用作下标。
char index_;
unsigned char index = (unsigned char)index_;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-c-向量vector-和-字符串string-优先于-动态分配的数组new-delete" class="anchor" aria-hidden="true" href="#c-向量vector-和-字符串string-优先于-动态分配的数组new-delete"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;c) 向量vector 和 字符串string 优先于 动态分配的数组new[] delete[]&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;vector 和 string 定义的对象 会自动 构造和析构，不用担心内存泄漏的问题
使用new[]分配的动态数组，需要配合 delete[]类释放会造成内存，否者会造成内存泄漏的问题

例如 定义一个二维数组，指针的指针
自己用new实现：
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;	&lt;span class="pl-k"&gt;int&lt;/span&gt;** arr_pp new &lt;span class="pl-k"&gt;int&lt;/span&gt;* [row_num];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 定义一个存储指针的数组的指针 行数&lt;/span&gt;
	&lt;span class="pl-k"&gt;for&lt;/span&gt;(i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; row_num; ++i)
	    arr_pp[i] = new &lt;span class="pl-k"&gt;int&lt;/span&gt;[col_num];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 一个一个new 指针每一行是一个行向量的指针&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;用 vector实现，一行代码搞定，还不到担心内存泄漏的问题
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;	vector&amp;lt;vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-en"&gt;v_i2&lt;/span&gt;(row_num,vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;(col_num,&lt;span class="pl-c1"&gt;0&lt;/span&gt;));&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;初始化为一个0矩阵&lt;/span&gt;
	vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; m;  
        m.reserve(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;提前保留1000的内存&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;使用 reserve 避免不必要的重新分配 &lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-c-primer5-语言学习记录" class="anchor" aria-hidden="true" href="#c-primer5-语言学习记录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C++ primer5 语言学习记录&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-复合类型" class="anchor" aria-hidden="true" href="#复合类型"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;复合类型&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-引用---左值引用lvalue-reference-别名-int-valrefval--val-右值引用-rvalue-reference" class="anchor" aria-hidden="true" href="#引用---左值引用lvalue-reference-别名-int-valrefval--val-右值引用-rvalue-reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;引用 &amp;amp;   左值引用lvalue reference  别名; int val; &amp;amp;refval = val; 右值引用 rvalue reference&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; val = &lt;span class="pl-c1"&gt;1024&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;整形变量&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;refVal = val;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 整形引用 refVal 指向 val ，是val的另一个名字，&lt;/span&gt;
                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 引用必须被初始化，引用不是对象，只是为所存在的对象起的一个别名。&lt;/span&gt;
refVal = &lt;span class="pl-c1"&gt;2&lt;/span&gt;;       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 把2 赋值给refVal 也就是 赋值给了 val&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; i = refVal;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 相当于 i = val; &lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;refVal2 = &lt;span class="pl-c1"&gt;10&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误，非常量引用只能绑定(bind)在对象向,&lt;/span&gt;
                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 不能与字面值或某个表达式的计算结果绑定在一起, 且引用的类型 必须和 对象的类型一致&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;rci = &lt;span class="pl-c1"&gt;10&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 常量引用可以绑定到 字面值 非常量 一般表达式&lt;/span&gt;
&lt;span class="pl-k"&gt;double&lt;/span&gt; dval = &lt;span class="pl-c1"&gt;3.14&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 浮点数&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;refVal3 = dval; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误，引用的类型 和 对象 必须一致&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-指针-pointer--指向-point-to-另外一个对象其存储地址" class="anchor" aria-hidden="true" href="#指针-pointer--指向-point-to-另外一个对象其存储地址"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;指针 pointer * 指向 point to 另外一个对象（其存储地址）&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; ival = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 整数&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *p = &amp;amp;ival; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指针定义 p存放 ival对象存放的地址，也即是 p 指向 变量 ival的指针   &amp;amp;ival 为取的 ival变量的 存储地址&lt;/span&gt;
&lt;span class="pl-k"&gt;double&lt;/span&gt; dval = &lt;span class="pl-c1"&gt;3.14&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 浮点数&lt;/span&gt;
&lt;span class="pl-k"&gt;double&lt;/span&gt; *pd = &amp;amp;dval; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; double 类型 指针&lt;/span&gt;
&lt;span class="pl-k"&gt;double&lt;/span&gt; *pd2 = pd;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pd存放 的是 dval存放的地址&lt;/span&gt;

&lt;span class="pl-k"&gt;int&lt;/span&gt; *pi = pd;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误， 指针pi 的类型 和 右边指针对象 类型 不匹配&lt;/span&gt;
pi = &amp;amp;dval;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误， 视图把 double 类型对象的地址 给 int类型的指针 错误  左右两边类型 必须匹配&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;利用指针访问对象 取地址内存储的值 解引用符 来访问向&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; ival = &lt;span class="pl-c1"&gt;42&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;整形 变量&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *p = &amp;amp;ival;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指针变量定义初始化， p 存放着 变量ival 在内存中的地址&lt;/span&gt;
std::cout &amp;lt;&amp;lt; *p;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 表达式里 *p 为 解引用 取的p存放的地址 指向的值&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;ref_i = ival; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 引用声明定义， ref_i 是一个引用&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *p; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指针声明定义，p是一个指针&lt;/span&gt;
p = &amp;amp;ival;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 表达式 p为指针（地址），&amp;amp;val 为取的 val 地址&lt;/span&gt;
*p = ival;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;表达式  *p 相当于 ival *是一个解引用&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;ref_i2 = *p;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;amp;ref_i2 为引用定义 *p 相当于 ival， *是一个解引用&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;空指针&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; *p1 = nullptr;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 等价于 int *p1 = 0; 空指针  p1 不指向 任何 对象&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *p2 = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 空指针     等价于 int *p1 = 0;&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *p3 = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 空指针   等价于 int *p1 = 0;&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; zero = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *p4 = zero;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误，不能把 int 变量直接赋值 给指针&lt;/span&gt;

&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *pi1 = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pi1 被初始化为空指针，但没有指向 任何对象&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *pi2 = &amp;amp;i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pi2 被初始化，存有 i 的地址&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *pi3;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 定义 未初始化&lt;/span&gt;
pi3 = pi2;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pi3 和 pi2指向同一个 对象 i&lt;/span&gt;
pi2 = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 现在 pi2 被赋值为 空指针 不指向任何对象  指针被改变， 指向的对象不变&lt;/span&gt;
pi2 = &amp;amp;i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 现在 pi2 又指向 i&lt;/span&gt;
*pi2 = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指针pi2 没变 , *pi2 被改变 即pi2指向的对象 i 发生了变化&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;使用指针作为条件 为空指针时，逻辑值为 False，其他指向一个对象的指针(非0指针) 逻辑值 均为 true&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;相等 == 操作符  不等 != 操作符 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;void* 类型的指针  可一指向 任意类型 的 地址 ， 可一存放任意类型的 地址，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;用作函数参数，函数体内使用时需要，转化成实际传入类型的指针&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;double&lt;/span&gt; obj = &lt;span class="pl-c1"&gt;3.14&lt;/span&gt;, *pd = &amp;amp;obj; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; double 类型 的变量 double类型的指针&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; *pv = &amp;amp;obj; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; obj 可以是任意类型的对象&lt;/span&gt;
pv = pd; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pv 可一存放任意类型的指针（地址）&lt;/span&gt;
&lt;span class="pl-k"&gt;double&lt;/span&gt; *pd = (&lt;span class="pl-k"&gt;double&lt;/span&gt;*)(pv);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; void* 类型的指针 强制转化成  double* 类型的指针&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;定义多个变量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;1024&lt;/span&gt;， *p = &amp;amp;i, &amp;amp;r = i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;i是整形变量 p是一个整形指针 r是一个整形引用&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt;* p1, p2;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; * 仅仅修饰 p1 ，即p1是 指向整形的指针 p2是整形变量&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *p1, *p2;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; p1 和 p2 都是指向 整形的指针&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;指向指针的指针&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; ival = &lt;span class="pl-c1"&gt;1024&lt;/span&gt;;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *pi = &amp;amp;ival; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指向整形变量的指针&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; **ppi = &amp;amp;pi; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指向整形指针的指针  ppi ---&amp;gt; pi ------&amp;gt; ival&lt;/span&gt;
std::cout &amp;lt;&amp;lt; ival &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 直接输出 变量值&lt;/span&gt;
      &amp;lt;&amp;lt; *pi  &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1次解引用 得到变量值&lt;/span&gt;
      &amp;lt;&amp;lt; **ppi&amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;2次解引用 的到变量值&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;指向指针的 引用 指针对象的别名  引用不是对象 不存在 指向引用的指针&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;整形对象&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *p;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指向整形类型的指针&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *&amp;amp;r_p = p;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;引用r_p的类型为 整形的指针引用int*&amp;amp;，r_p 是指针p的一个别名 &lt;/span&gt;
           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;从右向左 离变量最近的符号为 &amp;amp; 即为 引用，* 引用的为 指针类型&lt;/span&gt;
r_p = &amp;amp;i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 相当于 p = &amp;amp;i p 指向 i&lt;/span&gt;
*r_p = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 相当于 *p = 0 即 i =0 改变了指针指向对象的值  &lt;/span&gt;
         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 这里 *p *解引用指针的类型其实相当于 原变量的别名 引用&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-const-限定符" class="anchor" aria-hidden="true" href="#const-限定符"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;const 限定符&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;修饰变量后，可以防止变量被修改&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; bufSize = &lt;span class="pl-c1"&gt;512&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;初始化常量 一旦创建后就不能被修改&lt;/span&gt;
bufSize = &lt;span class="pl-c1"&gt;1024&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误，常量不能被赋值&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; i = get_size();&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 一个函数赋值 运行时初始化&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;编译时初始化&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; k;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;错误，常量定义式必须初始化&lt;/span&gt;
&lt;span class="pl-k"&gt;double&lt;/span&gt; dvel = &lt;span class="pl-c1"&gt;3.14&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  也可以由其他类型变量 强制转换成 常量&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; ci = dvel;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 由double类型变量 强制转换成 整形常量 3&lt;/span&gt;
&lt;span class="pl-k"&gt;extern&lt;/span&gt; &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; bufSize = &lt;span class="pl-c1"&gt;1024&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;定义了一个变量，想在其他文件也使用 bufSize 必须在定义之前 加extern&lt;/span&gt;
&lt;span class="pl-k"&gt;extern&lt;/span&gt; &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; bufSize;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 另一个文件中 声明 bufSize 后 就可以使用了&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;绑定到常量的引用 const 的引用 即对常量的引用 reference to const 常量 的 别名 不能修改 不存在常量引用 &amp;amp;const 引用不是对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; c_i = &lt;span class="pl-c1"&gt;1024&lt;/span&gt;;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 常整数&lt;/span&gt;
        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;r_c_i = c_i; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 常整数 c_i 的 引用（别名）&lt;/span&gt;
        r_c_i = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误r_c_i 是常量引用 不能被修改&lt;/span&gt;
        &lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;r_c_i2 = c_i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;错误 常整数 不能赋值给 int变量 左右两边类型必须一样&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;允许将一个常量引用绑定到 非常量对象、字面值，甚至是个 一般表达式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;        int i = 52;
        const int &amp;amp;r1 = i; // 允许将 常量引用 const int &amp;amp; 绑定到 int变量上
        const int &amp;amp;r2 = 42;// 绑定到 字面值上
        const int &amp;amp;r3 = r1 * 2;// 绑定到一个 表达式上
        int &amp;amp;r4 = r1 * 2;// 错误，r4是非常量 引用，只能绑定到 其对应类型的对象上

        double dval = 3.14;//浮点数
        const int &amp;amp;ri = dval;//常量引用 绑定到 非常量上 
        //相当于 先把 非常量转化成常量 强制类型转换 常量引用实际上绑定了一个临时变量
        const int temp = dval;//

        int i = 42;// int 变量
        int &amp;amp;r1 = i;// 整数变量引用 r1为 i 的别名
        const int &amp;amp;r2 = i;//常量 引用 r2 绑定到 变量 i上
        r1 = 0;// 相当于 i =0
        r2 = 0;// 错误 r2 时常量引用 不允许改变
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;指向常量的指针  const int *   指针指向的值不能变  也就是 *p 不能被赋值 不能改变&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; pi = &lt;span class="pl-c1"&gt;3.14&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;双精度 浮点型 常量&lt;/span&gt;
&lt;span class="pl-k"&gt;double&lt;/span&gt; *ptr_d = &amp;amp;pi;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误，浮点型变量指针 不能绑定一个 常量的存储地址&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; *ptr_d_c = &amp;amp;pi;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 双精度常量 针 ptr_d_c  指向一个 双精度常量&lt;/span&gt;
*ptr_d_c = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 不能给 pi 赋值 指向常量的指针的解引用相当于 绑定的常量 ，因此不能赋值&lt;/span&gt;
doubel dvel = &lt;span class="pl-c1"&gt;3.14&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;双精度变量&lt;/span&gt;
ptr_d_c = &amp;amp;dvel;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;允许 常量指针ptr_d_c 指向一个变量dvel 但是不能通过 常量指针ptr_d_c 修改变量dvel&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;常量指针 *const 指针本身不能改变 也就是指向不能改变  p不能改变 但是其指向的对象 无影响&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; errNumber = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *&lt;span class="pl-k"&gt;const&lt;/span&gt; conpErr = &amp;amp;errNumber;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; * 可变指针  *const 常量指针不可变 &lt;/span&gt;
                               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指向整形的 常量指针，conpErr 一直指向 errNumber&lt;/span&gt;
*conpErr = &lt;span class="pl-c1"&gt;3&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;相当于 errNumber = 3&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; pi = &lt;span class="pl-c1"&gt;3.14&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; *&lt;span class="pl-k"&gt;const&lt;/span&gt; cd_cp = &amp;amp;pi;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指向 常量的常量指针，&lt;/span&gt;
                               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 即 指针本身cd_cp不能变， 其指向的值 *cd_cp也不能变&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;常量表达式 编译时就能确定的量/式子 constexpr int ce = 20;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; *p = nullptr;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指向整形常量 的指针&lt;/span&gt;
constexpr &lt;span class="pl-k"&gt;int&lt;/span&gt; *p = nullptr;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指向整形变量的 常量指针 &lt;/span&gt;
                           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; constexpr 声明中出现 指针 仅仅说明 指针为常量指针&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *&lt;span class="pl-k"&gt;const&lt;/span&gt; p =nullptr;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指向 整形变量的 常量指针&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; *&lt;span class="pl-k"&gt;const&lt;/span&gt; p = nullptr;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指向 整形常量 的常量指针&lt;/span&gt;
constexpr &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; *p = nullptr;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指向 整形常量 的常量指针&lt;/span&gt;

constexpr &lt;span class="pl-k"&gt;int&lt;/span&gt; ci = &lt;span class="pl-c1"&gt;42&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ci 是整形常量&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
constexpr &lt;span class="pl-k"&gt;int&lt;/span&gt; *pci = &amp;amp;j; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指向整形的 常量指针&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-处理类型" class="anchor" aria-hidden="true" href="#处理类型"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;处理类型&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-类型别名-type-alias" class="anchor" aria-hidden="true" href="#类型别名-type-alias"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;类型别名  type alias&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;typedef&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; wages;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; wages 是double类型的 同义词&lt;/span&gt;
&lt;span class="pl-k"&gt;typedef&lt;/span&gt; wages base, *p; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; base 也是double类型的 同义词。 p是double * 的同义词&lt;/span&gt;
wages d_money = &lt;span class="pl-c1"&gt;1.00&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;等有价于 double d_money = 1.00&lt;/span&gt;
p p_dmoney =   &amp;amp;d_money;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;等价于 double *p_dmoney =   &amp;amp;d_money;&lt;/span&gt;
cout &amp;lt;&amp;lt; p_dmoney &amp;lt;&amp;lt; endl; 
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 别名声明 alias declaration&lt;/span&gt;
using SI = Sales_Item; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SI 是 Sales_Item 的 同义词&lt;/span&gt;
SI item;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;等价于 Sales_Item item;&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指针、常量const 类别别名&lt;/span&gt;
&lt;span class="pl-k"&gt;typedef&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *pstring;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pstring等价于 char *  指向char 的指针（是指针）&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; pstring cstr = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; cstr是指向 char 的 常量指针 &lt;/span&gt;
                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ！！！！不是指向常量字符的 指针 不能直接替换 const修饰的主语是指针&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; pstring *ps;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ps是一个指针 它指向的对象 是 指向char的常量指针&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-auto-类型说明符-让-编译器根据右式-类型-自动推算左式的类型-且用表达式的值-初始化变量" class="anchor" aria-hidden="true" href="#auto-类型说明符-让-编译器根据右式-类型-自动推算左式的类型-且用表达式的值-初始化变量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;auto 类型说明符  让 编译器根据右式 类型 自动推算左式的类型  且用表达式的值 初始化变量&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;auto&lt;/span&gt; item = val1 +val2;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;item 初始化为 val1 和 val2相加的结果 类型 相同&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 一条语句定义多个变量时，各变量类型必须一致&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; i=&lt;span class="pl-c1"&gt;0&lt;/span&gt;, *p = &amp;amp;i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;正确 i是整数， p是指向整形的指针&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; sz = &lt;span class="pl-c1"&gt;0&lt;/span&gt;, pi = &lt;span class="pl-c1"&gt;3.4&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误 sz 和 pi 类型不一致&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 引用 指针 常量 与 auto&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &amp;amp;r = i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;r是i的别名 int类型&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; a = r;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a 是一个整形数&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; auto 会忽略掉 顶层const&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; ci = i, &amp;amp;cir = ci;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 常整数&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; b = ci;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; b是一个整数，ci的顶层 const(最外层修饰 为顶层)特性被忽略&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; c = cir; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; c是一个整数，ci的顶层 const特性被忽略&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; d = &amp;amp;i;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; d是一个指向整形的指针&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; e = &amp;amp;ci; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; e是一个指向整形常量的指针 const &lt;/span&gt;
              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 外又被 取地址符号修饰，所以这里的 const是 底层const 不被忽略&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 如果希望 auto 推断出的类型是 一个顶层 const，需要在其前面 明确指出&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;auto&lt;/span&gt; f = ci; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ci的推演类型是 int ，f是 const int&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 将引用设置为 auto 还按之前的初始化规则  保留 顶层 const&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; &amp;amp;g = ci; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; g 是一个 整形常量的 引用 （别名）&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; &amp;amp;h = &lt;span class="pl-c1"&gt;42&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误，非常量 引用 不能绑定 到 字面值&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;auto&lt;/span&gt; &amp;amp;j = &lt;span class="pl-c1"&gt;42&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 正确， 常量引用可以绑定到 字面值&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 将 指针设置为 auto， 也按之前的初始化规则 保留顶层 const&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; *k = &amp;amp;ci; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; k为指向 整形常量的 指针&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; *l = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; l为空指针&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;auto&lt;/span&gt; *m = &amp;amp;ci; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; m 为 指向整形常量的 常量指针&lt;/span&gt;

&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;1024&lt;/span&gt;;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; c_i = i;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; b = c_i; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; b是一个 整数 ,c_i的 顶层 const被忽略&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; e = &amp;amp;c_i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; e 是一个 指向 整形常量的引用  这里的const是底层const 不被忽略&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; k = c_i, &amp;amp;ll = i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; k 是整数， ll 是一个整数引用&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; k = c_i, &amp;amp;o = c_i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误，k 是整数变量 o是一个整数常量引用 类型不一致&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; &amp;amp;m =c_i, *p = &amp;amp;c_i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;正确 m是整数常量引用，p是指向整数常量的指针&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; n = &amp;amp;c_i, *p = &amp;amp;c_i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 正确 n是整数常量 引用(底层const，不被忽略) p是指向整数常量的指针&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-decltype-类型指示符--用表达式推断类型-但是不用表达式的值初始化变量-" class="anchor" aria-hidden="true" href="#decltype-类型指示符--用表达式推断类型-但是不用表达式的值初始化变量-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;decltype 类型指示符  用表达式推断类型 但是不用表达式的值初始化变量  &lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;decltype&lt;/span&gt;(f()) sum = x; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; sum 的类型为 函数 f() 的返回值类型 初始化为 x 就像 int sum = x; 一样&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; ci = &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &amp;amp;cj = ci;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ci 整形常量  cj 整形常量的引用&lt;/span&gt;
&lt;span class="pl-en"&gt;decltype&lt;/span&gt;(ci) x = 0; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; x的类型 同ci 是 整形常量 const int 不忽略 顶层 const&lt;/span&gt;
&lt;span class="pl-en"&gt;decltype&lt;/span&gt;(cj) y = x; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; y的类型 同cj 是 整形常量的引用 const int &amp;amp;  y绑定到x上&lt;/span&gt;
&lt;span class="pl-en"&gt;decltype&lt;/span&gt;(cj) z;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误 z是一个 引用 ，必须初始化&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; decltype和引用 指针&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; i =&lt;span class="pl-c1"&gt;42&lt;/span&gt;, j=&lt;span class="pl-c1"&gt;12&lt;/span&gt;, *p = &amp;amp;i, &amp;amp;r = i;
&lt;span class="pl-en"&gt;decltype&lt;/span&gt;(r) a = j;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a的类型和r的类型一致，为整数的引用 int&amp;amp; a绑定到j上&lt;/span&gt;
&lt;span class="pl-en"&gt;decltype&lt;/span&gt;(r + &lt;span class="pl-c1"&gt;0&lt;/span&gt;) b;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;正确 加法的结果为 整形 int 因此 b为整形， 这里只定义 没有初始化&lt;/span&gt;
&lt;span class="pl-en"&gt;decltype&lt;/span&gt;(*p) c; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误 其实*p 解引用指针 相当于i的别名 也就是引用 &lt;/span&gt;
              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  所有这里 c的类型为 整数引用 int &amp;amp;，是个引用，必须初始化&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; decltype 的表达式如果 加上括号，得到的结果将是引用&lt;/span&gt;
&lt;span class="pl-en"&gt;decltype&lt;/span&gt;(i) e; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; e 是一个未初始化的 整形变量&lt;/span&gt;
&lt;span class="pl-en"&gt;decltype&lt;/span&gt;((i)) d = e; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; d是一个 整数的引用 绑定到 整形变量 e上  双层引用括号 的结果 永远都是 &lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 赋值表达式 也会产生 引用 引用的类型就是 等式左边变量的类型 如果 i是int i = x的类型是 int&amp;amp;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-标准库-std" class="anchor" aria-hidden="true" href="#标准库-std"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;标准库 std&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-字符串类-string-类-include--存储一个可变长度的-字符串---------使用内置数组类型实现" class="anchor" aria-hidden="true" href="#字符串类-string-类-include--存储一个可变长度的-字符串---------使用内置数组类型实现"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;字符串类 string 类  #include  存储一个可变长度的 字符串          使用内置数组类型实现&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-范围for-访问所有元素" class="anchor" aria-hidden="true" href="#范围for-访问所有元素"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;范围for  访问所有元素&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;string &lt;span class="pl-en"&gt;str&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; c : str)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; auto自动推断类型&lt;/span&gt;
cout &amp;lt;&amp;lt; c &amp;lt;&amp;lt; endl; 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 范围for 引用 改变 内容&lt;/span&gt;
string &lt;span class="pl-en"&gt;s&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World!!!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; &amp;amp;c : s)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; c是 字符串中每个元素的一个别名&lt;/span&gt;
c = toupper(c);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;变成大写&lt;/span&gt;
cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; endl;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-下标运算符索引-和-迭代器-访问单个元素" class="anchor" aria-hidden="true" href="#下标运算符索引-和-迭代器-访问单个元素"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;下标运算符(索引)[] 和 迭代器 访问单个元素&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;string的下标 类型为 string::size_type 无符号数 可用 decltype(s.size())获取 s[0] 是第一个字符 s[s.size()-1]是最后一个字符&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 第一个字符改为大写&lt;/span&gt;
string &lt;span class="pl-en"&gt;s&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;if&lt;/span&gt;(!s.empty())
	s[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] = toupper(s[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;第一个字符改为大写  在 cctype头文件中&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 第一个单词改为大写&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt;(decltype(s.size()) index = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
    index != s.size() &amp;amp;&amp;amp; !isspace(s[index]; ++index))
	s[index] = toupper(s[index]);&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-向量-模板-容器container--vector-模板-include--存储一个可变长度的-对象-集合-使用内置数组类型实现" class="anchor" aria-hidden="true" href="#向量-模板-容器container--vector-模板-include--存储一个可变长度的-对象-集合-使用内置数组类型实现"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;向量 模板  容器container  vector 模板  #include  存储一个可变长度的 对象 集合 使用内置数组类型实现&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;因为 vector 可以存放任意类型 所以事先需要知道 存放的对象是什么类型  vector ivec; vector; vector&amp;lt;vector &amp;gt;;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 初始化方式&lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;ivec&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;,-&lt;span class="pl-c1"&gt;1&lt;/span&gt;);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 直接初始化 10个元素 全为 -1&lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; ivec2 = ivec;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;拷贝初始化&lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; ivec3{&lt;span class="pl-c1"&gt;10&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;一个元素 10 &lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; ivec3{&lt;span class="pl-c1"&gt;10&lt;/span&gt;，&lt;span class="pl-c1"&gt;1&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;两个元素 10  和 1&lt;/span&gt;
vector&amp;lt;string&amp;gt; svec{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;an&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;列表初始化 直接方式&lt;/span&gt;
vector&amp;lt;string&amp;gt; svec2 = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;an&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;列表初始化 拷贝方式&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 默认初始化 &lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;ivec&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;);    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 10个元素，每个值都是0 &lt;/span&gt;
vector&amp;lt;string&amp;gt; &lt;span class="pl-en"&gt;svec&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 10个元素，每个值都是空 string 对象&lt;/span&gt;
vector&amp;lt;string&amp;gt; svec2{&lt;span class="pl-c1"&gt;10&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 10个元素，每个值都是空 string 对象&lt;/span&gt;
vector&amp;lt;string&amp;gt; svec3{&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 10个 "hi"元素&lt;/span&gt;
vector&amp;lt;string&amp;gt; &lt;span class="pl-en"&gt;svec3&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 10个 "hi"元素&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用 .push_back() 添加元素&lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; ivec2; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;空vec对象&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i != &lt;span class="pl-c1"&gt;100&lt;/span&gt;; ++i)
ivec2.push_back(i);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 一次把整数值 放到 ivec2尾部 结束后 ivec2有100个元素 0~99&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 实时添加 string 元素&lt;/span&gt;
string word;
vector&amp;lt;string&amp;gt; text;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;空对象&lt;/span&gt;
&lt;span class="pl-k"&gt;while&lt;/span&gt; (cin &amp;gt;&amp;gt; word) 
text.push_back(word);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 把word添加到 text 后面&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;使用范围for  + 引用 访问 并改变vector元素&lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; iv{&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;9&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 列表直接初始化&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; &amp;amp;i : v)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 对于v中每个 元素的 引用 需要改变其值&lt;/span&gt;
i *= i;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 变成原来值 的 平方&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; i : v) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 仅读取其中的变量&lt;/span&gt;
cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
cout &amp;lt;&amp;lt; endl;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; vector 对象大小 类型为size_type&lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;::size_type se = iv.size();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用索引[] 访问 计算vector对象元素索引   统计各个分数段上 出现的 成绩个数&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 索引不能添加元素&lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;unsigned&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;scores&lt;/span&gt;(&lt;span class="pl-c1"&gt;11&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;11个分数段， 0~9，10~19，...,90~99，100 计数值全部初始化为0&lt;/span&gt;
&lt;span class="pl-k"&gt;unsigned&lt;/span&gt; grade;
&lt;span class="pl-k"&gt;while&lt;/span&gt; (cin &amp;gt;&amp;gt; grade){
&lt;span class="pl-k"&gt;if&lt;/span&gt;(grade &amp;lt;= &lt;span class="pl-c1"&gt;100&lt;/span&gt;) ++scores[grade/&lt;span class="pl-c1"&gt;10&lt;/span&gt;];
}    

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; cin 读入一组词 改成大写 存入 vector中  #include &amp;lt;cctype&amp;gt; 使用toupper()&lt;/span&gt;
vector&amp;lt;string&amp;gt; sv;
string word1 = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;qwe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
cout &amp;lt;&amp;lt; word1 &amp;lt;&amp;lt; endl; 
&lt;span class="pl-k"&gt;while&lt;/span&gt;(cin &amp;gt;&amp;gt; word1){
	&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; &amp;amp;c : word1) c = &lt;span class="pl-c1"&gt;toupper&lt;/span&gt;(c);
	sv.&lt;span class="pl-c1"&gt;push_back&lt;/span&gt;(word1); 	
	cout &amp;lt;&amp;lt; word1 &amp;lt;&amp;lt; endl; vector  
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-迭代器-访问容器中的-元素-auto-b--vbegin-e--vend-b表示v的第一个元素-e表示v尾元素-的下一个位置--类似-指针" class="anchor" aria-hidden="true" href="#迭代器-访问容器中的-元素-auto-b--vbegin-e--vend-b表示v的第一个元素-e表示v尾元素-的下一个位置--类似-指针"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;迭代器 访问容器中的 元素 auto b = v.begin(), e = v.end(); b表示v的第一个元素 e表示v尾元素 的下一个位置  类似 指针&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 修改 字符串 第一个元素为大小字符&lt;/span&gt;
string &lt;span class="pl-en"&gt;s&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;if&lt;/span&gt; (s.begin() != s.end()){&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;确保 s非空&lt;/span&gt;
  &lt;span class="pl-k"&gt;auto&lt;/span&gt; it = s.&lt;span class="pl-c1"&gt;begin&lt;/span&gt;();&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; it 指向 s的第一个字符 类似指针 的作用&lt;/span&gt;
  *it = &lt;span class="pl-c1"&gt;toupper&lt;/span&gt;(*it);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 将当前字符改写成大写形式  *it 解引用迭代器 得到其所指向的 对象  是其指向对象的别名 引用&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 字符串的第一个单词 改写成大写&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; it = s.begin(); it != s.end() &amp;amp;&amp;amp; !isspace(*it); ++it)
	*it = toupper(*it);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 迭代器类型  iterator (具有读写功能)  const_iterator 具有 读功能  不具有写功能&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 对象为常量 只具有常量类型的迭代器 const_iterator  对象为变量具有 iterator 和 const_iterator&lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;::iterator it;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 迭代器 it 可以读写 vector&amp;lt;int&amp;gt; 类型容器 的元素&lt;/span&gt;
 string::iterator it2;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; it2 可以读写  string对象 中的字符&lt;/span&gt;
 vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt;::const_iterator it3;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;it3只能读元素，不能写元素&lt;/span&gt;
 string::const_iterator it4;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;it4只能读字符，不能写字符&lt;/span&gt;

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; cbegin()   cend() 返回 常量 迭代器 仅能读取 容器元素 不能修改&lt;/span&gt;
 vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; iv;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 变量&lt;/span&gt;
 &lt;span class="pl-k"&gt;const&lt;/span&gt; vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; civ; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 常量&lt;/span&gt;
 &lt;span class="pl-k"&gt;auto&lt;/span&gt; it1 = iv.begin(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  it1的类型为 vector&amp;lt;int&amp;gt;::iterator  能读写iv的元素&lt;/span&gt;
 &lt;span class="pl-k"&gt;auto&lt;/span&gt; it2 = iv.cbegin(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; it2的类型为 vector&amp;lt;int&amp;gt;::const_iterator  能读iv的元素 不能修改 iv的元素&lt;/span&gt;
 &lt;span class="pl-k"&gt;auto&lt;/span&gt; it3 = civ.begin(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; it3的类型为 vector&amp;lt;int&amp;gt;::const_iterator  能读civ的元素 不能修改 civ的元素&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 访问 容器元素对象的 成员函数   (*it).empty  等同于 it-&amp;gt;empty()  解引用 和成员访问&lt;/span&gt;
  vector&amp;lt;string&amp;gt; text;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; it = text.cbegin(); it !=text.cend() &amp;amp;&amp;amp; !it-&amp;gt;&lt;span class="pl-en"&gt;empty&lt;/span&gt;(); ++it)
	cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; endl;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 迭代器 运算&lt;/span&gt;
  &lt;span class="pl-k"&gt;auto&lt;/span&gt; mid = iv.begin() + iv.size()/&lt;span class="pl-c1"&gt;2&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指向容器的中间位置&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (it &amp;lt; mid) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 处理前半部分元素&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 两个迭代器相减 得到的类型为 带符号整数  difference_type&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 常规二分查找算法&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 升序数组 查找的元素  范围开始  结束 &lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;BinarySearch&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; *array, &lt;span class="pl-k"&gt;int&lt;/span&gt; key, &lt;span class="pl-k"&gt;int&lt;/span&gt; low, &lt;span class="pl-k"&gt;int&lt;/span&gt; high)
{
    &lt;span class="pl-k"&gt;int&lt;/span&gt; mid;
    &lt;span class="pl-k"&gt;while&lt;/span&gt; (low &amp;lt;= high)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  缩小范围 &lt;/span&gt;
    {
	mid = (low + high) / &lt;span class="pl-c1"&gt;2&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;更新中间元素的 下标 &lt;/span&gt;
	&lt;span class="pl-k"&gt;if&lt;/span&gt; (key == array[mid])&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;中间元素是否 等于所查找的元素 &lt;/span&gt;
	    &lt;span class="pl-k"&gt;return&lt;/span&gt; mid+&lt;span class="pl-c1"&gt;1&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;相等 返回元素下标  &lt;/span&gt;
	&lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (key &amp;lt; array[mid])&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;所查元素 比 中间元素小  则在 前区间查找 &lt;/span&gt;
	    high = mid - &lt;span class="pl-c1"&gt;1&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;将区间 右侧 退后 到 中间元素下标前一个元素  搜索 范围为  low，mid-1&lt;/span&gt;
	&lt;span class="pl-k"&gt;else&lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;所查元素 比 中间元素大 则 在后区间查找 &lt;/span&gt;
	    low = mid + &lt;span class="pl-c1"&gt;1&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;将区间  左测 提至  中间元素下标后一个元素    搜索 范围 mid+1，high&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用迭代器完成二分查找&lt;/span&gt;
 vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; text&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 升序容器&lt;/span&gt;
 &lt;span class="pl-k"&gt;auto&lt;/span&gt; b = text.begin(), e = text.end();&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;起始 结束位置&lt;/span&gt;
 &lt;span class="pl-k"&gt;auto&lt;/span&gt; mid = b + (e - b)/&lt;span class="pl-c1"&gt;2&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;中间位置&lt;/span&gt;
 &lt;span class="pl-k"&gt;while&lt;/span&gt;(low &amp;lt;= end &amp;amp;&amp;amp; *mid != key){
	&lt;span class="pl-k"&gt;if&lt;/span&gt;(key &amp;lt; *mid) e = mid - &lt;span class="pl-c1"&gt;1&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;所查元素 比 中间元素小  则在 前区间查找&lt;/span&gt;
	&lt;span class="pl-k"&gt;else&lt;/span&gt; b = mid + &lt;span class="pl-c1"&gt;1&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 所查元素 比 中间元素大 则 在后区间查找&lt;/span&gt;
	mid =  b + (e - b)/&lt;span class="pl-c1"&gt;2&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;更新 中间位置&lt;/span&gt;
 }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用索引[] 访问 计算vector对象元素索引   统计各个分数段上 出现的 成绩个数&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 索引不能添加元素&lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;unsigned&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;scores&lt;/span&gt;(&lt;span class="pl-c1"&gt;11&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;11个分数段， 0~9，10~19，...,90~99，100 计数值全部初始化为0&lt;/span&gt;
&lt;span class="pl-k"&gt;unsigned&lt;/span&gt; grade;
&lt;span class="pl-k"&gt;while&lt;/span&gt; (cin &amp;gt;&amp;gt; grade){
&lt;span class="pl-k"&gt;if&lt;/span&gt;(grade &amp;lt;= &lt;span class="pl-c1"&gt;100&lt;/span&gt;) ++scores[grade/&lt;span class="pl-c1"&gt;10&lt;/span&gt;];
} 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用迭代器 访问 计算vector对象元素索引   统计各个分数段上 出现的 成绩个数&lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;unsigned&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;scores&lt;/span&gt;(&lt;span class="pl-c1"&gt;11&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;11个分数段， 0~9，10~19，...,90~99，100 计数值全部初始化为0&lt;/span&gt;
&lt;span class="pl-k"&gt;unsigned&lt;/span&gt; grade;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; it0 = scores.begin();
&lt;span class="pl-k"&gt;while&lt;/span&gt; (cin &amp;gt;&amp;gt; grade){
	&lt;span class="pl-k"&gt;auto&lt;/span&gt; it = it0 +  grade/&lt;span class="pl-c1"&gt;10&lt;/span&gt;;
	&lt;span class="pl-k"&gt;if&lt;/span&gt;(grade &amp;lt;= &lt;span class="pl-c1"&gt;100&lt;/span&gt;) ++*it;
} &lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-数组" class="anchor" aria-hidden="true" href="#数组"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数组 &lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;数组与标准库 类型 vector 类似，都存放类型相同对象的容器。
需要通过其所在的位置访问对象。
与vector不同的是，数组大小确定不变，不能随意向数组中增加元素, 数组不允许拷贝，vector允许拷贝。
注意数组名 相当于数组首元素的地址   ia[10]  ia === &amp;amp;ia[0]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-1定义" class="anchor" aria-hidden="true" href="#1定义"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;【1】定义&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;constexpr &lt;span class="pl-k"&gt;unsigned&lt;/span&gt; sz = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;constexpr修饰，常量表达式&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; arr[&lt;span class="pl-c1"&gt;10&lt;/span&gt;];  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;字面值常量初始化  含有10个整数的数组&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; arr2[sz]; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;常量表达式初始化 含有42个个整数的数组&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *parr[sz];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;常量表达式初始化 含有42个指向整数的指针的数组&lt;/span&gt;

定义时必须指定数组类型，不能由&lt;span class="pl-k"&gt;auto&lt;/span&gt;来推断
不存在引用的数组，引用不是对象！！！
string nums[] = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 数组元素是string对象&lt;/span&gt;
string *sp = &amp;amp;nums[&lt;span class="pl-c1"&gt;0&lt;/span&gt;];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; p指向nums的第一个元素&lt;/span&gt;
string *sp2 = nums;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 等价于 string *sp2 = &amp;amp;nums[0]&lt;/span&gt;

&lt;span class="pl-k"&gt;auto&lt;/span&gt; &lt;span class="pl-en"&gt;sp3&lt;/span&gt;(nums); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;sp3 是一个string指针，指向nums的第一个元素&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 而decltype关键字 声明的 不发生上述转换&lt;/span&gt;
 &lt;span class="pl-en"&gt;decltype&lt;/span&gt;(nums) sa = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;four&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;sa 是一个 含有3个string对象的 数组&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;##【2】显式初始化数组元素&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;unsigned&lt;/span&gt; sz = &lt;span class="pl-c1"&gt;3&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; ia1[sz] = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;列表初始化 含有3个元素&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; ia2[] = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;维度为3&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; ia3[&lt;span class="pl-c1"&gt;5&lt;/span&gt;] = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;等价于 {0, 1, 2, 0, 0}&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 字符数组&lt;/span&gt;
&lt;span class="pl-k"&gt;char&lt;/span&gt; ca1[] = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;P&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;P&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;列表初始化&lt;/span&gt;
&lt;span class="pl-k"&gt;char&lt;/span&gt; ca2[] = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;P&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;P&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\0&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;含有显式的 空字符&lt;/span&gt;
&lt;span class="pl-k"&gt;char&lt;/span&gt; ca3[] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CPP&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;字符串字面值初始化 自动添加表示字符串结束的空字符&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; string 对象初始化 字符数组&lt;/span&gt;
string &lt;span class="pl-en"&gt;s&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *str = s.c_str();&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 用string对象初始化 字符数组 需要使用 c_str() 方法 最好再重新拷贝一份&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 数组  初始化 vector 对象&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; i_arr[] = {&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;};
vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;ivec&lt;/span&gt;(begin(i_arr), end(i_arr));&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;全部副本&lt;/span&gt;
vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;sub_ivec&lt;/span&gt;(i_arr + &lt;span class="pl-c1"&gt;1&lt;/span&gt;, i_arr + &lt;span class="pl-c1"&gt;4&lt;/span&gt;);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 包含 {2, 3, 4, 5}四个元素&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 不允许拷贝和赋值&lt;/span&gt;
&lt;span class="pl-k"&gt;char&lt;/span&gt; ca4 = ca3;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 复杂的数组声明定义&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *parr[&lt;span class="pl-c1"&gt;10&lt;/span&gt;];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 是数组，包含10个整形指针的数组&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;rarr[&lt;span class="pl-c1"&gt;10&lt;/span&gt;]=?;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;错误，不存在 引用数组，引用不是对象&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; (*Parray)[&lt;span class="pl-c1"&gt;10&lt;/span&gt;] = &amp;amp;arr;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;是指针，指向一个含有10个整数的数组&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; (&amp;amp;Rarray)[&lt;span class="pl-c1"&gt;10&lt;/span&gt;] = arr;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;是引用，引用一个含有10个整数的数组	&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-3访问数组元素" class="anchor" aria-hidden="true" href="#3访问数组元素"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;【3】访问数组元素&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-与标准库类型vector-和-string-一样数组元素也可以使用-范围for语句" class="anchor" aria-hidden="true" href="#与标准库类型vector-和-string-一样数组元素也可以使用-范围for语句"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;与标准库类型vector 和 string 一样，数组元素也可以使用 范围for语句&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-或下标运算符-访问元素下标从0开始下标通常定义为-size_t类型unsigned类型" class="anchor" aria-hidden="true" href="#或下标运算符-访问元素下标从0开始下标通常定义为-size_t类型unsigned类型"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;或下标运算符 访问，元素下标从0开始，下标通常定义为 size_t类型,unsigned类型。&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-标准库类型vector-和-string-下标运算符索引必须为正值-unsigned类型数组下标运算符索引-为signed类型内置类型可以为负值" class="anchor" aria-hidden="true" href="#标准库类型vector-和-string-下标运算符索引必须为正值-unsigned类型数组下标运算符索引-为signed类型内置类型可以为负值"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;标准库类型vector 和 string 下标运算符索引必须为正值 unsigned类型，数组下标运算符索引 为signed类型，内置类型，可以为负值&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;下标访问修改元素&lt;/span&gt;
&lt;span class="pl-k"&gt;unsigned&lt;/span&gt; score[&lt;span class="pl-c1"&gt;11&lt;/span&gt;];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;11个分数段&lt;/span&gt;
&lt;span class="pl-k"&gt;unsigned&lt;/span&gt; grade;
&lt;span class="pl-k"&gt;while&lt;/span&gt;(cin &amp;gt;&amp;gt; grade){
    &lt;span class="pl-k"&gt;if&lt;/span&gt;(grade &amp;lt;= &lt;span class="pl-c1"&gt;100&lt;/span&gt;) ++score[grade/&lt;span class="pl-c1"&gt;10&lt;/span&gt;];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;对应段 计数+1&lt;/span&gt;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 范围for 访问修改所有元素&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt;( &lt;span class="pl-k"&gt;auto&lt;/span&gt; i:score)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;可以设置为 引用就可以修改元素了&lt;/span&gt;
    cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
cout &amp;lt;&amp;lt; endl;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指针访问数组&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; iarr[] = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;含有5个元素&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *pi = iarr;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指向第一个元素的指针 iarr[0]&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *pi2 = iarr + &lt;span class="pl-c1"&gt;2&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指向第三个元素的指针 iarr[2]&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; num = end(iarr) - begin(iarr); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; num的值是5 就是iarr包含元素的数量 &lt;/span&gt;
                               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ptrdiff_t 类型 是signde类型 结果可能为负&lt;/span&gt;
++pi;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指向第二个元素 iarr[1]&lt;/span&gt;
j = pi[&lt;span class="pl-c1"&gt;1&lt;/span&gt;];   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 等价于 *(p+1),就是 iarr[2], 就是 2&lt;/span&gt;
k = pi[-&lt;span class="pl-c1"&gt;1&lt;/span&gt;];  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 等价于 *(p-1),就是 iarr[0], 就是 0&lt;/span&gt;
pi + &lt;span class="pl-c1"&gt;3&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指向最后一个元素&lt;/span&gt;
*pi;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;第二个元素 4&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; last =  *(iarr + &lt;span class="pl-c1"&gt;4&lt;/span&gt;);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 等价于 last = iarr[4];&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *end = &amp;amp;iarr[&lt;span class="pl-c1"&gt;6&lt;/span&gt;];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指向尾后的位置 到达不了    不能执行解引用运算！！！！！&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用 for &lt;/span&gt;
&lt;span class="pl-en"&gt;fot&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; *begin = arr; begin != end; ++begin)
	cout &amp;lt;&amp;lt; *begin  &amp;lt;&amp;lt; endl;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;输出每一个元素&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用 while&lt;/span&gt;
&lt;span class="pl-k"&gt;while&lt;/span&gt;(begin&amp;lt;end){&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;指针指向相关的对象 可以比较大小（单位（间隔）一样大）&lt;/span&gt;
	cout &amp;lt;&amp;lt; *begin  &amp;lt;&amp;lt; endl;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;输出每一个元素&lt;/span&gt;
	++begin;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;标准库函数 begin() end() 函数得到指针&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; iarr = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;函数5个元素&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *beg = begin(iarr);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;首元素指针&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *end = end(iarr);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;尾后指针                 不能执行解引用运算！！！！！&lt;/span&gt;
&lt;span class="pl-k"&gt;while&lt;/span&gt;(beg != end &amp;amp;&amp;amp; *beg &amp;gt;=&lt;span class="pl-c1"&gt;0&lt;/span&gt;) ++beg;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;找第一个负值元素&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-多维数组-数组的数组" class="anchor" aria-hidden="true" href="#多维数组-数组的数组"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;多维数组 数组的数组&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-初始化" class="anchor" aria-hidden="true" href="#初始化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;初始化&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;constexpr &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; row =&lt;span class="pl-c1"&gt;3&lt;/span&gt;, col = &lt;span class="pl-c1"&gt;4&lt;/span&gt;;
&lt;span class="pl-k"&gt;int&lt;/span&gt; iarr[row][col];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;定义未初始化&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;下标运算符（size_t 类型） for 循环初始化&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i != row; ++i){
	&lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; j = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; j != col; ++j){
		iarr[i][j] = i * col + j;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;元素索引为其 值&lt;/span&gt;
		cout &amp;lt;&amp;lt; iarr[i][j] &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 访问输出  数组元素&lt;/span&gt;
		}
	 cout &amp;lt;&amp;lt; endl;	
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 范围for 初始化&lt;/span&gt;
&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; cnt = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; &amp;amp;row1 : iarr)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;每一行 引用  int (&amp;amp;row1)[4] 是引用 引用一个含有4个整数的数组&lt;/span&gt;
 {	
	&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; &amp;amp;col1 : row1){&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; int &amp;amp;col1 每一行的每一个元素 引用  可以读写 除去最内层外 其它必须使用 引用&lt;/span&gt;
	col1 = cnt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;赋值&lt;/span&gt;
	cout &amp;lt;&amp;lt; col1 &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 访问 输出数组元素&lt;/span&gt;
	++cnt;
	}
	cout &amp;lt;&amp;lt; endl;
 }	&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-访问" class="anchor" aria-hidden="true" href="#访问"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;访问&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指针访问&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; (*p)[&lt;span class="pl-c1"&gt;4&lt;/span&gt;] = iarr;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;p 指向一个含有4个整数的数组 iarr的 第一行   圆括号必不可少&lt;/span&gt;
p = &amp;amp;iarr[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; iarr的 第3行&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; for 循环访问&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt;( &lt;span class="pl-k"&gt;auto&lt;/span&gt; p = ia; p != ia + row; ++p){&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 相当于定义 int (*p)[4] = iarr; p 指向 含有4个整数的数组&lt;/span&gt;
	 &lt;span class="pl-k"&gt;for&lt;/span&gt;( &lt;span class="pl-k"&gt;auto&lt;/span&gt; q = *p; q != *p + col; ++q) 
	     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; *p 为含有4个元素的数组 q指向数组的首元素，即指向一个整数 int *q = *p&lt;/span&gt;
		cout &amp;lt;&amp;lt; *q &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
	 cout &amp;lt;&amp;lt; endl;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用 标准库函数 begin() 和 end()&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt;( &lt;span class="pl-k"&gt;auto&lt;/span&gt; p = begin(ia); p != end(ia); ++p){
               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 相当于定义 int (*p)[4] = iarr; p 指向 含有4个整数的数组&lt;/span&gt;
	 &lt;span class="pl-k"&gt;for&lt;/span&gt;( &lt;span class="pl-k"&gt;auto&lt;/span&gt; q = &lt;span class="pl-c1"&gt;begin&lt;/span&gt;(*p); q != &lt;span class="pl-c1"&gt;end&lt;/span&gt;(*p); ++q) 
	       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; *p 为含有4个元素的数组 q指向数组的首元素，即指向一个整数 int *q = *p&lt;/span&gt;
		cout &amp;lt;&amp;lt; *q &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
	 cout &amp;lt;&amp;lt; endl;
}	
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用类型别名&lt;/span&gt;
using int_arr_tpye = &lt;span class="pl-k"&gt;int&lt;/span&gt;[&lt;span class="pl-c1"&gt;4&lt;/span&gt;];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; int_arr_tpye为包含4个元素的整形数组&lt;/span&gt;
&lt;span class="pl-k"&gt;typedef&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; int_arr_tpye[&lt;span class="pl-c1"&gt;4&lt;/span&gt;];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 效果同上&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt;( int_arr_tpye *p = ia; p != ia + row; ++p){&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 相当于定义 int (*p)[4] = iarr; p 指向 含有4个整数的数组&lt;/span&gt;
	 &lt;span class="pl-k"&gt;for&lt;/span&gt;( &lt;span class="pl-k"&gt;int&lt;/span&gt; *q = *p; q != *p + col; ++q) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; *p 为含有4个元素的数组 q指向数组的首元素，即指向一个整数&lt;/span&gt;
		cout &amp;lt;&amp;lt; *q &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
	 cout &amp;lt;&amp;lt; endl;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-函数" class="anchor" aria-hidden="true" href="#函数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;函数&lt;/h1&gt;
&lt;p&gt;包括：返回类型 函数名字（形参列表） 函数体，函数的返回类型不能是数组或函数类型，但可以是 数组或函数类型的指针&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-函数定义--阶乘函数" class="anchor" aria-hidden="true" href="#函数定义--阶乘函数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;函数定义  阶乘函数&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;fact&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; val){
	&lt;span class="pl-k"&gt;int&lt;/span&gt; ret = &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
	&lt;span class="pl-k"&gt;while&lt;/span&gt;(val &amp;gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;) ret *= val--;
	&lt;span class="pl-k"&gt;return&lt;/span&gt; ret;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 返回主调函数 结束函数调用&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-函数调用-分两步-1-实参初始化形参形参为引用时直接使用实参--2控制权转移给被调用函数inline-内联函数-之间在原处展开函数" class="anchor" aria-hidden="true" href="#函数调用-分两步-1-实参初始化形参形参为引用时直接使用实参--2控制权转移给被调用函数inline-内联函数-之间在原处展开函数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;函数调用 分两步 1 实参初始化形参（形参为引用时，直接使用实参）  2控制权转移给被调用函数（inline 内联函数 之间在原处展开函数）&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(){
&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;fact&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 实参5 初始化 形参（int val）&lt;/span&gt;
cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5! = &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; j &amp;lt;&amp;lt; endl;
&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-局部对象" class="anchor" aria-hidden="true" href="#局部对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;局部对象&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;形参和函数体内定义的变量统称为 局部变量，仅在函数的作用域内可见， 局部自动对象，只存在于函数体执行期间，而局部静态对象，可在函数调用后一直存在&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 定义&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;count_call&lt;/span&gt;(&lt;span class="pl-k"&gt;void&lt;/span&gt;){
 &lt;span class="pl-k"&gt;int&lt;/span&gt; c =&lt;span class="pl-c1"&gt;0&lt;/span&gt;;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;局部自动对象 每一次调用都初始化为 0  &lt;/span&gt;
 &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; sc =&lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;局部静态变量 第一次调用初始化为0 以后每次调用在前一次值上 +1 &lt;/span&gt;
 cout &amp;lt;&amp;lt; ++sc &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;   &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; ++c &amp;lt;&amp;lt; endl; 
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 调用&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(){
 &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i =&lt;span class="pl-c1"&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;; ++i)  &lt;span class="pl-c1"&gt;count_call&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;sc 输出 1 2,...10，c 输出一直是1&lt;/span&gt;
 &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-分离式编译-函数声明-与函数定义类似但是-不包括函数体以代替函数体-int-factint-val-函数可以多次声明" class="anchor" aria-hidden="true" href="#分离式编译-函数声明-与函数定义类似但是-不包括函数体以代替函数体-int-factint-val-函数可以多次声明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;分离式编译 函数声明 与函数定义类似但是 不包括函数体，以;代替函数体 int fact(int val); 函数可以多次声明&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 源文件 fact.cc&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fact.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;fact&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; val){
	&lt;span class="pl-k"&gt;int&lt;/span&gt; ret = &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
	&lt;span class="pl-k"&gt;while&lt;/span&gt;(val &amp;gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;) ret *= val--;
	&lt;span class="pl-k"&gt;return&lt;/span&gt; ret;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 返回主调函数 结束函数调用&lt;/span&gt;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 函数声明头文件 fact.h&lt;/span&gt;
#&lt;span class="pl-k"&gt;ifndef&lt;/span&gt; FACT_H
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;FACT_H&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;fact&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; val);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 函数声明 &lt;/span&gt;
#&lt;span class="pl-k"&gt;endif&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 主函数调用 fact_main.c&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fact.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
using namespace std;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(){
&lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;fact&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 实参5 初始化 形参（int val）&lt;/span&gt;
cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5! = &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; j &amp;lt;&amp;lt; endl;
&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 编译&lt;/span&gt;
gcc fact_main.c fact.cc -o main&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-参数传递" class="anchor" aria-hidden="true" href="#参数传递"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;参数传递&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;当形参是引用类型时，为引用传递，实际传递的是实参的别名，没有进行拷贝，当实参的值被拷贝给形参时，形参和实参是两个独立的对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-值传递---函数对形参做的所有操作-都不会影响实参" class="anchor" aria-hidden="true" href="#值传递---函数对形参做的所有操作-都不会影响实参"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;值传递    函数对形参做的所有操作 都不会影响实参&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; n=&lt;span class="pl-c1"&gt;0&lt;/span&gt;;
&lt;span class="pl-k"&gt;int&lt;/span&gt; i = n;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; n拷贝给i&lt;/span&gt;
i = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;i的值改变， n的值不变    函数对形参做的所有操作 都不会影响实参 例如 fact(i) 不会改变i的值&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-引用传递--函数对形参做的所有操作-都会影响实参" class="anchor" aria-hidden="true" href="#引用传递--函数对形参做的所有操作-都会影响实参"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;引用传递  函数对形参做的所有操作 都会影响实参&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; n = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;r_i = n;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;r_i 是 n 的引用 即别名 同一个变量&lt;/span&gt;
r_i = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;r_i 和 n 都变成 42    &lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-指针形参" class="anchor" aria-hidden="true" href="#指针形参"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;指针形参&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; n=&lt;span class="pl-c1"&gt;0&lt;/span&gt;, i =&lt;span class="pl-c1"&gt;42&lt;/span&gt;;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *p_n = &amp;amp;n, *p_i = &amp;amp;i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指针&lt;/span&gt;
*p_n = &lt;span class="pl-c1"&gt;100&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; n 的值 变为100 指针p_n（变量你存储的地址） 不变&lt;/span&gt;
p_n = p_i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 现在 p_n  和  p_i 都指向了 i&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 指针形参 函数&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;reset&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; *pi){
 *ip = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;改变了指针 pi 所指向的对象的值&lt;/span&gt;
 ip = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 值改变了 形参ip的值 实参未被改变&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 调用&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;
cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address of i =&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; &amp;amp;i &amp;lt;&amp;lt;endl;
&lt;span class="pl-en"&gt;reset&lt;/span&gt;(&amp;amp;i);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; i 的值改变为0&lt;/span&gt;
cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i = &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; i 的值改变为0&lt;/span&gt;
cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address of i =&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; &amp;amp;i &amp;lt;&amp;lt;endl;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; i 的存储地址未改变&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; C 程序中 通常使用 指针类型的形参 来访问和改变 函数外部的对象&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; C++ 程序中，建议使用引用类型的形参代替 指针形参，这样会更安全，也省时间（引用 无拷贝操作）&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用 引用避免拷贝 拷贝大的类对象或容器 都比较低效 费时&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-引用形参" class="anchor" aria-hidden="true" href="#引用形参"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;引用形参&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;reset&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;i){
  i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 改变了i所引用的对象&lt;/span&gt;
 }
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 调用&lt;/span&gt;
 &lt;span class="pl-k"&gt;int&lt;/span&gt; j = &lt;span class="pl-c1"&gt;42&lt;/span&gt;;
 &lt;span class="pl-en"&gt;reset&lt;/span&gt;(j);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 采样传 引用方式，它的值被改变 调用时 形参i 只是 实参j的一个别名，在函数reset内部对i的操作，即对j的使用&lt;/span&gt;
 cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;j = &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; j &amp;lt;&amp;lt; endl;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-常量引用形参-当函数无须-改变引用参数的值时最好将其声明为-常量引用" class="anchor" aria-hidden="true" href="#常量引用形参-当函数无须-改变引用参数的值时最好将其声明为-常量引用"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;常量引用形参 当函数无须 改变引用参数的值时，最好将其声明为 常量引用&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 比较两个字符串的长度&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;isShorter&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; string &amp;amp;rs1, &lt;span class="pl-k"&gt;const&lt;/span&gt; string &amp;amp;rs2){
	&lt;span class="pl-k"&gt;return&lt;/span&gt; rs1.&lt;span class="pl-c1"&gt;size&lt;/span&gt;() &amp;lt; rs2.&lt;span class="pl-c1"&gt;size&lt;/span&gt;();
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-使用引用形参-返回额外信息" class="anchor" aria-hidden="true" href="#使用引用形参-返回额外信息"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用引用形参 返回额外信息&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 函数返回多个值 返回字符在某个字符串中第一次出现的位置，并返回出现的 总次数&lt;/span&gt;
string::size_type &lt;span class="pl-en"&gt;find_char&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; string &amp;amp;crs, &lt;span class="pl-k"&gt;char&lt;/span&gt; c, string::size_type &amp;amp;occurs){
				&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 字符串        查找的字符      出现的次数&lt;/span&gt;
	&lt;span class="pl-k"&gt;auto&lt;/span&gt; ret = crs.&lt;span class="pl-c1"&gt;size&lt;/span&gt;();&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;初始化 第一次出现的位置&lt;/span&gt;
	occurs = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;初始化 出现的次数&lt;/span&gt;
	&lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-c1"&gt;decltype&lt;/span&gt;(ret) i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i != crs.&lt;span class="pl-c1"&gt;size&lt;/span&gt;(); ++i){
	  &lt;span class="pl-k"&gt;if&lt;/span&gt;(crs[i] == c){&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 出现字符 c&lt;/span&gt;
	    &lt;span class="pl-k"&gt;if&lt;/span&gt; (ret == crs.&lt;span class="pl-c1"&gt;size&lt;/span&gt;())&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;位置 还未改变 为  第一次出现 &lt;/span&gt;
	    ret  = i;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;记录第一次出现的位置&lt;/span&gt;
	    ++occurs;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;出现次数 +1  通过形参引用间接返回 出现的次数&lt;/span&gt;
	  }
	}  
	&lt;span class="pl-k"&gt;return&lt;/span&gt; ret;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;返回第一次出现的位置&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 调用&lt;/span&gt;
string &lt;span class="pl-en"&gt;s&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
string::size_type count = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; index = find_char(s, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;o&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, count);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 判断 string对象是否是 一个句子&lt;/span&gt;
 &lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;is_sentence&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; string &amp;amp;crs){
	  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 如果 find_char() 的string参数 必须为 string &amp;amp; 那么不能直接把 const string &amp;amp; 带入&lt;/span&gt;
	  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 需要再定义一个 string对象， 另其为 crs 的副本，再带入&lt;/span&gt;
	 string::size_type count = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
	 &lt;span class="pl-k"&gt;return&lt;/span&gt; (&lt;span class="pl-c1"&gt;find_char&lt;/span&gt;(crs, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, count) == (crs.&lt;span class="pl-c1"&gt;size&lt;/span&gt;() - &lt;span class="pl-c1"&gt;1&lt;/span&gt;)) &amp;amp;&amp;amp;  count == &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-数组形参-必须确保使用数组时不会越界-通常需要给一个结束标志" class="anchor" aria-hidden="true" href="#数组形参-必须确保使用数组时不会越界-通常需要给一个结束标志"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数组形参 必须确保使用数组时不会越界  通常需要给一个结束标志&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;1 不允许拷贝数组 
2 在使用数组时会将其转换成指针（指向数组首元素的指针）
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 三个函数等价 形参 都是 const int * 类型&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;print&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt;*);
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;print&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt;[]);
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;print&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt;[&lt;span class="pl-c1"&gt;10&lt;/span&gt;]);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 这里的维度表示期望数组含有多少元素，实际不一定&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;调用&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
j[&lt;span class="pl-c1"&gt;2&lt;/span&gt;] = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;};
&lt;span class="pl-en"&gt;print&lt;/span&gt;(&amp;amp;i); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&amp;amp;i 是int *类型 可以赋值给 const int *类型&lt;/span&gt;
&lt;span class="pl-en"&gt;print&lt;/span&gt;(j);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;j 为 &amp;amp;j[0] 是 int * 类型&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-使用标记指定数组长度--要求数组本身包含-一个结束标志-典型-c风格字符串-带有一个空字符" class="anchor" aria-hidden="true" href="#使用标记指定数组长度--要求数组本身包含-一个结束标志-典型-c风格字符串-带有一个空字符"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用标记指定数组长度   要求数组本身包含 一个结束标志  典型 C风格字符串 带有一个空字符&lt;/h4&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; C风格字符串 带有一个空字符&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;print&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *cp){
  &lt;span class="pl-k"&gt;if&lt;/span&gt;(cp)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 确定 cp 不是一个空指针&lt;/span&gt;
    &lt;span class="pl-k"&gt;while&lt;/span&gt;(*cp) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 只要 指针所指的字符不是 空字符&lt;/span&gt;
       cout &amp;lt;&amp;lt; *cp++;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 打印 字符&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-使用标准库规范-传递-数组元素的-首末地址" class="anchor" aria-hidden="true" href="#使用标准库规范-传递-数组元素的-首末地址"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用标准库规范 传递 数组元素的 首末地址&lt;/h4&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;print&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; *beg, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; *end){
  &lt;span class="pl-k"&gt;while&lt;/span&gt;(beg != end) 
    cout &amp;lt;&amp;lt; *beg++ &amp;lt;&amp;lt; endl;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;输出当前元素 并将指针向前移动一个位置&lt;/span&gt;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 调用&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; j[&lt;span class="pl-c1"&gt;2&lt;/span&gt;] =  {&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;};
&lt;span class="pl-en"&gt;print&lt;/span&gt;(begin(j), end(j));&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用标准库 begin() 和 end() 函数&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-显示传递-一个数组大小的形参" class="anchor" aria-hidden="true" href="#显示传递-一个数组大小的形参"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;显示传递 一个数组大小的形参&lt;/h4&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;print&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; ia[], &lt;span class="pl-c1"&gt;size_t&lt;/span&gt; size){
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-c1"&gt;size_t&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i != size; ++i) 
     cout &amp;lt;&amp;lt; ia[i] &amp;lt;&amp;lt; endl;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 等价于 cout &amp;lt;&amp;lt; *(ia+i) &amp;lt;&amp;lt; endl;&lt;/span&gt;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 调用&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; j[&lt;span class="pl-c1"&gt;2&lt;/span&gt;] =  {&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;};
&lt;span class="pl-en"&gt;print&lt;/span&gt;( j, end(j) - begin(j) );&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用标准库 begin() 和 end() 函数 做差来得到数组的大小&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-数组引用形参-int-r_arr10-是一个含有10个元素数组的-引用-直接包含了-数组大小的信息" class="anchor" aria-hidden="true" href="#数组引用形参-int-r_arr10-是一个含有10个元素数组的-引用-直接包含了-数组大小的信息"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数组引用形参 int (&amp;amp;r_arr)[10] 是一个含有10个元素数组的 引用  直接包含了 数组大小的信息&lt;/h4&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;print&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; (&amp;amp;r_arr)[10]){ &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 注意形式 int (&amp;amp;r_arr)[10]   而 int &amp;amp;arr[10] 成了 包含引用的数组（还不存在，引用不是对象）&lt;/span&gt;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;auto&lt;/span&gt; elem : r_arr)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 变量数组每个元素  范围for&lt;/span&gt;
    cout &amp;lt;&amp;lt; elem &amp;lt;&amp;lt; endl;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 调用 调用时 必须是 大小为10的整形 数组作为实参才可以&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; k[&lt;span class="pl-c1"&gt;10&lt;/span&gt;] = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;}
&lt;span class="pl-en"&gt;print&lt;/span&gt;(k);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 大小必须为10 多一点 少一点 都不行&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-多维数组形参-数组指针-形参" class="anchor" aria-hidden="true" href="#多维数组形参-数组指针-形参"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;多维数组形参 数组指针 形参&lt;/h4&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;print&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; (*p_arr)[10], int rowSize){}&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 形参是 指向 一个含有10个整数的指针&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-main函数-主函数参数列表" class="anchor" aria-hidden="true" href="#main函数-主函数参数列表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;main函数 主函数参数列表&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; argc：argument counter 参数计数,argv：argument vector 参数 字符串 容器&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt; *argv[]){}
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt; **argv){}&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;第二个参数为 字符串数组 即数组的数组 指针的指针   argv 指向 char*&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;程序执行 program -d -o outfile data0&lt;/span&gt;
则 argc = &lt;span class="pl-c1"&gt;5&lt;/span&gt;
argv[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 程序名&lt;/span&gt;
argv[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 第一个参数 开始&lt;/span&gt;
argv[&lt;span class="pl-c1"&gt;2&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 第二个参数&lt;/span&gt;
argv[&lt;span class="pl-c1"&gt;3&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;outfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 第三个参数&lt;/span&gt;
argv[&lt;span class="pl-c1"&gt;4&lt;/span&gt;] = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 第四个参数  最后一个指针&lt;/span&gt;
argv[&lt;span class="pl-c1"&gt;5&lt;/span&gt;] = &lt;span class="pl-c1"&gt;0&lt;/span&gt;;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 最后一个指针之后 的元素为0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-含有可变形参的函数--1-传递一个-initializer_list-标准库类型2-特殊参数类型-省略号-" class="anchor" aria-hidden="true" href="#含有可变形参的函数--1-传递一个-initializer_list-标准库类型2-特殊参数类型-省略号-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;含有可变形参的函数  1 传递一个 initializer_list 标准库类型，2 特殊参数类型 省略号 ...&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-initializer_list-形参-实参数量未知-但是全部实参类型-都-相同" class="anchor" aria-hidden="true" href="#initializer_list-形参-实参数量未知-但是全部实参类型-都-相同"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;initializer_list 形参  实参数量未知  但是全部实参类型 都 相同&lt;/h4&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; initializer_list 提供的操作&lt;/span&gt;
initializer_list&amp;lt;T&amp;gt; lst;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 默认初始化 T类型元素的空列表 模实际需要指定模板T的 具体类型&lt;/span&gt;
initializer_list&amp;lt;T&amp;gt; lst{a, b, c...};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 列表中的元素是 const 常量&lt;/span&gt;
&lt;span class="pl-en"&gt;lst2&lt;/span&gt;(lst); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 拷贝一个initializer_list对象，不会新建，原始列表 和 副本 共享元素&lt;/span&gt;
lst2 = lst;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 同上&lt;/span&gt;
lst.size();&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 列表 中的元素&lt;/span&gt;
lst.begin();&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;返回指向lst中首元素的指针&lt;/span&gt;
lst.end();  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;返回指向lst中尾元素下一个位置的指针&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 因为有 begin() 和 end()对象可以使用 范围for 遍历参数&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 具体&lt;/span&gt;
initializer_list&amp;lt;string&amp;gt; ls ;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;initializer_list 的元素类型是 string&lt;/span&gt;
initializer_list&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; li ;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;initializer_list 的元素类型是 int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 和vector不同的是 initializer_list中的元素是常量 不能被修改&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 定义函数&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;error_msg&lt;/span&gt;(initializer_list&amp;lt;string&amp;gt; ls){
	 &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;auto&lt;/span&gt; beg = ls.&lt;span class="pl-c1"&gt;begin&lt;/span&gt;(); beg != ls.&lt;span class="pl-c1"&gt;end&lt;/span&gt;(); ++beg)
	   cout &amp;lt;&amp;lt; *beg &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
	 cout &amp;lt;&amp;lt; endl;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;调用函数&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;expected 和 actual 是string 对象&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; (expected != actual)
	&lt;span class="pl-en"&gt;error_msg&lt;/span&gt;({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;function&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, expected, actual});
&lt;span class="pl-k"&gt;else&lt;/span&gt;
	&lt;span class="pl-en"&gt;error_msg&lt;/span&gt;({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;function&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;okey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;});
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 传递了一个含有不同数量元素的 initializer_list&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 定义函数 包含 ErrCode&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;error_msg&lt;/span&gt;(ErrCode e, initializer_list&amp;lt;string&amp;gt; ls){
	 cout &amp;lt;&amp;lt; e.&lt;span class="pl-c1"&gt;msg&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	 &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;auto&lt;/span&gt; &amp;amp;elem : ls )&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;范围for 遍历&lt;/span&gt;
	  cout &amp;lt;&amp;lt; elem &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
	 cout &amp;lt;&amp;lt; endl;
} &lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-省略符--形参" class="anchor" aria-hidden="true" href="#省略符--形参"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;省略符 ... 形参&lt;/h4&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;(param_list, ...)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
void foo(param_list...)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
void foo(...)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-函数-返回类型-和-return语句" class="anchor" aria-hidden="true" href="#函数-返回类型-和-return语句"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;函数 返回类型 和 return语句&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-无返回值函数-void函数-无需显示的-return-语句--return-后无值" class="anchor" aria-hidden="true" href="#无返回值函数-void函数-无需显示的-return-语句--return-后无值"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;无返回值函数 void函数 无需显示的 return 语句   return 后无值&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 交换两个值的函数&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;swap&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;r_i1, &lt;span class="pl-k"&gt;int&lt;/span&gt; &amp;amp;r_i2){
   &lt;span class="pl-k"&gt;if&lt;/span&gt; (r_i1 == r_i2)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 两个值相等 无需交换&lt;/span&gt;
      &lt;span class="pl-k"&gt;return&lt;/span&gt;;
   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 若 执行 到这里，说明还需要继续完成下面的功能 &lt;/span&gt;
   &lt;span class="pl-k"&gt;int&lt;/span&gt; temp = r_i1;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
   r_i1 = r_i2;
   r_i2 = temp;
   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 此处 无需 显示的 return 语句   会隐式指向 return&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-有返回值函数--return-后有值-且返回的对象类型-与-函数定义的-返回类型相同" class="anchor" aria-hidden="true" href="#有返回值函数--return-后有值-且返回的对象类型-与-函数定义的-返回类型相同"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;有返回值函数  return 后有值 且返回的对象类型 与 函数定义的 返回类型相同&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 两个 string 对象是否 最短的部分 是相同的&lt;/span&gt;
&lt;span class="pl-k"&gt;bool&lt;/span&gt; &lt;span class="pl-en"&gt;str_subrange&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; string &amp;amp;str1, &lt;span class="pl-k"&gt;const&lt;/span&gt; string &amp;amp;str2){
 &lt;span class="pl-k"&gt;if&lt;/span&gt; (str1.&lt;span class="pl-c1"&gt;size&lt;/span&gt;() == str.&lt;span class="pl-c1"&gt;size&lt;/span&gt;())
     &lt;span class="pl-k"&gt;return&lt;/span&gt; str1 == str2; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 之间判断 相同长度间的部分是否相同&lt;/span&gt;
 &lt;span class="pl-k"&gt;auto&lt;/span&gt; size = (str1.&lt;span class="pl-c1"&gt;size&lt;/span&gt;() &amp;lt; str2.&lt;span class="pl-c1"&gt;size&lt;/span&gt;()) ? str1.&lt;span class="pl-c1"&gt;size&lt;/span&gt;() : str2.&lt;span class="pl-c1"&gt;size&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;得到最短 字符串的 长度&lt;/span&gt;
 &lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-c1"&gt;decltype&lt;/span&gt;(size) i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i != size; ++i){
   &lt;span class="pl-k"&gt;if&lt;/span&gt; ( str1[i] != str2[i])&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 如果 有 不相等的 字符 返回 false&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 有 不相等的 字符 返回 false&lt;/span&gt;
  }
 &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 否者 相等 返回 true&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-返回类型为-引用时-不会对结果进行拷贝-节省时间-但是-不要-返回-函数内部-临时变量的-引用-临时变量离开函数后就不存在了" class="anchor" aria-hidden="true" href="#返回类型为-引用时-不会对结果进行拷贝-节省时间-但是-不要-返回-函数内部-临时变量的-引用-临时变量离开函数后就不存在了"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;返回类型为 引用时 不会对结果进行拷贝 节省时间  但是 不要 返回 函数内部 临时变量的 引用， 临时变量离开函数后就不存在了&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-建议-返回-引用对象-是一个-调用函数-之前就纯在的一个变量" class="anchor" aria-hidden="true" href="#建议-返回-引用对象-是一个-调用函数-之前就纯在的一个变量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;建议 返回 引用对象 是一个 调用函数 之前就纯在的一个变量&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-同时-返回-非常量的引用-可以作为-左值-被赋值" class="anchor" aria-hidden="true" href="#同时-返回-非常量的引用-可以作为-左值-被赋值"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;同时 返回 非常量的引用 可以作为 左值 被赋值&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 不要 返回 函数内部 临时变量的 引用&lt;/span&gt;
string &lt;span class="pl-en"&gt;temp&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;glo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;const&lt;/span&gt; string &amp;amp;&lt;span class="pl-en"&gt;mainip&lt;/span&gt;() {
	 string &lt;span class="pl-smi"&gt;ret&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Empty&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 函数内部临时变量&lt;/span&gt;
	 &lt;span class="pl-k"&gt;return&lt;/span&gt; ret; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误 ，不能返回 临时变量 作为 函数返回值的 引用&lt;/span&gt;
	 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; return temp;// 返回 一个调用函数之前就出现的 变量 的引用     或者  参数 为引用类型的参数也可以&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 返回 两个字符串中 短的那个&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; string &amp;amp;&lt;span class="pl-en"&gt;shortString&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; string &amp;amp;s1, &lt;span class="pl-k"&gt;const&lt;/span&gt; string &amp;amp;s2){&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 返回 s1 或者 s2的引用&lt;/span&gt;
	&lt;span class="pl-k"&gt;return&lt;/span&gt; s1.&lt;span class="pl-c1"&gt;size&lt;/span&gt;() &amp;lt; s2.&lt;span class="pl-c1"&gt;size&lt;/span&gt;() ? s1 : s2;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;返回 两个字符串中 短的那个&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 函数返回类型 为 标准库 类类型 可以直接调用 其成员函数&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; sz = shortString(s1, s2).size()&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 得到最短字符串 的长度&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 返回 非常量的引用 可以作为 左值 被赋值  &lt;/span&gt;
&lt;span class="pl-k"&gt;char&lt;/span&gt; &amp;amp;&lt;span class="pl-en"&gt;get_char&lt;/span&gt;(string &amp;amp;str, string::size_type id){
	&lt;span class="pl-k"&gt;return&lt;/span&gt; str[id];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 获取指定位置的 字符&lt;/span&gt;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 调用&lt;/span&gt;
string &lt;span class="pl-en"&gt;s&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; endl;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a value&lt;/span&gt;
&lt;span class="pl-en"&gt;get_char&lt;/span&gt;(s, &lt;span class="pl-c1"&gt;0&lt;/span&gt;) = 'A';&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 将s第一个位置上的字符 替换为 大写的 A&lt;/span&gt;
cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; endl;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 而返回为 常量引用 的不能被赋值&lt;/span&gt;
&lt;span class="pl-en"&gt;shortString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bye&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) = "X"; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 错误 函数返回值是个 常量引用 不能被赋值&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-函数返回类型为-列表-以花括号--包围" class="anchor" aria-hidden="true" href="#函数返回类型为-列表-以花括号--包围"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;函数返回类型为 列表 以花括号 {} 包围&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;vector&amp;lt;string&amp;gt; &lt;span class="pl-en"&gt;process&lt;/span&gt;(){
	&lt;span class="pl-k"&gt;if&lt;/span&gt;(expected.&lt;span class="pl-c1"&gt;empty&lt;/span&gt;())
	  &lt;span class="pl-k"&gt;return&lt;/span&gt; {};&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 返回一个 空vector对象&lt;/span&gt;
	&lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (expected == actual)
	  &lt;span class="pl-k"&gt;return&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;function&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;okey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
	&lt;span class="pl-k"&gt;else&lt;/span&gt; 
	  &lt;span class="pl-k"&gt;return&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;function&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, expected, actual};
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-函数递归-返回值为自身函数-的一个-式子---main-函数不能调用自己" class="anchor" aria-hidden="true" href="#函数递归-返回值为自身函数-的一个-式子---main-函数不能调用自己"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;函数递归  返回值为自身函数 的一个 式子   main 函数不能调用自己&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 计算阶乘的函数&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;factorial&lt;/span&gt;( &lt;span class="pl-k"&gt;int&lt;/span&gt; val){
	&lt;span class="pl-k"&gt;if&lt;/span&gt;(val &amp;gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
	   &lt;span class="pl-k"&gt;return&lt;/span&gt; val * &lt;span class="pl-c1"&gt;factorial&lt;/span&gt;(val-&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
	&lt;span class="pl-k"&gt;else&lt;/span&gt; 
	    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 递归 返回一个vector的元素函数&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;print_vec&lt;/span&gt;(vector&amp;lt;&lt;span class="pl-k"&gt;int&lt;/span&gt;&amp;gt; vi){
	&lt;span class="pl-k"&gt;auto&lt;/span&gt; it = vi.&lt;span class="pl-c1"&gt;begin&lt;/span&gt;();
	&lt;span class="pl-k"&gt;if&lt;/span&gt;(vi.&lt;span class="pl-c1"&gt;size&lt;/span&gt;() &amp;gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
	 {
	   cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt;endl;
	   vi.&lt;span class="pl-c1"&gt;erase&lt;/span&gt;(it);
	   &lt;span class="pl-c1"&gt;print_vec&lt;/span&gt;(vi);
	}
	&lt;span class="pl-k"&gt;else&lt;/span&gt; 
	   cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt;endl;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-返回-数组-指针-数组不能被-拷贝-所以函数不能返回数组-但可以返回-数组的指针-或引用" class="anchor" aria-hidden="true" href="#返回-数组-指针-数组不能被-拷贝-所以函数不能返回数组-但可以返回-数组的指针-或引用"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;返回 数组 指针 数组不能被 拷贝 所以函数不能返回数组 但可以返回 数组的指针 或引用&lt;/h3&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用类别别名&lt;/span&gt;
&lt;span class="pl-k"&gt;typedef&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; arrT[&lt;span class="pl-c1"&gt;10&lt;/span&gt;];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; arrT是一个类别别名 表示一个 含有 10个整数 的 数组&lt;/span&gt;
using arrT = &lt;span class="pl-k"&gt;int&lt;/span&gt;[&lt;span class="pl-c1"&gt;10&lt;/span&gt;];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 同上&lt;/span&gt;
arrT* &lt;span class="pl-en"&gt;func&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i);   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 函数func 返回一个 指向 10个整数的数组的 指针&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;直接声明&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; arr[&lt;span class="pl-c1"&gt;10&lt;/span&gt;]; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;arr 是一个 含有 10个整数的数组&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; *arr_p[&lt;span class="pl-c1"&gt;10&lt;/span&gt;]; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;arr_p 是一个数组   含有 10个指整形针 的 数组&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; (*p2)[&lt;span class="pl-c1"&gt;10&lt;/span&gt;] = &amp;amp;arr; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; p2 是一个指针， 指向一个含有 10个整数的 数组 arr&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 函数声明 类似&lt;/span&gt;
&lt;span class="pl-en"&gt;Type&lt;/span&gt; (*&lt;span class="pl-en"&gt;function_name&lt;/span&gt;(parameter_list))[dimension]
int ( *&lt;span class="pl-en"&gt;func&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i) )[10];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 声明一个函数 其形参为 int i ,返回类型 为 指针 ，指向 一个 含有 10个整数的 数组&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 函数指针数组&lt;/span&gt;
多个函数可以像数组一样被调用
&lt;span class="pl-k"&gt;int&lt;/span&gt; (*fun_p_a[])(&lt;span class="pl-k"&gt;char&lt;/span&gt; *tmp); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;函数指针数组&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用 auto 和 尾置返回类型&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; &lt;span class="pl-en"&gt;func&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i) -&amp;gt; int(*)[10];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 声明一个函数 其形参为 int i ,返回类型 为 指针 ，指向 一个 含有 10个整数的 数组&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用 decltype 知道返回数组  类似类别别名 声明 定义&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; odd[] = {&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;};
&lt;span class="pl-k"&gt;int&lt;/span&gt; even[] = {&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;};
&lt;span class="pl-en"&gt;decltype&lt;/span&gt;(odd) *arrPtr(&lt;span class="pl-k"&gt;int&lt;/span&gt; i){ &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;使用decltype(odd) 表面类型与 odd类似&lt;/span&gt;
 &lt;span class="pl-k"&gt;return&lt;/span&gt; (i%&lt;span class="pl-c1"&gt;2&lt;/span&gt;) ? &amp;amp;odd : &amp;amp;even;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 返回一个指向数组的指针&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 声明一个 返回 引用 一个 含有10个string对象的数组 的函数&lt;/span&gt;
&lt;span class="pl-en"&gt;string&lt;/span&gt; ( &amp;amp;&lt;span class="pl-en"&gt;func_r&lt;/span&gt;(string str) )[10];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 直接声明&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用类别别名&lt;/span&gt;
&lt;span class="pl-k"&gt;typedef&lt;/span&gt; string arrS[&lt;span class="pl-c1"&gt;10&lt;/span&gt;];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 类别别 含有10个string对象的数组&lt;/span&gt;
using arrS = string[&lt;span class="pl-c1"&gt;10&lt;/span&gt;];&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 同上&lt;/span&gt;
arrS &amp;amp;&lt;span class="pl-en"&gt;func&lt;/span&gt;(string str);   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 函数func 返回一个 指向 10个整数的数组的 指针&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用 auto 和 尾置返回类型&lt;/span&gt;
&lt;span class="pl-k"&gt;auto&lt;/span&gt; &lt;span class="pl-en"&gt;func&lt;/span&gt;(string str) -&amp;gt; string(&amp;amp;)[10];
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 使用 decltype 知道返回数组  类似类别别名 声明 定义&lt;/span&gt;
string str_arr[] = {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;};
&lt;span class="pl-en"&gt;decltype&lt;/span&gt;(str_arr) &amp;amp;arrPtr(string str);&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-函数-重载-同一个作用域内-的几个函数名字相同但形参列表不同成为-重载-overloaded" class="anchor" aria-hidden="true" href="#函数-重载-同一个作用域内-的几个函数名字相同但形参列表不同成为-重载-overloaded"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;函数 重载  同一个作用域内 的几个函数名字相同，但形参列表不同，成为 重载 (overloaded)&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 打印 数组元素的 几个 同名函数&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;print&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *cp);&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;出入参数为 带有结束符的 &lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Ewenwan</author><guid isPermaLink="false">https://github.com/Ewenwan/ShiYanLou</guid><pubDate>Mon, 09 Dec 2019 00:07:00 GMT</pubDate></item><item><title>cfenollosa/os-tutorial #8 in C, Today</title><link>https://github.com/cfenollosa/os-tutorial</link><description>&lt;p&gt;&lt;i&gt;How to create an OS from scratch&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-os-tutorial" class="anchor" aria-hidden="true" href="#os-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;os-tutorial&lt;/h1&gt;
&lt;p&gt;How to create an OS from scratch!&lt;/p&gt;
&lt;p&gt;I have always wanted to learn how to make an OS from scratch. In college I was taught
how to implement advanced features (pagination, semaphores, memory management, etc)
but:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I never got to start from my own boot sector&lt;/li&gt;
&lt;li&gt;College is hard so I don't remember most of it.&lt;/li&gt;
&lt;li&gt;I'm fed up with people who think that reading an already existing kernel, even if small, is
a good idea to learn operating systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inspired by &lt;a href="http://www.cs.bham.ac.uk/~exr/lectures/opsys/10_11/lectures/os-dev.pdf" rel="nofollow"&gt;this document&lt;/a&gt;
and the &lt;a href="http://wiki.osdev.org/" rel="nofollow"&gt;OSDev wiki&lt;/a&gt;, I'll try to make short step-by-step READMEs and
code samples for anybody to follow. Honestly, this tutorial is basically the first document but
split into smaller pieces and without the theory.&lt;/p&gt;
&lt;p&gt;Updated: more sources: &lt;a href="https://littleosbook.github.io" rel="nofollow"&gt;the little book about OS development&lt;/a&gt;,
&lt;a href="https://web.archive.org/web/20160412174753/http://www.jamesmolloy.co.uk/tutorial_html/index.html" rel="nofollow"&gt;JamesM's kernel development tutorials&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This course is a code tutorial aimed at people who are comfortable with low level computing. For example,
programmers who have curiosity on how an OS works but don't have the time or willpower to start reading the Linux kernel
top to bottom.&lt;/li&gt;
&lt;li&gt;There is little theory. Yes, this is a feature. Google is your theory lecturer. Once you pass college,
excessive theory is worse than no theory because it makes things seem more difficult than they really are.&lt;/li&gt;
&lt;li&gt;The lessons are tiny and may take 5-15 minutes to complete. Trust me and trust yourself. You can do it!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use-this-tutorial" class="anchor" aria-hidden="true" href="#how-to-use-this-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use this tutorial&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Start with the first folder and go down in order. They build on previous code, so if
you jump right to folder 05 and don't know why there is a &lt;code&gt;mov ah, 0x0e&lt;/code&gt;, it's because you missed lecture 02.
Really, just go in order. You can always skip stuff you already know.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the README and read the first line, which details the concepts you should be familiar with
before reading the code. Google concepts you are not familiar with. The second line states the goals for each lesson.
Read them, because they explain why we do what we do. The "why" is as important as the "how".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read the rest of the README. It is &lt;strong&gt;very concise&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) Try to write the code files by yourself after reading the README.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Look at the code examples. They are extremely well commented.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) Experiment with them and try to break things. The only way to make sure you understood something is
trying to break it or replicate it with different commands.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;TL;DR: First read the README on each folder, then the code files. If you're brave, try to code them yourself.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-strategy" class="anchor" aria-hidden="true" href="#strategy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strategy&lt;/h2&gt;
&lt;p&gt;We will want to do many things with our OS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boot from scratch, without GRUB - DONE!&lt;/li&gt;
&lt;li&gt;Enter 32-bit mode - DONE&lt;/li&gt;
&lt;li&gt;Jump from Assembly to C - DONE!&lt;/li&gt;
&lt;li&gt;Interrupt handling - DONE!&lt;/li&gt;
&lt;li&gt;Screen output and keyboard input - DONE!&lt;/li&gt;
&lt;li&gt;A tiny, basic &lt;code&gt;libc&lt;/code&gt; which grows to suit our needs - DONE!&lt;/li&gt;
&lt;li&gt;Memory management&lt;/li&gt;
&lt;li&gt;Write a filesystem to store files&lt;/li&gt;
&lt;li&gt;Create a very simple shell&lt;/li&gt;
&lt;li&gt;User mode&lt;/li&gt;
&lt;li&gt;Maybe we will write a simple text editor&lt;/li&gt;
&lt;li&gt;Multiple processes and scheduling&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Probably we will go through them in that order, however it's soon to tell.&lt;/p&gt;
&lt;p&gt;If we feel brave enough:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A BASIC interpreter, like in the 70s!&lt;/li&gt;
&lt;li&gt;A GUI&lt;/li&gt;
&lt;li&gt;Networking&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;This is a personal learning project, and even though it hasn't been updated for a long time, I still have hopes to get into it at some point.&lt;/p&gt;
&lt;p&gt;I'm thankful to all those who have pointed out bugs and submitted pull requests. I will need some time to review everything and I cannot guarantee that at this moment.&lt;/p&gt;
&lt;p&gt;Please feel free to fork this repo. If many of you are interested in continuing the project, let me know and I'll link the "main fork" from here.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cfenollosa</author><guid isPermaLink="false">https://github.com/cfenollosa/os-tutorial</guid><pubDate>Mon, 09 Dec 2019 00:08:00 GMT</pubDate></item><item><title>microsoft/mimalloc #9 in C, Today</title><link>https://github.com/microsoft/mimalloc</link><description>&lt;p&gt;&lt;i&gt;mimalloc is a compact general purpose allocator with excellent performance.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/mimalloc-logo.png"&gt;&lt;img align="left" width="100" height="100" src="doc/mimalloc-logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/Daan0324/mimalloc/_build?definitionId=1&amp;amp;_a=summary" rel="nofollow"&gt;&lt;img align="right" src="https://camo.githubusercontent.com/d8fe01ab0e099c3609dc5fe5f113c77c76c2afef/68747470733a2f2f6465762e617a7572652e636f6d2f4461616e303332342f6d696d616c6c6f632f5f617069732f6275696c642f7374617475732f6d6963726f736f66742e6d696d616c6c6f633f6272616e63684e616d653d646576" data-canonical-src="https://dev.azure.com/Daan0324/mimalloc/_apis/build/status/microsoft.mimalloc?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mimalloc" class="anchor" aria-hidden="true" href="#mimalloc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mimalloc&lt;/h1&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;mimalloc (pronounced "me-malloc")
is a general purpose allocator with excellent &lt;a href="#performance"&gt;performance&lt;/a&gt; characteristics.
Initially developed by Daan Leijen for the run-time systems of the
&lt;a href="https://github.com/koka-lang/koka"&gt;Koka&lt;/a&gt; and &lt;a href="https://github.com/leanprover/lean"&gt;Lean&lt;/a&gt; languages.&lt;/p&gt;
&lt;p&gt;It is a drop-in replacement for &lt;code&gt;malloc&lt;/code&gt; and can be used in other programs
without code changes, for example, on dynamically linked ELF-based systems (Linux, BSD, etc.) you can use it as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; LD_PRELOAD=/usr/bin/libmimalloc.so  myprogram
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notable aspects of the design include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;small and consistent&lt;/strong&gt;: the library is about 6k LOC using simple and
consistent data structures. This makes it very suitable
to integrate and adapt in other projects. For runtime systems it
provides hooks for a monotonic &lt;em&gt;heartbeat&lt;/em&gt; and deferred freeing (for
bounded worst-case times with reference counting).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;free list sharding&lt;/strong&gt;: the big idea: instead of one big free list (per size class) we have
many smaller lists per memory "page" which both reduces fragmentation
and increases locality --
things that are allocated close in time get allocated close in memory.
(A memory "page" in &lt;em&gt;mimalloc&lt;/em&gt; contains blocks of one size class and is
usually 64KiB on a 64-bit system).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;eager page reset&lt;/strong&gt;: when a "page" becomes empty (with increased chance
due to free list sharding) the memory is marked to the OS as unused ("reset" or "purged")
reducing (real) memory pressure and fragmentation, especially in long running
programs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;secure&lt;/strong&gt;: &lt;em&gt;mimalloc&lt;/em&gt; can be built in secure mode, adding guard pages,
randomized allocation, encrypted free lists, etc. to protect against various
heap vulnerabilities. The performance penalty is usually around 10% on average
over our benchmarks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;first-class heaps&lt;/strong&gt;: efficiently create and use multiple heaps to allocate across different regions.
A heap can be destroyed at once instead of deallocating each object separately.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;bounded&lt;/strong&gt;: it does not suffer from &lt;em&gt;blowup&lt;/em&gt; [1], has bounded worst-case allocation
times (&lt;em&gt;wcat&lt;/em&gt;), bounded space overhead (~0.2% meta-data, with at most 12.5% waste in allocation sizes),
and has no internal points of contention using only atomic operations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fast&lt;/strong&gt;: In our benchmarks (see &lt;a href="#performance"&gt;below&lt;/a&gt;),
&lt;em&gt;mimalloc&lt;/em&gt; always outperforms all other leading allocators (&lt;em&gt;jemalloc&lt;/em&gt;, &lt;em&gt;tcmalloc&lt;/em&gt;, &lt;em&gt;Hoard&lt;/em&gt;, etc),
and usually uses less memory (up to 25% more in the worst case). A nice property
is that it does consistently well over a wide range of benchmarks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href="https://microsoft.github.io/mimalloc" rel="nofollow"&gt;documentation&lt;/a&gt; gives a full overview of the API.
You can read more on the design of &lt;em&gt;mimalloc&lt;/em&gt; in the &lt;a href="https://www.microsoft.com/en-us/research/publication/mimalloc-free-list-sharding-in-action" rel="nofollow"&gt;technical report&lt;/a&gt; which also has detailed benchmark results.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-releases" class="anchor" aria-hidden="true" href="#releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2019-11-22, &lt;code&gt;v1.2.0&lt;/code&gt;: stable release 1.2: bug fixes, improved secure mode (free list corruption checks, double free mitigation). Improved dynamic overriding on Windows.&lt;/li&gt;
&lt;li&gt;2019-10-07, &lt;code&gt;v1.1.0&lt;/code&gt;: stable release 1.1.&lt;/li&gt;
&lt;li&gt;2019-09-01, &lt;code&gt;v1.0.8&lt;/code&gt;: pre-release 8: more robust windows dynamic overriding, initial huge page support.&lt;/li&gt;
&lt;li&gt;2019-08-10, &lt;code&gt;v1.0.6&lt;/code&gt;: pre-release 6: various performance improvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h2&gt;
&lt;p&gt;Open &lt;code&gt;ide/vs2019/mimalloc.sln&lt;/code&gt; in Visual Studio 2019 and build (or &lt;code&gt;ide/vs2017/mimalloc.sln&lt;/code&gt;).
The &lt;code&gt;mimalloc&lt;/code&gt; project builds a static library (in &lt;code&gt;out/msvc-x64&lt;/code&gt;), while the
&lt;code&gt;mimalloc-override&lt;/code&gt; project builds a DLL for overriding malloc
in the entire program.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-macos-linux-bsd-etc" class="anchor" aria-hidden="true" href="#macos-linux-bsd-etc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS, Linux, BSD, etc.&lt;/h2&gt;
&lt;p&gt;We use &lt;a href="https://cmake.org" rel="nofollow"&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt; as the build system:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; mkdir -p out/release
&amp;gt; cd out/release
&amp;gt; cmake ../..
&amp;gt; make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This builds the library as a shared (dynamic)
library (&lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.dylib&lt;/code&gt;), a static library (&lt;code&gt;.a&lt;/code&gt;), and
as a single object file (&lt;code&gt;.o&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; sudo make install&lt;/code&gt; (install the library and header files in &lt;code&gt;/usr/local/lib&lt;/code&gt;  and &lt;code&gt;/usr/local/include&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;You can build the debug version which does many internal checks and
maintains detailed statistics as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; mkdir -p out/debug
&amp;gt; cd out/debug
&amp;gt; cmake -DCMAKE_BUILD_TYPE=Debug ../..
&amp;gt; make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will name the shared library as &lt;code&gt;libmimalloc-debug.so&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Finally, you can build a &lt;em&gt;secure&lt;/em&gt; version that uses guard pages, encrypted
free lists, etc., as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; mkdir -p out/secure
&amp;gt; cd out/secure
&amp;gt; cmake -DMI_SECURE=ON ../..
&amp;gt; make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will name the shared library as &lt;code&gt;libmimalloc-secure.so&lt;/code&gt;.
Use &lt;code&gt;ccmake&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt; instead of &lt;code&gt;cmake&lt;/code&gt;
to see and customize all the available build options.&lt;/p&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install CMake: &lt;code&gt;sudo apt-get install cmake&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install CCMake: &lt;code&gt;sudo apt-get install cmake-curses-gui&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-using-the-library" class="anchor" aria-hidden="true" href="#using-the-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the library&lt;/h1&gt;
&lt;p&gt;The preferred usage is including &lt;code&gt;&amp;lt;mimalloc.h&amp;gt;&lt;/code&gt;, linking with
the shared- or static library, and using the &lt;code&gt;mi_malloc&lt;/code&gt; API exclusively for allocation. For example,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; gcc -o myprogram -lmimalloc myfile.c
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;mimalloc uses only safe OS calls (&lt;code&gt;mmap&lt;/code&gt; and &lt;code&gt;VirtualAlloc&lt;/code&gt;) and can co-exist
with other allocators linked to the same program.
If you use &lt;code&gt;cmake&lt;/code&gt;, you can simply use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;find_package(mimalloc 1.0 REQUIRED)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in your &lt;code&gt;CMakeLists.txt&lt;/code&gt; to find a locally installed mimalloc. Then use either:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;target_link_libraries(myapp PUBLIC mimalloc)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to link with the shared (dynamic) library, or:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;target_link_libraries(myapp PUBLIC mimalloc-static)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to link with the static library. See &lt;code&gt;test\CMakeLists.txt&lt;/code&gt; for an example.&lt;/p&gt;
&lt;p&gt;For best performance in C++ programs, it is also recommended to override the
global &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; operators. For convience, mimalloc provides
&lt;a href="https://github.com/microsoft/mimalloc/blob/master/include/mimalloc-new-delete.h"&gt;mimalloc-new-delete.h&lt;/a&gt; which does this for you -- just include it in a single(!) source file in your project.&lt;/p&gt;
&lt;p&gt;You can pass environment variables to print verbose messages (&lt;code&gt;MIMALLOC_VERBOSE=1&lt;/code&gt;)
and statistics (&lt;code&gt;MIMALLOC_SHOW_STATS=1&lt;/code&gt;) (in the debug version):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; env MIMALLOC_SHOW_STATS=1 ./cfrac 175451865205073170563711388363

175451865205073170563711388363 = 374456281610909315237213 * 468551

heap stats:     peak      total      freed       unit
normal   2:    16.4 kb    17.5 mb    17.5 mb      16 b   ok
normal   3:    16.3 kb    15.2 mb    15.2 mb      24 b   ok
normal   4:      64 b      4.6 kb     4.6 kb      32 b   ok
normal   5:      80 b    118.4 kb   118.4 kb      40 b   ok
normal   6:      48 b       48 b       48 b       48 b   ok
normal  17:     960 b      960 b      960 b      320 b   ok

heap stats:     peak      total      freed       unit
    normal:    33.9 kb    32.8 mb    32.8 mb       1 b   ok
      huge:       0 b        0 b        0 b        1 b   ok
     total:    33.9 kb    32.8 mb    32.8 mb       1 b   ok
malloc requested:         32.8 mb

 committed:    58.2 kb    58.2 kb    58.2 kb       1 b   ok
  reserved:     2.0 mb     2.0 mb     2.0 mb       1 b   ok
     reset:       0 b        0 b        0 b        1 b   ok
  segments:       1          1          1
-abandoned:       0
     pages:       6          6          6
-abandoned:       0
     mmaps:       3
 mmap fast:       0
 mmap slow:       1
   threads:       0
   elapsed:     2.022s
   process: user: 1.781s, system: 0.016s, faults: 756, reclaims: 0, rss: 2.7 mb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above model of using the &lt;code&gt;mi_&lt;/code&gt; prefixed API is not always possible
though in existing programs that already use the standard malloc interface,
and another option is to override the standard malloc interface
completely and redirect all calls to the &lt;em&gt;mimalloc&lt;/em&gt; library instead.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-environment-options" class="anchor" aria-hidden="true" href="#environment-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Environment Options&lt;/h2&gt;
&lt;p&gt;You can set further options either programmatically (using &lt;a href="https://microsoft.github.io/mimalloc/group__options.html" rel="nofollow"&gt;&lt;code&gt;mi_option_set&lt;/code&gt;&lt;/a&gt;),
or via environment variables.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_SHOW_STATS=1&lt;/code&gt;: show statistics when the program terminates.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_VERBOSE=1&lt;/code&gt;: show verbose messages.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_SHOW_ERRORS=1&lt;/code&gt;: show error and warning messages.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_LARGE_OS_PAGES=1&lt;/code&gt;: use large OS pages when available; for some workloads this can significantly
improve performance. Use &lt;code&gt;MIMALLOC_VERBOSE&lt;/code&gt; to check if the large OS pages are enabled -- usually one needs
to explicitly allow large OS pages (as on &lt;a href="https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/enable-the-lock-pages-in-memory-option-windows?view=sql-server-2017" rel="nofollow"&gt;Windows&lt;/a&gt; and &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/5/html/tuning_and_optimizing_red_hat_enterprise_linux_for_oracle_9i_and_10g_databases/sect-oracle_9i_and_10g_tuning_guide-large_memory_optimization_big_pages_and_huge_pages-configuring_huge_pages_in_red_hat_enterprise_linux_4_or_5" rel="nofollow"&gt;Linux&lt;/a&gt;). However, sometimes
the OS is very slow to reserve contiguous physical memory for large OS pages so use with care on systems that
can have fragmented memory.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_EAGER_REGION_COMMIT=1&lt;/code&gt;: on Windows, commit large (256MiB) regions eagerly. On Windows, these regions
show in the working set even though usually just a small part is committed to physical memory. This is why it
turned off by default on Windows as it looks not good in the task manager. However, in reality it is always better
to turn it on as it improves performance and has no other drawbacks.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_RESERVE_HUGE_OS_PAGES=N&lt;/code&gt;: where N is the number of 1GiB huge OS pages. This reserves the huge pages at
startup and can give quite a performance improvement on long running workloads. Usually it is better to not use
&lt;code&gt;MIMALLOC_LARGE_OS_PAGES&lt;/code&gt; in combination with this setting. Just like large OS pages, use with care as reserving
contiguous physical memory can take a long time when memory is fragmented. Still experimental.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-overriding-malloc" class="anchor" aria-hidden="true" href="#overriding-malloc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overriding Malloc&lt;/h1&gt;
&lt;p&gt;Overriding the standard &lt;code&gt;malloc&lt;/code&gt; can be done either &lt;em&gt;dynamically&lt;/em&gt; or &lt;em&gt;statically&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dynamic-override" class="anchor" aria-hidden="true" href="#dynamic-override"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic override&lt;/h2&gt;
&lt;p&gt;This is the recommended way to override the standard malloc interface.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-linux-bsd" class="anchor" aria-hidden="true" href="#linux-bsd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux, BSD&lt;/h3&gt;
&lt;p&gt;On these ELF-based systems we preload the mimalloc shared
library so all calls to the standard &lt;code&gt;malloc&lt;/code&gt; interface are
resolved to the &lt;em&gt;mimalloc&lt;/em&gt; library.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; env LD_PRELOAD=/usr/lib/libmimalloc.so myprogram
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can set extra environment variables to check that mimalloc is running,
like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or run with the debug version to get detailed statistics:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; env MIMALLOC_SHOW_STATS=1 LD_PRELOAD=/usr/lib/libmimalloc-debug.so myprogram
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MacOS&lt;/h3&gt;
&lt;p&gt;On macOS we can also preload the mimalloc shared
library so all calls to the standard &lt;code&gt;malloc&lt;/code&gt; interface are
resolved to the &lt;em&gt;mimalloc&lt;/em&gt; library.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; env DYLD_FORCE_FLAT_NAMESPACE=1 DYLD_INSERT_LIBRARIES=/usr/lib/libmimalloc.dylib myprogram
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that certain security restrictions may apply when doing this from
the &lt;a href="https://stackoverflow.com/questions/43941322/dyld-insert-libraries-ignored-when-calling-application-through-bash" rel="nofollow"&gt;shell&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note: unfortunately, at this time, dynamic overriding on macOS seems broken but it is actively worked on to fix this
(see issue &lt;a href="https://github.com/microsoft/mimalloc/issues/50"&gt;&lt;code&gt;#50&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows-1" class="anchor" aria-hidden="true" href="#windows-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;On Windows you need to link your program explicitly with the mimalloc
DLL and use the C-runtime library as a DLL (using the &lt;code&gt;/MD&lt;/code&gt; or &lt;code&gt;/MDd&lt;/code&gt; switch).
Moreover, you need to ensure the &lt;code&gt;mimalloc-redirect.dll&lt;/code&gt; (or &lt;code&gt;mimalloc-redirect32.dll&lt;/code&gt;) is available
in the same folder as the main &lt;code&gt;mimalloc-override.dll&lt;/code&gt; at runtime (as it is a dependency).
The redirection DLL ensures that all calls to the C runtime malloc API get redirected to
mimalloc (in &lt;code&gt;mimalloc-override.dll&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;To ensure the mimalloc DLL is loaded at run-time it is easiest to insert some
call to the mimalloc API in the &lt;code&gt;main&lt;/code&gt; function, like &lt;code&gt;mi_version()&lt;/code&gt;
(or use the &lt;code&gt;/INCLUDE:mi_version&lt;/code&gt; switch on the linker). See the &lt;code&gt;mimalloc-override-test&lt;/code&gt; project
for an example on how to use this. For best performance on Windows with C++, it
is highly recommended to also override the &lt;code&gt;new&lt;/code&gt;/&lt;code&gt;delete&lt;/code&gt; operations (as described
in the introduction).&lt;/p&gt;
&lt;p&gt;The environment variable &lt;code&gt;MIMALLOC_DISABLE_REDIRECT=1&lt;/code&gt; can be used to disable dynamic
overriding at run-time. Use &lt;code&gt;MIMALLOC_VERBOSE=1&lt;/code&gt; to check if mimalloc was successfully redirected.&lt;/p&gt;
&lt;p&gt;(Note: in principle, it is possible to patch existing executables
that are linked with the dynamic C runtime (&lt;code&gt;ucrtbase.dll&lt;/code&gt;) by just putting the &lt;code&gt;mimalloc-override.dll&lt;/code&gt; into the import table (and putting &lt;code&gt;mimalloc-redirect.dll&lt;/code&gt; in the same folder)
Such patching can be done for example with &lt;a href="https://ntcore.com/?page_id=388" rel="nofollow"&gt;CFF Explorer&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-static-override" class="anchor" aria-hidden="true" href="#static-override"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Static override&lt;/h2&gt;
&lt;p&gt;On Unix-like systems, you can also statically link with &lt;em&gt;mimalloc&lt;/em&gt; to override the standard
malloc interface. The recommended way is to link the final program with the
&lt;em&gt;mimalloc&lt;/em&gt; single object file (&lt;code&gt;mimalloc-override.o&lt;/code&gt;). We use
an object file instead of a library file as linkers give preference to
that over archives to resolve symbols. To ensure that the standard
malloc interface resolves to the &lt;em&gt;mimalloc&lt;/em&gt; library, link it as the first
object file. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; gcc -o myprogram mimalloc-override.o  myfile1.c ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another way to override statically that works on all platforms, is to
link statically to mimalloc (as shown in the introduction) and include a
header file in each source file that re-defines &lt;code&gt;malloc&lt;/code&gt; etc. to &lt;code&gt;mi_malloc&lt;/code&gt;.
This is provided by &lt;a href="https://github.com/microsoft/mimalloc/blob/master/include/mimalloc-override.h"&gt;&lt;code&gt;mimalloc-override.h&lt;/code&gt;&lt;/a&gt;. This only works reliably though if all sources are
under your control or otherwise mixing of pointers from different heaps may occur!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h1&gt;
&lt;p&gt;We tested &lt;em&gt;mimalloc&lt;/em&gt; against many other top allocators over a wide
range of benchmarks, ranging from various real world programs to
synthetic benchmarks that see how the allocator behaves under more
extreme circumstances.&lt;/p&gt;
&lt;p&gt;In our benchmarks, &lt;em&gt;mimalloc&lt;/em&gt; always outperforms all other leading
allocators (&lt;em&gt;jemalloc&lt;/em&gt;, &lt;em&gt;tcmalloc&lt;/em&gt;, &lt;em&gt;Hoard&lt;/em&gt;, etc), and usually uses less
memory (up to 25% more in the worst case). A nice property is that it
does &lt;em&gt;consistently&lt;/em&gt; well over the wide range of benchmarks.&lt;/p&gt;
&lt;p&gt;Allocators are interesting as there exists no algorithm that is generally
optimal -- for a given allocator one can usually construct a workload
where it does not do so well. The goal is thus to find an allocation
strategy that performs well over a wide range of benchmarks without
suffering from underperformance in less common situations (which is what
the second half of our benchmark set tests for).&lt;/p&gt;
&lt;p&gt;We show here only the results on an AMD EPYC system (Apr 2019) -- for
specific details and further benchmarks we refer to the &lt;a href="https://www.microsoft.com/en-us/research/publication/mimalloc-free-list-sharding-in-action" rel="nofollow"&gt;technical report&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The benchmark suite is scripted and available separately
as &lt;a href="https://github.com/daanx/mimalloc-bench"&gt;mimalloc-bench&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-benchmark-results" class="anchor" aria-hidden="true" href="#benchmark-results"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmark Results&lt;/h2&gt;
&lt;p&gt;Testing on a big Amazon EC2 instance (&lt;a href="https://aws.amazon.com/ec2/instance-types/" rel="nofollow"&gt;r5a.4xlarge&lt;/a&gt;)
consisting of a 16-core AMD EPYC 7000 at 2.5GHz
with 128GB ECC memory, running	Ubuntu 18.04.1 with LibC 2.27 and GCC 7.3.0.
The measured allocators are &lt;em&gt;mimalloc&lt;/em&gt; (mi),
Google's &lt;a href="https://github.com/gperftools/gperftools"&gt;&lt;em&gt;tcmalloc&lt;/em&gt;&lt;/a&gt; (tc) used in Chrome,
&lt;a href="https://github.com/jemalloc/jemalloc"&gt;&lt;em&gt;jemalloc&lt;/em&gt;&lt;/a&gt; (je) by Jason Evans used in Firefox and FreeBSD,
&lt;a href="https://github.com/microsoft/snmalloc"&gt;&lt;em&gt;snmalloc&lt;/em&gt;&lt;/a&gt; (sn) by Liétar et al. [8], &lt;a href="https://github.com/rampantpixels/rpmalloc"&gt;&lt;em&gt;rpmalloc&lt;/em&gt;&lt;/a&gt; (rp) by Mattias Jansson at Rampant Pixels,
&lt;a href="https://github.com/emeryberger/Hoard"&gt;&lt;em&gt;Hoard&lt;/em&gt;&lt;/a&gt; by Emery Berger [1],
the system allocator (glibc) (based on &lt;em&gt;PtMalloc2&lt;/em&gt;), and the Intel thread
building blocks &lt;a href="https://github.com/intel/tbb"&gt;allocator&lt;/a&gt; (tbb).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/bench-r5a-1.svg"&gt;&lt;img src="doc/bench-r5a-1.svg" alt="bench-r5a-1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="doc/bench-r5a-2.svg"&gt;&lt;img src="doc/bench-r5a-2.svg" alt="bench-r5a-2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Memory usage:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/bench-r5a-rss-1.svg"&gt;&lt;img src="doc/bench-r5a-rss-1.svg" alt="bench-r5a-rss-1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="doc/bench-r5a-rss-2.svg"&gt;&lt;img src="doc/bench-r5a-rss-2.svg" alt="bench-r5a-rss-1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(note: the &lt;em&gt;xmalloc-testN&lt;/em&gt; memory usage should be disregarded as it
allocates more the faster the program runs).&lt;/p&gt;
&lt;p&gt;In the first five benchmarks we can see &lt;em&gt;mimalloc&lt;/em&gt; outperforms the other
allocators moderately, but we also see that all these modern allocators
perform well -- the times of large performance differences in regular
workloads are over :-).
In &lt;em&gt;cfrac&lt;/em&gt; and &lt;em&gt;espresso&lt;/em&gt;, &lt;em&gt;mimalloc&lt;/em&gt; is a tad faster than &lt;em&gt;tcmalloc&lt;/em&gt; and
&lt;em&gt;jemalloc&lt;/em&gt;, but a solid 10% faster than all other allocators on
&lt;em&gt;espresso&lt;/em&gt;. The &lt;em&gt;tbb&lt;/em&gt; allocator does not do so well here and lags more than
20% behind &lt;em&gt;mimalloc&lt;/em&gt;. The &lt;em&gt;cfrac&lt;/em&gt; and &lt;em&gt;espresso&lt;/em&gt; programs do not use much
memory (~1.5MB) so it does not matter too much, but still &lt;em&gt;mimalloc&lt;/em&gt; uses
about half the resident memory of &lt;em&gt;tcmalloc&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;leanN&lt;/em&gt; program is most interesting as a large realistic and
concurrent workload of the &lt;a href="https://github.com/leanprover/lean"&gt;Lean&lt;/a&gt; theorem prover
compiling its own standard library, and there is a 8% speedup over &lt;em&gt;tcmalloc&lt;/em&gt;. This is
quite significant: if Lean spends 20% of its time in the
allocator that means that &lt;em&gt;mimalloc&lt;/em&gt; is 1.3× faster than &lt;em&gt;tcmalloc&lt;/em&gt;
here. (This is surprising as that is not measured in a pure
allocation benchmark like &lt;em&gt;alloc-test&lt;/em&gt;. We conjecture that we see this
outsized improvement here because &lt;em&gt;mimalloc&lt;/em&gt; has better locality in
the allocation which improves performance for the &lt;em&gt;other&lt;/em&gt; computations
in a program as well).&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;redis&lt;/em&gt; benchmark shows more differences between the allocators where
&lt;em&gt;mimalloc&lt;/em&gt; is 14% faster than &lt;em&gt;jemalloc&lt;/em&gt;. On this benchmark &lt;em&gt;tbb&lt;/em&gt; (and &lt;em&gt;Hoard&lt;/em&gt;) do
not do well and are over 40% slower.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;larson&lt;/em&gt; server workload allocates and frees objects between
many threads. Larson and Krishnan [2] observe this
behavior (which they call &lt;em&gt;bleeding&lt;/em&gt;) in actual server applications, and the
benchmark simulates this.
Here, &lt;em&gt;mimalloc&lt;/em&gt; is more than 2.5× faster than &lt;em&gt;tcmalloc&lt;/em&gt; and &lt;em&gt;jemalloc&lt;/em&gt;
due to the object migration between different threads. This is a difficult
benchmark for other allocators too where &lt;em&gt;mimalloc&lt;/em&gt; is still 48% faster than the next
fastest (&lt;em&gt;snmalloc&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;The second benchmark set tests specific aspects of the allocators and
shows even more extreme differences between them.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;alloc-test&lt;/em&gt;, by
&lt;a href="http://ithare.com/testing-memory-allocators-ptmalloc2-tcmalloc-hoard-jemalloc-while-trying-to-simulate-real-world-loads/" rel="nofollow"&gt;OLogN Technologies AG&lt;/a&gt;, is a very allocation intensive benchmark doing millions of
allocations in various size classes. The test is scaled such that when an
allocator performs almost identically on &lt;em&gt;alloc-test1&lt;/em&gt; as &lt;em&gt;alloc-testN&lt;/em&gt; it
means that it scales linearly. Here, &lt;em&gt;tcmalloc&lt;/em&gt;, &lt;em&gt;snmalloc&lt;/em&gt;, and
&lt;em&gt;Hoard&lt;/em&gt; seem to scale less well and do more than 10% worse on the
multi-core version. Even the best allocators (&lt;em&gt;tcmalloc&lt;/em&gt; and &lt;em&gt;jemalloc&lt;/em&gt;) are
more than 10% slower as &lt;em&gt;mimalloc&lt;/em&gt; here.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;sh6bench&lt;/em&gt; and &lt;em&gt;sh8bench&lt;/em&gt; benchmarks are
developed by &lt;a href="http://www.microquill.com/" rel="nofollow"&gt;MicroQuill&lt;/a&gt; as part of SmartHeap.
In &lt;em&gt;sh6bench&lt;/em&gt; &lt;em&gt;mimalloc&lt;/em&gt; does much
better than the others (more than 2× faster than &lt;em&gt;jemalloc&lt;/em&gt;).
We cannot explain this well but believe it is
caused in part by the "reverse" free-ing pattern in &lt;em&gt;sh6bench&lt;/em&gt;.
Again in &lt;em&gt;sh8bench&lt;/em&gt; the &lt;em&gt;mimalloc&lt;/em&gt; allocator handles object migration
between threads much better and is over 36% faster than the next best
allocator, &lt;em&gt;snmalloc&lt;/em&gt;. Whereas &lt;em&gt;tcmalloc&lt;/em&gt; did well on &lt;em&gt;sh6bench&lt;/em&gt;, the
addition of object migration caused it to be almost 3 times slower
than before.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;xmalloc-testN&lt;/em&gt; benchmark by Lever and Boreham [5] and Christian Eder,
simulates an asymmetric workload where
some threads only allocate, and others only free. The &lt;em&gt;snmalloc&lt;/em&gt;
allocator was especially developed to handle this case well as it
often occurs in concurrent message passing systems (like the [Pony] language
for which &lt;em&gt;snmalloc&lt;/em&gt; was initially developed). Here we see that
the &lt;em&gt;mimalloc&lt;/em&gt; technique of having non-contended sharded thread free
lists pays off as it even outperforms &lt;em&gt;snmalloc&lt;/em&gt; here.
Only &lt;em&gt;jemalloc&lt;/em&gt; also handles this reasonably well, while the
others underperform by a large margin.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;cache-scratch&lt;/em&gt; benchmark by Emery Berger [1], and introduced with the Hoard
allocator to test for &lt;em&gt;passive-false&lt;/em&gt; sharing of cache lines. With a single thread they all
perform the same, but when running with multiple threads the potential allocator
induced false sharing of the cache lines causes large run-time
differences, where &lt;em&gt;mimalloc&lt;/em&gt; is more than 18× faster than &lt;em&gt;jemalloc&lt;/em&gt; and
&lt;em&gt;tcmalloc&lt;/em&gt;! Crundal [6] describes in detail why the false cache line
sharing occurs in the &lt;em&gt;tcmalloc&lt;/em&gt; design, and also discusses how this
can be avoided with some small implementation changes.
Only &lt;em&gt;snmalloc&lt;/em&gt; and &lt;em&gt;tbb&lt;/em&gt; also avoid the
cache line sharing like &lt;em&gt;mimalloc&lt;/em&gt;. Kukanov and Voss [7] describe in detail
how the design of &lt;em&gt;tbb&lt;/em&gt; avoids the false cache line sharing.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[1] Emery D. Berger, Kathryn S. McKinley, Robert D. Blumofe, and Paul R. Wilson.
&lt;em&gt;Hoard: A Scalable Memory Allocator for Multithreaded Applications&lt;/em&gt;
the Ninth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-IX). Cambridge, MA, November 2000.
&lt;a href="http://www.cs.utexas.edu/users/mckinley/papers/asplos-2000.pdf" rel="nofollow"&gt;pdf&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[2] P. Larson and M. Krishnan. &lt;em&gt;Memory allocation for long-running server applications&lt;/em&gt;. In ISMM, Vancouver, B.C., Canada, 1998.
&lt;a href="http://citeseer.ist.psu.edu/viewdoc/download;jsessionid=5F0BFB4F57832AEB6C11BF8257271088?doi=10.1.1.45.1947&amp;amp;rep=rep1&amp;amp;type=pdf" rel="nofollow"&gt;pdf&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[3] D. Grunwald, B. Zorn, and R. Henderson.
&lt;em&gt;Improving the cache locality of memory allocation&lt;/em&gt;. In R. Cartwright, editor,
Proceedings of the Conference on Programming Language Design and Implementation, pages 177–186, New York, NY, USA, June 1993.
&lt;a href="http://citeseer.ist.psu.edu/viewdoc/download?doi=10.1.1.43.6621&amp;amp;rep=rep1&amp;amp;type=pdf" rel="nofollow"&gt;pdf&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[4] J. Barnes and P. Hut. &lt;em&gt;A hierarchical O(n*log(n)) force-calculation algorithm&lt;/em&gt;. Nature, 324:446-449, 1986.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[5] C. Lever, and D. Boreham. &lt;em&gt;Malloc() Performance in a Multithreaded Linux Environment.&lt;/em&gt;
In USENIX Annual Technical Conference, Freenix Session. San Diego, CA. Jun. 2000.
Available at &lt;a href="https://github.com/kuszmaul/SuperMalloc/tree/master/tests"&gt;https://github.com/kuszmaul/SuperMalloc/tree/master/tests&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[6] Timothy Crundal. &lt;em&gt;Reducing Active-False Sharing in TCMalloc.&lt;/em&gt;
2016. &lt;a href="http://courses.cecs.anu.edu.au/courses/CSPROJECTS/16S1/Reports/Timothy_Crundal_Report.pdf" rel="nofollow"&gt;http://courses.cecs.anu.edu.au/courses/CSPROJECTS/16S1/Reports/Timothy_Crundal_Report.pdf&lt;/a&gt;. CS16S1 project at the Australian National University.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[7] Alexey Kukanov, and Michael J Voss.
&lt;em&gt;The Foundations for Scalable Multi-Core Software in Intel Threading Building Blocks.&lt;/em&gt;
Intel Technology Journal 11 (4). 2007&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[8] Paul Liétar, Theodore Butler, Sylvan Clebsch, Sophia Drossopoulou, Juliana Franco, Matthew J Parkinson,
Alex Shamis, Christoph M Wintersteiger, and David Chisnall.
&lt;em&gt;Snmalloc: A Message Passing Allocator.&lt;/em&gt;
In Proceedings of the 2019 ACM SIGPLAN International Symposium on Memory Management, 122–135. ACM. 2019.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;This project welcomes contributions and suggestions.  Most contributions require you to agree to a
Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us
the rights to use your contribution. For details, visit &lt;a href="https://cla.microsoft.com" rel="nofollow"&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide
a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions
provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/mimalloc</guid><pubDate>Mon, 09 Dec 2019 00:09:00 GMT</pubDate></item><item><title>coolsnowwolf/lede #10 in C, Today</title><link>https://github.com/coolsnowwolf/lede</link><description>&lt;p&gt;&lt;i&gt;Lean's OpenWrt source&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;﻿Welcome to Lean's  git source of OpenWrt and packages

中文：如何编译自己需要的 OpenWrt 固件

注意：
1. 不要用 root 用户 git 和编译！！！
2. 国内用户编译前最好准备好梯子
3. 默认登陆IP 192.168.1.1, 密码 password

编译命令如下:

1. 首先装好 Ubuntu 64bit，推荐  Ubuntu  14 LTS x64

2. 命令行输入 sudo apt-get update ，然后输入
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler

3. git clone &lt;a href="https://github.com/coolsnowwolf/lede"&gt;https://github.com/coolsnowwolf/lede&lt;/a&gt; 命令下载好源代码，然后 cd lede 进入目录

4. ./scripts/feeds update -a 
   ./scripts/feeds install -a
   make menuconfig 

5. 最后选好你要的路由，输入 make -j1 V=s （-j1 后面是线程数。第一次编译推荐用单线程，国内请尽量全局科学上网）即可开始编译你要的固件了。

本套代码保证肯定可以编译成功。里面包括了 R9 所有源代码，包括 IPK 的。

你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！

特别提示：
1. 源代码中绝不含任何后门和可以监控或者劫持你的 HTTPS 的闭源软件，SSL 安全是互联网最后的壁垒。安全干净才是固件应该做到的。
2.如果你自认为 Koolshare 论坛或者其固件的脑残粉，本人不欢迎你使用本源代码。所以如果你是，那么使用过程中遇到任何问题本人概不回应。
3.如有问题需要讨论，欢迎加入 QQ 讨论群：Gargoyle OpenWrt 编译大群 ,号码 872575064 ，加群链接: 点击链接加入群聊【OP共享技术交流群】：&lt;a href="https://jq.qq.com/?_wv=1027&amp;amp;k=51yhjb2" rel="nofollow"&gt;https://jq.qq.com/?_wv=1027&amp;amp;k=51yhjb2&lt;/a&gt;

Please use "make menuconfig" to choose your preferred
configuration for the toolchain and firmware.

You need to have installed gcc, binutils, bzip2, flex, python, perl, make,
find, grep, diff, unzip, gawk, getopt, subversion, libz-dev and libc headers.

Run "./scripts/feeds update -a" to get all the latest package definitions
defined in feeds.conf / feeds.conf.default respectively
and "./scripts/feeds install -a" to install symlinks of all of them into
package/feeds/.

Use "make menuconfig" to configure your image.

Simply running "make" will build your firmware.
It will download all sources, build the cross-compile toolchain, 
the kernel and all choosen applications.

To build your own firmware you need to have access to a Linux, BSD or MacOSX system
(case-sensitive filesystem required). Cygwin will not be supported because of
the lack of case sensitiveness in the file system.



Note: Addition Lean's private package source code in ./package/lean directory. Use it under GPL v3.

GPLv3 is compatible with more licenses than GPLv2: it allows you to make combinations with code that has specific kinds of additional requirements that are not in GPLv3 itself. Section 7 has more information about this, including the list of additional requirements that are permitted.

&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>coolsnowwolf</author><guid isPermaLink="false">https://github.com/coolsnowwolf/lede</guid><pubDate>Mon, 09 Dec 2019 00:10:00 GMT</pubDate></item><item><title>id-Software/DOOM #11 in C, Today</title><link>https://github.com/id-Software/DOOM</link><description>&lt;p&gt;&lt;i&gt;DOOM Open Source Release&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body TXT" data-path="README.TXT"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;
Here it is, at long last.  The DOOM source code is released for your
non-profit use.  You still need real DOOM data to work with this code.
If you don't actually own a real copy of one of the DOOMs, you should
still be able to find them at software stores.

Many thanks to Bernd Kreimeier for taking the time to clean up the
project and make sure that it actually works.  Projects tends to rot if
you leave it alone for a few years, and it takes effort for someone to
deal with it again.

The bad news:  this code only compiles and runs on linux.  We couldn't
release the dos code because of a copyrighted sound library we used
(wow, was that a mistake -- I write my own sound code now), and I
honestly don't even know what happened to the port that microsoft did
to windows.

Still, the code is quite portable, and it should be straightforward to
bring it up on just about any platform.

I wrote this code a long, long time ago, and there are plenty of things
that seem downright silly in retrospect (using polar coordinates for
clipping comes to mind), but overall it should still be a usefull base
to experiment and build on.

The basic rendering concept -- horizontal and vertical lines of constant
Z with fixed light shading per band was dead-on, but the implementation
could be improved dramatically from the original code if it were
revisited.  The way the rendering proceded from walls to floors to
sprites could be collapsed into a single front-to-back walk of the bsp
tree to collect information, then draw all the contents of a subsector
on the way back up the tree.  It requires treating floors and ceilings
as polygons, rather than just the gaps between walls, and it requires
clipping sprite billboards into subsector fragments, but it would be
The Right Thing.

The movement and line of sight checking against the lines is one of the
bigger misses that I look back on.  It is messy code that had some
failure cases, and there was a vastly simpler (and faster) solution
sitting in front of my face.  I used the BSP tree for rendering things,
but I didn't realize at the time that it could also be used for
environment testing.  Replacing the line of sight test with a bsp line
clip would be pretty easy.  Sweeping volumes for movement gets a bit
tougher, and touches on many of the challenges faced in quake / quake2
with edge bevels on polyhedrons.

Some project ideas:

Port it to your favorite operating system.

Add some rendering features -- transparency, look up / down, slopes,
etc.

Add some game features -- weapons, jumping, ducking, flying, etc.

Create a packet server based internet game.

Create a client / server based internet game.

Do a 3D accelerated version.  On modern hardware (fast pentium + 3DFX)
you probably wouldn't even need to be clever -- you could just draw the
entire level and get reasonable speed.  With a touch of effort, it should
easily lock at 60 fps (well, there are some issues with DOOM's 35 hz
timebase...).  The biggest issues would probably be the non-power of two
texture sizes and the walls composed of multiple textures.


I don't have a real good guess at how many people are going to be
playing with this, but if significant projects are undertaken, it would
be cool to see a level of community cooperation.  I know that most early
projects are going to be rough hacks done in isolation, but I would be
very pleased to see a coordinated 'net release of an improved, backwards
compatable version of DOOM on multiple platforms next year.

Have fun.

John Carmack
12-23-97
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>id-Software</author><guid isPermaLink="false">https://github.com/id-Software/DOOM</guid><pubDate>Mon, 09 Dec 2019 00:11:00 GMT</pubDate></item><item><title>id-Software/Quake #12 in C, Today</title><link>https://github.com/id-Software/Quake</link><description>&lt;p&gt;&lt;i&gt;Quake GPL Source Release&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body txt" data-path="readme.txt"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;
This is the complete source code for winquake, glquake, quakeworld, and 
glquakeworld.

The projects have been tested with visual C++ 6.0, but masm is also required 
to build the assembly language files.  It is possible to change a #define and 
build with only C code, but the software rendering versions lose almost half 
its speed.  The OpenGL versions will not be effected very much.  The 
gas2masm tool was created to allow us to use the same source for the dos, 
linux, and windows versions, but I don't really recommend anyone mess 
with the asm code.

The original dos version of Quake should also be buildable from these 
sources, but we didn't bother trying.

The code is all licensed under the terms of the GPL (gnu public license).  
You should read the entire license, but the gist of it is that you can do 
anything you want with the code, including sell your new version.  The catch 
is that if you distribute new binary versions, you are required to make the 
entire source code available for free to everyone.

Our previous code releases have been under licenses that preclude 
commercial exploitation, but have no clause forcing sharing of source code.  
There have been some unfortunate losses to the community as a result of 
mod teams keeping their sources closed (and sometimes losing them).  If 
you are going to publicly release modified versions of this code, you must 
also make source code available.  I would encourage teams to even go a step 
farther and investigate using public CVS servers for development where 
possible.

The primary intent of this release is for entertainment and educational 
purposes, but the GPL does allow commercial exploitation if you obey the 
full license.  If you want to do something commercial and you just can't bear 
to have your source changes released, we could still negotiate a separate 
license agreement (for $$$), but I would encourage you to just live with the 
GPL.

All of the Quake data files remain copyrighted and licensed under the 
original terms, so you cannot redistribute data from the original game, but if 
you do a true total conversion, you can create a standalone game based on 
this code.

I will see about having the license changed on the shareware episode of 
quake to allow it to be duplicated more freely (for linux distributions, for 
example), but I can't give a timeframe for it.  You can still download one of 
the original quake demos and use that data with the code, but there are 
restrictions on the redistribution of the demo data.

If you never actually bought a complete version of Quake, you might want 
to rummage around in a local software bargain bin for one of the originals, 
or perhaps find a copy of the "Quake: the offering" boxed set with both 
mission packs.

Thanks to Dave "Zoid" Kirsh and Robert Duffy for doing the grunt work of 
building this release.

John Carmack
Id Software


&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>id-Software</author><guid isPermaLink="false">https://github.com/id-Software/Quake</guid><pubDate>Mon, 09 Dec 2019 00:12:00 GMT</pubDate></item><item><title>hanwckf/rt-n56u #13 in C, Today</title><link>https://github.com/hanwckf/rt-n56u</link><description>&lt;p&gt;&lt;i&gt;Padavan&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.com/hanwckf/rt-n56u" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ef902511763f1023f60724ab6407f1be2b258ae/68747470733a2f2f7472617669732d63692e636f6d2f68616e77636b662f72742d6e3536752e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/hanwckf/rt-n56u.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5ec56e79027133f4afcb4f6da239406b25aecc77/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f68616e77636b662f72742d6e3536752f746f74616c"&gt;&lt;img src="https://camo.githubusercontent.com/5ec56e79027133f4afcb4f6da239406b25aecc77/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f68616e77636b662f72742d6e3536752f746f74616c" alt="GitHub All Releases" data-canonical-src="https://img.shields.io/github/downloads/hanwckf/rt-n56u/total" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/hanwckf/rt-n56u/releases"&gt;&lt;img src="https://camo.githubusercontent.com/984514e2def8915567c149244365efb9156b72d8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f68616e77636b662f72742d6e3536752e737667" alt="release" data-canonical-src="https://img.shields.io/github/release/hanwckf/rt-n56u.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-readme" class="anchor" aria-hidden="true" href="#readme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;README&lt;/h1&gt;
&lt;p&gt;Welcome to the rt-n56u project&lt;/p&gt;
&lt;p&gt;This project aims to improve the rt-n56u and other supported devices on the software part, allowing power user to take full control over their hardware.
This project was created in hope to be useful, but comes without warranty or support. Installing it will probably void your warranty.
Contributors of this project are not responsible for what happens next.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-get-set-up" class="anchor" aria-hidden="true" href="#how-do-i-get-set-up"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I get set up?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/padavan/rt-n56u/wiki/EN/HowToMakeFirmware" rel="nofollow"&gt;Get the tools to build the system&lt;/a&gt; or &lt;a href="https://bitbucket.org/padavan/rt-n56u/downloads" rel="nofollow"&gt;Download pre-built system image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Feed the device with the system image file (Follow instructions of updating your current system)&lt;/li&gt;
&lt;li&gt;Perform factory reset&lt;/li&gt;
&lt;li&gt;Open web browser on &lt;a href="http://my.router" rel="nofollow"&gt;http://my.router&lt;/a&gt; to configure the services&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-contribution-guidelines" class="anchor" aria-hidden="true" href="#contribution-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution guidelines&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To be completed&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-特别说明" class="anchor" aria-hidden="true" href="#特别说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;特别说明&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;汉化字典来自：&lt;a href="https://github.com/gorden5566/padavan"&gt;https://github.com/gorden5566/padavan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;更新日志：&lt;a href="https://www.jianshu.com/p/d76a63a12eae" rel="nofollow"&gt;https://www.jianshu.com/p/d76a63a12eae&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-固件特点" class="anchor" aria-hidden="true" href="#固件特点"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;固件特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;a href="https://github.com/gorden5566/padavan"&gt;gorden5566&lt;/a&gt;的汉化字典&lt;/li&gt;
&lt;li&gt;aria2前端更换为&lt;a href="https://github.com/mayswind/AriaNg"&gt;AriaNg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/curl/curl"&gt;curl&lt;/a&gt;可选编译可执行程序 &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_CURL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可选关闭webui里不常用的vpn页面 &lt;code&gt;CONFIG_FIRMWARE_WEBUI_HIDE_VPN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用了&lt;a href="http://pm.freize.net/index.html" rel="nofollow"&gt;PROMETHEUS&lt;/a&gt;提供的部分补丁&lt;/li&gt;
&lt;li&gt;使用了&lt;a href="https://gitlab.com/padavan-ng/padavan-ng" rel="nofollow"&gt;Linaro1985/padavan-ng&lt;/a&gt;的部分软件包&lt;/li&gt;
&lt;li&gt;可选以下插件：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/scutclient"&gt;scutclient&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chenhaowen01/gdut-drcom"&gt;gdut-drcom&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_GDUT_DRCOM&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/dogcom"&gt;dogcom&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_DOGCOM&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/minieap"&gt;minieap&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_MINIEAP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/njit8021xclient"&gt;njit-client&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mzweilin/napt66"&gt;napt66&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_NAPT66&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shadowsocksr-backup/shadowsocksr-libev"&gt;ssr&lt;/a&gt;/&lt;a href="https://github.com/shadowsocks/shadowsocks-libev"&gt;ss&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shadowsocks/shadowsocks-libev"&gt;ss-server&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SSSERVER&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SoftEtherVPN/SoftEtherVPN_Stable"&gt;softether-vpnserver&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SoftEtherVPN/SoftEtherVPN_Stable"&gt;softether-vpnclient&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SoftEtherVPN/SoftEtherVPN_Stable"&gt;softether-vpncmd&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aa65535/hev-dns-forwarder"&gt;dns-forwarder&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/vlmcsd"&gt;vlmcsd&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_VLMCSD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tsl0922/ttyd"&gt;ttyd&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_TTYD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ohse.de/uwe/software/lrzsz.html" rel="nofollow"&gt;lrzsz&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_LRZSZ&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hisham.hm/htop/releases/" rel="nofollow"&gt;htop&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_HTOP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nano-editor.org/dist/" rel="nofollow"&gt;nano&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_NANO&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/esnet/iperf"&gt;iperf3&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_IPERF3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/dump1090"&gt;dump1090&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_DUMP1090&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/osmocom/rtl-sdr"&gt;rtl-sdr&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_RTL_SDR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/padavan-ng/padavan-ng/tree/master/trunk/user/samba36" rel="nofollow"&gt;samba3.6&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SMBD36&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/traviscross/mtr"&gt;mtr&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_MTR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dest-unreach.org/socat" rel="nofollow"&gt;socat&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SOCAT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://socks-relay.sourceforge.io" rel="nofollow"&gt;srelay&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_SRELAY&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanwckf/mentohust-1"&gt;mentohust&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_MENTOHUST&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fatedier/frp"&gt;frpc&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_FRPC&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fatedier/frp"&gt;frps&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_FRPS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TunSafe/TunSafe"&gt;tunsafe&lt;/a&gt; &lt;code&gt;CONFIG_FIRMWARE_INCLUDE_TUNSAFE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;已适配除官方适配外的以下机型&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;PSG1208&lt;/li&gt;
&lt;li&gt;PSG1218&lt;/li&gt;
&lt;li&gt;5K-W20 (USB)&lt;/li&gt;
&lt;li&gt;OYE-001 (USB)&lt;/li&gt;
&lt;li&gt;NEWIFI-MINI (USB)&lt;/li&gt;
&lt;li&gt;MI-MINI (USB)&lt;/li&gt;
&lt;li&gt;MI-3 (USB)&lt;/li&gt;
&lt;li&gt;HC5661A&lt;/li&gt;
&lt;li&gt;HC5861B&lt;/li&gt;
&lt;li&gt;360P2 (USB)&lt;/li&gt;
&lt;li&gt;MZ-R13&lt;/li&gt;
&lt;li&gt;MZ-R13P&lt;/li&gt;
&lt;li&gt;RT-AC1200GU (USB)&lt;/li&gt;
&lt;li&gt;XY-C1 (USB)&lt;/li&gt;
&lt;li&gt;WR1200JS (USB)&lt;/li&gt;
&lt;li&gt;NEWIFI3 (USB)&lt;/li&gt;
&lt;li&gt;K2P&lt;/li&gt;
&lt;li&gt;K2P-USB (USB)&lt;/li&gt;
&lt;li&gt;JCG-836PRO (USB)&lt;/li&gt;
&lt;li&gt;JCG-AC860M (USB)&lt;/li&gt;
&lt;li&gt;DIR-882 (USB)&lt;/li&gt;
&lt;li&gt;DIR-878&lt;/li&gt;
&lt;li&gt;MR2600 (USB)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-编译说明" class="anchor" aria-hidden="true" href="#编译说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;编译说明&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;安装依赖包&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt update
sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \
cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;克隆源码&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone --depth=1 https://gitee.com/hanwckf/rt-n56u.git /opt/rt-n56u
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;git clone --depth=1 https://github.com/hanwckf/rt-n56u.git /opt/rt-n56u&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;准备工具链&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /opt/rt-n56u/toolchain-mipsel

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 可以从源码编译工具链，这需要一些时间：&lt;/span&gt;
./clean_toolchain
./build_toolchain

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 或者下载预编译的工具链：&lt;/span&gt;
mkdir -p toolchain-3.4.x
wget https://github.com/hanwckf/padavan-toolchain/releases/download/v1.0/mipsel-linux-uclibc.tar.xz
tar -xvf mipsel-linux-uclibc.tar.xz -C toolchain-3.4.x&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;(可选) 修改机型配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;nano /opt/rt-n56u/trunk/configs/templates/PSG1218.config&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;清理代码树并开始编译&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /opt/rt-n56u/trunk
sudo ./clear_tree
sudo ./build_firmware_modify PSG1218
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 脚本第一个参数为路由型号，在trunk/configs/templates/中&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 编译好的固件在trunk/images里&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-请参阅" class="anchor" aria-hidden="true" href="#请参阅"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;请参阅&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/cb51fb0fb2ac" rel="nofollow"&gt;https://www.jianshu.com/p/cb51fb0fb2ac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/6b8403cdea46" rel="nofollow"&gt;https://www.jianshu.com/p/6b8403cdea46&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hanwckf</author><guid isPermaLink="false">https://github.com/hanwckf/rt-n56u</guid><pubDate>Mon, 09 Dec 2019 00:13:00 GMT</pubDate></item><item><title>offensive-security/exploitdb #14 in C, Today</title><link>https://github.com/offensive-security/exploitdb</link><description>&lt;p&gt;&lt;i&gt;The official Exploit Database repository&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-the-exploit-database-git-repository" class="anchor" aria-hidden="true" href="#the-exploit-database-git-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Exploit Database Git Repository&lt;/h1&gt;
&lt;p&gt;This is an official repository of &lt;a href="https://www.exploit-db.com/" rel="nofollow"&gt;The Exploit Database&lt;/a&gt;, a &lt;a href="https://www.offensive-security.com/community-projects/" rel="nofollow"&gt;project&lt;/a&gt; sponsored by &lt;a href="https://www.offensive-security.com/" rel="nofollow"&gt;Offensive Security&lt;/a&gt;.
Our repositories are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Exploits &amp;amp; Shellcodes: &lt;a href="https://github.com/offensive-security/exploitdb"&gt;https://github.com/offensive-security/exploitdb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Binary Exploits: &lt;a href="https://github.com/offensive-security/exploitdb-bin-sploits"&gt;https://github.com/offensive-security/exploitdb-bin-sploits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Papers: &lt;a href="https://github.com/offensive-security/exploitdb-papers"&gt;https://github.com/offensive-security/exploitdb-papers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Exploit Database is an archive of public exploits and corresponding vulnerable software, developed for use by penetration testers and vulnerability researchers. Its aim is to serve as the most comprehensive collection of &lt;a href="https://www.exploit-db.com/" rel="nofollow"&gt;exploits&lt;/a&gt;, &lt;a href="https://www.exploit-db.com/shellcodes" rel="nofollow"&gt;shellcode&lt;/a&gt; and &lt;a href="https://www.exploit-db.com/papers" rel="nofollow"&gt;papers&lt;/a&gt; gathered through direct submissions, mailing lists, and other public sources, and present them in a freely-available and easy-to-navigate database. The Exploit Database is a repository for exploits and Proof-of-Concepts rather than advisories, making it a valuable resource for those who need actionable data right away.
You can learn more about the project &lt;a href="https://www.exploit-db.com/" rel="nofollow"&gt;here (Top Right -&amp;gt; About Exploit-DB)&lt;/a&gt; and &lt;a href="https://www.exploit-db.com/history" rel="nofollow"&gt;here (History)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This repository is updated daily with the most recently added submissions. Any additional resources can be found in our &lt;a href="https://github.com/offensive-security/exploitdb-bin-sploits"&gt;binary exploits repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exploits are located in the &lt;a href="https://github.com/offensive-security/exploitdb/tree/master/exploits"&gt;&lt;code&gt;/exploits/&lt;/code&gt;&lt;/a&gt; directory, shellcodes can be found in the &lt;a href="https://github.com/offensive-security/exploitdb/tree/master/shellcodes"&gt;&lt;code&gt;/shellcodes/&lt;/code&gt;&lt;/a&gt; directory.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This project (and SearchSploit) is released under "&lt;a href="https://github.com/offensive-security/exploitdb/blob/master/LICENSE.md"&gt;GNU General Public License v2.0&lt;/a&gt;".&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-searchsploit" class="anchor" aria-hidden="true" href="#searchsploit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SearchSploit&lt;/h1&gt;
&lt;p&gt;Included with this repository is the &lt;strong&gt;SearchSploit&lt;/strong&gt; utility, which will allow you to search through exploits, shellcodes and papers &lt;em&gt;(if installed)&lt;/em&gt; using one or more terms.
For more information, please see the &lt;strong&gt;&lt;a href="https://www.exploit-db.com/searchsploit" rel="nofollow"&gt;SearchSploit manual&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usageexample" class="anchor" aria-hidden="true" href="#usageexample"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage/Example&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;root@kali:~# searchsploit -h
  Usage: searchsploit [options] term1 [term2] ... [termN]

==========
 Examples
==========
  searchsploit afd windows local
  searchsploit -t oracle windows
  searchsploit -p 39446
  searchsploit linux kernel 3.2 --exclude="(PoC)|/dos/"
  searchsploit linux reverse password

  For more examples, see the manual: https://www.exploit-db.com/searchsploit

=========
 Options
=========
   -c, --case     [Term]      Perform a case-sensitive search (Default is inSEnsITiVe).
   -e, --exact    [Term]      Perform an EXACT match on exploit title (Default is AND) [Implies "-t"].
   -h, --help                 Show this help screen.
   -j, --json     [Term]      Show result in JSON format.
   -m, --mirror   [EDB-ID]    Mirror (aka copies) an exploit to the current working directory.
   -o, --overflow [Term]      Exploit titles are allowed to overflow their columns.
   -p, --path     [EDB-ID]    Show the full path to an exploit (and also copies the path to the clipboard if possible).
   -t, --title    [Term]      Search JUST the exploit title (Default is title AND the file's path).
   -u, --update               Check for and install any exploitdb package updates (deb or git).
   -w, --www      [Term]      Show URLs to Exploit-DB.com rather than the local path.
   -x, --examine  [EDB-ID]    Examine (aka opens) the exploit using $PAGER.
       --colour               Disable colour highlighting in search results.
       --id                   Display the EDB-ID value rather than local path.
       --nmap     [file.xml]  Checks all results in Nmap's XML output with service version (e.g.: nmap -sV -oX file.xml).
                                Use "-v" (verbose) to try even more combinations
       --exclude="term"       Remove values from results. By using "|" to separate, you can chain multiple values.
                                e.g. --exclude="term1|term2|term3".

=======
 Notes
=======
 * You can use any number of search terms.
 * Search terms are not case-sensitive (by default), and ordering is irrelevant.
   * Use '-c' if you wish to reduce results by case-sensitive searching.
   * And/Or '-e' if you wish to filter results by using an exact match.
 * Use '-t' to exclude the file's path to filter the search results.
   * Remove false positives (especially when searching using numbers - i.e. versions).
 * When updating or displaying help, search terms will be ignored.

root@kali:~#
root@kali:~# searchsploit afd windows local
---------------------------------------------------------------------------------------- -----------------------------------
 Exploit Title                                                                          |  Path
                                                                                        | (/usr/share/exploitdb/)
---------------------------------------------------------------------------------------- -----------------------------------
Microsoft Windows (x86) - 'afd.sys' Local Privilege Escalation (MS11-046)               | exploits/windows_x86/local/40564.c
Microsoft Windows - 'AfdJoinLeaf' Local Privilege Escalation (MS11-080) (Metasploit)    | exploits/windows/local/21844.rb
Microsoft Windows - 'afd.sys' Local Kernel (PoC) (MS11-046)                             | exploits/windows/dos/18755.c
Microsoft Windows 7 (x64) - 'afd.sys' Dangling Pointer Privilege Escalation (MS14-040)  | exploits/windows_x86-64/local/39525.py
Microsoft Windows 7 (x86) - 'afd.sys' Dangling Pointer Privilege Escalation (MS14-040)  | exploits/windows_x86/local/39446.py
Microsoft Windows XP - 'afd.sys' Local Kernel Denial of Service                         | exploits/windows/dos/17133.c
Microsoft Windows XP/2003 - 'afd.sys' Local Privilege Escalation (K-plugin) (MS08-066)  | exploits/windows/local/6757.txt
Microsoft Windows XP/2003 - 'afd.sys' Local Privilege Escalation (MS11-080)             | exploits/windows/local/18176.py
---------------------------------------------------------------------------------------- -----------------------------------
Shellcodes: No Result
root@kali:~#
root@kali:~# searchsploit -p 39446
  Exploit: Microsoft Windows 7 (x86) - 'afd.sys' Dangling Pointer Privilege Escalation (MS14-040)
      URL: https://www.exploit-db.com/exploits/39446
     Path: /usr/share/exploitdb/exploits/windows_x86/local/39446.py
File Type: Python script, ASCII text executable, with CRLF line terminators

Copied EDB-ID #39446's path to the clipboard.
root@kali:~#
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;SearchSploit requires either "CoreUtils" or "utilities" (e.g. &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, etc.) for the core features to work.
The self updating function will require &lt;code&gt;git&lt;/code&gt;, and for the Nmap XML option to work, will require &lt;code&gt;xmllint&lt;/code&gt; (found in the &lt;code&gt;libxml2-utils&lt;/code&gt; package in Debian-based systems).&lt;/p&gt;
&lt;p&gt;You can find a &lt;strong&gt;more in-depth guide in the &lt;a href="https://www.exploit-db.com/searchsploit" rel="nofollow"&gt;SearchSploit manual&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kali Linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Exploit-DB/SearchSploit is already packaged inside of Kali-Linux. A method of installation is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@kali:~# apt -y install exploitdb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;NOTE: Optional is to install the additional packages:&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@kali:~# apt -y install exploitdb-bin-sploits exploitdb-papers
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In short: clone the repository, add the binary into &lt;code&gt;$PATH&lt;/code&gt;, and edit the config file to reflect the git path:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo git clone https://github.com/offensive-security/exploitdb.git /opt/exploitdb
$ sed 's|path_array+=(.*)|path_array+=("/opt/exploitdb")|g' /opt/exploitdb/.searchsploit_rc &amp;gt; ~/.searchsploit_rc
$ sudo ln -sf /opt/exploitdb/searchsploit /usr/local/bin/searchsploit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Homebrew&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you have &lt;a href="http://brew.sh/" rel="nofollow"&gt;homebrew&lt;/a&gt; (&lt;a href="https://github.com/Homebrew/homebrew-core/blob/master/Formula/exploitdb.rb"&gt;package&lt;/a&gt;, &lt;a href="https://formulae.brew.sh/formula/exploitdb" rel="nofollow"&gt;formula&lt;/a&gt;) installed, running the following will get you set up:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;user@MacBook:~$ brew update &amp;amp;&amp;amp; brew install exploitdb
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-credit" class="anchor" aria-hidden="true" href="#credit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credit&lt;/h2&gt;
&lt;p&gt;The following people made this possible:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.offensive-security.com/" rel="nofollow"&gt;Offensive Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unix-ninja"&gt;Unix-Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/" rel="nofollow"&gt;g0tmi1k&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>offensive-security</author><guid isPermaLink="false">https://github.com/offensive-security/exploitdb</guid><pubDate>Mon, 09 Dec 2019 00:14:00 GMT</pubDate></item><item><title>libuv/libuv #15 in C, Today</title><link>https://github.com/libuv/libuv</link><description>&lt;p&gt;&lt;i&gt;Cross-platform asynchronous I/O&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/libuv/libuv/master/img/banner.png"&gt;&lt;img src="https://raw.githubusercontent.com/libuv/libuv/master/img/banner.png" alt="libuv" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;libuv is a multi-platform support library with a focus on asynchronous I/O. It
was primarily developed for use by &lt;a href="http://nodejs.org/" rel="nofollow"&gt;Node.js&lt;/a&gt;, but it's also
used by &lt;a href="http://luvit.io/" rel="nofollow"&gt;Luvit&lt;/a&gt;, &lt;a href="http://julialang.org/" rel="nofollow"&gt;Julia&lt;/a&gt;,
&lt;a href="https://github.com/saghul/pyuv"&gt;pyuv&lt;/a&gt;, and &lt;a href="https://github.com/libuv/libuv/wiki/Projects-that-use-libuv"&gt;others&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-feature-highlights" class="anchor" aria-hidden="true" href="#feature-highlights"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature highlights&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Full-featured event loop backed by epoll, kqueue, IOCP, event ports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asynchronous TCP and UDP sockets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asynchronous DNS resolution&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asynchronous file and file system operations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;File system events&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ANSI escape code controlled TTY&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IPC with socket sharing, using Unix domain sockets or named pipes (Windows)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Child processes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Thread pool&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Signal handling&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;High resolution clock&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Threading and synchronization primitives&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning&lt;/h2&gt;
&lt;p&gt;Starting with version 1.0.0 libuv follows the &lt;a href="http://semver.org/" rel="nofollow"&gt;semantic versioning&lt;/a&gt;
scheme. The API change and backwards compatibility rules are those indicated by
SemVer. libuv will keep a stable ABI across major releases.&lt;/p&gt;
&lt;p&gt;The ABI/API changes can be tracked &lt;a href="http://abi-laboratory.pro/tracker/timeline/libuv/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h2&gt;
&lt;p&gt;libuv is licensed under the MIT license. Check the &lt;a href="LICENSE"&gt;LICENSE file&lt;/a&gt;.
The documentation is licensed under the CC BY 4.0 license. Check the &lt;a href="LICENSE-docs"&gt;LICENSE-docs file&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/libuv/help"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://groups.google.com/group/libuv" rel="nofollow"&gt;Mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://webchat.freenode.net?channels=libuv&amp;amp;uio=d4" rel="nofollow"&gt;IRC chatroom (#libuv@irc.freenode.org)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-official-documentation" class="anchor" aria-hidden="true" href="#official-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official documentation&lt;/h3&gt;
&lt;p&gt;Located in the docs/ subdirectory. It uses the &lt;a href="http://sphinx-doc.org/" rel="nofollow"&gt;Sphinx&lt;/a&gt;
framework, which makes it possible to build the documentation in multiple
formats.&lt;/p&gt;
&lt;p&gt;Show different supported building options:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make &lt;span class="pl-c1"&gt;help&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as HTML:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make html&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as HTML and live reload it when it changes (this requires
sphinx-autobuild to be installed and is only supported on Unix):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make livehtml&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as man pages:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make man&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build documentation as ePub:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make epub&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOTE: Windows users need to use make.bat instead of plain 'make'.&lt;/p&gt;
&lt;p&gt;Documentation can be browsed online &lt;a href="http://docs.libuv.org" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/libuv/libuv/tree/master/test"&gt;tests and benchmarks&lt;/a&gt;
also serve as API specification and usage examples.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-other-resources" class="anchor" aria-hidden="true" href="#other-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=nGn60vDSxQ4" rel="nofollow"&gt;LXJS 2012 talk&lt;/a&gt;
— High-level introductory talk about libuv.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thlorenz/libuv-dox"&gt;libuv-dox&lt;/a&gt;
— Documenting types and methods of libuv, mostly by reading uv.h.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thlorenz/learnuv"&gt;learnuv&lt;/a&gt;
— Learn uv for fun and profit, a self guided workshop to libuv.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These resources are not handled by libuv maintainers and might be out of
date. Please verify it before opening new issues.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-downloading" class="anchor" aria-hidden="true" href="#downloading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading&lt;/h2&gt;
&lt;p&gt;libuv can be downloaded either from the
&lt;a href="https://github.com/libuv/libuv"&gt;GitHub repository&lt;/a&gt;
or from the &lt;a href="http://dist.libuv.org/dist/" rel="nofollow"&gt;downloads site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Starting with libuv 1.7.0, binaries for Windows are also provided. This is to
be considered EXPERIMENTAL.&lt;/p&gt;
&lt;p&gt;Before verifying the git tags or signature files, importing the relevant keys
is necessary. Key IDs are listed in the
&lt;a href="https://github.com/libuv/libuv/blob/master/MAINTAINERS.md"&gt;MAINTAINERS&lt;/a&gt;
file, but are also available as git blob objects for easier use.&lt;/p&gt;
&lt;p&gt;Importing a key the usual way:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gpg --keyserver pool.sks-keyservers.net --recv-keys AE9BC059&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Importing a key from a git blob object:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git show pubkey-saghul &lt;span class="pl-k"&gt;|&lt;/span&gt; gpg --import&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-verifying-releases" class="anchor" aria-hidden="true" href="#verifying-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verifying releases&lt;/h3&gt;
&lt;p&gt;Git tags are signed with the developer's key, they can be verified as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git verify-tag v1.6.1&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Starting with libuv 1.7.0, the tarballs stored in the
&lt;a href="http://dist.libuv.org/dist/" rel="nofollow"&gt;downloads site&lt;/a&gt; are signed and an accompanying
signature file sit alongside each. Once both the release tarball and the
signature file are downloaded, the file can be verified as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gpg --verify libuv-1.7.0.tar.gz.sign&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-build-instructions" class="anchor" aria-hidden="true" href="#build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Instructions&lt;/h2&gt;
&lt;p&gt;For GCC there are two build methods: via autotools or via &lt;a href="http://code.google.com/p/gyp/" rel="nofollow"&gt;GYP&lt;/a&gt;.
GYP is a meta-build system which can generate MSVS, Makefile, and XCode
backends. It is best used for integration into other projects.&lt;/p&gt;
&lt;p&gt;To build with autotools:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ sh autogen.sh
$ ./configure
$ make
$ make check
$ make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build with &lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mkdir -p out/cmake &lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; out/cmake   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; create build directory&lt;/span&gt;
$ cmake ../.. -DBUILD_TESTING=ON      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; generate project with test&lt;/span&gt;
$ cmake --build &lt;span class="pl-c1"&gt;.&lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; build&lt;/span&gt;
$ ctest -C Debug --output-on-failure  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run tests&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or manually run tests:&lt;/span&gt;
$ ./out/cmake/uv_run_tests    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; shared library build&lt;/span&gt;
$ ./out/cmake/uv_run_tests_a  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; static library build&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build with GYP, first run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://chromium.googlesource.com/external/gyp build/gyp&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;Prerequisites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads/" rel="nofollow"&gt;Python 2.6 or 2.7&lt;/a&gt; as it is required
by &lt;a href="http://code.google.com/p/gyp/" rel="nofollow"&gt;GYP&lt;/a&gt;.
If python is not in your path, set the environment variable &lt;code&gt;PYTHON&lt;/code&gt; to its
location. For example: &lt;code&gt;set PYTHON=C:\Python27\python.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;One of:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://visualstudio.microsoft.com/visual-cpp-build-tools/" rel="nofollow"&gt;Visual C++ Build Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visualstudio.com/vs/older-downloads/" rel="nofollow"&gt;Visual Studio 2015 Update 3&lt;/a&gt;, all editions
including the Community edition (remember to select
"Common Tools for Visual C++ 2015" feature during installation).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visualstudio.com/downloads/" rel="nofollow"&gt;Visual Studio 2017&lt;/a&gt;, any edition (including the Build Tools SKU).
&lt;strong&gt;Required Components:&lt;/strong&gt; "MSbuild", "VC++ 2017 v141 toolset" and one of the
Windows SDKs (10 or 8.1).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Basic Unix tools required for some tests,
&lt;a href="http://git-scm.com/download/win" rel="nofollow"&gt;Git for Windows&lt;/a&gt; includes Git Bash
and tools which can be included in the global &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To build, launch a git shell (e.g. Cmd or PowerShell), run &lt;code&gt;vcbuild.bat&lt;/code&gt;
(to build with VS2017 you need to explicitly add a &lt;code&gt;vs2017&lt;/code&gt; argument),
which will checkout the GYP code into &lt;code&gt;build/gyp&lt;/code&gt;, generate &lt;code&gt;uv.sln&lt;/code&gt;
as well as the necesery related project files, and start building.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild vs2017&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run the tests:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To see all the options that could passed to &lt;code&gt;vcbuild&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&amp;gt; &lt;span class="pl-s1"&gt;vcbuild &lt;span class="pl-c1"&gt;help&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;vcbuild.bat [debug/release] [test/bench] [clean] [noprojgen] [nobuild] [vs2017] [x86/x64] [static/shared]&lt;/span&gt;
&lt;span class="pl-c1"&gt;Examples:&lt;/span&gt;
&lt;span class="pl-c1"&gt;  vcbuild.bat              : builds debug build&lt;/span&gt;
&lt;span class="pl-c1"&gt;  vcbuild.bat test         : builds debug build and runs tests&lt;/span&gt;
&lt;span class="pl-c1"&gt;  vcbuild.bat release bench: builds release build and runs benchmarks&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-unix" class="anchor" aria-hidden="true" href="#unix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unix&lt;/h3&gt;
&lt;p&gt;For Debug builds (recommended) run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f make
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Release builds run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f make
$ BUILDTYPE=Release make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;./gyp_uv.py -f make -Dtarget_arch=x32&lt;/code&gt; to build &lt;a href="https://en.wikipedia.org/wiki/X32_ABI" rel="nofollow"&gt;x32&lt;/a&gt; binaries.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-os-x" class="anchor" aria-hidden="true" href="#os-x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OS X&lt;/h3&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f xcode
$ xcodebuild -ARCHS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x86_64&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; -project out/uv.xcodeproj -configuration Release -alltargets&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using Homebrew:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew install --HEAD libuv&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note to OS X users:&lt;/p&gt;
&lt;p&gt;Make sure that you specify the architecture you wish to build for in the
"ARCHS" flag. You can specify more than one by delimiting with a space
(e.g. "x86_64 i386").&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h3&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;p&gt;For arm&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-arm NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for arm64&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-arm64 NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for x86&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-x86 NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for x86_64&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-x86_64 NDK_PATH gyp [API_LEVEL]
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default API level is 24, but a different one can be selected as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;source&lt;/span&gt; ./android-configure-arm &lt;span class="pl-k"&gt;~&lt;/span&gt;/android-ndk-r15b gyp 21
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note for UNIX users: compile your project with &lt;code&gt;-D_LARGEFILE_SOURCE&lt;/code&gt; and
&lt;code&gt;-D_FILE_OFFSET_BITS=64&lt;/code&gt;. GYP builds take care of that automatically.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-ninja" class="anchor" aria-hidden="true" href="#using-ninja"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Ninja&lt;/h3&gt;
&lt;p&gt;To use ninja for build on ninja supported platforms, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f ninja
$ ninja -C out/Debug     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;for debug build OR&lt;/span&gt;
$ ninja -C out/Release&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h4&gt;
&lt;p&gt;Build (includes tests):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./gyp_uv.py -f make
$ make -C out&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-run-all-tests" class="anchor" aria-hidden="true" href="#run-all-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run all tests&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./out/Debug/run-tests&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-run-one-test" class="anchor" aria-hidden="true" href="#run-one-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run one test&lt;/h4&gt;
&lt;p&gt;The list of all tests is in &lt;code&gt;test/test-list.h&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This invocation will cause the &lt;code&gt;run-tests&lt;/code&gt; driver to fork and execute &lt;code&gt;TEST_NAME&lt;/code&gt; in a child process:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./out/Debug/run-tests TEST_NAME&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This invocation will cause the &lt;code&gt;run-tests&lt;/code&gt; driver to execute the test within the &lt;code&gt;run-tests&lt;/code&gt; process:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./out/Debug/run-tests TEST_NAME TEST_NAME&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-debugging-tools" class="anchor" aria-hidden="true" href="#debugging-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging tools&lt;/h4&gt;
&lt;p&gt;When running the test from within the &lt;code&gt;run-tests&lt;/code&gt; process (&lt;code&gt;run-tests TEST_NAME TEST_NAME&lt;/code&gt;), tools like gdb and valgrind work normally.
When running the test from a child of the &lt;code&gt;run-tests&lt;/code&gt; process (&lt;code&gt;run-tests TEST_NAME&lt;/code&gt;), use these tools in a fork-aware manner.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-fork-aware-gdb" class="anchor" aria-hidden="true" href="#fork-aware-gdb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fork-aware gdb&lt;/h5&gt;
&lt;p&gt;Use the &lt;a href="https://sourceware.org/gdb/onlinedocs/gdb/Forks.html" rel="nofollow"&gt;follow-fork-mode&lt;/a&gt; setting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gdb --args out/Debug/run-tests TEST_NAME

(gdb) set follow-fork-mode child
...
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-fork-aware-valgrind" class="anchor" aria-hidden="true" href="#fork-aware-valgrind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fork-aware valgrind&lt;/h5&gt;
&lt;p&gt;Use the &lt;code&gt;--trace-children=yes&lt;/code&gt; parameter:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ valgrind --trace-children=yes -v --tool=memcheck --leak-check=full --track-origins=yes --leak-resolution=high --show-reachable=yes --log-file=memcheck-%p.log out/Debug/run-tests TEST_NAME&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-running-benchmarks" class="anchor" aria-hidden="true" href="#running-benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running benchmarks&lt;/h3&gt;
&lt;p&gt;See the section on running tests.
The benchmark driver is &lt;code&gt;out/Debug/run-benchmarks&lt;/code&gt; and the benchmarks are listed in &lt;code&gt;test/benchmark-list.h&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-platforms" class="anchor" aria-hidden="true" href="#supported-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Platforms&lt;/h2&gt;
&lt;p&gt;Check the &lt;a href="SUPPORTED_PLATFORMS.md"&gt;SUPPORTED_PLATFORMS file&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-aix-notes" class="anchor" aria-hidden="true" href="#aix-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AIX Notes&lt;/h3&gt;
&lt;p&gt;AIX compilation using IBM XL C/C++ requires version 12.1 or greater.&lt;/p&gt;
&lt;p&gt;AIX support for filesystem events requires the non-default IBM &lt;code&gt;bos.ahafs&lt;/code&gt;
package to be installed.  This package provides the AIX Event Infrastructure
that is detected by &lt;code&gt;autoconf&lt;/code&gt;.
&lt;a href="http://www.ibm.com/developerworks/aix/library/au-aix_event_infrastructure/" rel="nofollow"&gt;IBM documentation&lt;/a&gt;
describes the package in more detail.&lt;/p&gt;
&lt;p&gt;AIX support for filesystem events is not compiled when building with &lt;code&gt;gyp&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-zos-notes" class="anchor" aria-hidden="true" href="#zos-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;z/OS Notes&lt;/h3&gt;
&lt;p&gt;z/OS creates System V semaphores and message queues. These persist on the system
after the process terminates unless the event loop is closed.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;ipcrm&lt;/code&gt; command to manually clear up System V resources.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-patches" class="anchor" aria-hidden="true" href="#patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Patches&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/libuv/libuv/blob/master/CONTRIBUTING.md"&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>libuv</author><guid isPermaLink="false">https://github.com/libuv/libuv</guid><pubDate>Mon, 09 Dec 2019 00:15:00 GMT</pubDate></item><item><title>espressif/arduino-esp32 #16 in C, Today</title><link>https://github.com/espressif/arduino-esp32</link><description>&lt;p&gt;&lt;i&gt;Arduino core for the ESP32&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-arduino-core-for-the-esp32" class="anchor" aria-hidden="true" href="#arduino-core-for-the-esp32"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arduino core for the ESP32&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/espressif/arduino-esp32" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99b7b50e418e6ed0e37794fd520fd722396aa5e2/68747470733a2f2f7472617669732d63692e6f72672f6573707265737369662f61726475696e6f2d65737033322e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/espressif/arduino-esp32.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/espressif/arduino-esp32/workflows/ESP32%20Arduino%20CI/badge.svg"&gt;&lt;img src="https://github.com/espressif/arduino-esp32/workflows/ESP32%20Arduino%20CI/badge.svg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-need-help-or-have-a-question-join-the-chat-at-" class="anchor" aria-hidden="true" href="#need-help-or-have-a-question-join-the-chat-at-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need help or have a question? Join the chat at &lt;a href="https://gitter.im/espressif/arduino-esp32?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ff24f59c743e4e0b3c245e4dc2dbbeedf1ad306/68747470733a2f2f6261646765732e6769747465722e696d2f6573707265737369662f61726475696e6f2d65737033322e737667" alt="https://gitter.im/espressif/arduino-esp32" data-canonical-src="https://badges.gitter.im/espressif/arduino-esp32.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#development-status"&gt;Development Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-instructions"&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#decoding-exceptions"&gt;Decoding Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#issuebug-report-template"&gt;Issue/Bug report template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#esp32dev-board-pinmap"&gt;ESP32Dev Board PINMAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-development-status" class="anchor" aria-hidden="true" href="#development-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development Status&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/arduino-esp32/releases/latest/"&gt;Latest stable release &lt;img src="https://camo.githubusercontent.com/8a1875aace3889f9ab48c65082f67d0a2592f85d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Release Version" data-canonical-src="https://img.shields.io/github/release/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt; &lt;img src="https://camo.githubusercontent.com/598cc61956fd795f6afeaa5f83b90b03e7b0dcaf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Release Date" data-canonical-src="https://img.shields.io/github/release-date/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1de0131ec4c1e3b3dd7b3103a06235070c1292e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/1de0131ec4c1e3b3dd7b3103a06235070c1292e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963" alt="Downloads" data-canonical-src="https://img.shields.io/github/downloads/espressif/arduino-esp32/latest/total.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/arduino-esp32/releases/latest/"&gt;Latest development release &lt;img src="https://camo.githubusercontent.com/d887e6d3d611a266139041835312348149b19b1b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6573707265737369662f61726475696e6f2d65737033322f616c6c2e7376673f7374796c653d706c6173746963" alt="Development Version" data-canonical-src="https://img.shields.io/github/release/espressif/arduino-esp32/all.svg?style=plastic" style="max-width:100%;"&gt; &lt;img src="https://camo.githubusercontent.com/210eed8ebec694f2cbb39013624c5b256c194c02/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652d7072652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Development Date" data-canonical-src="https://img.shields.io/github/release-date-pre/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/65b7c8229e217d09829f318cbcc9b8765e5596ba/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732d7072652f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/65b7c8229e217d09829f318cbcc9b8765e5596ba/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732d7072652f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963" alt="Downloads" data-canonical-src="https://img.shields.io/github/downloads-pre/espressif/arduino-esp32/latest/total.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-instructions" class="anchor" aria-hidden="true" href="#installation-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Instructions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Using Arduino IDE Boards Manager (preferred)
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/boards_manager.md"&gt;Instructions for Boards Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using Arduino IDE with the development repository
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/windows.md"&gt;Instructions for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/mac.md"&gt;Instructions for Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/debian_ubuntu.md"&gt;Instructions for Debian/Ubuntu Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/fedora.md"&gt;Instructions for Fedora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/opensuse.md"&gt;Instructions for openSUSE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/platformio.md"&gt;Using PlatformIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/make.md"&gt;Building with make&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/esp-idf_component.md"&gt;Using as ESP-IDF component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/OTAWebUpdate/OTAWebUpdate.md"&gt;Using OTAWebUpdater&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-decoding-exceptions" class="anchor" aria-hidden="true" href="#decoding-exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Decoding exceptions&lt;/h3&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/me-no-dev/EspExceptionDecoder"&gt;EspExceptionDecoder&lt;/a&gt; to get meaningful call trace.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issuebug-report-template" class="anchor" aria-hidden="true" href="#issuebug-report-template"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issue/Bug report template&lt;/h3&gt;
&lt;p&gt;Before reporting an issue, make sure you've searched for similar one that was already created. Also make sure to go through all the issues labelled as &lt;a href="https://github.com/espressif/arduino-esp32/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20label%3A%22for%20reference%22%20"&gt;for reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, if you are sure no one else had the issue, follow the &lt;a href="docs/ISSUE_TEMPLATE.md"&gt;ISSUE_TEMPLATE&lt;/a&gt; while reporting any issue.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-esp32dev-board-pinmap" class="anchor" aria-hidden="true" href="#esp32dev-board-pinmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ESP32Dev Board PINMAP&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/esp32_pinmap.png"&gt;&lt;img src="docs/esp32_pinmap.png" alt="Pin Functions" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tip" class="anchor" aria-hidden="true" href="#tip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tip&lt;/h3&gt;
&lt;p&gt;Sometimes to program ESP32 via serial you must keep GPIO0 LOW during the programming process&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>espressif</author><guid isPermaLink="false">https://github.com/espressif/arduino-esp32</guid><pubDate>Mon, 09 Dec 2019 00:16:00 GMT</pubDate></item><item><title>glfw/glfw #17 in C, Today</title><link>https://github.com/glfw/glfw</link><description>&lt;p&gt;&lt;i&gt;A multi-platform library for OpenGL, OpenGL ES, Vulkan, window and input&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-glfw" class="anchor" aria-hidden="true" href="#glfw"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GLFW&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/glfw/glfw" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2c822b23a4e69f0fc7b1cfbadf80e6661008ea6/68747470733a2f2f7472617669732d63692e6f72672f676c66772f676c66772e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://travis-ci.org/glfw/glfw.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/elmindreda/glfw" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6346081770131ebc78c6d0c2b0393cdec299cd00/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f306b663063743938333169356c3673702f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/0kf0ct9831i5l6sp/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/glfw-glfw" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/16bc297376e0df7df5cfa08d1385e2e52330bcf9/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f343838342f62616467652e737667" alt="Coverity Scan" data-canonical-src="https://scan.coverity.com/projects/4884/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;GLFW is an Open Source, multi-platform library for OpenGL, OpenGL ES and Vulkan
application development.  It provides a simple, platform-independent API for
creating windows, contexts and surfaces, reading input, handling events, etc.&lt;/p&gt;
&lt;p&gt;GLFW natively supports Windows, macOS and Linux and other Unix-like systems.  On
Linux both X11 and Wayland is supported.&lt;/p&gt;
&lt;p&gt;GLFW is licensed under the &lt;a href="http://www.glfw.org/license.html" rel="nofollow"&gt;zlib/libpng
license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can &lt;a href="http://www.glfw.org/download.html" rel="nofollow"&gt;download&lt;/a&gt; the latest stable release
as source or Windows binaries, or fetch the &lt;code&gt;latest&lt;/code&gt; branch from GitHub.  Each
release starting with 3.0 also has a corresponding &lt;a href="https://github.com/glfw/glfw/releases"&gt;annotated
tag&lt;/a&gt; with source and binary archives.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://www.glfw.org/docs/latest/" rel="nofollow"&gt;documentation&lt;/a&gt; is available online and is
included in all source and binary archives.  See the &lt;a href="https://www.glfw.org/docs/latest/news.html" rel="nofollow"&gt;release
notes&lt;/a&gt; for new features, caveats and
deprecations in the latest release.  For more details see the &lt;a href="http://www.glfw.org/changelog.html" rel="nofollow"&gt;version
history&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;master&lt;/code&gt; branch is the stable integration branch and &lt;em&gt;should&lt;/em&gt; always compile
and run on all supported platforms, although details of newly added features may
change until they have been included in a release.  New features and many bug
fixes live in &lt;a href="https://github.com/glfw/glfw/branches/all"&gt;other branches&lt;/a&gt; until
they are stable enough to merge.&lt;/p&gt;
&lt;p&gt;If you are new to GLFW, you may find the
&lt;a href="http://www.glfw.org/docs/latest/quick.html" rel="nofollow"&gt;tutorial&lt;/a&gt; for GLFW 3 useful.  If
you have used GLFW 2 in the past, there is a &lt;a href="http://www.glfw.org/docs/latest/moving.html" rel="nofollow"&gt;transition
guide&lt;/a&gt; for moving to the GLFW
3 API.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-glfw" class="anchor" aria-hidden="true" href="#compiling-glfw"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling GLFW&lt;/h2&gt;
&lt;p&gt;GLFW itself requires only the headers and libraries for your OS and window
system.  It does not need the headers for any context creation API (WGL, GLX,
EGL, NSGL, OSMesa) or rendering API (OpenGL, OpenGL ES, Vulkan) to enable
support for them.&lt;/p&gt;
&lt;p&gt;GLFW supports compilation on Windows with Visual C++ 2010 and later, MinGW and
MinGW-w64, on macOS with Clang and on Linux and other Unix-like systems with GCC
and Clang.  It will likely compile in other environments as well, but this is
not regularly tested.&lt;/p&gt;
&lt;p&gt;There are &lt;a href="http://www.glfw.org/download.html" rel="nofollow"&gt;pre-compiled Windows binaries&lt;/a&gt;
available for all supported compilers.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="http://www.glfw.org/docs/latest/compile.html" rel="nofollow"&gt;compilation guide&lt;/a&gt; for
more information about how to compile GLFW yourself.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-glfw" class="anchor" aria-hidden="true" href="#using-glfw"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using GLFW&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="http://www.glfw.org/docs/latest/" rel="nofollow"&gt;documentation&lt;/a&gt; for tutorials, guides
and the API reference.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-glfw" class="anchor" aria-hidden="true" href="#contributing-to-glfw"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to GLFW&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/glfw/glfw/blob/master/docs/CONTRIBUTING.md"&gt;contribution
guide&lt;/a&gt; for
more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System requirements&lt;/h2&gt;
&lt;p&gt;GLFW supports Windows XP and later and macOS 10.8 and later.  Linux and other
Unix-like systems running the X Window System are supported even without
a desktop environment or modern extensions, although some features require
a running window or clipboard manager.  The OSMesa backend requires Mesa 6.3.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="http://www.glfw.org/docs/latest/compat.html" rel="nofollow"&gt;compatibility guide&lt;/a&gt;
in the documentation for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;GLFW itself depends only on the headers and libraries for your window system.&lt;/p&gt;
&lt;p&gt;The (experimental) Wayland backend also depends on the &lt;code&gt;extra-cmake-modules&lt;/code&gt;
package, which is used to generated Wayland protocol headers.&lt;/p&gt;
&lt;p&gt;The examples and test programs depend on a number of tiny libraries.  These are
located in the &lt;code&gt;deps/&lt;/code&gt; directory.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kimgr/getopt_port/"&gt;getopt_port&lt;/a&gt; for examples
with command-line options&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tinycthread/tinycthread"&gt;TinyCThread&lt;/a&gt; for threaded
examples&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Dav1dde/glad"&gt;glad2&lt;/a&gt; for loading OpenGL and Vulkan
functions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/datenwolf/linmath.h"&gt;linmath.h&lt;/a&gt; for linear algebra in
examples&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vurtun/nuklear"&gt;Nuklear&lt;/a&gt; for test and example UI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nothings/stb"&gt;stb_image_write&lt;/a&gt; for writing images to disk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The documentation is generated with &lt;a href="http://doxygen.org/" rel="nofollow"&gt;Doxygen&lt;/a&gt; if CMake can
find that tool.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting bugs&lt;/h2&gt;
&lt;p&gt;Bugs are reported to our &lt;a href="https://github.com/glfw/glfw/issues"&gt;issue tracker&lt;/a&gt;.
Please check the &lt;a href="https://github.com/glfw/glfw/blob/master/docs/CONTRIBUTING.md"&gt;contribution
guide&lt;/a&gt; for
information on what to include when reporting a bug.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Added &lt;code&gt;GLFW_RESIZE_NWSE_CURSOR&lt;/code&gt;, &lt;code&gt;GLFW_RESIZE_NESW_CURSOR&lt;/code&gt;,
&lt;code&gt;GLFW_RESIZE_ALL_CURSOR&lt;/code&gt; and &lt;code&gt;GLFW_NOT_ALLOWED_CURSOR&lt;/code&gt; cursor shapes (#427)&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;GLFW_RESIZE_EW_CURSOR&lt;/code&gt; alias for &lt;code&gt;GLFW_HRESIZE_CURSOR&lt;/code&gt; (#427)&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;GLFW_RESIZE_NS_CURSOR&lt;/code&gt; alias for &lt;code&gt;GLFW_VRESIZE_CURSOR&lt;/code&gt; (#427)&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;GLFW_POINTING_HAND_CURSOR&lt;/code&gt; alias for &lt;code&gt;GLFW_HAND_CURSOR&lt;/code&gt; (#427)&lt;/li&gt;
&lt;li&gt;Disabled tests and examples by default when built as a CMake subdirectory&lt;/li&gt;
&lt;li&gt;Bugfix: The CMake config-file package used an absolute path and was not
relocatable (#1470)&lt;/li&gt;
&lt;li&gt;Bugfix: Video modes with a duplicate screen area were discarded (#1555,#1556)&lt;/li&gt;
&lt;li&gt;Bugfix: Compiling with -Wextra-semi caused warnings (#1440)&lt;/li&gt;
&lt;li&gt;[Win32] Added the &lt;code&gt;GLFW_WIN32_KEYBOARD_MENU&lt;/code&gt; window hint for enabling access
to the window menu&lt;/li&gt;
&lt;li&gt;[Win32] Bugfix: &lt;code&gt;GLFW_INCLUDE_VULKAN&lt;/code&gt; plus &lt;code&gt;VK_USE_PLATFORM_WIN32_KHR&lt;/code&gt; caused
symbol redefinition (#1524)&lt;/li&gt;
&lt;li&gt;[Win32] Bugfix: The cursor position event was emitted before its cursor enter
event (#1490)&lt;/li&gt;
&lt;li&gt;[Win32] Bugfix: The window hint &lt;code&gt;GLFW_MAXIMIZED&lt;/code&gt; did not move or resize the
window (#1499)&lt;/li&gt;
&lt;li&gt;[Cocoa] Bugfix: &lt;code&gt;glfwSetWindowSize&lt;/code&gt; used a bottom-left anchor point (#1553)&lt;/li&gt;
&lt;li&gt;[Cocoa] Bugfix: Window remained on screen after destruction until event poll
(#1412)&lt;/li&gt;
&lt;li&gt;[X11] Bugfix: The CMake files did not check for the XInput headers (#1480)&lt;/li&gt;
&lt;li&gt;[X11] Bugfix: Key names were not updated when the keyboard layout changed
(#1462,#1528)&lt;/li&gt;
&lt;li&gt;[X11] Bugfix: Decorations could not be enabled after window creation (#1566)&lt;/li&gt;
&lt;li&gt;[X11] Bugfix: Content scale fallback value could be inconsistent (#1578)&lt;/li&gt;
&lt;li&gt;[Wayland] Bugfix: The &lt;code&gt;GLFW_HAND_CURSOR&lt;/code&gt; shape used the wrong image (#1432)&lt;/li&gt;
&lt;li&gt;[NSGL] Removed enforcement of forward-compatible flag for core contexts&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;On &lt;a href="http://www.glfw.org/" rel="nofollow"&gt;glfw.org&lt;/a&gt; you can find the latest version of GLFW, as
well as news, documentation and other information about the project.&lt;/p&gt;
&lt;p&gt;If you have questions related to the use of GLFW, we have a
&lt;a href="https://discourse.glfw.org/" rel="nofollow"&gt;forum&lt;/a&gt;, and the &lt;code&gt;#glfw&lt;/code&gt; IRC channel on
&lt;a href="http://freenode.net/" rel="nofollow"&gt;Freenode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have a bug to report, a patch to submit or a feature you'd like to
request, please file it in the
&lt;a href="https://github.com/glfw/glfw/issues"&gt;issue tracker&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;p&gt;Finally, if you're interested in helping out with the development of GLFW or
porting it to your favorite platform, join us on the forum, GitHub or IRC.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;GLFW exists because people around the world donated their time and lent their
skills.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bobyshev Alexander&lt;/li&gt;
&lt;li&gt;Matt Arsenault&lt;/li&gt;
&lt;li&gt;David Avedissian&lt;/li&gt;
&lt;li&gt;Keith Bauer&lt;/li&gt;
&lt;li&gt;John Bartholomew&lt;/li&gt;
&lt;li&gt;Coşku Baş&lt;/li&gt;
&lt;li&gt;Niklas Behrens&lt;/li&gt;
&lt;li&gt;Andrew Belt&lt;/li&gt;
&lt;li&gt;Niklas Bergström&lt;/li&gt;
&lt;li&gt;Denis Bernard&lt;/li&gt;
&lt;li&gt;Doug Binks&lt;/li&gt;
&lt;li&gt;blanco&lt;/li&gt;
&lt;li&gt;Kyle Brenneman&lt;/li&gt;
&lt;li&gt;Rok Breulj&lt;/li&gt;
&lt;li&gt;Kai Burjack&lt;/li&gt;
&lt;li&gt;Martin Capitanio&lt;/li&gt;
&lt;li&gt;David Carlier&lt;/li&gt;
&lt;li&gt;Arturo Castro&lt;/li&gt;
&lt;li&gt;Chi-kwan Chan&lt;/li&gt;
&lt;li&gt;Ian Clarkson&lt;/li&gt;
&lt;li&gt;Michał Cichoń&lt;/li&gt;
&lt;li&gt;Lambert Clara&lt;/li&gt;
&lt;li&gt;Anna Clarke&lt;/li&gt;
&lt;li&gt;Yaron Cohen-Tal&lt;/li&gt;
&lt;li&gt;Omar Cornut&lt;/li&gt;
&lt;li&gt;Andrew Corrigan&lt;/li&gt;
&lt;li&gt;Bailey Cosier&lt;/li&gt;
&lt;li&gt;Noel Cower&lt;/li&gt;
&lt;li&gt;Jason Daly&lt;/li&gt;
&lt;li&gt;Jarrod Davis&lt;/li&gt;
&lt;li&gt;Olivier Delannoy&lt;/li&gt;
&lt;li&gt;Paul R. Deppe&lt;/li&gt;
&lt;li&gt;Michael Dickens&lt;/li&gt;
&lt;li&gt;Роман Донченко&lt;/li&gt;
&lt;li&gt;Mario Dorn&lt;/li&gt;
&lt;li&gt;Wolfgang Draxinger&lt;/li&gt;
&lt;li&gt;Jonathan Dummer&lt;/li&gt;
&lt;li&gt;Ralph Eastwood&lt;/li&gt;
&lt;li&gt;Fredrik Ehnbom&lt;/li&gt;
&lt;li&gt;Robin Eklind&lt;/li&gt;
&lt;li&gt;Siavash Eliasi&lt;/li&gt;
&lt;li&gt;Felipe Ferreira&lt;/li&gt;
&lt;li&gt;Michael Fogleman&lt;/li&gt;
&lt;li&gt;Gerald Franz&lt;/li&gt;
&lt;li&gt;Mário Freitas&lt;/li&gt;
&lt;li&gt;GeO4d&lt;/li&gt;
&lt;li&gt;Marcus Geelnard&lt;/li&gt;
&lt;li&gt;Charles Giessen&lt;/li&gt;
&lt;li&gt;Stephen Gowen&lt;/li&gt;
&lt;li&gt;Kovid Goyal&lt;/li&gt;
&lt;li&gt;Eloi Marín Gratacós&lt;/li&gt;
&lt;li&gt;Stefan Gustavson&lt;/li&gt;
&lt;li&gt;Jonathan Hale&lt;/li&gt;
&lt;li&gt;Sylvain Hellegouarch&lt;/li&gt;
&lt;li&gt;Matthew Henry&lt;/li&gt;
&lt;li&gt;heromyth&lt;/li&gt;
&lt;li&gt;Lucas Hinderberger&lt;/li&gt;
&lt;li&gt;Paul Holden&lt;/li&gt;
&lt;li&gt;Warren Hu&lt;/li&gt;
&lt;li&gt;Charles Huber&lt;/li&gt;
&lt;li&gt;IntellectualKitty&lt;/li&gt;
&lt;li&gt;Aaron Jacobs&lt;/li&gt;
&lt;li&gt;Erik S. V. Jansson&lt;/li&gt;
&lt;li&gt;Toni Jovanoski&lt;/li&gt;
&lt;li&gt;Arseny Kapoulkine&lt;/li&gt;
&lt;li&gt;Cem Karan&lt;/li&gt;
&lt;li&gt;Osman Keskin&lt;/li&gt;
&lt;li&gt;Josh Kilmer&lt;/li&gt;
&lt;li&gt;Cameron King&lt;/li&gt;
&lt;li&gt;Peter Knut&lt;/li&gt;
&lt;li&gt;Christoph Kubisch&lt;/li&gt;
&lt;li&gt;Yuri Kunde Schlesner&lt;/li&gt;
&lt;li&gt;Rokas Kupstys&lt;/li&gt;
&lt;li&gt;Konstantin Käfer&lt;/li&gt;
&lt;li&gt;Eric Larson&lt;/li&gt;
&lt;li&gt;Robin Leffmann&lt;/li&gt;
&lt;li&gt;Glenn Lewis&lt;/li&gt;
&lt;li&gt;Shane Liesegang&lt;/li&gt;
&lt;li&gt;Anders Lindqvist&lt;/li&gt;
&lt;li&gt;Leon Linhart&lt;/li&gt;
&lt;li&gt;Eyal Lotem&lt;/li&gt;
&lt;li&gt;Aaron Loucks&lt;/li&gt;
&lt;li&gt;Luflosi&lt;/li&gt;
&lt;li&gt;Tristam MacDonald&lt;/li&gt;
&lt;li&gt;Hans Mackowiak&lt;/li&gt;
&lt;li&gt;Дмитри Малышев&lt;/li&gt;
&lt;li&gt;Zbigniew Mandziejewicz&lt;/li&gt;
&lt;li&gt;Adam Marcus&lt;/li&gt;
&lt;li&gt;Célestin Marot&lt;/li&gt;
&lt;li&gt;Kyle McDonald&lt;/li&gt;
&lt;li&gt;David Medlock&lt;/li&gt;
&lt;li&gt;Bryce Mehring&lt;/li&gt;
&lt;li&gt;Jonathan Mercier&lt;/li&gt;
&lt;li&gt;Marcel Metz&lt;/li&gt;
&lt;li&gt;Liam Middlebrook&lt;/li&gt;
&lt;li&gt;Ave Milia&lt;/li&gt;
&lt;li&gt;Jonathan Miller&lt;/li&gt;
&lt;li&gt;Kenneth Miller&lt;/li&gt;
&lt;li&gt;Bruce Mitchener&lt;/li&gt;
&lt;li&gt;Jack Moffitt&lt;/li&gt;
&lt;li&gt;Jeff Molofee&lt;/li&gt;
&lt;li&gt;Alexander Monakov&lt;/li&gt;
&lt;li&gt;Pierre Morel&lt;/li&gt;
&lt;li&gt;Jon Morton&lt;/li&gt;
&lt;li&gt;Pierre Moulon&lt;/li&gt;
&lt;li&gt;Martins Mozeiko&lt;/li&gt;
&lt;li&gt;Julian Møller&lt;/li&gt;
&lt;li&gt;ndogxj&lt;/li&gt;
&lt;li&gt;Kristian Nielsen&lt;/li&gt;
&lt;li&gt;Kamil Nowakowski&lt;/li&gt;
&lt;li&gt;Denis Ovod&lt;/li&gt;
&lt;li&gt;Ozzy&lt;/li&gt;
&lt;li&gt;Andri Pálsson&lt;/li&gt;
&lt;li&gt;Peoro&lt;/li&gt;
&lt;li&gt;Braden Pellett&lt;/li&gt;
&lt;li&gt;Christopher Pelloux&lt;/li&gt;
&lt;li&gt;Arturo J. Pérez&lt;/li&gt;
&lt;li&gt;Anthony Pesch&lt;/li&gt;
&lt;li&gt;Orson Peters&lt;/li&gt;
&lt;li&gt;Emmanuel Gil Peyrot&lt;/li&gt;
&lt;li&gt;Cyril Pichard&lt;/li&gt;
&lt;li&gt;Keith Pitt&lt;/li&gt;
&lt;li&gt;Stanislav Podgorskiy&lt;/li&gt;
&lt;li&gt;Konstantin Podsvirov&lt;/li&gt;
&lt;li&gt;Nathan Poirier&lt;/li&gt;
&lt;li&gt;Alexandre Pretyman&lt;/li&gt;
&lt;li&gt;Pablo Prietz&lt;/li&gt;
&lt;li&gt;przemekmirek&lt;/li&gt;
&lt;li&gt;Guillaume Racicot&lt;/li&gt;
&lt;li&gt;Philip Rideout&lt;/li&gt;
&lt;li&gt;Eddie Ringle&lt;/li&gt;
&lt;li&gt;Max Risuhin&lt;/li&gt;
&lt;li&gt;Jorge Rodriguez&lt;/li&gt;
&lt;li&gt;Ed Ropple&lt;/li&gt;
&lt;li&gt;Aleksey Rybalkin&lt;/li&gt;
&lt;li&gt;Riku Salminen&lt;/li&gt;
&lt;li&gt;Brandon Schaefer&lt;/li&gt;
&lt;li&gt;Sebastian Schuberth&lt;/li&gt;
&lt;li&gt;Christian Sdunek&lt;/li&gt;
&lt;li&gt;Matt Sealey&lt;/li&gt;
&lt;li&gt;Steve Sexton&lt;/li&gt;
&lt;li&gt;Arkady Shapkin&lt;/li&gt;
&lt;li&gt;Yoshiki Shibukawa&lt;/li&gt;
&lt;li&gt;Dmitri Shuralyov&lt;/li&gt;
&lt;li&gt;Daniel Skorupski&lt;/li&gt;
&lt;li&gt;Bradley Smith&lt;/li&gt;
&lt;li&gt;Cliff Smolinsky&lt;/li&gt;
&lt;li&gt;Patrick Snape&lt;/li&gt;
&lt;li&gt;Erlend Sogge Heggen&lt;/li&gt;
&lt;li&gt;Julian Squires&lt;/li&gt;
&lt;li&gt;Johannes Stein&lt;/li&gt;
&lt;li&gt;Pontus Stenetorp&lt;/li&gt;
&lt;li&gt;Michael Stocker&lt;/li&gt;
&lt;li&gt;Justin Stoecker&lt;/li&gt;
&lt;li&gt;Elviss Strazdins&lt;/li&gt;
&lt;li&gt;Paul Sultana&lt;/li&gt;
&lt;li&gt;Nathan Sweet&lt;/li&gt;
&lt;li&gt;TTK-Bandit&lt;/li&gt;
&lt;li&gt;Sergey Tikhomirov&lt;/li&gt;
&lt;li&gt;Arthur Tombs&lt;/li&gt;
&lt;li&gt;Ioannis Tsakpinis&lt;/li&gt;
&lt;li&gt;Samuli Tuomola&lt;/li&gt;
&lt;li&gt;Matthew Turner&lt;/li&gt;
&lt;li&gt;urraka&lt;/li&gt;
&lt;li&gt;Elias Vanderstuyft&lt;/li&gt;
&lt;li&gt;Stef Velzel&lt;/li&gt;
&lt;li&gt;Jari Vetoniemi&lt;/li&gt;
&lt;li&gt;Ricardo Vieira&lt;/li&gt;
&lt;li&gt;Nicholas Vitovitch&lt;/li&gt;
&lt;li&gt;Simon Voordouw&lt;/li&gt;
&lt;li&gt;Corentin Wallez&lt;/li&gt;
&lt;li&gt;Torsten Walluhn&lt;/li&gt;
&lt;li&gt;Patrick Walton&lt;/li&gt;
&lt;li&gt;Xo Wang&lt;/li&gt;
&lt;li&gt;Jay Weisskopf&lt;/li&gt;
&lt;li&gt;Frank Wille&lt;/li&gt;
&lt;li&gt;Ryogo Yoshimura&lt;/li&gt;
&lt;li&gt;Lukas Zanner&lt;/li&gt;
&lt;li&gt;Andrey Zholos&lt;/li&gt;
&lt;li&gt;Santi Zupancic&lt;/li&gt;
&lt;li&gt;Jonas Ådahl&lt;/li&gt;
&lt;li&gt;Lasse Öörni&lt;/li&gt;
&lt;li&gt;All the unmentioned and anonymous contributors in the GLFW community, for bug
reports, patches, feedback, testing and encouragement&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>glfw</author><guid isPermaLink="false">https://github.com/glfw/glfw</guid><pubDate>Mon, 09 Dec 2019 00:17:00 GMT</pubDate></item><item><title>pbatard/rufus #18 in C, Today</title><link>https://github.com/pbatard/rufus</link><description>&lt;p&gt;&lt;i&gt;The Reliable USB Formatting Utility&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rufus-the-reliable-usb-formatting-utility" class="anchor" aria-hidden="true" href="#rufus-the-reliable-usb-formatting-utility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rufus: The Reliable USB Formatting Utility&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/pbatard/rufus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd6839fdcc72a78b6a78736df1c7c89a83920c9a/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f706261746172642f72756675732e7376673f7374796c653d666c61742d737175617265" alt="Build status" data-canonical-src="https://img.shields.io/appveyor/ci/pbatard/rufus.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/pbatard-rufus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e5f192b3dc1bf9681a99a7b794c11dedc3b7226/68747470733a2f2f696d672e736869656c64732e696f2f636f7665726974792f7363616e2f323137322e7376673f7374796c653d666c61742d737175617265" alt="Coverity Scan Build Status" data-canonical-src="https://img.shields.io/coverity/scan/2172.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pbatard/rufus/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/9821ada5dca645aa26f1790aa3280c2d0a5b5af0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f706261746172642f72756675732e7376673f7374796c653d666c61742d737175617265" alt="Build contributors" data-canonical-src="https://img.shields.io/github/contributors/pbatard/rufus.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pbatard/rufus/releases"&gt;&lt;img src="https://camo.githubusercontent.com/b0a02966fffd6526a7152d28f78cdc8a2a1fe97f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d7072652f706261746172642f72756675732e7376673f7374796c653d666c61742d737175617265" alt="Release" data-canonical-src="https://img.shields.io/github/release-pre/pbatard/rufus.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/096c6e8c9684d3ec667b409d141d03dfb2193792/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c76332d626c75652e7376673f7374796c653d666c61742d737175617265" alt="Licence" data-canonical-src="https://img.shields.io/badge/license-GPLv3-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/pbatard/rufus/master/res/icons/rufus-128.png"&gt;&lt;img src="https://raw.githubusercontent.com/pbatard/rufus/master/res/icons/rufus-128.png" alt="Rufus logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rufus is a utility that helps format and create bootable USB flash drives.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Format USB, flash card and virtual drives to FAT/FAT32/NTFS/UDF/exFAT/ReFS/ext2/ext3&lt;/li&gt;
&lt;li&gt;Create DOS bootable USB drives, using &lt;a href="https://www.freedos.org" rel="nofollow"&gt;FreeDOS&lt;/a&gt; or MS-DOS (Windows 8.1 or earlier)&lt;/li&gt;
&lt;li&gt;Create BIOS or UEFI bootable drives, including &lt;a href="https://github.com/pbatard/uefi-ntfs"&gt;UEFI bootable NTFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create bootable drives from bootable ISOs (Windows, Linux, etc.)&lt;/li&gt;
&lt;li&gt;Create bootable drives from bootable disk images, including compressed ones&lt;/li&gt;
&lt;li&gt;Create &lt;a href="https://en.wikipedia.org/wiki/Windows_To_Go" rel="nofollow"&gt;Windows To Go&lt;/a&gt; drives&lt;/li&gt;
&lt;li&gt;Create persistent Linux partitions&lt;/li&gt;
&lt;li&gt;Download official Microsoft Windows 8 or Windows 10 retail ISOs&lt;/li&gt;
&lt;li&gt;Compute MD5, SHA-1 and SHA-256 checksums of the selected image&lt;/li&gt;
&lt;li&gt;Twice as fast as Microsoft's USB/DVD tool or UNetbootin, on ISO -&amp;gt; USB creation &lt;sup&gt;(1)&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Perform bad blocks checks, including detection of "fake" flash drives&lt;/li&gt;
&lt;li&gt;Modern and familiar UI, with &lt;a href="https://github.com/pbatard/rufus/wiki/FAQ#What_languages_are_natively_supported_by_Rufus"&gt;38 languages natively supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Small footprint. No installation required.&lt;/li&gt;
&lt;li&gt;Portable&lt;/li&gt;
&lt;li&gt;100% &lt;a href="https://www.gnu.org/philosophy/free-sw" rel="nofollow"&gt;Free Software&lt;/a&gt; (&lt;a href="https://www.gnu.org/licenses/gpl-3.0" rel="nofollow"&gt;GPL v3&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-compilation" class="anchor" aria-hidden="true" href="#compilation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compilation&lt;/h2&gt;
&lt;p&gt;Use either Visual Studio 2019 (version 16.0 or later with SDK 10.0.18362 installed) or MinGW and
then invoke the &lt;code&gt;.sln&lt;/code&gt; or &lt;code&gt;configure&lt;/code&gt;/&lt;code&gt;make&lt;/code&gt; respectively.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-visual-studio" class="anchor" aria-hidden="true" href="#visual-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Studio&lt;/h4&gt;
&lt;p&gt;Rufus is an OSI compliant Open Source project. You are entitled to
download and use the &lt;em&gt;freely available&lt;/em&gt; &lt;a href="https://www.visualstudio.com/vs/community/" rel="nofollow"&gt;Visual Studio Community Edition&lt;/a&gt;
to build, run or develop for Rufus. As per the Visual Studio Community Edition license,
this applies regardless of whether you are an individual or a corporate user.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-information" class="anchor" aria-hidden="true" href="#additional-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional information&lt;/h2&gt;
&lt;p&gt;Rufus provides extensive information about what it is doing, either through its
easily accessible log, or through the &lt;a href="https://docs.microsoft.com/en-us/sysinternals/downloads/debugview" rel="nofollow"&gt;Windows debug facility&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rufus.ie" rel="nofollow"&gt;&lt;strong&gt;Official Website&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pbatard/rufus/wiki/FAQ"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-enhancementsbugs" class="anchor" aria-hidden="true" href="#enhancementsbugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enhancements/Bugs&lt;/h2&gt;
&lt;p&gt;Please use the &lt;a href="https://github.com/pbatard/rufus/issues"&gt;GitHub issue tracker&lt;/a&gt;
for reporting problems or suggesting new features.&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;(1)&lt;/sup&gt; Tests carried out with a 16 GB USB 3.0 ADATA pen drive on a Core 2 duo/4 GB RAM platform running Windows 7 x64.
ISO: &lt;code&gt;en_windows_7_ultimate_with_sp1_x64_dvd_618240.iso&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name of tool&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Time&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.microsoft.com/en-us/download/windows-usb-dvd-download-tool" rel="nofollow"&gt;Windows USB/DVD Download Tool&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;v1.0.30&lt;/td&gt;
&lt;td&gt;8 mins 10s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://unetbootin.github.io" rel="nofollow"&gt;UNetbootin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;v1.1.1.1&lt;/td&gt;
&lt;td&gt;6 mins 20s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Rufus&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;v1.1.0&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;3 mins 25s&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pbatard</author><guid isPermaLink="false">https://github.com/pbatard/rufus</guid><pubDate>Mon, 09 Dec 2019 00:18:00 GMT</pubDate></item><item><title>cesanta/mongoose #19 in C, Today</title><link>https://github.com/cesanta/mongoose</link><description>&lt;p&gt;&lt;i&gt;Mongoose Embedded Web Server Library - Mongoose is more than an embedded webserver. It is a multi-protocol embedded networking library with functions including TCP, HTTP client and server, WebSocket client and server,  MQTT client and broker and much more.  &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mongoose---embedded-web-server--embedded-networking-library" class="anchor" aria-hidden="true" href="#mongoose---embedded-web-server--embedded-networking-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mongoose - Embedded Web Server / Embedded Networking Library&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3a820112c4e6c1629904ae08acebe62a1f638cf2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c5f322d677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/3a820112c4e6c1629904ae08acebe62a1f638cf2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c5f322d677265656e2e737667" alt="" title="License" data-canonical-src="https://img.shields.io/badge/license-GPL_2-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mongoose is ideal for embedded environments. It has been designed
for connecting devices and bringing them online. On the market since 2004,
used by vast number of open source and
commercial products - it even runs on the International Space station!
Mongoose makes embedded network programming fast, robust, and easy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cesanta.com/download.html" rel="nofollow"&gt;Download Mongoose Source Code here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Looking for a complete IoT firmware solution?&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://mongoose-os.com" rel="nofollow"&gt;Mongoose OS&lt;/a&gt; - open source embedded operating system for low-power connected microcontrollers. Secure, designed for Internet of Things, complete environment for prototyping, development and managing.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cesanta/mongoose/tree/master/examples"&gt;Study mongoose example code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cesanta.com/docs/overview/intro.html" rel="nofollow"&gt;Read User Guide and API reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://community.mongoose-os.com/" rel="nofollow"&gt;Support Forum - ask your technical questions here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cesanta.com/licensing.html" rel="nofollow"&gt;Commercial licensing and support available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cesanta/mongoose/releases"&gt;Check our latest releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Cross-platform: works on Linux/UNIX, MacOS, QNX, eCos, Windows, Android,
iPhone, FreeRTOS (TI CC3200, ESP8266), etc&lt;/li&gt;
&lt;li&gt;Supported hardware platforms: TI CC3200, TI MSP432, NRF52, STM32, PIC32, ESP8266, ESP32 and more&lt;/li&gt;
&lt;li&gt;Builtin protocols:
&lt;ul&gt;
&lt;li&gt;plain TCP, plain UDP, SSL/TLS (over TCP, one-way or two-way)&lt;/li&gt;
&lt;li&gt;HTTP client, HTTP server&lt;/li&gt;
&lt;li&gt;WebSocket client, WebSocket server&lt;/li&gt;
&lt;li&gt;MQTT client, MQTT broker&lt;/li&gt;
&lt;li&gt;CoAP client, CoAP server&lt;/li&gt;
&lt;li&gt;DNS client, DNS server, async DNS resolver&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Single-threaded, asynchronous, non-blocking core with simple event-based API&lt;/li&gt;
&lt;li&gt;Native support for &lt;a href="http://www.picotcp.com" rel="nofollow"&gt;PicoTCP embedded TCP/IP stack&lt;/a&gt;,
&lt;a href="https://en.wikipedia.org/wiki/LwIP" rel="nofollow"&gt;LWIP embedded TCP/IP stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tiny static and run-time footprint&lt;/li&gt;
&lt;li&gt;Source code is both ISO C and ISO C++ compliant&lt;/li&gt;
&lt;li&gt;Very easy to integrate: just copy
&lt;a href="https://raw.githubusercontent.com/cesanta/mongoose/master/mongoose.c" rel="nofollow"&gt;mongoose.c&lt;/a&gt; and
&lt;a href="https://raw.githubusercontent.com/cesanta/mongoose/master/mongoose.h" rel="nofollow"&gt;mongoose.h&lt;/a&gt;
files to your build tree&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h1&gt;
&lt;p&gt;Mongoose is released under Commercial and &lt;a href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html" rel="nofollow"&gt;GNU GPL v.2&lt;/a&gt; open source licenses.&lt;/p&gt;
&lt;p&gt;Commercial Projects: &lt;a href="https://www.cesanta.com/contact.html" rel="nofollow"&gt;Contact us for commercial license.&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-dashboard-example" class="anchor" aria-hidden="true" href="#dashboard-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dashboard Example&lt;/h1&gt;
&lt;p&gt;Mongoose is often used to implement device dashboards and real-time
data exchange over Websocket. Here is a dashboard example that illustrates
the functionality:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a2690a3ad06c94897c5a5a12e6d6d73d1e39de34/687474703a2f2f7777772e636573616e74612e636f6d2f696d616765732f64617368626f6172642e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a2690a3ad06c94897c5a5a12e6d6d73d1e39de34/687474703a2f2f7777772e636573616e74612e636f6d2f696d616765732f64617368626f6172642e706e67" alt="" data-canonical-src="http://www.cesanta.com/images/dashboard.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cesanta.com/contact.html" rel="nofollow"&gt;Developing a new product? Contact us today to discuss how Mongoose can help.&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;p&gt;To submit contributions, sign &lt;a href="https://cesanta.com/cla.html" rel="nofollow"&gt;Cesanta CLA&lt;/a&gt;
and send GitHub pull request.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-looking-for-a-pre-compiled-mongoose-web-server-windows-or-mac-binary" class="anchor" aria-hidden="true" href="#looking-for-a-pre-compiled-mongoose-web-server-windows-or-mac-binary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Looking for a pre-compiled Mongoose web server Windows or Mac binary?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cesanta.com/binary.html" rel="nofollow"&gt;Download pre-compiled Mongoose web server binary.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cesanta</author><guid isPermaLink="false">https://github.com/cesanta/mongoose</guid><pubDate>Mon, 09 Dec 2019 00:19:00 GMT</pubDate></item><item><title>olikraus/u8g2 #20 in C, Today</title><link>https://github.com/olikraus/u8g2</link><description>&lt;p&gt;&lt;i&gt;U8glib library for monochrome displays, version 2 &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/olikraus/u8g2/ref/u8g2_logo_transparent_orange.png"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/olikraus/u8g2/ref/u8g2_logo_transparent_orange.png" alt="https://raw.githubusercontent.com/wiki/olikraus/u8g2/ref/u8g2_logo_transparent_orange.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;U8g2: Library for monochrome displays, version 2&lt;/p&gt;
&lt;p&gt;U8g2 is a monochrome graphics library for embedded devices.
U8g2 supports monochrome OLEDs and LCDs, which include the following controllers:
SSD1305, SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SSD1329, SSD1606, SSD1607,
SH1106, SH1107, SH1108, SH1122, T6963, RA8835, LC7981, PCD8544, PCF8812, HX1230,
UC1601, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7567, ST7588, ST75256, NT7534, IST3020, ST7920, LD7032, KS0108, SED1520, SBN1661, IL3820, MAX7219
(see &lt;a href="https://github.com/olikraus/u8g2/wiki/u8g2setupcpp"&gt;here&lt;/a&gt; for a full list).&lt;/p&gt;
&lt;p&gt;The Arduino library U8g2 can be installed from the library manager of the Arduino IDE. U8g2 also includes U8x8 library:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;U8g2
&lt;ul&gt;
&lt;li&gt;Includes all graphics procedures (line/box/circle draw).&lt;/li&gt;
&lt;li&gt;Supports many fonts. (Almost) no restriction on the font height.&lt;/li&gt;
&lt;li&gt;Requires some memory in the microcontroller to render the display.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;U8x8
&lt;ul&gt;
&lt;li&gt;Text output only (character) device.&lt;/li&gt;
&lt;li&gt;Only fonts allowed with fit into a 8x8 pixel grid.&lt;/li&gt;
&lt;li&gt;Writes directly to the display. No buffer in the microcontroller required.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/olikraus/u8g2/wiki"&gt;Setup Guide and Reference Manual&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>olikraus</author><guid isPermaLink="false">https://github.com/olikraus/u8g2</guid><pubDate>Mon, 09 Dec 2019 00:20:00 GMT</pubDate></item><item><title>openwrt/openwrt #21 in C, Today</title><link>https://github.com/openwrt/openwrt</link><description>&lt;p&gt;&lt;i&gt;This repository is a mirror of https://git.openwrt.org/openwrt/openwrt.git It is for reference only and is not active for check-ins or for reporting issues.  We will continue to accept Pull Requests here. They will be merged via staging trees then into openwrt.git. All issues should be reported at: https://bugs.openwrt.org&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;  _______                     ________        __
 |       |.-----.-----.-----.|  |  |  |.----.|  |_
 |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|
 |_______||   __|_____|__|__||________||__|  |____|
          |__| W I R E L E S S   F R E E D O M
 -----------------------------------------------------

This is the buildsystem for the OpenWrt Linux distribution.

To build your own firmware you need a Linux, BSD or MacOSX system (case
sensitive filesystem required). Cygwin is unsupported because of the lack
of a case sensitive file system.

You need gcc, binutils, bzip2, flex, python3.5+, perl, make, find, grep, diff,
unzip, gawk, getopt, subversion, libz-dev and libc headers installed.

1. Run "./scripts/feeds update -a" to obtain all the latest package definitions
defined in feeds.conf / feeds.conf.default

2. Run "./scripts/feeds install -a" to install symlinks for all obtained
packages into package/feeds/

3. Run "make menuconfig" to select your preferred configuration for the
toolchain, target system &amp;amp; firmware packages.

4. Run "make" to build your firmware. This will download all sources, build
the cross-compile toolchain and then cross-compile the Linux kernel &amp;amp; all
chosen applications for your target system.

Sunshine!
	Your OpenWrt Community
	&lt;a href="http://www.openwrt.org" rel="nofollow"&gt;http://www.openwrt.org&lt;/a&gt;


&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>openwrt</author><guid isPermaLink="false">https://github.com/openwrt/openwrt</guid><pubDate>Mon, 09 Dec 2019 00:21:00 GMT</pubDate></item><item><title>Airblader/i3 #22 in C, Today</title><link>https://github.com/Airblader/i3</link><description>&lt;p&gt;&lt;i&gt;i3-gaps – i3 with more features (forked from https://github.com/i3/i3)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/Airblader/i3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/515c75e1d70ced3aa0339107630c28af99e27cd6/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f416972626c616465722f69332e737667" alt="Travis" data-canonical-src="https://img.shields.io/travis/Airblader/i3.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Airblader/i3/issues"&gt;&lt;img src="https://camo.githubusercontent.com/6eed55a86db895859ccbeb8af842387c7dbc88f5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f416972626c616465722f69332e737667" alt="Issues" data-canonical-src="https://img.shields.io/github/issues/Airblader/i3.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Airblader/i3/network"&gt;&lt;img src="https://camo.githubusercontent.com/5cc2ceaa0c18efcf053d2143753d13b285650cf9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f416972626c616465722f69332e737667" alt="Forks" data-canonical-src="https://img.shields.io/github/forks/Airblader/i3.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Airblader/i3/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/f2817c3cb2594f577095ea88f6cfc0f313c1ad46/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f416972626c616465722f69332e737667" alt="Stars" data-canonical-src="https://img.shields.io/github/stars/Airblader/i3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-i3-gaps" class="anchor" aria-hidden="true" href="#i3-gaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;i3-gaps&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-i3-gaps" class="anchor" aria-hidden="true" href="#what-is-i3-gaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is i3-gaps?&lt;/h2&gt;
&lt;p&gt;i3-gaps is a fork of &lt;a href="https://www.i3wm.org" rel="nofollow"&gt;i3wm&lt;/a&gt;, a tiling window manager for X11. It is kept up to date with upstream, adding a few additional features such as gaps between windows (see below for a complete list).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7da062cb011d81a3551cd34ee2d33886ee6b2e06/687474703a2f2f692e696d6775722e636f6d2f7938735a45366f2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/7da062cb011d81a3551cd34ee2d33886ee6b2e06/687474703a2f2f692e696d6775722e636f6d2f7938735a45366f2e6a7067" alt="i3" data-canonical-src="http://i.imgur.com/y8sZE6o.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-do-i-install-i3-gaps" class="anchor" aria-hidden="true" href="#how-do-i-install-i3-gaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I install i3-gaps?&lt;/h2&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/Airblader/i3/wiki"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-where-can-i-get-help" class="anchor" aria-hidden="true" href="#where-can-i-get-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where can I get help?&lt;/h2&gt;
&lt;p&gt;For bug reports or feature requests regarding i3-gaps specifically, open an issue on &lt;a href="https://www.github.com/Airblader/i3"&gt;GitHub&lt;/a&gt;. If your issue is with core i3 functionality, please report it &lt;a href="https://www.github.com/i3/i3"&gt;upstream&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For support &amp;amp; all other kinds of questions, you can ask your question on the official &lt;a href="https://www.reddit.com/r/i3wm" rel="nofollow"&gt;subreddit /r/i3wm&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-i3" class="anchor" aria-hidden="true" href="#i3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;i3&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-gaps" class="anchor" aria-hidden="true" href="#gaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gaps&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; In order to use gaps you need to disable window titlebars. This can be done by adding the following line to your config.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# You can also use any non-zero value if you'd like to have a border
for_window [class=".*"] border pixel 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Gaps are the namesake feature of i3-gaps and add spacing between windows/containers. Gaps come in two flavors, inner and outer gaps wherein inner gaps are those between two adjacent containers (or a container and an edge) and outer gaps are an additional spacing along the screen edges. Gaps can be configured in your config either globally or per workspace, and can additionally be changed during runtime using commands (e.g., through &lt;code&gt;i3-msg&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Outer gaps are added to the inner gaps, i.e., the gaps between a screen edge and a container will be the sum of outer and inner gaps.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h4&gt;
&lt;p&gt;You can define gaps either globally or per workspace using the following syntax. Note that the gaps configurations should be ordered from least specific to most specific as some directives can overwrite others.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gaps [inner|outer|horizontal|vertical|top|left|bottom|right] &amp;lt;px&amp;gt;
workspace &amp;lt;ws&amp;gt; gaps [inner|outer|horizontal|vertical|top|left|bottom|right] &amp;lt;px&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;inner&lt;/code&gt; and &lt;code&gt;outer&lt;/code&gt; keywords are as explained above. With &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; you can specify outer gaps on specific sides, and &lt;code&gt;horizontal&lt;/code&gt; and &lt;code&gt;vertical&lt;/code&gt; are shortcuts for the respective sides. &lt;code&gt;&amp;lt;px&amp;gt;&lt;/code&gt; stands for a numeric value in pixels and &lt;code&gt;&amp;lt;ws&amp;gt;&lt;/code&gt; for either a workspace number or a workspace name.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h4&gt;
&lt;p&gt;Gaps can be modified at runtime with the following command syntax:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gaps inner|outer|horizontal|vertical|top|right|bottom|left current|all set|plus|minus|toggle &amp;lt;px&amp;gt;

# Examples
gaps inner all set 20
gaps outer current plus 5
gaps horizontal current plus 40
gaps outer current toggle 60
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With &lt;code&gt;current&lt;/code&gt; or &lt;code&gt;all&lt;/code&gt; you can change gaps either for only the currently focused or all currently existing workspaces (note that this does not affect the global configuration itself).&lt;/p&gt;
&lt;p&gt;You can find an example configuration in the &lt;a href="https://github.com/Airblader/i3/wiki/Example-Configuration"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-smart-gaps" class="anchor" aria-hidden="true" href="#smart-gaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Smart Gaps&lt;/h3&gt;
&lt;p&gt;Gaps can be automatically turned on/off on a workspace in certain scenarios using the following config directives:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Only enable gaps on a workspace when there is at least one container
smart_gaps on

# Only enable outer gaps when there is exactly one container
smart_gaps inverse_outer
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-smart-borders" class="anchor" aria-hidden="true" href="#smart-borders"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Smart Borders&lt;/h3&gt;
&lt;p&gt;Smart borders will draw borders on windows only if there is more than one window in a workspace. This feature can also be enabled only if the gap size between window and screen edge is &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Activate smart borders (always)
smart_borders on

# Activate smart borders (only when there are effectively no gaps)
smart_borders no_gaps
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-smart-edge-borders" class="anchor" aria-hidden="true" href="#smart-edge-borders"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Smart Edge Borders&lt;/h3&gt;
&lt;p&gt;This extends i3's &lt;code&gt;hide_edge_borders&lt;/code&gt; with a new option. When set, edge-specific borders of a container will be hidden if it's the only container on the workspace and the gaps to the screen edge is &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Hide edge borders only if there is one window with no gaps
hide_edge_borders smart_no_gaps
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-i3bar" class="anchor" aria-hidden="true" href="#i3bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;i3bar&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-bar-height" class="anchor" aria-hidden="true" href="#bar-height"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bar Height&lt;/h3&gt;
&lt;p&gt;The height of an i3bar instance can be specified explicitly by defining the &lt;code&gt;height&lt;/code&gt; key in the bar configuration. If not set, the height will be calculated automatically depending on the font size.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bar {
    # Height in pixels
    height 25
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Airblader</author><guid isPermaLink="false">https://github.com/Airblader/i3</guid><pubDate>Mon, 09 Dec 2019 00:22:00 GMT</pubDate></item><item><title>zlgopen/awtk #23 in C, Today</title><link>https://github.com/zlgopen/awtk</link><description>&lt;p&gt;&lt;i&gt;AWTK = Toolkit AnyWhere(为嵌入式、手机和PC打造的通用GUI系统)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-awtk--toolkit-anywhere" class="anchor" aria-hidden="true" href="#awtk--toolkit-anywhere"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWTK = Toolkit AnyWhere&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/zlg_adv.jpeg"&gt;&lt;img src="docs/images/zlg_adv.jpeg" alt="zlg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-一介绍" class="anchor" aria-hidden="true" href="#一介绍"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;一、介绍&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 全称 Toolkit AnyWhere，是 &lt;a href="http://www.zlg.cn/" rel="nofollow"&gt;ZLG&lt;/a&gt; 开发的开源 GUI 引擎，旨在为嵌入式系统、WEB、各种小程序、手机和 PC 打造的通用 GUI 引擎，为用户提供一个功能强大、高效可靠、简单易用、可轻松做出炫酷效果的 GUI 引擎。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;欢迎广大开发者一起参与开发：&lt;a href="docs/awtk_ecology.md"&gt;生态共建计划&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-awtk-寓意有两个方面" class="anchor" aria-hidden="true" href="#awtk-寓意有两个方面"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 寓意有两个方面：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Toolkit AnyWhere。&lt;/li&gt;
&lt;li&gt;ZLG 物联网操作系统 AWorks 内置 GUI。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-awtk-源码仓库" class="anchor" aria-hidden="true" href="#awtk-源码仓库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 源码仓库：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;主源码仓库：&lt;a href="https://github.com/zlgopen/awtk"&gt;https://github.com/zlgopen/awtk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;镜像源码仓库：&lt;a href="https://gitee.com/zlgopen/awtk" rel="nofollow"&gt;https://gitee.com/zlgopen/awtk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;稳定版整合包：&lt;a href="https://pan.baidu.com/s/1_oRgj67M-I4kivk-YzwFWA" rel="nofollow"&gt;https://pan.baidu.com/s/1_oRgj67M-I4kivk-YzwFWA&lt;/a&gt;   提取码: 1cmi&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-运行效果截图" class="anchor" aria-hidden="true" href="#运行效果截图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;运行效果截图：&lt;/h4&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/cleanair_main.png"&gt;&lt;img src="docs/images/cleanair_main.png" alt="CleanAir-Demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/meter_main.png"&gt;&lt;img src="docs/images/meter_main.png" alt="Meter-Demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/chart_main.png"&gt;&lt;img src="docs/images/chart_main.png" alt="Chart-Demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/musicplayer_main.png"&gt;&lt;img src="docs/images/musicplayer_main.png" alt="MusicPlayer-Demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-二最终目标" class="anchor" aria-hidden="true" href="#二最终目标"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;二、最终目标：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;支持开发嵌入式应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 Linux 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 MacOS 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 Windows 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 Web APP。&lt;/li&gt;
&lt;li&gt;支持开发 Android 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 iOS 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发微信小程序。&lt;/li&gt;
&lt;li&gt;支持开发支付宝小程序。&lt;/li&gt;
&lt;li&gt;支持开发百度小程序。&lt;/li&gt;
&lt;li&gt;支持开发 2D 小游戏。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-三主要特色" class="anchor" aria-hidden="true" href="#三主要特色"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;三、主要特色&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-1-跨平台" class="anchor" aria-hidden="true" href="#1-跨平台"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 跨平台&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 是跨平台的，这有两个方面的意思：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AWTK 本身是跨平台的。目前支持的平台有 ZLG AWorks、Windows、Linux、MacOS、嵌入式 Linux、Android、Web 和嵌入式裸系统，可以轻松的移植到各种 RTOS 上。AWTK 以后也可以运行在各种小程序和 iOS 等平台上运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWTK 同时还提供了一套跨平台的基础工具库。其中包括链表、数组、字符串 (UTF8 和 widechar)，事件发射器、值、对象、文件系统、互斥锁和线程、表达式和字符串解析等等，让你用 AWTK 开发的应用程序可以真正跨平台运行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-2-高效" class="anchor" aria-hidden="true" href="#2-高效"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 高效&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 通过一系列的手段保证 AWTK 应用程序高效运行：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过脏矩算法只更新变化的部分。&lt;/li&gt;
&lt;li&gt;支持 3 FrameBuffer 让界面以最高帧率运行 （可选）。&lt;/li&gt;
&lt;li&gt;UI 描述文件和主题文件使用高效的二进制格式，解析在瞬间完成。&lt;/li&gt;
&lt;li&gt;支持各种 GPU 加速接口。如 OpenGL、DirectX、Vulkan 和 Metal 等。&lt;/li&gt;
&lt;li&gt;支持嵌入式平台的各种 2D 加速接口。目前 STM32 的 DMA2D 和 NXP 的 PXP 接口，厂家可以轻松扩展自己的加速接口。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-3-稳定" class="anchor" aria-hidden="true" href="#3-稳定"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 稳定&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 通过下列方式极力让代码稳定可靠：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 cppcheck 和 facebook infer 进行静态检查。&lt;/li&gt;
&lt;li&gt;使用 valgrind 进行动态内存检查。&lt;/li&gt;
&lt;li&gt;近两万行的单元测试代码。&lt;/li&gt;
&lt;li&gt;ZLG 强大 GUI 团队的支持。&lt;/li&gt;
&lt;li&gt;经过多个实际项目验证。&lt;/li&gt;
&lt;li&gt;多平台 / 多编译器验证。&lt;/li&gt;
&lt;li&gt;优秀的架构设计。&lt;/li&gt;
&lt;li&gt;Code Review。&lt;/li&gt;
&lt;li&gt;手工测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-4-强大" class="anchor" aria-hidden="true" href="#4-强大"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. 强大&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;丰富的控件 （持续增加中）。&lt;/li&gt;
&lt;li&gt;支持各种图片格式 (png/jpg/gif/svg)。&lt;/li&gt;
&lt;li&gt;支持各种字体格式 （点阵和矢量）。&lt;/li&gt;
&lt;li&gt;支持窗口动画&lt;/li&gt;
&lt;li&gt;支持控件动画&lt;/li&gt;
&lt;li&gt;支持高清屏。&lt;/li&gt;
&lt;li&gt;支持界面描述文件。&lt;/li&gt;
&lt;li&gt;支持主题描述文件。&lt;/li&gt;
&lt;li&gt;主题切换实时生效。&lt;/li&gt;
&lt;li&gt;支持控件布局策略。&lt;/li&gt;
&lt;li&gt;支持对话框高亮策略。&lt;/li&gt;
&lt;li&gt;丰富的辅助工具。&lt;/li&gt;
&lt;li&gt;支持从低端的 Cortex M3 到各种高端 CPU。&lt;/li&gt;
&lt;li&gt;支持无文件系统和自定义的文件系统。&lt;/li&gt;
&lt;li&gt;支持裸系统和 RTOS。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-5-易用" class="anchor" aria-hidden="true" href="#5-易用"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. 易用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;大量的示例代码。&lt;/li&gt;
&lt;li&gt;完善的 API 文档和使用文档。&lt;/li&gt;
&lt;li&gt;ZLG 强大的技术支持团队。&lt;/li&gt;
&lt;li&gt;用 AWTK 本身开发的界面编辑器 （开发中）。&lt;/li&gt;
&lt;li&gt;声明式的界面描述语言。一行代码启用控件动画，启用窗口动画，显示图片 (png/jpg/svg/gif)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-6-高度扩展性" class="anchor" aria-hidden="true" href="#6-高度扩展性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6. 高度扩展性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;可以扩展自己的控件。&lt;/li&gt;
&lt;li&gt;可以扩展自己的动画。&lt;/li&gt;
&lt;li&gt;可以实现自己的主循环。&lt;/li&gt;
&lt;li&gt;可以扩展自己的软键盘。&lt;/li&gt;
&lt;li&gt;可以扩展自己的图片加载器。&lt;/li&gt;
&lt;li&gt;可以扩展自己的字体加载器。&lt;/li&gt;
&lt;li&gt;可以扩展自己的输入法引擎。&lt;/li&gt;
&lt;li&gt;可以扩展自己的控件布局算法。&lt;/li&gt;
&lt;li&gt;可以扩展自己的对话框高亮策略。&lt;/li&gt;
&lt;li&gt;可以实现自己的 LCD 接口。&lt;/li&gt;
&lt;li&gt;可以扩展自己的矢量引擎 （如使用 skia/cairo)。&lt;/li&gt;
&lt;li&gt;所有扩展组件和内置组件具有相同的待遇。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-7-多种开发语言" class="anchor" aria-hidden="true" href="#7-多种开发语言"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7. 多种开发语言&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 本身是用 C 语言开发的，可以通过 IDL 生成各种脚本语言的绑定。生成的绑定代码不是简单的把 C 语言的 API 映射到脚本语言，而是生成脚本语言原生代码风格的 API。目前支持以下语言 （以后根据需要增加）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C&lt;/li&gt;
&lt;li&gt;Lua&lt;/li&gt;
&lt;li&gt;Javascript on jerryscript&lt;/li&gt;
&lt;li&gt;Javascript on nodejs&lt;/li&gt;
&lt;li&gt;Javascript on quickjs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-8-国际化" class="anchor" aria-hidden="true" href="#8-国际化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8. 国际化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;支持 Unicode。&lt;/li&gt;
&lt;li&gt;支持输入法。&lt;/li&gt;
&lt;li&gt;支持字符串翻译 （实时生效）。&lt;/li&gt;
&lt;li&gt;支持图片翻译 （实时生效）。&lt;/li&gt;
&lt;li&gt;文字双向排版 （计划中）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-9-开放源码免费商用-lgpl" class="anchor" aria-hidden="true" href="#9-开放源码免费商用-lgpl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9. 开放源码，免费商用 (LGPL)。&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-四模拟运行" class="anchor" aria-hidden="true" href="#四模拟运行"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;四、模拟运行：&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-mac" class="anchor" aria-hidden="true" href="#mac"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac&lt;/h3&gt;
&lt;p&gt;如果没有安装 scons 和 sdl2，请在终端运行下面的命令 （假定已安装 brew)：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install scons sdl2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译运行 （在终端下，进入 awtk 所在的目录，并运行下列命令）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scons
./bin/demoui
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-ubuntu-版本-16" class="anchor" aria-hidden="true" href="#ubuntu-版本-16"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu （版本 &amp;gt;=16)&lt;/h3&gt;
&lt;p&gt;如果没有安装 scons 和依赖的软件包，请在终端运行下面的命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install scons libsndio-dev libgtk-3-dev libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx libgl1-mesa-dev git vim clang-format
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译运行 （在终端下，进入 awtk 所在的目录，并运行下列命令）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scons
./bin/demoui
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Ubuntu 14 上无法启动，请参考 &lt;a href="docs/faq.md"&gt;FAQ&lt;/a&gt; 修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;（请先安装 python，scons 和 Visual Studio C++（版本 &amp;gt;=2017)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果没有安装 pywin32，请 pip 安装：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;pip install pywin32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译运行 （在命令行模式下，进入 awtk 所在的目录，并运行下列命令）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scons
bin\demoui
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;如果没有安装 PIL，请用 pip 安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;pip install Pillow
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-五在线演示" class="anchor" aria-hidden="true" href="#五在线演示"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;五、在线演示&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/Chart-Demo/index.html" rel="nofollow"&gt;图表演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/Meter-Demo/index.html" rel="nofollow"&gt;仪表演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/SmartWatch-Demo/index.html" rel="nofollow"&gt;智能手表演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/CleanAir-Demo/index.html" rel="nofollow"&gt;洁净新风系统演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/MusicPlayer-Demo/index.html" rel="nofollow"&gt;音乐播放器演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/demoui/index.html" rel="nofollow"&gt;基本控件在线演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-六各个平台的移植" class="anchor" aria-hidden="true" href="#六各个平台的移植"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;六、各个平台的移植&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/awtk_ecology.md"&gt;详见 AWTK 生态共建计划&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-七各语言的绑定" class="anchor" aria-hidden="true" href="#七各语言的绑定"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;七、各语言的绑定&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-binding"&gt;AWTK 绑定代码生成器&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-lua"&gt;LUA 绑定&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-quickjs"&gt;JS 绑定之 QuickJS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-jerryscript"&gt;JS 绑定之 JerryScript&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-八相关工程" class="anchor" aria-hidden="true" href="#八相关工程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;八、相关工程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-hello"&gt;模板工程&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-c-demos"&gt;C 示例代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-examples"&gt;精彩示例&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-mvvm"&gt;AWTK-MVVM&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/CUITzhaoqi/awtk-qr"&gt;扩展控件实例：二维码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/longyuwlz/awtk_slider_circle"&gt;扩展控件实例：圆形滑块&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-九文档" class="anchor" aria-hidden="true" href="#九文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;九、文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/README.md"&gt;开发文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/changes.md"&gt;最新动态&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="TODO.md"&gt;任务完成情况&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-docs"&gt;入门指南与手册&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-十生态共建计划" class="anchor" aria-hidden="true" href="#十生态共建计划"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;十、生态共建计划&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/awtk_ecology.md"&gt;生态共建计划&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;深度合作伙伴&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.nxp.com" rel="nofollow"&gt;&lt;img src="docs/images/logo_nxp.svg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;　&lt;a href="http://www.anyka.com" rel="nofollow"&gt;&lt;img src="docs/images/logo_anyka.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;　&lt;a href="http://www.ingenic.com.cn" rel="nofollow"&gt;&lt;img src="docs/images/logo_ingenic.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;　&lt;a href="http://www.mindmotion.com.cn" rel="nofollow"&gt;&lt;img src="docs/images/logo_mindmotion.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zlgopen</author><guid isPermaLink="false">https://github.com/zlgopen/awtk</guid><pubDate>Mon, 09 Dec 2019 00:23:00 GMT</pubDate></item><item><title>mpv-player/mpv #24 in C, Today</title><link>https://github.com/mpv-player/mpv</link><description>&lt;p&gt;&lt;i&gt;🎥 Command line video player&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/mpv-player/mpv.io/master/source/images/mpv-logo-128.png"&gt;&lt;img src="https://raw.githubusercontent.com/mpv-player/mpv.io/master/source/images/mpv-logo-128.png" alt="mpv logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mpv" class="anchor" aria-hidden="true" href="#mpv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mpv&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#external-links"&gt;External links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-requirements"&gt;System requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#downloads"&gt;Downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changelog"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compilation"&gt;Compilation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#release-cycle"&gt;Release cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bug-reports"&gt;Bug reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-external-links" class="anchor" aria-hidden="true" href="#external-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mpv-player/mpv/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mpv-player/mpv/wiki/FAQ"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mpv.io/manual/master/" rel="nofollow"&gt;Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;mpv&lt;/strong&gt; is a free (as in freedom) media player for the command line. It supports
a wide variety of media file formats, audio and video codecs, and subtitle types.&lt;/p&gt;
&lt;p&gt;There is a &lt;a href="https://github.com/mpv-player/mpv/wiki/FAQ"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Releases can be found on the &lt;a href="https://github.com/mpv-player/mpv/releases"&gt;release list&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A not too ancient Linux, Windows 7 or later, or OSX 10.8 or later.&lt;/li&gt;
&lt;li&gt;A somewhat capable CPU. Hardware decoding might help if the CPU is too slow to
decode video in realtime, but must be explicitly enabled with the &lt;code&gt;--hwdec&lt;/code&gt;
option.&lt;/li&gt;
&lt;li&gt;A not too crappy GPU. mpv's focus is not on power-efficient playback on
embedded or integrated GPUs (for example, hardware decoding is not even
enabled by default). Low power GPUs may cause issues like tearing, stutter,
etc. The main video output uses shaders for video rendering and scaling,
rather than GPU fixed function hardware. On Windows, you might want to make
sure the graphics drivers are current. In some cases, ancient fallback video
output methods can help (such as &lt;code&gt;--vo=xv&lt;/code&gt; on Linux), but this use is not
recommended or supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-downloads" class="anchor" aria-hidden="true" href="#downloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloads&lt;/h2&gt;
&lt;p&gt;For semi-official builds and third-party packages please see
&lt;a href="http://mpv.io/installation/" rel="nofollow"&gt;mpv.io/installation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;p&gt;There is no complete changelog; however, changes to the player core interface
are listed in the &lt;a href="https://github.com/mpv-player/mpv/blob/master/DOCS/interface-changes.rst"&gt;interface changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Changes to the C API are documented in the &lt;a href="https://github.com/mpv-player/mpv/blob/master/DOCS/client-api-changes.rst"&gt;client API changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/mpv-player/mpv/releases"&gt;release list&lt;/a&gt; has a summary of most of the important changes
on every release.&lt;/p&gt;
&lt;p&gt;Changes to the default key bindings are indicated in
&lt;a href="https://github.com/mpv-player/mpv/blob/master/etc/restore-old-bindings.conf"&gt;restore-old-bindings.conf&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compilation" class="anchor" aria-hidden="true" href="#compilation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compilation&lt;/h2&gt;
&lt;p&gt;Compiling with full features requires development files for several
external libraries. Below is a list of some important requirements.&lt;/p&gt;
&lt;p&gt;The mpv build system uses &lt;a href="https://waf.io/" rel="nofollow"&gt;waf&lt;/a&gt;, but we don't store it in the
repository. The &lt;code&gt;./bootstrap.py&lt;/code&gt; script will download the latest version
of waf that was tested with the build system.&lt;/p&gt;
&lt;p&gt;For a list of the available build options use &lt;code&gt;./waf configure --help&lt;/code&gt;. If
you think you have support for some feature installed but configure fails to
detect it, the file &lt;code&gt;build/config.log&lt;/code&gt; may contain information about the
reasons for the failure.&lt;/p&gt;
&lt;p&gt;NOTE: To avoid cluttering the output with unreadable spam, &lt;code&gt;--help&lt;/code&gt; only shows
one of the two switches for each option. If the option is autodetected by
default, the &lt;code&gt;--disable-***&lt;/code&gt; switch is printed; if the option is disabled by
default, the &lt;code&gt;--enable-***&lt;/code&gt; switch is printed. Either way, you can use
&lt;code&gt;--enable-***&lt;/code&gt; or &lt;code&gt;--disable-**&lt;/code&gt; regardless of what is printed by &lt;code&gt;--help&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To build the software you can use &lt;code&gt;./waf build&lt;/code&gt;: the result of the compilation
will be located in &lt;code&gt;build/mpv&lt;/code&gt;. You can use &lt;code&gt;./waf install&lt;/code&gt; to install mpv
to the &lt;em&gt;prefix&lt;/em&gt; after it is compiled.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./bootstrap.py
./waf configure
./waf
./waf install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Essential dependencies (incomplete list):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gcc or clang&lt;/li&gt;
&lt;li&gt;X development headers (xlib, xrandr, xext, xscrnsaver, xinerama, libvdpau,
libGL, GLX, EGL, xv, ...)&lt;/li&gt;
&lt;li&gt;Audio output development headers (libasound/ALSA, pulseaudio)&lt;/li&gt;
&lt;li&gt;FFmpeg libraries (libavutil libavcodec libavformat libswscale libavfilter
and either libswresample or libavresample)&lt;/li&gt;
&lt;li&gt;zlib&lt;/li&gt;
&lt;li&gt;iconv (normally provided by the system libc)&lt;/li&gt;
&lt;li&gt;libass (OSD, OSC, text subtitles)&lt;/li&gt;
&lt;li&gt;Lua (optional, required for the OSC pseudo-GUI and youtube-dl integration)&lt;/li&gt;
&lt;li&gt;libjpeg (optional, used for screenshots only)&lt;/li&gt;
&lt;li&gt;uchardet (optional, for subtitle charset detection)&lt;/li&gt;
&lt;li&gt;nvdec and vaapi libraries for hardware decoding on Linux (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Libass dependencies (when building libass):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gcc or clang, yasm on x86 and x86_64&lt;/li&gt;
&lt;li&gt;fribidi, freetype, fontconfig development headers (for libass)&lt;/li&gt;
&lt;li&gt;harfbuzz (optional, required for correct rendering of combining characters,
particularly for correct rendering of non-English text on OSX, and
Arabic/Indic scripts on any platform)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FFmpeg dependencies (when building FFmpeg):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gcc or clang, yasm on x86 and x86_64&lt;/li&gt;
&lt;li&gt;OpenSSL or GnuTLS (have to be explicitly enabled when compiling FFmpeg)&lt;/li&gt;
&lt;li&gt;libx264/libmp3lame/libfdk-aac if you want to use encoding (have to be
explicitly enabled when compiling FFmpeg)&lt;/li&gt;
&lt;li&gt;For native DASH playback, FFmpeg needs to be built with --enable-libxml2
(although there are security implications, and DASH support has lots of bugs).&lt;/li&gt;
&lt;li&gt;AV1 decoding support requires dav1d.&lt;/li&gt;
&lt;li&gt;For good nvidia support on Linux, make sure nv-codec-headers is installed
and can be found by configure.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of the above libraries are available in suitable versions on normal
Linux distributions. For ease of compiling the latest git master of everything,
you may wish to use the separately available build wrapper (&lt;a href="https://github.com/mpv-player/mpv-build"&gt;mpv-build&lt;/a&gt;)
which first compiles FFmpeg libraries and libass, and then compiles the player
statically linked against those.&lt;/p&gt;
&lt;p&gt;If you want to build a Windows binary, you either have to use MSYS2 and MinGW,
or cross-compile from Linux with MinGW. See
&lt;a href="https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md"&gt;Windows compilation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-release-cycle" class="anchor" aria-hidden="true" href="#release-cycle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release cycle&lt;/h2&gt;
&lt;p&gt;Every other month, an arbitrary git snapshot is made, and is assigned
a 0.X.0 version number. No further maintenance is done.&lt;/p&gt;
&lt;p&gt;The goal of releases is to make Linux distributions happy. Linux distributions
are also expected to apply their own patches in case of bugs and security
issues.&lt;/p&gt;
&lt;p&gt;Releases other than the latest release are unsupported and unmaintained.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/mpv-player/mpv/blob/master/DOCS/release-policy.md"&gt;release policy document&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports" class="anchor" aria-hidden="true" href="#bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports&lt;/h2&gt;
&lt;p&gt;Please use the &lt;a href="https://github.com/mpv-player/mpv/issues"&gt;issue tracker&lt;/a&gt; provided by GitHub to send us bug
reports or feature requests. Follow the template's instructions or the issue
will likely be ignored or closed as invalid.&lt;/p&gt;
&lt;p&gt;Using the bug tracker as place for simple questions is fine but IRC is
recommended (see &lt;a href="#Contact"&gt;Contact&lt;/a&gt; below).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please read &lt;a href="https://github.com/mpv-player/mpv/blob/master/DOCS/contribute.md"&gt;contribute.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For small changes you can just send us pull requests through GitHub. For bigger
changes come and talk to us on IRC before you start working on them. It will
make code review easier for both parties later on.&lt;/p&gt;
&lt;p&gt;You can check &lt;a href="https://github.com/mpv-player/mpv/wiki/Stuff-to-do"&gt;the wiki&lt;/a&gt;
or the &lt;a href="https://github.com/mpv-player/mpv/issues?q=is%3Aopen+is%3Aissue+label%3A%22feature+request%22"&gt;issue tracker&lt;/a&gt;
for ideas on what you could contribute with.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;GPLv2 "or later" by default, LGPLv2.1 "or later" with &lt;code&gt;--enable-lgpl&lt;/code&gt;.
See &lt;a href="https://github.com/mpv-player/mpv/blob/master/Copyright"&gt;details.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-history" class="anchor" aria-hidden="true" href="#history"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;History&lt;/h2&gt;
&lt;p&gt;This software is based on the MPlayer project. Before mpv existed as a project,
the code base was briefly developed under the mplayer2 project. For details,
see the &lt;a href="https://github.com/mpv-player/mpv/wiki/FAQ"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;Most activity happens on the IRC channel and the github issue tracker.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GitHub issue tracker&lt;/strong&gt;: &lt;a href="https://github.com/mpv-player/mpv/issues"&gt;issue tracker&lt;/a&gt; (report bugs here)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User IRC Channel&lt;/strong&gt;: &lt;code&gt;#mpv&lt;/code&gt; on &lt;code&gt;irc.freenode.net&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Developer IRC Channel&lt;/strong&gt;: &lt;code&gt;#mpv-devel&lt;/code&gt; on &lt;code&gt;irc.freenode.net&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mpv-player</author><guid isPermaLink="false">https://github.com/mpv-player/mpv</guid><pubDate>Mon, 09 Dec 2019 00:24:00 GMT</pubDate></item><item><title>CTCaer/hekate #25 in C, Today</title><link>https://github.com/CTCaer/hekate</link><description>&lt;p&gt;&lt;i&gt;Nintendo Switch Bootloader - CTCaer mod&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-hekate---ctcaer-mod" class="anchor" aria-hidden="true" href="#hekate---ctcaer-mod"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hekate - CTCaer mod&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3665130/60391760-bc1e8c00-9afe-11e9-8b7a-b065873081b2.png"&gt;&lt;img src="https://user-images.githubusercontent.com/3665130/60391760-bc1e8c00-9afe-11e9-8b7a-b065873081b2.png" alt="Image of Hekate" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Custom Nintendo Switch bootloader, firmware patcher, and more.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bootloader-folders-and-files" class="anchor" aria-hidden="true" href="#bootloader-folders-and-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bootloader folders and files&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Folder/File&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bootloader&lt;/td&gt;
&lt;td&gt;Main folder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ bootlogo.bmp&lt;/td&gt;
&lt;td&gt;It is used when custom is on and no logopath found. Can be skipped.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ hekate_ipl.ini&lt;/td&gt;
&lt;td&gt;Main bootloader configuration and boot entries.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ patches.ini&lt;/td&gt;
&lt;td&gt;Add external patches. Can be skipped. A template can be found &lt;a href="./res/patches_template.ini"&gt;here&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ update.bin&lt;/td&gt;
&lt;td&gt;If newer, it is loaded at boot. For modchips. Can be skipped.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/ini/&lt;/td&gt;
&lt;td&gt;For individual inis. 'More configs...' menu. Autoboot is supported.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/res/&lt;/td&gt;
&lt;td&gt;Nyx user resources. Icons and more.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ background.bmp&lt;/td&gt;
&lt;td&gt;Nyx - custom background.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ icon_switch.bmp&lt;/td&gt;
&lt;td&gt;Nyx - Default icon for CFWs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ icon_payload.bmp&lt;/td&gt;
&lt;td&gt;Nyx - Default icon for Payloads.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ icon_lakka.bmp&lt;/td&gt;
&lt;td&gt;Nyx - Default icon for Lakka.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/sys/&lt;/td&gt;
&lt;td&gt;For system modules.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ emummc.kipm&lt;/td&gt;
&lt;td&gt;emuMMC KIP1 module. Important!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ libsys_lp0.bso&lt;/td&gt;
&lt;td&gt;LP0 (sleep mode) module. Important!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ libsys_minerva.bso&lt;/td&gt;
&lt;td&gt;Minerva Training Cell. Used for DRAM Frequency training. Important!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ nyx.bin&lt;/td&gt;
&lt;td&gt;Nyx - Our GUI. Important!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ res.pak&lt;/td&gt;
&lt;td&gt;Nyx resources package. Important!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/screenshots/&lt;/td&gt;
&lt;td&gt;Folder where Nyx screenshots are saved&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/payloads/&lt;/td&gt;
&lt;td&gt;For payloads. 'Payloads...' menu. Autoboot only supported by including them into an ini. All CFW bootloaders, tools, Linux payloads are supported.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/libtools/&lt;/td&gt;
&lt;td&gt;Future reserved&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Sept files for booting 7.0.0 and up are expected at /sept folder at root of sd card.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bootloader-configuration" class="anchor" aria-hidden="true" href="#bootloader-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bootloader configuration&lt;/h2&gt;
&lt;p&gt;The bootloader can be configured via 'bootloader/hekate_ipl.ini' (if it is present on the SD card). Each ini section represents a boot entry, except for the special section 'config' that controls the global configuration.&lt;/p&gt;
&lt;p&gt;There are four possible type of entries. "&lt;strong&gt;[ ]&lt;/strong&gt;": Boot entry, "&lt;strong&gt;{ }&lt;/strong&gt;": Caption, "&lt;strong&gt;#&lt;/strong&gt;": Comment, "&lt;em&gt;newline&lt;/em&gt;": .ini cosmetic newline.&lt;/p&gt;
&lt;p&gt;You can find a template &lt;a href="./res/hekate_ipl_template.ini"&gt;Here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-global-configuration-keysvalues-when-boot-entry-is-config" class="anchor" aria-hidden="true" href="#global-configuration-keysvalues-when-boot-entry-is-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global Configuration keys/values when boot entry is &lt;strong&gt;config&lt;/strong&gt;:&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Config option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;autoboot=0&lt;/td&gt;
&lt;td&gt;0: Disable, #: Boot entry number to auto boot.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;autoboot_list=0&lt;/td&gt;
&lt;td&gt;0: Read &lt;code&gt;autoboot&lt;/code&gt; boot entry from hekate_ipl.ini, 1: Read from ini folder (ini files are ASCII ordered).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootwait=3&lt;/td&gt;
&lt;td&gt;0: Disable (It also disables bootlogo. Having &lt;strong&gt;VOL-&lt;/strong&gt; pressed since injection goes to menu.), #: Time to wait for &lt;strong&gt;VOL-&lt;/strong&gt; to enter menu.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;verification=2&lt;/td&gt;
&lt;td&gt;0: Disable Backup/Restore verification, 1: Sparse (block based, fast and not 100% reliable), 2: Full (sha256 based, slow and 100% reliable).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;autohosoff=1&lt;/td&gt;
&lt;td&gt;0: Disable, 1: If woke up from HOS via an RTC alarm, shows logo, then powers off completely, 2: No logo, immediately powers off.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;autonogc=1&lt;/td&gt;
&lt;td&gt;0: Disable, 1: Automatically applies nogc patch if unburnt fuses found and a &amp;gt;= 4.0.0 HOS is booted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backlight=100&lt;/td&gt;
&lt;td&gt;Screen backlight level. 0-255.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-possible-boot-entry-keyvalue-combinations" class="anchor" aria-hidden="true" href="#possible-boot-entry-keyvalue-combinations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Possible boot entry key/value combinations:&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Config option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;warmboot={SD path}&lt;/td&gt;
&lt;td&gt;Replaces the warmboot binary&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;secmon={SD path}&lt;/td&gt;
&lt;td&gt;Replaces the security monitor binary&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kernel={SD path}&lt;/td&gt;
&lt;td&gt;Replaces the kernel binary&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kip1={SD path}&lt;/td&gt;
&lt;td&gt;Replaces/Adds kernel initial process. Multiple can be set.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kip1={SD folder}/*&lt;/td&gt;
&lt;td&gt;Loads every .kip/.kip1 inside a folder. Compatible with single kip1 keys.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fss0={SD path}&lt;/td&gt;
&lt;td&gt;Takes a fusee-secondary binary and &lt;code&gt;extracts&lt;/code&gt; all needed parts from it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kip1patch=patchname&lt;/td&gt;
&lt;td&gt;Enables a kip1 patch. Specify with multiple lines and/or as CSV. If not found, an error will show up&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fullsvcperm=1&lt;/td&gt;
&lt;td&gt;Disables SVC verification (full services permission)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;debugmode=1&lt;/td&gt;
&lt;td&gt;Enables Debug mode. Obsolete when used with exosphere as secmon.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;atmosphere=1&lt;/td&gt;
&lt;td&gt;Enables Atmosphère patching.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nouserexceptions=1&lt;/td&gt;
&lt;td&gt;Disables usermode exception handlers when paired with Exosphère.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;userpmu=1&lt;/td&gt;
&lt;td&gt;Allows user access to PMU when paired with Exosphère.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;emummc_force_disable=1&lt;/td&gt;
&lt;td&gt;Disabled emuMMC if it's enabled.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stock=1&lt;/td&gt;
&lt;td&gt;Disables unneeded kernel patching when running stock or semi-stock. &lt;code&gt;If emuMMC is enabled, emummc_force_disabled=1&lt;/code&gt; is required to run completely stock.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;id=idname&lt;/td&gt;
&lt;td&gt;Identifies boot entry for forced boot via id. Max 7 chars.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;payload={SD path}&lt;/td&gt;
&lt;td&gt;Payload launching. Tools, Linux, CFW bootloaders, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;logopath={SD path}&lt;/td&gt;
&lt;td&gt;If no logopath, &lt;code&gt;bootloader/bootlogo.bmp&lt;/code&gt; will be used if exists. If logopath exists, it will load the specified bitmap.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;icon={SD path}&lt;/td&gt;
&lt;td&gt;Force Nyx to use the icon defined here. If this is not found, it will check for a bmp named as the boot entry ([Test 2] -&amp;gt; &lt;code&gt;bootloader/res/Test 2.bmp&lt;/code&gt;). Otherwise default will be used.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Note1&lt;/strong&gt;: When using the wildcard (&lt;code&gt;/*&lt;/code&gt;) with &lt;code&gt;kip1&lt;/code&gt; you can still use the normal &lt;code&gt;kip1&lt;/code&gt; after that to load extra single kips.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note2&lt;/strong&gt;: When using FSS0 it parses exosphere, warmboot and all core kips. You can override the first 2 by using &lt;code&gt;secmon&lt;/code&gt;/&lt;code&gt;warmboot&lt;/code&gt; after defining &lt;code&gt;fss0&lt;/code&gt;.
You can define &lt;code&gt;kip1&lt;/code&gt; to load an extra kip or many via the wildcard (&lt;code&gt;/*&lt;/code&gt;) usage.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Never define &lt;em&gt;fss0 core&lt;/em&gt; kips when using &lt;code&gt;fss0&lt;/code&gt; and make sure that the folder (when using &lt;code&gt;/*&lt;/code&gt;), does not include them.
This is in case the kips are incompatible between them. If compatible, you can override &lt;code&gt;fss0&lt;/code&gt; kips with no issues (useful for testing with intermediate kip changes).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-payload-storage" class="anchor" aria-hidden="true" href="#payload-storage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payload storage:&lt;/h3&gt;
&lt;p&gt;hekate has a boot storage in the binary that helps it configure it outside of BPMP enviroment:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Offset / Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;'0x94' boot_cfg&lt;/td&gt;
&lt;td&gt;bit0: Force AutoBoot, bit1: Show launch log, bit2: Boot from ID, bit7: sept run.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'0x95' autoboot&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;Force AutoBoot&lt;/code&gt;: 0: Force go to menu, else boot that entry.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'0x96' autoboot_list&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;Force AutoBoot&lt;/code&gt; and &lt;code&gt;autoboot&lt;/code&gt; then it boots from ini folder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'0x97' extra_cfg&lt;/td&gt;
&lt;td&gt;bit7: Force Nyx to run &lt;code&gt;Dump pkg1/2&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'0x98' id[8]&lt;/td&gt;
&lt;td&gt;When Boot from ID is set, it will search all inis automatically and find the boot entry with that id and boot it. Must be NULL terminated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'0x98' xt_str[128]&lt;/td&gt;
&lt;td&gt;Depends on the set cfg bits.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If the main .ini is not found, it is created on the first hekate boot.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hekate     (C) 2018 naehrwert, st4rk
CTCaer mod (C) 2018 CTCaer.

Thanks to: derrek, nedwill, plutoo, shuffle2, smea, thexyz, yellows8.
Greetings to: fincs, hexkyz, SciresM, Shiny Quagsire, WinterMute.

Open source and free packages used:
 - FatFs R0.13a, Copyright (C) 2017, ChaN
 - bcl-1.2.0, Copyright (C) 2003-2006, Marcus Geelnard
 - Atmosphère (Exosphere types/panic, prc id kernel patches),
   Copyright (C) 2018-2019, Atmosphère-NX
 - elfload, Copyright (C) 2014 Owen Shepherd, Copyright (C) 2018 M4xw

                         ___
                      .-'   `'.
                     /         \
                     |         ;
                     |         |           ___.--,
            _.._     |0) = (0) |    _.---'`__.-( (_.
     __.--'`_.. '.__.\    '--. \_.-' ,.--'`     `""`
    ( ,.--'`   ',__ /./;   ;, '.__.'`    __
    _`) )  .---.__.' / |   |\   \__..--""  """--.,_
   `---' .'.''-._.-'`_./  /\ '.  \ _.--''````'''--._`-.__.'
         | |  .' _.-' |  |  \  \  '.               `----`
          \ \/ .'     \  \   '. '-._)
           \/ /        \  \    `=.__`'-.
           / /\         `) )    / / `"".`\
     , _.-'.'\ \        / /    ( (     / /
      `--'`   ) )    .-'.'      '.'.  | (
             (/`    ( (`          ) )  '-;   [switchbrew]
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>CTCaer</author><guid isPermaLink="false">https://github.com/CTCaer/hekate</guid><pubDate>Mon, 09 Dec 2019 00:25:00 GMT</pubDate></item></channel></rss>