<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: OCaml, Today</title><link>https://github.com/trending/ocaml?since=daily</link><description>The top repositories on GitHub for ocaml, measured daily</description><pubDate>Mon, 03 Feb 2020 01:12:27 GMT</pubDate><lastBuildDate>Mon, 03 Feb 2020 01:12:27 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>CodaProtocol/coda #1 in OCaml, Today</title><link>https://github.com/CodaProtocol/coda</link><description>&lt;p&gt;&lt;i&gt;Coda is a new cryptocurrency with a constant size blockchain, improving scaling while maintaining decentralization and security.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a href="https://codaprotocol.com" rel="nofollow"&gt;
	&lt;img width="200" src="./frontend/website/public/static/img/coda-logo@3x.png" alt="Coda Logo" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;Coda is the first cryptocurrency with a lightweight, constant-sized blockchain. This is the main source code repository for the Coda project. It contains code for the OCaml protocol implementation, &lt;a href="https://codaprotocol.com" rel="nofollow"&gt;website&lt;/a&gt;, and wallet. Enjoy!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Coda is still under active development, and APIs are still evolving. If you do build upon the APIs, be aware that breaking changes may occur.&lt;/li&gt;
&lt;li&gt;There is a live testnet of the Coda protocol currently running - &lt;a href="http://bit.ly/TestnetForm" rel="nofollow"&gt;sign up here to join the testnet&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-coda" class="anchor" aria-hidden="true" href="#what-is-coda"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Coda?&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-coda-walkthrough" class="anchor" aria-hidden="true" href="#coda-walkthrough"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coda Walkthrough&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codaprotocol.com/docs/" rel="nofollow"&gt;Overview of Coda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codaprotocol.com/docs/getting-started/" rel="nofollow"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codaprotocol.com/docs/my-first-transaction/" rel="nofollow"&gt;My First Transaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codaprotocol.com/docs/node-operator/" rel="nofollow"&gt;Become a Node Operator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-technical-papers" class="anchor" aria-hidden="true" href="#technical-papers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technical Papers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cdn.codaprotocol.com/v2/static/coda-whitepaper-05-10-2018-0.pdf" rel="nofollow"&gt;Coda Whitepaper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-blog" class="anchor" aria-hidden="true" href="#blog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codaprotocol.com/blog.html" rel="nofollow"&gt;Coda Protocol Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="https://codaprotocol.com/docs/contributing/" rel="nofollow"&gt;Contributing Guide&lt;/a&gt; for information on how to make both technical and non-technical contributions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developers" class="anchor" aria-hidden="true" href="#developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developers&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://codaprotocol.com/docs/developers/" rel="nofollow"&gt;Developer docs&lt;/a&gt; contain all the information needed to begin contributing code to Coda, and using Coda APIs to build applications.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-quick-links" class="anchor" aria-hidden="true" href="#quick-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Links:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="README-dev.md"&gt;Developer readme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/demo.md"&gt;Compiling from source and and running a node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="frontend/website/docs/developers/directory-structure.md"&gt;Directory structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="frontend/website/docs/architecture/lifecycle-payment.md"&gt;Lifecycle of a payment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Join the public &lt;a href="https://bit.ly/CodaDiscord" rel="nofollow"&gt;Discord server&lt;/a&gt;! Please come by if you need help or have any questions.&lt;/li&gt;
&lt;li&gt;Get the latest updates by &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSdChigoRhyZqg1RbaA6ODiqJ4q42cPpNbSH-koxXHjLwDeqDw/viewform?usp=pp_url&amp;amp;entry.2026041782=I+just+want+to+learn+more!" rel="nofollow"&gt;signing up for the Coda newsletter&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This repository is distributed under the terms of the Apache 2.0 license,
available in the LICENSE file and online at &lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;. Commits older than 2018-10-03 do
not have a LICENSE file or this notice, but are distributed under the same terms.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>CodaProtocol</author><guid isPermaLink="false">https://github.com/CodaProtocol/coda</guid><pubDate>Mon, 03 Feb 2020 00:01:00 GMT</pubDate></item><item><title>yawaramin/re-web #2 in OCaml, Today</title><link>https://github.com/yawaramin/re-web</link><description>&lt;p&gt;&lt;i&gt;Experimental web framework for ReasonML &amp; OCaml&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-reweb---a-type-safe-ergonomic-reasonml-and-ocaml-web-framework-wip" class="anchor" aria-hidden="true" href="#reweb---a-type-safe-ergonomic-reasonml-and-ocaml-web-framework-wip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ReWeb - a type-safe ergonomic ReasonML and OCaml web framework (WIP)&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/yawaramin/re-web/_build/latest?definitionId=1?branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/82fe52cc15167532ce5c73cd02e2dfd4abc36fe1/68747470733a2f2f6465762e617a7572652e636f6d2f7961776172616d696e2f72652d7765622f5f617069732f6275696c642f7374617475732f7961776172616d696e2e72652d7765623f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/yawaramin/re-web/_apis/build/status/yawaramin.re-web?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReWeb is a web framework based on several foundations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The amazing work of the people behind
&lt;a href="https://github.com/inhabitedtype/httpaf"&gt;Httpaf&lt;/a&gt;,
&lt;a href="https://github.com/anmonteiro/ocaml-h2"&gt;H2&lt;/a&gt;, &lt;a href="https://esy.sh/" rel="nofollow"&gt;Esy&lt;/a&gt;,
and others&lt;/li&gt;
&lt;li&gt;The core idea of
&lt;a href="https://monkey.org/~marius/funsrv.pdf" rel="nofollow"&gt;'Your server as a function'&lt;/a&gt;
by Marius Eriksen which was also the idea behind Twitter's Finagle web
stack&lt;/li&gt;
&lt;li&gt;Jasim Basheer's essay
&lt;a href="https://protoship.io/blog/rails-on-ocaml/" rel="nofollow"&gt;'Rails on OCaml'&lt;/a&gt; which
identifies the need for an ergonomic, Rails-like web framework that
still preserves the type safety benefits of OCaml.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ReWeb's main concepts are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Services: a service is a function from a request to a promise of
response (i.e. an asynchronous function).&lt;/li&gt;
&lt;li&gt;Filters: a filter is a function that takes a service as input and
returns a service as output. It can be inserted into the 'request
pipeline' and manipulate the request before the service finally
handles it.&lt;/li&gt;
&lt;li&gt;Server: a server is a function that takes a route (pair of HTTP method
and path list) as input and returns a service as output.&lt;/li&gt;
&lt;li&gt;Type-safe request pipeline: requests have a type parameter that
reveals their 'context' i.e. some data that's stored inside them.
Filters and services must change requests correctly and in the right
order, or the compiler will present type errors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notice that all the main concepts here are just functions. They are all
composeable using just function composition. Services can call other
services. Filters can slot together by calling each other. Servers can
delegate smaller scopes to other servers. See &lt;code&gt;bin/Main.re&lt;/code&gt; for examples
of all of these.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yawaramin.github.io/re-web/re-web/ReWeb/index.html" rel="nofollow"&gt;API Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yawaramin.github.io/re-web/re-web/Manual/index.html" rel="nofollow"&gt;User's Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-fullstack-reason" class="anchor" aria-hidden="true" href="#fullstack-reason"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fullstack Reason&lt;/h3&gt;
&lt;p&gt;Check out the demo repo which shows a fullstack Reason setup with ReWeb
and ReasonReact, with code sharing:
&lt;a href="https://github.com/yawaramin/fullstack-reason/"&gt;https://github.com/yawaramin/fullstack-reason/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repo can be cloned and used right away for a new project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-examples-directory" class="anchor" aria-hidden="true" href="#examples-directory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples directory&lt;/h3&gt;
&lt;p&gt;Check out the &lt;code&gt;examples/&lt;/code&gt; directory for small, self-contained basic
examples.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bin-directory" class="anchor" aria-hidden="true" href="#bin-directory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bin directory&lt;/h3&gt;
&lt;p&gt;Finally, check out the example server in the &lt;code&gt;bin/&lt;/code&gt; directory. The
&lt;code&gt;Main.re&lt;/code&gt; file there has extensive examples of almost everything ReWeb
currently supports.&lt;/p&gt;
&lt;p&gt;Run the example server:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy bin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Send some requests to it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl localhost:8080/hello
$ curl localhost:8080/auth/hello
$ curl --user 'bob:secret' localhost:8080/auth/hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Go to &lt;a href="http://localhost:8080/login" rel="nofollow"&gt;http://localhost:8080/login&lt;/a&gt; in your browser, etc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-try" class="anchor" aria-hidden="true" href="#try"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try&lt;/h2&gt;
&lt;p&gt;You need Esy, you can install the beta using &lt;a href="https://npmjs.com" rel="nofollow"&gt;npm&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install --global esy@latest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run the &lt;code&gt;esy&lt;/code&gt; command from this project root to install and build dependencies.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can run your editor within the environment (which also includes merlin):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy $EDITOR
$ esy vim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively you can try &lt;a href="https://github.com/jordwalke/vim-reasonml"&gt;vim-reasonml&lt;/a&gt;
which loads esy project environments automatically.&lt;/p&gt;
&lt;p&gt;After you make some changes to source code, you can re-run project's build
again with the same simple &lt;code&gt;esy&lt;/code&gt; command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate documentation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy doc
$ esy open '#{self.target_dir}/default/_doc/_html/index.html'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Shell into environment:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy shell
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run the test suite with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy test
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-warning" class="anchor" aria-hidden="true" href="#warning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Warning&lt;/h2&gt;
&lt;p&gt;ReWeb is experimental and not for production use! I am still ironing out
the API. But (imho) it looks promising for real-world usage.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>yawaramin</author><guid isPermaLink="false">https://github.com/yawaramin/re-web</guid><pubDate>Mon, 03 Feb 2020 00:02:00 GMT</pubDate></item><item><title>facebook/flow #3 in OCaml, Today</title><link>https://github.com/facebook/flow</link><description>&lt;p&gt;&lt;i&gt;Adds static typing to JavaScript to improve developer productivity and code quality.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-flow---" class="anchor" aria-hidden="true" href="#flow---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flow &lt;a href="https://circleci.com/gh/facebook/flow/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e735dfe6d6a32a0e165375f12c88d23539e5984/68747470733a2f2f636972636c6563692e636f6d2f67682f66616365626f6f6b2f666c6f772f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="Build Status" data-canonical-src="https://circleci.com/gh/facebook/flow/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/Facebook/flow/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c043ecc89663d6909dbbfd393a5ac830194f6aa/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f74687976783669356e6978746f6f636d2f6272616e63682f6d61737465723f7376673d74727565" alt="Windows Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/thyvx6i5nixtoocm/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://discordapp.com/invite/8ezwRUK" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fcb98412a4ab4b75ec6da59a49a21302e2bf4a4b/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3533393630363337363333393733343535382e7376673f6c6162656c3d646973636f7264266c6f676f3d646973636f7264266c6f676f436f6c6f723d7768697465" alt="Join the chat at https://discordapp.com/invite/8ezwRUK" data-canonical-src="https://img.shields.io/discord/539606376339734558.svg?label=discord&amp;amp;logo=discord&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Flow is a static typechecker for JavaScript. To find out more about Flow, check out &lt;a href="https://flow.org/" rel="nofollow"&gt;flow.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For a background on the project, please read &lt;a href="https://flow.org/en/docs/lang/" rel="nofollow"&gt;this overview&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-flow"&gt;Using Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-flows-parser-from-javascript"&gt;Using Flow's parser from JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-flow-from-source"&gt;Building Flow from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#join-the-flow-community"&gt;Join the Flow community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Flow works with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;macOS&lt;/li&gt;
&lt;li&gt;Linux (64-bit)&lt;/li&gt;
&lt;li&gt;Windows (64-bit, Windows 10 recommended)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are &lt;a href="https://github.com/facebook/flow/releases"&gt;binary distributions&lt;/a&gt; for each of these platforms and you can also build it from source on any of them as well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-flow" class="anchor" aria-hidden="true" href="#using-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Flow&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href="https://flow.org/en/docs/install/" rel="nofollow"&gt;installation instructions&lt;/a&gt;, and then &lt;a href="https://flow.org/en/docs/usage/" rel="nofollow"&gt;how to get started&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-flows-parser-from-javascript" class="anchor" aria-hidden="true" href="#using-flows-parser-from-javascript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Flow's parser from JavaScript&lt;/h2&gt;
&lt;p&gt;While Flow is written in OCaml, its parser is available as a compiled-to-JavaScript module published to npm, named &lt;a href="https://www.npmjs.com/package/flow-parser" rel="nofollow"&gt;flow-parser&lt;/a&gt;. &lt;strong&gt;Most end users of Flow
will not need to use this parser directly&lt;/strong&gt;, but JavaScript packages which make use of parsing
Flow-typed JavaScript can use this to generate Flow's syntax tree with annotated types attached.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-flow-from-source" class="anchor" aria-hidden="true" href="#building-flow-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Flow from source&lt;/h2&gt;
&lt;p&gt;Flow is written in OCaml (OCaml 4.07.1 is required).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="https://opam.ocaml.org" rel="nofollow"&gt;&lt;code&gt;opam&lt;/code&gt;&lt;/a&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Mac: &lt;code&gt;brew install opam&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Debian: &lt;code&gt;sudo apt-get install opam&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Other Linux: see &lt;a href="https://opam.ocaml.org/doc/Install.html" rel="nofollow"&gt;opam docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows: see &lt;a href="https://fdopen.github.io/opam-repository-mingw/installation/" rel="nofollow"&gt;OCaml for Windows docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Initialize &lt;code&gt;opam&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;opam init&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Install OCaml and Flow's dependencies:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; from within this git checkout&lt;/span&gt;
opam switch create &lt;span class="pl-c1"&gt;.&lt;/span&gt; --deps-only -y&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Build the &lt;code&gt;flow&lt;/code&gt; binary:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;eval&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;opam env&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;
make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This produces the &lt;code&gt;bin/flow&lt;/code&gt; binary.&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;Build &lt;code&gt;flow.js&lt;/code&gt; (optional):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;opam install -y js_of_ocaml.3.4.0
make js&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This produces &lt;code&gt;bin/flow.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The Flow parser can also be compiled to JavaScript. &lt;a href="src/parser/README.md"&gt;Read how here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-the-tests" class="anchor" aria-hidden="true" href="#running-the-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the tests&lt;/h2&gt;
&lt;p&gt;To run the tests, first compile flow using &lt;code&gt;make&lt;/code&gt;. Then run &lt;code&gt;bash ./runtests.sh bin/flow&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;There is a &lt;code&gt;make test&lt;/code&gt; target that compiles and runs tests.&lt;/p&gt;
&lt;p&gt;To run a subset of the tests you can pass a second argument to the &lt;code&gt;runtests.sh&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;For example: &lt;code&gt;bash runtests.sh bin/flow class | grep -v 'SKIP'&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-join-the-flow-community" class="anchor" aria-hidden="true" href="#join-the-flow-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join the Flow community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://flow.org/" rel="nofollow"&gt;https://flow.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Discord: &lt;a href="https://discord.gg/8ezwRUK" rel="nofollow"&gt;https://discord.gg/8ezwRUK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;irc: #flowtype on Freenode&lt;/li&gt;
&lt;li&gt;Twitter: follow &lt;a href="https://twitter.com/flowtype" rel="nofollow"&gt;@flowtype&lt;/a&gt; and &lt;a href="https://twitter.com/hashtag/flowtype" rel="nofollow"&gt;#flowtype&lt;/a&gt; to keep up with the latest Flow news.&lt;/li&gt;
&lt;li&gt;Stack Overflow: Ask a question with the &lt;a href="https://stackoverflow.com/questions/tagged/flowtype" rel="nofollow"&gt;flowtype tag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Flow is MIT-licensed (&lt;a href="https://github.com/facebook/flow/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt;). The &lt;a href="https://flow.org/" rel="nofollow"&gt;website&lt;/a&gt; and &lt;a href="https://flow.org/en/docs/" rel="nofollow"&gt;documentation&lt;/a&gt; are licensed under the Creative Commons Attribution 4.0 license (&lt;a href="https://github.com/facebook/flow/blob/master/website/LICENSE-DOCUMENTATION"&gt;website/LICENSE-DOCUMENTATION&lt;/a&gt;).&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/flow</guid><pubDate>Mon, 03 Feb 2020 00:03:00 GMT</pubDate></item><item><title>mirage/irmin #4 in OCaml, Today</title><link>https://github.com/mirage/irmin</link><description>&lt;p&gt;&lt;i&gt;Irmin is a distributed database that follows the same design principles as Git&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-irmin---a-distributed-database-built-on-the-same-principles-as-git" class="anchor" aria-hidden="true" href="#irmin---a-distributed-database-built-on-the-same-principles-as-git"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Irmin - A distributed database built on the same principles as Git&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/mirage/irmin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57c420e7445128478cbaf4e178e83080445b763d/68747470733a2f2f7472617669732d63692e6f72672f6d69726167652f69726d696e2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/mirage/irmin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://mirage.github.io/irmin/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d07123ecf3beab908f5cb60b93d85d5d6e276e61/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f632d6f6e6c696e652d626c75652e737667" alt="docs" data-canonical-src="https://img.shields.io/badge/doc-online-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Irmin is an OCaml library for building mergeable, branchable distributed data stores.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Built-in snapshotting&lt;/strong&gt; - backup and restore&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Storage agnostic&lt;/strong&gt; - you can use Irmin on top of your own storage layer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Custom datatypes&lt;/strong&gt; - (de)serialization for custom data types, derivable via &lt;a href="./README_PPX.md"&gt;&lt;code&gt;ppx_irmin&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Highly portable&lt;/strong&gt; - runs anywhere from Linux to web browsers and Xen unikernels&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Git compatibility&lt;/strong&gt; - &lt;code&gt;irmin-git&lt;/code&gt; uses an on-disk format that can be inspected and modified using Git&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dynamic behavior&lt;/strong&gt; - allows the users to define custom merge functions, use in-memory transactions (to keep track of reads as well as writes) and to define event-driven workflows using a notification mechanism&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;p&gt;Documentation can be found online at &lt;a href="https://mirage.github.io/irmin" rel="nofollow"&gt;https://mirage.github.io/irmin&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;To install Irmin, the command-line tool and all optional dependencies using &lt;a href="https://github.com/ocaml/opam"&gt;opam&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;opam install irmin-unix
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A minimal installation, with no storage backends can be installed by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;opam install irmin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To only install the in-memory storage backend:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;opam install irmin-mem
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following packages have been made available on &lt;code&gt;opam&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;irmin&lt;/code&gt; - the base package, no storage implementations&lt;/li&gt;
&lt;li&gt;&lt;code&gt;irmin-chunk&lt;/code&gt; - chunked storage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;irmin-fs&lt;/code&gt; - filesystem-based storage using &lt;code&gt;bin_prot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;irmin-git&lt;/code&gt; - Git compatible storage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;irmin-graphql&lt;/code&gt; - GraphQL server&lt;/li&gt;
&lt;li&gt;&lt;code&gt;irmin-http&lt;/code&gt; - a simple REST interface&lt;/li&gt;
&lt;li&gt;&lt;code&gt;irmin-mem&lt;/code&gt; - in-memory storage implementation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;irmin-mirage&lt;/code&gt; - mirage compatibility&lt;/li&gt;
&lt;li&gt;&lt;code&gt;irmin-mirage-git&lt;/code&gt; - Git compatible storage for mirage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;irmin-mirage-graphql&lt;/code&gt; - mirage compatible GraphQL server&lt;/li&gt;
&lt;li&gt;&lt;code&gt;irmin-unix&lt;/code&gt; - unix compatibility&lt;/li&gt;
&lt;li&gt;&lt;code&gt;irmin-pack&lt;/code&gt; - compressed, on-disk, posix backend&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ppx_irmin&lt;/code&gt; - PPX deriver for Irmin content types (see &lt;a href="./README_PPX.md"&gt;README_PPX.md&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information about an individual package consult the &lt;a href="https://mirage.github.io/irmin" rel="nofollow"&gt;online documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h3&gt;
&lt;p&gt;Below is a simple example of setting a key and getting the value out of a Git based, filesystem-backed store.&lt;/p&gt;
&lt;div class="highlight highlight-source-ocaml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;open&lt;/span&gt; &lt;span class="pl-c1"&gt;Lwt.Infix&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Irmin store with string contents &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;Store&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Irmin_unix.Git.FS.&lt;/span&gt;&lt;span class="pl-en"&gt;KV&lt;/span&gt;(&lt;span class="pl-c1"&gt;Irmin.Contents.&lt;/span&gt;&lt;span class="pl-en"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Database configuration &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Irmin_git.&lt;/span&gt;config &lt;span class="pl-ent"&gt;~bare:&lt;/span&gt;&lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/irmin/test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Commit author &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; author &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Example &amp;lt;example@example.com&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Commit information &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-en"&gt;info&lt;/span&gt; &lt;span class="pl-v"&gt;fmt&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Irmin_unix.&lt;/span&gt;info &lt;span class="pl-ent"&gt;~author&lt;/span&gt; fmt

&lt;span class="pl-k"&gt;let&lt;/span&gt; main &lt;span class="pl-k"&gt;=&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Open the repo &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Store.Repo.&lt;/span&gt;v config &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Load the master branch &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Store.&lt;/span&gt;master &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-v"&gt;t&lt;/span&gt; -&amp;gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Set key "foo/bar" to "testing 123" &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Store.&lt;/span&gt;set t &lt;span class="pl-ent"&gt;~info:&lt;/span&gt;(info &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Updating foo/bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testing 123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-v"&gt;()&lt;/span&gt; -&amp;gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Get key "foo/bar" and print it to stdout &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Store.&lt;/span&gt;get t [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;|=&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-v"&gt;x&lt;/span&gt; -&amp;gt;
    &lt;span class="pl-c1"&gt;Printf.&lt;/span&gt;printf &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo/bar =&amp;gt; '%s'&lt;span class="pl-c1"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; x

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Run the program &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;()&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Lwt_main.&lt;/span&gt;run main&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The example is contained in &lt;code&gt;examples/readme.ml&lt;/code&gt;. It can be compiled and executed with dune:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ dune build examples/readme.exe
$ dune &lt;span class="pl-c1"&gt;exec&lt;/span&gt; examples/readme.exe
foo/bar =&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;testing 123&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;examples/&lt;/code&gt; directory also contains more advanced examples, which can be executed in the same way.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command-line&lt;/h3&gt;
&lt;p&gt;The same thing can also be accomplished using &lt;code&gt;irmin&lt;/code&gt;, the command-line application installed with &lt;code&gt;irmin-unix&lt;/code&gt;, by running:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root: .&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; irmin.yml
$ irmin init
$ irmin &lt;span class="pl-c1"&gt;set&lt;/span&gt; foo/bar &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;testing 123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
$ irmin get foo/bar&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;irmin.yml&lt;/code&gt; allows for &lt;code&gt;irmin&lt;/code&gt; flags to be set on a per-directory basis. You can also set flags globally using &lt;code&gt;$HOME/.irmin/config.yml&lt;/code&gt;. Run &lt;code&gt;irmin help irmin.yml&lt;/code&gt; for further details.&lt;/p&gt;
&lt;p&gt;Also see &lt;code&gt;irmin --help&lt;/code&gt; for list of all commands and either &lt;code&gt;irmin &amp;lt;command&amp;gt; --help&lt;/code&gt; or &lt;code&gt;irmin help &amp;lt;command&amp;gt;&lt;/code&gt; for more help with a specific command.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues&lt;/h3&gt;
&lt;p&gt;Feel free to to report any issues using the &lt;a href="https://github.com/mirage/irmin/issues"&gt;Github bugtracker&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-conditions" class="anchor" aria-hidden="true" href="#conditions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditions&lt;/h3&gt;
&lt;p&gt;See the &lt;a href="./LICENSE.md"&gt;LICENSE file&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Development of Irmin was supported in part by the EU FP7 User-Centric Networking project, Grant No. 611001.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mirage</author><guid isPermaLink="false">https://github.com/mirage/irmin</guid><pubDate>Mon, 03 Feb 2020 00:04:00 GMT</pubDate></item><item><title>aantron/luv #5 in OCaml, Today</title><link>https://github.com/aantron/luv</link><description>&lt;p&gt;&lt;i&gt;Cross-platform asynchronous I/O and system calls&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-luv----" class="anchor" aria-hidden="true" href="#luv----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Luv    &lt;a href="https://github.com/aantron/luv/releases"&gt;&lt;img src="https://camo.githubusercontent.com/9415abf13f81080f93efeb69ffdf36ad3c9358bd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d302e352e302d626c75652e737667" alt="version 0.5.0" data-canonical-src="https://img.shields.io/badge/version-0.5.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/libuv/libuv/releases"&gt;&lt;img src="https://camo.githubusercontent.com/7afda354149f428f6401656325942fd41ae4e251/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c696275762d312e33342e322d626c75652e737667" alt="libuv 1.34.2" data-canonical-src="https://img.shields.io/badge/libuv-1.34.2-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/aantron/luv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f24b0812753f980842bd5b4ee625b5e20fb27547/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f61616e74726f6e2f6c75762f6d61737465722e7376673f6c6162656c3d747261766973" alt="Travis status" data-canonical-src="https://img.shields.io/travis/aantron/luv/master.svg?label=travis" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/aantron/luv"&gt;&lt;strong&gt;Luv&lt;/strong&gt;&lt;/a&gt; is an OCaml/ReasonML binding to &lt;a href="https://github.com/libuv/libuv"&gt;libuv&lt;/a&gt;, the
cross-platform C library that does asynchronous I/O in Node.js and runs Node's
main loop.&lt;/p&gt;
&lt;p&gt;Here's an example, which retrieves the Google search page:&lt;/p&gt;
&lt;div class="highlight highlight-source-ocaml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;()&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Luv.DNS.&lt;/span&gt;getaddrinfo &lt;span class="pl-ent"&gt;~family:&lt;/span&gt;&lt;span class="pl-en"&gt;`INET&lt;/span&gt; &lt;span class="pl-ent"&gt;~node:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-ent"&gt;~service:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;80&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;()&lt;/span&gt;
      &lt;span class="pl-k"&gt;begin&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-v"&gt;result&lt;/span&gt; -&amp;gt;

    &lt;span class="pl-k"&gt;let&lt;/span&gt; address &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;List.&lt;/span&gt;hd (&lt;span class="pl-c1"&gt;Stdlib.Result.&lt;/span&gt;get_ok result)).addr &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Luv.TCP.&lt;/span&gt;init &lt;span class="pl-c1"&gt;()&lt;/span&gt; &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Stdlib.Result.&lt;/span&gt;get_ok &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Luv.TCP.&lt;/span&gt;connect socket address &lt;span class="pl-k"&gt;begin&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-v"&gt;_&lt;/span&gt; -&amp;gt;

      &lt;span class="pl-c1"&gt;Luv.Stream.&lt;/span&gt;write socket [&lt;span class="pl-c1"&gt;Luv.Buffer.&lt;/span&gt;from_string &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GET / HTTP/1.1&lt;span class="pl-c1"&gt;\r\n\r\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        (&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-v"&gt;_&lt;/span&gt; &lt;span class="pl-v"&gt;_&lt;/span&gt; -&amp;gt; &lt;span class="pl-c1"&gt;Luv.Stream.&lt;/span&gt;shutdown socket ignore);

      &lt;span class="pl-c1"&gt;Luv.Stream.&lt;/span&gt;read_start socket (&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-en"&gt;Error&lt;/span&gt; &lt;span class="pl-en"&gt;`EOF&lt;/span&gt; -&amp;gt; &lt;span class="pl-c1"&gt;Luv.Handle.&lt;/span&gt;close socket ignore
        &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-en"&gt;Error&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; -&amp;gt; exit &lt;span class="pl-c1"&gt;2&lt;/span&gt;
        &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-en"&gt;Ok&lt;/span&gt; &lt;span class="pl-v"&gt;response&lt;/span&gt; -&amp;gt; print_string (&lt;span class="pl-c1"&gt;Luv.Buffer.&lt;/span&gt;to_string response))

    end
  end;

  &lt;span class="pl-c1"&gt;Luv.Loop.&lt;/span&gt;run &lt;span class="pl-c1"&gt;()&lt;/span&gt; &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; ignore&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;libuv does more than just asynchronous I/O. It also supports
&lt;a href="https://aantron.github.io/luv/processes.html" rel="nofollow"&gt;multiprocessing&lt;/a&gt; and &lt;a href="https://aantron.github.io/luv/threads.html" rel="nofollow"&gt;multithreading&lt;/a&gt;. You can even &lt;a href="https://aantron.github.io/luv/threads.html#multiple-event-loops" rel="nofollow"&gt;run
multiple async I/O loops, in different threads&lt;/a&gt;. libuv wraps a lot of
other functionality, and exposes a &lt;a href="https://aantron.github.io/luv/luv/index.html#api-reference" rel="nofollow"&gt;comprehensive operating system API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Indeed, Luv does not depend on &lt;a href="https://caml.inria.fr/pub/docs/manual-ocaml/libref/Unix.html" rel="nofollow"&gt;&lt;code&gt;Unix&lt;/code&gt;&lt;/a&gt;. It is an alternative operating
system API. Nonetheless, Luv and &lt;code&gt;Unix&lt;/code&gt; can coexist readily in one program.&lt;/p&gt;
&lt;p&gt;Because libuv is a major component of Node.js, it is
&lt;a href="https://github.com/libuv/libuv/blob/master/SUPPORTED_PLATFORMS.md#readme"&gt;cross-platform&lt;/a&gt; and &lt;a href="https://github.com/libuv/libuv/blob/master/MAINTAINERS.md#readme"&gt;well-maintained&lt;/a&gt;. Luv, being a
fairly thin binding, inherits these properties.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Luv takes care of the tricky parts of dealing with libuv from OCaml:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Memory management&lt;/strong&gt; — Luv keeps track of OCaml objects that have been
passed to libuv, and are otherwise referenced only by C callbacks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The OCaml runtime lock&lt;/strong&gt; — multithreaded Luv programs are safe.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API problems&lt;/strong&gt; — where libuv is forced to offer difficult APIs due to
the limitations of C, Luv provides more natural APIs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The build&lt;/strong&gt; — when Luv is installed, it builds libuv, so users don't
have to figure out how to do it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Basically, when wrapped in Luv, libuv looks like any normal OCaml library, with
the kind of usage functional programmers expect.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;One of the design goals of Luv is to be easy to integrate into larger libraries,
such as &lt;a href="https://github.com/ocsigen/lwt#readme"&gt;Lwt&lt;/a&gt;. To that end, Luv is...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Minimalist&lt;/strong&gt; — Luv only takes care of inherent libuv headaches, such
as memory management, building as little else as possible over libuv.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unopinionated&lt;/strong&gt; — Luv avoids committing to design decisions beyond
those dictated by libuv and OCaml.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maintainable&lt;/strong&gt; — Luv uses &lt;a href="https://github.com/ocamllabs/ocaml-ctypes#readme"&gt;Ctypes&lt;/a&gt; to minimize the amount of C
code in this repo, and &lt;a href="https://github.com/aantron/luv/tree/master/src/c/vendor"&gt;vendors&lt;/a&gt; libuv to avoid versioning issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Luv is &lt;a href="https://github.com/aantron/luv/tree/master/test"&gt;thoroughly tested&lt;/a&gt;. Apart from checking return values and I/O
effects, the test cases also check for memory leaks, invalid references, and
potential issues with multithreading.&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;opam install luv
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aantron.github.io/luv/" rel="nofollow"&gt;User guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aantron.github.io/luv/luv/index.html#api-reference" rel="nofollow"&gt;API reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aantron/luv/tree/master/example"&gt;Examples&lt;/a&gt; — explained in the &lt;a href="https://aantron.github.io/luv/" rel="nofollow"&gt;user guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.libuv.org/en/v1.x/" rel="nofollow"&gt;libuv manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-experimenting" class="anchor" aria-hidden="true" href="#experimenting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Experimenting&lt;/h2&gt;
&lt;p&gt;You can run any example by cloning the repo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/aantron/luv.git --recursive
cd luv
opam install --deps-only .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Note: the clone &lt;em&gt;has&lt;/em&gt; to be recursive, because libuv is vendored using a git
module.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Then, to run, say, &lt;a href="https://github.com/aantron/luv/blob/master/example/delay.ml"&gt;&lt;code&gt;delay.ml&lt;/code&gt;&lt;/a&gt;...&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dune exec example/delay.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first time you do this, it will take a couple minutes, because Luv will
build libuv.&lt;/p&gt;
&lt;p&gt;You can add your own experiments to the &lt;a href="https://github.com/aantron/luv/tree/master/example"&gt;&lt;code&gt;example/&lt;/code&gt;&lt;/a&gt; directory. To run
them, add the module name to &lt;a href="https://github.com/aantron/luv/blob/master/example/dune"&gt;&lt;code&gt;example/dune&lt;/code&gt;&lt;/a&gt;, and then run them
like any other example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dune exec example/my_test.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, you can try Luv in a REPL by installing &lt;a href="https://github.com/ocaml-community/utop"&gt;utop&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;opam install --unset-root utop
dune utop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you get the REPL prompt, try running &lt;code&gt;Luv.Env.environ ();;&lt;/code&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-future" class="anchor" aria-hidden="true" href="#future"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Future&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; A "post-compose" functor that applies a transformation to the whole API,
for globally converting callbacks to promises, changing the error handling
strategy, etc. Prototype was &lt;a href="https://github.com/aantron/luv/blob/0eae7f30ef99157bda77c62e0cb82169410de583/src/promisify_signatures.ml"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Integration with &lt;a href="https://github.com/ocsigen/lwt#readme"&gt;Lwt&lt;/a&gt;. There was an old &lt;a href="https://github.com/aantron/luv/blob/0eae7f30ef99157bda77c62e0cb82169410de583/example/http_get_lwt/http_get_lwt.ml"&gt;example&lt;/a&gt;
that used the early post-compose functor and a &lt;a href="https://github.com/aantron/luv/blob/0eae7f30ef99157bda77c62e0cb82169410de583/src/lwt/luv_lwt.ml"&gt;Luv-based Lwt event
loop&lt;/a&gt;.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Full Windows support. The code should already be portable, but the repo
needs a proper testing and CI setup for genuine support, and libuv build
commands may need adjustment.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Cross-compilation support. This will probably require more care in how Luv
builds libuv.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Luv could make multithreaded event-driven programming very easy by lazily
initializing a loop for each thread, and storing the reference to it in a TLS
key that Luv uses internally. This could be especially powerful once OCaml has a
genuine multicore runtime.&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Luv has several pieces, with slightly different permissive licenses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Luv itself is under the &lt;a href="https://github.com/aantron/luv/blob/master/LICENSE.md"&gt;MIT license&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;This repo links to libuv with a git module. However, a release archive will
generally include the full libuv source. Portions of libuv are variously
&lt;a href="https://github.com/libuv/libuv/blob/v1.x/LICENSE"&gt;licensed&lt;/a&gt; under the MIT, 2-clause BSD, 3-clause BSD, and ISC
licenses.&lt;/li&gt;
&lt;li&gt;Similarly, this repo links to &lt;a href="https://gyp.gsrc.io/" rel="nofollow"&gt;gyp&lt;/a&gt;, which is part of the libuv build
process, and is included in Luv release archives. gyp is
&lt;a href="https://chromium.googlesource.com/external/gyp/+/refs/heads/master/LICENSE" rel="nofollow"&gt;licensed&lt;/a&gt; under the 3-clause BSD license.&lt;/li&gt;
&lt;li&gt;The user guide is a very heavily reworked version of &lt;a href="https://github.com/nikhilm/uvbook"&gt;uvbook&lt;/a&gt;,
originally by Nikhil Marathe, which was incorporated into the libuv docs as
the &lt;a href="http://docs.libuv.org/en/v1.x/guide.html" rel="nofollow"&gt;libuv user guide&lt;/a&gt;, and made available under
&lt;a href="https://github.com/aantron/luv/blob/master/docs/LICENSE"&gt;CC BY 4.0&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>aantron</author><guid isPermaLink="false">https://github.com/aantron/luv</guid><pubDate>Mon, 03 Feb 2020 00:05:00 GMT</pubDate></item><item><title>facebook/infer #6 in OCaml, Today</title><link>https://github.com/facebook/infer</link><description>&lt;p&gt;&lt;i&gt;A static analyzer for Java, C, C++, and Objective-C&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-infer-" class="anchor" aria-hidden="true" href="#infer-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Infer &lt;a href="https://travis-ci.org/facebook/infer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e47070c2b38b4502e7b8b397206b71f39b8d1667/68747470733a2f2f7472617669732d63692e6f72672f66616365626f6f6b2f696e6665722e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/facebook/infer.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://fbinfer.com/" rel="nofollow"&gt;Infer&lt;/a&gt; is a static analysis tool for Java,
C++, Objective-C, and C. Infer is written in &lt;a href="https://ocaml.org/" rel="nofollow"&gt;OCaml&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Read our &lt;a href="http://fbinfer.com/docs/getting-started.html" rel="nofollow"&gt;Getting
Started&lt;/a&gt; page for
details on how to install packaged versions of Infer. To build Infer
from source, see &lt;a href="./INSTALL.md"&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See &lt;a href="./CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Infer is MIT-licensed.&lt;/p&gt;
&lt;p&gt;Note: Enabling Java support may require you to download and install
components licensed under the GPL.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/infer</guid><pubDate>Mon, 03 Feb 2020 00:06:00 GMT</pubDate></item><item><title>ocaml/dune #7 in OCaml, Today</title><link>https://github.com/ocaml/dune</link><description>&lt;p&gt;&lt;i&gt;A composable build system for OCaml.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dune---a-composable-build-system" class="anchor" aria-hidden="true" href="#dune---a-composable-build-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dune - A composable build system&lt;/h1&gt;
&lt;p&gt;Dune is a build system designed for OCaml/Reason projects only. It
focuses on providing the user with a consistent experience and takes
care of most of the low-level details of OCaml compilation. All you
have to do is provide a description of your project and dune will
do the rest.&lt;/p&gt;
&lt;p&gt;The scheme it implements is inspired from the one used inside Jane
Street and adapted to the open source world. It has matured over a
long time and is used daily by hundreds of developers, which means
that it is highly tested and productive.&lt;/p&gt;
&lt;p&gt;Dune comes with a &lt;a href="https://dune.readthedocs.io/en/latest/" rel="nofollow"&gt;manual&lt;/a&gt;. If you want to get started
without reading too much, you can look at the &lt;a href="https://dune.readthedocs.io/en/latest/quick-start.html" rel="nofollow"&gt;quick start
guide&lt;/a&gt; or watch &lt;a href="https://youtu.be/BNZhmMAJarw" rel="nofollow"&gt;this introduction video&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/ocaml/dune/tree/master/example"&gt;example&lt;/a&gt; directory contains examples of projects using
dune.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ocaml/dune" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a18f2c6c87d31d01ba1e66df4fa4c2995a098960/68747470733a2f2f7472617669732d63692e6f72672f6f63616d6c2f64756e652e7376673f6272616e63683d6d6173746572" alt="Travis status" data-canonical-src="https://travis-ci.org/ocaml/dune.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/diml/dune/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c95a76ab0506260fceebba5af5b211abe095373/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f727378617963653232653866326a6b703f7376673d74727565" alt="AppVeyor status" data-canonical-src="https://ci.appveyor.com/api/projects/status/rsxayce22e8f2jkp?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ocaml/dune/releases"&gt;&lt;img src="https://camo.githubusercontent.com/a3d96b9c263240622ec71d3c403b85fe12c8d39f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6f63616d6c2f64756e652e737667" alt="Release" data-canonical-src="https://img.shields.io/github/release/ocaml/dune.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Dune reads project metadata from &lt;code&gt;dune&lt;/code&gt; files, which are either
static files in a simple S-expression syntax or OCaml scripts. It uses
this information to setup build rules, generate configuration files
for development tools such as &lt;a href="https://github.com/ocaml/merlin"&gt;merlin&lt;/a&gt;, handle installation,
etc...&lt;/p&gt;
&lt;p&gt;Dune itself is fast, has very low overhead and supports parallel
builds on all platforms. It has no system dependencies: all you need
to build dune and packages using dune is OCaml. You don't need
&lt;code&gt;make&lt;/code&gt; or &lt;code&gt;bash&lt;/code&gt; as long as the packages themselves don't use &lt;code&gt;bash&lt;/code&gt;
explicitly.&lt;/p&gt;
&lt;p&gt;In particular, one can install OCaml on Windows with a binary installer
and then use only the Windows Console to build dune and packages
using dune.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-strengths" class="anchor" aria-hidden="true" href="#strengths"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strengths&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-composable" class="anchor" aria-hidden="true" href="#composable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Composable&lt;/h3&gt;
&lt;p&gt;Take n repositories that use dune, arrange them in any way on the
file system and the result is still a single repository that dune
knows how to build at once.&lt;/p&gt;
&lt;p&gt;This make simultaneous development on multiple packages trivial.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gracefully-handles-multi-package-repositories" class="anchor" aria-hidden="true" href="#gracefully-handles-multi-package-repositories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gracefully handles multi-package repositories&lt;/h3&gt;
&lt;p&gt;Dune knows how to handle repositories containing several
packages. When building via &lt;a href="https://opam.ocaml.org" rel="nofollow"&gt;opam&lt;/a&gt;, it is able to correctly use
libraries that were previously installed even if they are already
present in the source tree.&lt;/p&gt;
&lt;p&gt;The magic invocation is:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ dune build --only-packages &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;package-name&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; @install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-against-several-configurations-at-once" class="anchor" aria-hidden="true" href="#building-against-several-configurations-at-once"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building against several configurations at once&lt;/h3&gt;
&lt;p&gt;Dune is able to build a given source code repository against
several configurations simultaneously. This helps maintaining packages
across several versions of OCaml as you can test them all at once
without hassle.&lt;/p&gt;
&lt;p&gt;In particular, this makes it easy to handle &lt;a href="https://dune.readthedocs.io/en/latest/advanced-topics.html#cross-compilation" rel="nofollow"&gt;cross-compilation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This feature requires &lt;a href="https://opam.ocaml.org" rel="nofollow"&gt;opam&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Dune requires OCaml version 4.07.0 to build itself and can build OCaml
projects using ocaml 4.02.3 or greater.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;The recommended way to install dune is via the &lt;a href="https://opam.ocaml.org" rel="nofollow"&gt;opam package manager&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ opam install dune&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also build it manually with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make
$ make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do not have &lt;code&gt;make&lt;/code&gt;, you can do the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ocaml bootstrap.ml
$ ./dune.exe build -p dune --profile dune-bootstrap
$ ./dune.exe install dune&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first command builds the &lt;code&gt;dune.exe&lt;/code&gt; binary. The second builds the
additional files that are installed by dune, such as the man pages, and
the last simply installs all of that on the system.&lt;/p&gt;
&lt;p&gt;Note that unless you ran the optional &lt;code&gt;./configure&lt;/code&gt; script, you can
simply copy &lt;code&gt;dune.exe&lt;/code&gt; anywhere and it will just work. &lt;code&gt;dune&lt;/code&gt; is
fully relocatable and discovers its environment at runtime rather than
hard-coding it at compilation time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;If you have questions about dune, you can send an email to
&lt;a href="mailto:ocaml-core@googlegroups.com"&gt;ocaml-core@googlegroups.com&lt;/a&gt; or &lt;a href="https://github.com/ocaml/dune/issues"&gt;open a ticket on github&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-migration-from-jbuilder" class="anchor" aria-hidden="true" href="#migration-from-jbuilder"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migration from jbuilder&lt;/h2&gt;
&lt;p&gt;Dune was formerly known as jbuilder. Migration from jbuilder to dune is
described in the &lt;a href="http://dune.readthedocs.io/en/latest/migration.html" rel="nofollow"&gt;manual&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;Dune is now fairly stable and is used by the majority of packages on
opam. Note that dune retains backward compatibility with Jbuilder, and
in particular existing Jbuilder projects will continue to be buildable
with dune.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ocaml</author><guid isPermaLink="false">https://github.com/ocaml/dune</guid><pubDate>Mon, 03 Feb 2020 00:07:00 GMT</pubDate></item></channel></rss>