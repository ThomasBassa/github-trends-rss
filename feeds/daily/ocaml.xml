<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: OCaml, Today</title><link>https://github.com/trending/ocaml?since=daily</link><description>The top repositories on GitHub for ocaml, measured daily</description><pubDate>Sun, 12 Jan 2020 01:10:13 GMT</pubDate><lastBuildDate>Sun, 12 Jan 2020 01:10:13 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>facebook/flow #1 in OCaml, Today</title><link>https://github.com/facebook/flow</link><description>&lt;p&gt;&lt;i&gt;Adds static typing to JavaScript to improve developer productivity and code quality.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-flow---" class="anchor" aria-hidden="true" href="#flow---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flow &lt;a href="https://circleci.com/gh/facebook/flow/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e735dfe6d6a32a0e165375f12c88d23539e5984/68747470733a2f2f636972636c6563692e636f6d2f67682f66616365626f6f6b2f666c6f772f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="Build Status" data-canonical-src="https://circleci.com/gh/facebook/flow/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/Facebook/flow/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c043ecc89663d6909dbbfd393a5ac830194f6aa/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f74687976783669356e6978746f6f636d2f6272616e63682f6d61737465723f7376673d74727565" alt="Windows Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/thyvx6i5nixtoocm/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://discordapp.com/invite/8ezwRUK" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fcb98412a4ab4b75ec6da59a49a21302e2bf4a4b/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3533393630363337363333393733343535382e7376673f6c6162656c3d646973636f7264266c6f676f3d646973636f7264266c6f676f436f6c6f723d7768697465" alt="Join the chat at https://discordapp.com/invite/8ezwRUK" data-canonical-src="https://img.shields.io/discord/539606376339734558.svg?label=discord&amp;amp;logo=discord&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Flow is a static typechecker for JavaScript. To find out more about Flow, check out &lt;a href="https://flow.org/" rel="nofollow"&gt;flow.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For a background on the project, please read &lt;a href="https://flow.org/en/docs/lang/" rel="nofollow"&gt;this overview&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-flow"&gt;Using Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-flows-parser-from-javascript"&gt;Using Flow's parser from JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-flow-from-source"&gt;Building Flow from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#join-the-flow-community"&gt;Join the Flow community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Flow works with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;macOS&lt;/li&gt;
&lt;li&gt;Linux (64-bit)&lt;/li&gt;
&lt;li&gt;Windows (64-bit, Windows 10 recommended)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are &lt;a href="https://github.com/facebook/flow/releases"&gt;binary distributions&lt;/a&gt; for each of these platforms and you can also build it from source on any of them as well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-flow" class="anchor" aria-hidden="true" href="#using-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Flow&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href="https://flow.org/en/docs/install/" rel="nofollow"&gt;installation instructions&lt;/a&gt;, and then &lt;a href="https://flow.org/en/docs/usage/" rel="nofollow"&gt;how to get started&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-flows-parser-from-javascript" class="anchor" aria-hidden="true" href="#using-flows-parser-from-javascript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Flow's parser from JavaScript&lt;/h2&gt;
&lt;p&gt;While Flow is written in OCaml, its parser is available as a compiled-to-JavaScript module published to npm, named &lt;a href="https://www.npmjs.com/package/flow-parser" rel="nofollow"&gt;flow-parser&lt;/a&gt;. &lt;strong&gt;Most end users of Flow
will not need to use this parser directly&lt;/strong&gt;, but JavaScript packages which make use of parsing
Flow-typed JavaScript can use this to generate Flow's syntax tree with annotated types attached.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-flow-from-source" class="anchor" aria-hidden="true" href="#building-flow-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Flow from source&lt;/h2&gt;
&lt;p&gt;Flow is written in OCaml (OCaml 4.07.1 is required).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="https://opam.ocaml.org" rel="nofollow"&gt;&lt;code&gt;opam&lt;/code&gt;&lt;/a&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Mac: &lt;code&gt;brew install opam&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Debian: &lt;code&gt;sudo apt-get install opam&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Other Linux: see &lt;a href="https://opam.ocaml.org/doc/Install.html" rel="nofollow"&gt;opam docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows: see &lt;a href="https://fdopen.github.io/opam-repository-mingw/installation/" rel="nofollow"&gt;OCaml for Windows docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Initialize &lt;code&gt;opam&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;opam init&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Install OCaml and Flow's dependencies:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; from within this git checkout&lt;/span&gt;
opam switch create &lt;span class="pl-c1"&gt;.&lt;/span&gt; --deps-only -y&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Build the &lt;code&gt;flow&lt;/code&gt; binary:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;eval&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;opam env&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;
make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This produces the &lt;code&gt;bin/flow&lt;/code&gt; binary.&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;Build &lt;code&gt;flow.js&lt;/code&gt; (optional):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;opam install -y js_of_ocaml.3.4.0
make js&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This produces &lt;code&gt;bin/flow.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The Flow parser can also be compiled to JavaScript. &lt;a href="src/parser/README.md"&gt;Read how here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-the-tests" class="anchor" aria-hidden="true" href="#running-the-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the tests&lt;/h2&gt;
&lt;p&gt;To run the tests, first compile flow using &lt;code&gt;make&lt;/code&gt;. Then run &lt;code&gt;bash ./runtests.sh bin/flow&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;There is a &lt;code&gt;make test&lt;/code&gt; target that compiles and runs tests.&lt;/p&gt;
&lt;p&gt;To run a subset of the tests you can pass a second argument to the &lt;code&gt;runtests.sh&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;For example: &lt;code&gt;bash runtests.sh bin/flow class | grep -v 'SKIP'&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-join-the-flow-community" class="anchor" aria-hidden="true" href="#join-the-flow-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join the Flow community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://flow.org/" rel="nofollow"&gt;https://flow.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Discord: &lt;a href="https://discord.gg/8ezwRUK" rel="nofollow"&gt;https://discord.gg/8ezwRUK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;irc: #flowtype on Freenode&lt;/li&gt;
&lt;li&gt;Twitter: follow &lt;a href="https://twitter.com/flowtype" rel="nofollow"&gt;@flowtype&lt;/a&gt; and &lt;a href="https://twitter.com/hashtag/flowtype" rel="nofollow"&gt;#flowtype&lt;/a&gt; to keep up with the latest Flow news.&lt;/li&gt;
&lt;li&gt;Stack Overflow: Ask a question with the &lt;a href="https://stackoverflow.com/questions/tagged/flowtype" rel="nofollow"&gt;flowtype tag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Flow is MIT-licensed (&lt;a href="https://github.com/facebook/flow/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt;). The &lt;a href="https://flow.org/" rel="nofollow"&gt;website&lt;/a&gt; and &lt;a href="https://flow.org/en/docs/" rel="nofollow"&gt;documentation&lt;/a&gt; are licensed under the Creative Commons Attribution 4.0 license (&lt;a href="https://github.com/facebook/flow/blob/master/website/LICENSE-DOCUMENTATION"&gt;website/LICENSE-DOCUMENTATION&lt;/a&gt;).&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/flow</guid><pubDate>Sun, 12 Jan 2020 00:01:00 GMT</pubDate></item><item><title>facebook/reason #2 in OCaml, Today</title><link>https://github.com/facebook/reason</link><description>&lt;p&gt;&lt;i&gt;Simple, fast &amp; type safe code that leverages the JavaScript &amp; OCaml ecosystems&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-reason" class="anchor" aria-hidden="true" href="#reason"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reason&lt;/h1&gt;
&lt;p&gt;Simple, fast &amp;amp; type safe code that leverages the JavaScript &amp;amp; OCaml ecosystems.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/reasonml/reason/_build/latest?definitionId=2?branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b97bbf925249c6014ca3d12e82ccb0f73a6a371/68747470733a2f2f6465762e617a7572652e636f6d2f726561736f6e6d6c2f726561736f6e2f5f617069732f6275696c642f7374617475732f66616365626f6f6b2e726561736f6e3f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/reasonml/reason/_apis/build/status/facebook.reason?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/facebook/reason/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fde259786175dc2cab2d6f7ac7be92a1fb68c4bf/68747470733a2f2f636972636c6563692e636f6d2f67682f66616365626f6f6b2f726561736f6e2f747265652f6d61737465722e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/facebook/reason/tree/master.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/reasonml" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/df90d0a5483b57b1c5ef73e5397a921263bbfd5a/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3233353137363635383137353236323732302e7376673f6c6f676f3d646973636f726426636f6c6f72623d626c7565" alt="Chat" data-canonical-src="https://img.shields.io/discord/235176658175262720.svg?logo=discord&amp;amp;colorb=blue" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://reasonml.github.io/docs/en/installation" rel="nofollow"&gt;Getting Started&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://reasonml.github.io/docs/en/community.html" rel="nofollow"&gt;Community&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap--contribution" class="anchor" aria-hidden="true" href="#roadmap--contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://reasonml.github.io/docs/en/roadmap" rel="nofollow"&gt;Roadmap &amp;amp; Contribution&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-documentations" class="anchor" aria-hidden="true" href="#documentations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentations&lt;/h3&gt;
&lt;p&gt;Go to &lt;a href="https://github.com/reasonml/reasonml.github.io"&gt;https://github.com/reasonml/reasonml.github.io&lt;/a&gt; to contribute to the Reason documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-codebase" class="anchor" aria-hidden="true" href="#codebase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Codebase&lt;/h3&gt;
&lt;p&gt;See the &lt;a href="https://github.com/facebook/reason/tree/master/src/README.md"&gt;src folder's README&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-programmatically-using-reason-parser-from-javascript" class="anchor" aria-hidden="true" href="#programmatically-using-reason-parser-from-javascript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Programmatically Using Reason Parser From JavaScript:&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;If you're not using Reason programmatically&lt;/strong&gt;, disregard this section and see the Getting Started guide above. This is for using Reason's &lt;code&gt;refmt&lt;/code&gt; as a third-party library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-javascript-api" class="anchor" aria-hidden="true" href="#javascript-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JavaScript API&lt;/h3&gt;
&lt;p&gt;We expose a &lt;code&gt;refmt.js&lt;/code&gt; for you to use on the web. Again, for local development, please use the native &lt;code&gt;refmt&lt;/code&gt; that comes with the installation &lt;a href="https://reasonml.github.io/docs/en/installation.html" rel="nofollow"&gt;here&lt;/a&gt;. It's an order of magnitude faster than the JS version. Don't use the JS version unless you know what you're doing. Let's keep our ecosystem fast please.&lt;/p&gt;
&lt;p&gt;Aaaanyways, to install &lt;code&gt;refmt.js&lt;/code&gt;: &lt;code&gt;npm install reason&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here's the API, with pseudo type annotations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;parseRE(code: string): astAndComments&lt;/code&gt;: parse Reason code&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parseREI(code: string): astAndComments&lt;/code&gt;: parse Reason interface code&lt;/li&gt;
&lt;li&gt;&lt;code&gt;printRE(data: astAndComments): string&lt;/code&gt;: print Reason code&lt;/li&gt;
&lt;li&gt;&lt;code&gt;printREI(data: astAndComments): string&lt;/code&gt;: print Reason interface code&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parseML(code)&lt;/code&gt;, &lt;code&gt;parseMLI(code)&lt;/code&gt;, &lt;code&gt;printML(data)&lt;/code&gt;, &lt;code&gt;printMLI(data)&lt;/code&gt;: same as above, but for the OCaml syntax&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The type &lt;code&gt;string&lt;/code&gt; is self-descriptive. The type &lt;code&gt;astAndComments&lt;/code&gt; returned by the &lt;code&gt;parse*&lt;/code&gt; functions is an opaque data structure; you will only use it as input to the &lt;code&gt;print*&lt;/code&gt; functions. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;refmt&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;reason&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; convert the ocaml syntax to reason syntax&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;ast&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;refmt&lt;/span&gt;.&lt;span class="pl-en"&gt;parseML&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;let f a = 1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;result&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;refmt&lt;/span&gt;.&lt;span class="pl-en"&gt;printRE&lt;/span&gt;(ast);
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(result); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints `let f = (a) =&amp;gt; 1`&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;parse*&lt;/code&gt; functions potentially throw an error of this shape:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;{
  message&lt;span class="pl-k"&gt;:&lt;/span&gt; string,
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; location can be undefined&lt;/span&gt;
  location&lt;span class="pl-k"&gt;:&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; all 1-indexed&lt;/span&gt;
    startLine&lt;span class="pl-k"&gt;:&lt;/span&gt; number, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; inclusive&lt;/span&gt;
    startLineStartChar&lt;span class="pl-k"&gt;:&lt;/span&gt; number, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; inclusive&lt;/span&gt;
    endLine&lt;span class="pl-k"&gt;:&lt;/span&gt; number, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; inclusive&lt;/span&gt;
    endLineEndChar&lt;span class="pl-k"&gt;:&lt;/span&gt; number, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; **exclusive**&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;refmt.js&lt;/code&gt; requires the node module &lt;code&gt;fs&lt;/code&gt;, which of course isn't available on the web. If using webpack, to avoid the missing module error, put &lt;code&gt;node: { fs: 'empty' }&lt;/code&gt; into &lt;code&gt;webpack.config.js&lt;/code&gt;. See &lt;a href="https://webpack.js.org/configuration/node/#other-node-core-libraries" rel="nofollow"&gt;https://webpack.js.org/configuration/node/#other-node-core-libraries&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;refmt.js&lt;/code&gt; is minified for you through Closure Compiler, with an accompanying &lt;code&gt;refmt.map&lt;/code&gt;. The size is 2.3MB &lt;strong&gt;but don't get fooled; it gzips down to just 345KB&lt;/strong&gt;. This way, you can carry it around in your own blog and use it to create an interactive refmt playground, without worrying about imposing bandwidth overhead to your readers. Again, keep our ecosystem fast and lean.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-native-api" class="anchor" aria-hidden="true" href="#native-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Native API&lt;/h3&gt;
&lt;p&gt;We're spoiled with more APIs on the native side. To use Reason from OPAM as a native library, you have &lt;a href="https://github.com/facebook/reason/blob/5a253048e8077c4597a8935adbed7aa22bfff647/src/reason_toolchain.ml#L141-L157"&gt;these functions&lt;/a&gt;. So:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Reason_toolchain.RE.implementation_with_comments&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Reason_toolchain.RE.interface_with_comments&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Reason_toolchain.RE.print_interface_with_comments&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Reason_toolchain.ML.implementation_with_comments&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;ML&lt;/code&gt; parsing functions might throw &lt;a href="https://caml.inria.fr/pub/docs/manual-ocaml/compilerlibref/Syntaxerr.html" rel="nofollow"&gt;&lt;code&gt;Syntaxerr.Error error&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;RE&lt;/code&gt; parsing functions might throw:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/reason/blob/6e99ea5aae3791359b1e356060691f7b5b596365/src/reason-parser/reason_syntax_util.ml#L456"&gt;&lt;code&gt;Reason_syntax_util.Error&lt;/code&gt;&lt;/a&gt; (docs on &lt;code&gt;Location.t&lt;/code&gt; &lt;a href="https://caml.inria.fr/pub/docs/manual-ocaml/libref/Location.html" rel="nofollow"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://caml.inria.fr/pub/docs/manual-ocaml/compilerlibref/Syntaxerr.html" rel="nofollow"&gt;&lt;code&gt;Syntaxerr.Error&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/reason/blob/6e99ea5aae3791359b1e356060691f7b5b596365/src/reason-parser/reason_lexer.mll#L84"&gt;&lt;code&gt;Reason_lexer.Error&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-ocaml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; ast_and_comments &lt;span class="pl-k"&gt;=&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Lexing.&lt;/span&gt;from_string &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;let f a =&amp;gt; 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Reason_toolchain.RE.&lt;/span&gt;implementation_with_comments

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;(*&lt;/span&gt; Convert Reason back to OCaml syntax. That'll show these Reason users! &lt;span class="pl-c"&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; ocaml_syntax &lt;span class="pl-k"&gt;=&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Reason_toolchain.ML.&lt;/span&gt;print_implementation_with_comments
    &lt;span class="pl-c1"&gt;Format.&lt;/span&gt;str_formatter
    ast_and_comments;
  &lt;span class="pl-c1"&gt;Format.&lt;/span&gt;flush_str_formatter &lt;span class="pl-c1"&gt;()&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;See Reason license in &lt;a href="LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Works that are forked from other projects are under their original licenses.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credit" class="anchor" aria-hidden="true" href="#credit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credit&lt;/h2&gt;
&lt;p&gt;The general structure of &lt;code&gt;refmt&lt;/code&gt; repo was copied from &lt;a href="https://github.com/whitequark/ocaml-m17n"&gt;whitequark's m17n project&lt;/a&gt;, including parts of the &lt;code&gt;README&lt;/code&gt; that instruct how to use this with the OPAM toolchain. Thank you OCaml!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/reason</guid><pubDate>Sun, 12 Jan 2020 00:02:00 GMT</pubDate></item></channel></rss>