<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: OCaml, Today</title><link>https://github.com/trending/ocaml?since=daily</link><description>The top repositories on GitHub for ocaml, measured daily</description><pubDate>Sat, 11 Jan 2020 01:05:35 GMT</pubDate><lastBuildDate>Sat, 11 Jan 2020 01:05:35 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>facebook/flow #1 in OCaml, Today</title><link>https://github.com/facebook/flow</link><description>&lt;p&gt;&lt;i&gt;Adds static typing to JavaScript to improve developer productivity and code quality.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-flow---" class="anchor" aria-hidden="true" href="#flow---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flow &lt;a href="https://circleci.com/gh/facebook/flow/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e735dfe6d6a32a0e165375f12c88d23539e5984/68747470733a2f2f636972636c6563692e636f6d2f67682f66616365626f6f6b2f666c6f772f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="Build Status" data-canonical-src="https://circleci.com/gh/facebook/flow/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/Facebook/flow/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c043ecc89663d6909dbbfd393a5ac830194f6aa/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f74687976783669356e6978746f6f636d2f6272616e63682f6d61737465723f7376673d74727565" alt="Windows Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/thyvx6i5nixtoocm/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://discordapp.com/invite/8ezwRUK" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fcb98412a4ab4b75ec6da59a49a21302e2bf4a4b/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3533393630363337363333393733343535382e7376673f6c6162656c3d646973636f7264266c6f676f3d646973636f7264266c6f676f436f6c6f723d7768697465" alt="Join the chat at https://discordapp.com/invite/8ezwRUK" data-canonical-src="https://img.shields.io/discord/539606376339734558.svg?label=discord&amp;amp;logo=discord&amp;amp;logoColor=white" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Flow is a static typechecker for JavaScript. To find out more about Flow, check out &lt;a href="https://flow.org/" rel="nofollow"&gt;flow.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For a background on the project, please read &lt;a href="https://flow.org/en/docs/lang/" rel="nofollow"&gt;this overview&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-flow"&gt;Using Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-flows-parser-from-javascript"&gt;Using Flow's parser from JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-flow-from-source"&gt;Building Flow from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#join-the-flow-community"&gt;Join the Flow community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Flow works with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;macOS&lt;/li&gt;
&lt;li&gt;Linux (64-bit)&lt;/li&gt;
&lt;li&gt;Windows (64-bit, Windows 10 recommended)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are &lt;a href="https://github.com/facebook/flow/releases"&gt;binary distributions&lt;/a&gt; for each of these platforms and you can also build it from source on any of them as well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-flow" class="anchor" aria-hidden="true" href="#using-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Flow&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href="https://flow.org/en/docs/install/" rel="nofollow"&gt;installation instructions&lt;/a&gt;, and then &lt;a href="https://flow.org/en/docs/usage/" rel="nofollow"&gt;how to get started&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-flows-parser-from-javascript" class="anchor" aria-hidden="true" href="#using-flows-parser-from-javascript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Flow's parser from JavaScript&lt;/h2&gt;
&lt;p&gt;While Flow is written in OCaml, its parser is available as a compiled-to-JavaScript module published to npm, named &lt;a href="https://www.npmjs.com/package/flow-parser" rel="nofollow"&gt;flow-parser&lt;/a&gt;. &lt;strong&gt;Most end users of Flow
will not need to use this parser directly&lt;/strong&gt;, but JavaScript packages which make use of parsing
Flow-typed JavaScript can use this to generate Flow's syntax tree with annotated types attached.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-flow-from-source" class="anchor" aria-hidden="true" href="#building-flow-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Flow from source&lt;/h2&gt;
&lt;p&gt;Flow is written in OCaml (OCaml 4.07.1 is required).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="https://opam.ocaml.org" rel="nofollow"&gt;&lt;code&gt;opam&lt;/code&gt;&lt;/a&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Mac: &lt;code&gt;brew install opam&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Debian: &lt;code&gt;sudo apt-get install opam&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Other Linux: see &lt;a href="https://opam.ocaml.org/doc/Install.html" rel="nofollow"&gt;opam docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows: see &lt;a href="https://fdopen.github.io/opam-repository-mingw/installation/" rel="nofollow"&gt;OCaml for Windows docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Initialize &lt;code&gt;opam&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;opam init&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Install OCaml and Flow's dependencies:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; from within this git checkout&lt;/span&gt;
opam switch create &lt;span class="pl-c1"&gt;.&lt;/span&gt; --deps-only -y&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Build the &lt;code&gt;flow&lt;/code&gt; binary:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;eval&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;opam env&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;
make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This produces the &lt;code&gt;bin/flow&lt;/code&gt; binary.&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;Build &lt;code&gt;flow.js&lt;/code&gt; (optional):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;opam install -y js_of_ocaml.3.4.0
make js&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This produces &lt;code&gt;bin/flow.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The Flow parser can also be compiled to JavaScript. &lt;a href="src/parser/README.md"&gt;Read how here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-the-tests" class="anchor" aria-hidden="true" href="#running-the-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the tests&lt;/h2&gt;
&lt;p&gt;To run the tests, first compile flow using &lt;code&gt;make&lt;/code&gt;. Then run &lt;code&gt;bash ./runtests.sh bin/flow&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;There is a &lt;code&gt;make test&lt;/code&gt; target that compiles and runs tests.&lt;/p&gt;
&lt;p&gt;To run a subset of the tests you can pass a second argument to the &lt;code&gt;runtests.sh&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;For example: &lt;code&gt;bash runtests.sh bin/flow class | grep -v 'SKIP'&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-join-the-flow-community" class="anchor" aria-hidden="true" href="#join-the-flow-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join the Flow community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://flow.org/" rel="nofollow"&gt;https://flow.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Discord: &lt;a href="https://discord.gg/8ezwRUK" rel="nofollow"&gt;https://discord.gg/8ezwRUK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;irc: #flowtype on Freenode&lt;/li&gt;
&lt;li&gt;Twitter: follow &lt;a href="https://twitter.com/flowtype" rel="nofollow"&gt;@flowtype&lt;/a&gt; and &lt;a href="https://twitter.com/hashtag/flowtype" rel="nofollow"&gt;#flowtype&lt;/a&gt; to keep up with the latest Flow news.&lt;/li&gt;
&lt;li&gt;Stack Overflow: Ask a question with the &lt;a href="https://stackoverflow.com/questions/tagged/flowtype" rel="nofollow"&gt;flowtype tag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Flow is MIT-licensed (&lt;a href="https://github.com/facebook/flow/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt;). The &lt;a href="https://flow.org/" rel="nofollow"&gt;website&lt;/a&gt; and &lt;a href="https://flow.org/en/docs/" rel="nofollow"&gt;documentation&lt;/a&gt; are licensed under the Creative Commons Attribution 4.0 license (&lt;a href="https://github.com/facebook/flow/blob/master/website/LICENSE-DOCUMENTATION"&gt;website/LICENSE-DOCUMENTATION&lt;/a&gt;).&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/flow</guid><pubDate>Sat, 11 Jan 2020 00:01:00 GMT</pubDate></item><item><title>yawaramin/re-web #2 in OCaml, Today</title><link>https://github.com/yawaramin/re-web</link><description>&lt;p&gt;&lt;i&gt;Experimental web framework for ReasonML &amp; OCaml&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-reweb---a-type-safe-ergonomic-reasonml-and-ocaml-web-framework-wip" class="anchor" aria-hidden="true" href="#reweb---a-type-safe-ergonomic-reasonml-and-ocaml-web-framework-wip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ReWeb - a type-safe ergonomic ReasonML and OCaml web framework (WIP)&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/yawaramin/re-web/_build/latest?definitionId=1?branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/82fe52cc15167532ce5c73cd02e2dfd4abc36fe1/68747470733a2f2f6465762e617a7572652e636f6d2f7961776172616d696e2f72652d7765622f5f617069732f6275696c642f7374617475732f7961776172616d696e2e72652d7765623f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/yawaramin/re-web/_apis/build/status/yawaramin.re-web?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReWeb is a web framework based on several foundations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The amazing work of the people behind
&lt;a href="https://github.com/inhabitedtype/httpaf"&gt;Httpaf&lt;/a&gt;,
&lt;a href="https://github.com/anmonteiro/ocaml-h2"&gt;H2&lt;/a&gt;, &lt;a href="https://esy.sh/" rel="nofollow"&gt;Esy&lt;/a&gt;,
and others&lt;/li&gt;
&lt;li&gt;The core idea of
&lt;a href="https://monkey.org/~marius/funsrv.pdf" rel="nofollow"&gt;'Your server as a function'&lt;/a&gt;
by Marius Eriksen which was also the idea behind Twitter's Finagle web
stack&lt;/li&gt;
&lt;li&gt;Jasim Basheer's essay
&lt;a href="https://protoship.io/blog/rails-on-ocaml/" rel="nofollow"&gt;'Rails on OCaml'&lt;/a&gt; which
identifies the need for an ergonomic, Rails-like web framework that
still preserves the type safety benefits of OCaml.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ReWeb's main concepts are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Services: a service is a function from a request to a promise of
response (i.e. an asynchronous function).&lt;/li&gt;
&lt;li&gt;Filters: a filter is a function that takes a service as input and
returns a service as output. It can be inserted into the 'request
pipeline' and manipulate the request before the service finally
handles it.&lt;/li&gt;
&lt;li&gt;Server: a server is a function that takes a route (pair of HTTP method
and path list) as input and returns a service as output.&lt;/li&gt;
&lt;li&gt;Type-safe request pipeline: requests have a type parameter that
reveals their 'context' i.e. some data that's stored inside them.
Filters and services must change requests correctly and in the right
order, or the compiler will present type errors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notice that all the main concepts here are just functions. They are all
composeable using just function composition. Services can call other
services. Filters can slot together by calling each other. Servers can
delegate smaller scopes to other servers. See &lt;code&gt;bin/Main.re&lt;/code&gt; for examples
of all of these.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yawaramin.github.io/re-web/re-web/ReWeb/index.html" rel="nofollow"&gt;API Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yawaramin.github.io/re-web/re-web/Manual/index.html" rel="nofollow"&gt;User's Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;Check out the example server in the &lt;code&gt;bin/&lt;/code&gt; directory. The &lt;code&gt;Main.re&lt;/code&gt; file
there is extensively commented with explanations.&lt;/p&gt;
&lt;p&gt;Run the example server:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy bin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Send some requests to it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl localhost:8080/hello
$ curl localhost:8080/auth/hello
$ curl --user 'bob:secret' localhost:8080/auth/hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Go to &lt;a href="http://localhost:8080/login" rel="nofollow"&gt;http://localhost:8080/login&lt;/a&gt; in your browser, etc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-try" class="anchor" aria-hidden="true" href="#try"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try&lt;/h2&gt;
&lt;p&gt;You need Esy, you can install the beta using &lt;a href="https://npmjs.com" rel="nofollow"&gt;npm&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install --global esy@latest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run the &lt;code&gt;esy&lt;/code&gt; command from this project root to install and build dependencies.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can run your editor within the environment (which also includes merlin):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy $EDITOR
$ esy vim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively you can try &lt;a href="https://github.com/jordwalke/vim-reasonml"&gt;vim-reasonml&lt;/a&gt;
which loads esy project environments automatically.&lt;/p&gt;
&lt;p&gt;After you make some changes to source code, you can re-run project's build
again with the same simple &lt;code&gt;esy&lt;/code&gt; command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate documentation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy doc
$ esy open '#{self.target_dir}/default/_doc/_html/index.html'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Shell into environment:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy shell
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run the test suite with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy test
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-warning" class="anchor" aria-hidden="true" href="#warning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Warning&lt;/h2&gt;
&lt;p&gt;ReWeb is experimental and not for production use! I am still ironing out
the API. But (imho) it looks promising for real-world usage.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>yawaramin</author><guid isPermaLink="false">https://github.com/yawaramin/re-web</guid><pubDate>Sat, 11 Jan 2020 00:02:00 GMT</pubDate></item></channel></rss>