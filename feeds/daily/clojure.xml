<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Clojure, Today</title><link>https://github.com/trending/clojure?since=daily</link><description>The top repositories on GitHub for clojure, measured daily</description><pubDate>Mon, 28 Oct 2019 04:49:44 GMT</pubDate><lastBuildDate>Mon, 28 Oct 2019 04:49:44 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>1400</ttl><item><title>clojure/clojurescript #1 in Clojure, Today</title><link>https://github.com/clojure/clojurescript</link><description>&lt;p&gt;&lt;i&gt;Clojure to JS compiler&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Last seen &lt;b&gt;2019-10-28&lt;/b&gt;; First seen &lt;b&gt;2019-10-28&lt;/b&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-what-is-clojurescript" class="anchor" aria-hidden="true" href="#what-is-clojurescript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is ClojureScript?&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://clojurescript.org" rel="nofollow"&gt;ClojureScript&lt;/a&gt; is a compiler for &lt;a href="http://clojure.org" rel="nofollow"&gt;Clojure&lt;/a&gt; that targets JavaScript. It is designed to emit JavaScript code which is compatible with the advanced compilation mode of the &lt;a href="https://developers.google.com/closure/compiler/" rel="nofollow"&gt;Google Closure&lt;/a&gt; optimizing compiler.&lt;/p&gt;
&lt;p&gt;Official web site: &lt;a href="http://clojurescript.org" rel="nofollow"&gt;http://clojurescript.org&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-releases-and-dependency-information" class="anchor" aria-hidden="true" href="#releases-and-dependency-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases and dependency information&lt;/h2&gt;
&lt;p&gt;Latest stable release: 1.10.520&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.clojure%22%20AND%20a%3A%22clojurescript%22" rel="nofollow"&gt;All released versions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://github.com/technomancy/leiningen/"&gt;Leiningen&lt;/a&gt; dependency information:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[org.clojure/clojurescript "1.10.520"]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="http://maven.apache.org" rel="nofollow"&gt;Maven&lt;/a&gt; dependency information:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;org.clojure&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;clojurescript&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.10.520&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://himera.herokuapp.com/synonym.html" rel="nofollow"&gt;Compare with JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://himera.herokuapp.com/index.html" rel="nofollow"&gt;Try it online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read the &lt;a href="http://clojurescript.org/guides/quick-start" rel="nofollow"&gt;Quick Start&lt;/a&gt; guide.&lt;/li&gt;
&lt;li&gt;Read the &lt;a href="http://clojurescript.org" rel="nofollow"&gt;Documentation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Try a &lt;a href="http://clojurescript.org/guides" rel="nofollow"&gt;tutorial&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://clojurescript.org/community/companies" rel="nofollow"&gt;Companies using ClojureScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-questions-feedback" class="anchor" aria-hidden="true" href="#questions-feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions, Feedback?&lt;/h2&gt;
&lt;p&gt;Please point all of your questions and feedback to the
&lt;a href="http://groups.google.com/group/clojure" rel="nofollow"&gt;Clojure mailing list&lt;/a&gt;. There
is a community run
&lt;a href="http://groups.google.com/group/clojurescript" rel="nofollow"&gt;ClojureScript user mailing list&lt;/a&gt; and
the IRC channel, &lt;code&gt;#clojurescript&lt;/code&gt; on &lt;a href="https://freenode.net/" rel="nofollow"&gt;freenode.net&lt;/a&gt;, is quite active.
There is also a community run &lt;a href="http://clojurians.slack.com" rel="nofollow"&gt;Slack channel&lt;/a&gt;. The
Jira bug/feature tracking application is located at
&lt;a href="http://dev.clojure.org/jira/browse/CLJS" rel="nofollow"&gt;http://dev.clojure.org/jira/browse/CLJS&lt;/a&gt;. Before submitting issues
please read the
&lt;a href="https://github.com/clojure/clojurescript/wiki/Reporting-Issues"&gt;Reporting Issues&lt;/a&gt;
page first.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developers-welcome" class="anchor" aria-hidden="true" href="#developers-welcome"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developers Welcome&lt;/h2&gt;
&lt;p&gt;ClojureScript operates under the same license as Clojure. All
contributors must have a signed CA (Contributor's Agreement) and
submit their patch via the appropriate channels. If you're interested
in contributing to the project, please see the
&lt;a href="http://clojure.org/contributing" rel="nofollow"&gt;contributing&lt;/a&gt; page on
&lt;a href="http://clojure.org" rel="nofollow"&gt;clojure.org&lt;/a&gt;. For more information about working
on the compiler and testing check the
&lt;a href="http://github.com/clojure/clojurescript/wiki/Developers"&gt;Developer section of the wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-yourkit" class="anchor" aria-hidden="true" href="#yourkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;YourKit&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/522ec07ba979f767228bfa281844244a64ed57b7/687474703a2f2f7777772e796f75726b69742e636f6d2f696d616765732f796b6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/522ec07ba979f767228bfa281844244a64ed57b7/687474703a2f2f7777772e796f75726b69742e636f6d2f696d616765732f796b6c6f676f2e706e67" data-canonical-src="http://www.yourkit.com/images/yklogo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;YourKit has given an open source license for their profiler, greatly simplifying the profiling of ClojureScript performance.&lt;/p&gt;
&lt;p&gt;YourKit supports open source projects with its full-featured Java Profiler.
YourKit, LLC is the creator of &lt;a href="http://www.yourkit.com/java/profiler/index.jsp" rel="nofollow"&gt;YourKit Java Profiler&lt;/a&gt;
and &lt;a href="http://www.yourkit.com/.net/profiler/index.jsp" rel="nofollow"&gt;YourKit .NET Profiler&lt;/a&gt;,
innovative and intelligent tools for profiling Java and .NET applications.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright (c) Rich Hickey. All rights reserved. The use and
distribution terms for this software are covered by the Eclipse
Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)
which can be found in the file epl-v10.html at the root of this
distribution. By using this software in any fashion, you are
agreeing to be bound by the terms of this license. You must
not remove this notice, or any other, from this software.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>clojure</author><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item><item><title>retrogradeorbit/bootleg #2 in Clojure, Today</title><link>https://github.com/retrogradeorbit/bootleg</link><description>&lt;p&gt;&lt;i&gt;Simple template processing command line tool to help build static websites&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Last seen &lt;b&gt;2019-10-28&lt;/b&gt;; First seen &lt;b&gt;2019-10-28&lt;/b&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-bootleg" class="anchor" aria-hidden="true" href="#bootleg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bootleg&lt;/h1&gt;
&lt;p&gt;Static website generation made simple. A powerful, fast, clojure html templating solution.&lt;/p&gt;
&lt;p&gt;Bootleg is a command line tool that rapidly renders clojure based templates. With inbuilt support for html, hiccup, hickory, mustache, enlive, json, yaml and edn, it enables you to pull together disparate elements and glue them together to generate the static website of your dreams.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;Install:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ curl -LO https://github.com/retrogradeorbit/bootleg/releases/download/v0.1.4/bootleg-0.1.4-linux-amd64.tgz
$ tar xvf bootleg-0.1.4-linux-amd64.tgz
$ mv bootleg &lt;span class="pl-k"&gt;~&lt;/span&gt;/bin&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Clone this repository and change into the &lt;code&gt;examples/quickstart&lt;/code&gt; directory:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://github.com/retrogradeorbit/bootleg.git
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; bootleg/examples/quickstart&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A simple page:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-simple.clj
[&lt;span class="pl-c1"&gt;:html&lt;/span&gt;
 [&lt;span class="pl-c1"&gt;:body&lt;/span&gt;
  [&lt;span class="pl-c1"&gt;:h1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A simple webpage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
  [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Made with bootleg for maximum powers!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]]]&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg example-simple.clj
&amp;lt;&lt;span class="pl-ent"&gt;html&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;body&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;A simple webpage&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;Made with bootleg for maximum powers!&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;body&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;html&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A dynamic example:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-dynamic.clj
[&lt;span class="pl-c1"&gt;:div.countdown&lt;/span&gt;
 (&lt;span class="pl-k"&gt;for&lt;/span&gt; [n (&lt;span class="pl-en"&gt;range&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;-1&lt;/span&gt;)]
   [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; n])
 [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;blast off!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]]&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg example-dynamic.clj
&amp;lt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-e"&gt;class&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;10&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;9&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;8&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;7&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;6&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;5&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;4&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;3&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;2&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;1&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;blast off!&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mustache:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-mustache.clj
(&lt;span class="pl-en"&gt;mustache&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;quickstart.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;yaml&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fields.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ cat quickstart.html
&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;{{ title }}&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;by {{ author }}&amp;lt;/&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;{{&amp;amp; body }}&amp;lt;/&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;$ cat fields.yml&lt;/span&gt;
&lt;span class="pl-ent"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;Bootleg&lt;/span&gt;
&lt;span class="pl-ent"&gt;author&lt;/span&gt;: &lt;span class="pl-s"&gt;Crispin&lt;/span&gt;
&lt;span class="pl-ent"&gt;body&lt;/span&gt;: &lt;span class="pl-s"&gt;I'm going to rewrite all my sites with this!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg example-mustache.clj
&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;Bootleg&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;by Crispin&amp;lt;/&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;I'm going to rewrite all my sites with this!&amp;lt;/&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Markdown support. Evaluate from command line. Easy downloading of resources by url (for any command):&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg -e '(markdown "https://raw.githubusercontent.com/retrogradeorbit/bootleg/master/README.md")'
&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;bootleg&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;Static website generation made simple. A powerful, fast, clojure templating solution that rocks!...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CSS selector based processing. The magic of enlive:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-enlive.clj
(&lt;span class="pl-en"&gt;-&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;markdown&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simple.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-en"&gt;enlive/at&lt;/span&gt; [&lt;span class="pl-c1"&gt;:p&lt;/span&gt;] (&lt;span class="pl-en"&gt;enlive/set-attr&lt;/span&gt; &lt;span class="pl-c1"&gt;:style&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color:green;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-gfm"&gt;&lt;pre&gt;$ cat simple.md
&lt;span class="pl-mh"&gt;&lt;span class="pl-mh"&gt;#&lt;/span&gt;&lt;span class="pl-mh"&gt; &lt;/span&gt;Markdown support&lt;/span&gt;

This is some simple markdown&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg example-enlive.clj
&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;Markdown support&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt; &lt;span class="pl-e"&gt;style&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-c1"&gt;color&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;green&lt;/span&gt;;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;This is some simple markdown&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Combine hiccup, mustache, markdown and enlive processing:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-combine.clj
(&lt;span class="pl-en"&gt;mustache&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;quickstart.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
          (&lt;span class="pl-en"&gt;assoc&lt;/span&gt; (&lt;span class="pl-en"&gt;yaml&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fields.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                 &lt;span class="pl-c1"&gt;:body&lt;/span&gt; (&lt;span class="pl-en"&gt;markdown&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simple.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:html&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg example-combine.clj
&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;Bootleg&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;by Crispin&amp;lt;/&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;Markdown support&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;This is some simple markdown&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Data output with -d flag:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-data.clj
(&lt;span class="pl-en"&gt;-&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;mustache&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;quickstart.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              (&lt;span class="pl-en"&gt;assoc&lt;/span&gt; (&lt;span class="pl-en"&gt;yaml&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fields.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                     &lt;span class="pl-c1"&gt;:body&lt;/span&gt; (&lt;span class="pl-en"&gt;markdown&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simple.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:html&lt;/span&gt;)))
    (&lt;span class="pl-en"&gt;convert-to&lt;/span&gt; &lt;span class="pl-c1"&gt;:hickory-seq&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d example-data.clj
({&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;, &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil, &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:h1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bootleg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 {&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;, &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil, &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:h2&lt;/span&gt;, &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;by Crispin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 {&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil,
  &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:div&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [{&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;,
             &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil,
             &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:h1&lt;/span&gt;,
             &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Markdown support&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}
            {&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;,
             &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil,
             &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:p&lt;/span&gt;,
             &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This is some simple markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}]}
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ bootleg example-data.clj          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; &amp;lt;- no -d flag means output will be html&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;h&lt;span class="pl-k"&gt;1&amp;gt;&lt;/span&gt;Bootleg&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;/h&lt;span class="pl-k"&gt;1&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;h&lt;span class="pl-k"&gt;2&amp;gt;&lt;/span&gt;by Crispin&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;/h&lt;span class="pl-k"&gt;2&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&amp;gt;&amp;lt;h&lt;span class="pl-k"&gt;1&amp;gt;&lt;/span&gt;Markdown support&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;/h1&amp;gt;&amp;lt;p&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;This is some simple markdown&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;/p&amp;gt;&amp;lt;/div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Bootleg is distributed for linux as a single executable file. Download the latest tarball from &lt;a href="https://github.com/retrogradeorbit/bootleg/releases"&gt;https://github.com/retrogradeorbit/bootleg/releases&lt;/a&gt; and then extract it. Once extracted, move the binary to your path. For system wide installation try &lt;code&gt;/usr/local/bin&lt;/code&gt; or for personal use &lt;code&gt;~/bin&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ curl -LO https://github.com/retrogradeorbit/bootleg/releases/download/v0.1.4/bootleg-0.1.4-linux-amd64.tgz
$ tar xvf bootleg-0.1.4-linux-amd64.tgz
$ mv bootleg /usr/local/bin&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-other-platforms" class="anchor" aria-hidden="true" href="#other-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Platforms&lt;/h3&gt;
&lt;p&gt;Although there is nothing preventing bootleg from running on windows or MacOS, binary builds are not yet available. Although startup and execution time will be much slower, in the meantime you can use the jar release file and run it as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ java -jar bootleg-0.1.4.jar&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Run at the command line for options:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ bootleg -h
Static website generation made simple. A powerful, fast, clojure html templating solution.

Usage: bootleg [options] [clj-file]

Options:
  -h, --help           Print the &lt;span class="pl-c1"&gt;command&lt;/span&gt; line &lt;span class="pl-c1"&gt;help&lt;/span&gt;
  -v, --version        Print the version string and &lt;span class="pl-c1"&gt;exit&lt;/span&gt;
  -e, --evaluate CODE  Pass &lt;span class="pl-k"&gt;in&lt;/span&gt; the hiccup to evaluate on the &lt;span class="pl-c1"&gt;command&lt;/span&gt; line
  -d, --data           Output the rendered template as a clojure form instead of html
  -o, --output FILE    Write the output to the specified file instead of stdout&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;bootleg&lt;/code&gt; loads and evaluates the clj file specified on the command line, or evaluates the &lt;code&gt;CODE&lt;/code&gt; form specified in the -e flag. The code can return any of the supported data structures listed below. &lt;code&gt;bootleg&lt;/code&gt; will then automatically convert that format into html and write it out to standard out, or to &lt;code&gt;FILE&lt;/code&gt; if specified. This conversion to html step can be prevented by calling with the &lt;code&gt;-d&lt;/code&gt; flag. In this case the output will be a pretty formatted edn form of the output data structure.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bootleg&lt;/code&gt; supports five main markup data structures. Three are more flexible. And two are limited. We will begin describing the two limited data structures and why they are limited.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hiccup" class="anchor" aria-hidden="true" href="#hiccup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hiccup&lt;/h3&gt;
&lt;p&gt;Hiccup is a standard clojure DSL syntax for representing markup as nested sequences of vectors, and is represented in option flags by the keyword &lt;code&gt;:hiccup&lt;/code&gt;. An example of some hiccup: the html &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;This is an example&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; is represented in hiccup as &lt;code&gt;[:div [:p "This is an example"]]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hiccup is limited in that it can only represent a single root element and its children. This means there are template fragments that &lt;em&gt;cannot&lt;/em&gt; be represented in hiccup. For example, the html snippet &lt;code&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;/code&gt; cannot be represented as hiccup. It is comprised of two hiccup forms. &lt;code&gt;[:p "one"]&lt;/code&gt; and &lt;code&gt;[:p "two"]&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hickory" class="anchor" aria-hidden="true" href="#hickory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hickory&lt;/h3&gt;
&lt;p&gt;Hickory is a format used to internally represent document trees in clojure for programmatic processing. In option flags it is referenced by the keyword &lt;code&gt;:hickory&lt;/code&gt;. It is very verbose and not suitable to write by hand. It is supported internally for passing between functions that use it. A simple example of some hickory: the html &lt;code&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&lt;/code&gt; is represented in hickory as &lt;code&gt;{:type :element, :attrs nil, :tag :p, :content ["one"]}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Both the hickory and enlive clojure projects use this format internally to represent and manipulate DOM trees.&lt;/p&gt;
&lt;p&gt;Hickory is limited in that it can only represent a single root element and its children. This means there are template fragments that &lt;em&gt;cannot&lt;/em&gt; be represented in hickory. For example, the html snippet &lt;code&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;/code&gt; cannot be represented as hickory. It is comprised of two hickory forms. &lt;code&gt;{:type :element, :attrs nil, :tag :p, :content ["one"]}&lt;/code&gt; and &lt;code&gt;{:type :element, :attrs nil, :tag :p, :content ["two"]}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hiccup-seq" class="anchor" aria-hidden="true" href="#hiccup-seq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hiccup-seq&lt;/h3&gt;
&lt;p&gt;Hiccup-seq is simply a clojure sequence (or vector) of hiccup forms. In option flags it is referenced by the keyword &lt;code&gt;:hiccup-seq&lt;/code&gt;. By wrapping multiple hiccup forms in a sequence, hiccup-seq can now represent any single root element (and it's children) &lt;em&gt;and&lt;/em&gt; any template fragment composed of sibling elements.&lt;/p&gt;
&lt;p&gt;For example: the html snippet &lt;code&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;/code&gt; is represented in hiccup-seq as: &lt;code&gt;([:p "one"] [:p "two"])&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hickory-seq" class="anchor" aria-hidden="true" href="#hickory-seq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hickory-seq&lt;/h3&gt;
&lt;p&gt;Hickory-seq is simply a clojure sequence (or vector) of hickory forms. In option flags it is referenced by the keyword &lt;code&gt;:hickory-seq&lt;/code&gt;. By wrapping multiple hickory forms in a sequence, hickory-seq can now represent any single root element (and it's children) &lt;em&gt;and&lt;/em&gt; any template fragment composed of sibling elements.&lt;/p&gt;
&lt;p&gt;For example: the html snippet &lt;code&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;/code&gt; is represented in hickory-seq as: &lt;code&gt;({:type :element, :attrs nil, :tag :p, :content ["one"]} {:type :element, :attrs nil, :tag :p, :content ["two"]})&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-html" class="anchor" aria-hidden="true" href="#html"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;html&lt;/h3&gt;
&lt;p&gt;html (or any type of xml) is represented internally as a string. This is a flexible type and can hold a root element and children, or a number of sibling elements sequentially.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-inbuilt-functions" class="anchor" aria-hidden="true" href="#inbuilt-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inbuilt functions&lt;/h2&gt;
&lt;p&gt;The following functions are inbuilt into the clojure interpreter:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-markup-processing-functions" class="anchor" aria-hidden="true" href="#markup-processing-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Markup Processing Functions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-markdown" class="anchor" aria-hidden="true" href="#markdown"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;markdown&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(markdown source &amp;amp; options)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load the markdown from the file specified in &lt;code&gt;source&lt;/code&gt; and render it. &lt;code&gt;source&lt;/code&gt; can be a local file path (relative to the executing hiccup file location) or a URL to gather the markdown from.&lt;/p&gt;
&lt;p&gt;Options can be used to alter the behaviour of the function. Options are a list of keywords and can be specified in any order after the source parameter. Options can be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:data&lt;/code&gt; Interpret the &lt;code&gt;source&lt;/code&gt; argument as markdown data, not a file to load&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup-seq&lt;/code&gt; Return the rendered markdown as a hiccup sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory-seq&lt;/code&gt; Return the rendered markdown as a hickory sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:html&lt;/code&gt; Return the rendered markdown as an html string&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -e '(markdown &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;# heading&lt;span class="pl-cce"&gt;\n&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt;)'
&amp;lt;h1&amp;gt;heading&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;paragraph&amp;lt;/p&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(markdown &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;# heading&lt;span class="pl-cce"&gt;\n&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:hickory-seq&lt;/span&gt;)'
({&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;, &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil, &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:h1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;heading&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}
 {&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;, &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil, &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:p&lt;/span&gt;, &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]})&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(markdown &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;# heading&lt;span class="pl-cce"&gt;\n&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup-seq&lt;/span&gt;)'
([&lt;span class="pl-c1"&gt;:h1&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;heading&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(markdown &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;# heading&lt;span class="pl-cce"&gt;\n&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:html&lt;/span&gt;)'
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;h1&amp;gt;heading&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;paragraph&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-mustache" class="anchor" aria-hidden="true" href="#mustache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mustache&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(mustache source vars &amp;amp; options)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load a mustache template from the file specified in &lt;code&gt;source&lt;/code&gt; and render it substituting the vars from &lt;code&gt;vars&lt;/code&gt;. &lt;code&gt;source&lt;/code&gt; can be a local file path (relative to the executing hiccup file location) or a URL to gather the markdown from.&lt;/p&gt;
&lt;p&gt;Options can be used to alter the behaviour of the function. Options are a list of keywords and can be specified in any order after the source parameter. Options can be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:data&lt;/code&gt; Interpret the &lt;code&gt;source&lt;/code&gt; argument as markdown data, not a file to load&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup&lt;/code&gt; Return the rendered markdown as hiccup&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup-seq&lt;/code&gt; Return the rendered markdown as a hiccup sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory&lt;/code&gt; Return the rendered markdown as hickory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory-seq&lt;/code&gt; Return the rendered markdown as a hickory sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:html&lt;/code&gt; Return the rendered markdown as an html string&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -e '(mustache &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;{{var1}}&amp;lt;/p&amp;gt;&amp;lt;div&amp;gt;{{&amp;amp;var2}}&amp;lt;/div&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:var1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:var2&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;markup&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-c1"&gt;:data&lt;/span&gt;)'
&amp;lt;p&amp;gt;value &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;/p&amp;gt;&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;markup&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(mustache &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;{{var1}}&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:var1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup-seq&lt;/span&gt;)'
([&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-slurp" class="anchor" aria-hidden="true" href="#slurp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;slurp&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(slurp source)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load the contents of a file, from a local or remote source, into memory and return it. This &lt;code&gt;slurp&lt;/code&gt; can load from URLs. Does no interpretation of the file contents at all. Returns them as is.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-html-1" class="anchor" aria-hidden="true" href="#html-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;html&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(html source &amp;amp; options)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Loads the contents of a html or xml file and returns them in &lt;code&gt;:hiccup-seq&lt;/code&gt; (by default).&lt;/p&gt;
&lt;p&gt;Options can be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:data&lt;/code&gt; Interpret the &lt;code&gt;source&lt;/code&gt; argument as markdown data, not a file to load&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup&lt;/code&gt; Return the rendered markdown as hiccup&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup-seq&lt;/code&gt; Return the rendered markdown as a hiccup sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory&lt;/code&gt; Return the rendered markdown as hickory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory-seq&lt;/code&gt; Return the rendered markdown as a hickory sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:html&lt;/code&gt; Return the rendered markdown as an html string&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(html &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;h1&amp;gt;heading&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;body&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup-seq&lt;/span&gt;)'
([&lt;span class="pl-c1"&gt;:h1&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;heading&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(html &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;div&amp;gt;&amp;lt;h1&amp;gt;heading&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;body&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup&lt;/span&gt;)'
[&lt;span class="pl-c1"&gt;:div&lt;/span&gt; {} [&lt;span class="pl-c1"&gt;:h1&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;heading&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-hiccup-1" class="anchor" aria-hidden="true" href="#hiccup-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hiccup&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(hiccup source)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Loads and evaluates the clojure source from another file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-var-loading-functions" class="anchor" aria-hidden="true" href="#var-loading-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Var Loading Functions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-yaml" class="anchor" aria-hidden="true" href="#yaml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;yaml&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(yaml source)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load yaml data from &lt;code&gt;source&lt;/code&gt; and process it. Returns the parsed data structure.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-json" class="anchor" aria-hidden="true" href="#json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;json&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(json source)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load json data from &lt;code&gt;source&lt;/code&gt; and process it. Returns the parsed data structure.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-edn" class="anchor" aria-hidden="true" href="#edn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;edn&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(edn source)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load edn data from &lt;code&gt;source&lt;/code&gt; and process it. Returns the parsed data structure.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-testing" class="anchor" aria-hidden="true" href="#data-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Testing&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-is-hiccup" class="anchor" aria-hidden="true" href="#is-hiccup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;is-hiccup?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(is-hiccup? data)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Test the markup in &lt;code&gt;data&lt;/code&gt;. Return &lt;code&gt;true&lt;/code&gt; if the data is a hiccup form.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-is-hiccup-seq" class="anchor" aria-hidden="true" href="#is-hiccup-seq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;is-hiccup-seq?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(is-hiccup-seq? data)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Test the markup in &lt;code&gt;data&lt;/code&gt;. Return &lt;code&gt;true&lt;/code&gt; if the data is a sequence of hiccup forms.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-is-hickory" class="anchor" aria-hidden="true" href="#is-hickory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;is-hickory?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(is-hickory? data)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Test the markup in &lt;code&gt;data&lt;/code&gt;. Return &lt;code&gt;true&lt;/code&gt; if the data is a hickory form.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-is-hickory-seq" class="anchor" aria-hidden="true" href="#is-hickory-seq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;is-hickory-seq?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(is-hickory-seq? data)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Test the markup in &lt;code&gt;data&lt;/code&gt;. Return &lt;code&gt;true&lt;/code&gt; if the data is a sequence of hickory forms.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-conversion" class="anchor" aria-hidden="true" href="#data-conversion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Conversion&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-convert-to" class="anchor" aria-hidden="true" href="#convert-to"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;convert-to&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(convert-to data type)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Convert one supported data type to another. Input data may be hiccup, hiccup-seq, hickory, hickory-seq or html.&lt;/p&gt;
&lt;p&gt;Type may be &lt;code&gt;:hiccup&lt;/code&gt;, &lt;code&gt;:hiccup-seq&lt;/code&gt;, &lt;code&gt;:hickory&lt;/code&gt;, &lt;code&gt;:hickory-seq&lt;/code&gt; or &lt;code&gt;html&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(convert-to [&lt;span class="pl-c1"&gt;:p#id.class&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c1"&gt;:hickory&lt;/span&gt;)'
{&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;,
 &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; {&lt;span class="pl-c1"&gt;:class&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;class&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:id&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
 &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:p&lt;/span&gt;,
 &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(convert-to &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p class=&lt;span class="pl-cce"&gt;\"&lt;/span&gt;class&lt;span class="pl-cce"&gt;\"&lt;/span&gt; id=&lt;span class="pl-cce"&gt;\"&lt;/span&gt;id&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&amp;gt;one&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup&lt;/span&gt;)'
[&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {&lt;span class="pl-c1"&gt;:class&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;class&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:id&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(convert-to &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup-seq&lt;/span&gt;)'
([&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(convert-to {&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt; &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:p&lt;/span&gt; &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]} &lt;span class="pl-c1"&gt;:html&lt;/span&gt;)'
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some conversions are lossy. Converting from html or any *-seq data type to hickory or hiccup may lose forms. Only the last form will be returned.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(convert-to &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup&lt;/span&gt;)'
[&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-as-html" class="anchor" aria-hidden="true" href="#as-html"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;as-html&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(as-html data)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Convert any supported input format passed into &lt;code&gt;data&lt;/code&gt; to html output. Same as &lt;code&gt;(convert-to data :html)&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-enlive-processing" class="anchor" aria-hidden="true" href="#enlive-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enlive Processing&lt;/h3&gt;
&lt;p&gt;Enlive html functions are to be found in the &lt;code&gt;enlive&lt;/code&gt; namespace. The enlive macros are not supported (&lt;code&gt;deftemplate&lt;/code&gt;, &lt;code&gt;defsnippet&lt;/code&gt;, &lt;code&gt;clone-for&lt;/code&gt;). A reimplementation of &lt;code&gt;at&lt;/code&gt; is supplied that provides automatic type coercion for the inputs and outputs.&lt;/p&gt;
&lt;p&gt;In addition to this the standard enlive namespaces are available in their usual locations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;net.cgrand.enlive-html (but does not include macros)&lt;/li&gt;
&lt;li&gt;net.cgrand.jsoup&lt;/li&gt;
&lt;li&gt;net.cgrand.tagsoup&lt;/li&gt;
&lt;li&gt;net.cgrand.xml&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-at" class="anchor" aria-hidden="true" href="#at"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;at&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(at data selector transform &amp;amp; more)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Take the markup &lt;code&gt;data&lt;/code&gt; and process every element matching &lt;code&gt;selector&lt;/code&gt; through the transform &lt;code&gt;transform&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-enlive-transforms" class="anchor" aria-hidden="true" href="#enlive-transforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enlive Transforms&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-content" class="anchor" aria-hidden="true" href="#content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(content &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replaces the content of the element. Values can be hickory nodes, collection of hikory nodes, or plain text strings.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-html-snippet" class="anchor" aria-hidden="true" href="#html-snippet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;html-snippet&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(html-snippet &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Concatenate values as a string and then parse it with tagsoup. html-snippet doesn't insert missing  or  tags.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-html-content" class="anchor" aria-hidden="true" href="#html-content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;html-content&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(html-content &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replaces the content of the element. Values are strings containing html code.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-wrap" class="anchor" aria-hidden="true" href="#wrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;wrap&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(wrap tag attr)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Wraps selected node into the given tag. eg. &lt;code&gt;(wrap :div)&lt;/code&gt; or &lt;code&gt;(wrap :div {:class "foo"})&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-unwrap" class="anchor" aria-hidden="true" href="#unwrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unwrap&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;unwrap&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Opposite to wrap, returns the content of the selected node.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-set-attr" class="anchor" aria-hidden="true" href="#set-attr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set-attr&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(set-attr &amp;amp; key-value-pairs)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Assocs attributes on the selected element. eg. &lt;code&gt;(set-attr :attr1 "val1" :attr2 "val2")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-remove-attr" class="anchor" aria-hidden="true" href="#remove-attr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;remove-attr&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(remove-attr &amp;amp; attr-names)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Sets given key value pairs as attributes for selected node. eg. &lt;code&gt;(remove-attr :attr1 :attr2)&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-add-class" class="anchor" aria-hidden="true" href="#add-class"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;add-class&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(add-class &amp;amp; classes)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Adds class(es) to the selected node. eg. &lt;code&gt;(add-class "foo" "bar")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-remove-class" class="anchor" aria-hidden="true" href="#remove-class"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;remove-class&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(add-class &amp;amp; classes)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Removes class(es) from the selected node. eg. &lt;code&gt;(remove-class "foo" "bar")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-do-" class="anchor" aria-hidden="true" href="#do-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;do-&amp;gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(do-&amp;gt; &amp;amp; fns)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Chains (composes) several transformations. Applies functions from left to right. eg. &lt;code&gt;(do-&amp;gt; transformation1 transformation2)&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-append" class="anchor" aria-hidden="true" href="#append"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;append&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(append &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Appends the values to the content of the selected element. eg. &lt;code&gt;(append "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-prepend" class="anchor" aria-hidden="true" href="#prepend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;prepend&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(prepend &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Prepends the values to the content of the selected element. eg. &lt;code&gt;(prepend "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-after" class="anchor" aria-hidden="true" href="#after"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;after&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(after &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Inserts the values after the current selection (node or fragment). eg. &lt;code&gt;(after "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-before" class="anchor" aria-hidden="true" href="#before"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;before&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(before &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Inserts the values before the current selection (node or fragment). eg. &lt;code&gt;(before "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-substitute" class="anchor" aria-hidden="true" href="#substitute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;substitute&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(substitute &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replaces the current selection (node or fragment). eg. &lt;code&gt;(substitute "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-move" class="anchor" aria-hidden="true" href="#move"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;move&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(move src-selector dest-selector)&lt;/code&gt;
&lt;code&gt;(src-selector dest-selector combiner)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Takes all nodes (under the current element) matched by src-selector, removes them and combines them with the elements matched by dest-selector. eg. &lt;code&gt;(move [:.footnote] [:#footnotes] content)&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hickory-1" class="anchor" aria-hidden="true" href="#hickory-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hickory&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;hickory&lt;/code&gt; namespaces are provided at their usual namespace locations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hickory.convert&lt;/li&gt;
&lt;li&gt;hickory.hiccup-utils&lt;/li&gt;
&lt;li&gt;hickory.render&lt;/li&gt;
&lt;li&gt;hickory.select&lt;/li&gt;
&lt;li&gt;hickory.utils&lt;/li&gt;
&lt;li&gt;hickory.zip&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;bootleg&lt;/code&gt; leverages other people's amazing work. The following projects and people enable this to exist at all.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.booleanknot.com/" rel="nofollow"&gt;James Reeves&lt;/a&gt; built &lt;a href="https://github.com/weavejester/hiccup"&gt;Hiccup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://clj-me.cgrand.net/" rel="nofollow"&gt;Christophe Grand&lt;/a&gt; built &lt;a href="https://github.com/cgrand/enlive"&gt;Enlive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davidsantiago"&gt;David Santiago&lt;/a&gt; built &lt;a href="https://github.com/davidsantiago/hickory"&gt;Hickory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.michielborkent.nl/" rel="nofollow"&gt;Michiel Borkent&lt;/a&gt; built &lt;a href="https://github.com/borkdude/sci"&gt;Sci&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019 Crispin Wellington&lt;/p&gt;
&lt;p&gt;This program and the accompanying materials are made available under the
terms of the Eclipse Public License 2.0 which is available at
&lt;a href="http://www.eclipse.org/legal/epl-2.0" rel="nofollow"&gt;http://www.eclipse.org/legal/epl-2.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This Source Code may also be made available under the following Secondary
Licenses when the conditions for such availability set forth in the Eclipse
Public License, v. 2.0 are satisfied: GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or (at your
option) any later version, with the GNU Classpath Exception which is available
at &lt;a href="https://www.gnu.org/software/classpath/license.html" rel="nofollow"&gt;https://www.gnu.org/software/classpath/license.html&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>retrogradeorbit</author><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item><item><title>tonsky/FiraCode #3 in Clojure, Today</title><link>https://github.com/tonsky/FiraCode</link><description>&lt;p&gt;&lt;i&gt;Monospaced font with programming ligatures&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Last seen &lt;b&gt;2019-10-28&lt;/b&gt;; First seen &lt;b&gt;2019-10-28&lt;/b&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-fira-code-monospaced-font-with-programming-ligatures" class="anchor" aria-hidden="true" href="#fira-code-monospaced-font-with-programming-ligatures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fira Code: monospaced font with programming ligatures&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcases/fira_code_logo.svg"&gt;&lt;img src="./showcases/fira_code_logo.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-problem" class="anchor" aria-hidden="true" href="#problem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Problem&lt;/h3&gt;
&lt;p&gt;Programmers use a lot of symbols, often encoded with several characters. For the human brain, sequences like &lt;code&gt;-&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt; or &lt;code&gt;:=&lt;/code&gt; are single logical tokens, even if they take two or three characters on the screen. Your eye spends a non-zero amount of energy to scan, parse and join multiple characters into a single logical one. Ideally, all programming languages should be designed with full-fledged Unicode symbols for operators, but that’s not the case yet.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-solution" class="anchor" aria-hidden="true" href="#solution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Solution&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-download-v2--how-to-install--troubleshooting--news--updates" class="anchor" aria-hidden="true" href="#download-v2--how-to-install--troubleshooting--news--updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/tonsky/FiraCode/releases/download/2/FiraCode_2.zip"&gt;Download v.2&lt;/a&gt; · &lt;a href="https://github.com/tonsky/FiraCode/wiki"&gt;How to install&lt;/a&gt; · &lt;a href="https://github.com/tonsky/FiraCode/wiki#troubleshooting"&gt;Troubleshooting&lt;/a&gt; · &lt;a href="https://twitter.com/FiraCode" rel="nofollow"&gt;News &amp;amp; updates&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://patreon.com/tonsky" rel="nofollow"&gt;&lt;img src="./fira_code_patreon.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fira Code is an extension of the Fira Mono font containing a set of ligatures for common programming multi-character combinations. This is just a font rendering feature: underlying code remains ASCII-compatible. This helps to read and understand code faster. For some frequent sequences like &lt;code&gt;..&lt;/code&gt; or &lt;code&gt;//&lt;/code&gt;, ligatures allow us to correct spacing.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcases/all_ligatures.png"&gt;&lt;img src="./showcases/all_ligatures.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-code-examples" class="anchor" aria-hidden="true" href="#code-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code examples&lt;/h3&gt;
&lt;p&gt;Ruby:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcases/ruby.png"&gt;&lt;img src="./showcases/ruby.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JavaScript:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcases/javascript.png"&gt;&lt;img src="./showcases/javascript.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PHP:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcases/php.png"&gt;&lt;img src="./showcases/php.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Erlang:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcases/erlang.png"&gt;&lt;img src="./showcases/erlang.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Elixir:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/showcases/elixir.png"&gt;&lt;img src="/showcases/elixir.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Go:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcases/go.png"&gt;&lt;img src="./showcases/go.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LiveScript:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcases/livescript.png"&gt;&lt;img src="./showcases/livescript.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Clojure:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcases/clojure.png"&gt;&lt;img src="./showcases/clojure.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swift:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcases/swift.png"&gt;&lt;img src="./showcases/swift.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stylistic sets:&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/tonsky/FiraCode/wiki/How-to-enable-stylistic-sets"&gt;How to enable&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./showcases/stylistic_sets.png"&gt;&lt;img src="./showcases/stylistic_sets.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-terminal-support" class="anchor" aria-hidden="true" href="#terminal-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal support&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Works&lt;/th&gt;
&lt;th&gt;Doesn’t work&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Butterfly&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Alacritty&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;crosh&lt;/strong&gt; (ChromeOS, &lt;a href="https://github.com/tonsky/FiraCode/wiki/ChromeOS-Terminal"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Windows Console (conhost.exe)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Hyper.app&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Cmder&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;iTerm 2&lt;/strong&gt; (&lt;a href="https://gitlab.com/gnachman/iterm2/issues/3568#note_13118332" rel="nofollow"&gt;3.1+&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;ConEmu&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Kitty&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GNOME Terminal&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Konsole&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;mate-terminal&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;mintty&lt;/strong&gt; (partial support &lt;a href="https://github.com/mintty/mintty/issues/601"&gt;2.8.3+&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;PuTTY&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;QTerminal&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;rxvt&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Terminal.app&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;xterm&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Termux&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;ZOC&lt;/strong&gt; (Windows)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Token2Shell/MD&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;gtkterm, guake, LXTerminal, sakura, Terminator, xfce4-terminal,&lt;/strong&gt; and other libvte-based terminals (&lt;a href="https://bugzilla.gnome.org/show_bug.cgi?id=584160" rel="nofollow"&gt;bug report&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;upterm&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Windows Terminal&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ZOC&lt;/strong&gt; (macOS)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-editor-support" class="anchor" aria-hidden="true" href="#editor-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editor support&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Works&lt;/th&gt;
&lt;th&gt;Doesn’t work&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Abricotine&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Arduino IDE&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Android Studio&lt;/strong&gt; (2.3+, &lt;a href="https://github.com/tonsky/FiraCode/wiki/Intellij-products-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Adobe Dreamweaver&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Anjuta&lt;/strong&gt; (unless at the EOF)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Delphi IDE&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;AppCode&lt;/strong&gt; (2016.2+, &lt;a href="https://github.com/tonsky/FiraCode/wiki/Intellij-products-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Eclipse&lt;/strong&gt; (Win, &lt;a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=398656" rel="nofollow"&gt;vote here&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Atom&lt;/strong&gt; 1.1 or newer (&lt;a href="https://github.com/tonsky/FiraCode/wiki/Atom-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;Standalone &lt;strong&gt;Emacs&lt;/strong&gt; (&lt;a href="https://github.com/tonsky/FiraCode/wiki/Emacs-instructions"&gt;workaround&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;BBEdit/TextWrangler&lt;/strong&gt; (v. 11 only, &lt;a href="https://github.com/tonsky/FiraCode/wiki/BBEdit-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;gVim&lt;/strong&gt; (Windows &lt;a href="https://github.com/tonsky/FiraCode/issues/462"&gt;workaround&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Brackets&lt;/strong&gt; (with &lt;a href="https://github.com/polo2ro/firacode-in-brackets"&gt;this plugin&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;IDLE&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Chocolat&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;KDevelop 4&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CLion&lt;/strong&gt; (2016.2+, &lt;a href="https://github.com/tonsky/FiraCode/wiki/Intellij-products-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Monkey Studio IDE&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Cloud9&lt;/strong&gt; (&lt;a href="https://github.com/tonsky/FiraCode/wiki/Cloud9-Instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Coda 2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CodeLite&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Eclipse&lt;/strong&gt; (Mac 4.7+, Linux)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;elementary Code&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Geany&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gEdit / Pluma&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GNOME Builder&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GoormIDE&lt;/strong&gt; (&lt;a href="https://github.com/tonsky/FiraCode/wiki/GoormIDE-Instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;IntelliJ IDEA&lt;/strong&gt; (2016.2+, &lt;a href="https://github.com/tonsky/FiraCode/wiki/Intellij-products-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Kate, KWrite&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;KDevelop 5+&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Komodo&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Leafpad&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LibreOffice&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LightTable&lt;/strong&gt; (&lt;a href="https://github.com/tonsky/FiraCode/wiki/LightTable-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LINQPad&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;MacVim&lt;/strong&gt; 7.4 or newer (&lt;a href="https://github.com/tonsky/FiraCode/wiki/MacVim-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Mancy&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Meld&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Mousepad&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NeoVim-gtk&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NetBeans&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Notepad&lt;/strong&gt; (Win)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Notepad++&lt;/strong&gt; (with a &lt;a href="https://github.com/notepad-plus-plus/notepad-plus-plus/issues/2287#issuecomment-256638098"&gt;workaround&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;PhpStorm&lt;/strong&gt; (2016.2+, &lt;a href="https://github.com/tonsky/FiraCode/wiki/Intellij-products-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;PyCharm&lt;/strong&gt; (2016.2+, &lt;a href="https://github.com/tonsky/FiraCode/wiki/Intellij-products-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;QtCreator&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Rider&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;RStudio&lt;/strong&gt; (&lt;a href="https://github.com/tonsky/FiraCode/wiki/RStudio-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;RubyMine&lt;/strong&gt; (2016.2+, &lt;a href="https://github.com/tonsky/FiraCode/wiki/Intellij-products-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Scratch&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Scribus&lt;/strong&gt; (1.5.3+)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SublimeText&lt;/strong&gt; (3146+)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Spyder IDE&lt;/strong&gt; (only with Qt5)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SuperCollider 3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TextAdept&lt;/strong&gt; (Linux, Mac)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TextEdit&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TextMate 2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;VimR&lt;/strong&gt; (&lt;a href="https://github.com/qvacua/vimr/wiki#ligatures"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Visual Studio&lt;/strong&gt; (2015+, &lt;a href="https://github.com/tonsky/FiraCode/wiki/Visual-Studio-Instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt; (&lt;a href="https://github.com/tonsky/FiraCode/wiki/VS-Code-Instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;WebStorm&lt;/strong&gt; (2016.2+, &lt;a href="https://github.com/tonsky/FiraCode/wiki/Intellij-products-instructions"&gt;instructions&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Xamarin Studio/Monodevelop&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Xcode&lt;/strong&gt; (8.0+, otherwise &lt;a href="https://github.com/robertvojta/LigatureXcodePlugin"&gt;with plugin&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Probably work: &lt;strong&gt;Smultron, Vico&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Under question: &lt;strong&gt;Code::Blocks IDE&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-browser-support" class="anchor" aria-hidden="true" href="#browser-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Browser support&lt;/h3&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; HTML &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
&amp;lt;&lt;span class="pl-ent"&gt;link&lt;/span&gt; &lt;span class="pl-e"&gt;rel&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stylesheet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;href&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://cdn.jsdelivr.net/gh/tonsky/FiraCode@1.207/distr/fira_code.css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-css"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; CSS &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;@import&lt;/span&gt; &lt;span class="pl-c1"&gt;url&lt;/span&gt;(&lt;span class="pl-v"&gt;https://cdn.jsdelivr.net/gh/tonsky/FiraCode@1.207/distr/fira_code.css&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-css"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Specify in CSS &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-ent"&gt;code&lt;/span&gt; { &lt;span class="pl-c1"&gt;&lt;span class="pl-c1"&gt;font-family&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Fira Code&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;monospace&lt;/span&gt;; }

&lt;span class="pl-k"&gt;@supports&lt;/span&gt; (&lt;span class="pl-c1"&gt;font-variation-settings&lt;/span&gt;: &lt;span class="pl-c1"&gt;normal&lt;/span&gt;) {
  &lt;span class="pl-ent"&gt;code&lt;/span&gt; { &lt;span class="pl-c1"&gt;&lt;span class="pl-c1"&gt;font-family&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Fira Code VF&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;monospace&lt;/span&gt;; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;IE 10+, Edge: enable with &lt;code&gt;font-feature-settings: "calt";&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Firefox&lt;/li&gt;
&lt;li&gt;Safari&lt;/li&gt;
&lt;li&gt;Chromium-based browsers (Chrome, Opera)&lt;/li&gt;
&lt;li&gt;ACE&lt;/li&gt;
&lt;li&gt;CodeMirror (enable with &lt;code&gt;font-variant-ligatures: contextual;&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-projects-using-fira-code" class="anchor" aria-hidden="true" href="#projects-using-fira-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects using Fira Code&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;All &lt;a href="https://www.jetbrains.com/" rel="nofollow"&gt;JetBrains products&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepen.io/" rel="nofollow"&gt;CodePen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.blink.sh/" rel="nofollow"&gt;Blink Shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://app.klipse.tech/" rel="nofollow"&gt;Klipse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ilyabirman.net/" rel="nofollow"&gt;IlyaBirman.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://evilmartians.com/" rel="nofollow"&gt;EvilMartians.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webmakerapp.com/" rel="nofollow"&gt;Web Maker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fromscratch.rocks/" rel="nofollow"&gt;FromScratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pep20.org/" rel="nofollow"&gt;PEP20.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternatives&lt;/h3&gt;
&lt;p&gt;Other monospaced fonts with ligatures:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/i-tu/Hasklig"&gt;Hasklig&lt;/a&gt; (free)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fsd.it/fonts/pragmatapro.htm" rel="nofollow"&gt;PragmataPro&lt;/a&gt; (€59)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://larsenwork.com/monoid/" rel="nofollow"&gt;Monoid&lt;/a&gt; (free)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kika/fixedsys"&gt;Fixedsys Excelsior&lt;/a&gt; (free)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://be5invis.github.io/Iosevka/" rel="nofollow"&gt;Iosevka&lt;/a&gt; (free)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SSNikolaevich/DejaVuSansCode"&gt;DejaVu Sans Code&lt;/a&gt; (free)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rubjo.github.io/victor-mono/" rel="nofollow"&gt;Victor Mono&lt;/a&gt; (free)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/cascadia-code"&gt;Cascadia Code&lt;/a&gt; (free)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-fira-code-locally" class="anchor" aria-hidden="true" href="#building-fira-code-locally"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Fira Code locally&lt;/h3&gt;
&lt;p&gt;In case you want to alter FiraCode.glyphs and build OTF/TTF/WOFF files yourself, this is setup I use on macOS:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install all required build tools&lt;/span&gt;
./script/bootstrap

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; build the font files&lt;/span&gt;
./script/build

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install OTFs to ~/Library/Fonts&lt;/span&gt;
./script/install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Author: Nikita Prokopov &lt;a href="https://twitter.com/nikitonsky" rel="nofollow"&gt;@nikitonsky&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Based on: &lt;a href="https://github.com/mozilla/Fira"&gt;Fira Mono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Inspired by: &lt;a href="https://github.com/i-tu/Hasklig"&gt;Hasklig&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tonsky</author><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item><item><title>borkdude/clj-kondo #4 in Clojure, Today</title><link>https://github.com/borkdude/clj-kondo</link><description>&lt;p&gt;&lt;i&gt;A linter for Clojure code that sparks joy.&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Last seen &lt;b&gt;2019-10-28&lt;/b&gt;; First seen &lt;b&gt;2019-10-28&lt;/b&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="logo/logo-300dpi.png"&gt;&lt;img src="logo/logo-300dpi.png" width="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/borkdude/clj-kondo/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e478e0d6d427b6bbd08b50acfbf3314aaef80ab5/68747470733a2f2f636972636c6563692e636f6d2f67682f626f726b647564652f636c6a2d6b6f6e646f2f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/borkdude/clj-kondo/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/borkdude/clj-kondo/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c5ad219023a16716381f6cee47529e7c85765c2/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f336a64726f376d7531376e76337262332f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/3jdro7mu17nv3rb3/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojars.org/clj-kondo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c17f11be4a26b1d39054e8817d2a70f3f111d08c/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f636c6a2d6b6f6e646f2e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/clj-kondo.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cljdoc.org/d/clj-kondo/clj-kondo/CURRENT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5b39521007a6599d4a294c424c2a6a2c1016e73/68747470733a2f2f636c6a646f632e6f72672f62616467652f636c6a2d6b6f6e646f2f636c6a2d6b6f6e646f" alt="cljdoc badge" data-canonical-src="https://cljdoc.org/badge/clj-kondo/clj-kondo" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojurians.slack.com/messages/CHY97NXE2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d32eacbaaf4d06e17885b5da976a2d0cb18238e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6a6f696e5f636861742d627269676874677265656e2e737667" alt="project chat" data-canonical-src="https://img.shields.io/badge/slack-join_chat-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A linter for Clojure code that sparks joy.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/demo.png"&gt;&lt;img src="screenshots/demo.png" width="50%" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale&lt;/h2&gt;
&lt;p&gt;You don't mind the occasional &lt;a href="https://blog.michielborkent.nl/2017/05/25/inline-def-debugging/" rel="nofollow"&gt;inline
def&lt;/a&gt; for
debugging, but you would like to get rid of them before making your code
public. Also, unnecessary &lt;code&gt;do&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; nestings don't really add any value to
your life. Let clj-kondo help you tidy your code.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;clj-kondo detects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inline &lt;code&gt;def&lt;/code&gt; expressions&lt;/li&gt;
&lt;li&gt;redundant &lt;code&gt;do&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; wrappings&lt;/li&gt;
&lt;li&gt;arity errors:
&lt;ul&gt;
&lt;li&gt;within the same namespace and across namespaces&lt;/li&gt;
&lt;li&gt;of static Java method calls&lt;/li&gt;
&lt;li&gt;of local &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;letfn&lt;/code&gt; binding calls&lt;/li&gt;
&lt;li&gt;of recursive calls (including &lt;code&gt;recur&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;unused private vars&lt;/li&gt;
&lt;li&gt;private and deprecated var usage&lt;/li&gt;
&lt;li&gt;required but unused namespaces&lt;/li&gt;
&lt;li&gt;referred but unused vars&lt;/li&gt;
&lt;li&gt;duplicate requires&lt;/li&gt;
&lt;li&gt;unused function arguments and let bindings&lt;/li&gt;
&lt;li&gt;redefined vars&lt;/li&gt;
&lt;li&gt;unresolved symbols&lt;/li&gt;
&lt;li&gt;misplaced docstrings&lt;/li&gt;
&lt;li&gt;duplicate map keys and set elements&lt;/li&gt;
&lt;li&gt;missing map keys&lt;/li&gt;
&lt;li&gt;invalid number of forms in binding vectors&lt;/li&gt;
&lt;li&gt;missing assertions in &lt;code&gt;clojure.test/deftest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/types.md"&gt;type checking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;before your REPL knows it.&lt;/p&gt;
&lt;p&gt;It suggests several style guide recommendations, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rules from Stuart Sierra's &lt;a href="https://stuartsierra.com/2016/clojure-how-to-ns.html" rel="nofollow"&gt;how to ns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;:else&lt;/code&gt; as the catch-all test expression in &lt;code&gt;cond&lt;/code&gt; (see &lt;a href="https://github.com/bbatsov/clojure-style-guide#else-keyword-in-cond"&gt;Clojure style guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;seq&lt;/code&gt; instead of &lt;code&gt;(not (empty? ,,,))&lt;/code&gt; (see &lt;a href="https://github.com/bbatsov/clojure-style-guide#nil-punning"&gt;Clojure style guide&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/wrong-arity.png"&gt;&lt;img src="screenshots/wrong-arity.png" width="50%" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It has support for syntax of commonly used macros like
&lt;code&gt;clojure.core.async/alt!!&lt;/code&gt;, &lt;code&gt;schema.core/defn&lt;/code&gt; and &lt;code&gt;potemkin/import-vars&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It provides &lt;a href="analysis"&gt;analysis data&lt;/a&gt; so you build your own custom linters.&lt;/p&gt;
&lt;p&gt;This linter is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;compatible with &lt;code&gt;.clj&lt;/code&gt;, &lt;code&gt;.cljs&lt;/code&gt;, &lt;code&gt;.cljc&lt;/code&gt; and &lt;code&gt;.edn&lt;/code&gt; files&lt;/li&gt;
&lt;li&gt;build tool and editor agnostic&lt;/li&gt;
&lt;li&gt;a static code analyzer&lt;/li&gt;
&lt;li&gt;compiled to native code using GraalVM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Try clj-kondo at the &lt;a href="https://clj-kondo.michielborkent.nl" rel="nofollow"&gt;interactive playground&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/install.md"&gt;Installation&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-running-on-the-jvm" class="anchor" aria-hidden="true" href="#running-on-the-jvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/jvm.md"&gt;Running on the JVM&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-running-with-docker" class="anchor" aria-hidden="true" href="#running-with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/docker.md"&gt;Running with Docker&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line&lt;/h3&gt;
&lt;p&gt;Lint from stdin:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(def x (def x 1))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; clj-kondo --lint -&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;stdin&amp;gt;:1:8: warning: inline def&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lint a file:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(def x (def x 1))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; /tmp/foo.clj&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;clj-kondo --lint /tmp/foo.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;/tmp/foo.clj:1:8: warning: inline def&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lint a directory:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;clj-kondo --lint src&lt;/span&gt;
&lt;span class="pl-c1"&gt;src/clj_kondo/test.cljs:7:1: warning: redundant do&lt;/span&gt;
&lt;span class="pl-c1"&gt;src/clj_kondo/calls.clj:291:3: error: Wrong number of args (1) passed to clj-kondo.calls/analyze-calls&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lint a project classpath:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;clj-kondo --lint &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;lein classpath&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-project-setup" class="anchor" aria-hidden="true" href="#project-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project setup&lt;/h2&gt;
&lt;p&gt;To detect lint errors across namespaces in your project, a cache is needed. To
let clj-kondo know where to create one, make a &lt;code&gt;.clj-kondo&lt;/code&gt; directory in the
root of your project, meaning on the same level as your &lt;code&gt;project.clj&lt;/code&gt;,
&lt;code&gt;deps.edn&lt;/code&gt; or &lt;code&gt;build.boot&lt;/code&gt;. A cache will be created inside of it when you run
&lt;code&gt;clj-kondo&lt;/code&gt;.  Before linting inside your editor, it is recommended to lint the
entire classpath to teach &lt;code&gt;clj-kondo&lt;/code&gt; about all the libraries you are using,
including Clojure and/or ClojureScript itself:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;clj-kondo --lint &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;classpath&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build tool specific ways to get a classpath:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lein classpath&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boot with-cp -w -f&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure -Spath&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So for &lt;code&gt;lein&lt;/code&gt; the entire command would be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ clj-kondo --lint "$(lein classpath)"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you are ready to lint single files using &lt;a href="doc/editor-integration.md"&gt;editor
integration&lt;/a&gt;. A simulation of what happens when you
edit a file in your editor:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(select-keys)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; clj-kondo --lang cljs --lint -&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;stdin&amp;gt;:1:1: error: Wrong number of args (0) passed to cljs.core/select-keys&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since clj-kondo now knows about your version of ClojureScript via the cache,
it detects that the number of arguments you passed to &lt;code&gt;select-keys&lt;/code&gt; is
invalid. Each time you edit a file, the cache is incrementally updated, so
clj-kondo is informed about new functions you just wrote.&lt;/p&gt;
&lt;p&gt;If you want to use a different directory to read and write the cache, use the
&lt;code&gt;--cache-dir&lt;/code&gt; option. To disable the cache even if you have a &lt;code&gt;.clj-kondo&lt;/code&gt;
directory, use &lt;code&gt;--cache false&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/config.md"&gt;Configuration&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-editor-integration" class="anchor" aria-hidden="true" href="#editor-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/editor-integration.md"&gt;Editor integration&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-exit-codes" class="anchor" aria-hidden="true" href="#exit-codes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exit codes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;: no errors or warnings were found&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2&lt;/code&gt;: more than one warning was found&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3&lt;/code&gt;: more than one error was found&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All other error codes indicate an unexpected error.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-analysis-data" class="anchor" aria-hidden="true" href="#analysis-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="analysis"&gt;Analysis data&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-tests" class="anchor" aria-hidden="true" href="#tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tests&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;script/test
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/build.md"&gt;Building from source&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-thanks-to" class="anchor" aria-hidden="true" href="#thanks-to"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks to:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/candid82/joker"&gt;joker&lt;/a&gt; for inspiration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xsc/rewrite-clj"&gt;rewrite-clj&lt;/a&gt; for the Clojure parser code&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonase/eastwood"&gt;eastwood&lt;/a&gt; for &lt;code&gt;var-info.edn&lt;/code&gt; and inspiration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/borkdude/clj-kondo/graphs/contributors"&gt;contributors&lt;/a&gt; and
other users posting issues with bug reports and ideas&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonsky"&gt;Nikita Prokopov&lt;/a&gt; for the logo&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-support-this-project" class="anchor" aria-hidden="true" href="#support-this-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support this project&lt;/h2&gt;
&lt;p&gt;Do you enjoy this project? Consider buying me a &lt;a href="https://ko-fi.com/borkdude" rel="nofollow"&gt;hot
beverage&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019 Michiel Borkent&lt;/p&gt;
&lt;p&gt;Distributed under the EPL License, same as Clojure. See LICENSE.&lt;/p&gt;
&lt;p&gt;The directory &lt;code&gt;inlined&lt;/code&gt; contains source from &lt;a href="https://github.com/clojure/tools.reader"&gt;&lt;code&gt;tools.reader&lt;/code&gt;&lt;/a&gt; which is licensed under the EPL license.&lt;/p&gt;
&lt;p&gt;The directory &lt;code&gt;parser&lt;/code&gt; contains modified source from &lt;a href="https://github.com/xsc/rewrite-clj"&gt;&lt;code&gt;rewrite-clj&lt;/code&gt;&lt;/a&gt; which is licensed under the MIT license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>borkdude</author><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item><item><title>jepsen-io/jepsen #5 in Clojure, Today</title><link>https://github.com/jepsen-io/jepsen</link><description>&lt;p&gt;&lt;i&gt;A framework for distributed systems verification, with fault injection&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Last seen &lt;b&gt;2019-10-28&lt;/b&gt;; First seen &lt;b&gt;2019-10-28&lt;/b&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jepsen" class="anchor" aria-hidden="true" href="#jepsen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jepsen&lt;/h1&gt;
&lt;p&gt;Breaking distributed systems so you don't have to.&lt;/p&gt;
&lt;p&gt;Jepsen is a Clojure library. A test is a Clojure program which uses the Jepsen
library to set up a distributed system, run a bunch of operations against that
system, and verify that the history of those operations makes sense. Jepsen has
been used to verify everything from eventually-consistent commutative databases
to linearizable coordination systems to distributed task schedulers. It can
also generate graphs of performance and availability, helping you characterize
how a system responds to different faults. See
&lt;a href="https://jepsen.io/analyses" rel="nofollow"&gt;jepsen.io&lt;/a&gt; for examples of the sorts of analyses
you can carry out with Jepsen.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/jepsen-io/jepsen" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2db11233f50c10035ec5a1c49dbacab5ebf8629a/68747470733a2f2f7472617669732d63692e636f6d2f6a657073656e2d696f2f6a657073656e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/jepsen-io/jepsen.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;This &lt;a href="doc/tutorial/index.md"&gt;tutorial&lt;/a&gt; walks you through writing a Jepsen test
from scratch.&lt;/p&gt;
&lt;p&gt;For reference, see the &lt;a href="http://jepsen-io.github.io/jepsen/" rel="nofollow"&gt;API documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-design-overview" class="anchor" aria-hidden="true" href="#design-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design overview&lt;/h2&gt;
&lt;p&gt;A Jepsen test runs as a Clojure program on a &lt;em&gt;control node&lt;/em&gt;. That program uses
SSH to log into a bunch of &lt;em&gt;db nodes&lt;/em&gt;, where it sets up the distributed system
you're going to test using the test's pluggable &lt;em&gt;os&lt;/em&gt; and &lt;em&gt;db&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Once the system is running, the control node spins up a set of logically
single-threaded &lt;em&gt;processes&lt;/em&gt;, each with its own &lt;em&gt;client&lt;/em&gt; for the distributed
system. A &lt;em&gt;generator&lt;/em&gt; generates new operations for each process to perform.
Processes then apply those operations to the system using their clients. The
start and end of each operation is recorded in a &lt;em&gt;history&lt;/em&gt;. While performing
operations, a special &lt;em&gt;nemesis&lt;/em&gt; process introduces faults into the system--also
scheduled by the generator.&lt;/p&gt;
&lt;p&gt;Finally, the DB and OS are torn down. Jepsen uses a &lt;em&gt;checker&lt;/em&gt; to analyze the
test's history for correctness, and to generate reports, graphs, etc. The test,
history, analysis, and any supplementary results are written to the filesystem
under &lt;code&gt;store/&amp;lt;test-name&amp;gt;/&amp;lt;date&amp;gt;/&lt;/code&gt; for later review. Symlinks to the latest
results are maintained at each level for convenience.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-a-jepsen-environment" class="anchor" aria-hidden="true" href="#setting-up-a-jepsen-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up a Jepsen environment&lt;/h2&gt;
&lt;p&gt;Your control node needs a JVM and Leiningen 2 installed. Probably want JNA for
SSH auth too.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt-get install openjdk-8-jre openjdk-8-jre-headless libjna-java&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For your db nodes, you'll need some (I use five) debian boxes. I run debian
jessie, but some DBs don't need the latest packages so you might get away with
an older distribution, or possibly ubuntu. Each one should be accessible from
the control node via SSH. By default they're named n1, n2, n3, n4, and n5, but
that (along with SSH username, password, identity files, etc) is all definable
in your test. The account you use on those boxes needs sudo access to set up
DBs, control firewalls, etc.&lt;/p&gt;
&lt;p&gt;Be advised that tests may mess with clocks, add apt repos, run killall -9 on
processes, and generally break things, so you shouldn't, you know, point jepsen
at your prod machines unless you like to live dangerously, or you wrote the
test and know exactly what it's doing.&lt;/p&gt;
&lt;p&gt;You can run your DB nodes as separate physical machines, VMs, LXC instances, or
via Docker. Note that containers (LXC and Docker) can't change system clocks,
so you won't be able to test anything that relies on clock skew.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can launch a complete Jepsen cluster from the &lt;a href="https://aws.amazon.com/marketplace/pp/B01LZ7Y7U0?qid=1486758124485&amp;amp;sr=0-1&amp;amp;ref_=srh_res_product_title" rel="nofollow"&gt;AWS
Marketplace&lt;/a&gt;.
Choose "5+1 node cluster" to get an entire cluster as a Cloudformation stack,
with SSH keys and firewall rules preconfigured. Choose "Single AMI" if you'd
just like a single node.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See &lt;a href="doc/lxc.md"&gt;lxc.md&lt;/a&gt; for some of my notes on setting up LXC instances.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can also use &lt;a href="docker/README.md"&gt;Docker Compose&lt;/a&gt; for setting up Docker instances.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-running-a-test" class="anchor" aria-hidden="true" href="#running-a-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running a test&lt;/h2&gt;
&lt;p&gt;Once you've got everything set up, you should be able to run &lt;code&gt;cd aerospike; lein test&lt;/code&gt;, and it'll spit out something like&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;INFO  jepsen.core - Analysis invalid! (&lt;span class="pl-en"&gt;ﾉಥ益ಥ）ﾉ&lt;/span&gt; ┻━┻

{&lt;span class="pl-c1"&gt;:valid?&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
 &lt;span class="pl-c1"&gt;:counter&lt;/span&gt;
 {&lt;span class="pl-c1"&gt;:valid?&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:reads&lt;/span&gt;
  [[&lt;span class="pl-c1"&gt;190&lt;/span&gt; &lt;span class="pl-c1"&gt;193&lt;/span&gt; &lt;span class="pl-c1"&gt;194&lt;/span&gt;]
   [&lt;span class="pl-c1"&gt;199&lt;/span&gt; &lt;span class="pl-c1"&gt;200&lt;/span&gt; &lt;span class="pl-c1"&gt;201&lt;/span&gt;]
   [&lt;span class="pl-c1"&gt;253&lt;/span&gt; &lt;span class="pl-c1"&gt;255&lt;/span&gt; &lt;span class="pl-c1"&gt;256&lt;/span&gt;]
   ...}}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-jsch-auth-errors" class="anchor" aria-hidden="true" href="#jsch-auth-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSCH auth errors&lt;/h3&gt;
&lt;p&gt;If you see &lt;code&gt;com.jcraft.jsch.JSchException: Auth fail&lt;/code&gt;, this means something
about your test's &lt;code&gt;:ssh&lt;/code&gt; map is wrong, or your control node's SSH environment
is a bit weird.&lt;/p&gt;
&lt;ol start="0"&gt;
&lt;li&gt;Confirm that you can ssh to the node that Jepsen failed to connect to. Try
&lt;code&gt;ssh -v&lt;/code&gt; for verbose information--pay special attention to whether it uses a
password or private key.&lt;/li&gt;
&lt;li&gt;If you intend to use a username and password, confirm that they're specified
correctly in your test's &lt;code&gt;:ssh&lt;/code&gt; map.&lt;/li&gt;
&lt;li&gt;If you intend to log in with a private key, make sure your SSH agent is
running.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ssh-add -l&lt;/code&gt; should show the key you use to log in.&lt;/li&gt;
&lt;li&gt;If your agent isn't running, try launching one with &lt;code&gt;ssh-agent&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If your agent shows no keys, you might need to add it with &lt;code&gt;ssh-add&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you're SSHing to a control node, SSH might be forwarding your local
agent's keys rather than using those on the control node. Try &lt;code&gt;ssh -a&lt;/code&gt; to
disable agent forwarding.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you've SSHed to a DB node already, you might also encounter a jsch bug which
doesn't know how to read hashed known_hosts files. Remove all keys for the DB
hosts from your &lt;code&gt;known_hosts&lt;/code&gt; file, then:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ssh-keyscan -t rsa n1 &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.ssh/known_hosts
ssh-keyscan -t rsa n2 &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.ssh/known_hosts
ssh-keyscan -t rsa n3 &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.ssh/known_hosts
ssh-keyscan -t rsa n4 &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.ssh/known_hosts
ssh-keyscan -t rsa n5 &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.ssh/known_hosts&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to add unhashed versions of each node's hostkey to your &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jepsen-io</author><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item><item><title>reagent-project/reagent #6 in Clojure, Today</title><link>https://github.com/reagent-project/reagent</link><description>&lt;p&gt;&lt;i&gt;A minimalistic ClojureScript interface to React.js&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Last seen &lt;b&gt;2019-10-28&lt;/b&gt;; First seen &lt;b&gt;2019-10-28&lt;/b&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-reagent" class="anchor" aria-hidden="true" href="#reagent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reagent&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="logo.png"&gt;&lt;img src="logo.png" alt="Reagent-Project" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A simple &lt;a href="http://github.com/clojure/clojurescript"&gt;ClojureScript&lt;/a&gt; interface to &lt;a href="http://facebook.github.io/react/" rel="nofollow"&gt;React&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Reagent provides a way to write efficient React components using (almost) nothing but plain ClojureScript functions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://reagent-project.github.io/" rel="nofollow"&gt;Detailed intro with live examples&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://reagent-project.github.io/news/index.html" rel="nofollow"&gt;News&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://reagent-project.github.io/docs/master/" rel="nofollow"&gt;API Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/reagent-project/reagent/tree/master/doc"&gt;Tutorials and FAQ&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Community discussion and support channels&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://clojurians.slack.com/messages/reagent/" rel="nofollow"&gt;#reagent&lt;/a&gt;&lt;/strong&gt; channel in &lt;a href="http://clojurians.net/" rel="nofollow"&gt;Clojure Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://groups.google.com/forum/#!forum/reagent-project" rel="nofollow"&gt;Reagent Project Mailing List&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Commercial video material&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jacekschae.com/learn-reagent-free/tycit?coupon=REAGENT" rel="nofollow"&gt;Learn Reagent Free&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jacekschae.com/learn-reagent-pro/tycit?coupon=REAGENT" rel="nofollow"&gt;Learn Reagent Pro&lt;/a&gt; (Affiliate link, $30 discount)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jacekschae.com/learn-re-frame-free/tycit?coupon=REAGENT" rel="nofollow"&gt;Learn Re-frame Free&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jacekschae.com/learn-re-frame-pro/tycit?coupon=REAGENT" rel="nofollow"&gt;Learn Re-frame Pro&lt;/a&gt; (Affiliate link, $30 discount)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purelyfunctional.tv/guide/reagent/" rel="nofollow"&gt;purelyfunctional.tv &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lambdaisland.com/collections/react-reagent-re-frame" rel="nofollow"&gt;Lambda Island Videos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;To create a new Reagent project using &lt;a href="http://leiningen.org/" rel="nofollow"&gt;Leiningen&lt;/a&gt; template simply run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lein new reagent myproject
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you wish to only create the assets for ClojureScript without a Clojure backend then do the following instead:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lein new reagent-frontend myproject
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will setup a new Reagent project with some reasonable defaults, see here for more &lt;a href="https://github.com/reagent-project/reagent-template"&gt;details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To use Reagent in an existing project you add this to your dependencies in &lt;code&gt;project.clj&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://clojars.org/reagent" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f6baff29ae89778c8b04949509bf21d0ddbd005e/687474703a2f2f636c6f6a6172732e6f72672f72656167656e742f6c61746573742d76657273696f6e2e737667" alt="Clojars Project" data-canonical-src="http://clojars.org/reagent/latest-version.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;br&gt;
&lt;a href="https://circleci.com/gh/reagent-project/reagent" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6ff69ee723e4781a137a2ec49df44f54d7d1b624/68747470733a2f2f636972636c6563692e636f6d2f67682f72656167656e742d70726f6a6563742f72656167656e742e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/reagent-project/reagent.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is all you need to do if you want the standard version of React. If you want to use your own build of React (or React from a CDN), you have to use &lt;code&gt;:exclusions&lt;/code&gt; variant of the dependency, and also provide &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt; namespaces (by creating &lt;code&gt;.cljs&lt;/code&gt; files with just &lt;code&gt;ns&lt;/code&gt; form, or by adding your own &lt;code&gt;:foreign-libs&lt;/code&gt; entries).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[reagent "0.x.x" :exclusions [cljsjs/react cljsjs/react-dom]]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Reagent uses &lt;a href="https://github.com/weavejester/hiccup"&gt;Hiccup-like&lt;/a&gt; markup instead of React's sort-of html. It looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;some-component&lt;/span&gt; []
  [&lt;span class="pl-c1"&gt;:div&lt;/span&gt;
   [&lt;span class="pl-c1"&gt;:h3&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I am a component!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
   [&lt;span class="pl-c1"&gt;:p.someclass&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I have &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; [&lt;span class="pl-c1"&gt;:strong&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bold&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    [&lt;span class="pl-c1"&gt;:span&lt;/span&gt; {&lt;span class="pl-c1"&gt;:style&lt;/span&gt; {&lt;span class="pl-c1"&gt;:color&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; and red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; text.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reagent extends standard Hiccup in one way: it is possible to "squeeze" elements together by using a &lt;code&gt;&amp;gt;&lt;/code&gt; character.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;[&lt;span class="pl-c1"&gt;:div&lt;/span&gt;
  [&lt;span class="pl-c1"&gt;:p&lt;/span&gt;
    [&lt;span class="pl-c1"&gt;:b&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nested Element&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]]]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be written as:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;[&lt;span class="pl-c1"&gt;:div&amp;gt;p&amp;gt;b&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nested Element&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Since version 0.8:&lt;/strong&gt; The &lt;code&gt;:class&lt;/code&gt; attribute also supports collections of classes, and nil values are removed:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;[&lt;span class="pl-c1"&gt;:div&lt;/span&gt; {&lt;span class="pl-c1"&gt;:class&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a-class&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;when&lt;/span&gt; active? &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;active&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b-class&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}]&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can use one component inside another:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;calling-component&lt;/span&gt; []
  [&lt;span class="pl-c1"&gt;:div&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Parent component&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
   [some-component]])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And pass properties from one component to another:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;child&lt;/span&gt; [name]
  [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hi, I am &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; name])

(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;childcaller&lt;/span&gt; []
  [child &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo Bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You mount the component into the DOM like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;mountit&lt;/span&gt; []
  (&lt;span class="pl-en"&gt;r/render&lt;/span&gt; [childcaller]
            (&lt;span class="pl-en"&gt;.-body&lt;/span&gt; js/document)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;assuming we have imported Reagent like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;ns&lt;/span&gt; &lt;span class="pl-e"&gt;example&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;:require&lt;/span&gt; [reagent.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; r]))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;State is handled using Reagent's version of &lt;code&gt;atom&lt;/code&gt;, like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defonce&lt;/span&gt; &lt;span class="pl-e"&gt;click-count&lt;/span&gt; (&lt;span class="pl-en"&gt;r/atom&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;))

(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;state-ful-with-atom&lt;/span&gt; []
  [&lt;span class="pl-c1"&gt;:div&lt;/span&gt; {&lt;span class="pl-c1"&gt;:on-click&lt;/span&gt; #(&lt;span class="pl-en"&gt;swap!&lt;/span&gt; click-count inc)}
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I have been clicked &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; @click-count &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; times.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Any component that dereferences a &lt;code&gt;reagent.core/atom&lt;/code&gt; will be automatically re-rendered.&lt;/p&gt;
&lt;p&gt;If you want do some setting up when the component is first created, the component function can return a new function that will be called to do the actual rendering:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;timer-component&lt;/span&gt; []
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; [seconds-elapsed (&lt;span class="pl-en"&gt;r/atom&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)]
    (&lt;span class="pl-k"&gt;fn&lt;/span&gt; []
      (&lt;span class="pl-en"&gt;js/setTimeout&lt;/span&gt; #(&lt;span class="pl-en"&gt;swap!&lt;/span&gt; seconds-elapsed inc) &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
      [&lt;span class="pl-c1"&gt;:div&lt;/span&gt;
       &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Seconds Elapsed: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; @seconds-elapsed])))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way you can avoid using React's lifecycle callbacks like &lt;code&gt;getInitialState&lt;/code&gt; and &lt;code&gt;componentWillMount&lt;/code&gt; most of the time.&lt;/p&gt;
&lt;p&gt;But you can still use them if you want to, either using &lt;code&gt;reagent.core/create-class&lt;/code&gt; or by attaching meta-data to a component function:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defonce&lt;/span&gt; &lt;span class="pl-e"&gt;my-html&lt;/span&gt; (&lt;span class="pl-en"&gt;r/atom&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;plain-component&lt;/span&gt; []
  [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My html is &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; @my-html])

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;component-with-callback&lt;/span&gt;
  (&lt;span class="pl-en"&gt;with-meta&lt;/span&gt; plain-component
    {&lt;span class="pl-c1"&gt;:component-did-mount&lt;/span&gt;
     (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [this]
       (&lt;span class="pl-en"&gt;reset!&lt;/span&gt; my-html (&lt;span class="pl-en"&gt;.-innerHTML&lt;/span&gt; (&lt;span class="pl-en"&gt;reagent/dom-node&lt;/span&gt; this))))}))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the examples directory for more examples.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h2&gt;
&lt;p&gt;React is pretty darn fast, and so is Reagent. It should even be faster than plain old javascript React a lot of the time, since ClojureScript allows us to skip a lot of unnecessary rendering (through judicious use of React's &lt;code&gt;shouldComponentUpdate&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The ClojureScript overhead is kept down, thanks to lots of caching.&lt;/p&gt;
&lt;p&gt;Code size is a little bigger than React.js, but still quite small. The todomvc example clocks in at roughly 79K gzipped, using advanced compilation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;The idea and some of the code for making components atom-like comes from &lt;a href="https://github.com/piranha/pump"&gt;pump&lt;/a&gt;. The reactive-atom idea (and some code) comes from &lt;a href="https://github.com/lynaghk/reflex"&gt;reflex&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The license is MIT.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>reagent-project</author><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item><item><title>borkdude/sci #7 in Clojure, Today</title><link>https://github.com/borkdude/sci</link><description>&lt;p&gt;&lt;i&gt;Small Clojure Interpreter&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Last seen &lt;b&gt;2019-10-28&lt;/b&gt;; First seen &lt;b&gt;2019-10-28&lt;/b&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-small-clojure-interpreter" class="anchor" aria-hidden="true" href="#small-clojure-interpreter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Small Clojure Interpreter&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/borkdude/sci/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08cd8ab8d5d58945077f30e61c25704ea421937d/68747470733a2f2f636972636c6563692e636f6d2f67682f626f726b647564652f7363692f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/borkdude/sci/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojars.org/borkdude/sci" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80f41ff368767c16dfb2695d1f472b65677dfda6/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f626f726b647564652f7363692e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/borkdude/sci.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@borkdude/sci" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed34181aef3828517d477b396728f60dd5f5f30a/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40626f726b647564652f736369" alt="NPM Project" data-canonical-src="https://img.shields.io/npm/v/@borkdude/sci" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cljdoc.org/d/borkdude/sci/CURRENT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2f28e762ac4c9154a34ec7fcbffa8dc245d39624/68747470733a2f2f636c6a646f632e6f72672f62616467652f626f726b647564652f736369" alt="cljdoc badge" data-canonical-src="https://cljdoc.org/badge/borkdude/sci" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A tiny implementation of Clojure in Clojure.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-use-from-clojurescript" class="anchor" aria-hidden="true" href="#use-from-clojurescript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use from Clojure(Script)&lt;/h3&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[sci.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; sci])
(&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(inc 1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) =&amp;gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; 2&lt;/span&gt;
(&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(inc x)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'x &lt;span class="pl-c1"&gt;2&lt;/span&gt;}}) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Read &lt;a href="#Usage"&gt;here&lt;/a&gt; how to use sci from Clojure.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-use-from-javascript" class="anchor" aria-hidden="true" href="#use-from-javascript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use from JavaScript&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;evalString&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;@borkdude/sci&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;opts&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {bindings&lt;span class="pl-k"&gt;:&lt;/span&gt; {&lt;span class="pl-en"&gt;f&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;() { &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); }}};
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;evalString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(dotimes [i 2] (f))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, opts);
hello
hello&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note for JavaScript users: the JS API is similar to the Clojure one. Instead of
symbols and keywords it expects strings. Instead of kebab-case, use
camelCase. Read &lt;a href="#Usage"&gt;here&lt;/a&gt; how to use sci from Clojure.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-use-from-java" class="anchor" aria-hidden="true" href="#use-from-java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use from Java&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;borkdude.sci.*&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;borkdude.sci.options.*&lt;/span&gt;;

&lt;span class="pl-smi"&gt;Namespace&lt;/span&gt; fooBar &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Namespace&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo.bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
fooBar&lt;span class="pl-k"&gt;.&lt;/span&gt;addVar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Options&lt;/span&gt; opts &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Options&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;addNamespace(fooBar);
&lt;span class="pl-smi"&gt;Sci&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;evalString(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo.bar/x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, opts); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note for Java users: the Java API for is conceptually similar to the Clojure
one, but made more idiomatic for Java users. Check the generated &lt;a href="https://borkdude.github.io/sci/javadoc/index.html" rel="nofollow"&gt;Java
documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale&lt;/h2&gt;
&lt;p&gt;You want to evaluate code from user input, or use Clojure for a DSL inside
configuration files, but &lt;code&gt;eval&lt;/code&gt; isn't safe or simply doesn't work.&lt;/p&gt;
&lt;p&gt;This library works with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clojure on the JVM&lt;/li&gt;
&lt;li&gt;Clojure compiled with GraalVM native&lt;/li&gt;
&lt;li&gt;ClojureScript, even when compiled with &lt;code&gt;:advanced&lt;/code&gt;, and (as a consequence) JavaScript&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is used as the interpreter for
&lt;a href="https://github.com/borkdude/babashka"&gt;babashka&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;Experimental. Breaking changes are expected to happen at this phase.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Use as a dependency:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://clojars.org/borkdude/sci" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80f41ff368767c16dfb2695d1f472b65677dfda6/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f626f726b647564652f7363692e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/borkdude/sci.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@borkdude/sci" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed34181aef3828517d477b396728f60dd5f5f30a/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40626f726b647564652f736369" alt="NPM Project" data-canonical-src="https://img.shields.io/npm/v/@borkdude/sci" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Currently the only API function is &lt;code&gt;sci.core/eval-string&lt;/code&gt; which takes a string
to evaluate and an optional options map.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;sci&lt;/code&gt;, &lt;code&gt;defn&lt;/code&gt; does not mutate the outside world, only the evaluation
context inside a call to &lt;code&gt;sci/eval-string&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default &lt;code&gt;sci&lt;/code&gt; only enables access to the pure non-side-effecting functions in
Clojure.  More functions can be enabled, at your own risk, using &lt;code&gt;:bindings&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-k"&gt;require&lt;/span&gt; '[sci.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; sci])
user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(println &lt;span class="pl-cce"&gt;\"&lt;/span&gt;hello&lt;span class="pl-cce"&gt;\"&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'println println}})
hello
&lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also possible to provide namespaces which can be required:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;opts&lt;/span&gt; {&lt;span class="pl-c1"&gt;:namespaces&lt;/span&gt; {'foo.bar {'println println}}})
user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(require '[foo.bar :as lib]) (lib/println &lt;span class="pl-cce"&gt;\"&lt;/span&gt;hello&lt;span class="pl-cce"&gt;\"&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; opts)
hello
&lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can provide a list of allowed symbols. Using other symbols causes an exception:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(inc 1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:allow&lt;/span&gt; '[inc]})
&lt;span class="pl-c1"&gt;2&lt;/span&gt;
user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(dec 1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:allow&lt;/span&gt; '[inc]})
ExceptionInfo dec is not allowed! [at line &lt;span class="pl-c1"&gt;1&lt;/span&gt;, column &lt;span class="pl-c1"&gt;2&lt;/span&gt;]  clojure.core/ex-info (&lt;span class="pl-en"&gt;core.clj:4739&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Providing a list of disallowed symbols has the opposite effect:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(inc 1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:deny&lt;/span&gt; '[inc]})
ExceptionInfo inc is not allowed! [at line &lt;span class="pl-c1"&gt;1&lt;/span&gt;, column &lt;span class="pl-c1"&gt;2&lt;/span&gt;]  clojure.core/ex-info (&lt;span class="pl-en"&gt;core.clj:4739&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Preventing forever lasting evaluation of infinite sequences can be achieved with
&lt;code&gt;:realize-max&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(vec (range))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:realize-max&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;})
ExceptionInfo Maximum number of elements realized: &lt;span class="pl-c1"&gt;10&lt;/span&gt; [at line &lt;span class="pl-c1"&gt;1&lt;/span&gt;, column &lt;span class="pl-c1"&gt;1&lt;/span&gt;]  clojure.core/ex-info (&lt;span class="pl-en"&gt;core.clj:4739&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The preset &lt;code&gt;:termination-safe&lt;/code&gt;, which is currently &lt;code&gt;{:deny '[loop recur trampoline] :realize-max 100}&lt;/code&gt;, is helpful for making expressions terminate:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(loop [] (recur))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:preset&lt;/span&gt; &lt;span class="pl-c1"&gt;:termination-safe&lt;/span&gt;})
ExceptionInfo &lt;span class="pl-k"&gt;loop&lt;/span&gt; is not allowed! [at line &lt;span class="pl-c1"&gt;1&lt;/span&gt;, column &lt;span class="pl-c1"&gt;2&lt;/span&gt;]  clojure.core/ex-info (&lt;span class="pl-en"&gt;core.clj:4739&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Providing a macro as a binding can be done by providing a normal function that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;has &lt;code&gt;:sci/macro&lt;/code&gt; on the metadata set to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;has two extra arguments at the start for &lt;code&gt;&amp;amp;form&lt;/code&gt; and &lt;code&gt;&amp;amp;env&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;do-twice&lt;/span&gt; ^:sci/macro (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [_&amp;amp;env _&amp;amp;form x] (&lt;span class="pl-en"&gt;list&lt;/span&gt; 'do x x)))
user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(do-twice (f))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'do-twice do-twice 'f #(&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)}})
hello
hello
&lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-feature-parity" class="anchor" aria-hidden="true" href="#feature-parity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature parity&lt;/h2&gt;
&lt;p&gt;Currently the following special forms/macros are supported: &lt;code&gt;def&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt;,
function literals (&lt;code&gt;#(inc %)&lt;/code&gt;), &lt;code&gt;defn&lt;/code&gt;, &lt;code&gt;quote&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;,&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;if-let&lt;/code&gt;, &lt;code&gt;if-not&lt;/code&gt;,
&lt;code&gt;when&lt;/code&gt;, &lt;code&gt;when-let&lt;/code&gt;, &lt;code&gt;when-not&lt;/code&gt;, &lt;code&gt;cond&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;-&amp;gt;&lt;/code&gt;, &lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;as-&amp;gt;&lt;/code&gt;,
&lt;code&gt;comment&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;lazy-seq&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;doseq&lt;/code&gt;, &lt;code&gt;case&lt;/code&gt;, &lt;code&gt;try/catch/finally&lt;/code&gt;,
&lt;code&gt;declare&lt;/code&gt;, &lt;code&gt;cond-&amp;gt;&lt;/code&gt;, &lt;code&gt;cond-&amp;gt;&amp;gt;&lt;/code&gt;. Sci also supports user defined macros.&lt;/p&gt;
&lt;p&gt;More examples of what is currently possible can be found at
&lt;a href="https://github.com/borkdude/babashka"&gt;babashka&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you miss something, feel free to post an issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-caveats" class="anchor" aria-hidden="true" href="#caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats&lt;/h2&gt;
&lt;p&gt;To make the &lt;code&gt;rand-*&lt;/code&gt; functions behave well when compiling to a GraalVM native binary, use this setting:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;--initialize-at-run-time=java.lang.Math\$RandomNumberGeneratorHolder&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-test" class="anchor" aria-hidden="true" href="#test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test&lt;/h2&gt;
&lt;p&gt;Required: &lt;code&gt;lein&lt;/code&gt;, the &lt;code&gt;clojure&lt;/code&gt; CLI and GraalVM.&lt;/p&gt;
&lt;p&gt;To succesfully run the GraalVM tests, you will have to compile the binary first
with &lt;code&gt;script/compile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To run all tests:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;script/test/all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For running individual tests, see the scripts in &lt;code&gt;script/test&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019 Michiel Borkent&lt;/p&gt;
&lt;p&gt;Distributed under the Eclipse Public License 1.0. This project contains code
from Clojure and ClojureScript which are also licensed under the EPL 1.0. See
LICENSE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>borkdude</author><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item><item><title>borkdude/edamame #8 in Clojure, Today</title><link>https://github.com/borkdude/edamame</link><description>&lt;p&gt;&lt;i&gt;EDN parser with location metadata and pluggable dispatch table.&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Last seen &lt;b&gt;2019-10-28&lt;/b&gt;; First seen &lt;b&gt;2019-10-28&lt;/b&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-edamame" class="anchor" aria-hidden="true" href="#edamame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Edamame&lt;/h1&gt;
&lt;p&gt;EDN parser with location metadata and pluggable dispatch table.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/borkdude/edamame/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2a3a7210462cec624d68a14886f38f4b7cfee373/68747470733a2f2f636972636c6563692e636f6d2f67682f626f726b647564652f6564616d616d652f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/borkdude/edamame/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojars.org/borkdude/edamame" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/334c9f640c46f39bc2c0272ab185d043698dc54a/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f626f726b647564652f6564616d616d652e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/borkdude/edamame.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cljdoc.org/d/borkdude/edamame/CURRENT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/800ba8e5737b83c980d71b0983f863f775cf9763/68747470733a2f2f636c6a646f632e6f72672f62616467652f626f726b647564652f6564616d616d65" alt="cljdoc badge" data-canonical-src="https://cljdoc.org/badge/borkdude/edamame" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale&lt;/h2&gt;
&lt;p&gt;This library can be useful when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You want to include locations in feedback about EDN files.&lt;/li&gt;
&lt;li&gt;You want to parse Clojure-like expressions and want to add support for unsupported EDN characters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This library came out of &lt;a href="https://github.com/borkdude/sci"&gt;sci&lt;/a&gt;, a small Clojure interpreter.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Parse EDN values with location as metadata.&lt;/li&gt;
&lt;li&gt;Pluggable dispatch table to extend EDN.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This library works with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clojure on the JVM&lt;/li&gt;
&lt;li&gt;ClojureScript&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[edamame.core &lt;span class="pl-c1"&gt;:refer&lt;/span&gt; [parse-string]])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Locations are attached as metadata:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;s&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;[{:a 1}&lt;/span&gt;
&lt;span class="pl-s"&gt; {:b 2}]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-en"&gt;map&lt;/span&gt; meta (&lt;span class="pl-en"&gt;parse-string&lt;/span&gt; s))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt;&lt;/span&gt;
({&lt;span class="pl-c1"&gt;:row&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;:col&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}
 {&lt;span class="pl-c1"&gt;:row&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;:col&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;})

(&lt;span class="pl-en"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{:a {:b {:c [a b c]}}}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
     parse-string
     (&lt;span class="pl-en"&gt;tree-seq&lt;/span&gt; coll? #(&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;map?&lt;/span&gt; %) (&lt;span class="pl-en"&gt;vals&lt;/span&gt; %) %))
     (&lt;span class="pl-en"&gt;map&lt;/span&gt; meta))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt;&lt;/span&gt;
({&lt;span class="pl-c1"&gt;:row&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:col&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}
 {&lt;span class="pl-c1"&gt;:row&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:col&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;}
 {&lt;span class="pl-c1"&gt;:row&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:col&lt;/span&gt; &lt;span class="pl-c1"&gt;9&lt;/span&gt;}
 {&lt;span class="pl-c1"&gt;:row&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:col&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt;}
 {&lt;span class="pl-c1"&gt;:row&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:col&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt;}
 {&lt;span class="pl-c1"&gt;:row&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:col&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt;}
 {&lt;span class="pl-c1"&gt;:row&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:col&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dispatch on a character, even if it's unsupported in EDN:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;parse-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:dispatch&lt;/span&gt; {\@ (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [val] (&lt;span class="pl-en"&gt;list&lt;/span&gt; 'deref val))}})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; (deref foo)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dispatch on dispatch characters:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;parse-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#&lt;span class="pl-cce"&gt;\"&lt;/span&gt;foo&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:dispatch&lt;/span&gt; {\# {\" #(&lt;span class="pl-en"&gt;re-pattern&lt;/span&gt; %)}}})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; #"foo"&lt;/span&gt;

(&lt;span class="pl-en"&gt;parse-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#(inc 1 2 %)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:dispatch&lt;/span&gt; {\# {\(&lt;span class="pl-en"&gt; (fn&lt;/span&gt; [expr] (&lt;span class="pl-en"&gt;read-string&lt;/span&gt; (&lt;span class="pl-en"&gt;str&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; expr)))}}})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; (fn* [p1__11574#] (inc 1 2 p1__11574#))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Process reader conditionals:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;parse-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[1 2 #?@(:cljs [3 4])]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:features&lt;/span&gt; #{&lt;span class="pl-c1"&gt;:cljs&lt;/span&gt;} &lt;span class="pl-c1"&gt;:read-cond&lt;/span&gt; &lt;span class="pl-c1"&gt;:allow&lt;/span&gt;})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; [1 2 3 4]&lt;/span&gt;

(&lt;span class="pl-en"&gt;parse-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[1 2 #?@(:cljs [3 4])]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:features&lt;/span&gt; #{&lt;span class="pl-c1"&gt;:cljs&lt;/span&gt;} &lt;span class="pl-c1"&gt;:read-cond&lt;/span&gt; &lt;span class="pl-c1"&gt;:preserve&lt;/span&gt;})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; [1 2 #?@(:cljs [3 4])]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-test" class="anchor" aria-hidden="true" href="#test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;script/test/jvm
script/test/node
script/test/all
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;Experimental. Breaking changes are expected to happen at this phase.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Use as a dependency:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://clojars.org/borkdude/edamame" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/334c9f640c46f39bc2c0272ab185d043698dc54a/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f626f726b647564652f6564616d616d652e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/borkdude/edamame.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;The code is largely inspired by
&lt;a href="https://github.com/xsc/rewrite-clj"&gt;rewrite-clj&lt;/a&gt; and derived projects.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019 Michiel Borkent&lt;/p&gt;
&lt;p&gt;Distributed under the Eclipse Public License 1.0. This project contains code
from Clojure and ClojureScript which are also licensed under the EPL 1.0. See
LICENSE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>borkdude</author><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item><item><title>functional-koans/clojure-koans #9 in Clojure, Today</title><link>https://github.com/functional-koans/clojure-koans</link><description>&lt;p&gt;&lt;i&gt;A set of exercises for learning Clojure&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Last seen &lt;b&gt;2019-10-28&lt;/b&gt;; First seen &lt;b&gt;2019-10-28&lt;/b&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-clojure-koans" class="anchor" aria-hidden="true" href="#clojure-koans"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clojure Koans&lt;/h1&gt;
&lt;p&gt;The Clojure Koans are a fun way to get started with Clojure - no experience
assumed or required. Follow the instructions below to start making tests pass!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;I recommend starting from a cloned or forked repo. This way you'll be able to
track your progress in Git. You might want to create your own branch - that way
if you pull back the latest koans from master, it'll be a bit easier to manage
the inevitable conflicts if we make changes to exercises you've already
completed.&lt;/p&gt;
&lt;p&gt;You have a few options for installation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the dependencies for the koans (such as Clojure) on your machine&lt;/li&gt;
&lt;li&gt;Use Vagrant and the configuration in this repository&lt;/li&gt;
&lt;li&gt;Use Docker&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Instructions for each option are below!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-on-your-machine" class="anchor" aria-hidden="true" href="#installation-on-your-machine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation on Your Machine&lt;/h3&gt;
&lt;p&gt;The only things you'll need to run the Clojure Koans are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK (I suggest version 8, but anything 6 or above should work fine)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/technomancy/leiningen"&gt;Leiningen&lt;/a&gt;, a build tool for Clojure&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you've cloned this repo and installed the dependencies, you can run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lein repl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to make sure all the dependencies get downloaded properly (and then &lt;code&gt;(exit)&lt;/code&gt;
when you want to quit). See below for details on the REPL.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-with-vagrant" class="anchor" aria-hidden="true" href="#installation-with-vagrant"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation with Vagrant&lt;/h3&gt;
&lt;p&gt;Make sure you have &lt;a href="https://www.vagrantup.com/" rel="nofollow"&gt;Vagrant&lt;/a&gt; and
&lt;a href="https://www.virtualbox.org" rel="nofollow"&gt;VirtualBox&lt;/a&gt; installed.
In the root directory of the project, execute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vagrant up
vagrant ssh
cd /vagrant
lein koan run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-installation-with-docker" class="anchor" aria-hidden="true" href="#installation-with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation with Docker&lt;/h3&gt;
&lt;p&gt;Once you've got &lt;a href="https://www.docker.com/" rel="nofollow"&gt;Docker&lt;/a&gt; installed, you're basically
all set. You can run these commands to get started:&lt;/p&gt;
&lt;p&gt;To run koans:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --rm -it -v $(pwd):/app -w /app clojure lein koan run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To start up a REPL:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --rm -it -v $(pwd):/app -w /app clojure lein repl
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-running-the-koans" class="anchor" aria-hidden="true" href="#running-the-koans"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the Koans&lt;/h2&gt;
&lt;p&gt;Run the koans via:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lein koan run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If want to run directly from a REPL, once you are inside the &lt;code&gt;lein repl&lt;/code&gt; prompt you can run the koans with&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(exec "run")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Either way, it's an auto-runner, so as you save your files with the correct
answers, it will advance you to the next koan or file (conveniently, all files
are prefixed with the sequence that you should follow).&lt;/p&gt;
&lt;p&gt;You'll see something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Now meditate on /home/colin/Projects/clojure-koans/src/koans/01_equalities.clj:3
---------------------
Assertion failed!
We shall contemplate truth by testing reality, via equality.
(= __ true)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output is telling you that you have a failing test in the file named
&lt;code&gt;01_equalities.clj&lt;/code&gt;, on line 3. So you need to open that file up and make
it pass!  You'll always be filling in the blanks to make tests pass.
Sometimes there could be several correct answers (or even an infinite number):
any of them will work in these cases. Some tests will pass even if you replace
the blanks with whitespace (or nothing) instead of the expected answer. Make sure
you give one correct expression to replace each blank.&lt;/p&gt;
&lt;p&gt;The koans differ from normal TDD in that the tests are already written for you,
so you'll have to pay close attention to the failure messages, because up until
the very end, making a test pass means that the next failure message comes
up.&lt;/p&gt;
&lt;p&gt;While it might be easy (especially at first) to fill in the blanks making
things pass, you should work thoughtfully, making sure you understand why the
answer is what it is.  Enjoy your path to Clojure enlightenment!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-trying-more-things-out" class="anchor" aria-hidden="true" href="#trying-more-things-out"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Trying more things out&lt;/h2&gt;
&lt;p&gt;It's very useful to try things out in a REPL (Read-Evaluate-Print Loop)
whenever you get stuck or curious. Run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lein repl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and you'll be able to type expressions in, and see what output they produce.&lt;/p&gt;
&lt;p&gt;Here are some interesting commands you might try, once you're in a running REPL:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;find-doc&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;vec&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-en"&gt;find-doc&lt;/span&gt; &lt;span class="pl-sr"&gt;#"vec$"&lt;/span&gt;)
(&lt;span class="pl-en"&gt;doc&lt;/span&gt; vec)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And if those still don't make sense:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;doc&lt;/span&gt; doc)
(&lt;span class="pl-en"&gt;doc&lt;/span&gt; find-doc)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will show you what those commands mean.&lt;/p&gt;
&lt;p&gt;You can exit the REPL with &lt;code&gt;CTRL-d&lt;/code&gt;, &lt;code&gt;(exit)&lt;/code&gt;, or &lt;code&gt;(quit)&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Patches are encouraged!  Make sure the answer sheet still passes
(&lt;code&gt;lein koan test&lt;/code&gt;), and send a pull request.&lt;/p&gt;
&lt;p&gt;The file ideaboard.txt has lots of good ideas for new koans to start, or things
to add to existing koans.  So write some fun exercises, add your answers to
&lt;code&gt;resources/koans.clj&lt;/code&gt;, and we'll get them in there!&lt;/p&gt;
&lt;p&gt;Please follow the guidelines in
&lt;a href="http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html" rel="nofollow"&gt;http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html&lt;/a&gt; for
commit messages, and put your code in a feature branch (not master) before
making the pull request. This makes patches easier to review.&lt;/p&gt;
&lt;p&gt;Feel free to contact me (Colin Jones / trptcolin) on Github or elsewhere if you
have any questions or want more direction before you start pitching in.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/functional-koans/clojure-koans/contributors"&gt;https://github.com/functional-koans/clojure-koans/contributors&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;These exercises were started by &lt;a href="http://github.com/abedra"&gt;Aaron Bedra&lt;/a&gt; of
&lt;a href="http://github.com/relevance"&gt;Relevance, Inc.&lt;/a&gt; in early 2010, as a learning
tool for newcomers to functional programming. Aaron's macro-fu makes these
koans clear and fun to use and improve upon, and without Relevance's
initiative, this project would not exist.&lt;/p&gt;
&lt;p&gt;Using the &lt;a href="http://en.wikipedia.org/wiki/koan" rel="nofollow"&gt;koans&lt;/a&gt; metaphor as a tool for
learning a programming language started with the
&lt;a href="http://rubykoans.com" rel="nofollow"&gt;Ruby Koans&lt;/a&gt; by &lt;a href="http://github.com/edgecase"&gt;EdgeCase&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The use and distribution terms for this software are covered by the
Eclipse Public License 1.0 (&lt;a href="http://opensource.org/licenses/eclipse-1.0.php" rel="nofollow"&gt;http://opensource.org/licenses/eclipse-1.0.php&lt;/a&gt;)
which can be found in the file epl-v10.html at the root of this distribution.
By using this software in any fashion, you are agreeing to be bound by
the terms of this license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>functional-koans</author><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item><item><title>singer-io/tap-mssql #10 in Clojure, Today</title><link>https://github.com/singer-io/tap-mssql</link><description>&lt;p&gt;&lt;i&gt;Singer.io Tap for Microsoft SQL Server (MSSQL)&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Last seen &lt;b&gt;2019-10-28&lt;/b&gt;; First seen &lt;b&gt;2019-10-28&lt;/b&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-tap-mssql" class="anchor" aria-hidden="true" href="#tap-mssql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tap-mssql&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/singer-io/tap-mssql" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/057568ca74caee02e811761f8924e1b718fa59b7/68747470733a2f2f636972636c6563692e636f6d2f67682f73696e6765722d696f2f7461702d6d7373716c2e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/singer-io/tap-mssql.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.singer.io/" rel="nofollow"&gt;Singer&lt;/a&gt; tap that extracts data from a &lt;a href="https://www.microsoft.com/en-us/sql-server/default.aspx" rel="nofollow"&gt;Microsoft SQL Server (MSSQL)&lt;/a&gt; database and produces JSON-formatted data following the &lt;a href="https://github.com/singer-io/getting-started/blob/master/docs/SPEC.md"&gt;Singer spec&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;This tap is written in Clojure, and as such, requires the JVM. It has been consistently tested to run using &lt;code&gt;OpenJDK 8&lt;/code&gt;, which can be installed on Ubuntu using these commands.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get update &amp;amp;&amp;amp; apt-get install -y openjdk-8-jdk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Associated tooling required to use the scripts in this repository follow. (Running the latest versions)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leiningen.org/" rel="nofollow"&gt;&lt;strong&gt;Leiningen&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.docker.com/" rel="nofollow"&gt;&lt;strong&gt;Docker (for integration tests)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/sql/tools/mssql-cli?view=sql-server-2017" rel="nofollow"&gt;&lt;strong&gt;MSSQL CLI (to connect to test database)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ bin/tap-mssql --config config.json --discover &amp;gt; catalog.json
$ bin/tap-mssql --config config.json --catalog catalog.json --state state.json | target...
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;In the &lt;code&gt;bin&lt;/code&gt; folder, there are a few utility scripts to simplify interacting with this tap. Many of these scripts rely on some environment variables being set, see "Testing Infrastructure Design" for more information.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bin/tap-mssql&lt;/strong&gt; - This script wraps the &lt;code&gt;lein&lt;/code&gt; command to run the tap from source code. It is analogous to the command installed by setuptools in Python taps.&lt;/p&gt;
&lt;p&gt;As this is a Clojure tap, it supports a non-standard mode of operation by passing the &lt;code&gt;--repl&lt;/code&gt; flag. This will start an NREPL server and log the port that it is running on to connect from an IDE for REPL driven development. It is compatible with all other command-line arguments, or can be used on its own. If the tap is invoked in discovery or sync mode along with &lt;code&gt;--repl&lt;/code&gt;, the process will be kept alive after the usual Singer process is completed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Example:
# Discovery
$ bin/tap-mssql --config config.json --discover &amp;gt; catalog.json

# Sync
$ bin/tap-mssql --config config.json --catalog catalog.json --state state.json

# REPL Mode
$ bin/tap-mssql --config config.json --repl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;bin/test&lt;/strong&gt; - This script wraps &lt;code&gt;lein test&lt;/code&gt; in order to run the Clojure unit and integration tests against a database running locally.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Example:
$ bin/test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;bin/test-db&lt;/strong&gt; - This script uses docker to run a SQL Server container locally that can be used to run the unit tests against. See the usage text for more information.&lt;/p&gt;
&lt;p&gt;Note: It also depends on the &lt;code&gt;mssql-cli&lt;/code&gt; tool being installed in order to use the &lt;code&gt;connect&lt;/code&gt; option.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Example:
$ bin/test-db start
$ bin/test-db connect
$ bin/test-db stop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;bin/circleci-local&lt;/strong&gt; - This script wraps the &lt;a href="https://circleci.com/docs/2.0/local-cli/" rel="nofollow"&gt;&lt;code&gt;circleci&lt;/code&gt; CLI tool&lt;/a&gt; to run the Clojure unit and integration tests in the way CircleCI does, on localhost.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Example:
$ bin/circleci-local
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-testing-infrastructure-design" class="anchor" aria-hidden="true" href="#testing-infrastructure-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing Infrastructure Design&lt;/h2&gt;
&lt;p&gt;Each actor (developer, CI, etc.) needs their own testing infrastructure so
that development can proceed and be verified independently of each other.
In order to provide this isolation, we've migrated towards a Docker-based
solution.&lt;/p&gt;
&lt;p&gt;A script, &lt;code&gt;bin/test-db&lt;/code&gt; has been provided that will honor several
environment variables and manage the container required by the development
and testing.&lt;/p&gt;
&lt;p&gt;The environment variables are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;STITCH_TAP_MSSQL_TEST_DATABASE_USER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The admin user that should be used to connect to the test database (for docker, this is SA)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;STITCH_TAP_MSSQL_TEST_DATABASE_PASSWORD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The password for the user (if docker, the SA user will be configured with this password)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;STITCH_TAP_MSSQL_TEST_DATABASE_PORT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The port for hosting the server. (Default 1433)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To interact with the container, these commands are available:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bin/test-db start&lt;/code&gt; - Starts the container under the name &lt;code&gt;sql1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bin/test-db connect&lt;/code&gt; - Uses &lt;code&gt;mssql-cli&lt;/code&gt; to open a shell to the local MSSQL instance&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bin/test-db stop&lt;/code&gt; - Tears down and removes the container&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There is no volume binding, so all of the data and state in the
running container is entirely ephemeral&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-observed-error-messages" class="anchor" aria-hidden="true" href="#observed-error-messages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observed error messages:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# Bad Host Message

The TCP/IP connection to the host charnock.org, port 51552 has failed.
Error: "connect timed out. Verify the connection properties. Make sure
that an instance of SQL Server is running on the host and accepting
TCP/IP connections at the port. Make sure that TCP connections to the
port are not blocked by a firewall.".

# Unspecified azure server error message

Cannot open server "127.0.0.1" requested by the login. The login
failed. ClientConnectionId:33b6ae38-254a-483b-ba24-04d69828fe0c


# Bad dbname error message

Login failed for user 'foo'.
ClientConnectionId:4c47c255-a330-4bc9-94bd-039c592a8a31

# Database does not exist

Cannot open database "foo" requested by the login. The login
failed. ClientConnectionId:f6e2df79-1d72-4df3-8c38-2a9e7a349003
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Copyright © 2019 Stitch&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>singer-io</author><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item></channel></rss>