<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Clojure, Today</title><link>https://github.com/trending/clojure?since=daily</link><description>The top repositories on GitHub for clojure, measured daily</description><pubDate>Wed, 22 Jan 2020 01:07:00 GMT</pubDate><lastBuildDate>Wed, 22 Jan 2020 01:07:00 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>metabase/metabase #1 in Clojure, Today</title><link>https://github.com/metabase/metabase</link><description>&lt;p&gt;&lt;i&gt;The simplest, fastest way to get business intelligence and analytics  to everyone in your company :yum:&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-metabase" class="anchor" aria-hidden="true" href="#metabase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Metabase&lt;/h1&gt;
&lt;p&gt;Metabase is the easy, open source way for everyone in your company to ask questions and learn from data.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/metabase-product-screenshot.png"&gt;&lt;img src="docs/metabase-product-screenshot.png" alt="Metabase Product Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/metabase/metabase/releases"&gt;&lt;img src="https://camo.githubusercontent.com/ea5e30e904914ce7e90f1545526b8a6cc043618e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6d657461626173652f6d657461626173652e7376673f6c6162656c3d6c617465737425323072656c65617365" alt="Latest Release" data-canonical-src="https://img.shields.io/github/release/metabase/metabase.svg?label=latest%20release" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/metabase/metabase/master/LICENSE.txt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b59a8ca795689678e6caf56900294059cfe64ba3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4147504c2d3035423843432e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-AGPL-05B8CC.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/metabase/metabase" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a81f1ec3024eb4ce825b1eb8604cfc01e5a4b62c/68747470733a2f2f636972636c6563692e636f6d2f67682f6d657461626173652f6d657461626173652e7376673f7374796c653d73766726636972636c652d746f6b656e3d33636366306161383431303238616630323766326163396538646631376365363033653930656639" alt="Circle CI" data-canonical-src="https://circleci.com/gh/metabase/metabase.svg?style=svg&amp;amp;circle-token=3ccf0aa841028af027f2ac9e8df17ce603e90ef9" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/metabase/metabase" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/315f2b9c3a2b05d7fef4a53142339050088ff7d4/68747470733a2f2f6261646765732e6769747465722e696d2f6d657461626173652f6d657461626173652e706e67" alt="Gitter chat" data-canonical-src="https://badges.gitter.im/metabase/metabase.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;5 minute &lt;a href="https://metabase.com/docs/latest/setting-up-metabase.html" rel="nofollow"&gt;setup&lt;/a&gt; (We're not kidding)&lt;/li&gt;
&lt;li&gt;Let anyone on your team &lt;a href="https://metabase.com/docs/latest/users-guide/04-asking-questions.html" rel="nofollow"&gt;ask questions&lt;/a&gt; without knowing SQL&lt;/li&gt;
&lt;li&gt;Rich beautiful &lt;a href="https://metabase.com/docs/latest/users-guide/06-sharing-answers.html" rel="nofollow"&gt;dashboards&lt;/a&gt; with auto refresh and fullscreen&lt;/li&gt;
&lt;li&gt;SQL Mode for analysts and data pros&lt;/li&gt;
&lt;li&gt;Create canonical &lt;a href="https://metabase.com/docs/latest/administration-guide/07-segments-and-metrics.html" rel="nofollow"&gt;segments and metrics&lt;/a&gt; for your team to use&lt;/li&gt;
&lt;li&gt;Send data to Slack or email on a schedule with &lt;a href="https://metabase.com/docs/latest/users-guide/10-pulses.html" rel="nofollow"&gt;Pulses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;View data in Slack anytime with &lt;a href="https://metabase.com/docs/latest/users-guide/11-metabot.html" rel="nofollow"&gt;MetaBot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://metabase.com/docs/latest/administration-guide/03-metadata-editing.html" rel="nofollow"&gt;Humanize data&lt;/a&gt; for your team by renaming, annotating and hiding fields&lt;/li&gt;
&lt;li&gt;See changes in your data with &lt;a href="https://www.metabase.com/docs/latest/users-guide/15-alerts.html" rel="nofollow"&gt;alerts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information check out &lt;a href="https://metabase.com/" rel="nofollow"&gt;metabase.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-databases" class="anchor" aria-hidden="true" href="#supported-databases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported databases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Postgres&lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;Druid&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;Redshift&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;li&gt;Google BigQuery&lt;/li&gt;
&lt;li&gt;SQLite&lt;/li&gt;
&lt;li&gt;H2&lt;/li&gt;
&lt;li&gt;Oracle&lt;/li&gt;
&lt;li&gt;Vertica&lt;/li&gt;
&lt;li&gt;Presto&lt;/li&gt;
&lt;li&gt;Snowflake&lt;/li&gt;
&lt;li&gt;SparkSQL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Don't see your favorite database? File an issue to let us know.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Metabase can be run just about anywhere so checkout our &lt;a href="https://metabase.com/docs/latest/operations-guide/start.html#installing-and-running-metabase" rel="nofollow"&gt;Installation Guides&lt;/a&gt; for detailed instructions for various deployments.  Here's the TLDR:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h3&gt;
&lt;p&gt;To run Metabase via Docker, just type&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run -d -p 3000:3000 --name metabase metabase/metabase&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-jvm-jar" class="anchor" aria-hidden="true" href="#jvm-jar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JVM Jar&lt;/h3&gt;
&lt;p&gt;To run the jar you will need to have a Java Runtime installed. As a quick check to see if you system already has one, try&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;java -version&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you see something like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;java version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.8.0_51&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
Java(TM) SE Runtime Environment (build 1.8.0_51-b16)
Java HotSpot(TM) 64-Bit Server VM (build 25.51-b03, mixed mode)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;you are good to go. Otherwise, download the Java Runtime Environment at &lt;a href="http://java.com/" rel="nofollow"&gt;http://java.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Go to the &lt;a href="https://metabase.com/start/" rel="nofollow"&gt;Metabase Download Page&lt;/a&gt; and download the current build. Place the downloaded jar into a newly created directory (as it will create some files when it is run), and run it on the command line:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;java -jar metabase.jar&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, open a browser and go to &lt;a href="http://localhost:3000" rel="nofollow"&gt;http://localhost:3000&lt;/a&gt; , and you will be asked a set of questions that will set up a user account, and then you can add a database connection. For this to work you will need to get some information about which database you want to connect to, such as the Host Name and Port that it is running on, the Database Name and the User and Password that you will be using.&lt;/p&gt;
&lt;p&gt;Once you have added this connection, you will be taken into the app and you'll be ready to ask your first question.&lt;/p&gt;
&lt;p&gt;For a more detailed walkthrough, check out our &lt;a href="docs/getting-started.md"&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-frequently-asked-questions" class="anchor" aria-hidden="true" href="#frequently-asked-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frequently Asked Questions&lt;/h1&gt;
&lt;p&gt;Some questions come up over and over again. Check here first:
&lt;a href="docs/faq.md"&gt;FAQ&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-security-disclosure" class="anchor" aria-hidden="true" href="#security-disclosure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security Disclosure&lt;/h1&gt;
&lt;p&gt;Security is very important to us. If you discover any issue regarding security, please disclose the information responsibly by sending an email to &lt;a href="mailto:security@metabase.com"&gt;security@metabase.com&lt;/a&gt; and not by creating a GitHub issue.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;To get started with a development installation of the Metabase, follow the instructions at our &lt;a href="docs/developers-guide.md"&gt;Developers Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then take a look at our &lt;a href="docs/contributing.md"&gt;Contribution Guide&lt;/a&gt; for information about our process and where you can fit in!&lt;/p&gt;
&lt;p&gt;Talk to other contributors &lt;a href="https://gitter.im/metabase/metabase" rel="nofollow"&gt;in our Gitter room&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-internationalization" class="anchor" aria-hidden="true" href="#internationalization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Internationalization&lt;/h1&gt;
&lt;p&gt;We want Metabase to be available in as many languages as possible. See what translations are available and help contribute to internationalization using our project &lt;a href="https://poeditor.com/join/project/ynjQmwSsGh" rel="nofollow"&gt;over at POEditor&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-extending-and-deep-integrations" class="anchor" aria-hidden="true" href="#extending-and-deep-integrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extending and Deep Integrations&lt;/h1&gt;
&lt;p&gt;Metabase also allows you to hit our Query API directly from Javascript to integrate the simple analytics we provide with your own application or third party services to do things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build moderation interfaces&lt;/li&gt;
&lt;li&gt;Export subsets of your users to third party marketing automation software&lt;/li&gt;
&lt;li&gt;Provide a specialized customer lookup application for the people in your company&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-danger-zone" class="anchor" aria-hidden="true" href="#danger-zone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Danger zone&lt;/h1&gt;
&lt;p&gt;The button below will deploy the branch where this README.md lives onto Heroku. Metabase developers use it to deploy branches of Metabase to test our PRs, etc. We DO NOT recommend you using this for production. Instead, please use a &lt;a href="https://metabase.com/start" rel="nofollow"&gt;stable build&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://heroku.com/deploy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/83b0e95b38892b49184e07ad572c94c8038323fb/68747470733a2f2f7777772e6865726f6b7563646e2e636f6d2f6465706c6f792f627574746f6e2e737667" alt="Deploy" data-canonical-src="https://www.herokucdn.com/deploy/button.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Unless otherwise noted, all Metabase source files are made available under the terms of the GNU Affero General Public License (AGPL).&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/metabase/metabase/blob/master/LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt; for details and exceptions.&lt;/p&gt;
&lt;p&gt;Unless otherwise noted, all files © 2019 Metabase, Inc.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>metabase</author><guid isPermaLink="false">https://github.com/metabase/metabase</guid><pubDate>Wed, 22 Jan 2020 00:01:00 GMT</pubDate></item><item><title>technomancy/leiningen #2 in Clojure, Today</title><link>https://github.com/technomancy/leiningen</link><description>&lt;p&gt;&lt;i&gt;Automate Clojure projects without setting your hair on fire.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-leiningen" class="anchor" aria-hidden="true" href="#leiningen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Leiningen&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/technomancy/leiningen" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b07cc601d0126c225a5ab9c7b1205f43cbdb66e6/68747470733a2f2f636972636c6563692e636f6d2f67682f746563686e6f6d616e63792f6c65696e696e67656e2e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/technomancy/leiningen.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c5f1d6488d4b2f4583fab13f6fac10afd4a069c2/68747470733a2f2f6c65696e696e67656e2e6f72672f696d672f6c65696e696e67656e2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/c5f1d6488d4b2f4583fab13f6fac10afd4a069c2/68747470733a2f2f6c65696e696e67656e2e6f72672f696d672f6c65696e696e67656e2e6a7067" alt="Leiningen logo" title="The man himself" align="right" data-canonical-src="https://leiningen.org/img/leiningen.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Leiningen!" he shouted. "You're insane! They're not creatures you can
fight—they're an elemental—an 'act of God!' Ten miles long, two
miles wide—ants, nothing but ants! And every single one of them a
fiend from hell..."&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;from &lt;a href="http://www.classicshorts.com/stories/lvta.html" rel="nofollow"&gt;Leiningen Versus the Ants&lt;/a&gt; by Carl Stephenson&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Leiningen is for automating Clojure projects without setting your hair on fire.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;If your preferred
&lt;a href="https://github.com/technomancy/leiningen/wiki/Packaging"&gt;package manager&lt;/a&gt;
offers a recent version of Leiningen, try that first as long as it has version 2.x.&lt;/p&gt;
&lt;p&gt;Leiningen installs itself on the first run of the &lt;code&gt;lein&lt;/code&gt; shell script; there is no
separate install script.  Follow these instructions to install Leiningen manually:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure you have Java installed; OpenJDK version 8 is recommended at this time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein" rel="nofollow"&gt;Download the &lt;code&gt;lein&lt;/code&gt; script from the &lt;code&gt;stable&lt;/code&gt; branch&lt;/a&gt;
of this project.&lt;/li&gt;
&lt;li&gt;Place it on your &lt;code&gt;$PATH&lt;/code&gt;. (&lt;code&gt;~/bin&lt;/code&gt; is a good choice if it is on your path.)&lt;/li&gt;
&lt;li&gt;Set it to be executable. (&lt;code&gt;chmod +x ~/bin/lein&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Windows users can use the above script in the Linux subsystem or try
&lt;a href="https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein.bat" rel="nofollow"&gt;the batch file&lt;/a&gt; or
&lt;a href="https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein.ps1" rel="nofollow"&gt;Powershell version&lt;/a&gt;
instead.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;
&lt;p&gt;The
&lt;a href="https://github.com/technomancy/leiningen/blob/stable/doc/TUTORIAL.md"&gt;tutorial&lt;/a&gt;
has a detailed walk-through of the steps involved in creating a new
project, but here are the commonly-used tasks:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ lein new [TEMPLATE] NAME # generate a new project skeleton

$ lein test [TESTS] # run the tests in the TESTS namespaces, or all tests

$ lein repl # launch an interactive REPL session

$ lein run -m my.namespace # run the -main function of a namespace

$ lein uberjar # package the project and dependencies as standalone jar

$ lein deploy clojars # publish the project to Clojars as a library
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use &lt;code&gt;lein help&lt;/code&gt; to see a complete list. &lt;code&gt;lein help $TASK&lt;/code&gt; shows the
usage for a specific task.&lt;/p&gt;
&lt;p&gt;You can also chain tasks together in a single command by using the
&lt;code&gt;do&lt;/code&gt; task with comma-separated tasks:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ lein do clean, test foo.test-core, jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Most tasks need to be run from somewhere inside a project directory to
work, but some (&lt;code&gt;new&lt;/code&gt;, &lt;code&gt;help&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, and &lt;code&gt;repl&lt;/code&gt;) may
run from anywhere.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;project.clj&lt;/code&gt; file in the project root should look like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defproject&lt;/span&gt; &lt;span class="pl-e"&gt;myproject&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.5.0-SNAPSHOT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:description&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A project for doing things.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:license&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Eclipse Public License 1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:url&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://github.com/technomancy/myproject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:dependencies&lt;/span&gt; [[org.clojure/clojure &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.8.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]]
  &lt;span class="pl-c1"&gt;:plugins&lt;/span&gt; [[lein-tar &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.2.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;lein new&lt;/code&gt; task generates a project skeleton with an appropriate
starting point from which you can work. See the
&lt;a href="https://github.com/technomancy/leiningen/blob/stable/sample.project.clj"&gt;sample.project.clj&lt;/a&gt;
file (also available via &lt;code&gt;lein help sample&lt;/code&gt;) for a detailed listing of
configuration options.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;project.clj&lt;/code&gt; file can be customized further with the use of
&lt;a href="https://github.com/technomancy/leiningen/blob/stable/doc/PROFILES.md"&gt;profiles&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Leiningen documentation is organized as a number of guides:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/technomancy/leiningen/blob/stable/doc/TUTORIAL.md"&gt;Tutorial&lt;/a&gt; (start here if you are new)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/technomancy/leiningen/blob/stable/doc/FAQ.md"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/technomancy/leiningen/blob/stable/doc/PROFILES.md"&gt;Profiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/technomancy/leiningen/blob/stable/doc/DEPLOY.md"&gt;Deployment &amp;amp; Distribution of Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/technomancy/leiningen/blob/stable/sample.project.clj"&gt;Sample project.clj&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/technomancy/leiningen/blob/stable/doc/MIXED_PROJECTS.md"&gt;Polyglot (e.g. Clojure/Java) projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/technomancy/leiningen/blob/stable/doc/PLUGINS.md"&gt;Writing Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/technomancy/leiningen/blob/stable/doc/TEMPLATES.md"&gt;Writing Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/technomancy/leiningen/blob/stable/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/technomancy/leiningen/blob/stable/CONTRIBUTING.md#bootstrapping"&gt;Building Leiningen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Leiningen supports plugins which may introduce new tasks. See
&lt;a href="https://github.com/technomancy/leiningen/wiki/Plugins"&gt;the plugins wiki page&lt;/a&gt;
for a full list. If a plugin is needed for successful test or build
runs, (such as &lt;code&gt;lein-tar&lt;/code&gt;) then it should be added to &lt;code&gt;:plugins&lt;/code&gt; in
project.clj, but if it's for your own convenience (such as
&lt;code&gt;lein-pprint&lt;/code&gt;) then it should be added to the &lt;code&gt;:plugins&lt;/code&gt; list in the
&lt;code&gt;:user&lt;/code&gt; profile in &lt;code&gt;~/.lein/profiles.clj&lt;/code&gt;. See the
&lt;a href="https://github.com/technomancy/leiningen/blob/stable/doc/PROFILES.md"&gt;profiles guide&lt;/a&gt;
for details on how to add to your &lt;code&gt;:user&lt;/code&gt; profile. The
&lt;a href="https://github.com/technomancy/leiningen/blob/stable/doc/PLUGINS.md"&gt;plugin guide&lt;/a&gt;
explains how to write plugins.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Source Copyright © 2009-2018 Phil Hagelberg, Alex Osborne, Dan Larkin, and
&lt;a href="https://github.com/technomancy/leiningen/contributors"&gt;contributors&lt;/a&gt;.
Distributed under the Eclipse Public License, the same as Clojure
uses. See the file COPYING.&lt;/p&gt;
&lt;p&gt;Thanks to Stuart Halloway for Lancet and Tim Dysinger for convincing
me that good builds are important.&lt;/p&gt;
&lt;p&gt;Images Copyright © 2010 Phil Hagelberg. Distributed under the Creative
Commons Attribution + ShareAlike
License. &lt;a href="https://leiningen.org/img/leiningen-full.jpg" rel="nofollow"&gt;Full-size version&lt;/a&gt;
available.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>technomancy</author><guid isPermaLink="false">https://github.com/technomancy/leiningen</guid><pubDate>Wed, 22 Jan 2020 00:02:00 GMT</pubDate></item><item><title>swarmpit/swarmpit #3 in Clojure, Today</title><link>https://github.com/swarmpit/swarmpit</link><description>&lt;p&gt;&lt;i&gt;Lightweight mobile-friendly Docker Swarm management UI&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://swarmpit.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b95f2d692e0b1f8846ee401423c71673f8b4c3e/687474703a2f2f737761726d7069742e696f2f696d672f6c6f676f2d737761726d7069742e7376673f7231" alt="swarmpit" data-canonical-src="http://swarmpit.io/img/logo-swarmpit.svg?r1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lightweight mobile-friendly Docker Swarm management UI&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/swarmpit/swarmpit/releases"&gt;&lt;img src="https://camo.githubusercontent.com/4eacd0efdb76e07b7818dcd9539e7f7a57f18ffd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d7072652f737761726d7069742f737761726d7069742e737667" alt="version" data-canonical-src="https://img.shields.io/github/release-pre/swarmpit/swarmpit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/swarmpit_io/swarmpit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f8014beacaaaa00713148f4d4bf3d1e0fb880a77/68747470733a2f2f6261646765732e6769747465722e696d2f7472657a6f722f636f6d6d756e6974792e737667" alt="gitter" data-canonical-src="https://badges.gitter.im/trezor/community.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/swarmpit/swarmpit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b941badfd7a5594c3ffbf5d2f77a83c29c8af7b5/68747470733a2f2f7472617669732d63692e6f72672f737761726d7069742f737761726d7069742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/swarmpit/swarmpit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/swarmpit/swarmpit/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/d4e0f63e9613ee474a7dfdc23c240b9795712c96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667" alt="PRs Welcome" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=KD4RQBDWFE25U" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d5d24e33e2f4b6fe53987419a21b203c03789a8f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Donate-PayPal-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/swarmpit/swarmpit/master/resources/public/imac.png"&gt;&lt;img src="https://raw.githubusercontent.com/swarmpit/swarmpit/master/resources/public/imac.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swarmpit provides simple and easy to use interface for your Docker Swarm cluster. You can manage your stacks, services, secrets, volumes, networks etc. After linking your Docker Hub account or custom registry, private repositories can be easily deployed on Swarm. Best of all, you can share this management console securely with your whole team.&lt;/p&gt;
&lt;p&gt;More details about future and past releases can be found in &lt;a href="ROADMAP.md"&gt;ROADMAP.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/swarmpit_io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6a286b4bf866a433717546d0801794019561b5bb/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f666f6c645f6c6566742e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77253230253430737761726d7069745f696f" alt="Twitter URL" data-canonical-src="https://img.shields.io/twitter/url/https/twitter.com/fold_left.svg?style=social&amp;amp;label=Follow%20%40swarmpit_io" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;The only dependency for Swarmpit deployment is Docker with Swarm initialized, we are supporting Docker 1.13 and newer. Linux hosts on x86 and ARM architectures are supported as well.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-package-installer" class="anchor" aria-hidden="true" href="#package-installer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package installer&lt;/h3&gt;
&lt;p&gt;Installer is your guide to setup Swarmpit platform. For more details see the &lt;a href="https://github.com/swarmpit/installer"&gt;installer&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-stable-version" class="anchor" aria-hidden="true" href="#stable-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stable version&lt;/h4&gt;
&lt;p&gt;Deploy our current milestone version&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it --rm \
  --name swarmpit-installer \
  --volume /var/run/docker.sock:/var/run/docker.sock \
  swarmpit/install:1.8
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-edge-version" class="anchor" aria-hidden="true" href="#edge-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Edge version&lt;/h4&gt;
&lt;p&gt;Deploy latest version for the brave and true&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it --rm \
  --name swarmpit-installer \
  --volume /var/run/docker.sock:/var/run/docker.sock \
  swarmpit/install:edge
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-manual-installation" class="anchor" aria-hidden="true" href="#manual-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual installation&lt;/h3&gt;
&lt;p&gt;Deploy Swarmpit by using a compose file from our git repo with branch of corresponding version.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/swarmpit/swarmpit -b master
docker stack deploy -c swarmpit/docker-compose.yml swarmpit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For ARM based cluster use custom compose file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/swarmpit/swarmpit -b master
docker stack deploy -c swarmpit/docker-compose.arm.yml swarmpit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="docker-compose.yml"&gt;This stack&lt;/a&gt; is a composition of 4 services:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;app - Swarmpit&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swarmpit/agent"&gt;agent&lt;/a&gt; - Swarmpit agent&lt;/li&gt;
&lt;li&gt;db - CouchDB (Application data)&lt;/li&gt;
&lt;li&gt;influxdb - InfluxDB (Cluster statistics)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feel free to edit the stackfile to change an application port and we strongly recommend to specify following volumes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;db-data&lt;/li&gt;
&lt;li&gt;influxdb-data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to shared-volume driver type of your choice. Alternatively, you can link db service to the specific node by using &lt;a href="https://docs.docker.com/compose/compose-file/#placement" rel="nofollow"&gt;constraint&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Swarmpit is published on port &lt;code&gt;888&lt;/code&gt; by default.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;Swarmpit is written purely in Clojure and utilizes React on front-end. CouchDB is used to persist application data &amp;amp; InfluxDB for cluster statistics.&lt;/p&gt;
&lt;p&gt;Everything about building, issue reporting and setting up development environment can be found in &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://play-with-docker.com?stack=https://raw.githubusercontent.com/swarmpit/swarmpit/master/docker-compose.yml" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/015b87ebc1ecffe10832e34ea8a44ce1af0cd35b/68747470733a2f2f63646e2e7261776769742e636f6d2f706c61792d776974682d646f636b65722f737461636b732f63666632323433382f6173736574732f696d616765732f627574746f6e2e706e67" alt="Try in PWD" data-canonical-src="https://cdn.rawgit.com/play-with-docker/stacks/cff22438/assets/images/button.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Deploys Swarmpit to play-with-docker sandbox. Please wait few moments till application is up and running before accessing
port 888. Initialization might take a few seconds.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>swarmpit</author><guid isPermaLink="false">https://github.com/swarmpit/swarmpit</guid><pubDate>Wed, 22 Jan 2020 00:03:00 GMT</pubDate></item><item><title>overtone/overtone #4 in Clojure, Today</title><link>https://github.com/overtone/overtone</link><description>&lt;p&gt;&lt;i&gt;Collaborative Programmable Music &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;pre&gt;&lt;code&gt;                                                          888
                                                          888
         _ooooooooo._                                     888
      ,o888PP""""PP88   .d88b.  888  888  .d88b.  888d888 888888 .d88b.  88888b.   .d88b.
    d88P''          '  d88""88b 888  888 d8P  Y8b 888P"   888   d88""88b 888 "88b d8P  Y8b
  ,88P                 88    88 Y88  88P 88888888 888     888   88    88 888  888 88888888
 ,88                   Y88..88P  Y8bd8P  Y8b.     888     Y88b. Y88..88P 888  888 Y8b.
,88'                    "Y88P"    Y88P    "Y8888  888      "Y888 "Y88P"  888  888  "Y8888
d8P
d8b                        88[
`88                       J88
 Y8b                     ,88'
  Y8b.                  d88'
   `Y8b._            _o88P
     `Y888oo.____ooo888P'
        '"PP888888PP''
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-collaborative-programmable-music" class="anchor" aria-hidden="true" href="#collaborative-programmable-music"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collaborative Programmable Music.&lt;/h1&gt;
&lt;p&gt;Overtone is an Open Source toolkit for designing synthesizers and
collaborating with music.  It provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A Clojure API to the SuperCollider synthesis engine&lt;/li&gt;
&lt;li&gt;A growing library of musical functions (scales, chords, rhythms,
arpeggiators, etc.)&lt;/li&gt;
&lt;li&gt;Metronome and timing system to support live-programming and sequencing&lt;/li&gt;
&lt;li&gt;Plug and play MIDI device I/O&lt;/li&gt;
&lt;li&gt;A full Open Sound Control (OSC) client and server implementation.&lt;/li&gt;
&lt;li&gt;Pre-cache - a system for locally caching external assets such as .wav
files&lt;/li&gt;
&lt;li&gt;An API for querying and fetching sounds from &lt;a href="http://freesound.org" rel="nofollow"&gt;http://freesound.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A global concurrent event stream&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Install the clojure-cli tools&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; https://clojure.org/guides/getting_started&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create a deps.edn file with a minimum&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; {:deps {overtone/overtone {:mvn/version "0.10.6"}}}&lt;/span&gt;
    $ clojure
    $ (use &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;overtone.live)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or install leiningen&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; https://github.com/technomancy/leiningen&lt;/span&gt;

    $ lein new insane-noises

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; add the following dependencies to insane-noises/project.clj&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [org.clojure/clojure "1.9.0"]&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [overtone "0.10.6"]&lt;/span&gt;

    $ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; insane-noises
    $ lein repl&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-making-sounds" class="anchor" aria-hidden="true" href="#making-sounds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Making sounds&lt;/h3&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; boot the server&lt;/span&gt;
    user=&amp;gt; (&lt;span class="pl-k"&gt;use&lt;/span&gt; 'overtone.live)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; listen to the joys of a simple sine wave&lt;/span&gt;
    user=&amp;gt; (&lt;span class="pl-en"&gt;demo&lt;/span&gt; (&lt;span class="pl-en"&gt;sin-osc&lt;/span&gt;))

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; or something more interesting...&lt;/span&gt;
    user=&amp;gt; (&lt;span class="pl-en"&gt;demo&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt; (&lt;span class="pl-en"&gt;lpf&lt;/span&gt; (&lt;span class="pl-en"&gt;mix&lt;/span&gt; (&lt;span class="pl-en"&gt;saw&lt;/span&gt; [&lt;span class="pl-c1"&gt;50&lt;/span&gt; (&lt;span class="pl-en"&gt;line&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt; &lt;span class="pl-c1"&gt;1600&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-c1"&gt;101&lt;/span&gt; &lt;span class="pl-c1"&gt;100.5&lt;/span&gt;]))
                   (&lt;span class="pl-en"&gt;lin-lin&lt;/span&gt; (&lt;span class="pl-en"&gt;lf-tri&lt;/span&gt; (&lt;span class="pl-en"&gt;line&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)) &lt;span class="pl-c1"&gt;-1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;400&lt;/span&gt; &lt;span class="pl-c1"&gt;4000&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-detailed-instructions" class="anchor" aria-hidden="true" href="#detailed-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Detailed Instructions&lt;/h3&gt;
&lt;p&gt;For a more detailed set of setup instructions (including details
specific to Windows and Linux) head over to the
&lt;a href="https://github.com/overtone/overtone/wiki/Installing-Overtone"&gt;Overtone wiki installation page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We maintain documentation for all aspects of the system in the
&lt;a href="https://github.com/overtone/overtone/wiki/Home"&gt;project wiki&lt;/a&gt;, you'll
find tutorials and examples on topics such as synthesizing new sounds
from scratch, live-coding and generating musical scores on the fly. If
you see anything missing, please feel free to add it yourself, or hit us
up on the &lt;a href="http://groups.google.com/group/overtone" rel="nofollow"&gt;mailing list&lt;/a&gt; and
we'll sort something out.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cheat-sheet" class="anchor" aria-hidden="true" href="#cheat-sheet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cheat Sheet&lt;/h2&gt;
&lt;p&gt;For a quick glance at all the exciting functionality Overtone puts at
your musical fingertips check out the cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/overtone/overtone/raw/master/docs/cheatsheet/overtone-cheat-sheet.pdf"&gt;https://github.com/overtone/overtone/raw/master/docs/cheatsheet/overtone-cheat-sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overtone-powered-bands" class="anchor" aria-hidden="true" href="#overtone-powered-bands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overtone Powered Bands&lt;/h2&gt;
&lt;p&gt;A list of bands using Overtone to generate sounds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://meta-ex.com" rel="nofollow"&gt;Meta-eX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://repl-electric.com" rel="nofollow"&gt;Repl Electric&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-mailing-list" class="anchor" aria-hidden="true" href="#mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mailing List&lt;/h3&gt;
&lt;p&gt;We encourage you to join the
&lt;a href="http://groups.google.com/group/overtone" rel="nofollow"&gt;mailing list&lt;/a&gt; to see what
other people are getting up to with Overtone. Use it to ask questions,
show off what you've made and even meet fellow Overtoners in your area
so you can meet up for impromptu jam sessions. All we ask is that you be
considerate, courteous and respectful and that you share as much of your
code as possible so we can all learn how to make crazy cool sounds
together.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-twitter" class="anchor" aria-hidden="true" href="#twitter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Twitter&lt;/h3&gt;
&lt;p&gt;Follow &lt;code&gt;@overtone&lt;/code&gt; on Twitter: &lt;a href="http://twitter.com/overtone" rel="nofollow"&gt;http://twitter.com/overtone&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-web" class="anchor" aria-hidden="true" href="#web"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web&lt;/h3&gt;
&lt;p&gt;Our main website is hosted on GitHub: &lt;a href="http://overtone.github.io" rel="nofollow"&gt;http://overtone.github.io&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-videos" class="anchor" aria-hidden="true" href="#videos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Videos&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-introductions" class="anchor" aria-hidden="true" href="#introductions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introductions&lt;/h3&gt;
&lt;p&gt;Head over to Vimeo for a fast-paced 4 minute introduction to live-coding
with Overtone to see what's possible&lt;/p&gt;
&lt;p&gt;&lt;a href="http://vimeo.com/22798433" rel="nofollow"&gt;http://vimeo.com/22798433&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For a nice overview of the basics of creating and playing with
synthesized instruments in Overtone checkout Philip Potter's 20 minute
workshop:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://skillsmatter.com/podcast/scala/clojurex-unpanel-2894" rel="nofollow"&gt;http://skillsmatter.com/podcast/scala/clojurex-unpanel-2894&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chris Ford also delivers a beautifully paced introduction to fundamental music
concepts from basic sine waves to Bach's Goldberg Variations with live examples throughout:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://skillsmatter.com/podcast/home/functional-composition" rel="nofollow"&gt;http://skillsmatter.com/podcast/home/functional-composition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are also the following tutorials:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Setting up an Overtone Development Environment - Running on Edge
&lt;a href="http://vimeo.com/25102399" rel="nofollow"&gt;http://vimeo.com/25102399&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How to Hack Overtone with Emacs &lt;a href="http://vimeo.com/25190186" rel="nofollow"&gt;http://vimeo.com/25190186&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-presentations" class="anchor" aria-hidden="true" href="#presentations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presentations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Rich Hickey - Harmonikit: &lt;a href="http://www.youtube.com/watch?v=bhkdyCPYgLs" rel="nofollow"&gt;http://www.youtube.com/watch?v=bhkdyCPYgLs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sam Aaron - Programming Music With Overtone: &lt;a href="http://www.youtube.com/watch?v=imoWGsipe4k" rel="nofollow"&gt;http://www.youtube.com/watch?v=imoWGsipe4k&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chris Ford - Functional Composition: &lt;a href="http://www.youtube.com/watch?v=Mfsnlbd-4xQ" rel="nofollow"&gt;http://www.youtube.com/watch?v=Mfsnlbd-4xQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Meta-eX - Live Coding with Meta-eX: &lt;a href="https://www.youtube.com/watch?v=zJqH5bNcIN0" rel="nofollow"&gt;https://www.youtube.com/watch?v=zJqH5bNcIN0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-interviews" class="anchor" aria-hidden="true" href="#interviews"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interviews&lt;/h3&gt;
&lt;p&gt;Overtone has generated quite a bit of interest. Here's a list of
available interviews which go into further depth on the background and
philosophy of Overtone:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://twit.tv/show/floss-weekly/197" rel="nofollow"&gt;http://twit.tv/show/floss-weekly/197&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mostlylazy.com/2011/11/18/episode-0-0-2-sam-aaron-and-overtone-at-clojure-conj-2011/" rel="nofollow"&gt;http://mostlylazy.com/2011/11/18/episode-0-0-2-sam-aaron-and-overtone-at-clojure-conj-2011/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codebassradio.net/2011/11/29/runtime-expectations-episode-13-hot-clojure-conj/" rel="nofollow"&gt;http://codebassradio.net/2011/11/29/runtime-expectations-episode-13-hot-clojure-conj/&lt;/a&gt;
(scroll down to the section with Sam Aaron, Ghadi Shayban, and Daniel Spiewak)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://clojure.com/blog/2012/01/04/take5-sam-aaron.html" rel="nofollow"&gt;http://clojure.com/blog/2012/01/04/take5-sam-aaron.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-performances" class="anchor" aria-hidden="true" href="#performances"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performances&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Repl Electric: &lt;a href="https://vimeo.com/95988263" rel="nofollow"&gt;https://vimeo.com/95988263&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Piotr Jagielski‏: &lt;a href="https://www.youtube.com/watch?v=r8YKC7Qugm8" rel="nofollow"&gt;https://www.youtube.com/watch?v=r8YKC7Qugm8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sam Aaron Live @ Arnolfini:  &lt;a href="https://vimeo.com/46867490" rel="nofollow"&gt;https://vimeo.com/46867490&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Meta-eX Live @ Music Tech Fest: &lt;a href="http://youtu.be/zJqH5bNcIN0?t=15m25s" rel="nofollow"&gt;http://youtu.be/zJqH5bNcIN0?t=15m25s&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-source-repository" class="anchor" aria-hidden="true" href="#source-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Repository&lt;/h2&gt;
&lt;p&gt;Downloads and the source repository can be found on GitHub:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://github.com/overtone/overtone"&gt;http://github.com/overtone/overtone&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Clone the repository on GitHub to get started developing, and if you are
ready to submit a patch then fork your own copy and do a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-clojuretoolsdeps-and-leiningen-support" class="anchor" aria-hidden="true" href="#clojuretoolsdeps-and-leiningen-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;clojure.tools.deps and Leiningen Support&lt;/h2&gt;
&lt;p&gt;Overtone and its dependencies are on &lt;a href="http://clojars.org" rel="nofollow"&gt;http://clojars.org&lt;/a&gt;, and the
dependency for your &lt;code&gt;deps.edn&lt;/code&gt; is:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;    {overtone/overtone {&lt;span class="pl-c1"&gt;:mvn/version&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.6&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for your &lt;code&gt;project.clj&lt;/code&gt; (Leiningen)&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;    [overtone &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.6&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;See: &lt;a href="https://github.com/overtone/overtone/graphs/contributors"&gt;https://github.com/overtone/overtone/graphs/contributors&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>overtone</author><guid isPermaLink="false">https://github.com/overtone/overtone</guid><pubDate>Wed, 22 Jan 2020 00:04:00 GMT</pubDate></item><item><title>dakrone/clj-http #5 in Clojure, Today</title><link>https://github.com/dakrone/clj-http</link><description>&lt;p&gt;&lt;i&gt;An idiomatic clojure http client wrapping the apache client. Offically supported version.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-clj-http-documentation" class="anchor" aria-hidden="true" href="#clj-http-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;clj-http documentation&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4c7390c68b3007f82b9fc0d83e9943ee6af3517d/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f64616b726f6e652f636c6a2d687474702e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4c7390c68b3007f82b9fc0d83e9943ee6af3517d/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f64616b726f6e652f636c6a2d687474702e706e67" alt="https://secure.travis-ci.org/dakrone/clj-http.png" data-canonical-src="https://secure.travis-ci.org/dakrone/clj-http.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/clj-http/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5a13b43f36351e1063a09286192276400974e813/68747470733a2f2f6261646765732e6769747465722e696d2f636c6a2d687474702f4c6f6262792e737667" alt="https://badges.gitter.im/clj-http/Lobby.svg" data-canonical-src="https://badges.gitter.im/clj-http/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="#branches"&gt;Branches&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#philosophy"&gt;Philosophy&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#quickstart"&gt;Quickstart&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#head"&gt;HEAD&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#get"&gt;GET&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#put"&gt;PUT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#post"&gt;POST&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#delete"&gt;DELETE&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#async-http-request"&gt;Async HTTP Request&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#cancelling-requests"&gt;Cancelling Requests&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#coercions"&gt;Coercions&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#input-coercion"&gt;Input coercion&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#output-coercion"&gt;Output coercion&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#headers"&gt;Headers&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#query-string-parameters"&gt;Query-string parameters&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#meta-tag-headers"&gt;Meta Tag Headers&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#link-headers"&gt;Link Headers&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#redirects"&gt;Redirects&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#how-to-create-a-custom-redirectstrategy"&gt;How to create a custom RedirectStrategy&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#cookies"&gt;Cookies&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#cookiestores"&gt;Cookiestores&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#keystores-trust-stores"&gt;Keystores, Trust-stores&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#exceptions"&gt;Exceptions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#decompression"&gt;Decompression&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#debugging"&gt;Debugging&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#caching"&gt;Caching&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#authentication"&gt;Authentication&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#basic-auth"&gt;Basic Auth&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#digest-auth"&gt;Digest Auth&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#ntlm-auth"&gt;NTLM Auth&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#oauth2"&gt;oAuth2&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#advanced-usage"&gt;Advanced Usage&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#raw-request"&gt;Raw Request&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#boolean-options"&gt;Boolean options&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#persistent-connections"&gt;Persistent Connections&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#re-using-httpclient-between-requests"&gt;Re-using &lt;code&gt;HttpClient&lt;/code&gt; between requests&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#proxies"&gt;Proxies&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#custom-middleware"&gt;Custom Middleware&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#modifying-apache-specific-features-of-the-httpclientbuilder-and-httpasyncclientbuilder"&gt;Modifying Apache-specific features of the &lt;code&gt;HttpClientBuilder&lt;/code&gt; and =HttpAsyncClientBuilder=&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#development"&gt;Development&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#faking-responses"&gt;Faking Responses&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#optional-dependencies"&gt;Optional Dependencies&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#clj-http-lite"&gt;clj-http-lite&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#verifyerror-class-orgcodehausjacksonsmilesmileparser-overrides-final-method-getbinaryvalue"&gt;VerifyError class org.codehaus.jackson.smile.SmileParser overrides final method getBinaryValue…&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#nohttpresponseexception--due-to-stale-connections"&gt;NoHttpResponseException … due to stale connections**&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#tests"&gt;Tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#testimonials"&gt;Testimonials&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#other-libraries-providing-middleware"&gt;Other Libraries Providing Middleware&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-branches" class="anchor" aria-hidden="true" href="#branches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branches&lt;/h1&gt;
&lt;p&gt;There are branches for the major version numbers:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;2.x (no longer maintained except for security issues)&lt;/li&gt;
  &lt;li&gt;3.x (current stable releases and the main Github branch)&lt;/li&gt;
  &lt;li&gt;master (which is 4.x, unreleased, based on version 5 of the apache http client)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;clj-http is an HTTP library wrapping the &lt;a href="http://hc.apache.org/" rel="nofollow"&gt;Apache HttpComponents&lt;/a&gt; client. This
  library has taken over from mmcgrana’s clj-http.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-philosophy" class="anchor" aria-hidden="true" href="#philosophy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Philosophy&lt;/h2&gt;
&lt;p&gt;The design of &lt;code&gt;clj-http&lt;/code&gt; is inspired by the &lt;a href="https://github.com/ring-clojure/ring"&gt;Ring&lt;/a&gt; protocol for Clojure HTTP
  server applications.&lt;/p&gt;
&lt;p&gt;The client in &lt;code&gt;clj-http.core&lt;/code&gt; makes HTTP requests according to a given Ring
  request map and returns &lt;a href="https://github.com/ring-clojure/ring/blob/master/SPEC"&gt;Ring response maps&lt;/a&gt; corresponding to the resulting HTTP
  response. The function &lt;code&gt;clj-http.client/request&lt;/code&gt; uses Ring-style middleware to
  layer functionality over the core HTTP request/response implementation. Methods
  like &lt;code&gt;clj-http.client/get&lt;/code&gt; are sugar over this &lt;code&gt;clj-http.client/request&lt;/code&gt;
  function.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;clj-http&lt;/code&gt; is available as a Maven artifact from &lt;a href="http://clojars.org/clj-http" rel="nofollow"&gt;Clojars&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With Leiningen/Boot:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;[clj-http &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.10.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need an older version, a 2.x release is also available.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;[clj-http &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.3.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;clj-http 3.x supports clojure 1.6.0 and higher.
  clj-http 4.x will support clojure 1.7.0 and higher.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h1&gt;
&lt;p&gt;The main HTTP client functionality is provided by the &lt;code&gt;clj-http.client&lt;/code&gt; namespace.&lt;/p&gt;
&lt;p&gt;First, require it in the REPL:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[clj-http.client &lt;span class="pl-c1"&gt;:as&lt;/span&gt; client])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or in your application:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;ns&lt;/span&gt; &lt;span class="pl-e"&gt;my-app.core&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;:require&lt;/span&gt; [clj-http.client &lt;span class="pl-c1"&gt;:as&lt;/span&gt; client]))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The client supports simple &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;,
  &lt;code&gt;move&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, and &lt;code&gt;options&lt;/code&gt; requests. Response are returned as &lt;a href="https://github.com/ring-clojure/ring/blob/master/SPEC"&gt;Ring-style
  response maps&lt;/a&gt;:&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-head" class="anchor" aria-hidden="true" href="#head"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HEAD&lt;/h2&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/head&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resource&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

(&lt;span class="pl-en"&gt;client/head&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resource&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:accept&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;})
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-get" class="anchor" aria-hidden="true" href="#get"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GET&lt;/h2&gt;
&lt;p&gt;Example requests:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resources/id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Setting options&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resources/3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:accept&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;})
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resources/3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:accept&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt; &lt;span class="pl-c1"&gt;:query-params&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;q&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo, bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Specifying headers as either a string or collection:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:headers&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;eggplant&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;quux&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Using either string or keyword header names:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:headers&lt;/span&gt; {&lt;span class="pl-c1"&gt;:foo&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;:eggplant&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;quux&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Completely ignore cookies:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:cookie-policy&lt;/span&gt; &lt;span class="pl-c1"&gt;:none&lt;/span&gt;})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; There are also multiple ways to handle cookies&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:cookie-policy&lt;/span&gt; &lt;span class="pl-c1"&gt;:default&lt;/span&gt;})
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:cookie-policy&lt;/span&gt; &lt;span class="pl-c1"&gt;:netscape&lt;/span&gt;})
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:cookie-policy&lt;/span&gt; &lt;span class="pl-c1"&gt;:standard&lt;/span&gt;})
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:cookie-policy&lt;/span&gt; &lt;span class="pl-c1"&gt;:standard-strict&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Cookies can be completely configurable with a custom spec by adding a&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; function to return a cookie spec for parsing the cookie. For example, if you&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; wanted to configure a spec provider to have a certain compatibility level:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
             {&lt;span class="pl-c1"&gt;:cookie-spec&lt;/span&gt;
              (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [http-context]
                (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;generating a new cookie spec&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                (&lt;span class="pl-en"&gt;.create&lt;/span&gt;
                 (&lt;span class="pl-en"&gt;org.apache.http.impl.cookie.RFC6265CookieSpecProvider.&lt;/span&gt;
                  org.apache.http.impl.cookie.RFC6265CookieSpecProvider$CompatibilityLevel/IE_MEDIUM_SECURITY
                  (&lt;span class="pl-en"&gt;PublicSuffixMatcherLoader/getDefault&lt;/span&gt;))
                 http-context))})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Or a version with relaxed compatibility&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
             {&lt;span class="pl-c1"&gt;:cookie-spec&lt;/span&gt;
              (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [http-context]
                (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;generating a new cookie spec&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                (&lt;span class="pl-en"&gt;.create&lt;/span&gt;
                 (&lt;span class="pl-en"&gt;org.apache.http.impl.cookie.RFC6265CookieSpecProvider.&lt;/span&gt;
                  org.apache.http.impl.cookie.RFC6265CookieSpecProvider$CompatibilityLevel/RELAXED
                  (&lt;span class="pl-en"&gt;PublicSuffixMatcherLoader/getDefault&lt;/span&gt;))
                 http-context))})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Sometimes you want to do your own validation or something, which you can do&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; by proxying the CookieSpecBase. Note that this doesn't actually return the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; cookies, because clj-http does its own cookie parsing. If you want to store&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; the cookies from these methods you'll need to use a cookie store or put it in&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; some datastructure yourself.&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
             {&lt;span class="pl-c1"&gt;:cookie-spec&lt;/span&gt;
              (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [http-context]
                (&lt;span class="pl-en"&gt;proxy&lt;/span&gt; [org.apache.http.impl.cookie.CookieSpecBase] []
                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Version and version header&lt;/span&gt;
                  (&lt;span class="pl-en"&gt;getVersion&lt;/span&gt; [] &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
                  (&lt;span class="pl-en"&gt;getVersionHeader&lt;/span&gt; [] &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; parse headers into cookie objects&lt;/span&gt;
                  (&lt;span class="pl-en"&gt;parse&lt;/span&gt; [header cookie-origin] (&lt;span class="pl-en"&gt;java.util.ArrayList.&lt;/span&gt;))
                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Validate a cookie, throwing MalformedCookieException if the&lt;/span&gt;
                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; cookies isn't valid&lt;/span&gt;
                  (&lt;span class="pl-en"&gt;validate&lt;/span&gt; [cookie cookie-origin]
                    (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;validating:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; cookie))
                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Determine if a cookie matches the target location&lt;/span&gt;
                  (&lt;span class="pl-en"&gt;match&lt;/span&gt; [cookie cookie-origin] &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Format a list of cookies into a list of headers&lt;/span&gt;
                  (&lt;span class="pl-en"&gt;formatCookies&lt;/span&gt; [cookies] (&lt;span class="pl-en"&gt;java.util.ArrayList.&lt;/span&gt;))))})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; If you have created your own registry for cookie policies, you can provide&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; :cookie-policy-registry to use it. See&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; clj-http.core/create-custom-cookie-policy-registry for an example of a custom&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; registry&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
             {&lt;span class="pl-c1"&gt;:cookie-policy-registry&lt;/span&gt; my-custom-policy-registry
              &lt;span class="pl-c1"&gt;:cookie-policy&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my-policy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Need to contact a server with an untrusted SSL cert?&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://alioth.debian.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:insecure?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; If you don't want to follow-redirects automatically:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/redirects-somewhere&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:redirect-strategy&lt;/span&gt; &lt;span class="pl-c1"&gt;:none&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Only follow a certain number of redirects:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/redirects-somewhere&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:max-redirects&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Avoid throwing exceptions if redirected too many times:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/redirects-somewhere&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:max-redirects&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; &lt;span class="pl-c1"&gt;:redirect-strategy&lt;/span&gt; &lt;span class="pl-c1"&gt;:graceful&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw an exception if the get takes too long. Timeouts in milliseconds.&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/redirects-somewhere&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:socket-timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt; &lt;span class="pl-c1"&gt;:connection-timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Query parameters&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/search&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:query-params&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;q&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo, bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; "Nested" query parameters&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (this yields a query string of `a[e][f]=6&amp;amp;a[b][c]=5`)&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/search&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:query-params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:a&lt;/span&gt; {&lt;span class="pl-c1"&gt;:b&lt;/span&gt; {&lt;span class="pl-c1"&gt;:c&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;} &lt;span class="pl-c1"&gt;:e&lt;/span&gt; {&lt;span class="pl-c1"&gt;:f&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt;}}}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Provide cookies — uses same schema as :cookies returned in responses&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (see the cookie store option for easy cross-request maintenance of cookies)&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:cookies&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ring-session&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:discard&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;:path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:version&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;}}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Tell clj-http not to decode cookies from the response header&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:decode-cookies&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Support for IPv6!&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://[2001:62f5:9006:e472:cabd:c8ff:fee3:8ddf]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Super advanced, your own http-client-context and request-config&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/get&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:http-client-context&lt;/span&gt; my-http-client-context
             &lt;span class="pl-c1"&gt;:http-request-config&lt;/span&gt; my-request-config})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The client will also follow redirects on the appropriate &lt;code&gt;30*&lt;/code&gt; status codes.&lt;/p&gt;
&lt;p&gt;The client transparently accepts and decompresses the &lt;code&gt;gzip&lt;/code&gt; and &lt;code&gt;deflate&lt;/code&gt;
  content encodings.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:trace-redirects&lt;/code&gt; will contain the chain of the redirections followed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-put" class="anchor" aria-hidden="true" href="#put"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PUT&lt;/h2&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/put&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/api&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:body&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my PUT body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-post" class="anchor" aria-hidden="true" href="#post"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;POST&lt;/h2&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Various options:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/api&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
             {&lt;span class="pl-c1"&gt;:basic-auth&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
              &lt;span class="pl-c1"&gt;:body&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{&lt;span class="pl-cce"&gt;\"&lt;/span&gt;json&lt;span class="pl-cce"&gt;\"&lt;/span&gt;: &lt;span class="pl-cce"&gt;\"&lt;/span&gt;input&lt;span class="pl-cce"&gt;\"&lt;/span&gt;}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              &lt;span class="pl-c1"&gt;:headers&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-Api-Version&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
              &lt;span class="pl-c1"&gt;:content-type&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
              &lt;span class="pl-c1"&gt;:socket-timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; in milliseconds&lt;/span&gt;
              &lt;span class="pl-c1"&gt;:connection-timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; in milliseconds&lt;/span&gt;
              &lt;span class="pl-c1"&gt;:accept&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Send form params as a urlencoded body (POST or PUT)&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:form-params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:foo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Send form params as a json encoded body (POST or PUT)&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:form-params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:foo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-c1"&gt;:content-type&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Send form params as a json encoded body (POST or PUT) with options&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:form-params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:foo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
                                   &lt;span class="pl-c1"&gt;:content-type&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
                                   &lt;span class="pl-c1"&gt;:json-opts&lt;/span&gt; {&lt;span class="pl-c1"&gt;:date-format&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yyyy-MM-dd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; You can also specify the encoding of form parameters&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:form-params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:foo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
                                   &lt;span class="pl-c1"&gt;:form-param-encoding&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ISO-8859-1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Send form params as a Transit encoded JSON body (POST or PUT) with options&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:form-params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:foo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
                                   &lt;span class="pl-c1"&gt;:content-type&lt;/span&gt; &lt;span class="pl-c1"&gt;:transit+json&lt;/span&gt;
                                   &lt;span class="pl-c1"&gt;:transit-opts&lt;/span&gt;
                                   {&lt;span class="pl-c1"&gt;:encode&lt;/span&gt; {&lt;span class="pl-c1"&gt;:handlers&lt;/span&gt; {}}
                                    &lt;span class="pl-c1"&gt;:decode&lt;/span&gt; {&lt;span class="pl-c1"&gt;:handlers&lt;/span&gt; {}}}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Send form params as a Transit encoded MessagePack body (POST or PUT) with options&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:form-params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:foo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
                                   &lt;span class="pl-c1"&gt;:content-type&lt;/span&gt; &lt;span class="pl-c1"&gt;:transit+msgpack&lt;/span&gt;
                                   &lt;span class="pl-c1"&gt;:transit-opts&lt;/span&gt;
                                   {&lt;span class="pl-c1"&gt;:encode&lt;/span&gt; {&lt;span class="pl-c1"&gt;:handlers&lt;/span&gt; {}}
                                    &lt;span class="pl-c1"&gt;:decode&lt;/span&gt; {&lt;span class="pl-c1"&gt;:handlers&lt;/span&gt; {}}}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Multipart form uploads/posts&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; takes a vector of maps, to preserve the order of entities, :name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; will be used as the part name unless :part-name is specified&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:multipart&lt;/span&gt; [{&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:content&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Awesome Picture&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
                                               {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content/type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:content&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;image/jpeg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
                                               {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:part-name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;eggplant&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:content&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Eggplants&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
                                               {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:content&lt;/span&gt; (&lt;span class="pl-en"&gt;clojure.java.io/file&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pic.jpg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)}]
                                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; You can also optionally pass a :mime-subtype&lt;/span&gt;
                                   &lt;span class="pl-c1"&gt;:mime-subtype&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Multipart :content values can be one of the following:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; String, InputStream, File, a byte-array, or an instance of org.apache.http.entity.mime.content.ContentBody&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Some Multipart bodies can also support more keys (like :encoding&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; and :mime-type), check src/clj-http/multipart.clj to see all flags&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Apache's http client automatically retries on IOExceptions, if you&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; would like to handle these retries yourself, you can specify a&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; :retry-handler. Return true to retry, false to stop trying:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:multipart&lt;/span&gt; [[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
                                               [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content/type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text/plain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
                                               [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;clojure.java.io/file&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/missing-file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]]
                                   &lt;span class="pl-c1"&gt;:retry-handler&lt;/span&gt; (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [ex try-count http-context]
                                                    (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Got:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ex)
                                                    (&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;&amp;gt;&lt;/span&gt; try-count &lt;span class="pl-c1"&gt;4&lt;/span&gt;) &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;))})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; to handle a file with non-ascii filename, try :multipart-charset "UTF-8" and :multipart-mode BROWSER_COMPATIBLE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; see also: https://stackoverflow.com/questions/3393445/international-characters-in-filename-in-mutipart-formdata&lt;/span&gt;
(&lt;span class="pl-k"&gt;import&lt;/span&gt; (&lt;span class="pl-en"&gt;org.apache.http.entity.mime&lt;/span&gt; HttpMultipartMode))

(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:multipart&lt;/span&gt; [{&lt;span class="pl-c1"&gt;:content&lt;/span&gt; (&lt;span class="pl-en"&gt;clojure.java.io/file&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;日本語.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)}]
                                   &lt;span class="pl-c1"&gt;:multipart-mode&lt;/span&gt; HttpMultipartMode/BROWSER_COMPATIBLE
                                   &lt;span class="pl-c1"&gt;:multipart-charset&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UTF-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} )
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A word about flattening nested &lt;code&gt;:query-params&lt;/code&gt; and &lt;code&gt;:form-params&lt;/code&gt; maps. There are essentially three
  different ways to handle flattening them:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;&lt;code&gt;:ignore-nested-query-string&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Do not handle nested query parameters specially, treat them as
    the exact text they come in as. Defaults to &lt;b&gt;false&lt;/b&gt;.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:flatten-nested-form-params&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Flatten nested (map within a map) &lt;code&gt;:form-params&lt;/code&gt; before encoding
    it as the body. Defaults to &lt;b&gt;false&lt;/b&gt;, meaning form params are encoded only
    &lt;code&gt;x-www-form-urlencoded&lt;/code&gt;.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:flatten-nested-keys&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;An advanced way of specifying which keys having nested maps should be
    flattened. A middleware function checks the previous two options
    (&lt;code&gt;:ignore-nested-query-string&lt;/code&gt; and &lt;code&gt;:flatten-nested-form-params&lt;/code&gt;) and modifies this to be the
    list that will be flattened.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2&gt;&lt;a id="user-content-delete" class="anchor" aria-hidden="true" href="#delete"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DELETE&lt;/h2&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/delete&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resource&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-async-http-request" class="anchor" aria-hidden="true" href="#async-http-request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Async HTTP Request&lt;/h2&gt;The new async HTTP request API is a Ring-style async API.
  All options for synchronous request can use in asynchronous requests.
  start an async request is easy, for example:
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; :async? in options map need to be true&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:async?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; respond callback&lt;/span&gt;
            (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [response] (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;response is:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; response))
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; raise callback&lt;/span&gt;
            (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [exception] (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exception message is: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;.getMessage&lt;/span&gt; exception))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All exceptions thrown during the request will be passed to the raise callback.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cancelling-requests" class="anchor" aria-hidden="true" href="#cancelling-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cancelling Requests&lt;/h3&gt;
&lt;p&gt;Calls to the http methods with &lt;code&gt;:async true&lt;/code&gt; return an Apache &lt;a href="https://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/concurrent/BasicFuture.html" rel="nofollow"&gt;BasicFuture&lt;/a&gt; that you can call &lt;code&gt;.get&lt;/code&gt;
  or &lt;code&gt;.cancel&lt;/code&gt; on. See the Javadocs for &lt;code&gt;BasicFuture&lt;/code&gt; &lt;a href="https://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/concurrent/BasicFuture.html" rel="nofollow"&gt;here&lt;/a&gt;. For instance:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;import&lt;/span&gt; '(java.util.concurrent TimeoutException TimeUnit))

(&lt;span class="pl-k"&gt;let&lt;/span&gt; [future (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/slow-url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                         {&lt;span class="pl-c1"&gt;:async&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c1"&gt;:oncancel&lt;/span&gt; #(&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;request was cancelled&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)}
                         #(&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-c1"&gt;:got&lt;/span&gt; %) #(&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-c1"&gt;:err&lt;/span&gt; %))]
  (&lt;span class="pl-k"&gt;try&lt;/span&gt;
    (&lt;span class="pl-en"&gt;.get&lt;/span&gt; future &lt;span class="pl-c1"&gt;1&lt;/span&gt; TimeUnit/SECONDS)
    (&lt;span class="pl-k"&gt;catch&lt;/span&gt; TimeoutException e
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Cancel the request, it's taken too long&lt;/span&gt;
      (&lt;span class="pl-en"&gt;.cancel&lt;/span&gt; future &lt;span class="pl-c1"&gt;true&lt;/span&gt;))))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-coercions" class="anchor" aria-hidden="true" href="#coercions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coercions&lt;/h2&gt;
&lt;p&gt;clj-http allows coercing the body of the request either before it is sent (input coercion), or after
  it’s received (output coercion) from the server.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-input-coercion" class="anchor" aria-hidden="true" href="#input-coercion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Input coercion&lt;/h3&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; body as a byte-array&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resources&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:body&lt;/span&gt; my-byte-array})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; body as a string&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resources&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:body&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; :body-encoding is optional and defaults to "UTF-8"&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resources&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
             {&lt;span class="pl-c1"&gt;:body&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:body-encoding&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UTF-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; body as a file&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resources&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
             {&lt;span class="pl-c1"&gt;:body&lt;/span&gt; (&lt;span class="pl-en"&gt;clojure.java.io/file&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;:body-encoding&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UTF-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; :length is optional for passing in an InputStream; if not&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; supplied it will default to -1 to signal to HttpClient to use&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; chunked encoding&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resources&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
             {&lt;span class="pl-c1"&gt;:body&lt;/span&gt; (&lt;span class="pl-en"&gt;clojure.java.io/input-stream&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)})

(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/resources&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
             {&lt;span class="pl-c1"&gt;:body&lt;/span&gt; (&lt;span class="pl-en"&gt;clojure.java.io/input-stream&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;:length&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-output-coercion" class="anchor" aria-hidden="true" href="#output-coercion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output coercion&lt;/h3&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The default output is a string body&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/foo.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Coerce as a byte-array&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/favicon.ico&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:byte-array&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Coerce as something other than UTF-8 string&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/string.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UTF-16&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Coerce as json&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/foo.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;})
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/foo.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:json-strict&lt;/span&gt;})
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/foo.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:json-string-keys&lt;/span&gt;})
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/foo.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:json-strict-string-keys&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Coerce as Transit encoded JSON or MessagePack&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:transit+json&lt;/span&gt;})
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:transit+msgpack&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Coerce as a clojure datastructure&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/foo.clj&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:clojure&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Coerce as x-www-form-urlencoded&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:x-www-form-urlencoded&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Try to automatically coerce the output based on the content-type&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; header (this is currently a BETA feature!). Currently supports&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; text, json and clojure (with automatic charset detection)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; clojure coercion requires "application/clojure" or&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; "application/edn" in the content-type header&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/foo.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:auto&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return the body as a stream&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/bigrequest.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:stream&lt;/span&gt;})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Note that the connection to the server will NOT be closed until the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; stream has been read&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return the body as a java.io.BufferedReader&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/bigrequest.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:reader&lt;/span&gt;})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; As above, the connection will remain open until the stream has been&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; read.  The reader will attempt to respect the server-specified charset,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if any, defaulting to UTF-8.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output coercion with &lt;code&gt;:as :json&lt;/code&gt;, &lt;code&gt;:as :json-strict&lt;/code&gt;, &lt;code&gt;:as :json-strict-string-keys&lt;/code&gt;, &lt;code&gt;:as :json-string-keys&lt;/code&gt; or &lt;code&gt;:as :x-www-form-urlencoded&lt;/code&gt; will only work with an optional dependency, see &lt;a href="#optional-dependencies"&gt;Optional Dependencies&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By default, JSON coercion is only applied when the response’s status
  is considered “unexceptional”. If the &lt;code&gt;:unexeceptional-status&lt;/code&gt; option
  is provided, then its value is a function which specifies what status
  codes are unexceptional. &lt;code&gt;:unexceptional-status&lt;/code&gt; defaults to
  &lt;code&gt;clj-http.client/unexceptional-status?&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you would like to change under what conditions coercion is applied,
  you can send the &lt;code&gt;:coerce&lt;/code&gt; option, which can be set to:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;:always        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; always json decode the body&lt;/span&gt;
:unexceptional &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; json decode when an HTTP response is considered unexceptional&lt;/span&gt;
:exceptional   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; json decode when an HTTP response is considered exceptional&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;:coerce&lt;/code&gt; setting defaults to &lt;code&gt;:unexceptional&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-headers" class="anchor" aria-hidden="true" href="#headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Headers&lt;/h2&gt;
&lt;p&gt;clj-http’s treatment of headers is a little more permissive than the &lt;a href="https://github.com/ring-clojure/ring/blob/master/SPEC"&gt;ring spec&lt;/a&gt;
  specifies.&lt;/p&gt;
&lt;p&gt;Rather than forcing all request headers to be lowercase strings,
  clj-http allows strings or keywords of any case. Keywords will be
  transformed into their canonical representation, so the :content-md5
  header will be sent to the server as “Content-MD5”, for instance.
  String keys in request headers, however, will be sent to the server
  with their casing unchanged.&lt;/p&gt;
&lt;p&gt;Response headers can be read as keywords or strings of any case. If
  the server responds with a “Date” header, you could access the value
  of that header as :date, “date”, “Date”, etc.&lt;/p&gt;
&lt;p&gt;If for some reason you require access to the original header name that
  the server specified, it is available by invoking (keys …) on the
  header map.&lt;/p&gt;
&lt;p&gt;This special treatment of headers is implemented in the
  wrap-header-map middleware, which (like any middleware) can be
  disabled by using with-middleware to specify different behavior.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-query-string-parameters" class="anchor" aria-hidden="true" href="#query-string-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Query-string parameters&lt;/h2&gt;
&lt;p&gt;There are three different ways that query string parameters for array values can
  be generated, depending on what the resulting query string should look like,
  they are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A repeating parameter (default)&lt;/li&gt;
  &lt;li&gt;Array style&lt;/li&gt;
  &lt;li&gt;Indexed array style&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example of the input and output for the &lt;code&gt;:query-params&lt;/code&gt; parameter,
  controlled by the &lt;code&gt;:multi-param-style&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; default style, with :multi-param-style unset&lt;/span&gt;
:a [&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;] =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=1&amp;amp;a=2&amp;amp;a=3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; with :multi-param-style :array, a repeating param with array suffix&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (PHP-style):&lt;/span&gt;
:a [&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;] =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a[]=1&amp;amp;a[]=2&amp;amp;a[]=3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; with :multi-param-style :indexed, a repeating param with array suffix and&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; index (Rails-style):&lt;/span&gt;
:a [&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;] =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a[0]=1&amp;amp;a[1]=2&amp;amp;a[2]=3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-meta-tag-headers" class="anchor" aria-hidden="true" href="#meta-tag-headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meta Tag Headers&lt;/h2&gt;
&lt;p&gt;HTML 4.01 allows using the tag &lt;code&gt;&amp;lt;meta http-equiv="..." /&amp;gt;&lt;/code&gt; and HTML 5 allows
  using the tag &lt;code&gt;&amp;lt;meta charset="..." /&amp;gt;&lt;/code&gt; to specify a header that should be
  treated as an HTTP response header. By default, clj-http will ignore the body of
  the response (other than the regular output coercion), but if you need clj-http
  to parse the headers out of the body, you can use the &lt;code&gt;:decode-body-headers&lt;/code&gt;
  option:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; without decoding body headers (defaults to off):&lt;/span&gt;
(&lt;span class="pl-c1"&gt;:headers&lt;/span&gt; (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.yomiuri.co.jp/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
=&amp;gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Apache&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content-encoding&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gzip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content-type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text/html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Tue, 09 Oct 2012 18:02:41 GMT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cache-control&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;max-age=0, no-cache&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;expires&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Tue, 09 Oct 2012 18:02:41 GMT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;etag&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\"&lt;/span&gt;1dfb-2686-4cba2686fb8b1&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pragma&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;no-cache&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;connection&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;close&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; with decoding body headers, notice the content-type,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; content-style-type and content-script-type headers:&lt;/span&gt;
(&lt;span class="pl-c1"&gt;:headers&lt;/span&gt; (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.yomiuri.co.jp/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:decode-body-headers&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}))
=&amp;gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Apache&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content-encoding&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gzip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content-script-type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text/javascript&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content-style-type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text/css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content-type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text/html; charset=Shift_JIS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Tue, 09 Oct 2012 18:02:59 GMT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cache-control&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;max-age=0, no-cache&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;expires&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Tue, 09 Oct 2012 18:02:59 GMT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;etag&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\"&lt;/span&gt;1dfb-2686-4cba2686fb8b1&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pragma&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;no-cache&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;connection&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;close&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can be used to have clj-http correctly interpret the body’s charset by
  using:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.yomiuri.co.jp/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:decode-body-headers&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c1"&gt;:as&lt;/span&gt; &lt;span class="pl-c1"&gt;:auto&lt;/span&gt;})
=&amp;gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; correctly formatted :body (Shift_JIS charset instead of UTF-8)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that this feature is currently beta and uses &lt;a href="https://github.com/weavejester/crouton"&gt;Crouton&lt;/a&gt; to parse the body of
  the request. If you do not want to use this feature, you can include Crouton in
  addition to clj-http as a dependency like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defproject&lt;/span&gt; &lt;span class="pl-e"&gt;foo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.1.0-SNAPSHOT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:dependencies&lt;/span&gt; [[org.clojure/clojure &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.3.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
                 [clj-http &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.6.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
                 [crouton &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note also that HEAD requests will not return a body, in which case this setting will have no effect.&lt;/p&gt;
&lt;p&gt;clj-http will automatically disable the &lt;code&gt;:decode-body-headers&lt;/code&gt; option.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-link-headers" class="anchor" aria-hidden="true" href="#link-headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Link Headers&lt;/h2&gt;
&lt;p&gt;clj-http parses any &lt;a href="http://tools.ietf.org/html/rfc5988" rel="nofollow"&gt;link headers&lt;/a&gt; returned in the response, and adds them to the
  &lt;code&gt;:links&lt;/code&gt; key on the response map. This is particularly useful for paging RESTful
  APIs:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;:links&lt;/span&gt; (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://api.github.com/gists&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
=&amp;gt; {&lt;span class="pl-c1"&gt;:next&lt;/span&gt; {&lt;span class="pl-c1"&gt;:href&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://api.github.com/gists?page=2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
    &lt;span class="pl-c1"&gt;:last&lt;/span&gt; {&lt;span class="pl-c1"&gt;:href&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://api.github.com/gists?page=22884&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-redirects" class="anchor" aria-hidden="true" href="#redirects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Redirects&lt;/h2&gt;
&lt;p&gt;clj-http conforms its behaviour regarding automatic redirects to the &lt;a href="https://tools.ietf.org/html/rfc2616#section-10.3" rel="nofollow"&gt;RFC&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It means that redirects on status &lt;code&gt;301&lt;/code&gt;, &lt;code&gt;302&lt;/code&gt; and &lt;code&gt;307&lt;/code&gt; are not redirected on
  methods other than &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;. If you want a behaviour closer to what most
  browser have, you can set &lt;code&gt;:redirect-strategy&lt;/code&gt; to &lt;code&gt;:lax&lt;/code&gt; in your request to have
  automatic redirection work on all methods by transforming the method of the
  request to &lt;code&gt;GET&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Redirect Options:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;&lt;code&gt;:trace-redirects&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;If true, clj-http will enhance the response object with a
    list of redirected URLs with key: &lt;code&gt;:trace-redirects&lt;/code&gt;.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:redirect-strategy&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Sets the redirect strategy for clj-http. Accepts the following:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;:none&lt;/code&gt;     - Perform no redirects&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;:default&lt;/code&gt;  - See &lt;a href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/DefaultRedirectStrategy.html" rel="nofollow"&gt;https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/DefaultRedirectStrategy.html&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;:lax&lt;/code&gt;      - See &lt;a href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/LaxRedirectStrategy.html" rel="nofollow"&gt;https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/LaxRedirectStrategy.html&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;:graceful&lt;/code&gt; - Similar to &lt;code&gt;:default&lt;/code&gt;, but does not throw exceptions when max redirects is reached. This is the redirects behaviour in 2.x&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;nil&lt;/code&gt;       - When nil, assumes &lt;code&gt;:default&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;You may also pass in an instance of RedirectStrategy (in the &lt;code&gt;:redirect-strategy&lt;/code&gt; key) if you want a
  behavior that’s not implemented.&lt;/p&gt;
&lt;p&gt;Additionally, clj-http will attempt to validate that a redirect host is not invalid, you can disable
  this by setting &lt;code&gt;:validate-redirects false&lt;/code&gt; in the request (the default is true)&lt;/p&gt;
&lt;p&gt;NOTE: The options &lt;code&gt;:force-redirects&lt;/code&gt; and &lt;code&gt;:follow-redirects&lt;/code&gt; (present in clj-http 2.x are no longer
  used). You can use &lt;code&gt;:graceful&lt;/code&gt; to mostly emulate the old redirect behaviour.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-create-a-custom-redirectstrategy" class="anchor" aria-hidden="true" href="#how-to-create-a-custom-redirectstrategy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to create a custom RedirectStrategy&lt;/h3&gt;
&lt;p&gt;As mentioned earlier, it’s possible to pass a custom instance of RedirectStrategy. The snippet below shows how to create a custom &lt;code&gt;RedirectStrategy&lt;/code&gt; by wrapping the default strategy.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;default-strategy&lt;/span&gt; &lt;span class="pl-e"&gt;org.apache.http.impl.client.DefaultRedirectStrategy&lt;/span&gt;/&lt;span class="pl-e"&gt;INSTANCE&lt;/span&gt;)

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;logging-redirect-strategy&lt;/span&gt;
  (&lt;span class="pl-en"&gt;reify&lt;/span&gt; org.apache.http.client.RedirectStrategy
    (&lt;span class="pl-en"&gt;getRedirect&lt;/span&gt; [this request response context]
      (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;attempting redirect...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      (&lt;span class="pl-en"&gt;.getRedirect&lt;/span&gt; &lt;span class="pl-k"&gt;default-strategy&lt;/span&gt; request response context))
    (&lt;span class="pl-en"&gt;isRedirected&lt;/span&gt; [this request response context]
      (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;checking isRedirected&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      (&lt;span class="pl-en"&gt;.isRedirected&lt;/span&gt; &lt;span class="pl-k"&gt;default-strategy&lt;/span&gt; request response context))))

(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://httpbin.org/absolute-redirect/3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:redirect-strategy&lt;/span&gt; logging-redirect-strategy})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; this will output the following:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   checking isRedirected&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   attempting redirect...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   checking isRedirected&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   attempting redirect...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   checking isRedirected&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   attempting redirect...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   checking isRedirected&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-cookies" class="anchor" aria-hidden="true" href="#cookies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cookies&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cookiestores" class="anchor" aria-hidden="true" href="#cookiestores"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cookiestores&lt;/h3&gt;
&lt;p&gt;clj-http can simplify the maintenance of cookies across requests if it is
  provided with a &lt;span&gt;cookie store&lt;/span&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;binding&lt;/span&gt; [clj-http.core/*cookie-store* (&lt;span class="pl-en"&gt;clj-http.cookies/cookie-store&lt;/span&gt;)]
  (&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/login&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:form-params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:username&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                                         &lt;span class="pl-c1"&gt;:password&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})
  (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/secured-page&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ...)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(The &lt;code&gt;clj-http.cookies/cookie-store&lt;/code&gt; function returns a new empty instance of a
  default implementation of &lt;code&gt;org.apache.http.client.CookieStore&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;This will allow cookies to only be &lt;span&gt;written&lt;/span&gt; to the cookie store. Cookies from
  the cookie-store will not automatically be sent with future requests.&lt;/p&gt;
&lt;p&gt;If you would like cookies from the cookie-store to automatically be sent with
  each request, specify the cookie-store with the &lt;code&gt;:cookie-store&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; [my-cs (&lt;span class="pl-en"&gt;clj-http.cookies/cookie-store&lt;/span&gt;)]
  (&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/login&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:form-params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:username&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                                         &lt;span class="pl-c1"&gt;:password&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
                                           &lt;span class="pl-c1"&gt;:cookie-store&lt;/span&gt; my-cs})
  (&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/update&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:body&lt;/span&gt; my-data
                                            &lt;span class="pl-c1"&gt;:cookie-store&lt;/span&gt; my-cs}))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use the &lt;code&gt;get-cookies&lt;/code&gt; function to retrieve the cookies
  from a cookie store:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;cs&lt;/span&gt; (&lt;span class="pl-en"&gt;clj-http.cookies/cookie-store&lt;/span&gt;))

(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:cookie-store&lt;/span&gt; cs})

(&lt;span class="pl-en"&gt;clojure.pprint/pprint&lt;/span&gt; (&lt;span class="pl-en"&gt;clj-http.cookies/get-cookies&lt;/span&gt; cs))
{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NID&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 {&lt;span class="pl-c1"&gt;:domain&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:expires&lt;/span&gt; #&amp;lt;Date Tue Oct &lt;span class="pl-c1"&gt;02&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;:&lt;span class="pl-c1"&gt;12&lt;/span&gt;:&lt;span class="pl-c1"&gt;06&lt;/span&gt; MDT &lt;span class="pl-c1"&gt;2012&lt;/span&gt;&amp;gt;,
  &lt;span class="pl-c1"&gt;:path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:value&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;58=c387....&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:version&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;},
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PREF&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 {&lt;span class="pl-c1"&gt;:domain&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:expires&lt;/span&gt; #&amp;lt;Date Wed Apr &lt;span class="pl-c1"&gt;02&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;:&lt;span class="pl-c1"&gt;12&lt;/span&gt;:&lt;span class="pl-c1"&gt;06&lt;/span&gt; MDT &lt;span class="pl-c1"&gt;2014&lt;/span&gt;&amp;gt;,
  &lt;span class="pl-c1"&gt;:path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:value&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ID=3ba...:FF=0:TM=133...:LM=133...:S=_iRM...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:version&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;}}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-keystores-trust-stores" class="anchor" aria-hidden="true" href="#keystores-trust-stores"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keystores, Trust-stores&lt;/h3&gt;
&lt;p&gt;You can also specify your own keystore/trust-store to be used:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:keystore&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/keystore.ks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                   &lt;span class="pl-c1"&gt;:keystore-type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; default: jks&lt;/span&gt;
                                   &lt;span class="pl-c1"&gt;:keystore-pass&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secretpass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                   &lt;span class="pl-c1"&gt;:trust-store&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/trust-store.ks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                   &lt;span class="pl-c1"&gt;:trust-store-type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; default jks&lt;/span&gt;
                                   &lt;span class="pl-c1"&gt;:trust-store-pass&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;trustpass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;:keystore/:trust-store&lt;/code&gt; values may be either paths to keystore
  files or &lt;code&gt;KeyStore&lt;/code&gt; instances.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-exceptions" class="anchor" aria-hidden="true" href="#exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exceptions&lt;/h2&gt;
&lt;p&gt;The client will throw exceptions on, well, exceptional status codes, meaning all
  HTTP responses other than &lt;code&gt;#{200 201 202 203 204 205 206 207 300 301 302 303 304
  307}&lt;/code&gt;. clj-http will throw a &lt;a href="http://github.com/scgilardi/slingshot"&gt;Slingshot&lt;/a&gt; Stone that can be caught by a regular
  &lt;code&gt;(catch Exception e ...)&lt;/code&gt; or in Slingshot’s &lt;code&gt;try+&lt;/code&gt; block:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/broken&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
=&amp;gt; ExceptionInfo clj-http: status &lt;span class="pl-c1"&gt;404&lt;/span&gt;  clj-http.client/wrap-exceptions/fn--583 (&lt;span class="pl-en"&gt;client.clj:41&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Or, if you would like the Exception message to contain the entire response:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/broken&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:throw-entire-message?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;})
=&amp;gt; ExceptionInfo clj-http: status &lt;span class="pl-c1"&gt;404&lt;/span&gt; {&lt;span class="pl-c1"&gt;:status&lt;/span&gt; &lt;span class="pl-c1"&gt;404&lt;/span&gt;,
                                       &lt;span class="pl-c1"&gt;:headers&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nginx/1.0.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                                 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x-runtime&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12ms&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                                 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content-encoding&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gzip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                                 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content-type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text/html; charset=utf-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                                 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Mon, 17 Oct 2011 23:15 :36 GMT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                                 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cache-control&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;no-cache&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                                 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;status&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;404 Not Found&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                                 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;transfer-encoding&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chunked&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                                 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;connection&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;close&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
                                       &lt;span class="pl-c1"&gt;:body&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...body here...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
   clj-http.client/wrap-exceptions/fn--584 (&lt;span class="pl-en"&gt;client.clj:42&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; You can also ignore HTTP-status-code exceptions and handle them yourself:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/broken&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:throw-exceptions&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Or ignore an unknown host (methods return 'nil' if this is set to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; true and the host does not exist:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.invalid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:ignore-unknown-host?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Or customize the http statuses that will throw:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/broken&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:unexceptional-status&lt;/span&gt; #(&lt;span class="pl-en"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;200&lt;/span&gt; % &lt;span class="pl-c1"&gt;299&lt;/span&gt;)})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(spacing added by me to be human readable)&lt;/p&gt;
&lt;p&gt;How to use with Slingshot:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Response map is thrown as exception obj.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; We filter out by status codes&lt;/span&gt;
(&lt;span class="pl-en"&gt;try+&lt;/span&gt;
  (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/broken&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;catch&lt;/span&gt; [&lt;span class="pl-c1"&gt;:status&lt;/span&gt; &lt;span class="pl-c1"&gt;403&lt;/span&gt;] {&lt;span class="pl-c1"&gt;:keys&lt;/span&gt; [request-time headers body]}
    (&lt;span class="pl-en"&gt;log/warn&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;403&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; request-time headers))
  (&lt;span class="pl-k"&gt;catch&lt;/span&gt; [&lt;span class="pl-c1"&gt;:status&lt;/span&gt; &lt;span class="pl-c1"&gt;404&lt;/span&gt;] {&lt;span class="pl-c1"&gt;:keys&lt;/span&gt; [request-time headers body]}
    (&lt;span class="pl-en"&gt;log/warn&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NOT Found 404&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; request-time headers body))
  (&lt;span class="pl-k"&gt;catch&lt;/span&gt; Object _
    (&lt;span class="pl-en"&gt;log/error&lt;/span&gt; (&lt;span class="pl-c1"&gt;:throwable&lt;/span&gt; &amp;amp;throw-context) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unexpected error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-en"&gt;throw+&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-decompression" class="anchor" aria-hidden="true" href="#decompression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Decompression&lt;/h2&gt;
&lt;p&gt;By default, clj-http will add the &lt;code&gt;{"Accept-Encoding" "gzip, deflate"}&lt;/code&gt; header
  to requests, and automatically decompress the resulting gzip or deflate stream
  if the &lt;code&gt;Content-Encoding&lt;/code&gt; header is found on the response. If this is undesired,
  the &lt;code&gt;{:decompress-body false}&lt;/code&gt; option can be specified:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Auto-decompression used: (google requires a user-agent to send gzip data)&lt;/span&gt;
(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;h&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;User-Agent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Mozilla/5.0 (Windows NT 6.1;) Gecko/20100101 Firefox/13.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;resp&lt;/span&gt; (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:headers&lt;/span&gt; h}))
(&lt;span class="pl-c1"&gt;:orig-content-encoding&lt;/span&gt; resp)
=&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gzip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; &amp;lt;= google sent response gzipped&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; and without decompression:&lt;/span&gt;
(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;resp2&lt;/span&gt; (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:headers&lt;/span&gt; h &lt;span class="pl-c1"&gt;:decompress-body&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;})
(&lt;span class="pl-c1"&gt;:orig-content-encoding&lt;/span&gt; resp2)
&lt;span class="pl-e"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-e"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If clj-http decompresses something, the “content-encoding” header is removed
  from the headers (because the encoding is no longer true). This allows clj-http
  to be used as a pass-through proxy with ring. The original content-encoding is
  available as &lt;code&gt;:orig-content-encoding&lt;/code&gt; in the response map if auto-decompression
  is enabled.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h2&gt;
&lt;p&gt;There are four debugging methods you can use:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; print request info to *out*:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:debug&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; print request info to *out*, including request body:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:debug&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c1"&gt;:debug-body&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c1"&gt;:body&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; save the request that was sent in a :request key in the response:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:save-request?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; save the request that was sent in a :request key in the response,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; including the body content:&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:save-request?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c1"&gt;:debug-body&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; add an HttpResponseInterceptor to the request. This callback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; is called for each redirects with the following args:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; ^HttpResponse resp, HttpContext^ ctx&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; this allows low level debugging + access to socket.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; see http://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/HttpResponseInterceptor.html&lt;/span&gt;
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:response-interceptor&lt;/span&gt; (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [resp ctx] (&lt;span class="pl-en"&gt;println&lt;/span&gt; ctx))})&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-logging" class="anchor" aria-hidden="true" href="#logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging&lt;/h3&gt;
&lt;p&gt;Finally, if you want to access the logging that the Apache client does internally, you can set up
  your dependencies to add the &lt;a href="https://logging.apache.org/log4j/2.x/" rel="nofollow"&gt;log4j2&lt;/a&gt; libraries and configure the logging for clj-http. In order to do
  this, you’ll need to add&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;[org.apache.logging.log4j/log4j-api &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.11.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
[org.apache.logging.log4j/log4j-core &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.11.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
[org.apache.logging.log4j/log4j-1.2-api &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.11.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To your &lt;code&gt;project.clj&lt;/code&gt; and have a usable log4j2.properties. I have provided one in
  &lt;code&gt;resources/log4j2.properties&lt;/code&gt;. Make sure to set:&lt;/p&gt;
&lt;pre lang="fundamental"&gt;rootLogger.level = debug
&lt;/pre&gt;
&lt;p&gt;If you want to see debug information (or “trace” for trace logging). When you perform a request you
  should see something akin to this in the logs:&lt;/p&gt;
&lt;pre lang="fundamental"&gt;[2018-03-20T20:36:34,635][DEBUG][o.a.h.c.p.RequestAddCookies] CookieSpec selected: default
[2018-03-20T20:36:34,635][DEBUG][o.a.h.c.p.RequestAuthCache] Auth cache not set in the context
[2018-03-20T20:36:34,635][DEBUG][o.a.h.i.c.BasicHttpClientConnectionManager] Get connection for route {s}-&amp;gt;https://example.com:443
[2018-03-20T20:36:34,636][DEBUG][o.a.h.i.c.DefaultManagedHttpClientConnection] http-outgoing-1: set socket timeout to 0
[2018-03-20T20:36:34,636][DEBUG][o.a.h.i.e.MainClientExec ] Opening connection {s}-&amp;gt;https://example.com:443
[2018-03-20T20:36:34,644][DEBUG][o.a.h.i.c.DefaultHttpClientConnectionOperator] Connecting to example.com/10.0.0.1:443
[2018-03-20T20:36:34,644][DEBUG][o.a.h.c.s.SSLConnectionSocketFactory] Connecting socket to example.com/10.0.0.1:443 with timeout 0
[2018-03-20T20:36:34,692][DEBUG][o.a.h.c.s.SSLConnectionSocketFactory] Enabled protocols: [TLSv1, TLSv1.1, TLSv1.2]
[2018-03-20T20:36:34,693][DEBUG][o.a.h.c.s.SSLConnectionSocketFactory] Enabled cipher suites:[TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, ... etc ...]
[2018-03-20T20:36:34,693][DEBUG][o.a.h.c.s.SSLConnectionSocketFactory] Starting handshake
[2018-03-20T20:36:34,841][DEBUG][o.a.h.c.s.SSLConnectionSocketFactory] Secure session established
[2018-03-20T20:36:34,842][DEBUG][o.a.h.c.s.SSLConnectionSocketFactory]  negotiated protocol: TLSv1.2
[2018-03-20T20:36:34,842][DEBUG][o.a.h.c.s.SSLConnectionSocketFactory]  negotiated cipher suite: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
[2018-03-20T20:36:34,843][DEBUG][o.a.h.c.s.SSLConnectionSocketFactory]  peer principal: CN=example.com
[2018-03-20T20:36:34,843][DEBUG][o.a.h.c.s.SSLConnectionSocketFactory]  peer alternative names: [example.com, www.example.com]
[2018-03-20T20:36:34,843][DEBUG][o.a.h.c.s.SSLConnectionSocketFactory]  issuer principal: CN=Let's Encrypt Authority X3, O=Let's Encrypt, C=US
[2018-03-20T20:36:34,844][DEBUG][o.a.h.i.c.DefaultHttpClientConnectionOperator] Connection established 192.168.0.29:36792&amp;lt;-&amp;gt;10.0.0.1:443
[2018-03-20T20:36:34,844][DEBUG][o.a.h.i.e.MainClientExec ] Executing request POST /post HTTP/1.1
[2018-03-20T20:36:34,844][DEBUG][o.a.h.i.e.MainClientExec ] Target auth state: UNCHALLENGED
[2018-03-20T20:36:34,844][DEBUG][o.a.h.i.e.MainClientExec ] Proxy auth state: UNCHALLENGED
[2018-03-20T20:36:34,845][DEBUG][o.a.h.headers            ] http-outgoing-1 &amp;gt;&amp;gt; POST /post HTTP/1.1
[2018-03-20T20:36:34,845][DEBUG][o.a.h.headers            ] http-outgoing-1 &amp;gt;&amp;gt; Connection: close
[2018-03-20T20:36:34,845][DEBUG][o.a.h.headers            ] http-outgoing-1 &amp;gt;&amp;gt; accept-encoding: gzip, deflate
[2018-03-20T20:36:34,845][DEBUG][o.a.h.headers            ] http-outgoing-1 &amp;gt;&amp;gt; Content-Length: 14
[2018-03-20T20:36:34,845][DEBUG][o.a.h.headers            ] http-outgoing-1 &amp;gt;&amp;gt; Content-Type: text/plain; charset=UTF-8
[2018-03-20T20:36:34,846][DEBUG][o.a.h.headers            ] http-outgoing-1 &amp;gt;&amp;gt; Host: example.com
[2018-03-20T20:36:34,846][DEBUG][o.a.h.headers            ] http-outgoing-1 &amp;gt;&amp;gt; User-Agent: Apache-HttpClient/4.5.5 (Java/9.0.1)
[2018-03-20T20:36:34,846][DEBUG][o.a.h.wire               ] http-outgoing-1 &amp;gt;&amp;gt; "POST /post HTTP/1.1[\r][\n]"
[2018-03-20T20:36:34,846][DEBUG][o.a.h.wire               ] http-outgoing-1 &amp;gt;&amp;gt; "Connection: close[\r][\n]"
[2018-03-20T20:36:34,846][DEBUG][o.a.h.wire               ] http-outgoing-1 &amp;gt;&amp;gt; "accept-encoding: gzip, deflate[\r][\n]"
[2018-03-20T20:36:34,847][DEBUG][o.a.h.wire               ] http-outgoing-1 &amp;gt;&amp;gt; "Content-Length: 14[\r][\n]"
[2018-03-20T20:36:34,847][DEBUG][o.a.h.wire               ] http-outgoing-1 &amp;gt;&amp;gt; "Content-Type: text/plain; charset=UTF-8[\r][\n]"
[2018-03-20T20:36:34,847][DEBUG][o.a.h.wire               ] http-outgoing-1 &amp;gt;&amp;gt; "Host: example.com[\r][\n]"
etc etc it will go on forever and be very verbose
&lt;/pre&gt;
&lt;p&gt;This provides both the data sent and received on the wire for debugging purposes.&lt;/p&gt;
&lt;p&gt;I’ve also provided an example for changing the log level from clojure in
  &lt;code&gt;examples/logging-apache-requests.clj&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-caching" class="anchor" aria-hidden="true" href="#caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caching&lt;/h1&gt;
&lt;p&gt;clj-http supports Apache’s caching client, essentially it “provides an HTTP/1.1-compliant caching
  layer to be used with HttpClient–the Java equivalent of a browser cache.” (see &lt;a href="https://hc.apache.org/httpcomponents-client-ga/tutorial/html/caching.html" rel="nofollow"&gt;the explanation in
  the apache docs&lt;/a&gt;). In order to use the cache, a reusable connection manager &lt;b&gt;and&lt;/b&gt; http-client must be
  used.&lt;/p&gt;
&lt;p&gt;An example of basic usage with the default options:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; [cm (&lt;span class="pl-en"&gt;conn/make-reusable-conn-manager&lt;/span&gt; {})
      client (&lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; (&lt;span class="pl-en"&gt;http/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                     {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:cache&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}))]
  (&lt;span class="pl-en"&gt;http/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; client &lt;span class="pl-c1"&gt;:cache&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;})
  (&lt;span class="pl-en"&gt;http/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; client &lt;span class="pl-c1"&gt;:cache&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;})
  (&lt;span class="pl-en"&gt;http/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; client &lt;span class="pl-c1"&gt;:cache&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can build your own cache config by providing either a map of caching configuration options, or
  by providing a &lt;code&gt;CacheConfig&lt;/code&gt; object, as seen below:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; [cm (&lt;span class="pl-en"&gt;conn/make-reusable-conn-manager&lt;/span&gt; {})
      cache-config (&lt;span class="pl-en"&gt;core/build-cache-config&lt;/span&gt;
                    {&lt;span class="pl-c1"&gt;:cache-config&lt;/span&gt; {&lt;span class="pl-c1"&gt;:max-object-size&lt;/span&gt; &lt;span class="pl-c1"&gt;4096&lt;/span&gt;}})
      client (&lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; (&lt;span class="pl-en"&gt;http/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                     {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:cache&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}))]
  (&lt;span class="pl-en"&gt;http/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Use the default cache config settings&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; client &lt;span class="pl-c1"&gt;:cache&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;})
  (&lt;span class="pl-en"&gt;http/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; client &lt;span class="pl-c1"&gt;:cache&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Provide cache configuration options as a map&lt;/span&gt;
             &lt;span class="pl-c1"&gt;:cache-config&lt;/span&gt; {&lt;span class="pl-c1"&gt;:max-object-size&lt;/span&gt; &lt;span class="pl-c1"&gt;9152&lt;/span&gt;
                            &lt;span class="pl-c1"&gt;:max-cache-entries&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;}})
  (&lt;span class="pl-en"&gt;http/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; client &lt;span class="pl-c1"&gt;:cache&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Provide the cache configuration as a CacheConfig object&lt;/span&gt;
             &lt;span class="pl-c1"&gt;:cache-config&lt;/span&gt; cache-config}))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the response, clj-http provides the &lt;code&gt;:cached&lt;/code&gt; key to indicate whether the response was cached,
  missed, etc:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;nil&lt;/dt&gt;&lt;dd&gt;Caching was not used for this request&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:CACHE_HIT&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;A response was generated from the cache with no requests sent upstream.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:CACHE_MISS&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;The response came from an upstream server.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:CACHE_MODULE_RESPONSE&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;The response was generated directly by the caching module.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:VALIDATED&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;The response was generated from the cache after validating the entry with the origin server.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1&gt;&lt;a id="user-content-authentication" class="anchor" aria-hidden="true" href="#authentication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authentication&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-basic-auth" class="anchor" aria-hidden="true" href="#basic-auth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Auth&lt;/h2&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/protected&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:basic-auth&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]})
(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/protected&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:basic-auth&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user:pass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-digest-auth" class="anchor" aria-hidden="true" href="#digest-auth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Digest Auth&lt;/h2&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/protected&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:digest-auth&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]})
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-ntlm-auth" class="anchor" aria-hidden="true" href="#ntlm-auth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NTLM Auth&lt;/h2&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/protected&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:ntlm-auth&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;host&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;domain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]})
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-oauth2" class="anchor" aria-hidden="true" href="#oauth2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;oAuth2&lt;/h2&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/protected&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:oauth-token&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-advanced-usage" class="anchor" aria-hidden="true" href="#advanced-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Usage&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-raw-request" class="anchor" aria-hidden="true" href="#raw-request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Raw Request&lt;/h2&gt;
&lt;p&gt;A more general &lt;code&gt;request&lt;/code&gt; function is also available, which is useful as a
  primitive for building higher-level interfaces:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;api-action&lt;/span&gt; [method path &amp;amp; [opts]]
  (&lt;span class="pl-en"&gt;client/request&lt;/span&gt;
    (&lt;span class="pl-en"&gt;merge&lt;/span&gt; {&lt;span class="pl-c1"&gt;:method&lt;/span&gt; method &lt;span class="pl-c1"&gt;:url&lt;/span&gt; (&lt;span class="pl-en"&gt;str&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; path)} opts)))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-boolean-options" class="anchor" aria-hidden="true" href="#boolean-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Boolean options&lt;/h3&gt;
&lt;p&gt;Since 0.9.0, all boolean options can be expressed as either &lt;code&gt;{:debug true}&lt;/code&gt; or
  &lt;code&gt;{:debug? true}&lt;/code&gt;, with or without the question mark.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-persistent-connections" class="anchor" aria-hidden="true" href="#persistent-connections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistent Connections&lt;/h2&gt;
&lt;p&gt;clj-http can use persistent connections to speed up connections if multiple
  connections are being used:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;with-connection-pool&lt;/span&gt; {&lt;span class="pl-c1"&gt;:timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; &lt;span class="pl-c1"&gt;:threads&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c1"&gt;:insecure?&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-c1"&gt;:default-per-route&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;}
  (&lt;span class="pl-en"&gt;get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-en"&gt;post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-en"&gt;get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ...
  (&lt;span class="pl-en"&gt;get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/999&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For async request, you can use &lt;code&gt;with-async-connection-pool&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;with-async-connection-pool&lt;/span&gt; {&lt;span class="pl-c1"&gt;:timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; &lt;span class="pl-c1"&gt;:threads&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c1"&gt;:insecure?&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-c1"&gt;:default-per-route&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;}
  (&lt;span class="pl-en"&gt;get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:async?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;} resp1 exce1)
  (&lt;span class="pl-en"&gt;post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:async?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;} resp2 exce2)
  (&lt;span class="pl-en"&gt;get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:async?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;} resp3 exce3)
  ...
  (&lt;span class="pl-en"&gt;get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/999&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:async?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;} resp999 exce999))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is MUCH faster than sequentially performing all requests, because a
  persistent connection can be used instead creating a new connection for each
  request.&lt;/p&gt;
&lt;p&gt;If you want to start an async request in the &lt;code&gt;respond&lt;/code&gt; callback of an async request and
  reuse the pool context, just use &lt;code&gt;reuse-pool&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;with-async-connection-pool&lt;/span&gt; {&lt;span class="pl-c1"&gt;:timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; &lt;span class="pl-c1"&gt;:threads&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c1"&gt;:insecure?&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-c1"&gt;:default-per-route&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;}
  (&lt;span class="pl-en"&gt;get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:async?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;} resp1 exce1)
  (&lt;span class="pl-en"&gt;post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        {&lt;span class="pl-c1"&gt;:async?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}
        (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [resp] (&lt;span class="pl-en"&gt;get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                        (&lt;span class="pl-en"&gt;reuse-pool&lt;/span&gt; {&lt;span class="pl-c1"&gt;:async?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;} resp)
                        resp3 exce3))
        exce2))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are many advanced options available when creating asynchronous connection pools that can be
  configured by passing an &lt;code&gt;:io-config&lt;/code&gt; map in the connection manager parameters. It supports:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;:connect-timeout&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;:interest-op-queued&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;:io-thread-count&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;:rcv-buf-size&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;:select-interval&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;:shutdown-grace-period&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;:snd-buf-size&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;:so-keep-alive&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;:so-linger&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;:so-timeout&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;:tcp-no-delay&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the docstring on &lt;code&gt;with-async-connection-pool&lt;/code&gt; for more information about these options.&lt;/p&gt;
&lt;p&gt;If you would prefer to handle managing the connection manager yourself, you can
  create a connection manager and specify it for each request:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;cm&lt;/span&gt; (&lt;span class="pl-en"&gt;clj-http.conn-mgr/make-reusable-conn-manager&lt;/span&gt; {&lt;span class="pl-c1"&gt;:timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;:threads&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;}))
(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;cm2&lt;/span&gt; (&lt;span class="pl-en"&gt;clj-http.conn-mgr/make-reusable-conn-manager&lt;/span&gt; {&lt;span class="pl-c1"&gt;:timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;:threads&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}))

(&lt;span class="pl-en"&gt;get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm2})
(&lt;span class="pl-en"&gt;post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm})
(&lt;span class="pl-en"&gt;get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.org/3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm2})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Don't forget to shut it down when you're done!&lt;/span&gt;
(&lt;span class="pl-en"&gt;clj-http.conn-mgr/shutdown-manager&lt;/span&gt; cm)
(&lt;span class="pl-en"&gt;clj-http.conn-mgr/shutdown-manager&lt;/span&gt; cm2)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the docstring on &lt;code&gt;make-reusable-conn-manager&lt;/code&gt; for options and default
  values.&lt;/p&gt;
&lt;p&gt;In the current version, pooled async request CANNOT specify connection manager.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-re-using-httpclient-between-requests" class="anchor" aria-hidden="true" href="#re-using-httpclient-between-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Re-using &lt;code&gt;HttpClient&lt;/code&gt; between requests&lt;/h2&gt;
&lt;p&gt;In some cases, you may want to re-use the same &lt;code&gt;HttpClient&lt;/code&gt; object between requests, either so you
  don’t have to build it every time, or because you make some configuration change to the request.
  clj-http will return the built HTTP client in &lt;code&gt;:http-client&lt;/code&gt; which you can then specify in
  subsequent requests (with &lt;code&gt;:http-client&lt;/code&gt;). Note that in order to reuse the client a connection
  manager must be used.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Re-use the HttpClient clj-http builds for you:&lt;/span&gt;
(&lt;span class="pl-k"&gt;let&lt;/span&gt; [cm (&lt;span class="pl-en"&gt;conn/make-reusable-conn-manager&lt;/span&gt; {})
      resp (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm})
      hclient (&lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; resp)]
  (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; hclient})
  (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; hclient})
  (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; hclient}))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; You can also build your own, using clj-http's helper or manually building it:&lt;/span&gt;
(&lt;span class="pl-k"&gt;let&lt;/span&gt; [cm (&lt;span class="pl-en"&gt;conn/make-reusable-conn-manager&lt;/span&gt; {})
      hclient (&lt;span class="pl-en"&gt;core/build-http-client&lt;/span&gt; {} cm &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)]
  (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; hclient})
  (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; hclient})
  (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; hclient}))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Async http clients may also be created and re-used:&lt;/span&gt;
(&lt;span class="pl-k"&gt;let&lt;/span&gt; [acm (&lt;span class="pl-en"&gt;conn/make-reuseable-async-conn-manager&lt;/span&gt; {})
      ahclient (&lt;span class="pl-en"&gt;core/build-async-http-client&lt;/span&gt; {} acm &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)]
  (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; ahclient}
              handle-response handle-failure)
  (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; ahclient}
              handle-response handle-failure)
  (&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt; cm &lt;span class="pl-c1"&gt;:http-client&lt;/span&gt; ahclient}
              handle-response handle-failure))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-proxies" class="anchor" aria-hidden="true" href="#proxies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Proxies&lt;/h2&gt;
&lt;p&gt;A proxy can be specified by setting the Java properties: &lt;code&gt;&amp;lt;scheme&amp;gt;.proxyHost&lt;/code&gt;
  and &lt;code&gt;&amp;lt;scheme&amp;gt;.proxyPort&lt;/code&gt; where &lt;code&gt;&amp;lt;scheme&amp;gt;&lt;/code&gt; is the client scheme used (normally
  ‘http’ or ‘https’). &lt;code&gt;http.nonProxyHosts&lt;/code&gt; allows you to specify a pattern for
  hostnames which do not require proxy routing - this is shared for all schemes.
  Additionally, per-request proxies can be specified with the &lt;code&gt;proxy-host&lt;/code&gt; and
  &lt;code&gt;proxy-port&lt;/code&gt; options (this overrides &lt;code&gt;http.nonProxyHosts&lt;/code&gt; too):&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:proxy-host&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:proxy-port&lt;/span&gt; &lt;span class="pl-c1"&gt;8118&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also specify the &lt;code&gt;proxy-ignore-hosts&lt;/code&gt; parameter with a list of
  hosts where the proxy should be ignored. By default this list is
  &lt;code&gt;#{"localhost" "127.0.0.1"}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A SOCKS proxy can be used by creating a proxied connection manager with
  &lt;code&gt;clj-http.conn-mgr/make-socks-proxied-conn-manager&lt;/code&gt;. Then using that connection
  manager in the request.&lt;/p&gt;
&lt;p&gt;For example if you wanted to connect to a local socks proxy on port &lt;code&gt;8081&lt;/code&gt; you
  would:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;ns&lt;/span&gt; &lt;span class="pl-e"&gt;foo.bar&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;:require&lt;/span&gt; [clj-http.client &lt;span class="pl-c1"&gt;:as&lt;/span&gt; client]
            [clj-http.conn-mgr &lt;span class="pl-c1"&gt;:as&lt;/span&gt; conn-mgr]))

(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt;
             (&lt;span class="pl-en"&gt;conn-mgr/make-socks-proxied-conn-manager&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;8081&lt;/span&gt;)})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your SOCKS connection requires a keystore / trust-store, you can specify that too:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;ns&lt;/span&gt; &lt;span class="pl-e"&gt;foo.bar&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;:require&lt;/span&gt; [clj-http.client &lt;span class="pl-c1"&gt;:as&lt;/span&gt; client]
            [clj-http.conn-mgr &lt;span class="pl-c1"&gt;:as&lt;/span&gt; conn-mgr]))

(&lt;span class="pl-en"&gt;client/get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            {&lt;span class="pl-c1"&gt;:connection-manager&lt;/span&gt;
             (&lt;span class="pl-en"&gt;conn-mgr/make-socks-proxied-conn-manager&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;8081&lt;/span&gt;
               {&lt;span class="pl-c1"&gt;:keystore&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/keystore.ks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-c1"&gt;:keystore-type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; default: jks&lt;/span&gt;
                &lt;span class="pl-c1"&gt;:keystore-pass&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secretpass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-c1"&gt;:trust-store&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/trust-store.ks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-c1"&gt;:trust-store-type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; default jks&lt;/span&gt;
                &lt;span class="pl-c1"&gt;:trust-store-pass&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;trustpass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also store the proxied connection manager and reuse it later.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-custom-middleware" class="anchor" aria-hidden="true" href="#custom-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Middleware&lt;/h2&gt;
&lt;p&gt;Sometime it is desirable to run a request with some middleware enabled and some
  left out, the &lt;code&gt;with-middleware&lt;/code&gt; method provides this functionality:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;with-middleware&lt;/span&gt; [#'clj-http.client/wrap-method
                  #'clj-http.client/wrap-url
                  #'clj-http.client/wrap-exceptions]
  (&lt;span class="pl-en"&gt;get&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-en"&gt;post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:body&lt;/span&gt; (&lt;span class="pl-en"&gt;.getBytes&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)}))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To see available middleware, check the &lt;code&gt;clj-http.client/default-middleware&lt;/code&gt; var,
  which is a vector of the default middleware that clj-http uses.
  &lt;code&gt;clj-http.client/*current-middleware*&lt;/code&gt; is bound to the current list of
  middleware during request time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-modifying-apache-specific-features-of-the-httpclientbuilder-and-httpasyncclientbuilder" class="anchor" aria-hidden="true" href="#modifying-apache-specific-features-of-the-httpclientbuilder-and-httpasyncclientbuilder"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modifying Apache-specific features of the &lt;code&gt;HttpClientBuilder&lt;/code&gt; and &lt;code&gt;HttpAsyncClientBuilder&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;While clj-http tries to provide the features needed, there are times when it does not provide access
  to a parameter that you need. In these cases, you can use a couple of advanced parameters to provide
  arbitrary configuration functions to be run on the &lt;code&gt;HttpClientBuilder&lt;/code&gt; by specifying
  &lt;code&gt;:http-builder-fns&lt;/code&gt; and &lt;code&gt;:async-http-builder-fns&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Each of these variables is a sequence of functions of two arguments, the http builder
  (&lt;code&gt;HttpClientBuilder&lt;/code&gt; for &lt;code&gt;:http-builder-fns&lt;/code&gt; and &lt;code&gt;HttpAsyncClientBuilder&lt;/code&gt; for
  &lt;code&gt;:async-http-builder-fns&lt;/code&gt;) and the request map.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; A function that takes a builder and disables Apache's cookie management&lt;/span&gt;
(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;my-cookie-disabler&lt;/span&gt; [^HttpClientBuilder builder
                           request]
  (&lt;span class="pl-k"&gt;when&lt;/span&gt; (&lt;span class="pl-c1"&gt;:disable-cookies&lt;/span&gt; request)
    (&lt;span class="pl-en"&gt;.disableCookieManagement&lt;/span&gt; builder)))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The functions to modify the builder are passed in&lt;/span&gt;
(&lt;span class="pl-en"&gt;http/post&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.example.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:http-builder-fns&lt;/span&gt; [my-cookie-disabler]
                                     &lt;span class="pl-c1"&gt;:disable-cookies&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The functions are run in the order they are passed in (inside a &lt;code&gt;doseq&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;By specifying &lt;code&gt;:http-client-builder&lt;/code&gt;, your own instance of
  &lt;code&gt;HttpClientBuilder&lt;/code&gt; will be used. A supplied &lt;code&gt;HttpClientBuilder&lt;/code&gt; which
  sets the connection manager, redirect strategy, retry handler, route
  planner, cache, or cookie spec registry may find these overridden by
  clj-http’s &lt;code&gt;:connection-manager&lt;/code&gt;, &lt;code&gt;:redirect-strategy&lt;/code&gt;,
  &lt;code&gt;:retry-handler&lt;/code&gt;, &lt;code&gt;:cache&lt;/code&gt;, or &lt;code&gt;:cookie-policy-registry&lt;/code&gt; or
  &lt;code&gt;:cookie-spec&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h1&gt;
&lt;p&gt;Please send a pull request or open an issue if you have any problems. See &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; for more
  information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faking-responses" class="anchor" aria-hidden="true" href="#faking-responses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Faking Responses&lt;/h2&gt;
&lt;p&gt;If you need to fake clj-http responses (for things like testing and such), check
  out the &lt;a href="https://github.com/myfreeweb/clj-http-fake"&gt;clj-http-fake&lt;/a&gt; library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-optional-dependencies" class="anchor" aria-hidden="true" href="#optional-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optional Dependencies&lt;/h2&gt;
&lt;p&gt;In 2.0.0+ clj-http’s optional dependencies at excluded by default, in order to
  use the features you will need to add them to your &lt;code&gt;project.clj&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;clj-http currently has four optional dependencies, &lt;code&gt;cheshire&lt;/code&gt;, &lt;code&gt;crouton&lt;/code&gt;,
  &lt;code&gt;tools.reader&lt;/code&gt; and &lt;code&gt;ring/ring-codec&lt;/code&gt;. Any number of them may be included by
  adding them with the clj-http dependency in your project.clj:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; optional dependencies&lt;/span&gt;
[cheshire] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; for :as :json&lt;/span&gt;
[crouton] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; for :decode-body-headers&lt;/span&gt;
[org.clojure/tools.reader] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; for :as :clojure&lt;/span&gt;
[ring/ring-codec] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; for :as :x-www-form-urlencoded&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Prior to 2.0.0, you can &lt;i&gt;exclude&lt;/i&gt; the dependencies and clj-http will work
  without them.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-clj-http-lite" class="anchor" aria-hidden="true" href="#clj-http-lite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;clj-http-lite&lt;/h2&gt;
&lt;p&gt;Like clj-http but need something more lightweight without as many external
  dependencies? Check out &lt;a href="https://github.com/hiredman/clj-http-lite"&gt;clj-http-lite&lt;/a&gt; for a project that can be used as a
  drop-in replacement for clj-http.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-verifyerror-class-orgcodehausjacksonsmilesmileparser-overrides-final-method-getbinaryvalue" class="anchor" aria-hidden="true" href="#verifyerror-class-orgcodehausjacksonsmilesmileparser-overrides-final-method-getbinaryvalue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VerifyError class org.codehaus.jackson.smile.SmileParser overrides final method getBinaryValue…&lt;/h3&gt;
&lt;p&gt;This is actually caused by your project attempting to use &lt;a href="https://github.com/mmcgrana/clj-json/"&gt;clj-json&lt;/a&gt; and &lt;a href="https://github.com/dakrone/cheshire"&gt;cheshire&lt;/a&gt;
  in the same classloader. You can fix the issue by either not using clj-json (and
  thus choosing cheshire), or specifying an exclusion for clj-http in your project
  like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defproject&lt;/span&gt; &lt;span class="pl-e"&gt;foo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.1.0-SNAPSHOT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:dependencies&lt;/span&gt; [[org.clojure/clojure &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.3.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
                 [clj-http &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.3.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:exclusions&lt;/span&gt; [cheshire]]])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that if you exclude cheshire, json decoding of response bodies
  and json encoding of form-params cannot happen, you are responsible
  for your own encoding/decoding.&lt;/p&gt;
&lt;p&gt;As of clj-http 0.3.5, you should no longer see this, as Cheshire 3.1.0
  and clj-json can now live together without causing problems.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-nohttpresponseexception--due-to-stale-connections" class="anchor" aria-hidden="true" href="#nohttpresponseexception--due-to-stale-connections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NoHttpResponseException … due to stale connections**&lt;/h3&gt;
&lt;p&gt;Persistent connections kept alive by the connection manager become stale: the
  target server shuts down the connection on its end without HttpClient being able
  to react to that event, while the connection is being idle, thus rendering the
  connection half-closed or ‘stale’.&lt;/p&gt;
&lt;p&gt;This can be solved by using (with-connection-pool) as described in the
  ‘Using Persistent Connection’ section above.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-tests" class="anchor" aria-hidden="true" href="#tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tests&lt;/h1&gt;
&lt;p&gt;To run the tests:&lt;/p&gt;
&lt;pre&gt;$ lein deps
$ lein test

Run all tests (including integration):
$ lein test :all

Run tests against all clojure versions
$ lein all test
$ lein all test :all
&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-testimonials" class="anchor" aria-hidden="true" href="#testimonials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testimonials&lt;/h1&gt;
&lt;p&gt;With over &lt;a href="https://clojars.org/clj-http" rel="nofollow"&gt;three million&lt;/a&gt; downloads, clj-http is a widely used, battle-tested clojure library. It is
  also included in other libraries (like database clients) as a low-level http wrapper.&lt;/p&gt;
&lt;p&gt;Libraries using clj-http:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/mattrepl/clj-oauth"&gt;clj-oauth&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/clojurewerkz/elastisch"&gt;elasticsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/olauzon/capacitor"&gt;influxdb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Libraries inspired by clj-http:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/mpenet/jet"&gt;jet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/hiredman/clj-http-lite"&gt;clj-http-lite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-other-libraries-providing-middleware" class="anchor" aria-hidden="true" href="#other-libraries-providing-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Libraries Providing Middleware&lt;/h1&gt;
&lt;dl&gt;
  &lt;dt&gt;&lt;a href="https://github.com/sharetribe/aws-sig4"&gt;aws-sig4&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;a pure clojure implementation of AWS v4 signature request signing as middleware&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;(feel free to open a PR or issue if you’d like to add middleware here)&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Released under the MIT License:
  &lt;a href="http://www.opensource.org/licenses/mit-license.php" rel="nofollow"&gt;http://www.opensource.org/licenses/mit-license.php&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dakrone</author><guid isPermaLink="false">https://github.com/dakrone/clj-http</guid><pubDate>Wed, 22 Jan 2020 00:05:00 GMT</pubDate></item><item><title>lispyclouds/clj-docker-client #6 in Clojure, Today</title><link>https://github.com/lispyclouds/clj-docker-client</link><description>&lt;p&gt;&lt;i&gt;An idiomatic, data-driven, REPL friendly Clojure Docker client&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-clj-docker-client-" class="anchor" aria-hidden="true" href="#clj-docker-client-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;clj-docker-client &lt;a href="https://travis-ci.org/lispyclouds/clj-docker-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5855d6afba96ea4b163d44a0152e2aa3c379b071/68747470733a2f2f7472617669732d63692e6f72672f6c69737079636c6f7564732f636c6a2d646f636b65722d636c69656e742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/lispyclouds/clj-docker-client.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.gnu.org/licenses/lgpl-3.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4532a863889adf91281a5cf6a27ee70633be0bc0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4c47504c25323076332d626c75652e7376673f7374796c653d666c61742d737175617265" alt="License: LGPL v3" data-canonical-src="https://img.shields.io/badge/license-LGPL%20v3-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojars.org/lispyclouds/clj-docker-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/110d3f9ed6d054f5990bcbe3be2364753de7f2c4/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6c69737079636c6f7564732f636c6a2d646f636b65722d636c69656e742e7376673f7374796c653d666c61742d737175617265" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/lispyclouds/clj-docker-client.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cljdoc.org/d/lispyclouds/clj-docker-client/CURRENT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ddd93a75c1dcb226c51043c271fdb41e71c1d0e/68747470733a2f2f636c6a646f632e6f72672f62616467652f6c69737079636c6f7564732f636c6a2d646f636b65722d636c69656e74" alt="cljdoc badge" data-canonical-src="https://cljdoc.org/badge/lispyclouds/clj-docker-client" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://versions.deps.co/lispyclouds/clj-docker-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7181d871149f97b657231d497e74c5622463f120/68747470733a2f2f76657273696f6e732e646570732e636f2f6c69737079636c6f7564732f636c6a2d646f636b65722d636c69656e742f7374617475732e706e67" alt="Dependencies Status" data-canonical-src="https://versions.deps.co/lispyclouds/clj-docker-client/status.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://versions.deps.co/lispyclouds/clj-docker-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8bd470438f26d01b31eafd4ae03aca45fad6a6e8/68747470733a2f2f76657273696f6e732e646570732e636f2f6c69737079636c6f7564732f636c6a2d646f636b65722d636c69656e742f646f776e6c6f6164732e737667" alt="Downloads" data-canonical-src="https://versions.deps.co/lispyclouds/clj-docker-client/downloads.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An idiomatic, data-driven, REPL friendly Clojure Docker client inspired from Cognitect's AWS &lt;a href="https://github.com/cognitect-labs/aws-api"&gt;client&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://cljdoc.org/d/lispyclouds/clj-docker-client/0.3.2/doc/readme" rel="nofollow"&gt;this&lt;/a&gt; for documentation for versions before &lt;strong&gt;0.4.0&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The README here is for the current master branch and &lt;em&gt;may not reflect the released version&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please raise issues here for any new feature requests!&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;Leiningen/Boot&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;[lispyclouds/clj-docker-client &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.4.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Clojure CLI/deps.edn&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;{lispyclouds/clj-docker-client {&lt;span class="pl-c1"&gt;:mvn/version&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.4.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Gradle&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;compile &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lispyclouds:clj-docker-client:0.4.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Maven&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;lispyclouds&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;clj-docker-client&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;0.4.0&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-build-requirements" class="anchor" aria-hidden="true" href="#build-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Leiningen 2.8+&lt;/li&gt;
&lt;li&gt;JDK 1.8+&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests-locally" class="anchor" aria-hidden="true" href="#running-tests-locally"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests locally&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://leiningen.org/" rel="nofollow"&gt;leiningen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.docker.com/" rel="nofollow"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lein kaocha&lt;/code&gt; to run all tests. (needs Docker and working internet)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Auto generated code docs can be found &lt;a href="https://cljdoc.org/d/lispyclouds/clj-docker-client/CURRENT" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This uses Docker's HTTP REST API to run. See the section &lt;strong&gt;API version matrix&lt;/strong&gt; in &lt;a href="https://docs.docker.com/develop/sdk/" rel="nofollow"&gt;https://docs.docker.com/develop/sdk/&lt;/a&gt; to find the corresponding API version for the Docker daemon you're running.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://docs.docker.com/develop/sdk/" rel="nofollow"&gt;page&lt;/a&gt; about the docker REST API to learn more about the params to pass.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[clj-docker-client.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; docker])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This library aims to be a &lt;em&gt;as thin layer as possible&lt;/em&gt; between you and Docker. This consists of following public functions:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-connect" class="anchor" aria-hidden="true" href="#connect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;connect&lt;/h4&gt;
&lt;p&gt;Connect to the docker daemon's &lt;a href="https://en.wikipedia.org/wiki/Unix_domain_socket" rel="nofollow"&gt;UNIX socket&lt;/a&gt; and create a connection.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;conn&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/connect&lt;/span&gt; {&lt;span class="pl-c1"&gt;:uri&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:///var/run/docker.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-categories" class="anchor" aria-hidden="true" href="#categories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;categories&lt;/h4&gt;
&lt;p&gt;Lists the categories of operations supported. Can be bound to an API version.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;docker/categories&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Latest version&lt;/span&gt;

(&lt;span class="pl-en"&gt;docker/categories&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1.40&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Locked to v1.40&lt;/span&gt;

#_=&amp;gt; #{&lt;span class="pl-c1"&gt;:system&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:exec&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:images&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:secrets&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:events&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:_ping&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:containers&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:auth&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:tasks&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:volumes&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:networks&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:build&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:nodes&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:commit&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:plugins&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:info&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:swarm&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:distribution&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:version&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:services&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:configs&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:session&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-client" class="anchor" aria-hidden="true" href="#client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;client&lt;/h4&gt;
&lt;p&gt;Creates a client scoped to the operations of a given category. Can be bound to an API version.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;images&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/client&lt;/span&gt; {&lt;span class="pl-c1"&gt;:category&lt;/span&gt; &lt;span class="pl-c1"&gt;:images&lt;/span&gt;
                            &lt;span class="pl-c1"&gt;:conn&lt;/span&gt;     conn})) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Latest version&lt;/span&gt;

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;containers&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/client&lt;/span&gt; {&lt;span class="pl-c1"&gt;:category&lt;/span&gt;    &lt;span class="pl-c1"&gt;:containers&lt;/span&gt;
                                &lt;span class="pl-c1"&gt;:conn&lt;/span&gt;        conn
                                &lt;span class="pl-c1"&gt;:api-version&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1.40&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Container client for v1.40&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-ops" class="anchor" aria-hidden="true" href="#ops"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ops&lt;/h4&gt;
&lt;p&gt;Lists the supported ops by a client.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;docker/ops&lt;/span&gt; images)

#_=&amp;gt; (&lt;span class="pl-c1"&gt;:ImageList&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageCreate&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageInspect&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageHistory&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImagePush&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageTag&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageDelete&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageSearch&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImagePrune&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageGet&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageGetAll&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageLoad&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-doc" class="anchor" aria-hidden="true" href="#doc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;doc&lt;/h4&gt;
&lt;p&gt;Returns the doc of an operation in a client.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;docker/doc&lt;/span&gt; images &lt;span class="pl-c1"&gt;:ImageList&lt;/span&gt;)

#_=&amp;gt; {&lt;span class="pl-c1"&gt;:doc&lt;/span&gt;
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;List Images&lt;span class="pl-cce"&gt;\n&lt;/span&gt;Returns a list of images on the server. Note that it uses a different, smaller representation of an image than inspecting a single image.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;:params&lt;/span&gt;
      ({&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;all&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;boolean&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
       {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;filters&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
       {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;digests&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;boolean&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-invoke" class="anchor" aria-hidden="true" href="#invoke"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;invoke&lt;/h4&gt;
&lt;p&gt;Invokes an operation via the client and a given operation map and returns the result data.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Pulls the busybox:musl image from Docker hub&lt;/span&gt;
(&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; images {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:ImageCreate&lt;/span&gt;
                       &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:fromImage&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;busybox:musl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Creates a container named conny from it&lt;/span&gt;
(&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; containers {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:ContainerCreate&lt;/span&gt;
                           &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;conny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                    &lt;span class="pl-c1"&gt;:body&lt;/span&gt; {&lt;span class="pl-c1"&gt;:Image&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;busybox:musl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                           &lt;span class="pl-c1"&gt;:Cmd&lt;/span&gt;   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}}})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The operation map is of the following structure:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;{&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:NameOfOp&lt;/span&gt;
 &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:param-1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
          &lt;span class="pl-c1"&gt;:param-2&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Takes an optional key &lt;code&gt;as-stream?&lt;/code&gt;. Returns an InputStream if passed as true. This is useful for streaming responses like logs, events etc, which run till the container is up.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;{&lt;span class="pl-c1"&gt;:op&lt;/span&gt;         &lt;span class="pl-c1"&gt;:NameOfOp&lt;/span&gt;
 &lt;span class="pl-c1"&gt;:params&lt;/span&gt;     {&lt;span class="pl-c1"&gt;:param-1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              &lt;span class="pl-c1"&gt;:param-2&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}
 &lt;span class="pl-c1"&gt;:as-stream?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-general-guidelines" class="anchor" aria-hidden="true" href="#general-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General guidelines&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Head over to the Docker API docs to get more info on the type of parameters you should be sending. eg: this &lt;a href="https://docs.docker.com/engine/api/v1.40/" rel="nofollow"&gt;page&lt;/a&gt; for &lt;code&gt;v1.40&lt;/code&gt; API docs.&lt;/li&gt;
&lt;li&gt;The type &lt;code&gt;stream&lt;/code&gt; is mapped to &lt;code&gt;java.io.InputStream&lt;/code&gt; and when the API needs a stream as an input, send an InputStream. When it returns a stream, the call can &lt;strong&gt;possibly block&lt;/strong&gt; till the container or source is up and its recommended to pass the &lt;code&gt;as-stream?&lt;/code&gt; param as true to the invoke call and read it asynchronously. See this &lt;a href="https://github.com/lispyclouds/clj-docker-client/tree/master#streaming-logs"&gt;section&lt;/a&gt; for more info.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sample-code-for-common-scenarios" class="anchor" aria-hidden="true" href="#sample-code-for-common-scenarios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample code for common scenarios&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-pulling-an-image" class="anchor" aria-hidden="true" href="#pulling-an-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pulling an image&lt;/h4&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;conn&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/connect&lt;/span&gt; {&lt;span class="pl-c1"&gt;:uri&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:///var/run/docker.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}))

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;images&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/client&lt;/span&gt; {&lt;span class="pl-c1"&gt;:category&lt;/span&gt; &lt;span class="pl-c1"&gt;:images&lt;/span&gt;
                            &lt;span class="pl-c1"&gt;:conn&lt;/span&gt;   conn}))

(&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; images {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:ImageCreate&lt;/span&gt;
                       &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:fromImage&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;busybox:musl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-creating-a-container" class="anchor" aria-hidden="true" href="#creating-a-container"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a container&lt;/h4&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;containers&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/client&lt;/span&gt; {&lt;span class="pl-c1"&gt;:category&lt;/span&gt; &lt;span class="pl-c1"&gt;:containers&lt;/span&gt;
                                &lt;span class="pl-c1"&gt;:conn&lt;/span&gt;     conn}))

(&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; containers {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:ContainerCreate&lt;/span&gt;
                           &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;conny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                    &lt;span class="pl-c1"&gt;:body&lt;/span&gt; {&lt;span class="pl-c1"&gt;:Image&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;busybox:musl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                           &lt;span class="pl-c1"&gt;:Cmd&lt;/span&gt;   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sh -c 'i=1; while :; do echo $i; sleep 1; i=$((i+1)); done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}}})&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-starting-a-container" class="anchor" aria-hidden="true" href="#starting-a-container"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting a container&lt;/h4&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; containers {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:ContainerStart&lt;/span&gt;
                           &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:id&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;conny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-streaming-logs" class="anchor" aria-hidden="true" href="#streaming-logs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Streaming logs&lt;/h4&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; fn to react when data is available&lt;/span&gt;
(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;react-to-stream&lt;/span&gt;
  [stream reaction-fn]
  (&lt;span class="pl-en"&gt;future&lt;/span&gt;
    (&lt;span class="pl-en"&gt;with-open&lt;/span&gt; [rdr (&lt;span class="pl-en"&gt;clojure.java.io/reader&lt;/span&gt; stream)]
      (&lt;span class="pl-k"&gt;loop&lt;/span&gt; [r (&lt;span class="pl-en"&gt;java.io.BufferedReader.&lt;/span&gt; rdr)]
        (&lt;span class="pl-k"&gt;when-let&lt;/span&gt; [line (&lt;span class="pl-en"&gt;.readLine&lt;/span&gt; r)]
          (&lt;span class="pl-en"&gt;reaction-fn&lt;/span&gt; line)
          (&lt;span class="pl-k"&gt;recur&lt;/span&gt; r))))))

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;log-stream&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; containers {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;         &lt;span class="pl-c1"&gt;:ContainerLogs&lt;/span&gt;
                                           &lt;span class="pl-c1"&gt;:params&lt;/span&gt;     {&lt;span class="pl-c1"&gt;:id&lt;/span&gt;     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;conny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                                        &lt;span class="pl-c1"&gt;:follow&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
                                                        &lt;span class="pl-c1"&gt;:stdout&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}
                                           &lt;span class="pl-c1"&gt;:as-stream?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}))

(&lt;span class="pl-en"&gt;react-to-stream&lt;/span&gt; log-stream println) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; prints the logs line by line when they come.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And anything else is possible!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2020 Rahul De and &lt;a href="https://github.com/lispyclouds/clj-docker-client/graphs/contributors"&gt;contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Distributed under the LGPLv3+ License. See LICENSE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>lispyclouds</author><guid isPermaLink="false">https://github.com/lispyclouds/clj-docker-client</guid><pubDate>Wed, 22 Jan 2020 00:06:00 GMT</pubDate></item><item><title>ring-clojure/ring #7 in Clojure, Today</title><link>https://github.com/ring-clojure/ring</link><description>&lt;p&gt;&lt;i&gt;Clojure HTTP server abstraction&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ring" class="anchor" aria-hidden="true" href="#ring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ring&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ring-clojure/ring" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/12ef37185ce1650f8d2a6bf44f1f98222276683c/68747470733a2f2f7472617669732d63692e6f72672f72696e672d636c6f6a7572652f72696e672e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ring-clojure/ring.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ring is a Clojure web applications library inspired by Python's WSGI
and Ruby's Rack. By abstracting the details of HTTP into a simple,
unified API, Ring allows web applications to be constructed of modular
components that can be shared among a variety of applications, web
servers, and web frameworks.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/ring-clojure/ring/blob/master/SPEC"&gt;SPEC&lt;/a&gt; file at the root of this distribution provides a
complete description of the Ring interface.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-upgrade-notice" class="anchor" aria-hidden="true" href="#upgrade-notice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrade Notice&lt;/h2&gt;
&lt;p&gt;From version 1.2.1 onward, the ring/ring-core package no longer comes
with the &lt;code&gt;javax.servlet/servlet-api&lt;/code&gt; package as a dependency (see
issue &lt;a href="https://github.com/ring-clojure/ring/pull/89"&gt;#89&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;If you are using the &lt;code&gt;ring/ring-core&lt;/code&gt; namespace on its own, you may
run into errors when executing tests or running alternative adapters.
To resolve this, include the following dependency in your dev profile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[javax.servlet/servlet-api "2.5"]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-libraries" class="anchor" aria-hidden="true" href="#libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Libraries&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ring-core - essential functions for handling parameters, cookies and more&lt;/li&gt;
&lt;li&gt;ring-devel - functions for developing and debugging Ring applications&lt;/li&gt;
&lt;li&gt;ring-servlet - construct Java servlets from Ring handlers&lt;/li&gt;
&lt;li&gt;ring-jetty-adapter - a Ring adapter that uses the Jetty webserver&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To include one of the above libraries, for example &lt;code&gt;ring-core&lt;/code&gt;, add
the following to your &lt;code&gt;:dependencies&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[ring/ring-core "1.8.0"]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To include all of them:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[ring "1.8.0"]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ring-clojure/ring/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ring-clojure.github.com/ring"&gt;API docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://groups.google.com/group/ring-clojure" rel="nofollow"&gt;Google group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please see &lt;a href="https://github.com/ring-clojure/ring/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;p&gt;This project borrows heavily from Ruby's Rack and Python's WSGI;
thanks to those communities for their work.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2009-2019 Mark McGranaghan, James Reeves &amp;amp; contributors.&lt;/p&gt;
&lt;p&gt;Released under the MIT license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ring-clojure</author><guid isPermaLink="false">https://github.com/ring-clojure/ring</guid><pubDate>Wed, 22 Jan 2020 00:07:00 GMT</pubDate></item><item><title>uxbox/uxbox #8 in Clojure, Today</title><link>https://github.com/uxbox/uxbox</link><description>&lt;p&gt;&lt;i&gt;UXBOX - The Open-Source prototyping tool&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://www.mozilla.org/en-US/MPL/2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c9e24a95281fc2b84f9aff06b5645e1726be3997/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d504c2d322e302d626c75652e737667" alt="License: MPL-2.0" data-canonical-src="https://img.shields.io/badge/MPL-2.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/Monogramm/uxbox" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64afb6259498bb1cdea9b16b44e86b62e8719bcc/68747470733a2f2f7472617669732d63692e6f72672f4d6f6e6f6772616d6d2f7578626f782e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/Monogramm/uxbox.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-uxbox" class="anchor" aria-hidden="true" href="#uxbox"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UXBOX&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/34b3982805bb657eb1f862be7ad05160b463ae3c/68747470733a2f2f70697765656b2e636f6d2f696d616765732f70726f6a656374732f7578626f782e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/34b3982805bb657eb1f862be7ad05160b463ae3c/68747470733a2f2f70697765656b2e636f6d2f696d616765732f70726f6a656374732f7578626f782e6a7067" alt="UXBOX" data-canonical-src="https://piweek.com/images/projects/uxbox.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The open-source solution for design and prototyping. UXBOX is currently at an early development stage but we are working hard to bring you the beta version as soon as possible. Follow the project progress in Twitter or Github and stay tuned!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.w3.org/Graphics/SVG/" rel="nofollow"&gt;See SVG specification&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-svg-based" class="anchor" aria-hidden="true" href="#svg-based"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SVG based&lt;/h2&gt;
&lt;p&gt;UXBOX works with SVG, a standard format, for all your designs and prototypes . This means that all your stuff in UXBOX is portable and editable in many other vector tools and easy to use on the web.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;Most of the main operations can be done through the helper script &lt;code&gt;manage.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The development requires of UXBOX is done through a single docker container. Each main service is opened in a different &lt;a href="https://github.com/tmux/tmux"&gt;tmux&lt;/a&gt; sessions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h2&gt;
&lt;p&gt;Docker is also used to build release images for backend and frontend. Use the helper script &lt;code&gt;manage.sh&lt;/code&gt; to build the images.
You can run locally UXBOX through a docker-compose or by manually running the containers.&lt;/p&gt;
&lt;p&gt;Complementary to the docker images you can build locally from this repository, you can find additionnal flavors for backend and frontend on external repositories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Monogramm/docker-uxbox-frontend"&gt;Monogramm/docker-uxbox-frontend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Monogramm/docker-uxbox-backend"&gt;Monogramm/docker-uxbox-backend&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-persistent-data" class="anchor" aria-hidden="true" href="#persistent-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistent data&lt;/h3&gt;
&lt;p&gt;The UXBOX installation and all data are stored in the database (file uploads, etc). The docker daemon will store that data within the docker directory &lt;code&gt;/var/lib/docker/volumes/...&lt;/code&gt;. That means your data is saved even if the container crashes, is stopped or deleted.&lt;/p&gt;
&lt;p&gt;To make your data persistent to upgrading and get access for backups is using named docker volume or mount a host folder. To achieve this you need one volume for your database container.&lt;/p&gt;
&lt;p&gt;Database:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/var/lib/postgresql/data&lt;/code&gt; PostgreSQL Data&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;docker run -d \&lt;/span&gt;
&lt;span class="pl-c1"&gt;    -v db:/var/lib/postgresql/data \&lt;/span&gt;
&lt;span class="pl-c1"&gt;    postgresql&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You also need to persist the UXBOX backend public resources (media and assets) to not lose images uploaded and allow the frontend to expose assets.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/srv/uxbox/resources/public&lt;/code&gt; UXBOX backend public resources&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;docker run -d \&lt;/span&gt;
&lt;span class="pl-c1"&gt;    -v db:/srv/uxbox/resources/public \&lt;/span&gt;
&lt;span class="pl-c1"&gt;    monogramm/docker-uxbox-backend&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-auto-configuration-via-environment-variables" class="anchor" aria-hidden="true" href="#auto-configuration-via-environment-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto configuration via environment variables&lt;/h3&gt;
&lt;p&gt;The following environment variables are also honored for configuring your UXBOX instance:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-frontend" class="anchor" aria-hidden="true" href="#frontend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frontend&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Only available at build time!&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_API_URL=...&lt;/code&gt; (defaults to &lt;code&gt;/api&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_VIEW_URL=...&lt;/code&gt; (defaults to &lt;code&gt;/view/&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_DEMO=...&lt;/code&gt; (not defined, setting any value will activate demo mode)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_DEBUG=...&lt;/code&gt; (not defined, setting any value will activate debug mode)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Available at runtime:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-e LANG=...&lt;/code&gt; (defaults to &lt;code&gt;en_US.UTF-8&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e LC_ALL=...&lt;/code&gt; (defaults to &lt;code&gt;C.UTF-8&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-backend" class="anchor" aria-hidden="true" href="#backend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backend&lt;/h4&gt;
&lt;p&gt;Available at runtime:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-e LANG=...&lt;/code&gt; (defaults to &lt;code&gt;en_US.UTF-8&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e LC_ALL=...&lt;/code&gt; (defaults to &lt;code&gt;C.UTF-8&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_HTTP_SERVER_PORT=...&lt;/code&gt; (defaults to &lt;code&gt;6060&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_HTTP_SERVER_DEBUG=...&lt;/code&gt; (defaults to &lt;code&gt;true&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_DATABASE_USERNAME="..."&lt;/code&gt; (defaults to &lt;code&gt;nil&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_DATABASE_PASSWORD="..."&lt;/code&gt; (defaults to &lt;code&gt;nil&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_DATABASE_NAME="..."&lt;/code&gt; (defaults to &lt;code&gt;"uxbox"&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_DATABASE_SERVER="..."&lt;/code&gt; (defaults to &lt;code&gt;"localhost"&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_DATABASE_PORT=...&lt;/code&gt; (defaults to &lt;code&gt;5432&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_MEDIA_DIRECTORY=...&lt;/code&gt; (defaults to &lt;code&gt;resources/public/media&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_MEDIA_URI=...&lt;/code&gt; (defaults to &lt;code&gt;http://localhost:6060/media/&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_ASSETS_DIRECTORY=...&lt;/code&gt; (defaults to &lt;code&gt;resources/public/static&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_ASSETS_URI=...&lt;/code&gt; (defaults to &lt;code&gt;http://localhost:6060/static/&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_EMAIL_REPLY_TO="..."&lt;/code&gt; (defaults to &lt;code&gt;no-reply@uxbox.io&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_EMAIL_FROM="..."&lt;/code&gt; (defaults to &lt;code&gt;no-reply@uxbox.io&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_SUPPORT_EMAIL="..."&lt;/code&gt; (defaults to &lt;code&gt;support@uxbox.io&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_SMTP_HOST="..."&lt;/code&gt; (defaults to &lt;code&gt;"localhost"&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_SMTP_PORT=...&lt;/code&gt; (defaults to &lt;code&gt;25&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_SMTP_USER="..."&lt;/code&gt; (defaults to &lt;code&gt;nil&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_SMTP_PASSWORD="..."&lt;/code&gt; (defaults to &lt;code&gt;nil&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_SMTP_SSL=...&lt;/code&gt; (defaults to &lt;code&gt;false&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_SMTP_TLS=...&lt;/code&gt; (defaults to &lt;code&gt;false&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_SMTP_ENABLED=...&lt;/code&gt; (defaults to &lt;code&gt;false&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_REGISTRATION_ENABLED=...&lt;/code&gt; (defaults to &lt;code&gt;true&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e UXBOX_SECRET="..."&lt;/code&gt; (defaults to &lt;code&gt;"5qjiAndGY3"&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Important note:&lt;/strong&gt; make sure to use quotation marks for string variables or the backend might try to interpret the values as symbols and have weird issues.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Open to you!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We love the open source software community. Contributing is our passion and because of this, we'll be glad if you want to participate and improve UXBOX. All your awesome ideas and code are welcome!&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="./CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at http://mozilla.org/MPL/2.0/.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>uxbox</author><guid isPermaLink="false">https://github.com/uxbox/uxbox</guid><pubDate>Wed, 22 Jan 2020 00:08:00 GMT</pubDate></item><item><title>replikativ/datahike #9 in Clojure, Today</title><link>https://github.com/replikativ/datahike</link><description>&lt;p&gt;&lt;i&gt;A durable datalog implementation adaptable for distribution. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-datahike----" class="anchor" aria-hidden="true" href="#datahike----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;datahike &lt;a href="https://gitter.im/replikativ/replikativ?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://clojars.org/io.replikativ/datahike" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/30c9362cdd025efe2f71baea25e012f53c356562/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f696f2e7265706c696b617469762f6461746168696b652e737667" data-canonical-src="https://img.shields.io/clojars/v/io.replikativ/datahike.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/replikativ/datahike" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/84757d0417cbfe67ea4bcb489afc2e2034d4ce3d/68747470733a2f2f636972636c6563692e636f6d2f67682f7265706c696b617469762f6461746168696b652e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/replikativ/datahike.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;datahike is a durable &lt;a href="https://en.wikipedia.org/wiki/Datalog" rel="nofollow"&gt;datalog&lt;/a&gt; database
powered by an efficient datalog query engine. This project is a port of
&lt;a href="https://github.com/tonsky/datascript"&gt;datascript&lt;/a&gt; to the
&lt;a href="https://github.com/datacrypt-project/hitchhiker-tree"&gt;hitchhiker-tree&lt;/a&gt;. All
datascript tests are passing, but we are still working on the internals. Having
said this we consider datahike usable for small projects, since datascript is
very mature and deployed in many applications and the hitchhiker-tree
implementation is at least heavily tested through generative testing. We are
building on the two projects and the storage backends for the hitchhiker-tree
through &lt;a href="https://github.com/replikativ/konserve"&gt;konserve&lt;/a&gt;. We would like to
hear experience reports and are happy if you join us.&lt;/p&gt;
&lt;p&gt;Some presentations are available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Hjo4TEV81sQ" rel="nofollow"&gt;2019 scicloj online meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=A2CZwOHOb6U" rel="nofollow"&gt;2019 Vancouver Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W6Z1mkvqp3g" rel="nofollow"&gt;2018 Dutch clojure meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Add to your leiningen dependencies:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://clojars.org/io.replikativ/datahike" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24ff25b877d68175fcd3b29d1058c2771617c4d2/687474703a2f2f636c6f6a6172732e6f72672f696f2e7265706c696b617469762f6461746168696b652f6c61746573742d76657273696f6e2e737667" alt="Clojars Project" data-canonical-src="http://clojars.org/io.replikativ/datahike/latest-version.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We provide a small stable API for the JVM at the moment, but the on-disk schema
is not fixed yet. We will provide a migration guide until we have reached a
stable on-disk schema. &lt;em&gt;Take a look at the ChangeLog before upgrading&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[datahike.api &lt;span class="pl-c1"&gt;:as&lt;/span&gt; d])


&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; use the filesystem as storage medium&lt;/span&gt;
(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;uri&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;datahike:file:///tmp/example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; create a database at this place, by default configuration we have a strict&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; schema and temporal index&lt;/span&gt;
(&lt;span class="pl-en"&gt;d/create-database&lt;/span&gt; uri)

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;conn&lt;/span&gt; (&lt;span class="pl-en"&gt;d/connect&lt;/span&gt; uri))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; the first transaction will be the schema we are using&lt;/span&gt;
(&lt;span class="pl-en"&gt;d/transact&lt;/span&gt; conn [{&lt;span class="pl-c1"&gt;:db/ident&lt;/span&gt; &lt;span class="pl-c1"&gt;:name&lt;/span&gt;
                   &lt;span class="pl-c1"&gt;:db/valueType&lt;/span&gt; &lt;span class="pl-c1"&gt;:db.type/string&lt;/span&gt;
                   &lt;span class="pl-c1"&gt;:db/cardinality&lt;/span&gt; &lt;span class="pl-c1"&gt;:db.cardinality/one&lt;/span&gt; }
                  {&lt;span class="pl-c1"&gt;:db/ident&lt;/span&gt; &lt;span class="pl-c1"&gt;:age&lt;/span&gt;
                   &lt;span class="pl-c1"&gt;:db/valueType&lt;/span&gt; &lt;span class="pl-c1"&gt;:db.type/long&lt;/span&gt;
                   &lt;span class="pl-c1"&gt;:db/cardinality&lt;/span&gt; &lt;span class="pl-c1"&gt;:db.cardinality/one&lt;/span&gt; }])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; lets add some data and wait for the transaction&lt;/span&gt;
(&lt;span class="pl-en"&gt;d/transact&lt;/span&gt; conn [{&lt;span class="pl-c1"&gt;:name&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alice&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:age&lt;/span&gt;   &lt;span class="pl-c1"&gt;20&lt;/span&gt; }
                  {&lt;span class="pl-c1"&gt;:name&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bob&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:age&lt;/span&gt;   &lt;span class="pl-c1"&gt;30&lt;/span&gt; }
                  {&lt;span class="pl-c1"&gt;:name&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Charlie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:age&lt;/span&gt;   &lt;span class="pl-c1"&gt;40&lt;/span&gt; }
                  {&lt;span class="pl-c1"&gt;:age&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; }])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; search the data&lt;/span&gt;
(&lt;span class="pl-en"&gt;d/q&lt;/span&gt; '[&lt;span class="pl-c1"&gt;:find&lt;/span&gt; ?e ?n ?a
       &lt;span class="pl-c1"&gt;:where&lt;/span&gt;
       [?e &lt;span class="pl-c1"&gt;:name&lt;/span&gt; ?n]
       [?e &lt;span class="pl-c1"&gt;:age&lt;/span&gt; ?a]]
  @conn)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; #{[3 "Alice" 20] [4 "Bob" 30] [5 "Charlie" 40]}&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; add new entity data using a hash map&lt;/span&gt;
(&lt;span class="pl-en"&gt;d/transact&lt;/span&gt; conn {&lt;span class="pl-c1"&gt;:tx-data&lt;/span&gt; [{&lt;span class="pl-c1"&gt;:db/id&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c1"&gt;:age&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt;}]})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you want to work with queries like in&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://grishaev.me/en/datomic-query/,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; you may use a hashmap&lt;/span&gt;
(&lt;span class="pl-en"&gt;d/q&lt;/span&gt; {&lt;span class="pl-c1"&gt;:query&lt;/span&gt; '{&lt;span class="pl-c1"&gt;:find&lt;/span&gt; [?e ?n ?a ]
               &lt;span class="pl-c1"&gt;:where&lt;/span&gt; [[?e &lt;span class="pl-c1"&gt;:name&lt;/span&gt; ?n]
                       [?e &lt;span class="pl-c1"&gt;:age&lt;/span&gt; ?a]]}
      &lt;span class="pl-c1"&gt;:args&lt;/span&gt; [@conn]})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; #{[5 "Charlie" 40] [4 "Bob" 30] [3 "Alice" 25]}&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; query the history of the data&lt;/span&gt;
(&lt;span class="pl-en"&gt;d/q&lt;/span&gt; '[&lt;span class="pl-c1"&gt;:find&lt;/span&gt; ?a
       &lt;span class="pl-c1"&gt;:where&lt;/span&gt;
       [?e &lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alice&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
       [?e &lt;span class="pl-c1"&gt;:age&lt;/span&gt; ?a]]
  (&lt;span class="pl-en"&gt;d/history&lt;/span&gt; @conn))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; #{[20] [25]}&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; you might need to release the connection, e.g. for leveldb&lt;/span&gt;
(&lt;span class="pl-en"&gt;d/release&lt;/span&gt; conn)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; clean up the database if it is not need any more&lt;/span&gt;
(&lt;span class="pl-en"&gt;d/delete-database&lt;/span&gt; uri)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The API namespace provides compatibility to a subset of Datomic functionality
and should work as a drop-in replacement on the JVM. The rest of datahike will
be ported to core.async to coordinate IO in a platform-neutral manner.&lt;/p&gt;
&lt;p&gt;Refer to the docs for more information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/config.md"&gt;configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/schema.md"&gt;schema flexibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/time_variance.md"&gt;time variance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/datomic_differences.md"&gt;differences from Datomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/backend-developmend.md"&gt;backend development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For simple examples have a look at the projects in the &lt;code&gt;examples&lt;/code&gt; folder.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example-projects" class="anchor" aria-hidden="true" href="#example-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/replikativ/datahike-invoice" rel="nofollow"&gt;Invoice creation&lt;/a&gt;
demonstrated at the &lt;a href="https://www.meetup.com/de-DE/The-Dutch-Clojure-Meetup/events/trmqnpyxjbrb/" rel="nofollow"&gt;Dutch Clojure
Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-relationship-to-datomic-and-datascript" class="anchor" aria-hidden="true" href="#relationship-to-datomic-and-datascript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Relationship to Datomic and datascript&lt;/h2&gt;
&lt;p&gt;datahike provides similar functionality to &lt;a href="http://Datomic.com" rel="nofollow"&gt;Datomic&lt;/a&gt; and can
be used as a drop-in replacement for a subset of it. The goal of datahike is not
to provide an open-source reimplementation of Datomic, but it is part of the
&lt;a href="https://github.com/replikativ"&gt;replikativ&lt;/a&gt; toolbox aimed to build distributed
data management solutions. We have spoken to many backend engineers and Clojure
developers, who tried to stay away from Datomic just because of its proprietary
nature and we think in this regard datahike should make an approach to Datomic
easier and vice-versa people who only want to use the goodness of datalog in
small scale applications should not worry about setting up and depending on
Datomic.&lt;/p&gt;
&lt;p&gt;Some differences are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;datahike runs locally on one peer. A transactor might be provided in the
future and can also be realized through any linearizing write mechanism, e.g.
Apache Kafka. If you are interested, please contact us.&lt;/li&gt;
&lt;li&gt;datahike provides the database as a transparent value, i.e. you can directly
access the index datastructures (hitchhiker-tree) and leverage their
persistent nature for replication. These internals are not guaranteed to stay
stable, but provide useful insight into what is going on and can be optimized.&lt;/li&gt;
&lt;li&gt;Datomic has a REST interface and a Java API&lt;/li&gt;
&lt;li&gt;Datomic provides timeouts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Datomic is a full-fledged scalable database (as a service) built from the
authors of Clojure and people with a lot of experience. If you need this kind
of professional support, you should definitely stick to Datomic.&lt;/p&gt;
&lt;p&gt;datahike's query engine and most of its codebase come from
&lt;a href="https://github.com/tonsky/datascript"&gt;datascript&lt;/a&gt;. Without the work on
datascript, datahike would not have been possible. Differences to Datomic with
respect to the query engine are documented there.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-when-should-i-pick-what" class="anchor" aria-hidden="true" href="#when-should-i-pick-what"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;When should I pick what?&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-datahike" class="anchor" aria-hidden="true" href="#datahike"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;datahike&lt;/h3&gt;
&lt;p&gt;Pick datahike if your app has modest requirements towards a typical durable
database, e.g. a single machine and a few millions of entities at maximum.
Similarly if you want to have an open-source solution and be able to study and
tinker with the codebase of your database, datahike provides a comparatively
small and well composed codebase to tweak it to your needs. You should also
always be able to migrate to Datomic later easily.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-datomic" class="anchor" aria-hidden="true" href="#datomic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Datomic&lt;/h3&gt;
&lt;p&gt;Pick Datomic if you already know that you will need scalability later or if you
need a network API for your database. There is also plenty of material about
Datomic online already. Most of it applies in some form or another to datahike,
but it might be easier to use Datomic directly when you first learn Datalog.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-datascript" class="anchor" aria-hidden="true" href="#datascript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;datascript&lt;/h3&gt;
&lt;p&gt;Pick datascript if you want the fastest possible query performance and do not
have a huge amount of data. You can easily persist the write operations
separately and use the fast in-memory index datastructure of datascript then.
datahike also at the moment does not support ClojureScript anymore, although we
plan to recover this functionality.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-clojurescript-support" class="anchor" aria-hidden="true" href="#clojurescript-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ClojureScript support&lt;/h2&gt;
&lt;p&gt;In general all &lt;a href="https://github.com/tonsky/datascript/wiki/Getting-started"&gt;datascript
documentation&lt;/a&gt;
applies for namespaces beyond &lt;code&gt;datahike.api&lt;/code&gt;. We are working towards a portable
version of datahike on top of &lt;code&gt;core.async&lt;/code&gt;. Feel free to provide some help :).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-migration--backup" class="anchor" aria-hidden="true" href="#migration--backup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migration &amp;amp; Backup&lt;/h2&gt;
&lt;p&gt;The database can be exported to a flat file with:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[datahike.migrate &lt;span class="pl-c1"&gt;:refer&lt;/span&gt; [export-db import-db]])
(&lt;span class="pl-en"&gt;export-db&lt;/span&gt; @conn &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/eavt-dump&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You must do so before upgrading to a datahike version that has changed the
on-disk format. This can happen as long as we are arriving at version &lt;code&gt;1.0.0&lt;/code&gt;
and will always be communicated through the Changelog. After you have bumped the
datahike version you can use&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; ... setup new-conn (recreate with correct schema)&lt;/span&gt;

(&lt;span class="pl-en"&gt;import-db&lt;/span&gt; new-conn &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/eavt-dump&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to reimport your data into the new format.&lt;/p&gt;
&lt;p&gt;The datoms are stored as strings in a line-based format, so you can easily check
whether your dump is containing reasonable data. You can also use it to do some
string based editing of the DB. You can also use the export as a backup.&lt;/p&gt;
&lt;p&gt;If you are upgrading from pre &lt;code&gt;0.1.2&lt;/code&gt; where we have not had the migration code
yet, then just evaluate the &lt;code&gt;datahike.migrate&lt;/code&gt; namespace manually in your
project before exporting.&lt;/p&gt;
&lt;p&gt;Have a look at the &lt;a href="./CHANGELOG.md"&gt;change log&lt;/a&gt; for recent updates.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-030" class="anchor" aria-hidden="true" href="#030"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0.3.0&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;clojure.spec for api functions&lt;/li&gt;
&lt;li&gt;conceptualize schema upgrades&lt;/li&gt;
&lt;li&gt;Java API&lt;/li&gt;
&lt;li&gt;remote HTTP interface&lt;/li&gt;
&lt;li&gt;Docker image&lt;/li&gt;
&lt;li&gt;further schema types: bytes, tuples&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-040" class="anchor" aria-hidden="true" href="#040"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0.4.0&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;identity and access management&lt;/li&gt;
&lt;li&gt;CRDT type schema support&lt;/li&gt;
&lt;li&gt;fast redis backend support&lt;/li&gt;
&lt;li&gt;query planner and optimizer&lt;/li&gt;
&lt;li&gt;transaction monitoring&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-050" class="anchor" aria-hidden="true" href="#050"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0.5.0&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;optionally use core.async to handle storage IO&lt;/li&gt;
&lt;li&gt;ClojureScript support both in the browser and on node&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-060" class="anchor" aria-hidden="true" href="#060"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0.6.0&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;support GC or eager deletion of fragments&lt;/li&gt;
&lt;li&gt;use hitchhiker-tree synchronization for replication&lt;/li&gt;
&lt;li&gt;run comprehensive query suite and compare to datascript and Datomic&lt;/li&gt;
&lt;li&gt;support anomaly errors (?)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-100" class="anchor" aria-hidden="true" href="#100"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.0.0&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;support optimistic write support through attributes with conflict resolution
(CRDT-like)&lt;/li&gt;
&lt;li&gt;investigate &lt;a href="https://github.com/usethesource/capsule"&gt;https://github.com/usethesource/capsule&lt;/a&gt; for faster hh-tree durability&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-commercial-support" class="anchor" aria-hidden="true" href="#commercial-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commercial support&lt;/h2&gt;
&lt;p&gt;We are happy to provide commercial support with
&lt;a href="https://lambdaforge.io" rel="nofollow"&gt;lambdaforge&lt;/a&gt;. If you are interested in a particular
feature, please let us know.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2014–2019 Konrad Kühne, Christian Weilbach, Nikita Prokopov&lt;/p&gt;
&lt;p&gt;Licensed under Eclipse Public License (see &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt;).&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>replikativ</author><guid isPermaLink="false">https://github.com/replikativ/datahike</guid><pubDate>Wed, 22 Jan 2020 00:09:00 GMT</pubDate></item></channel></rss>