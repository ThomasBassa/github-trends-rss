<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Clojure, Today</title><link>https://github.com/trending/clojure?since=daily</link><description>The top repositories on GitHub for clojure, measured daily</description><pubDate>Tue, 21 Jan 2020 01:04:20 GMT</pubDate><lastBuildDate>Tue, 21 Jan 2020 01:04:20 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>lispyclouds/clj-docker-client #1 in Clojure, Today</title><link>https://github.com/lispyclouds/clj-docker-client</link><description>&lt;p&gt;&lt;i&gt;An idiomatic, data-driven, REPL friendly Clojure Docker client&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-clj-docker-client-" class="anchor" aria-hidden="true" href="#clj-docker-client-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;clj-docker-client &lt;a href="https://travis-ci.org/lispyclouds/clj-docker-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5855d6afba96ea4b163d44a0152e2aa3c379b071/68747470733a2f2f7472617669732d63692e6f72672f6c69737079636c6f7564732f636c6a2d646f636b65722d636c69656e742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/lispyclouds/clj-docker-client.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.gnu.org/licenses/lgpl-3.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4532a863889adf91281a5cf6a27ee70633be0bc0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4c47504c25323076332d626c75652e7376673f7374796c653d666c61742d737175617265" alt="License: LGPL v3" data-canonical-src="https://img.shields.io/badge/license-LGPL%20v3-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojars.org/lispyclouds/clj-docker-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/110d3f9ed6d054f5990bcbe3be2364753de7f2c4/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6c69737079636c6f7564732f636c6a2d646f636b65722d636c69656e742e7376673f7374796c653d666c61742d737175617265" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/lispyclouds/clj-docker-client.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cljdoc.org/d/lispyclouds/clj-docker-client/CURRENT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ddd93a75c1dcb226c51043c271fdb41e71c1d0e/68747470733a2f2f636c6a646f632e6f72672f62616467652f6c69737079636c6f7564732f636c6a2d646f636b65722d636c69656e74" alt="cljdoc badge" data-canonical-src="https://cljdoc.org/badge/lispyclouds/clj-docker-client" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://versions.deps.co/lispyclouds/clj-docker-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7181d871149f97b657231d497e74c5622463f120/68747470733a2f2f76657273696f6e732e646570732e636f2f6c69737079636c6f7564732f636c6a2d646f636b65722d636c69656e742f7374617475732e706e67" alt="Dependencies Status" data-canonical-src="https://versions.deps.co/lispyclouds/clj-docker-client/status.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://versions.deps.co/lispyclouds/clj-docker-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8bd470438f26d01b31eafd4ae03aca45fad6a6e8/68747470733a2f2f76657273696f6e732e646570732e636f2f6c69737079636c6f7564732f636c6a2d646f636b65722d636c69656e742f646f776e6c6f6164732e737667" alt="Downloads" data-canonical-src="https://versions.deps.co/lispyclouds/clj-docker-client/downloads.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An idiomatic, data-driven, REPL friendly Clojure Docker client inspired from Cognitect's AWS &lt;a href="https://github.com/cognitect-labs/aws-api"&gt;client&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://cljdoc.org/d/lispyclouds/clj-docker-client/0.3.2/doc/readme" rel="nofollow"&gt;this&lt;/a&gt; for documentation for versions before &lt;strong&gt;0.4.0&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The README here is for the current master branch and &lt;em&gt;may not reflect the released version&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please raise issues here for any new feature requests!&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;Leiningen/Boot&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;[lispyclouds/clj-docker-client &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.4.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Clojure CLI/deps.edn&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;{lispyclouds/clj-docker-client {&lt;span class="pl-c1"&gt;:mvn/version&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.4.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Gradle&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;compile &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lispyclouds:clj-docker-client:0.4.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Maven&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;lispyclouds&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;clj-docker-client&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;0.4.0&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-build-requirements" class="anchor" aria-hidden="true" href="#build-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Leiningen 2.8+&lt;/li&gt;
&lt;li&gt;JDK 1.8+&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests-locally" class="anchor" aria-hidden="true" href="#running-tests-locally"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests locally&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://leiningen.org/" rel="nofollow"&gt;leiningen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.docker.com/" rel="nofollow"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lein kaocha&lt;/code&gt; to run all tests. (needs Docker and working internet)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Auto generated code docs can be found &lt;a href="https://cljdoc.org/d/lispyclouds/clj-docker-client/CURRENT" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This uses Docker's HTTP REST API to run. See the section &lt;strong&gt;API version matrix&lt;/strong&gt; in &lt;a href="https://docs.docker.com/develop/sdk/" rel="nofollow"&gt;https://docs.docker.com/develop/sdk/&lt;/a&gt; to find the corresponding API version for the Docker daemon you're running.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://docs.docker.com/develop/sdk/" rel="nofollow"&gt;page&lt;/a&gt; about the docker REST API to learn more about the params to pass.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[clj-docker-client.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; docker])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This library aims to be a &lt;em&gt;as thin layer as possible&lt;/em&gt; between you and Docker. This consists of following public functions:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-connect" class="anchor" aria-hidden="true" href="#connect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;connect&lt;/h4&gt;
&lt;p&gt;Connect to the docker daemon's &lt;a href="https://en.wikipedia.org/wiki/Unix_domain_socket" rel="nofollow"&gt;UNIX socket&lt;/a&gt; and create a connection.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;conn&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/connect&lt;/span&gt; {&lt;span class="pl-c1"&gt;:uri&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:///var/run/docker.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-categories" class="anchor" aria-hidden="true" href="#categories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;categories&lt;/h4&gt;
&lt;p&gt;Lists the categories of operations supported. Can be bound to an API version.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;docker/categories&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Latest version&lt;/span&gt;

(&lt;span class="pl-en"&gt;docker/categories&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1.40&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Locked to v1.40&lt;/span&gt;

#_=&amp;gt; #{&lt;span class="pl-c1"&gt;:system&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:exec&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:images&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:secrets&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:events&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:_ping&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:containers&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:auth&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:tasks&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:volumes&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:networks&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:build&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:nodes&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:commit&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:plugins&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:info&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:swarm&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:distribution&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:version&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:services&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:configs&lt;/span&gt;
       &lt;span class="pl-c1"&gt;:session&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-client" class="anchor" aria-hidden="true" href="#client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;client&lt;/h4&gt;
&lt;p&gt;Creates a client scoped to the operations of a given category. Can be bound to an API version.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;images&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/client&lt;/span&gt; {&lt;span class="pl-c1"&gt;:category&lt;/span&gt; &lt;span class="pl-c1"&gt;:images&lt;/span&gt;
                            &lt;span class="pl-c1"&gt;:conn&lt;/span&gt;     conn})) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Latest version&lt;/span&gt;

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;containers&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/client&lt;/span&gt; {&lt;span class="pl-c1"&gt;:category&lt;/span&gt;    &lt;span class="pl-c1"&gt;:containers&lt;/span&gt;
                                &lt;span class="pl-c1"&gt;:conn&lt;/span&gt;        conn
                                &lt;span class="pl-c1"&gt;:api-version&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1.40&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Container client for v1.40&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-ops" class="anchor" aria-hidden="true" href="#ops"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ops&lt;/h4&gt;
&lt;p&gt;Lists the supported ops by a client.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;docker/ops&lt;/span&gt; images)

#_=&amp;gt; (&lt;span class="pl-c1"&gt;:ImageList&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageCreate&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageInspect&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageHistory&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImagePush&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageTag&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageDelete&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageSearch&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImagePrune&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageGet&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageGetAll&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:ImageLoad&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-doc" class="anchor" aria-hidden="true" href="#doc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;doc&lt;/h4&gt;
&lt;p&gt;Returns the doc of an operation in a client.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;docker/doc&lt;/span&gt; images &lt;span class="pl-c1"&gt;:ImageList&lt;/span&gt;)

#_=&amp;gt; {&lt;span class="pl-c1"&gt;:doc&lt;/span&gt;
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;List Images&lt;span class="pl-cce"&gt;\n&lt;/span&gt;Returns a list of images on the server. Note that it uses a different, smaller representation of an image than inspecting a single image.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;:params&lt;/span&gt;
      ({&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;all&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;boolean&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
       {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;filters&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
       {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;digests&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;boolean&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-invoke" class="anchor" aria-hidden="true" href="#invoke"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;invoke&lt;/h4&gt;
&lt;p&gt;Invokes an operation via the client and a given operation map and returns the result data.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Pulls the busybox:musl image from Docker hub&lt;/span&gt;
(&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; images {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:ImageCreate&lt;/span&gt;
                       &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:fromImage&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;busybox:musl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Creates a container named conny from it&lt;/span&gt;
(&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; containers {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:ContainerCreate&lt;/span&gt;
                           &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;conny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                    &lt;span class="pl-c1"&gt;:body&lt;/span&gt; {&lt;span class="pl-c1"&gt;:Image&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;busybox:musl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                           &lt;span class="pl-c1"&gt;:Cmd&lt;/span&gt;   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}}})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The operation map is of the following structure:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;{&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:NameOfOp&lt;/span&gt;
 &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:param-1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
          &lt;span class="pl-c1"&gt;:param-2&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Takes an optional key &lt;code&gt;as-stream?&lt;/code&gt;. Returns an InputStream if passed as true. This is useful for streaming responses like logs, events etc, which run till the container is up.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;{&lt;span class="pl-c1"&gt;:op&lt;/span&gt;         &lt;span class="pl-c1"&gt;:NameOfOp&lt;/span&gt;
 &lt;span class="pl-c1"&gt;:params&lt;/span&gt;     {&lt;span class="pl-c1"&gt;:param-1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              &lt;span class="pl-c1"&gt;:param-2&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}
 &lt;span class="pl-c1"&gt;:as-stream?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-general-guidelines" class="anchor" aria-hidden="true" href="#general-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General guidelines&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Head over to the Docker API docs to get more info on the type of parameters you should be sending. eg: this &lt;a href="https://docs.docker.com/engine/api/v1.40/" rel="nofollow"&gt;page&lt;/a&gt; for &lt;code&gt;v1.40&lt;/code&gt; API docs.&lt;/li&gt;
&lt;li&gt;The type &lt;code&gt;stream&lt;/code&gt; is mapped to &lt;code&gt;java.io.InputStream&lt;/code&gt; and when the API needs a stream as an input, send an InputStream. When it returns a stream, the call can &lt;strong&gt;possibly block&lt;/strong&gt; till the container or source is up and its recommended to pass the &lt;code&gt;as-stream?&lt;/code&gt; param as true to the invoke call and read it asynchronously. See this &lt;a href="https://github.com/lispyclouds/clj-docker-client/tree/master#streaming-logs"&gt;section&lt;/a&gt; for more info.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sample-code-for-common-scenarios" class="anchor" aria-hidden="true" href="#sample-code-for-common-scenarios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample code for common scenarios&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-pulling-an-image" class="anchor" aria-hidden="true" href="#pulling-an-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pulling an image&lt;/h4&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;conn&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/connect&lt;/span&gt; {&lt;span class="pl-c1"&gt;:uri&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:///var/run/docker.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}))

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;images&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/client&lt;/span&gt; {&lt;span class="pl-c1"&gt;:category&lt;/span&gt; &lt;span class="pl-c1"&gt;:images&lt;/span&gt;
                            &lt;span class="pl-c1"&gt;:conn&lt;/span&gt;   conn}))

(&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; images {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:ImageCreate&lt;/span&gt;
                       &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:fromImage&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;busybox:musl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-creating-a-container" class="anchor" aria-hidden="true" href="#creating-a-container"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a container&lt;/h4&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;containers&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/client&lt;/span&gt; {&lt;span class="pl-c1"&gt;:category&lt;/span&gt; &lt;span class="pl-c1"&gt;:containers&lt;/span&gt;
                                &lt;span class="pl-c1"&gt;:conn&lt;/span&gt;     conn}))

(&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; containers {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:ContainerCreate&lt;/span&gt;
                           &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;conny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                    &lt;span class="pl-c1"&gt;:body&lt;/span&gt; {&lt;span class="pl-c1"&gt;:Image&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;busybox:musl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                           &lt;span class="pl-c1"&gt;:Cmd&lt;/span&gt;   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sh -c 'i=1; while :; do echo $i; sleep 1; i=$((i+1)); done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}}})&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-starting-a-container" class="anchor" aria-hidden="true" href="#starting-a-container"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting a container&lt;/h4&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; containers {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;     &lt;span class="pl-c1"&gt;:ContainerStart&lt;/span&gt;
                           &lt;span class="pl-c1"&gt;:params&lt;/span&gt; {&lt;span class="pl-c1"&gt;:id&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;conny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-streaming-logs" class="anchor" aria-hidden="true" href="#streaming-logs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Streaming logs&lt;/h4&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; fn to react when data is available&lt;/span&gt;
(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;react-to-stream&lt;/span&gt;
  [stream reaction-fn]
  (&lt;span class="pl-en"&gt;future&lt;/span&gt;
    (&lt;span class="pl-en"&gt;with-open&lt;/span&gt; [rdr (&lt;span class="pl-en"&gt;clojure.java.io/reader&lt;/span&gt; stream)]
      (&lt;span class="pl-k"&gt;loop&lt;/span&gt; [r (&lt;span class="pl-en"&gt;java.io.BufferedReader.&lt;/span&gt; rdr)]
        (&lt;span class="pl-k"&gt;when-let&lt;/span&gt; [line (&lt;span class="pl-en"&gt;.readLine&lt;/span&gt; r)]
          (&lt;span class="pl-en"&gt;reaction-fn&lt;/span&gt; line)
          (&lt;span class="pl-k"&gt;recur&lt;/span&gt; r))))))

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;log-stream&lt;/span&gt; (&lt;span class="pl-en"&gt;docker/invoke&lt;/span&gt; containers {&lt;span class="pl-c1"&gt;:op&lt;/span&gt;         &lt;span class="pl-c1"&gt;:ContainerLogs&lt;/span&gt;
                                           &lt;span class="pl-c1"&gt;:params&lt;/span&gt;     {&lt;span class="pl-c1"&gt;:id&lt;/span&gt;     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;conny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                                        &lt;span class="pl-c1"&gt;:follow&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
                                                        &lt;span class="pl-c1"&gt;:stdout&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}
                                           &lt;span class="pl-c1"&gt;:as-stream?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}))

(&lt;span class="pl-en"&gt;react-to-stream&lt;/span&gt; log-stream println) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; prints the logs line by line when they come.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And anything else is possible!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2020 Rahul De and &lt;a href="https://github.com/lispyclouds/clj-docker-client/graphs/contributors"&gt;contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Distributed under the LGPLv3+ License. See LICENSE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>lispyclouds</author><guid isPermaLink="false">https://github.com/lispyclouds/clj-docker-client</guid><pubDate>Tue, 21 Jan 2020 00:01:00 GMT</pubDate></item><item><title>cnuernber/libpython-clj #2 in Clojure, Today</title><link>https://github.com/cnuernber/libpython-clj</link><description>&lt;p&gt;&lt;i&gt;libpython bindings into the techascent ecosystem&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-libpython-clj" class="anchor" aria-hidden="true" href="#libpython-clj"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libpython-clj&lt;/h1&gt;
&lt;p&gt;JNA libpython bindings to the tech ecosystem.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://clojars.org/cnuernber/libpython-clj" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc615c431473595e1521852726a47adf955025eb/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f636e7565726e6265722f6c6962707974686f6e2d636c6a2e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/cnuernber/libpython-clj.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.com/cnuernber/libpython-clj" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a87e6df5edf37e5adad47087b317c07877fbff8/68747470733a2f2f7472617669732d63692e636f6d2f636e7565726e6265722f6c6962707974686f6e2d636c6a2e7376673f6272616e63683d6d6173746572" alt="travis integration" data-canonical-src="https://travis-ci.com/cnuernber/libpython-clj.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bridge between JVM objects and Python objects easily; use Python in your Java and
use some Java in your Python.&lt;/li&gt;
&lt;li&gt;Python objects are linked to the JVM GC such that when they are no longer reachable
from the JVM their references are released.  Scope based resource contexts are
&lt;a href="https://github.com/cnuernber/libpython-clj/blob/master/docs/scopes-and-gc.md"&gt;also available&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Finding the python libraries is done dynamically allowing one system to run on multiple versions
of python.&lt;/li&gt;
&lt;li&gt;REPL oriented design means fast, smooth, iterative development.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-vision" class="anchor" aria-hidden="true" href="#vision"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vision&lt;/h2&gt;
&lt;p&gt;We aim to integrate Python into Clojure at a deep level.  This means that we want to
be able to load/use python modules almost as if they were Clojure namespaces.  We
also want to be able to use Clojure to extend Python objects.  I gave a
&lt;a href="https://www.youtube.com/watch?v=vQPW16_jixs" rel="nofollow"&gt;talk at Clojure Conj 2019&lt;/a&gt; that
outlines more of what is going on.&lt;/p&gt;
&lt;p&gt;This code is a concrete example that generates an
&lt;a href="https://github.com/cnuernber/facial-rec"&gt;embedding for faces&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;ns&lt;/span&gt; &lt;span class="pl-e"&gt;facial-rec.face-feature&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;:require&lt;/span&gt; [libpython-clj.require &lt;span class="pl-c1"&gt;:refer&lt;/span&gt; [require-python]]
            [libpython-clj.python &lt;span class="pl-c1"&gt;:as&lt;/span&gt; py]
            [tech.v2.datatype &lt;span class="pl-c1"&gt;:as&lt;/span&gt; dtype]))


(&lt;span class="pl-en"&gt;require-python&lt;/span&gt; '(mxnet mxnet.ndarray mxnet.module mxnet.io mxnet.model))
(&lt;span class="pl-en"&gt;require-python&lt;/span&gt; 'cv2)
(&lt;span class="pl-en"&gt;require-python&lt;/span&gt; '[numpy &lt;span class="pl-c1"&gt;:as&lt;/span&gt; np])

(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;load-model&lt;/span&gt;
  [&amp;amp; {&lt;span class="pl-c1"&gt;:keys&lt;/span&gt; [model-path checkpoint]
      &lt;span class="pl-c1"&gt;:or&lt;/span&gt; {model-path &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;models/recognition/model&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
           checkpoint &lt;span class="pl-c1"&gt;0&lt;/span&gt;}}]
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; [[sym arg-params aux-params] (&lt;span class="pl-en"&gt;mxnet.model/load_checkpoint&lt;/span&gt; model-path checkpoint)
        all-layers (&lt;span class="pl-en"&gt;py/$a&lt;/span&gt; sym get_internals)
        target-layer (&lt;span class="pl-en"&gt;py/get-item&lt;/span&gt; all-layers &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fc1_output&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;TODO - We haven't overloaded enough of the IFn invoke methods for&lt;/span&gt;
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;this to work without using call-kw&lt;/span&gt;
        model (&lt;span class="pl-en"&gt;py/call-kw&lt;/span&gt; mxnet.module/Module [] {&lt;span class="pl-c1"&gt;:symbol&lt;/span&gt; target-layer &lt;span class="pl-c1"&gt;:context&lt;/span&gt; (&lt;span class="pl-en"&gt;mxnet/cpu&lt;/span&gt;) &lt;span class="pl-c1"&gt;:label_names&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;})]
    (&lt;span class="pl-en"&gt;py/$a&lt;/span&gt; model bind &lt;span class="pl-c1"&gt;:data_shapes&lt;/span&gt; [[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c1"&gt;112&lt;/span&gt; &lt;span class="pl-c1"&gt;112&lt;/span&gt;]]])
    (&lt;span class="pl-en"&gt;py/$a&lt;/span&gt; model set_params arg-params aux-params)
    model))

(&lt;span class="pl-k"&gt;defonce&lt;/span&gt; &lt;span class="pl-e"&gt;model&lt;/span&gt; (&lt;span class="pl-en"&gt;load-model&lt;/span&gt;))

(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;face-&amp;gt;feature&lt;/span&gt;
  [img-path]
  (&lt;span class="pl-en"&gt;py/with-gil-stack-rc-context&lt;/span&gt;
    (&lt;span class="pl-k"&gt;if-let&lt;/span&gt; [new-img (&lt;span class="pl-en"&gt;cv2/imread&lt;/span&gt; img-path)]
      (&lt;span class="pl-k"&gt;let&lt;/span&gt; [new-img (&lt;span class="pl-en"&gt;cv2/cvtColor&lt;/span&gt; new-img cv2/COLOR_BGR2RGB)
            new-img (&lt;span class="pl-en"&gt;np/transpose&lt;/span&gt; new-img [&lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;])
            input-blob (&lt;span class="pl-en"&gt;np/expand_dims&lt;/span&gt; new-img &lt;span class="pl-c1"&gt;:axis&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
            data (&lt;span class="pl-en"&gt;mxnet.ndarray/array&lt;/span&gt; input-blob)
            batch (&lt;span class="pl-en"&gt;mxnet.io/DataBatch&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt; [data])]
        (&lt;span class="pl-en"&gt;py/$a&lt;/span&gt; model forward batch &lt;span class="pl-c1"&gt;:is_train&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
        (&lt;span class="pl-en"&gt;-&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;py/$a&lt;/span&gt; model get_outputs)
            first
            (&lt;span class="pl-en"&gt;py/$a&lt;/span&gt; asnumpy)
            (&lt;span class="pl-en"&gt;#(dtype/make-container&lt;/span&gt; &lt;span class="pl-c1"&gt;:java-array&lt;/span&gt; &lt;span class="pl-c1"&gt;:float32&lt;/span&gt; %))))
      (&lt;span class="pl-k"&gt;throw&lt;/span&gt; (&lt;span class="pl-en"&gt;Exception.&lt;/span&gt; (&lt;span class="pl-en"&gt;format&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed to load img: %s&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; img-path))))))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user&amp;gt; (&lt;span class="pl-k"&gt;require&lt;/span&gt; '[libpython-clj.require &lt;span class="pl-c1"&gt;:refer&lt;/span&gt; [require-python]])
...logging info....
&lt;span class="pl-c1"&gt;nil&lt;/span&gt;
user&amp;gt; (&lt;span class="pl-en"&gt;require-python&lt;/span&gt; '[numpy &lt;span class="pl-c1"&gt;:as&lt;/span&gt; np])
&lt;span class="pl-c1"&gt;nil&lt;/span&gt;
user&amp;gt; (&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;test-ary&lt;/span&gt; (&lt;span class="pl-en"&gt;np/array&lt;/span&gt; [[&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;][&lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;]]))
#'user/test-ary
user&amp;gt; test-ary
[[&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;]
 [&lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;]]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have a &lt;a href="docs/Usage.md"&gt;document&lt;/a&gt; on all the features but beginning usage is
pretty simple.  Import your modules, use the things from Clojure.  We have put
effort into making sure things like sequences and ranges transfer between the two
languages.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-environments" class="anchor" aria-hidden="true" href="#environments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Environments&lt;/h4&gt;
&lt;p&gt;One very complimentary aspect of Python with respect to Clojure is it's integration
with cutting edge native libraries.  Our support isn't perfect so some understanding
of the mechanism is important to diagnose errors and issues.&lt;/p&gt;
&lt;p&gt;Current, we launch the python3 executable and print out various different bits of
configuration as json.  We parse the json and use the output to attempt to find
the &lt;code&gt;libpython3.Xm.so&lt;/code&gt; shared library so for example if we are loading python
3.6 we look for &lt;code&gt;libpython3.6m.so&lt;/code&gt; on Linux or &lt;code&gt;libpython3.6m.dylib&lt;/code&gt; on the Mac.&lt;/p&gt;
&lt;p&gt;This pathway has allowed us support Conda albeit with some work.  For examples
using Conda, check out the facial rec repository above or look into how we
&lt;a href="scripts/build-conda-docker"&gt;build&lt;/a&gt;
our test &lt;a href="dockerfiles/CondaDockerfile"&gt;docker containers&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-further-information" class="anchor" aria-hidden="true" href="#further-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Further Information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Clojure Conj 2019 &lt;a href="https://www.youtube.com/watch?v=vQPW16_jixs" rel="nofollow"&gt;video&lt;/a&gt; and
&lt;a href="https://docs.google.com/presentation/d/1uegYhpS6P2AtEfhpg6PlgBmTSIPqCXvFTWcGYG_Qk2o/edit?usp=sharing" rel="nofollow"&gt;slides&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clojurians.zulipchat.com/#narrow/stream/215609-libpython-clj-dev" rel="nofollow"&gt;development discussion forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/design.md"&gt;design documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cnuernber/libpython-clj/blob/master/docs/scopes-and-gc.md"&gt;scope and garbage collection docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="example/README.md"&gt;examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scicloj/docker-hub"&gt;docker setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alanmarazzi/panthera"&gt;pandas bindings (!!)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjournal.com/chrisn/fun-with-matplotlib" rel="nofollow"&gt;nextjournal notebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ajDiGS73i2o" rel="nofollow"&gt;scicloj video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="www.techascent.com/blogs/functions-across-languages.html"&gt;Clojure/Python interop technical blog post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tobgu/pyrsistent"&gt;persistent datastructures in python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-new-to-clojure" class="anchor" aria-hidden="true" href="#new-to-clojure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New To Clojure&lt;/h2&gt;
&lt;p&gt;New to Clojure or the JVM?  Try remixing the nextjournal entry and playing around
there.  For more resources on learning and getting more comfortable with Clojure,
we have an &lt;a href="docs/new-to-clojure.md"&gt;introductory document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3.7/c-api/index.html#c-api-index" rel="nofollow"&gt;libpython C api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/23930671/how-to-create-n-dim-numpy-array-from-a-pointer" rel="nofollow"&gt;create numpy from C ptr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.ctypes.html" rel="nofollow"&gt;create C ptr from numpy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019 Chris Nuernberger&lt;/p&gt;
&lt;p&gt;This program and the accompanying materials are made available under the
terms of the Eclipse Public License 2.0 which is available at
&lt;a href="http://www.eclipse.org/legal/epl-2.0" rel="nofollow"&gt;http://www.eclipse.org/legal/epl-2.0&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cnuernber</author><guid isPermaLink="false">https://github.com/cnuernber/libpython-clj</guid><pubDate>Tue, 21 Jan 2020 00:02:00 GMT</pubDate></item><item><title>arcadia-unity/Arcadia #3 in Clojure, Today</title><link>https://github.com/arcadia-unity/Arcadia</link><description>&lt;p&gt;&lt;i&gt;Clojure in Unity&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-arcadia" class="anchor" aria-hidden="true" href="#arcadia"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arcadia&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/arcadia-unity/Arcadia?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The integration of the Clojure Programming Language with the Unity 3D game engine.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;Arcadia is beta quality software, and we encourage you to follow our &lt;a href="https://github.com/arcadia-unity/Arcadia/wiki/Getting-Started"&gt;Getting Started instructions&lt;/a&gt; to try it out!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arcadia-unity.github.io/" rel="nofollow"&gt;Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitter.im/arcadia-unity/Arcadia" rel="nofollow"&gt;Gittr/IRC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/arcadiaunity" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Arcadia is documented in our &lt;a href="https://github.com/arcadia-unity/Arcadia/wiki"&gt;GitHub wiki&lt;/a&gt;. The community on the &lt;a href="https://gitter.im/arcadia-unity/Arcadia" rel="nofollow"&gt;Gitter&lt;/a&gt; is also very helpful and a great place to ask questions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you're thinking of submitting code to Arcadia – thanks! We're excited to have your help. First, all contributors must read and agree to our &lt;a href="./CONTRIBUTOR-LICENSE-AGREEMENT.md"&gt;contributor license agreement&lt;/a&gt;. It is based on &lt;a href="https://cla.github.com/"&gt;GitHub's CLA&lt;/a&gt; and ensures that the code you submit remains useable by Arcadia and its community without issue. It confirms that&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Anyone can use your contributions anywhere, for free, forever.&lt;/li&gt;
&lt;li&gt;Your contributions do not infringe on anyone else's rights.&lt;/li&gt;
&lt;li&gt;You retain ownership of your contribution.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once you have read and agree to it, submit a &lt;a href="https://github.com/arcadia-unity/Arcadia/pull/new"&gt;Pull Request&lt;/a&gt; adding your name and GitHub id to &lt;a href="./CONTRIBUTORS.md"&gt;CONTRIBUTORS.md&lt;/a&gt; with the following commit message:&lt;/p&gt;
&lt;p&gt;I have read and agree to the terms of the Arcadia Contributor License Agreement.&lt;/p&gt;
&lt;p&gt;You only need to do this once. After that, we can review and merge any contributions you send us!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-name" class="anchor" aria-hidden="true" href="#name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Name&lt;/h2&gt;
&lt;p&gt;This project was &lt;a href="https://www.youtube.com/watch?v=tJr_TD1BtF0" rel="nofollow"&gt;introduced&lt;/a&gt; at Strange Loop 2014 as "clojure-unity". The name "Arcadia" was suggested to us soon after by &lt;a href="https://github.com/ztellman"&gt;@ztellman&lt;/a&gt;, and we are eternally grateful.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-legal" class="anchor" aria-hidden="true" href="#legal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Legal&lt;/h2&gt;
&lt;p&gt;Copyright © 2014-2019 Tims Gardner, Ramsey Nasser, and &lt;a href="./CONTRIBUTORS.md"&gt;contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License"); you may not use this project except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>arcadia-unity</author><guid isPermaLink="false">https://github.com/arcadia-unity/Arcadia</guid><pubDate>Tue, 21 Jan 2020 00:03:00 GMT</pubDate></item><item><title>darkleaf/effect #4 in Clojure, Today</title><link>https://github.com/darkleaf/effect</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="Readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://clojars.org/darkleaf/effect" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3fb46951c5bbb0a93537682a378f56831abee289/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6461726b6c6561662f6566666563742e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/darkleaf/effect.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/darkleaf/effect" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/09cae783ce0c7712d7a08b36b68245c39fb10709/68747470733a2f2f636972636c6563692e636f6d2f67682f6461726b6c6561662f6566666563742e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/darkleaf/effect.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-effect" class="anchor" aria-hidden="true" href="#effect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Effect&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;lein test
lein doo node node-none once
lein doo node node-advanced once
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>darkleaf</author><guid isPermaLink="false">https://github.com/darkleaf/effect</guid><pubDate>Tue, 21 Jan 2020 00:04:00 GMT</pubDate></item><item><title>borkdude/clj-kondo #5 in Clojure, Today</title><link>https://github.com/borkdude/clj-kondo</link><description>&lt;p&gt;&lt;i&gt;A linter for Clojure code that sparks joy.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="logo/logo-300dpi.png"&gt;&lt;img src="logo/logo-300dpi.png" width="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/borkdude/clj-kondo/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e478e0d6d427b6bbd08b50acfbf3314aaef80ab5/68747470733a2f2f636972636c6563692e636f6d2f67682f626f726b647564652f636c6a2d6b6f6e646f2f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/borkdude/clj-kondo/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/borkdude/clj-kondo/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c5ad219023a16716381f6cee47529e7c85765c2/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f336a64726f376d7531376e76337262332f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/3jdro7mu17nv3rb3/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojars.org/clj-kondo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c17f11be4a26b1d39054e8817d2a70f3f111d08c/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f636c6a2d6b6f6e646f2e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/clj-kondo.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cljdoc.org/d/clj-kondo/clj-kondo/CURRENT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5b39521007a6599d4a294c424c2a6a2c1016e73/68747470733a2f2f636c6a646f632e6f72672f62616467652f636c6a2d6b6f6e646f2f636c6a2d6b6f6e646f" alt="cljdoc badge" data-canonical-src="https://cljdoc.org/badge/clj-kondo/clj-kondo" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojurians.slack.com/messages/CHY97NXE2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d32eacbaaf4d06e17885b5da976a2d0cb18238e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6a6f696e5f636861742d627269676874677265656e2e737667" alt="project chat" data-canonical-src="https://img.shields.io/badge/slack-join_chat-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A linter for Clojure code that sparks joy.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/demo.png"&gt;&lt;img src="screenshots/demo.png" width="50%" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p lang="en" dir="ltr"&gt;Thanks a lot for clj-kondo. It is like a companion for me. It has made clojure fun again.&lt;/p&gt;
    —
    &lt;a href="https://github.com/geraldodev"&gt;@geraldodev&lt;/a&gt; on Clojurians Slack
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale&lt;/h2&gt;
&lt;p&gt;Clj-kondo performs static analysis on Clojure, ClojureScript and EDN, without the need of a running REPL. It informs you about potential errors while you are typing.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Clj-kondo detects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inline &lt;code&gt;def&lt;/code&gt; expressions&lt;/li&gt;
&lt;li&gt;redundant &lt;code&gt;do&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; wrappings&lt;/li&gt;
&lt;li&gt;arity errors:
&lt;ul&gt;
&lt;li&gt;within the same namespace and across namespaces&lt;/li&gt;
&lt;li&gt;of static Java method calls&lt;/li&gt;
&lt;li&gt;of local &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;letfn&lt;/code&gt; binding calls&lt;/li&gt;
&lt;li&gt;of recursive calls (including &lt;code&gt;recur&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;unused private vars&lt;/li&gt;
&lt;li&gt;private and deprecated var usage&lt;/li&gt;
&lt;li&gt;required but unused namespaces&lt;/li&gt;
&lt;li&gt;referred but unused vars&lt;/li&gt;
&lt;li&gt;duplicate requires&lt;/li&gt;
&lt;li&gt;unused function arguments and let bindings&lt;/li&gt;
&lt;li&gt;unused imports&lt;/li&gt;
&lt;li&gt;redefined vars&lt;/li&gt;
&lt;li&gt;unresolved symbols and namespaces&lt;/li&gt;
&lt;li&gt;misplaced docstrings&lt;/li&gt;
&lt;li&gt;duplicate map keys and set elements&lt;/li&gt;
&lt;li&gt;missing map keys&lt;/li&gt;
&lt;li&gt;invalid number of forms in binding vectors&lt;/li&gt;
&lt;li&gt;missing assertions in &lt;code&gt;clojure.test/deftest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;alias consistency&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/types.md"&gt;type checking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Datalog syntax checking&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;before your REPL knows it.&lt;/p&gt;
&lt;p&gt;It suggests several style guide recommendations, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rules from Stuart Sierra's &lt;a href="https://stuartsierra.com/2016/clojure-how-to-ns.html" rel="nofollow"&gt;how to ns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;:else&lt;/code&gt; as the catch-all test expression in &lt;code&gt;cond&lt;/code&gt; (see &lt;a href="https://github.com/bbatsov/clojure-style-guide#else-keyword-in-cond"&gt;Clojure style guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;seq&lt;/code&gt; instead of &lt;code&gt;(not (empty? ,,,))&lt;/code&gt; (see &lt;a href="https://github.com/bbatsov/clojure-style-guide#nil-punning"&gt;Clojure style guide&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/wrong-arity.png"&gt;&lt;img src="screenshots/wrong-arity.png" width="50%" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It has support for syntax of commonly used macros like
&lt;code&gt;clojure.core.async/alt!!&lt;/code&gt;, &lt;code&gt;schema.core/defn&lt;/code&gt; and &lt;code&gt;potemkin/import-vars&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It provides &lt;a href="analysis"&gt;analysis data&lt;/a&gt; so you build your own custom linters.&lt;/p&gt;
&lt;p&gt;This linter is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;compatible with &lt;code&gt;.clj&lt;/code&gt;, &lt;code&gt;.cljs&lt;/code&gt;, &lt;code&gt;.cljc&lt;/code&gt; and &lt;code&gt;.edn&lt;/code&gt; files&lt;/li&gt;
&lt;li&gt;build tool and editor agnostic&lt;/li&gt;
&lt;li&gt;a static code analyzer&lt;/li&gt;
&lt;li&gt;compiled to native code using GraalVM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Try clj-kondo at the &lt;a href="https://clj-kondo.michielborkent.nl" rel="nofollow"&gt;interactive playground&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/install.md"&gt;Installation&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-running-on-the-jvm" class="anchor" aria-hidden="true" href="#running-on-the-jvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/jvm.md"&gt;Running on the JVM&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-running-with-docker" class="anchor" aria-hidden="true" href="#running-with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/docker.md"&gt;Running with Docker&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line&lt;/h3&gt;
&lt;p&gt;Lint from stdin:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(def x (def x 1))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; clj-kondo --lint -&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;stdin&amp;gt;:1:8: warning: inline def&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lint a file:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(def x (def x 1))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; /tmp/foo.clj&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;clj-kondo --lint /tmp/foo.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;/tmp/foo.clj:1:8: warning: inline def&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lint a directory:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;clj-kondo --lint src&lt;/span&gt;
&lt;span class="pl-c1"&gt;src/clj_kondo/test.cljs:7:1: warning: redundant do&lt;/span&gt;
&lt;span class="pl-c1"&gt;src/clj_kondo/calls.clj:291:3: error: Wrong number of args (1) passed to clj-kondo.calls/analyze-calls&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lint a project classpath:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;clj-kondo --lint &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;lein classpath&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-project-setup" class="anchor" aria-hidden="true" href="#project-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project setup&lt;/h2&gt;
&lt;p&gt;To detect lint errors across namespaces in your project, a cache is needed. To
let clj-kondo know where to create one, make a &lt;code&gt;.clj-kondo&lt;/code&gt; directory in the
root of your project, meaning on the same level as your &lt;code&gt;project.clj&lt;/code&gt;,
&lt;code&gt;deps.edn&lt;/code&gt; or &lt;code&gt;build.boot&lt;/code&gt;. A cache will be created inside of it when you run
&lt;code&gt;clj-kondo&lt;/code&gt;.  Before linting inside your editor, it is recommended to lint the
entire classpath to teach &lt;code&gt;clj-kondo&lt;/code&gt; about all the libraries you are using,
including Clojure and/or ClojureScript itself:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;clj-kondo --lint &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;classpath&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build tool specific ways to get a classpath:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lein classpath&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boot with-cp -w -f -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure -Spath&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So for &lt;code&gt;lein&lt;/code&gt; the entire command would be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ clj-kondo --lint "$(lein classpath)"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you are ready to lint single files using &lt;a href="doc/editor-integration.md"&gt;editor
integration&lt;/a&gt;. A simulation of what happens when you
edit a file in your editor:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(select-keys)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; clj-kondo --lang cljs --lint -&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;stdin&amp;gt;:1:1: error: Wrong number of args (0) passed to cljs.core/select-keys&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since clj-kondo now knows about your version of ClojureScript via the cache,
it detects that the number of arguments you passed to &lt;code&gt;select-keys&lt;/code&gt; is
invalid. Each time you edit a file, the cache is incrementally updated, so
clj-kondo is informed about new functions you just wrote.&lt;/p&gt;
&lt;p&gt;If you want to use a different directory to read and write the cache, use the
&lt;code&gt;--cache-dir&lt;/code&gt; option. To disable the cache even if you have a &lt;code&gt;.clj-kondo&lt;/code&gt;
directory, use &lt;code&gt;--cache false&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/config.md"&gt;Configuration&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-editor-integration" class="anchor" aria-hidden="true" href="#editor-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/editor-integration.md"&gt;Editor integration&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-exit-codes" class="anchor" aria-hidden="true" href="#exit-codes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exit codes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;: no errors or warnings were found&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2&lt;/code&gt;: more than one warning was found&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3&lt;/code&gt;: more than one error was found&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All other error codes indicate an unexpected error.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ci-integration" class="anchor" aria-hidden="true" href="#ci-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/ci-integration.md"&gt;CI Integration&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-analysis-data" class="anchor" aria-hidden="true" href="#analysis-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="analysis"&gt;Analysis data&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-developer-documentation" class="anchor" aria-hidden="true" href="#developer-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/dev.md"&gt;Developer documentation&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-thanks-to" class="anchor" aria-hidden="true" href="#thanks-to"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks to:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/candid82/joker"&gt;joker&lt;/a&gt; for inspiration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xsc/rewrite-clj"&gt;rewrite-clj&lt;/a&gt; for the Clojure parser code&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonase/eastwood"&gt;eastwood&lt;/a&gt; for &lt;code&gt;var-info.edn&lt;/code&gt; and inspiration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/borkdude/clj-kondo/graphs/contributors"&gt;contributors&lt;/a&gt; and
other users posting issues with bug reports and ideas&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonsky"&gt;Nikita Prokopov&lt;/a&gt; for the logo&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-support-this-project" class="anchor" aria-hidden="true" href="#support-this-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support this project&lt;/h2&gt;
&lt;p&gt;Do you enjoy this project? Consider buying me a &lt;a href="https://ko-fi.com/borkdude" rel="nofollow"&gt;hot
beverage&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019 Michiel Borkent&lt;/p&gt;
&lt;p&gt;Distributed under the EPL License, same as Clojure. See LICENSE.&lt;/p&gt;
&lt;p&gt;The directory &lt;code&gt;inlined&lt;/code&gt; contains source from &lt;a href="https://github.com/clojure/tools.reader"&gt;&lt;code&gt;tools.reader&lt;/code&gt;&lt;/a&gt; which is licensed under the EPL license.&lt;/p&gt;
&lt;p&gt;The directory &lt;code&gt;parser&lt;/code&gt; contains modified source from &lt;a href="https://github.com/xsc/rewrite-clj"&gt;&lt;code&gt;rewrite-clj&lt;/code&gt;&lt;/a&gt; which is licensed under the MIT license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>borkdude</author><guid isPermaLink="false">https://github.com/borkdude/clj-kondo</guid><pubDate>Tue, 21 Jan 2020 00:05:00 GMT</pubDate></item><item><title>LightTable/LightTable #6 in Clojure, Today</title><link>https://github.com/LightTable/LightTable</link><description>&lt;p&gt;&lt;i&gt;The Light Table IDE ⛺&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-light-table" class="anchor" aria-hidden="true" href="#light-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Light Table&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/LightTable/LightTable" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/220e02276217af792fcbfdce4f254ad316feba8b/68747470733a2f2f7472617669732d63692e6f72672f4c696768745461626c652f4c696768745461626c652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/LightTable/LightTable.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://semaphoreci.com/lighttable/lighttable" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3474d590a1f48ce933106905746492f25f5445c3/68747470733a2f2f73656d6170686f726563692e636f6d2f6170692f76312f6c696768747461626c652f6c696768747461626c652f6272616e636865732f6d61737465722f62616467652e737667" alt="Build Status" data-canonical-src="https://semaphoreci.com/api/v1/lighttable/lighttable/branches/master/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/prertik/lighttable-1rj5p" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/229996b08be64777c0abfab840d19ba44ad2f340/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6b776e6265673934376c75656732646c3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/kwnbeg947lueg2dl?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/LightTable/LightTable" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/75b5e361722ca8f65797ca190f548582ddc2cf5b/68747470733a2f2f636972636c6563692e636f6d2f67682f4c696768745461626c652f4c696768745461626c652e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/LightTable/LightTable.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/LightTable/LightTable" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/223e518687e09cbf0b215b93e4ea5ded3124e568/68747470733a2f2f636f6465636f762e696f2f67682f4c696768745461626c652f4c696768745461626c652f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/LightTable/LightTable/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b537d15b45e72de24fa88cfc3d5b2609f17d491e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f4c696768745461626c652f4c696768745461626c652f6c61746573742f746f74616c2e7376673f7374796c653d666f722d7468652d6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/b537d15b45e72de24fa88cfc3d5b2609f17d491e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f4c696768745461626c652f4c696768745461626c652f6c61746573742f746f74616c2e7376673f7374796c653d666f722d7468652d6261646765" alt="" data-canonical-src="https://img.shields.io/github/downloads/LightTable/LightTable/latest/total.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://repology.org/metapackage/lighttable/versions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6dedfeead057cbe6edd89fcaf3ee4b2b01329c28/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f74696e792d7265706f732f6c696768747461626c652e737667" alt="Packaging status" data-canonical-src="https://repology.org/badge/tiny-repos/lighttable.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/LightTable/LightTable?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/LightTable/LightTable" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codeshelter.co/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ba4ca04397b0e8d4c04806b12d31c710635baa5/68747470733a2f2f7777772e636f64657368656c7465722e636f2f7374617469632f6261646765732f62616467652d666c61742e737667" alt="Code Shelter" data-canonical-src="https://www.codeshelter.co/static/badges/badge-flat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Light Table is a next generation code editor that connects you to your creation with instant feedback. Light Table is very customizable and can display anything a &lt;a href="http://www.chromium.org/" rel="nofollow"&gt;Chromium browser&lt;/a&gt; can.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-this-is-a-development-branch-and-is-not-clean-like-master-and-can-have-many-breakages" class="anchor" aria-hidden="true" href="#this-is-a-development-branch-and-is-not-clean-like-master-and-can-have-many-breakages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;This is a development branch and is not clean like &lt;code&gt;master&lt;/code&gt; and can have many breakages.&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-downloads" class="anchor" aria-hidden="true" href="#downloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloads&lt;/h2&gt;
&lt;p&gt;Prebuilt binaries are available through &lt;a href="http://lighttable.com" rel="nofollow"&gt;lighttable.com&lt;/a&gt;. To build and use a developer version of Light Table &lt;a href="doc/developer-install.md"&gt;see these instructions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For OSX users, the install process involves the following steps until we officially sign our OSX App:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In Finder, Ctrl-click on LightTable.app/ and select Open.&lt;/li&gt;
&lt;li&gt;When you see &lt;a href="https://cloud.githubusercontent.com/assets/11994/11731454/85181e90-9f69-11e5-9c65-f6aa4228005c.png" rel="nofollow"&gt;this prompt&lt;/a&gt; about LightTable being unidentified, click Open.&lt;/li&gt;
&lt;li&gt;If Ctrl-click doesn't work for you, open System Preferences &amp;gt; Security &amp;amp; Privacy &amp;gt; General, temporarily change "Allow apps downloaded from:" to Anywhere and double click on LightTable.app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;See &lt;a href="http://docs.lighttable.com/" rel="nofollow"&gt;docs.lighttable.com&lt;/a&gt; for official user documentation and tutorials.&lt;/li&gt;
&lt;li&gt;See the &lt;a href="https://github.com/LightTable/LightTable/wiki"&gt;community wiki&lt;/a&gt; which includes a &lt;a href="https://github.com/LightTable/LightTable/wiki/FAQ"&gt;User FAQ&lt;/a&gt; and a &lt;a href="https://github.com/LightTable/LightTable/wiki/For-Users"&gt;For Users page&lt;/a&gt; for additional links.&lt;/li&gt;
&lt;li&gt;For a typical Light Table workflow, &lt;a href="doc/workflow.md"&gt;read this&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To understand how Light Table works, read about its &lt;a href="doc/BOT.md"&gt;BOT architecture&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;See &lt;a href="http://lighttable.github.io/LightTable/api/index.html" rel="nofollow"&gt;Light Table's API docs&lt;/a&gt; to see what
plugin authors have access to.&lt;/li&gt;
&lt;li&gt;If you're a user coming from vim or emacs see the &lt;a href="https://github.com/LightTable/LightTable/wiki/For-Vim-Users"&gt;For Vim Users&lt;/a&gt; and &lt;a href="https://github.com/LightTable/LightTable/wiki/For-Emacs-Users"&gt;For Emacs Users&lt;/a&gt; guides.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Light Table has a powerful plugin system that allows almost any aspect of the editor to be extended and customized. With over &lt;a href="https://github.com/LightTable/plugin-metadata"&gt;100+ plugins&lt;/a&gt;, the community is able to offer eval support for new languages, create domain-specific IDEs and much more. If you're interested in writing your own plugin, see the &lt;a href="http://docs.lighttable.com/#write-a-plugin" rel="nofollow"&gt;Write a Plugin&lt;/a&gt; and &lt;a href="http://docs.lighttable.com/#submit-a-plugin" rel="nofollow"&gt;Submit a Plugin&lt;/a&gt; docs. For an example ClojureScript plugin, see &lt;a href="https://github.com/LightTable/LightTable-Declassifier"&gt;LightTable-Declassifier&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;Want to ask a question or just say hi? Please do :). Our mailing list is the &lt;a href="https://groups.google.com/forum/#!forum/light-table-discussion" rel="nofollow"&gt;Light Table Google group&lt;/a&gt;. We also hang out in &lt;code&gt;#lighttable&lt;/code&gt; on Freenode IRC.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-for-developers" class="anchor" aria-hidden="true" href="#for-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For Developers&lt;/h2&gt;
&lt;p&gt;LightTable is primarily written in &lt;a href="http://clojure.org/clojurescript" rel="nofollow"&gt;ClojureScript&lt;/a&gt;. If you aren't familiar with it, check out &lt;a href="https://github.com/swannodette/lt-cljs-tutorial"&gt;David Nolen's tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In order to develop for Light Table, you will need to &lt;a href="doc/developer-install.md"&gt;install a developer version of Light Table&lt;/a&gt;. For more information, read &lt;a href="https://github.com/LightTable/LightTable/blob/master/CONTRIBUTING.md#code-contributions"&gt;CONTRIBUTING.md&lt;/a&gt; and &lt;a href="https://github.com/LightTable/LightTable/wiki/For-Developers"&gt;For Developers&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;All files in this project are under the &lt;a href="LICENSE.md"&gt;LICENSE.md&lt;/a&gt; license unless otherwise stated in the file or by a dependency's license file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Big thanks to all our &lt;a href="https://github.com/LightTable/LightTable/graphs/contributors"&gt;contributors&lt;/a&gt;!
Thanks of course to Kodowa for all they have done for Light Table and also to Cognitect for providing friday contributions for one of the core team members.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>LightTable</author><guid isPermaLink="false">https://github.com/LightTable/LightTable</guid><pubDate>Tue, 21 Jan 2020 00:06:00 GMT</pubDate></item><item><title>borkdude/babashka #7 in Clojure, Today</title><link>https://github.com/borkdude/babashka</link><description>&lt;p&gt;&lt;i&gt;A Clojure babushka for the grey areas of Bash.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="logo/babashka.svg"&gt;&lt;img src="logo/babashka.svg" width="425px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/borkdude/babashka/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6ae553a0a341f297fa2497b3eae63884170a458a/68747470733a2f2f636972636c6563692e636f6d2f67682f626f726b647564652f6261626173686b612f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/borkdude/babashka/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojars.org/borkdude/babashka" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/795d46ffab533f2952e22b78313a7c0ccae928e3/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f626f726b647564652f6261626173686b612e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/borkdude/babashka.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.slack.com/client/T03RZGPFR/CLX41ASCS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d32eacbaaf4d06e17885b5da976a2d0cb18238e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6a6f696e5f636861742d627269676874677265656e2e737667" alt="project chat" data-canonical-src="https://img.shields.io/badge/slack-join_chat-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A Clojure &lt;a href="https://en.wikipedia.org/wiki/Headscarf" rel="nofollow"&gt;babushka&lt;/a&gt; for the grey areas of Bash.&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p lang="en" dir="ltr"&gt;Life's too short to remember how to write Bash code. I feel liberated.&lt;/p&gt;
    —
    &lt;a href="https://github.com/laheadle"&gt;@laheadle&lt;/a&gt; on Clojurians Slack
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bash &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;ls &lt;span class="pl-k"&gt;|&lt;/span&gt; bb --time -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(filter #(-&amp;gt; % io/file .isDirectory) *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;("doc" "resources" "sci" "script" "src" "target" "test")&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb took 4ms.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale&lt;/h2&gt;
&lt;p&gt;The sweet spot for babashka is executing Clojure snippets or scripts in the same
space where you would use Bash.&lt;/p&gt;
&lt;p&gt;As one user described it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’m quite at home in Bash most of the time, but there’s a substantial grey area of things that are too complicated to be simple in bash, but too simple to be worth writing a clj/s script for. Babashka really seems to hit the sweet spot for those cases.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fast startup / low latency. This is achieved by compiling to native using &lt;a href="https://github.com/oracle/graal"&gt;GraalVM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Familiarity and portability. Keep migration barriers between bash and Clojure as low as possible by:
&lt;ul&gt;
&lt;li&gt;Gradually introducing Clojure expressions to existing bash scripts&lt;/li&gt;
&lt;li&gt;Scripts written in babashka should also be able to run on the JVM without major changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Multi-threading support similar to Clojure on the JVM&lt;/li&gt;
&lt;li&gt;Batteries included (clojure.tools.cli, core.async, ...)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Non-goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;li&gt;Provide a mixed Clojure/bash DSL (see portability).&lt;/li&gt;
&lt;li&gt;Replace existing shells. Babashka is a tool you can use inside existing shells like bash and it is designed to play well with them. It does not aim to replace them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Babashka uses &lt;a href="https://github.com/borkdude/sci"&gt;sci&lt;/a&gt; for interpreting Clojure. Sci
implements a subset of Clojure and is not as performant as compiled code. If your script is taking more than a few seconds,  Clojure on the JVM may be a better fit.&lt;/p&gt;
&lt;p&gt;Read more about the differences with Clojure &lt;a href="#differences-with-clojure"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;Experimental. Breaking changes are expected to happen at this phase. Keep an eye
on &lt;a href="CHANGES.md"&gt;CHANGES.md&lt;/a&gt; for a list of breaking changes.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;ls &lt;span class="pl-k"&gt;|&lt;/span&gt; bb -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*input*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;["LICENSE" "README.md" "bb" "doc" "pom.xml" "project.clj" "resources" "script" "src" "target" "test"]&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;ls &lt;span class="pl-k"&gt;|&lt;/span&gt; bb -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(count *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;12&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(vec (dedupe *input*))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[1 1 1 1 2]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;[1 2]&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(filterv :foo *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[{:foo 1} {:bar 2}]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;[{:foo 1}]&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(#(+ %1 %2 %3) 1 2 *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;ls &lt;span class="pl-k"&gt;|&lt;/span&gt; bb -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(filterv #(re-find #"README" %) *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;["README.md"]&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(run! #(shell/sh "touch" (str "/tmp/test/" %)) (range 100))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;ls /tmp/test &lt;span class="pl-k"&gt;|&lt;/span&gt; bb -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*input*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" ...]&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb -O &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(repeat "dude")&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; bb --stream &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(str *input* "rino")&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; bb -I &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(take 3 *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;("duderino" "duderino" "duderino")&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More examples can be found in the &lt;a href="#gallery"&gt;gallery&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-brew" class="anchor" aria-hidden="true" href="#brew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Brew&lt;/h3&gt;
&lt;p&gt;Linux and macOS binaries are provided via brew.&lt;/p&gt;
&lt;p&gt;Install:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install borkdude/brew/babashka
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Upgrade:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew upgrade babashka
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-arch-linux" class="anchor" aria-hidden="true" href="#arch-linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arch (Linux)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;babashka&lt;/code&gt; is &lt;a href="https://aur.archlinux.org/packages/babashka-bin/" rel="nofollow"&gt;available&lt;/a&gt; in the &lt;a href="https://aur.archlinux.org" rel="nofollow"&gt;Arch User Repository&lt;/a&gt;. It can be installed using your favorite &lt;a href="https://aur.archlinux.org" rel="nofollow"&gt;AUR&lt;/a&gt; helper such as
&lt;a href="https://github.com/Jguer/yay"&gt;yay&lt;/a&gt;, &lt;a href="https://github.com/archlinuxfr/yaourt"&gt;yaourt&lt;/a&gt;, &lt;a href="https://github.com/oshazard/apacman"&gt;apacman&lt;/a&gt; and &lt;a href="https://github.com/rmarquis/pacaur"&gt;pacaur&lt;/a&gt;. Here is an example using &lt;code&gt;yay&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yay -S babashka-bin
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-installer-script" class="anchor" aria-hidden="true" href="#installer-script"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installer script&lt;/h3&gt;
&lt;p&gt;Install via the installer script:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bash &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default this will install into &lt;code&gt;/usr/local/bin&lt;/code&gt;. To change this, provide the directory name:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bash &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; /tmp&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h3&gt;
&lt;p&gt;You may also download a binary from &lt;a href="https://github.com/borkdude/babashka/releases"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Usage: bb [ -i | -I ] [ -o | -O ] [ --stream ] [--verbose]&lt;/span&gt;
&lt;span class="pl-c1"&gt;          [ ( --classpath | -cp ) &amp;lt;cp&amp;gt; ] [ --uberscript &amp;lt;file&amp;gt; ]&lt;/span&gt;
&lt;span class="pl-c1"&gt;          [ ( --main | -m ) &amp;lt;main-namespace&amp;gt; | -e &amp;lt;expression&amp;gt; | -f &amp;lt;file&amp;gt; |&lt;/span&gt;
&lt;span class="pl-c1"&gt;            --repl | --socket-repl [&amp;lt;host&amp;gt;:]&amp;lt;port&amp;gt; ]&lt;/span&gt;
&lt;span class="pl-c1"&gt;          [ arg* ]&lt;/span&gt;

&lt;span class="pl-c1"&gt;Options:&lt;/span&gt;

&lt;span class="pl-c1"&gt;  --help, -h or -?    Print this help text.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --version           Print the current version of babashka.&lt;/span&gt;

&lt;span class="pl-c1"&gt;  -i                  Bind *input* to a lazy seq of lines from stdin.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -I                  Bind *input* to a lazy seq of EDN values from stdin.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -o                  Write lines to stdout.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -O                  Write EDN values to stdout.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --verbose           Print entire stacktrace in case of exception.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --stream            Stream over lines or EDN values from stdin. Combined with -i or -I *input* becomes a single value per iteration.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --uberscript &amp;lt;file&amp;gt; Collect preloads, -e, -f and -m and all required namespaces from the classpath into a single executable file.&lt;/span&gt;

&lt;span class="pl-c1"&gt;  -e, --eval &amp;lt;expr&amp;gt;   Evaluate an expression.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -f, --file &amp;lt;path&amp;gt;   Evaluate a file.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -cp, --classpath    Classpath to use.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -m, --main &amp;lt;ns&amp;gt;     Call the -main function from namespace with args.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --repl              Start REPL&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --socket-repl       Start socket REPL. Specify port (e.g. 1666) or host and port separated by colon (e.g. 127.0.0.1:1666).&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --time              Print execution time before exiting.&lt;/span&gt;

&lt;span class="pl-c1"&gt;If neither -e, -f, or --socket-repl are specified, then the first argument that is not parsed as a option is treated as a file if it exists, or as an expression otherwise.&lt;/span&gt;
&lt;span class="pl-c1"&gt;Everything after that is bound to *command-line-args*.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;clojure.core&lt;/code&gt; functions are accessible without a namespace alias.&lt;/p&gt;
&lt;p&gt;The following namespaces are required by default and available through the
pre-defined aliases in the &lt;code&gt;user&lt;/code&gt; namespace. You may use &lt;code&gt;require&lt;/code&gt; + &lt;code&gt;:as&lt;/code&gt;
and/or &lt;code&gt;:refer&lt;/code&gt; on these namespaces. If not all vars are available, they are
enumerated explicitly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clojure.string&lt;/code&gt; aliased as &lt;code&gt;str&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure.set&lt;/code&gt; aliased as &lt;code&gt;set&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure.edn&lt;/code&gt; aliased as &lt;code&gt;edn&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;read-string&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure.java.shell&lt;/code&gt; aliases as &lt;code&gt;shell&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure.java.io&lt;/code&gt; aliased as &lt;code&gt;io&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;as-relative-path&lt;/code&gt;, &lt;code&gt;as-url&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;, &lt;code&gt;delete-file&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;input-stream&lt;/code&gt;,
&lt;code&gt;make-parents&lt;/code&gt;, &lt;code&gt;output-stream&lt;/code&gt;, &lt;code&gt;reader&lt;/code&gt;, &lt;code&gt;resource&lt;/code&gt;, &lt;code&gt;writer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure.main&lt;/code&gt;: &lt;code&gt;repl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clojure.github.io/core.async/" rel="nofollow"&gt;&lt;code&gt;clojure.core.async&lt;/code&gt;&lt;/a&gt; aliased as
&lt;code&gt;async&lt;/code&gt;. The &lt;code&gt;alt&lt;/code&gt; and &lt;code&gt;go&lt;/code&gt; macros are not available but &lt;code&gt;alts!!&lt;/code&gt; does work as
it is a function.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure.stacktrace&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/clojure/tools.cli"&gt;&lt;code&gt;clojure.tools.cli&lt;/code&gt;&lt;/a&gt; aliased as &lt;code&gt;tools.cli&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/clojure/data.csv"&gt;&lt;code&gt;clojure.data.csv&lt;/code&gt;&lt;/a&gt; aliased as &lt;code&gt;csv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dakrone/cheshire"&gt;&lt;code&gt;cheshire.core&lt;/code&gt;&lt;/a&gt; aliased as &lt;code&gt;json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A selection of java classes are available, see &lt;code&gt;babashka/impl/classes.clj&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Babashka supports &lt;code&gt;import&lt;/code&gt;: &lt;code&gt;(import clojure.lang.ExceptionInfo)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Babashka supports a subset of the &lt;code&gt;ns&lt;/code&gt; form where you may use &lt;code&gt;:require&lt;/code&gt; and &lt;code&gt;:import&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;(ns foo&lt;/span&gt;
&lt;span class="pl-c1"&gt;  (:require [clojure.string :as str])&lt;/span&gt;
&lt;span class="pl-c1"&gt;  (:import clojure.lang.ExceptionInfo))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For the unsupported parts of the ns form, you may use &lt;a href="#reader-conditionals"&gt;reader
conditionals&lt;/a&gt; to maintain compatibility with JVM Clojure.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-input-and-output-flags" class="anchor" aria-hidden="true" href="#input-and-output-flags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Input and output flags&lt;/h3&gt;
&lt;p&gt;In one-liners the &lt;code&gt;*input*&lt;/code&gt; value may come in handy. It contains the input read from stdin as EDN by default. If you want to read in text, use the &lt;code&gt;-i&lt;/code&gt; flag, which binds &lt;code&gt;*input*&lt;/code&gt; to a lazy seq of lines of text. If you want to read multiple EDN values, use the &lt;code&gt;-I&lt;/code&gt; flag. The &lt;code&gt;-o&lt;/code&gt; option prints the result as lines of text. The &lt;code&gt;-O&lt;/code&gt; option prints the result as lines of EDN values.&lt;/p&gt;
&lt;p&gt;The following table illustrates the combination of options for commands of the form&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo "{{Input}}" | bb {{Input flags}} {{Output flags}} "*input*"
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Input&lt;/th&gt;
&lt;th&gt;Input flags&lt;/th&gt;
&lt;th&gt;Output flag&lt;/th&gt;
&lt;th&gt;&lt;code&gt;*input*&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;Output&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt; &lt;br&gt; &lt;code&gt;{:a 2}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hello &lt;br&gt; bye&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;("hello" "bye")&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;("hello" "bye")&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hello &lt;br&gt; bye&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;("hello" "bye")&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;hello &lt;br&gt; bye&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt; &lt;br&gt; &lt;code&gt;{:a 2}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-I&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;({:a 1} {:a 2})&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;({:a 1} {:a 2})&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt; &lt;br&gt; &lt;code&gt;{:a 2}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-I&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;({:a 1} {:a 2})&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt; &lt;br&gt; &lt;code&gt;{:a 2}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;When combined with the &lt;code&gt;--stream&lt;/code&gt; option, the expression is executed for each value in the input:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ echo '{&lt;span class="pl-c1"&gt;:a&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;} {&lt;span class="pl-c1"&gt;:a&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}' | bb --stream '*input*'
{&lt;span class="pl-c1"&gt;:a&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}
{&lt;span class="pl-c1"&gt;:a&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-current-file-path" class="anchor" aria-hidden="true" href="#current-file-path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current file path&lt;/h3&gt;
&lt;p&gt;The var &lt;code&gt;*file*&lt;/code&gt; contains the full path of the file that is currently being
executed:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat example.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;(prn *file*)&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb example.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;"/Users/borkdude/example.clj"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-command-line-arguments" class="anchor" aria-hidden="true" href="#command-line-arguments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command-line arguments&lt;/h3&gt;
&lt;p&gt;Command-line arguments can be retrieved using &lt;code&gt;*command-line-args*&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-additional-namespaces" class="anchor" aria-hidden="true" href="#additional-namespaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional namespaces&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-babashkaclasspath" class="anchor" aria-hidden="true" href="#babashkaclasspath"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;babashka.classpath&lt;/h4&gt;
&lt;p&gt;Contains the function &lt;code&gt;add-classpath&lt;/code&gt; which can be used to add to the classpath
dynamically:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[babashka.classpath &lt;span class="pl-c1"&gt;:refer&lt;/span&gt; [add-classpath]]
         '[clojure.java.shell &lt;span class="pl-c1"&gt;:refer&lt;/span&gt; [sh]])
(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;medley-dep&lt;/span&gt; '{&lt;span class="pl-c1"&gt;:deps&lt;/span&gt; {medley {&lt;span class="pl-c1"&gt;:git/url&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/borkdude/medley&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                 &lt;span class="pl-c1"&gt;:sha&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;91adfb5da33f8d23f75f0894da1defe567a625c0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}}})
(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;cp&lt;/span&gt; (&lt;span class="pl-c1"&gt;:out&lt;/span&gt; (&lt;span class="pl-en"&gt;sh&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;clojure&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Spath&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Sdeps&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;str&lt;/span&gt; medley-dep))))
(&lt;span class="pl-en"&gt;add-classpath&lt;/span&gt; cp)
(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[medley.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; m])
(&lt;span class="pl-en"&gt;m/index-by&lt;/span&gt; &lt;span class="pl-c1"&gt;:id&lt;/span&gt; [{&lt;span class="pl-c1"&gt;:id&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;} {&lt;span class="pl-c1"&gt;:id&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; {1 {:id 1}, 2 {:id 2}}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-babashkawait" class="anchor" aria-hidden="true" href="#babashkawait"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;babashka.wait&lt;/h4&gt;
&lt;p&gt;Contains the functions: &lt;code&gt;wait-for-port&lt;/code&gt; and &lt;code&gt;wait-for-path&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Usage of &lt;code&gt;wait-for-port&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;wait/wait-for-port&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;8080&lt;/span&gt;)
(&lt;span class="pl-en"&gt;wait/wait-for-port&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;8080&lt;/span&gt; {&lt;span class="pl-c1"&gt;:timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt; &lt;span class="pl-c1"&gt;:pause&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Waits for TCP connection to be available on host and port. Options map supports &lt;code&gt;:timeout&lt;/code&gt; and &lt;code&gt;:pause&lt;/code&gt;. If &lt;code&gt;:timeout&lt;/code&gt; is provided and reached, &lt;code&gt;:default&lt;/code&gt;'s value (if any) is returned. The &lt;code&gt;:pause&lt;/code&gt; option determines the time waited between retries.&lt;/p&gt;
&lt;p&gt;Usage of &lt;code&gt;wait-for-path&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;wait/wait-for-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/wait-path-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-en"&gt;wait/wait-for-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/wait-path-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt; &lt;span class="pl-c1"&gt;:pause&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Waits for file path to be available. Options map supports &lt;code&gt;:default&lt;/code&gt;, &lt;code&gt;:timeout&lt;/code&gt;
and &lt;code&gt;:pause&lt;/code&gt;. If &lt;code&gt;:timeout&lt;/code&gt; is provided and reached, &lt;code&gt;:default&lt;/code&gt;'s value (if any)
is returned. The &lt;code&gt;:pause&lt;/code&gt; option determines the time waited between retries.&lt;/p&gt;
&lt;p&gt;The namespace &lt;code&gt;babashka.wait&lt;/code&gt; is aliased as &lt;code&gt;wait&lt;/code&gt; in the &lt;code&gt;user&lt;/code&gt; namespace.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-babashkasignal" class="anchor" aria-hidden="true" href="#babashkasignal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;babashka.signal&lt;/h4&gt;
&lt;p&gt;Contains the function &lt;code&gt;signal/pipe-signal-received?&lt;/code&gt;. Usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;signal/pipe-signal-received?&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Returns true if &lt;code&gt;PIPE&lt;/code&gt; signal was received. Example:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;((fn [x] (println x) (when (not (sig/pipe-signal-received?)) (recur (inc x)))) 0)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; head -n2&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The namespace &lt;code&gt;babashka.signal&lt;/code&gt; is aliased as &lt;code&gt;signal&lt;/code&gt; in the &lt;code&gt;user&lt;/code&gt; namespace.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-a-file" class="anchor" aria-hidden="true" href="#running-a-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running a file&lt;/h2&gt;
&lt;p&gt;Scripts may be executed from a file using &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--file&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;bb -f download_html.clj&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Files can also be loaded inline using &lt;code&gt;load-file&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;bb '(load-file "script.clj")'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using &lt;code&gt;bb&lt;/code&gt; with a shebang also works:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#!&lt;/span&gt;/usr/bin/env bb&lt;/span&gt;

(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;get-url&lt;/span&gt; [url]
  (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fetching url:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; url)
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; [{&lt;span class="pl-c1"&gt;:keys&lt;/span&gt; [&lt;span class="pl-c1"&gt;:exit&lt;/span&gt; &lt;span class="pl-c1"&gt;:err&lt;/span&gt; &lt;span class="pl-c1"&gt;:out&lt;/span&gt;]} (&lt;span class="pl-en"&gt;shell/sh&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;curl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-sS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; url)]
    (&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;zero?&lt;/span&gt; exit) out
      (&lt;span class="pl-k"&gt;do&lt;/span&gt; (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ERROR:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; err)
          (&lt;span class="pl-en"&gt;System/exit&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)))))

(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;write-html&lt;/span&gt; [file html]
  (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Writing file:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; file)
  (&lt;span class="pl-en"&gt;spit&lt;/span&gt; file html))

(&lt;span class="pl-k"&gt;let&lt;/span&gt; [[url file] *command-line-args*]
  (&lt;span class="pl-k"&gt;when&lt;/span&gt; (&lt;span class="pl-en"&gt;or&lt;/span&gt; (&lt;span class="pl-en"&gt;empty?&lt;/span&gt; url) (&lt;span class="pl-en"&gt;empty?&lt;/span&gt; file))
    (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Usage: &amp;lt;url&amp;gt; &amp;lt;file&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-en"&gt;System/exit&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
  (&lt;span class="pl-en"&gt;write-html&lt;/span&gt; file (&lt;span class="pl-en"&gt;get-url&lt;/span&gt; url)))

(&lt;span class="pl-en"&gt;System/exit&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;./download_html.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;Usage: &amp;lt;url&amp;gt; &amp;lt;file&amp;gt;&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;./download_html.clj https://www.clojure.org /tmp/clojure.org.html&lt;/span&gt;
&lt;span class="pl-c1"&gt;Fetching url: https://www.clojure.org&lt;/span&gt;
&lt;span class="pl-c1"&gt;Writing file: /tmp/clojure.org.html&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If &lt;code&gt;/usr/bin/env&lt;/code&gt; doesn't work for you, you can use the following workaround:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat script.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="pl-c1"&gt;#_(&lt;/span&gt;
&lt;span class="pl-c1"&gt;   "exec" "bb" "$0" hello "$@"&lt;/span&gt;
&lt;span class="pl-c1"&gt;   )&lt;/span&gt;

&lt;span class="pl-c1"&gt;(prn *command-line-args*)&lt;/span&gt;

&lt;span class="pl-c1"&gt;./script.clj 1 2 3&lt;/span&gt;
&lt;span class="pl-c1"&gt;("hello" "1" "2" "3")&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-preloads" class="anchor" aria-hidden="true" href="#preloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preloads&lt;/h2&gt;
&lt;p&gt;The environment variable &lt;code&gt;BABASHKA_PRELOADS&lt;/code&gt; allows to define code that will be
available in all subsequent usages of babashka.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;BABASHKA_PRELOADS='(defn foo [x] (+ x 2))'&lt;/span&gt;
&lt;span class="pl-c1"&gt;BABASHKA_PRELOADS=$BABASHKA_PRELOADS' (defn bar [x] (* x 2))'&lt;/span&gt;
&lt;span class="pl-c1"&gt;export BABASHKA_PRELOADS&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that you can concatenate multiple expressions. Now you can use these functions in babashka:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(-&amp;gt; (foo *input*) bar)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also preload an entire file using &lt;code&gt;load-file&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;export BABASHKA_PRELOADS='(load-file "my_awesome_prelude.clj")'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;*input*&lt;/code&gt; is not available in preloads.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-classpath" class="anchor" aria-hidden="true" href="#classpath"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Classpath&lt;/h2&gt;
&lt;p&gt;Babashka accepts a &lt;code&gt;--classpath&lt;/code&gt; option that will be used to search for
namespaces and load them:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat src/my/namespace.clj
(&lt;span class="pl-k"&gt;ns&lt;/span&gt; &lt;span class="pl-e"&gt;my.namespace&lt;/span&gt;)
(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;-main&lt;/span&gt; [&amp;amp; _args]
  (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello from my namespace!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

$ bb --classpath src --main my.namespace
Hello from my namespace!&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that you can use the &lt;code&gt;clojure&lt;/code&gt; tool to produce classpaths and download dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat deps.edn&lt;/span&gt;
&lt;span class="pl-c1"&gt;{:deps&lt;/span&gt;
&lt;span class="pl-c1"&gt; {my_gist_script&lt;/span&gt;
&lt;span class="pl-c1"&gt;  {:git/url "https://gist.github.com/borkdude/263b150607f3ce03630e114611a4ef42"&lt;/span&gt;
&lt;span class="pl-c1"&gt;   :sha "cfc761d06dfb30bb77166b45d439fe8fe54a31b8"}}&lt;/span&gt;
&lt;span class="pl-c1"&gt; :aliases {:my-script {:main-opts ["-m" "my-gist-script"]}}}&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;CLASSPATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;clojure -Spath&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;bb --classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$CLASSPATH&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --main my-gist-script&lt;/span&gt;
&lt;span class="pl-c1"&gt;Hello from gist script!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there is no &lt;code&gt;--classpath&lt;/code&gt; argument, the &lt;code&gt;BABASHKA_CLASSPATH&lt;/code&gt; environment
variable will be used:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; BABASHKA_CLASSPATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;clojure -Spath&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; BABASHKA_PRELOADS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(require '[my-gist-script])&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(my-gist-script/-main)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Hello from gist script!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-depsclj" class="anchor" aria-hidden="true" href="#depsclj"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deps.clj&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://github.com/borkdude/deps.clj/"&gt;&lt;code&gt;deps.clj&lt;/code&gt;&lt;/a&gt; script can be used to work with &lt;code&gt;deps.edn&lt;/code&gt;-based projects:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ deps.clj -A:my-script -Scommand &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bb -cp {{classpath}} {{main-opts}}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
Hello from gist script&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create these aliases for brevity:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;alias&lt;/span&gt; bbk=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;deps.clj -Scommand "bb -cp {{classpath}} {{main-opts}}"&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-c1"&gt;alias&lt;/span&gt; babashka=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rlwrap deps.clj -Scommand "bb -cp {{classpath}} {{main-opts}}"&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
$ bbk -A:my-script
Hello from gist script&lt;span class="pl-k"&gt;!&lt;/span&gt;
$ babashka
Babashka v0.0.58 REPL.
Use :repl/quit or :repl/exit to quit the REPL.
Clojure rocks, Bash reaches.

user=&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (require &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[my-gist-script :as mgs])&lt;/span&gt;
&lt;span class="pl-s"&gt;nil&lt;/span&gt;
&lt;span class="pl-s"&gt;user=&amp;gt; (mgs/-main)&lt;/span&gt;
&lt;span class="pl-s"&gt;Hello from gist script!&lt;/span&gt;
&lt;span class="pl-s"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-uberscript" class="anchor" aria-hidden="true" href="#uberscript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Uberscript&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;--uberscript&lt;/code&gt; option collects the expressions in
&lt;code&gt;BABASHKA_PRELOADS&lt;/code&gt;, the command line expression or file, the main entrypoint
and all required namespaces from the classpath into a single file. This can be
convenient for debugging and deployment.&lt;/p&gt;
&lt;p&gt;Given the &lt;code&gt;deps.edn&lt;/code&gt; from above:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ deps.clj -A:my-script -Scommand &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bb -cp {{classpath}} {{main-opts}} --uberscript my-script.clj&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

$ cat my-script.clj
(&lt;span class="pl-k"&gt;ns&lt;/span&gt; &lt;span class="pl-e"&gt;my-gist-script&lt;/span&gt;)
(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;-main&lt;/span&gt; [&amp;amp; args]
  (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello from gist script!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
(&lt;span class="pl-k"&gt;ns&lt;/span&gt; &lt;span class="pl-e"&gt;user&lt;/span&gt; (&lt;span class="pl-c1"&gt;:require&lt;/span&gt; [my-gist-script]))
(&lt;span class="pl-en"&gt;apply&lt;/span&gt; my-gist-script/-main *command-line-args*)

$ bb my-script.clj
Hello from gist script!&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-parsing-command-line-arguments" class="anchor" aria-hidden="true" href="#parsing-command-line-arguments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parsing command line arguments&lt;/h2&gt;
&lt;p&gt;Babashka ships with &lt;code&gt;clojure.tools.cli&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[clojure.tools.cli &lt;span class="pl-c1"&gt;:refer&lt;/span&gt; [parse-opts]])

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;cli-options&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; An option with a required argument&lt;/span&gt;
  [[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--port PORT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Port number&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:default&lt;/span&gt; &lt;span class="pl-c1"&gt;80&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:parse-fn&lt;/span&gt; #(&lt;span class="pl-en"&gt;Integer/parseInt&lt;/span&gt; %)
    &lt;span class="pl-c1"&gt;:validate&lt;/span&gt; [#(&lt;span class="pl-en"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; % &lt;span class="pl-c1"&gt;0x10000&lt;/span&gt;) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Must be a number between 0 and 65536&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]]
   [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--help&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]])

(&lt;span class="pl-c1"&gt;:options&lt;/span&gt; (&lt;span class="pl-en"&gt;parse-opts&lt;/span&gt; *command-line-args* cli-options))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bb script.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;{:port 80}&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;bb script.clj -h&lt;/span&gt;
&lt;span class="pl-c1"&gt;{:port 80, :help true}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-reader-conditionals" class="anchor" aria-hidden="true" href="#reader-conditionals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reader conditionals&lt;/h2&gt;
&lt;p&gt;Babashka supports reader conditionals using the &lt;code&gt;:bb&lt;/code&gt; feature:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example.clj
#?(&lt;span class="pl-c1"&gt;:clj&lt;/span&gt; (&lt;span class="pl-k"&gt;in-ns&lt;/span&gt; 'foo) &lt;span class="pl-c1"&gt;:bb&lt;/span&gt; (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;babashka doesn't support in-ns yet!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

$ ./bb example.clj
babashka doesn't support &lt;span class="pl-k"&gt;in-ns&lt;/span&gt; yet!&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-socket-repl" class="anchor" aria-hidden="true" href="#socket-repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Socket REPL&lt;/h2&gt;
&lt;p&gt;Start the socket REPL like this:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bb --socket-repl 1666&lt;/span&gt;
&lt;span class="pl-c1"&gt;Babashka socket REPL started at localhost:1666&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can connect with your favorite socket REPL client:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;rlwrap nc 127.0.0.1 1666&lt;/span&gt;
&lt;span class="pl-c1"&gt;Babashka v0.0.14 REPL.&lt;/span&gt;
&lt;span class="pl-c1"&gt;Use :repl/quit or :repl/exit to quit the REPL.&lt;/span&gt;
&lt;span class="pl-c1"&gt;Clojure rocks, Bash reaches.&lt;/span&gt;

&lt;span class="pl-c1"&gt;bb=&amp;gt; (+ 1 2 3)&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb=&amp;gt; :repl/quit&lt;/span&gt;
$&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A socket REPL client for Emacs is
&lt;a href="https://github.com/clojure-emacs/inf-clojure"&gt;inf-clojure&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-spawning-and-killing-a-process" class="anchor" aria-hidden="true" href="#spawning-and-killing-a-process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spawning and killing a process&lt;/h2&gt;
&lt;p&gt;Use the &lt;code&gt;java.lang.ProcessBuilder&lt;/code&gt; class.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;ws&lt;/span&gt; (&lt;span class="pl-en"&gt;-&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;ProcessBuilder.&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-m&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SimpleHTTPServer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1777&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) (&lt;span class="pl-en"&gt;.start&lt;/span&gt;)))
#'user/ws
user=&amp;gt; (&lt;span class="pl-en"&gt;wait/wait-for-port&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1777&lt;/span&gt;)
{&lt;span class="pl-c1"&gt;:host&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:port&lt;/span&gt; &lt;span class="pl-c1"&gt;1777&lt;/span&gt;, &lt;span class="pl-c1"&gt;:took&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}
user=&amp;gt; (&lt;span class="pl-en"&gt;.destroy&lt;/span&gt; ws)
&lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also see this &lt;a href="examples/process_builder.clj"&gt;example&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-async" class="anchor" aria-hidden="true" href="#async"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Async&lt;/h2&gt;
&lt;p&gt;Apart from &lt;code&gt;future&lt;/code&gt; and &lt;code&gt;pmap&lt;/code&gt; for creating threads, you may use the &lt;code&gt;async&lt;/code&gt;
namespace, which maps to &lt;code&gt;clojure.core.async&lt;/code&gt;, for asynchronous scripting. The
following example shows how to get first available value from two different
processes:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;bb '
(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;async-command&lt;/span&gt; [&amp;amp; args]
  (&lt;span class="pl-en"&gt;async/thread&lt;/span&gt; (&lt;span class="pl-en"&gt;apply&lt;/span&gt; shell/sh &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bash&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; args)))

(&lt;span class="pl-en"&gt;-&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;async/alts!!&lt;/span&gt; [(&lt;span class="pl-en"&gt;async-command&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sleep 2 &amp;amp;&amp;amp; echo process 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                   (&lt;span class="pl-en"&gt;async-command&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sleep 1 &amp;amp;&amp;amp; echo process 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)])
    first &lt;span class="pl-c1"&gt;:out&lt;/span&gt; str/trim println)'
process &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-differences-with-clojure" class="anchor" aria-hidden="true" href="#differences-with-clojure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differences with Clojure&lt;/h2&gt;
&lt;p&gt;Babashka is implemented using the &lt;a href="https://github.com/borkdude/sci"&gt;Small Clojure
Interpreter&lt;/a&gt;. This means that a snippet or
script is not compiled to JVM bytecode, but executed form by form by a runtime
which implements a subset of Clojure. Babashka is compiled to a native binary
using &lt;a href="https://github.com/oracle/graal"&gt;GraalVM&lt;/a&gt;. It comes with a selection of
built-in namespaces and functions from Clojure and other useful libraries. The
data types (numbers, strings, persistent collections) are the
same. Multi-threading is supported (&lt;code&gt;pmap&lt;/code&gt;, &lt;code&gt;future&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Differences with Clojure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A subset of Java classes are supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only the &lt;code&gt;clojure.core&lt;/code&gt;, &lt;code&gt;clojure.set&lt;/code&gt;, &lt;code&gt;clojure.string&lt;/code&gt; and &lt;code&gt;clojure.walk&lt;/code&gt;
namespaces are available from Clojure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interpretation comes with overhead. Therefore tight loops are likely slower
than in Clojure on the JVM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No support for unboxed types.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-external-resources" class="anchor" aria-hidden="true" href="#external-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External resources&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-tools-and-libraries" class="anchor" aria-hidden="true" href="#tools-and-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools and libraries&lt;/h3&gt;
&lt;p&gt;The following libraries are known to work with Babashka:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-depsclj-1" class="anchor" aria-hidden="true" href="#depsclj-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/borkdude/deps.clj"&gt;deps.clj&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;A port of the &lt;a href="https://github.com/clojure/brew-install/"&gt;clojure&lt;/a&gt; bash script to
Clojure / babashka.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-spartantest" class="anchor" aria-hidden="true" href="#spartantest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/borkdude/spartan.test/"&gt;spartan.test&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;A minimal test framework compatible with babashka.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-spartanspec" class="anchor" aria-hidden="true" href="#spartanspec"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/borkdude/spartan.spec/"&gt;spartan.spec&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;An babashka-compatible implementation of &lt;code&gt;clojure.spec.alpha&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-medley" class="anchor" aria-hidden="true" href="#medley"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/borkdude/medley/"&gt;medley&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;A fork of &lt;a href="https://github.com/weavejester/medley"&gt;medley&lt;/a&gt; made compatible with
babashka. Requires &lt;code&gt;bb&lt;/code&gt; &amp;gt;= v0.0.58.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-clj-http-lite" class="anchor" aria-hidden="true" href="#clj-http-lite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/borkdude/clj-http-lite"&gt;clj-http-lite&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This fork does not depend on any other libraries. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-k"&gt;export&lt;/span&gt; BABASHKA_CLASSPATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;clojure -Sdeps &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{:deps {clj-http-lite {:git/url "https://github.com/borkdude/clj-http-lite" :sha "f44ebe45446f0f44f2b73761d102af3da6d0a13e"}}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; -Spath&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

$ bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(require '[clj-http.lite.client :as client]) (:status (client/get &lt;span class="pl-cce"&gt;\"&lt;/span&gt;https://www.clojure.org&lt;span class="pl-cce"&gt;\"&lt;/span&gt;))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
200&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-limit-break" class="anchor" aria-hidden="true" href="#limit-break"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/technomancy/limit-break"&gt;limit-break&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;A debug REPL library. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-k"&gt;export&lt;/span&gt; BABASHKA_CLASSPATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;clojure -Sdeps &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{:deps {limit-break {:git/url "https://github.com/technomancy/limit-break" :sha "050fcfa0ea29fe3340927533a6fa6fffe23bfc2f" :deps/manifest :deps}}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; -Spath&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

$ bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(require '[limit.break :as lb]) (let [x 1] (lb/break))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
Babashka v0.0.49 REPL.
Use :repl/quit or :repl/exit to quit the REPL.
Clojure rocks, Bash reaches.

break&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; x
1&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-blogs" class="anchor" aria-hidden="true" href="#blogs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blogs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stuartsierra.com/2019/12/21/clojure-start-time-in-2019" rel="nofollow"&gt;Clojure Start Time in 2019&lt;/a&gt; by Stuart Sierra&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lambdaisland.com/blog/2019-12-19-advent-of-parens-19-advent-of-random-hacks" rel="nofollow"&gt;Advent of Random
Hacks&lt;/a&gt;
by Arne Brasseur&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lambdaisland.com/blog/2019-12-05-advent-of-parens-5-clojure-in-the-shell" rel="nofollow"&gt;Clojure in the Shell&lt;/a&gt; by Arne Brasseur&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purelyfunctional.tv/issues/purelyfunctional-tv-newsletter-351-clojure-tool-babashka/" rel="nofollow"&gt;Clojure Tool&lt;/a&gt; by Eric Normand&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-developing-babashka" class="anchor" aria-hidden="true" href="#developing-babashka"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/dev.md"&gt;Developing Babashka&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://planck-repl.org/" rel="nofollow"&gt;planck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/candid82/joker"&gt;joker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dundalek/closh"&gt;closh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anmonteiro/lumo"&gt;lumo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gallery&lt;/h2&gt;
&lt;p&gt;Here's a gallery of more useful examples. Do you have a useful example? PR
welcome!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-delete-a-list-of-files-returned-by-a-unix-command" class="anchor" aria-hidden="true" href="#delete-a-list-of-files-returned-by-a-unix-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Delete a list of files returned by a Unix command&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;find . | grep conflict | bb -i '(doseq [f *input*] (.delete (io/file f)))'
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-calculate-aggregate-size-of-directory" class="anchor" aria-hidden="true" href="#calculate-aggregate-size-of-directory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calculate aggregate size of directory&lt;/h3&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#!&lt;/span&gt;/usr/bin/env bb&lt;/span&gt;

(&lt;span class="pl-en"&gt;as-&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;io/file&lt;/span&gt; (&lt;span class="pl-en"&gt;or&lt;/span&gt; (&lt;span class="pl-en"&gt;first&lt;/span&gt; *command-line-args*) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) $
  (&lt;span class="pl-en"&gt;file-seq&lt;/span&gt; $)
  (&lt;span class="pl-en"&gt;map&lt;/span&gt; #(&lt;span class="pl-en"&gt;.length&lt;/span&gt; %) $)
  (&lt;span class="pl-en"&gt;reduce&lt;/span&gt; + $)
  (&lt;span class="pl-en"&gt;/&lt;/span&gt; $ (&lt;span class="pl-en"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;))
  (&lt;span class="pl-en"&gt;println&lt;/span&gt; (&lt;span class="pl-en"&gt;str&lt;/span&gt; (&lt;span class="pl-en"&gt;int&lt;/span&gt; $) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;dir-size&lt;/span&gt;
&lt;span class="pl-c1"&gt;130M&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;dir-size &lt;span class="pl-k"&gt;~&lt;/span&gt;/Dropbox/bin&lt;/span&gt;
&lt;span class="pl-c1"&gt;233M&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-shuffle-the-lines-of-a-file" class="anchor" aria-hidden="true" href="#shuffle-the-lines-of-a-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shuffle the lines of a file&lt;/h3&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat /tmp/test.txt&lt;/span&gt;
&lt;span class="pl-c1"&gt;1 Hello&lt;/span&gt;
&lt;span class="pl-c1"&gt;2 Clojure&lt;/span&gt;
&lt;span class="pl-c1"&gt;3 Babashka&lt;/span&gt;
&lt;span class="pl-c1"&gt;4 Goodbye&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; /tmp/test.txt bb -io &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(shuffle *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;3 Babashka&lt;/span&gt;
&lt;span class="pl-c1"&gt;2 Clojure&lt;/span&gt;
&lt;span class="pl-c1"&gt;4 Goodbye&lt;/span&gt;
&lt;span class="pl-c1"&gt;1 Hello&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-fetch-latest-github-release-tag" class="anchor" aria-hidden="true" href="#fetch-latest-github-release-tag"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetch latest Github release tag&lt;/h3&gt;
&lt;p&gt;For converting JSON to EDN, see &lt;a href="https://github.com/borkdude/jet"&gt;jet&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;curl -s https://api.github.com/repos/borkdude/babashka/tags &lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;jet --from json --keywordize --to edn |&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb '(-&amp;gt; *input* first :name (subs 1))'&lt;/span&gt;
&lt;span class="pl-c1"&gt;"0.0.4"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-get-latest-os-specific-download-url-from-github" class="anchor" aria-hidden="true" href="#get-latest-os-specific-download-url-from-github"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get latest OS-specific download url from Github&lt;/h3&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;curl -s https://api.github.com/repos/borkdude/babashka/releases &lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;jet --from json --keywordize |&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb '(-&amp;gt; *input* first :assets)' |&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb '(some #(re-find #".*linux.*" (:browser_download_url %)) *input*)'&lt;/span&gt;
&lt;span class="pl-c1"&gt;"https://github.com/borkdude/babashka/releases/download/v0.0.4/babashka-0.0.4-linux-amd64.zip"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-view-download-statistics-from-clojars" class="anchor" aria-hidden="true" href="#view-download-statistics-from-clojars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View download statistics from Clojars&lt;/h3&gt;
&lt;p&gt;Contributed by &lt;a href="https://github.com/plexus"&gt;@plexus&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;curl https://clojars.org/stats/all.edn &lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb -o '(for [[[group art] counts] *input*] (str (reduce + (vals counts))  " " group "/" art))' |&lt;/span&gt;
&lt;span class="pl-c1"&gt;sort -rn |&lt;/span&gt;
&lt;span class="pl-c1"&gt;less&lt;/span&gt;
&lt;span class="pl-c1"&gt;14113842 clojure-complete/clojure-complete&lt;/span&gt;
&lt;span class="pl-c1"&gt;9065525 clj-time/clj-time&lt;/span&gt;
&lt;span class="pl-c1"&gt;8504122 cheshire/cheshire&lt;/span&gt;
&lt;span class="pl-c1"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-portable-tree-command" class="anchor" aria-hidden="true" href="#portable-tree-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Portable tree command&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/borkdude/babashka/blob/master/examples/tree.clj"&gt;examples/tree.clj&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;clojure -Sdeps &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{:deps {org.clojure/tools.cli {:mvn/version "0.4.2"}}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; examples/tree.clj src&lt;/span&gt;
&lt;span class="pl-c1"&gt;src&lt;/span&gt;
&lt;span class="pl-c1"&gt;└── babashka&lt;/span&gt;
&lt;span class="pl-c1"&gt;    ├── impl&lt;/span&gt;
&lt;span class="pl-c1"&gt;    │   ├── tools&lt;/span&gt;
&lt;span class="pl-c1"&gt;    │   │   └── cli.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;...&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;examples/tree.clj src&lt;/span&gt;
&lt;span class="pl-c1"&gt;src&lt;/span&gt;
&lt;span class="pl-c1"&gt;└── babashka&lt;/span&gt;
&lt;span class="pl-c1"&gt;    ├── impl&lt;/span&gt;
&lt;span class="pl-c1"&gt;    │   ├── tools&lt;/span&gt;
&lt;span class="pl-c1"&gt;    │   │   └── cli.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-list-outdated-maven-dependencies" class="anchor" aria-hidden="true" href="#list-outdated-maven-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;List outdated maven dependencies&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/borkdude/babashka/blob/master/examples/outdated.clj"&gt;examples/outdated.clj&lt;/a&gt;.
Inspired by an idea from &lt;a href="https://github.com/seancorfield"&gt;@seancorfield&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat /tmp/deps.edn&lt;/span&gt;
&lt;span class="pl-c1"&gt;{:deps {cheshire {:mvn/version "5.8.1"}&lt;/span&gt;
&lt;span class="pl-c1"&gt;        clj-http {:mvn/version "3.4.0"}}}&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;examples/outdated.clj /tmp/deps.edn&lt;/span&gt;
&lt;span class="pl-c1"&gt;clj-http/clj-http can be upgraded from 3.4.0 to 3.10.0&lt;/span&gt;
&lt;span class="pl-c1"&gt;cheshire/cheshire can be upgraded from 5.8.1 to 5.9.0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-convert-projectclj-to-depsedn" class="anchor" aria-hidden="true" href="#convert-projectclj-to-depsedn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Convert project.clj to deps.edn&lt;/h3&gt;
&lt;p&gt;Contributed by &lt;a href="https://github.com/plexus"&gt;@plexus&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat project.clj &lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;sed -e 's/#=//g' -e 's/~@//g' -e 's/~//g' |&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb '(let [{:keys [dependencies source-paths resource-paths]} (apply hash-map (drop 3 *input*))]&lt;/span&gt;
&lt;span class="pl-c1"&gt;  {:paths (into source-paths resource-paths)&lt;/span&gt;
&lt;span class="pl-c1"&gt;   :deps (into {} (for [[d v] dependencies] [d {:mvn/version v}]))}) ' |&lt;/span&gt;
&lt;span class="pl-c1"&gt;jet --pretty &amp;gt; deps.edn&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-print-current-time-in-california" class="anchor" aria-hidden="true" href="#print-current-time-in-california"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Print current time in California&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/borkdude/babashka/blob/master/examples/pst.clj"&gt;examples/pst.clj&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tiny-http-server" class="anchor" aria-hidden="true" href="#tiny-http-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tiny http server&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/borkdude/babashka/blob/master/examples/http_server.clj"&gt;examples/http_server.clj&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Original by &lt;a href="https://gist.github.com/souenzzo/a959a4c5b8c0c90df76fe33bb7dfe201"&gt;@souenzzo&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.adgoji.com/" rel="nofollow"&gt;adgoji&lt;/a&gt; for financial support&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019 Michiel Borkent&lt;/p&gt;
&lt;p&gt;Distributed under the EPL License. See LICENSE.&lt;/p&gt;
&lt;p&gt;This project contains code from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clojure, which is licensed under the same EPL License.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>borkdude</author><guid isPermaLink="false">https://github.com/borkdude/babashka</guid><pubDate>Tue, 21 Jan 2020 00:07:00 GMT</pubDate></item><item><title>jepsen-io/jepsen #8 in Clojure, Today</title><link>https://github.com/jepsen-io/jepsen</link><description>&lt;p&gt;&lt;i&gt;A framework for distributed systems verification, with fault injection&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jepsen" class="anchor" aria-hidden="true" href="#jepsen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jepsen&lt;/h1&gt;
&lt;p&gt;Breaking distributed systems so you don't have to.&lt;/p&gt;
&lt;p&gt;Jepsen is a Clojure library. A test is a Clojure program which uses the Jepsen
library to set up a distributed system, run a bunch of operations against that
system, and verify that the history of those operations makes sense. Jepsen has
been used to verify everything from eventually-consistent commutative databases
to linearizable coordination systems to distributed task schedulers. It can
also generate graphs of performance and availability, helping you characterize
how a system responds to different faults. See
&lt;a href="https://jepsen.io/analyses" rel="nofollow"&gt;jepsen.io&lt;/a&gt; for examples of the sorts of analyses
you can carry out with Jepsen.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/jepsen-io/jepsen" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2db11233f50c10035ec5a1c49dbacab5ebf8629a/68747470733a2f2f7472617669732d63692e636f6d2f6a657073656e2d696f2f6a657073656e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/jepsen-io/jepsen.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;This &lt;a href="doc/tutorial/index.md"&gt;tutorial&lt;/a&gt; walks you through writing a Jepsen test
from scratch.&lt;/p&gt;
&lt;p&gt;For reference, see the &lt;a href="http://jepsen-io.github.io/jepsen/" rel="nofollow"&gt;API documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-design-overview" class="anchor" aria-hidden="true" href="#design-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design overview&lt;/h2&gt;
&lt;p&gt;A Jepsen test runs as a Clojure program on a &lt;em&gt;control node&lt;/em&gt;. That program uses
SSH to log into a bunch of &lt;em&gt;db nodes&lt;/em&gt;, where it sets up the distributed system
you're going to test using the test's pluggable &lt;em&gt;os&lt;/em&gt; and &lt;em&gt;db&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Once the system is running, the control node spins up a set of logically
single-threaded &lt;em&gt;processes&lt;/em&gt;, each with its own &lt;em&gt;client&lt;/em&gt; for the distributed
system. A &lt;em&gt;generator&lt;/em&gt; generates new operations for each process to perform.
Processes then apply those operations to the system using their clients. The
start and end of each operation is recorded in a &lt;em&gt;history&lt;/em&gt;. While performing
operations, a special &lt;em&gt;nemesis&lt;/em&gt; process introduces faults into the system--also
scheduled by the generator.&lt;/p&gt;
&lt;p&gt;Finally, the DB and OS are torn down. Jepsen uses a &lt;em&gt;checker&lt;/em&gt; to analyze the
test's history for correctness, and to generate reports, graphs, etc. The test,
history, analysis, and any supplementary results are written to the filesystem
under &lt;code&gt;store/&amp;lt;test-name&amp;gt;/&amp;lt;date&amp;gt;/&lt;/code&gt; for later review. Symlinks to the latest
results are maintained at each level for convenience.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-a-jepsen-environment" class="anchor" aria-hidden="true" href="#setting-up-a-jepsen-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up a Jepsen environment&lt;/h2&gt;
&lt;p&gt;Your control node needs a JVM and Leiningen 2 installed. Probably want JNA for
SSH auth too.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt-get install openjdk-8-jre openjdk-8-jre-headless libjna-java&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For your db nodes, you'll need some (I use five) debian boxes. Most of these
tests are designed for Debian; either Jessie, for older versions of Jepsen, or
Stretch, for more recent versions. Some DBs don't need the latest packages so
you might get away with an older distribution, or possibly ubuntu. Each one
should be accessible from the control node via SSH. By default they're named
n1, n2, n3, n4, and n5, but that (along with SSH username, password, identity
files, etc) is all definable in your test. The account you use on those boxes
needs sudo access to set up DBs, control firewalls, etc.&lt;/p&gt;
&lt;p&gt;Be advised that tests may mess with clocks, add apt repos, run killall -9 on
processes, and generally break things, so you shouldn't, you know, point jepsen
at your prod machines unless you like to live dangerously, or you wrote the
test and know exactly what it's doing.&lt;/p&gt;
&lt;p&gt;You can run your DB nodes as separate physical machines, VMs, LXC instances, or
via Docker. Note that containers (LXC and Docker) can't change system clocks,
so you won't be able to test anything that relies on clock skew.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can launch a complete Jepsen cluster from the &lt;a href="https://aws.amazon.com/marketplace/pp/B01LZ7Y7U0?qid=1486758124485&amp;amp;sr=0-1&amp;amp;ref_=srh_res_product_title" rel="nofollow"&gt;AWS
Marketplace&lt;/a&gt;.
Choose "5+1 node cluster" to get an entire cluster as a Cloudformation stack,
with SSH keys and firewall rules preconfigured. Choose "Single AMI" if you'd
just like a single node.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See &lt;a href="doc/lxc.md"&gt;lxc.md&lt;/a&gt; for some of my notes on setting up LXC instances.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can also use &lt;a href="docker/README.md"&gt;Docker Compose&lt;/a&gt; for setting up Docker instances.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-running-a-test" class="anchor" aria-hidden="true" href="#running-a-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running a test&lt;/h2&gt;
&lt;p&gt;Once you've got everything set up, you should be able to run &lt;code&gt;cd aerospike; lein test&lt;/code&gt;, and it'll spit out something like&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;INFO  jepsen.core - Analysis invalid! (&lt;span class="pl-en"&gt;ﾉಥ益ಥ）ﾉ&lt;/span&gt; ┻━┻

{&lt;span class="pl-c1"&gt;:valid?&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
 &lt;span class="pl-c1"&gt;:counter&lt;/span&gt;
 {&lt;span class="pl-c1"&gt;:valid?&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:reads&lt;/span&gt;
  [[&lt;span class="pl-c1"&gt;190&lt;/span&gt; &lt;span class="pl-c1"&gt;193&lt;/span&gt; &lt;span class="pl-c1"&gt;194&lt;/span&gt;]
   [&lt;span class="pl-c1"&gt;199&lt;/span&gt; &lt;span class="pl-c1"&gt;200&lt;/span&gt; &lt;span class="pl-c1"&gt;201&lt;/span&gt;]
   [&lt;span class="pl-c1"&gt;253&lt;/span&gt; &lt;span class="pl-c1"&gt;255&lt;/span&gt; &lt;span class="pl-c1"&gt;256&lt;/span&gt;]
   ...}}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-jsch-auth-errors" class="anchor" aria-hidden="true" href="#jsch-auth-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSCH auth errors&lt;/h3&gt;
&lt;p&gt;If you see &lt;code&gt;com.jcraft.jsch.JSchException: Auth fail&lt;/code&gt;, this means something
about your test's &lt;code&gt;:ssh&lt;/code&gt; map is wrong, or your control node's SSH environment
is a bit weird.&lt;/p&gt;
&lt;ol start="0"&gt;
&lt;li&gt;Confirm that you can ssh to the node that Jepsen failed to connect to. Try
&lt;code&gt;ssh -v&lt;/code&gt; for verbose information--pay special attention to whether it uses a
password or private key.&lt;/li&gt;
&lt;li&gt;If you intend to use a username and password, confirm that they're specified
correctly in your test's &lt;code&gt;:ssh&lt;/code&gt; map.&lt;/li&gt;
&lt;li&gt;If you intend to log in with a private key, make sure your SSH agent is
running.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ssh-add -l&lt;/code&gt; should show the key you use to log in.&lt;/li&gt;
&lt;li&gt;If your agent isn't running, try launching one with &lt;code&gt;ssh-agent&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If your agent shows no keys, you might need to add it with &lt;code&gt;ssh-add&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you're SSHing to a control node, SSH might be forwarding your local
agent's keys rather than using those on the control node. Try &lt;code&gt;ssh -a&lt;/code&gt; to
disable agent forwarding.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you've SSHed to a DB node already, you might also encounter a jsch bug which
doesn't know how to read hashed known_hosts files. Remove all keys for the DB
hosts from your &lt;code&gt;known_hosts&lt;/code&gt; file, then:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ssh-keyscan -t rsa n1 &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.ssh/known_hosts
ssh-keyscan -t rsa n2 &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.ssh/known_hosts
ssh-keyscan -t rsa n3 &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.ssh/known_hosts
ssh-keyscan -t rsa n4 &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.ssh/known_hosts
ssh-keyscan -t rsa n5 &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.ssh/known_hosts&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to add unhashed versions of each node's hostkey to your &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jepsen-io</author><guid isPermaLink="false">https://github.com/jepsen-io/jepsen</guid><pubDate>Tue, 21 Jan 2020 00:08:00 GMT</pubDate></item><item><title>status-im/status-react #9 in Clojure, Today</title><link>https://github.com/status-im/status-react</link><description>&lt;p&gt;&lt;i&gt;a free (libre) open source, mobile OS for Ethereum&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-status---a-mobile-ethereum-operating-system" class="anchor" aria-hidden="true" href="#status---a-mobile-ethereum-operating-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status - a Mobile Ethereum Operating System&lt;/h1&gt;
&lt;p&gt;Join us in creating a browser, messenger, and gateway to a decentralized world. Status is a free (libre) open source mobile client targeting Android &amp;amp; iOS built entirely on &lt;a href="https://ethereum.org/" rel="nofollow"&gt;Ethereum&lt;/a&gt; technologies. That's right, no middle men and &lt;code&gt;go-ethereum&lt;/code&gt; running directly on your device.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=oDCSEmS9c3o" title="Getting started with Status" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e232def198d0194eca01577a68d01885c146f15/68747470733a2f2f692e696d6775722e636f6d2f4330615a5a454c2e6a7067" alt="Getting started with Status" data-canonical-src="https://i.imgur.com/C0aZZEL.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why?&lt;/h2&gt;
&lt;p&gt;We believe in a medium of pure free trade, economies with fair, permission-less access and a world without intermediaries. We want to create policies that can exist between friends or scale globally, we want to communicate securely and be uninhibited by legacy systems.&lt;/p&gt;
&lt;p&gt;We want to take responsibility for our data, the way we conduct ourselves privately and promote this way of life to a mass audience.&lt;/p&gt;
&lt;p&gt;We want deep insights into our own economies so we can make informed, data-driven decisions on how to make our lives better. The Ethereum blockchain, Smart Contracts, Swarm and Whisper provides us a path forward.&lt;/p&gt;
&lt;p&gt;If this interests you, &lt;strong&gt;help us make Status a reality&lt;/strong&gt; - anyone can contribute and we need everyone at any skill level to participate.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-contribute" class="anchor" aria-hidden="true" href="#how-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Contribute?&lt;/h2&gt;
&lt;p&gt;Go straight to the &lt;a href="https://status.im/docs" rel="nofollow"&gt;docs&lt;/a&gt; or &lt;a href="http://get.status.im/chat/public/status" rel="nofollow"&gt;join our chat&lt;/a&gt; and choose what interests you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Developer&lt;/strong&gt;
Developers are the heart of software and to keep Status beating we need all the help we can get! If you're looking to code in ClojureScript or Golang then Status is the project for you! We use React Native and there is even some Java/Objective-C too!&lt;br&gt;
Want to learn more about it? Start by reading our &lt;a href="https://status.im/developer_tools/" rel="nofollow"&gt;Developer Introduction&lt;/a&gt; which guides you through the technology stack and start browsing &lt;a href="https://github.com/status-im/status-react/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aopen%20is%3Aissue%20label%3A%22good%20first%20issue%22%20"&gt;beginner issues&lt;/a&gt;. Then you can read how to &lt;a href="https://status.im/build_status/" rel="nofollow"&gt;Build Status&lt;/a&gt;, which talks about managing project dependencies, coding guidelines and testing procedures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Community Management&lt;/strong&gt;&lt;br&gt;
Metcalfe's law states that the value of a network is proportional to the square of the number of connected users of the system - without community Status is meaningless. We're looking to create a positive, fun environment to explore new ideas, experiment and grow the Status community. Building a community takes a lot of work but the people you'll meet and long lasting relationships you form will be well worth it, check out our &lt;a href="https://status.im/contribute/our_principles.html" rel="nofollow"&gt;Community Principles&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specification / Documentation&lt;/strong&gt;&lt;br&gt;
John Dewey once said "Education is not preparation for life; education is life &lt;em&gt;itself&lt;/em&gt; ". Developers &amp;amp; Designers need guidance and it all starts from documentation and specifications. Our software is only as good as its documentation, head over to our &lt;a href="https://status.im/docs" rel="nofollow"&gt;docs&lt;/a&gt; and see how you can improve what we have.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Blog Writing&lt;/strong&gt;&lt;br&gt;
Content is King, keeping our blog up to date and informing the community of news helps keep everyone on the same page. &lt;a href="http://get.status.im/chat/public/status" rel="nofollow"&gt;Jump into our chat&lt;/a&gt; and discuss with the team how you can contribute!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Testers&lt;/strong&gt;&lt;br&gt;
It's bug hunting season! Status is currently in Alpha and there is sure to be a bunch of learning, &lt;a href="https://status.im/build_status/" rel="nofollow"&gt;build status from scratch&lt;/a&gt; or if an android user check out our &lt;a href="https://status.im/nightly" rel="nofollow"&gt;nightly builds&lt;/a&gt;. You can shake your phone to submit bug reports, or start browsing our &lt;a href="http://github.com/status-im/status-react/issues"&gt;Github Issues&lt;/a&gt;. Every bug you find brings Status closer to stable, usable software for everyone to enjoy!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;br&gt;
Status is a visual interface to make permanent changes on the Blockchain, it handles crypto-tokens that have real value and allows 3rd party code execution. Security is paramount to its success. You are given permission to break Status as hard as you can, as long as you share your findings with the community!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Evangelism&lt;/strong&gt;&lt;br&gt;
Help us spread the word! Tell a friend &lt;em&gt;right now&lt;/em&gt;, in fact tell &lt;strong&gt;everyone&lt;/strong&gt; - yell from a mountain if you have to, every person counts! If you've got a great story to tell or have some interesting way you've spread the word about Status let us know about it in our &lt;a href="https://get.status.im/chat/public/status" rel="nofollow"&gt;chat&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-status-api" class="anchor" aria-hidden="true" href="#status-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status API&lt;/h2&gt;
&lt;p&gt;View our &lt;a href="https://status.im/developer_tools/status_web_api.html" rel="nofollow"&gt;API Docs&lt;/a&gt; and learn how to integrate your DApp into Status. You can read more about how to add your DApp to Status &lt;a href="https://status.im/developer_tools/add_your_dapp.html" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-give-me-binaries" class="anchor" aria-hidden="true" href="#give-me-binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Give me Binaries!&lt;/h2&gt;
&lt;p&gt;You can get our Beta builds for both Android and iOS on our &lt;a href="https://status.im" rel="nofollow"&gt;website&lt;/a&gt;, through our &lt;a href="https://status.im/nightly/" rel="nofollow"&gt;nightly builds&lt;/a&gt; or by &lt;a href="https://status.im/build_status/" rel="nofollow"&gt;building it yourself&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-core-contributors" class="anchor" aria-hidden="true" href="#core-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Contributors&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/orgs/status-im/people"&gt;Core Team Members&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Special thanks to &lt;a href="https://github.com/adrian-tiberius"&gt;@adrian-tiberius&lt;/a&gt;.
Without the dedication of these outstanding individuals, Status would not exist.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact-us" class="anchor" aria-hidden="true" href="#contact-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact us&lt;/h2&gt;
&lt;p&gt;Feel free to email us at &lt;a href="mailto:support@status.im"&gt;support@status.im&lt;/a&gt; or better yet, &lt;a href="http://get.status.im/chat/public/status" rel="nofollow"&gt;join our chat&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Licensed under the &lt;a href="https://github.com/status-im/status-react/blob/develop/LICENSE.md"&gt;Mozilla Public License v2.0&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing-supported-by" class="anchor" aria-hidden="true" href="#testing-supported-by"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing Supported by&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.browserstack.com/automate/public-build/SFBWQ3k5R2tnT2t6UGsxU1h1U0g3VFlCNnoxVTRHYWNoTDhsb1laaTJZWT0tLUZMUm5sSVFBSU9qSWM1RUJvK1I3Z3c9PQ==--ad15ae7992b432b33743749d40318952415bd98f" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/abf99bc4a00b203ebc5a49ddf2214e7fe8b69e01/68747470733a2f2f7777772e62726f77736572737461636b2e636f6d2f6175746f6d6174652f62616467652e7376673f62616467655f6b65793d5346425751336b355232746e5432743655477378553168315530673356466c434e6e6f785654524859574e6f5444687362316c6161544a5a575430744c555a4d556d3573535646425355397153574d3152554a764b3149335a33633950513d3d2d2d61643135616537393932623433326233333734333734396434303331383935323431356264393866" alt="BrowserStack Status" data-canonical-src="https://www.browserstack.com/automate/badge.svg?badge_key=SFBWQ3k5R2tnT2t6UGsxU1h1U0g3VFlCNnoxVTRHYWNoTDhsb1laaTJZWT0tLUZMUm5sSVFBSU9qSWM1RUJvK1I3Z3c9PQ==--ad15ae7992b432b33743749d40318952415bd98f" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://coveralls.io/github/status-im/status-react" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b11e0e00aa4bd49e8785c3306ba3bfc72c52490e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7374617475732d696d2f7374617475732d72656163742f62616467652e7376673f" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/status-im/status-react/badge.svg?" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>status-im</author><guid isPermaLink="false">https://github.com/status-im/status-react</guid><pubDate>Tue, 21 Jan 2020 00:09:00 GMT</pubDate></item></channel></rss>