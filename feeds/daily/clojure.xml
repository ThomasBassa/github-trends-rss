<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Clojure, Today</title><link>https://github.com/trending/clojure?since=daily</link><description>The top repositories on GitHub for clojure, measured daily</description><pubDate>Tue, 24 Dec 2019 01:08:33 GMT</pubDate><lastBuildDate>Tue, 24 Dec 2019 01:08:33 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>metabase/metabase #1 in Clojure, Today</title><link>https://github.com/metabase/metabase</link><description>&lt;p&gt;&lt;i&gt;The simplest, fastest way to get business intelligence and analytics  to everyone in your company :yum:&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-metabase" class="anchor" aria-hidden="true" href="#metabase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Metabase&lt;/h1&gt;
&lt;p&gt;Metabase is the easy, open source way for everyone in your company to ask questions and learn from data.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/metabase-product-screenshot.png"&gt;&lt;img src="docs/metabase-product-screenshot.png" alt="Metabase Product Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/metabase/metabase/releases"&gt;&lt;img src="https://camo.githubusercontent.com/ea5e30e904914ce7e90f1545526b8a6cc043618e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6d657461626173652f6d657461626173652e7376673f6c6162656c3d6c617465737425323072656c65617365" alt="Latest Release" data-canonical-src="https://img.shields.io/github/release/metabase/metabase.svg?label=latest%20release" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/metabase/metabase/master/LICENSE.txt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b59a8ca795689678e6caf56900294059cfe64ba3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4147504c2d3035423843432e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-AGPL-05B8CC.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/metabase/metabase" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a81f1ec3024eb4ce825b1eb8604cfc01e5a4b62c/68747470733a2f2f636972636c6563692e636f6d2f67682f6d657461626173652f6d657461626173652e7376673f7374796c653d73766726636972636c652d746f6b656e3d33636366306161383431303238616630323766326163396538646631376365363033653930656639" alt="Circle CI" data-canonical-src="https://circleci.com/gh/metabase/metabase.svg?style=svg&amp;amp;circle-token=3ccf0aa841028af027f2ac9e8df17ce603e90ef9" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/metabase/metabase" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/315f2b9c3a2b05d7fef4a53142339050088ff7d4/68747470733a2f2f6261646765732e6769747465722e696d2f6d657461626173652f6d657461626173652e706e67" alt="Gitter chat" data-canonical-src="https://badges.gitter.im/metabase/metabase.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;5 minute &lt;a href="https://metabase.com/docs/latest/setting-up-metabase.html" rel="nofollow"&gt;setup&lt;/a&gt; (We're not kidding)&lt;/li&gt;
&lt;li&gt;Let anyone on your team &lt;a href="https://metabase.com/docs/latest/users-guide/04-asking-questions.html" rel="nofollow"&gt;ask questions&lt;/a&gt; without knowing SQL&lt;/li&gt;
&lt;li&gt;Rich beautiful &lt;a href="https://metabase.com/docs/latest/users-guide/06-sharing-answers.html" rel="nofollow"&gt;dashboards&lt;/a&gt; with auto refresh and fullscreen&lt;/li&gt;
&lt;li&gt;SQL Mode for analysts and data pros&lt;/li&gt;
&lt;li&gt;Create canonical &lt;a href="https://metabase.com/docs/latest/administration-guide/07-segments-and-metrics.html" rel="nofollow"&gt;segments and metrics&lt;/a&gt; for your team to use&lt;/li&gt;
&lt;li&gt;Send data to Slack or email on a schedule with &lt;a href="https://metabase.com/docs/latest/users-guide/10-pulses.html" rel="nofollow"&gt;Pulses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;View data in Slack anytime with &lt;a href="https://metabase.com/docs/latest/users-guide/11-metabot.html" rel="nofollow"&gt;MetaBot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://metabase.com/docs/latest/administration-guide/03-metadata-editing.html" rel="nofollow"&gt;Humanize data&lt;/a&gt; for your team by renaming, annotating and hiding fields&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information check out &lt;a href="https://metabase.com/" rel="nofollow"&gt;metabase.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-databases" class="anchor" aria-hidden="true" href="#supported-databases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported databases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Postgres&lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;Druid&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;Redshift&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;li&gt;Google BigQuery&lt;/li&gt;
&lt;li&gt;SQLite&lt;/li&gt;
&lt;li&gt;H2&lt;/li&gt;
&lt;li&gt;Oracle&lt;/li&gt;
&lt;li&gt;Vertica&lt;/li&gt;
&lt;li&gt;Presto&lt;/li&gt;
&lt;li&gt;Snowflake&lt;/li&gt;
&lt;li&gt;SparkSQL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Don't see your favorite database? File an issue to let us know.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Metabase can be run just about anywhere so checkout our &lt;a href="https://metabase.com/docs/latest/operations-guide/start.html#installing-and-running-metabase" rel="nofollow"&gt;Installation Guides&lt;/a&gt; for detailed instructions for various deployments.  Here's the TLDR:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h3&gt;
&lt;p&gt;To run Metabase via Docker, just type&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run -d -p 3000:3000 --name metabase metabase/metabase&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-jvm-jar" class="anchor" aria-hidden="true" href="#jvm-jar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JVM Jar&lt;/h3&gt;
&lt;p&gt;To run the jar you will need to have a Java Runtime installed. As a quick check to see if you system already has one, try&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;java -version&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you see something like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;java version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.8.0_51&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
Java(TM) SE Runtime Environment (build 1.8.0_51-b16)
Java HotSpot(TM) 64-Bit Server VM (build 25.51-b03, mixed mode)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;you are good to go. Otherwise, download the Java Runtime Environment at &lt;a href="http://java.com/" rel="nofollow"&gt;http://java.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Go to the &lt;a href="https://metabase.com/start/" rel="nofollow"&gt;Metabase Download Page&lt;/a&gt; and download the current build. Place the downloaded jar into a newly created directory (as it will create some files when it is run), and run it on the command line:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;java -jar metabase.jar&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, open a browser and go to &lt;a href="http://localhost:3000" rel="nofollow"&gt;http://localhost:3000&lt;/a&gt; , and you will be asked a set of questions that will set up a user account, and then you can add a database connection. For this to work you will need to get some information about which database you want to connect to, such as the Host Name and Port that it is running on, the Database Name and the User and Password that you will be using.&lt;/p&gt;
&lt;p&gt;Once you have added this connection, you will be taken into the app and you'll be ready to ask your first question.&lt;/p&gt;
&lt;p&gt;For a more detailed walkthrough, check out our &lt;a href="docs/getting-started.md"&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-frequently-asked-questions" class="anchor" aria-hidden="true" href="#frequently-asked-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frequently Asked Questions&lt;/h1&gt;
&lt;p&gt;Some questions come up over and over again. Check here first:
&lt;a href="docs/faq.md"&gt;FAQ&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-security-disclosure" class="anchor" aria-hidden="true" href="#security-disclosure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security Disclosure&lt;/h1&gt;
&lt;p&gt;Security is very important to us. If you discover any issue regarding security, please disclose the information responsibly by sending an email to &lt;a href="mailto:security@metabase.com"&gt;security@metabase.com&lt;/a&gt; and not by creating a GitHub issue.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;To get started with a development installation of the Metabase, follow the instructions at our &lt;a href="docs/developers-guide.md"&gt;Developers Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then take a look at our &lt;a href="docs/contributing.md"&gt;Contribution Guide&lt;/a&gt; for information about our process and where you can fit in!&lt;/p&gt;
&lt;p&gt;Talk to other contributors &lt;a href="https://gitter.im/metabase/metabase" rel="nofollow"&gt;in our Gitter room&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-internationalization" class="anchor" aria-hidden="true" href="#internationalization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Internationalization&lt;/h1&gt;
&lt;p&gt;We want Metabase to be available in as many languages as possible. See what translations are available and help contribute to internationalization using our project &lt;a href="https://poeditor.com/join/project/ynjQmwSsGh" rel="nofollow"&gt;over at POEditor&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-extending-and-deep-integrations" class="anchor" aria-hidden="true" href="#extending-and-deep-integrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extending and Deep Integrations&lt;/h1&gt;
&lt;p&gt;Metabase also allows you to hit our Query API directly from Javascript to integrate the simple analytics we provide with your own application or third party services to do things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build moderation interfaces&lt;/li&gt;
&lt;li&gt;Export subsets of your users to third party marketing automation software&lt;/li&gt;
&lt;li&gt;Provide a specialized customer lookup application for the people in your company&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-danger-zone" class="anchor" aria-hidden="true" href="#danger-zone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Danger zone&lt;/h1&gt;
&lt;p&gt;The button below will deploy the branch where this README.md lives onto Heroku. Metabase developers use it to deploy branches of Metabase to test our PRs, etc. We DO NOT recommend you using this for production. Instead, please use a &lt;a href="https://metabase.com/start" rel="nofollow"&gt;stable build&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://heroku.com/deploy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/83b0e95b38892b49184e07ad572c94c8038323fb/68747470733a2f2f7777772e6865726f6b7563646e2e636f6d2f6465706c6f792f627574746f6e2e737667" alt="Deploy" data-canonical-src="https://www.herokucdn.com/deploy/button.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Unless otherwise noted, all Metabase source files are made available under the terms of the GNU Affero General Public License (AGPL).&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/metabase/metabase/blob/master/LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt; for details and exceptions.&lt;/p&gt;
&lt;p&gt;Unless otherwise noted, all files © 2019 Metabase, Inc.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>metabase</author><guid isPermaLink="false">https://github.com/metabase/metabase</guid><pubDate>Tue, 24 Dec 2019 00:01:00 GMT</pubDate></item><item><title>Provisdom/spectomic #2 in Clojure, Today</title><link>https://github.com/Provisdom/spectomic</link><description>&lt;p&gt;&lt;i&gt;Generate Datomic or Datascript schema from your Clojure(Script) specs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-spectomic" class="anchor" aria-hidden="true" href="#spectomic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;spectomic&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/Provisdom/spectomic" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d2ff09cc8f59c889c1f48e5fdef1ef96f8cfb1d/68747470733a2f2f636972636c6563692e636f6d2f67682f50726f766973646f6d2f73706563746f6d69632e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/Provisdom/spectomic.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generate Datomic or Datascript schema from your Clojure(script) specs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;a href="dependency"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;[provisdom/spectomic &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.7.11&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; latest release&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="/dependency"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Let's take a look at a basic example.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[clojure.spec &lt;span class="pl-c1"&gt;:as&lt;/span&gt; s]
         '[provisdom.spectomic.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; spectomic])
=&amp;gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;

(&lt;span class="pl-k"&gt;s/def&lt;/span&gt; &lt;span class="pl-c1"&gt;::string&lt;/span&gt; &lt;span class="pl-e"&gt;string?&lt;/span&gt;)
=&amp;gt; &lt;span class="pl-c1"&gt;:boot.user/string&lt;/span&gt;

(&lt;span class="pl-en"&gt;spectomic/datomic-schema&lt;/span&gt; [&lt;span class="pl-c1"&gt;::string&lt;/span&gt;])
=&amp;gt; [{&lt;span class="pl-c1"&gt;:db/ident&lt;/span&gt;       &lt;span class="pl-c1"&gt;:boot.user/string&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/valueType&lt;/span&gt;   &lt;span class="pl-c1"&gt;:db.type/string&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/cardinality&lt;/span&gt; &lt;span class="pl-c1"&gt;:db.cardinality/one&lt;/span&gt;}]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example we define the spec &lt;code&gt;::string&lt;/code&gt; and then pass it to &lt;code&gt;datomic-schema&lt;/code&gt;
which returns a collection of schema matching the data our &lt;code&gt;::string&lt;/code&gt; spec
represents. Now let's look at a more complicated example.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;s/def&lt;/span&gt; &lt;span class="pl-c1"&gt;:entity/id&lt;/span&gt; &lt;span class="pl-e"&gt;uuid?&lt;/span&gt;)
=&amp;gt; &lt;span class="pl-c1"&gt;:entity/id&lt;/span&gt;

(&lt;span class="pl-k"&gt;s/def&lt;/span&gt; &lt;span class="pl-c1"&gt;:user/name&lt;/span&gt; &lt;span class="pl-e"&gt;string?&lt;/span&gt;)
=&amp;gt; &lt;span class="pl-c1"&gt;:user/name&lt;/span&gt;

(&lt;span class="pl-k"&gt;s/def&lt;/span&gt; &lt;span class="pl-c1"&gt;:user/favorite-foods&lt;/span&gt; (&lt;span class="pl-en"&gt;s/coll-of&lt;/span&gt; string?))
=&amp;gt; &lt;span class="pl-c1"&gt;:user/favorite-foods&lt;/span&gt;

(&lt;span class="pl-k"&gt;s/def&lt;/span&gt; &lt;span class="pl-c1"&gt;:order/name&lt;/span&gt; &lt;span class="pl-e"&gt;string?&lt;/span&gt;)
=&amp;gt; &lt;span class="pl-c1"&gt;:order/name&lt;/span&gt;

(&lt;span class="pl-k"&gt;s/def&lt;/span&gt; &lt;span class="pl-c1"&gt;:user/order&lt;/span&gt; (&lt;span class="pl-en"&gt;s/keys&lt;/span&gt; &lt;span class="pl-c1"&gt;:req&lt;/span&gt; [&lt;span class="pl-c1"&gt;:entity/id&lt;/span&gt; &lt;span class="pl-c1"&gt;:order/name&lt;/span&gt;]))
=&amp;gt; &lt;span class="pl-c1"&gt;:user/orders&lt;/span&gt;

(&lt;span class="pl-k"&gt;s/def&lt;/span&gt; &lt;span class="pl-c1"&gt;:user/orders&lt;/span&gt; (&lt;span class="pl-en"&gt;s/coll-of&lt;/span&gt; &lt;span class="pl-c1"&gt;:user/order&lt;/span&gt;))
=&amp;gt; &lt;span class="pl-c1"&gt;:user/orders&lt;/span&gt;

(&lt;span class="pl-k"&gt;s/def&lt;/span&gt; &lt;span class="pl-c1"&gt;::user&lt;/span&gt; (&lt;span class="pl-en"&gt;s/keys&lt;/span&gt; &lt;span class="pl-c1"&gt;:req&lt;/span&gt; [&lt;span class="pl-c1"&gt;:entity/id&lt;/span&gt; &lt;span class="pl-c1"&gt;:user/name&lt;/span&gt; &lt;span class="pl-c1"&gt;:user/favorite-foods&lt;/span&gt; &lt;span class="pl-c1"&gt;:user/orders&lt;/span&gt;]))
=&amp;gt; &lt;span class="pl-c1"&gt;:boot.user/user&lt;/span&gt;

(&lt;span class="pl-en"&gt;spectomic/datomic-schema&lt;/span&gt; [[&lt;span class="pl-c1"&gt;:entity/id&lt;/span&gt; {&lt;span class="pl-c1"&gt;:db/unique&lt;/span&gt; &lt;span class="pl-c1"&gt;:db.unique/identity&lt;/span&gt;
                                        &lt;span class="pl-c1"&gt;:db/index&lt;/span&gt;  &lt;span class="pl-c1"&gt;true&lt;/span&gt;}]
                           &lt;span class="pl-c1"&gt;:user/name&lt;/span&gt;
                           &lt;span class="pl-c1"&gt;:user/favorite-foods&lt;/span&gt;
                           &lt;span class="pl-c1"&gt;:user/orders&lt;/span&gt;])
=&amp;gt; [{&lt;span class="pl-c1"&gt;:db/ident&lt;/span&gt;       &lt;span class="pl-c1"&gt;:entity/id&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/valueType&lt;/span&gt;   &lt;span class="pl-c1"&gt;:db.type/uuid&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/cardinality&lt;/span&gt; &lt;span class="pl-c1"&gt;:db.cardinality/one&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/unique&lt;/span&gt;      &lt;span class="pl-c1"&gt;:db.unique/identity&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/index&lt;/span&gt;       &lt;span class="pl-c1"&gt;true&lt;/span&gt;}
    {&lt;span class="pl-c1"&gt;:db/ident&lt;/span&gt;       &lt;span class="pl-c1"&gt;:user/name&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/valueType&lt;/span&gt;   &lt;span class="pl-c1"&gt;:db.type/string&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/cardinality&lt;/span&gt; &lt;span class="pl-c1"&gt;:db.cardinality/one&lt;/span&gt;}
    {&lt;span class="pl-c1"&gt;:db/ident&lt;/span&gt;       &lt;span class="pl-c1"&gt;:user/favorite-foods&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/valueType&lt;/span&gt;   &lt;span class="pl-c1"&gt;:db.type/string&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/cardinality&lt;/span&gt; &lt;span class="pl-c1"&gt;:db.cardinality/many&lt;/span&gt;}
    {&lt;span class="pl-c1"&gt;:db/ident&lt;/span&gt;       &lt;span class="pl-c1"&gt;:user/orders&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/valueType&lt;/span&gt;   &lt;span class="pl-c1"&gt;:db.type/ref&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:db/cardinality&lt;/span&gt; &lt;span class="pl-c1"&gt;:db.cardinality/many&lt;/span&gt;}]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example we have a &lt;code&gt;::user&lt;/code&gt; entity that is uniquely identified by an
&lt;code&gt;:entity/id&lt;/code&gt;. The user also has a collection of his or her favorite foods
&lt;code&gt;:user/favorite-foods&lt;/code&gt; and a collection of orders &lt;code&gt;:user/orders&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We need to let &lt;code&gt;datomic-schema&lt;/code&gt; know that &lt;code&gt;:entity/id&lt;/code&gt; is unique. We do this be
providing &lt;code&gt;datomic-schema&lt;/code&gt; with a tuple instead of just the spec keyword. The
first element of the tuple is the spec and the second element is any extra schema
fields to be added to the attribute. In this case we attach &lt;code&gt;:db/unique&lt;/code&gt; and
&lt;code&gt;:db/index&lt;/code&gt;. You can see in the outputted schema that &lt;code&gt;:entity/id&lt;/code&gt; does indeed
have those extra fields.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:user/name&lt;/code&gt; is not particularly interesting as it is similar to our basic example.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:user/favorite-foods&lt;/code&gt; is represented as a collection of strings in our example.
And as you can see in the returned schema, &lt;code&gt;:user/favorite-foods&lt;/code&gt; is
&lt;code&gt;:db.cardinality/many&lt;/code&gt; and &lt;code&gt;:db.type/string&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:user/orders&lt;/code&gt; is a collection of maps of the for dictated by the spec &lt;code&gt;::orders&lt;/code&gt;.
And our returned schema is of type &lt;code&gt;:db.type/ref&lt;/code&gt; and &lt;code&gt;:db.cardinality/many&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-resolving-custom-types" class="anchor" aria-hidden="true" href="#resolving-custom-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resolving Custom Types&lt;/h3&gt;
&lt;p&gt;Your code may use types that are not resolvable to Datomic types with the default
type type resolver implementation. One option to this problem is to use the schema
entry format you saw above with &lt;code&gt;:entity/id&lt;/code&gt;. If you recall, we set the &lt;code&gt;:db/unique&lt;/code&gt;
property for &lt;code&gt;:entity/id&lt;/code&gt; to &lt;code&gt;:db.unique/identity&lt;/code&gt;. You can actually manually set
the &lt;code&gt;:db/valueType&lt;/code&gt; too. This could, however, become very repetitive.&lt;/p&gt;
&lt;p&gt;The second option is to pass a map with the &lt;code&gt;:custom-type-resolver&lt;/code&gt; key set to a
function that returns a Datomic type. If the default type resolver cannot resolve
an object's type, your function will be called with the object passed to it as
the only argument. Your function is expected to return a valid Datomic type, as
defined &lt;a href="http://docs.datomic.com/schema.html#required-schema-attributes" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage-in-production" class="anchor" aria-hidden="true" href="#usage-in-production"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage in Production&lt;/h2&gt;
&lt;p&gt;This library provides two functions for generating schema from specs: &lt;code&gt;datomic-schema&lt;/code&gt;
and &lt;code&gt;datascript-schema&lt;/code&gt;. Both function calls occur at &lt;strong&gt;runtime&lt;/strong&gt;. This means
that if you include this library as a runtime dependency, test.check will also be
included. Often you don't want test.check as a runtime dependency so it is suggested
that you include this dependency as &lt;code&gt;test&lt;/code&gt; scope
(e.g. &lt;code&gt;[provisdom/spectomic "x.x.x" :scope "test"]&lt;/code&gt;). Including this library with
&lt;code&gt;test&lt;/code&gt; scope means that all your calls need to happen at compile time or elsewhere.
Here are two examples of how this library can be used at compile time.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macro" class="anchor" aria-hidden="true" href="#macro"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Macro&lt;/h3&gt;
&lt;p&gt;It is convenient to store the list of specs you want to convert into schema as a
var. By doing so you are able to easily add new specs to the schema list at any
time. We will use a &lt;code&gt;def&lt;/code&gt;'ed var as an example.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;schema-specs&lt;/span&gt; [[&lt;span class="pl-c1"&gt;:entity/id&lt;/span&gt; {&lt;span class="pl-c1"&gt;:db/unique&lt;/span&gt; &lt;span class="pl-c1"&gt;:db.unique/identity&lt;/span&gt; &lt;span class="pl-c1"&gt;:db/index&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}] &lt;span class="pl-c1"&gt;:user/name&lt;/span&gt; &lt;span class="pl-c1"&gt;:user/favorite-foods&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's write a &lt;code&gt;def&lt;/code&gt;-like macro that will generate our schema at compile time:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defmacro&lt;/span&gt; &lt;span class="pl-e"&gt;defschema&lt;/span&gt;
  [name]
  `(&lt;span class="pl-k"&gt;def&lt;/span&gt; ~name (&lt;span class="pl-en"&gt;spectomic/datomic-schema&lt;/span&gt; schema-specs)))

(&lt;span class="pl-k"&gt;defschema&lt;/span&gt; &lt;span class="pl-e"&gt;my-schema&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now our schema is statically compiled and available in the var &lt;code&gt;my-schema&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-time" class="anchor" aria-hidden="true" href="#build-time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build time&lt;/h3&gt;
&lt;p&gt;Sometimes you may want to save your schema into an actual EDN file for use in
multiple places. This can be easily accomplished with a Boot task.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[provisdom.spectomic.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; spectomic])

(&lt;span class="pl-k"&gt;deftask&lt;/span&gt; &lt;span class="pl-e"&gt;generate-schema&lt;/span&gt;
  [s sym VAL sym &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This symbol will be resolved and have its content passed to `datomic-schema`.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
  (&lt;span class="pl-en"&gt;spit&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my-schema.edn&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;spectomic/datomic-schema&lt;/span&gt; @(&lt;span class="pl-en"&gt;resolve&lt;/span&gt; sym))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This task is simple but does not adhere to Boot's design patterns. Here's a
slightly more complex example that integrates well with other tasks.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[clojure.java.io &lt;span class="pl-c1"&gt;:as&lt;/span&gt; io])

(&lt;span class="pl-k"&gt;deftask&lt;/span&gt; &lt;span class="pl-e"&gt;generate-schema&lt;/span&gt;
  [s sym VAL sym &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This symbol will be resolved and have its content passed to `datomic-schema`.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
   o out-file VAL str &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Name of the file for the schema to be outputted to. Defaults to schema.edn&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; [specs-var (&lt;span class="pl-en"&gt;resolve&lt;/span&gt; sym)]
    (&lt;span class="pl-en"&gt;assert&lt;/span&gt; specs-var &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The symbol provided cannot be resolved.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-en"&gt;with-pre-wrap&lt;/span&gt; fileset
      (&lt;span class="pl-k"&gt;let&lt;/span&gt; [out-file-name (&lt;span class="pl-en"&gt;or&lt;/span&gt; out-file &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;schema.edn&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            out-dir (&lt;span class="pl-en"&gt;tmp-dir!&lt;/span&gt;)
            out-file (&lt;span class="pl-en"&gt;io/file&lt;/span&gt; out-dir out-file-name)]
        (&lt;span class="pl-en"&gt;spit&lt;/span&gt; out-file (&lt;span class="pl-en"&gt;spectomic/datomic-schema&lt;/span&gt; @specs-var))
        (&lt;span class="pl-en"&gt;commit!&lt;/span&gt; (&lt;span class="pl-en"&gt;add-resource&lt;/span&gt; fileset out-dir))))))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-caveats" class="anchor" aria-hidden="true" href="#caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-misleading-generators" class="anchor" aria-hidden="true" href="#misleading-generators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Misleading Generators&lt;/h3&gt;
&lt;p&gt;When writing your specs you need to be mindful of the generator that is used for
the spec. One misleading predicate generator is &lt;code&gt;float?&lt;/code&gt;. &lt;code&gt;float?&lt;/code&gt;'s generator
actually uses the same generator as &lt;code&gt;double?&lt;/code&gt;, meaning it does not return a number
with type &lt;code&gt;java.lang.Float&lt;/code&gt;. This is problematic for our schema generator as it
relies on your objects having the correct type that they represent. This is not
a bug in Clojure spec however. If you look at how &lt;code&gt;float?&lt;/code&gt; is defined you will
see that &lt;code&gt;float?&lt;/code&gt; returns true if the object is a &lt;code&gt;java.lang.Double&lt;/code&gt; or a
&lt;code&gt;java.lang.Float&lt;/code&gt;. To combat this we can write our own &lt;code&gt;::float&lt;/code&gt; spec like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;s/def&lt;/span&gt; &lt;span class="pl-c1"&gt;::float&lt;/span&gt;
  (&lt;span class="pl-en"&gt;s/with-gen&lt;/span&gt;
    #(&lt;span class="pl-en"&gt;instance?&lt;/span&gt; java.lang.Float %)
    #(&lt;span class="pl-en"&gt;gen/fmap&lt;/span&gt; float
               (&lt;span class="pl-en"&gt;s/gen&lt;/span&gt; (&lt;span class="pl-en"&gt;s/double-in&lt;/span&gt; &lt;span class="pl-c1"&gt;:min&lt;/span&gt; Float/MIN_VALUE &lt;span class="pl-c1"&gt;:max&lt;/span&gt; Float/MAX_VALUE &lt;span class="pl-c1"&gt;:infinite?&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-c1"&gt;:NaN?&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)))))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-rare-edge-cases" class="anchor" aria-hidden="true" href="#rare-edge-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rare Edge Cases&lt;/h3&gt;
&lt;p&gt;If you write a Spec that uses a generator that will return values of a different
type very rarely then you will run into schema generation problems. Make sure
your generators are returning consistent types.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-implementation" class="anchor" aria-hidden="true" href="#implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implementation&lt;/h2&gt;
&lt;p&gt;Rather than parsing every Spec form, we chose to implement this library using
generators. Every Spec that is passed to &lt;code&gt;datomic-schema&lt;/code&gt; or &lt;code&gt;datascript-schema&lt;/code&gt;
is sampled 100 times using test.check. The type of each sample is then matched
with a Datomic type. Next we make sure that each sample is of the same type. If
your generator is returning multiple types for a Spec then it's not clear how the
schema should be generated so an error is thrown. If the type is a collection
then we need to verify that for each sample, every element in the collection is
of the same type. If that is true then we return a map with &lt;code&gt;:db.cardinality/many&lt;/code&gt;
and the &lt;code&gt;:db/valueType&lt;/code&gt; set to the type of object the collection contains.&lt;/p&gt;
&lt;p&gt;Because generating samples for specs can end up taking a significant amount of
time, we do some Spec form parsing up front to try and determine the Datomic
type. If the Spec form is not handled then we fall back on generation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2017 Provisdom&lt;/p&gt;
&lt;p&gt;Distributed under the Eclipse Public License either version 1.0 or (at
your option) any later version.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Provisdom</author><guid isPermaLink="false">https://github.com/Provisdom/spectomic</guid><pubDate>Tue, 24 Dec 2019 00:02:00 GMT</pubDate></item><item><title>borkdude/clj-kondo #3 in Clojure, Today</title><link>https://github.com/borkdude/clj-kondo</link><description>&lt;p&gt;&lt;i&gt;A linter for Clojure code that sparks joy.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="logo/logo-300dpi.png"&gt;&lt;img src="logo/logo-300dpi.png" width="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/borkdude/clj-kondo/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e478e0d6d427b6bbd08b50acfbf3314aaef80ab5/68747470733a2f2f636972636c6563692e636f6d2f67682f626f726b647564652f636c6a2d6b6f6e646f2f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/borkdude/clj-kondo/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/borkdude/clj-kondo/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c5ad219023a16716381f6cee47529e7c85765c2/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f336a64726f376d7531376e76337262332f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/3jdro7mu17nv3rb3/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojars.org/clj-kondo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c17f11be4a26b1d39054e8817d2a70f3f111d08c/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f636c6a2d6b6f6e646f2e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/clj-kondo.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cljdoc.org/d/clj-kondo/clj-kondo/CURRENT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5b39521007a6599d4a294c424c2a6a2c1016e73/68747470733a2f2f636c6a646f632e6f72672f62616467652f636c6a2d6b6f6e646f2f636c6a2d6b6f6e646f" alt="cljdoc badge" data-canonical-src="https://cljdoc.org/badge/clj-kondo/clj-kondo" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojurians.slack.com/messages/CHY97NXE2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d32eacbaaf4d06e17885b5da976a2d0cb18238e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6a6f696e5f636861742d627269676874677265656e2e737667" alt="project chat" data-canonical-src="https://img.shields.io/badge/slack-join_chat-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A linter for Clojure code that sparks joy.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/demo.png"&gt;&lt;img src="screenshots/demo.png" width="50%" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p lang="en" dir="ltr"&gt;Thanks a lot for clj-kondo. It is like a companion for me. It has made clojure fun again.&lt;/p&gt;
    —
    &lt;a href="https://github.com/geraldodev"&gt;@geraldodev&lt;/a&gt; on Clojurians Slack
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale&lt;/h2&gt;
&lt;p&gt;Clj-kondo performs static analysis on Clojure, ClojureScript and EDN, without the need of a running REPL. It informs you about potential errors while you are typing.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Clj-kondo detects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inline &lt;code&gt;def&lt;/code&gt; expressions&lt;/li&gt;
&lt;li&gt;redundant &lt;code&gt;do&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; wrappings&lt;/li&gt;
&lt;li&gt;arity errors:
&lt;ul&gt;
&lt;li&gt;within the same namespace and across namespaces&lt;/li&gt;
&lt;li&gt;of static Java method calls&lt;/li&gt;
&lt;li&gt;of local &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;letfn&lt;/code&gt; binding calls&lt;/li&gt;
&lt;li&gt;of recursive calls (including &lt;code&gt;recur&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;unused private vars&lt;/li&gt;
&lt;li&gt;private and deprecated var usage&lt;/li&gt;
&lt;li&gt;required but unused namespaces&lt;/li&gt;
&lt;li&gt;referred but unused vars&lt;/li&gt;
&lt;li&gt;duplicate requires&lt;/li&gt;
&lt;li&gt;unused function arguments and let bindings&lt;/li&gt;
&lt;li&gt;unused imports&lt;/li&gt;
&lt;li&gt;redefined vars&lt;/li&gt;
&lt;li&gt;unresolved symbols and namespaces&lt;/li&gt;
&lt;li&gt;misplaced docstrings&lt;/li&gt;
&lt;li&gt;duplicate map keys and set elements&lt;/li&gt;
&lt;li&gt;missing map keys&lt;/li&gt;
&lt;li&gt;invalid number of forms in binding vectors&lt;/li&gt;
&lt;li&gt;missing assertions in &lt;code&gt;clojure.test/deftest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;alias consistency&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/types.md"&gt;type checking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Datalog syntax checking&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;before your REPL knows it.&lt;/p&gt;
&lt;p&gt;It suggests several style guide recommendations, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rules from Stuart Sierra's &lt;a href="https://stuartsierra.com/2016/clojure-how-to-ns.html" rel="nofollow"&gt;how to ns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;:else&lt;/code&gt; as the catch-all test expression in &lt;code&gt;cond&lt;/code&gt; (see &lt;a href="https://github.com/bbatsov/clojure-style-guide#else-keyword-in-cond"&gt;Clojure style guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;seq&lt;/code&gt; instead of &lt;code&gt;(not (empty? ,,,))&lt;/code&gt; (see &lt;a href="https://github.com/bbatsov/clojure-style-guide#nil-punning"&gt;Clojure style guide&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/wrong-arity.png"&gt;&lt;img src="screenshots/wrong-arity.png" width="50%" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It has support for syntax of commonly used macros like
&lt;code&gt;clojure.core.async/alt!!&lt;/code&gt;, &lt;code&gt;schema.core/defn&lt;/code&gt; and &lt;code&gt;potemkin/import-vars&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It provides &lt;a href="analysis"&gt;analysis data&lt;/a&gt; so you build your own custom linters.&lt;/p&gt;
&lt;p&gt;This linter is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;compatible with &lt;code&gt;.clj&lt;/code&gt;, &lt;code&gt;.cljs&lt;/code&gt;, &lt;code&gt;.cljc&lt;/code&gt; and &lt;code&gt;.edn&lt;/code&gt; files&lt;/li&gt;
&lt;li&gt;build tool and editor agnostic&lt;/li&gt;
&lt;li&gt;a static code analyzer&lt;/li&gt;
&lt;li&gt;compiled to native code using GraalVM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Try clj-kondo at the &lt;a href="https://clj-kondo.michielborkent.nl" rel="nofollow"&gt;interactive playground&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/install.md"&gt;Installation&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-running-on-the-jvm" class="anchor" aria-hidden="true" href="#running-on-the-jvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/jvm.md"&gt;Running on the JVM&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-running-with-docker" class="anchor" aria-hidden="true" href="#running-with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/docker.md"&gt;Running with Docker&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line&lt;/h3&gt;
&lt;p&gt;Lint from stdin:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(def x (def x 1))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; clj-kondo --lint -&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;stdin&amp;gt;:1:8: warning: inline def&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lint a file:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(def x (def x 1))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; /tmp/foo.clj&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;clj-kondo --lint /tmp/foo.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;/tmp/foo.clj:1:8: warning: inline def&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lint a directory:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;clj-kondo --lint src&lt;/span&gt;
&lt;span class="pl-c1"&gt;src/clj_kondo/test.cljs:7:1: warning: redundant do&lt;/span&gt;
&lt;span class="pl-c1"&gt;src/clj_kondo/calls.clj:291:3: error: Wrong number of args (1) passed to clj-kondo.calls/analyze-calls&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lint a project classpath:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;clj-kondo --lint &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;lein classpath&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-project-setup" class="anchor" aria-hidden="true" href="#project-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project setup&lt;/h2&gt;
&lt;p&gt;To detect lint errors across namespaces in your project, a cache is needed. To
let clj-kondo know where to create one, make a &lt;code&gt;.clj-kondo&lt;/code&gt; directory in the
root of your project, meaning on the same level as your &lt;code&gt;project.clj&lt;/code&gt;,
&lt;code&gt;deps.edn&lt;/code&gt; or &lt;code&gt;build.boot&lt;/code&gt;. A cache will be created inside of it when you run
&lt;code&gt;clj-kondo&lt;/code&gt;.  Before linting inside your editor, it is recommended to lint the
entire classpath to teach &lt;code&gt;clj-kondo&lt;/code&gt; about all the libraries you are using,
including Clojure and/or ClojureScript itself:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;clj-kondo --lint &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;classpath&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build tool specific ways to get a classpath:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lein classpath&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boot with-cp -w -f -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure -Spath&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So for &lt;code&gt;lein&lt;/code&gt; the entire command would be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ clj-kondo --lint "$(lein classpath)"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you are ready to lint single files using &lt;a href="doc/editor-integration.md"&gt;editor
integration&lt;/a&gt;. A simulation of what happens when you
edit a file in your editor:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(select-keys)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; clj-kondo --lang cljs --lint -&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;stdin&amp;gt;:1:1: error: Wrong number of args (0) passed to cljs.core/select-keys&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since clj-kondo now knows about your version of ClojureScript via the cache,
it detects that the number of arguments you passed to &lt;code&gt;select-keys&lt;/code&gt; is
invalid. Each time you edit a file, the cache is incrementally updated, so
clj-kondo is informed about new functions you just wrote.&lt;/p&gt;
&lt;p&gt;If you want to use a different directory to read and write the cache, use the
&lt;code&gt;--cache-dir&lt;/code&gt; option. To disable the cache even if you have a &lt;code&gt;.clj-kondo&lt;/code&gt;
directory, use &lt;code&gt;--cache false&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/config.md"&gt;Configuration&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-editor-integration" class="anchor" aria-hidden="true" href="#editor-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/editor-integration.md"&gt;Editor integration&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-exit-codes" class="anchor" aria-hidden="true" href="#exit-codes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exit codes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;: no errors or warnings were found&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2&lt;/code&gt;: more than one warning was found&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3&lt;/code&gt;: more than one error was found&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All other error codes indicate an unexpected error.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ci-integration" class="anchor" aria-hidden="true" href="#ci-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/ci-integration.md"&gt;CI Integration&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-analysis-data" class="anchor" aria-hidden="true" href="#analysis-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="analysis"&gt;Analysis data&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-developer-documentation" class="anchor" aria-hidden="true" href="#developer-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="doc/dev.md"&gt;Developer documentation&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-thanks-to" class="anchor" aria-hidden="true" href="#thanks-to"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks to:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/candid82/joker"&gt;joker&lt;/a&gt; for inspiration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xsc/rewrite-clj"&gt;rewrite-clj&lt;/a&gt; for the Clojure parser code&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonase/eastwood"&gt;eastwood&lt;/a&gt; for &lt;code&gt;var-info.edn&lt;/code&gt; and inspiration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/borkdude/clj-kondo/graphs/contributors"&gt;contributors&lt;/a&gt; and
other users posting issues with bug reports and ideas&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonsky"&gt;Nikita Prokopov&lt;/a&gt; for the logo&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-support-this-project" class="anchor" aria-hidden="true" href="#support-this-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support this project&lt;/h2&gt;
&lt;p&gt;Do you enjoy this project? Consider buying me a &lt;a href="https://ko-fi.com/borkdude" rel="nofollow"&gt;hot
beverage&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019 Michiel Borkent&lt;/p&gt;
&lt;p&gt;Distributed under the EPL License, same as Clojure. See LICENSE.&lt;/p&gt;
&lt;p&gt;The directory &lt;code&gt;inlined&lt;/code&gt; contains source from &lt;a href="https://github.com/clojure/tools.reader"&gt;&lt;code&gt;tools.reader&lt;/code&gt;&lt;/a&gt; which is licensed under the EPL license.&lt;/p&gt;
&lt;p&gt;The directory &lt;code&gt;parser&lt;/code&gt; contains modified source from &lt;a href="https://github.com/xsc/rewrite-clj"&gt;&lt;code&gt;rewrite-clj&lt;/code&gt;&lt;/a&gt; which is licensed under the MIT license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>borkdude</author><guid isPermaLink="false">https://github.com/borkdude/clj-kondo</guid><pubDate>Tue, 24 Dec 2019 00:03:00 GMT</pubDate></item><item><title>borkdude/babashka #4 in Clojure, Today</title><link>https://github.com/borkdude/babashka</link><description>&lt;p&gt;&lt;i&gt;A Clojure babushka for the grey areas of Bash.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-babashka" class="anchor" aria-hidden="true" href="#babashka"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Babashka&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/borkdude/babashka/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6ae553a0a341f297fa2497b3eae63884170a458a/68747470733a2f2f636972636c6563692e636f6d2f67682f626f726b647564652f6261626173686b612f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/borkdude/babashka/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojars.org/borkdude/babashka" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/795d46ffab533f2952e22b78313a7c0ccae928e3/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f626f726b647564652f6261626173686b612e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/borkdude/babashka.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.slack.com/client/T03RZGPFR/CLX41ASCS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d32eacbaaf4d06e17885b5da976a2d0cb18238e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6a6f696e5f636861742d627269676874677265656e2e737667" alt="project chat" data-canonical-src="https://img.shields.io/badge/slack-join_chat-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A Clojure &lt;a href="https://en.wikipedia.org/wiki/Headscarf" rel="nofollow"&gt;babushka&lt;/a&gt; for the grey areas of Bash.&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p lang="en" dir="ltr"&gt;Really enjoying Babashka. Life's too short to remember how to write Bash code. I feel liberated.&lt;br&gt; Thanks a million &lt;a href="https://github.com/borkdude"&gt;@borkdude!&lt;/a&gt;&lt;/p&gt;
    —
    &lt;a href="https://github.com/laheadle"&gt;@laheadle&lt;/a&gt; on Clojurians Slack
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bash &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;ls &lt;span class="pl-k"&gt;|&lt;/span&gt; bb --time -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(filter #(-&amp;gt; % io/file .isDirectory) *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;("doc" "resources" "sci" "script" "src" "target" "test")&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb took 4ms.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale&lt;/h2&gt;
&lt;p&gt;The sweet spot for babashka is executing Clojure snippets or scripts in the same
space where you would use Bash.&lt;/p&gt;
&lt;p&gt;As one user described it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’m quite at home in Bash most of the time, but there’s a substantial grey area of things that are too complicated to be simple in bash, but too simple to be worth writing a clj/s script for. Babashka really seems to hit the sweet spot for those cases.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fast startup / low latency. This is achieved by compiling to native using &lt;a href="https://github.com/oracle/graal"&gt;GraalVM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Familiarity and portability. Keep migration barriers between bash and Clojure as low as possible by:
&lt;ul&gt;
&lt;li&gt;Gradually introducing Clojure expressions to existing bash scripts&lt;/li&gt;
&lt;li&gt;Scripts written in babashka should also be able to run on the JVM without major changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Multi-threading support similar to Clojure on the JVM&lt;/li&gt;
&lt;li&gt;Batteries included (clojure.tools.cli, core.async, ...)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Non-goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;li&gt;Provide a mixed Clojure/bash DSL (see portability).&lt;/li&gt;
&lt;li&gt;Replace existing shells. Babashka is a tool you can use inside existing shells like bash and it is designed to play well with them. It does not aim to replace them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reasons why babashka may not be the right fit for your use case:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It uses &lt;a href="https://github.com/borkdude/sci"&gt;sci&lt;/a&gt; for interpreting Clojure. Sci
implements only a subset of Clojure and is not as performant as compiled code.&lt;/li&gt;
&lt;li&gt;External libraries are not available (although you may use &lt;code&gt;load-file&lt;/code&gt; for
loading external scripts).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Read more about the differences with Clojure &lt;a href="#differences-with-clojure"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;Experimental. Breaking changes are expected to happen at this phase. Keep an eye
on &lt;a href="CHANGES.md"&gt;CHANGES.md&lt;/a&gt; for a list of breaking changes.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;ls &lt;span class="pl-k"&gt;|&lt;/span&gt; bb -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*input*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;["LICENSE" "README.md" "bb" "doc" "pom.xml" "project.clj" "reflection.json" "resources" "script" "src" "target" "test"]&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;ls &lt;span class="pl-k"&gt;|&lt;/span&gt; bb -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(count *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;12&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(vec (dedupe *input*))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[1 1 1 1 2]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;[1 2]&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(filterv :foo *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[{:foo 1} {:bar 2}]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;[{:foo 1}]&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(#(+ %1 %2 %3) 1 2 *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;ls &lt;span class="pl-k"&gt;|&lt;/span&gt; bb -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(filterv #(re-find #"reflection" %) *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;["reflection.json"]&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(run! #(shell/sh "touch" (str "/tmp/test/" %)) (range 100))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;ls /tmp/test &lt;span class="pl-k"&gt;|&lt;/span&gt; bb -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*input*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" ...]&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb -O &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(repeat "dude")&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; bb --stream &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(str *input* "rino")&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; bb -I &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(take 3 *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;("duderino" "duderino" "duderino")&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More examples can be found in the &lt;a href="#gallery"&gt;gallery&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-brew" class="anchor" aria-hidden="true" href="#brew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Brew&lt;/h3&gt;
&lt;p&gt;Linux and macOS binaries are provided via brew.&lt;/p&gt;
&lt;p&gt;Install:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install borkdude/brew/babashka
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Upgrade:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew upgrade babashka
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-arch-linux" class="anchor" aria-hidden="true" href="#arch-linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arch (Linux)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;babashka&lt;/code&gt; is &lt;a href="https://aur.archlinux.org/packages/babashka-bin/" rel="nofollow"&gt;available&lt;/a&gt; in the &lt;a href="https://aur.archlinux.org" rel="nofollow"&gt;Arch User Repository&lt;/a&gt;. It can be installed using your favorite &lt;a href="https://aur.archlinux.org" rel="nofollow"&gt;AUR&lt;/a&gt; helper such as
&lt;a href="https://github.com/Jguer/yay"&gt;yay&lt;/a&gt;, &lt;a href="https://github.com/archlinuxfr/yaourt"&gt;yaourt&lt;/a&gt;, &lt;a href="https://github.com/oshazard/apacman"&gt;apacman&lt;/a&gt; and &lt;a href="https://github.com/rmarquis/pacaur"&gt;pacaur&lt;/a&gt;. Here is an example using &lt;code&gt;yay&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yay -S babashka-bin
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-installer-script" class="anchor" aria-hidden="true" href="#installer-script"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installer script&lt;/h3&gt;
&lt;p&gt;Install via the installer script:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bash &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default this will install into &lt;code&gt;/usr/local/bin&lt;/code&gt;. To change this, provide the directory name:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bash &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; /tmp&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h3&gt;
&lt;p&gt;You may also download a binary from &lt;a href="https://github.com/borkdude/babashka/releases"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Usage: bb [ -i | -I ] [ -o | -O ] [ --stream ] [--verbose]&lt;/span&gt;
&lt;span class="pl-c1"&gt;          [ ( --classpath | -cp ) &amp;lt;cp&amp;gt; ] [ ( --main | -m ) &amp;lt;main-namespace&amp;gt; ]&lt;/span&gt;
&lt;span class="pl-c1"&gt;          ( -e &amp;lt;expression&amp;gt; | -f &amp;lt;file&amp;gt; | --repl | --socket-repl [&amp;lt;host&amp;gt;:]&amp;lt;port&amp;gt; )&lt;/span&gt;
&lt;span class="pl-c1"&gt;          [ arg* ]&lt;/span&gt;

&lt;span class="pl-c1"&gt;Options:&lt;/span&gt;

&lt;span class="pl-c1"&gt;  --help, -h or -?   Print this help text.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --version          Print the current version of babashka.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -i                 Bind *input* to a lazy seq of lines from stdin.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -I                 Bind *input* to a lazy seq of EDN values from stdin.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -o                 Write lines to stdout.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -O                 Write EDN values to stdout.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --verbose          Print entire stacktrace in case of exception.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --stream           Stream over lines or EDN values from stdin. Combined with -i or -I *input* becomes a single value per iteration.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -e, --eval &amp;lt;expr&amp;gt;  Evaluate an expression.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -f, --file &amp;lt;path&amp;gt;  Evaluate a file.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -cp, --classpath   Classpath to use.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -m, --main &amp;lt;ns&amp;gt;    Call the -main function from namespace with args.&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --repl             Start REPL&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --socket-repl      Start socket REPL. Specify port (e.g. 1666) or host and port separated by colon (e.g. 127.0.0.1:1666).&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --time             Print execution time before exiting.&lt;/span&gt;

&lt;span class="pl-c1"&gt;If neither -e, -f, or --socket-repl are specified, then the first argument that is not parsed as a option is treated as a file if it exists, or as an expression otherwise.&lt;/span&gt;
&lt;span class="pl-c1"&gt;Everything after that is bound to *command-line-args*.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;clojure.core&lt;/code&gt; functions are accessible without a namespace alias.&lt;/p&gt;
&lt;p&gt;The following namespaces are required by default and available through the
pre-defined aliases in the &lt;code&gt;user&lt;/code&gt; namespace. You may use &lt;code&gt;require&lt;/code&gt; + &lt;code&gt;:as&lt;/code&gt;
and/or &lt;code&gt;:refer&lt;/code&gt; on these namespaces. If not all vars are available, they are
enumerated explicitly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clojure.string&lt;/code&gt; aliased as &lt;code&gt;str&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure.set&lt;/code&gt; aliased as &lt;code&gt;set&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure.edn&lt;/code&gt; aliased as &lt;code&gt;edn&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;read-string&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure.java.shell&lt;/code&gt; aliases as &lt;code&gt;shell&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure.java.io&lt;/code&gt; aliased as &lt;code&gt;io&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;as-relative-path&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;, &lt;code&gt;delete-file&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clojure.github.io/core.async/" rel="nofollow"&gt;&lt;code&gt;clojure.core.async&lt;/code&gt;&lt;/a&gt; aliased as
&lt;code&gt;async&lt;/code&gt;. The &lt;code&gt;alt&lt;/code&gt; and &lt;code&gt;go&lt;/code&gt; macros are not available but &lt;code&gt;alts!!&lt;/code&gt; does work as
it is a function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/clojure/tools.cli"&gt;&lt;code&gt;clojure.tools.cli&lt;/code&gt;&lt;/a&gt; aliased as &lt;code&gt;tools.cli&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/clojure/data.csv"&gt;&lt;code&gt;clojure.data.csv&lt;/code&gt;&lt;/a&gt; aliased as &lt;code&gt;csv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dakrone/cheshire"&gt;&lt;code&gt;cheshire.core&lt;/code&gt;&lt;/a&gt; aliased as &lt;code&gt;json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following Java classes are available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ArithmeticException&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clojure.lang.ExceptionInfo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;java.io.File&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;java.nio.file.Files&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;java.util.Base64&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;java.util.regex.Pattern&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ProcessBuilder&lt;/code&gt; (see &lt;a href="examples/process_builder.clj"&gt;example&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More classes can be added by request. See &lt;code&gt;reflection.json&lt;/code&gt; and the &lt;code&gt;:classes&lt;/code&gt;
option in &lt;code&gt;main.clj&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Babashka supports &lt;code&gt;import&lt;/code&gt; : &lt;code&gt;(import clojure.lang.ExceptionInfo)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Babashka supports a subset of the &lt;code&gt;ns&lt;/code&gt; form where you may use &lt;code&gt;:require&lt;/code&gt; and &lt;code&gt;:import&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;(ns foo&lt;/span&gt;
&lt;span class="pl-c1"&gt;  (:require [clojure.string :as str])&lt;/span&gt;
&lt;span class="pl-c1"&gt;  (:import clojure.lang.ExceptionInfo))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For the unsupported parts of the ns form, you may use &lt;a href="#reader-conditionals"&gt;reader
conditionals&lt;/a&gt; to maintain compatibility with JVM Clojure.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-input-and-output-flags" class="anchor" aria-hidden="true" href="#input-and-output-flags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Input and output flags&lt;/h3&gt;
&lt;p&gt;In one-liners the &lt;code&gt;*input*&lt;/code&gt; value may come in handy. It contains the input read from stdin as EDN by default. If you want to read in text, use the &lt;code&gt;-i&lt;/code&gt; flag, which binds &lt;code&gt;*input*&lt;/code&gt; to a lazy seq of lines of text. If you want to read multiple EDN values, use the &lt;code&gt;-I&lt;/code&gt; flag. The &lt;code&gt;-o&lt;/code&gt; option prints the result as lines of text. The &lt;code&gt;-O&lt;/code&gt; option prints the result as lines of EDN values.&lt;/p&gt;
&lt;p&gt;The following table illustrates the combination of options for commands of the form&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo "{{Input}}" | bb {{Input flags}} {{Output flags}} "*input*"
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Input&lt;/th&gt;
&lt;th&gt;Input flags&lt;/th&gt;
&lt;th&gt;Output flag&lt;/th&gt;
&lt;th&gt;&lt;code&gt;*input*&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;Output&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt; &lt;br&gt; &lt;code&gt;{:a 2}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hello &lt;br&gt; bye&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;("hello" "bye")&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;("hello" "bye")&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hello &lt;br&gt; bye&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;("hello" "bye")&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;hello &lt;br&gt; bye&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt; &lt;br&gt; &lt;code&gt;{:a 2}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-I&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;({:a 1} {:a 2})&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;({:a 1} {:a 2})&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt; &lt;br&gt; &lt;code&gt;{:a 2}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-I&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;({:a 1} {:a 2})&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{:a 1}&lt;/code&gt; &lt;br&gt; &lt;code&gt;{:a 2}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;When combined with the &lt;code&gt;--stream&lt;/code&gt; option, the expression is executed for each value in the input:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ echo '{&lt;span class="pl-c1"&gt;:a&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;} {&lt;span class="pl-c1"&gt;:a&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}' | bb --stream '*input*'
{&lt;span class="pl-c1"&gt;:a&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}
{&lt;span class="pl-c1"&gt;:a&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-current-file-path" class="anchor" aria-hidden="true" href="#current-file-path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current file path&lt;/h3&gt;
&lt;p&gt;The var &lt;code&gt;*file*&lt;/code&gt; contains the full path of the file that is currently being
executed:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat example.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;(prn *file*)&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;bb example.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;"/Users/borkdude/example.clj"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-command-line-arguments" class="anchor" aria-hidden="true" href="#command-line-arguments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command-line arguments&lt;/h3&gt;
&lt;p&gt;Command-line arguments can be retrieved using &lt;code&gt;*command-line-args*&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-additional-functions" class="anchor" aria-hidden="true" href="#additional-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional functions&lt;/h3&gt;
&lt;p&gt;Additionally, babashka adds the following functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wait/wait-for-port&lt;/code&gt;. Usage:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;wait/wait-for-port&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;8080&lt;/span&gt;)
(&lt;span class="pl-en"&gt;wait/wait-for-port&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;8080&lt;/span&gt; {&lt;span class="pl-c1"&gt;:timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt; &lt;span class="pl-c1"&gt;:pause&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Waits for TCP connection to be available on host and port. Options map supports &lt;code&gt;:timeout&lt;/code&gt; and &lt;code&gt;:pause&lt;/code&gt;. If &lt;code&gt;:timeout&lt;/code&gt; is provided and reached, &lt;code&gt;:default&lt;/code&gt;'s value (if any) is returned. The &lt;code&gt;:pause&lt;/code&gt; option determines the time waited between retries.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wait/wait-for-path&lt;/code&gt;. Usage:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;wait/wait-for-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/wait-path-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-en"&gt;wait/wait-for-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/tmp/wait-path-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:timeout&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt; &lt;span class="pl-c1"&gt;:pause&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Waits for file path to be available. Options map supports &lt;code&gt;:default&lt;/code&gt;, &lt;code&gt;:timeout&lt;/code&gt; and &lt;code&gt;:pause&lt;/code&gt;. If &lt;code&gt;:timeout&lt;/code&gt; is provided and reached, &lt;code&gt;:default&lt;/code&gt;'s value (if any) is returned. The &lt;code&gt;:pause&lt;/code&gt; option determines the time waited between retries.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sig/pipe-signal-received?&lt;/code&gt;. Usage:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;sig/pipe-signal-received?&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Returns true if &lt;code&gt;PIPE&lt;/code&gt; signal was received. Example:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;((fn [x] (println x) (when (not (sig/pipe-signal-received?)) (recur (inc x)))) 0)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; head -n2&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-running-a-file" class="anchor" aria-hidden="true" href="#running-a-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running a file&lt;/h2&gt;
&lt;p&gt;Scripts may be executed from a file using &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--file&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;bb -f download_html.clj&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Files can also be loaded inline using &lt;code&gt;load-file&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;bb '(load-file "script.clj")'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using &lt;code&gt;bb&lt;/code&gt; with a shebang also works:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#!&lt;/span&gt;/usr/bin/env bb&lt;/span&gt;

(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;get-url&lt;/span&gt; [url]
  (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fetching url:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; url)
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; [{&lt;span class="pl-c1"&gt;:keys&lt;/span&gt; [&lt;span class="pl-c1"&gt;:exit&lt;/span&gt; &lt;span class="pl-c1"&gt;:err&lt;/span&gt; &lt;span class="pl-c1"&gt;:out&lt;/span&gt;]} (&lt;span class="pl-en"&gt;shell/sh&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;curl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-sS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; url)]
    (&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;zero?&lt;/span&gt; exit) out
      (&lt;span class="pl-k"&gt;do&lt;/span&gt; (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ERROR:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; err)
          (&lt;span class="pl-en"&gt;System/exit&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)))))

(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;write-html&lt;/span&gt; [file html]
  (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Writing file:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; file)
  (&lt;span class="pl-en"&gt;spit&lt;/span&gt; file html))

(&lt;span class="pl-k"&gt;let&lt;/span&gt; [[url file] *command-line-args*]
  (&lt;span class="pl-k"&gt;when&lt;/span&gt; (&lt;span class="pl-en"&gt;or&lt;/span&gt; (&lt;span class="pl-en"&gt;empty?&lt;/span&gt; url) (&lt;span class="pl-en"&gt;empty?&lt;/span&gt; file))
    (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Usage: &amp;lt;url&amp;gt; &amp;lt;file&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-en"&gt;System/exit&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
  (&lt;span class="pl-en"&gt;write-html&lt;/span&gt; file (&lt;span class="pl-en"&gt;get-url&lt;/span&gt; url)))

(&lt;span class="pl-en"&gt;System/exit&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;./download_html.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;Usage: &amp;lt;url&amp;gt; &amp;lt;file&amp;gt;&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;./download_html.clj https://www.clojure.org /tmp/clojure.org.html&lt;/span&gt;
&lt;span class="pl-c1"&gt;Fetching url: https://www.clojure.org&lt;/span&gt;
&lt;span class="pl-c1"&gt;Writing file: /tmp/clojure.org.html&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If &lt;code&gt;/usr/bin/env&lt;/code&gt; doesn't work for you, you can use the following workaround:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat script.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="pl-c1"&gt;#_(&lt;/span&gt;
&lt;span class="pl-c1"&gt;   "exec" "bb" "$0" hello "$@"&lt;/span&gt;
&lt;span class="pl-c1"&gt;   )&lt;/span&gt;

&lt;span class="pl-c1"&gt;(prn *command-line-args*)&lt;/span&gt;

&lt;span class="pl-c1"&gt;./script.clj 1 2 3&lt;/span&gt;
&lt;span class="pl-c1"&gt;("hello" "1" "2" "3")&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-preloads" class="anchor" aria-hidden="true" href="#preloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preloads&lt;/h2&gt;
&lt;p&gt;The environment variable &lt;code&gt;BABASHKA_PRELOADS&lt;/code&gt; allows to define code that will be
available in all subsequent usages of babashka.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;BABASHKA_PRELOADS='(defn foo [x] (+ x 2))'&lt;/span&gt;
&lt;span class="pl-c1"&gt;BABASHKA_PRELOADS=$BABASHKA_PRELOADS' (defn bar [x] (* x 2))'&lt;/span&gt;
&lt;span class="pl-c1"&gt;export BABASHKA_PRELOADS&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that you can concatenate multiple expressions. Now you can use these functions in babashka:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(-&amp;gt; (foo *input*) bar)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also preload an entire file using &lt;code&gt;load-file&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;export BABASHKA_PRELOADS='(load-file "my_awesome_prelude.clj")'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;*input*&lt;/code&gt; is not available in preloads.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-classpath" class="anchor" aria-hidden="true" href="#classpath"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Classpath&lt;/h2&gt;
&lt;p&gt;Babashka accepts a &lt;code&gt;--classpath&lt;/code&gt; option that will be used to search for
namespaces and load them:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat src/my/namespace.clj
(&lt;span class="pl-k"&gt;ns&lt;/span&gt; &lt;span class="pl-e"&gt;my.namespace&lt;/span&gt;)
(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;-main&lt;/span&gt; [&amp;amp; _args]
  (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello from my namespace!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

$ bb --classpath src --main my.namespace
Hello from my namespace!&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that you can use the &lt;code&gt;clojure&lt;/code&gt; tool to produce classpaths and download dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat deps.edn&lt;/span&gt;
&lt;span class="pl-c1"&gt;{:deps&lt;/span&gt;
&lt;span class="pl-c1"&gt;  {my_gist_script&lt;/span&gt;
&lt;span class="pl-c1"&gt;    {:git/url "https://gist.github.com/borkdude/263b150607f3ce03630e114611a4ef42"&lt;/span&gt;
&lt;span class="pl-c1"&gt;     :sha "cfc761d06dfb30bb77166b45d439fe8fe54a31b8"}}}&lt;/span&gt;


$ &lt;span class="pl-s1"&gt;CLASSPATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;clojure -Spath&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;bb --classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$CLASSPATH&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --main my-gist-script&lt;/span&gt;
&lt;span class="pl-c1"&gt;Hello from gist script!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there is no &lt;code&gt;--classpath&lt;/code&gt; argument, the &lt;code&gt;BABASHKA_CLASSPATH&lt;/code&gt; environment
variable will be used:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; BABASHKA_CLASSPATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;clojure -Spath&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; BABASHKA_PRELOADS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(require '[my-gist-script])&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;bb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(my-gist-script/-main)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Hello from gist script!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-parsing-command-line-arguments" class="anchor" aria-hidden="true" href="#parsing-command-line-arguments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parsing command line arguments&lt;/h2&gt;
&lt;p&gt;Babashka ships with &lt;code&gt;clojure.tools.cli&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[clojure.tools.cli &lt;span class="pl-c1"&gt;:refer&lt;/span&gt; [parse-opts]])

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;cli-options&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; An option with a required argument&lt;/span&gt;
  [[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--port PORT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Port number&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:default&lt;/span&gt; &lt;span class="pl-c1"&gt;80&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:parse-fn&lt;/span&gt; #(&lt;span class="pl-en"&gt;Integer/parseInt&lt;/span&gt; %)
    &lt;span class="pl-c1"&gt;:validate&lt;/span&gt; [#(&lt;span class="pl-en"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; % &lt;span class="pl-c1"&gt;0x10000&lt;/span&gt;) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Must be a number between 0 and 65536&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]]
   [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--help&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]])

(&lt;span class="pl-c1"&gt;:options&lt;/span&gt; (&lt;span class="pl-en"&gt;parse-opts&lt;/span&gt; *command-line-args* cli-options))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bb script.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;{:port 80}&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;bb script.clj -h&lt;/span&gt;
&lt;span class="pl-c1"&gt;{:port 80, :help true}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-reader-conditionals" class="anchor" aria-hidden="true" href="#reader-conditionals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reader conditionals&lt;/h2&gt;
&lt;p&gt;Babashka supports reader conditionals using the &lt;code&gt;:bb&lt;/code&gt; feature:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example.clj
#?(&lt;span class="pl-c1"&gt;:clj&lt;/span&gt; (&lt;span class="pl-k"&gt;in-ns&lt;/span&gt; 'foo) &lt;span class="pl-c1"&gt;:bb&lt;/span&gt; (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;babashka doesn't support in-ns yet!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

$ ./bb example.clj
babashka doesn't support &lt;span class="pl-k"&gt;in-ns&lt;/span&gt; yet!&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-socket-repl" class="anchor" aria-hidden="true" href="#socket-repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Socket REPL&lt;/h2&gt;
&lt;p&gt;Start the socket REPL like this:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;bb --socket-repl 1666&lt;/span&gt;
&lt;span class="pl-c1"&gt;Babashka socket REPL started at localhost:1666&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can connect with your favorite socket REPL client:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;rlwrap nc 127.0.0.1 1666&lt;/span&gt;
&lt;span class="pl-c1"&gt;Babashka v0.0.14 REPL.&lt;/span&gt;
&lt;span class="pl-c1"&gt;Use :repl/quit or :repl/exit to quit the REPL.&lt;/span&gt;
&lt;span class="pl-c1"&gt;Clojure rocks, Bash reaches.&lt;/span&gt;

&lt;span class="pl-c1"&gt;bb=&amp;gt; (+ 1 2 3)&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb=&amp;gt; :repl/quit&lt;/span&gt;
$&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A socket REPL client for Emacs is
&lt;a href="https://github.com/clojure-emacs/inf-clojure"&gt;inf-clojure&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-spawning-and-killing-a-process" class="anchor" aria-hidden="true" href="#spawning-and-killing-a-process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spawning and killing a process&lt;/h2&gt;
&lt;p&gt;Use the &lt;code&gt;java.lang.ProcessBuilder&lt;/code&gt; class.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;ws&lt;/span&gt; (&lt;span class="pl-en"&gt;-&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;ProcessBuilder.&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-m&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SimpleHTTPServer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1777&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) (&lt;span class="pl-en"&gt;.start&lt;/span&gt;)))
#'user/ws
user=&amp;gt; (&lt;span class="pl-en"&gt;wait/wait-for-port&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1777&lt;/span&gt;)
{&lt;span class="pl-c1"&gt;:host&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:port&lt;/span&gt; &lt;span class="pl-c1"&gt;1777&lt;/span&gt;, &lt;span class="pl-c1"&gt;:took&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}
user=&amp;gt; (&lt;span class="pl-en"&gt;.destroy&lt;/span&gt; ws)
&lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also see this &lt;a href="examples/process_builder.clj"&gt;example&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-async" class="anchor" aria-hidden="true" href="#async"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Async&lt;/h2&gt;
&lt;p&gt;Apart from &lt;code&gt;future&lt;/code&gt; and &lt;code&gt;pmap&lt;/code&gt; for creating threads, you may use the &lt;code&gt;async&lt;/code&gt;
namespace, which maps to &lt;code&gt;clojure.core.async&lt;/code&gt;, for asynchronous scripting. The
following example shows how to get first available value from two different
processes:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;bb '
(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;async-command&lt;/span&gt; [&amp;amp; args]
  (&lt;span class="pl-en"&gt;async/thread&lt;/span&gt; (&lt;span class="pl-en"&gt;apply&lt;/span&gt; shell/sh &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bash&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; args)))

(&lt;span class="pl-en"&gt;-&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;async/alts!!&lt;/span&gt; [(&lt;span class="pl-en"&gt;async-command&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sleep 2 &amp;amp;&amp;amp; echo process 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                   (&lt;span class="pl-en"&gt;async-command&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sleep 1 &amp;amp;&amp;amp; echo process 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)])
    first &lt;span class="pl-c1"&gt;:out&lt;/span&gt; str/trim println)'
process &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-differences-with-clojure" class="anchor" aria-hidden="true" href="#differences-with-clojure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differences with Clojure&lt;/h2&gt;
&lt;p&gt;Babashka is implemented using the &lt;a href="https://github.com/borkdude/sci"&gt;Small Clojure
Interpreter&lt;/a&gt;. This means that a snippet or
script is not compiled to JVM bytecode, but executed form by form by a runtime
which implements a subset of Clojure. Babashka is compiled to a native binary
using &lt;a href="https://github.com/oracle/graal"&gt;GraalVM&lt;/a&gt;. It comes with a selection of
built-in namespaces and functions from Clojure and other useful libraries. The
data types (numbers, strings, persistent collections) are the
same. Multi-threading is supported (&lt;code&gt;pmap&lt;/code&gt;, &lt;code&gt;future&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Differences with Clojure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A subset of Java classes are supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only the &lt;code&gt;clojure.core&lt;/code&gt;, &lt;code&gt;clojure.set&lt;/code&gt;, &lt;code&gt;clojure.string&lt;/code&gt; and &lt;code&gt;clojure.walk&lt;/code&gt;
namespaces are available from Clojure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interpretation comes with overhead. Therefore tight loops are likely slower
than in Clojure on the JVM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No support for unboxed types.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-external-resources" class="anchor" aria-hidden="true" href="#external-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External resources&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-blogs" class="anchor" aria-hidden="true" href="#blogs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blogs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stuartsierra.com/2019/12/21/clojure-start-time-in-2019" rel="nofollow"&gt;Clojure Start Time in 2019&lt;/a&gt; by Stuart Sierra&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lambdaisland.com/blog/2019-12-19-advent-of-parens-19-advent-of-random-hacks" rel="nofollow"&gt;Advent of Random
Hacks&lt;/a&gt;
by Arne Brasseur&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lambdaisland.com/blog/2019-12-05-advent-of-parens-5-clojure-in-the-shell" rel="nofollow"&gt;Clojure in the Shell&lt;/a&gt; by Arne Brasseur&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purelyfunctional.tv/issues/purelyfunctional-tv-newsletter-351-clojure-tool-babashka/" rel="nofollow"&gt;Clojure Tool&lt;/a&gt; by Eric Normand&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-developing-babashka" class="anchor" aria-hidden="true" href="#developing-babashka"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing Babashka&lt;/h2&gt;
&lt;p&gt;To work on Babashka itself make sure Git submodules are checked out.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;git clone https://github.com/borkdude/babashka --recursive&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To update later on:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;git submodule update --recursive&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You need &lt;a href="https://leiningen.org/" rel="nofollow"&gt;Leiningen&lt;/a&gt;, and for building binaries you need GraalVM.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-repl" class="anchor" aria-hidden="true" href="#repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REPL&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;lein repl&lt;/code&gt; will get you a standard REPL/nREPL connection. To work on tests use &lt;code&gt;lein with-profiles +test repl&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-generate-reflectionjson-file" class="anchor" aria-hidden="true" href="#generate-reflectionjson-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate reflection.json file&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;lein with-profiles +reflection run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-test" class="anchor" aria-hidden="true" href="#test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test&lt;/h3&gt;
&lt;p&gt;Test on the JVM (for development):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;script/test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Test the native version:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;BABASHKA_TEST_ENV=native script/test
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h3&gt;
&lt;p&gt;To build this project, set &lt;code&gt;$GRAALVM_HOME&lt;/code&gt; to the GraalVM distribution directory.&lt;/p&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;script/compile
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://planck-repl.org/" rel="nofollow"&gt;planck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/candid82/joker"&gt;joker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dundalek/closh"&gt;closh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anmonteiro/lumo"&gt;lumo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gallery&lt;/h2&gt;
&lt;p&gt;Here's a gallery of more useful examples. Do you have a useful example? PR
welcome!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-delete-a-list-of-files-returned-by-a-unix-command" class="anchor" aria-hidden="true" href="#delete-a-list-of-files-returned-by-a-unix-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Delete a list of files returned by a Unix command&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;find . | grep conflict | bb -i '(doseq [f *input*] (.delete (io/file f)))'
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-calculate-aggregate-size-of-directory" class="anchor" aria-hidden="true" href="#calculate-aggregate-size-of-directory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calculate aggregate size of directory&lt;/h3&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#!&lt;/span&gt;/usr/bin/env bb&lt;/span&gt;

(&lt;span class="pl-en"&gt;as-&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;io/file&lt;/span&gt; (&lt;span class="pl-en"&gt;or&lt;/span&gt; (&lt;span class="pl-en"&gt;first&lt;/span&gt; *command-line-args*) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) $
  (&lt;span class="pl-en"&gt;file-seq&lt;/span&gt; $)
  (&lt;span class="pl-en"&gt;map&lt;/span&gt; #(&lt;span class="pl-en"&gt;.length&lt;/span&gt; %) $)
  (&lt;span class="pl-en"&gt;reduce&lt;/span&gt; + $)
  (&lt;span class="pl-en"&gt;/&lt;/span&gt; $ (&lt;span class="pl-en"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;))
  (&lt;span class="pl-en"&gt;println&lt;/span&gt; (&lt;span class="pl-en"&gt;str&lt;/span&gt; (&lt;span class="pl-en"&gt;int&lt;/span&gt; $) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;dir-size&lt;/span&gt;
&lt;span class="pl-c1"&gt;130M&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;dir-size &lt;span class="pl-k"&gt;~&lt;/span&gt;/Dropbox/bin&lt;/span&gt;
&lt;span class="pl-c1"&gt;233M&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-shuffle-the-lines-of-a-file" class="anchor" aria-hidden="true" href="#shuffle-the-lines-of-a-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shuffle the lines of a file&lt;/h3&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat /tmp/test.txt&lt;/span&gt;
&lt;span class="pl-c1"&gt;1 Hello&lt;/span&gt;
&lt;span class="pl-c1"&gt;2 Clojure&lt;/span&gt;
&lt;span class="pl-c1"&gt;3 Babashka&lt;/span&gt;
&lt;span class="pl-c1"&gt;4 Goodbye&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; /tmp/test.txt bb -io &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(shuffle *input*)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;3 Babashka&lt;/span&gt;
&lt;span class="pl-c1"&gt;2 Clojure&lt;/span&gt;
&lt;span class="pl-c1"&gt;4 Goodbye&lt;/span&gt;
&lt;span class="pl-c1"&gt;1 Hello&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-fetch-latest-github-release-tag" class="anchor" aria-hidden="true" href="#fetch-latest-github-release-tag"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetch latest Github release tag&lt;/h3&gt;
&lt;p&gt;For converting JSON to EDN, see &lt;a href="https://github.com/borkdude/jet"&gt;jet&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;curl -s https://api.github.com/repos/borkdude/babashka/tags &lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;jet --from json --keywordize --to edn |&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb '(-&amp;gt; *input* first :name (subs 1))'&lt;/span&gt;
&lt;span class="pl-c1"&gt;"0.0.4"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-get-latest-os-specific-download-url-from-github" class="anchor" aria-hidden="true" href="#get-latest-os-specific-download-url-from-github"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get latest OS-specific download url from Github&lt;/h3&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;curl -s https://api.github.com/repos/borkdude/babashka/releases &lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;jet --from json --keywordize |&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb '(-&amp;gt; *input* first :assets)' |&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb '(some #(re-find #".*linux.*" (:browser_download_url %)) *input*)'&lt;/span&gt;
&lt;span class="pl-c1"&gt;"https://github.com/borkdude/babashka/releases/download/v0.0.4/babashka-0.0.4-linux-amd64.zip"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-view-download-statistics-from-clojars" class="anchor" aria-hidden="true" href="#view-download-statistics-from-clojars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View download statistics from Clojars&lt;/h3&gt;
&lt;p&gt;Contributed by &lt;a href="https://github.com/plexus"&gt;@plexus&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;curl https://clojars.org/stats/all.edn &lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb -o '(for [[[group art] counts] *input*] (str (reduce + (vals counts))  " " group "/" art))' |&lt;/span&gt;
&lt;span class="pl-c1"&gt;sort -rn |&lt;/span&gt;
&lt;span class="pl-c1"&gt;less&lt;/span&gt;
&lt;span class="pl-c1"&gt;14113842 clojure-complete/clojure-complete&lt;/span&gt;
&lt;span class="pl-c1"&gt;9065525 clj-time/clj-time&lt;/span&gt;
&lt;span class="pl-c1"&gt;8504122 cheshire/cheshire&lt;/span&gt;
&lt;span class="pl-c1"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-portable-tree-command" class="anchor" aria-hidden="true" href="#portable-tree-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Portable tree command&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/borkdude/babashka/blob/master/examples/tree.clj"&gt;examples/tree.clj&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;clojure -Sdeps &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{:deps {org.clojure/tools.cli {:mvn/version "0.4.2"}}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; examples/tree.clj src&lt;/span&gt;
&lt;span class="pl-c1"&gt;src&lt;/span&gt;
&lt;span class="pl-c1"&gt;└── babashka&lt;/span&gt;
&lt;span class="pl-c1"&gt;    ├── impl&lt;/span&gt;
&lt;span class="pl-c1"&gt;    │   ├── tools&lt;/span&gt;
&lt;span class="pl-c1"&gt;    │   │   └── cli.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;...&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;examples/tree.clj src&lt;/span&gt;
&lt;span class="pl-c1"&gt;src&lt;/span&gt;
&lt;span class="pl-c1"&gt;└── babashka&lt;/span&gt;
&lt;span class="pl-c1"&gt;    ├── impl&lt;/span&gt;
&lt;span class="pl-c1"&gt;    │   ├── tools&lt;/span&gt;
&lt;span class="pl-c1"&gt;    │   │   └── cli.clj&lt;/span&gt;
&lt;span class="pl-c1"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-list-outdated-maven-dependencies" class="anchor" aria-hidden="true" href="#list-outdated-maven-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;List outdated maven dependencies&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/borkdude/babashka/blob/master/examples/outdated.clj"&gt;examples/outdated.clj&lt;/a&gt;.
Inspired by an idea from &lt;a href="https://github.com/seancorfield"&gt;@seancorfield&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat /tmp/deps.edn&lt;/span&gt;
&lt;span class="pl-c1"&gt;{:deps {cheshire {:mvn/version "5.8.1"}&lt;/span&gt;
&lt;span class="pl-c1"&gt;        clj-http {:mvn/version "3.4.0"}}}&lt;/span&gt;

$ &lt;span class="pl-s1"&gt;examples/outdated.clj /tmp/deps.edn&lt;/span&gt;
&lt;span class="pl-c1"&gt;clj-http/clj-http can be upgraded from 3.4.0 to 3.10.0&lt;/span&gt;
&lt;span class="pl-c1"&gt;cheshire/cheshire can be upgraded from 5.8.1 to 5.9.0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-convert-projectclj-to-depsedn" class="anchor" aria-hidden="true" href="#convert-projectclj-to-depsedn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Convert project.clj to deps.edn&lt;/h3&gt;
&lt;p&gt;Contributed by &lt;a href="https://github.com/plexus"&gt;@plexus&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;cat project.clj &lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;sed -e 's/#=//g' -e 's/~@//g' -e 's/~//g' |&lt;/span&gt;
&lt;span class="pl-c1"&gt;bb '(let [{:keys [dependencies source-paths resource-paths]} (apply hash-map (drop 3 *input*))]&lt;/span&gt;
&lt;span class="pl-c1"&gt;  {:paths (into source-paths resource-paths)&lt;/span&gt;
&lt;span class="pl-c1"&gt;   :deps (into {} (for [[d v] dependencies] [d {:mvn/version v}]))}) ' |&lt;/span&gt;
&lt;span class="pl-c1"&gt;jet --pretty &amp;gt; deps.edn&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-print-current-time-in-california" class="anchor" aria-hidden="true" href="#print-current-time-in-california"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Print current time in California&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/borkdude/babashka/blob/master/examples/pst.clj"&gt;examples/pst.clj&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.adgoji.com/" rel="nofollow"&gt;adgoji&lt;/a&gt; for financial support&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019 Michiel Borkent&lt;/p&gt;
&lt;p&gt;Distributed under the EPL License. See LICENSE.&lt;/p&gt;
&lt;p&gt;This project contains code from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clojure, which is licensed under the same EPL License.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>borkdude</author><guid isPermaLink="false">https://github.com/borkdude/babashka</guid><pubDate>Tue, 24 Dec 2019 00:04:00 GMT</pubDate></item><item><title>retrogradeorbit/bootleg #5 in Clojure, Today</title><link>https://github.com/retrogradeorbit/bootleg</link><description>&lt;p&gt;&lt;i&gt;Simple template processing command line tool to help build static websites&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/bootleg-logo.svg"&gt;&lt;img src="doc/bootleg-logo.svg" width="100px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-bootleg" class="anchor" aria-hidden="true" href="#bootleg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bootleg&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/retrogradeorbit/bootleg/actions?query=workflow%3A%22Clojure+CI%22"&gt;&lt;img src="https://github.com/retrogradeorbit/bootleg/workflows/Clojure%20CI/badge.svg" alt="Github Action" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Static website generation made simple. A powerful, fast, clojure html templating solution.&lt;/p&gt;
&lt;p&gt;Bootleg is a command line tool that rapidly renders clojure based templates. With inbuilt support for html, hiccup, hickory, selmer, mustache, markdown, enlive, json, yaml and edn, it enables you to pull together disparate elements and glue them together to generate the static website of your dreams.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;Install for Linux:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ curl -LO https://github.com/retrogradeorbit/bootleg/releases/download/v0.1.6-1/bootleg-0.1.6-1-linux-amd64.tgz
$ tar xvf bootleg-0.1.6-1-linux-amd64.tgz
$ mv bootleg &lt;span class="pl-k"&gt;~&lt;/span&gt;/bin&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install for MacOS:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ curl -LO https://github.com/retrogradeorbit/bootleg/releases/download/v0.1.6-1/bootleg-0.1.6-1-macos-amd64.zip
$ unzip bootleg-0.1.6-1-macos-amd64.zip
$ mv bootleg /usr/local/bin&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Clone this repository and change into the &lt;code&gt;examples/quickstart&lt;/code&gt; directory:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://github.com/retrogradeorbit/bootleg.git
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; bootleg/examples/quickstart&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A simple page:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-simple.clj
[&lt;span class="pl-c1"&gt;:html&lt;/span&gt;
 [&lt;span class="pl-c1"&gt;:body&lt;/span&gt;
  [&lt;span class="pl-c1"&gt;:h1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A simple webpage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
  [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Made with bootleg for maximum powers!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]]]&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg example-simple.clj
&amp;lt;&lt;span class="pl-ent"&gt;html&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;body&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;A simple webpage&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;Made with bootleg for maximum powers!&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;body&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;html&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A dynamic example:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-dynamic.clj
[&lt;span class="pl-c1"&gt;:div.countdown&lt;/span&gt;
 (&lt;span class="pl-k"&gt;for&lt;/span&gt; [n (&lt;span class="pl-en"&gt;range&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;-1&lt;/span&gt;)]
   [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; n])
 [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;blast off!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]]&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg example-dynamic.clj
&amp;lt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-e"&gt;class&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;10&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;9&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;8&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;7&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;6&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;5&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;4&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;3&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;2&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;1&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;blast off!&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mustache:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-mustache.clj
(&lt;span class="pl-en"&gt;mustache&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;quickstart.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;yaml&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fields.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ cat quickstart.html
&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;{{ title }}&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;by {{ author }}&amp;lt;/&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;{{&amp;amp; body }}&amp;lt;/&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;$ cat fields.yml&lt;/span&gt;
&lt;span class="pl-ent"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;Bootleg&lt;/span&gt;
&lt;span class="pl-ent"&gt;author&lt;/span&gt;: &lt;span class="pl-s"&gt;Crispin&lt;/span&gt;
&lt;span class="pl-ent"&gt;body&lt;/span&gt;: &lt;span class="pl-s"&gt;I'm going to rewrite all my sites with this!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg example-mustache.clj
&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;Bootleg&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;by Crispin&amp;lt;/&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;I'm going to rewrite all my sites with this!&amp;lt;/&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Markdown support. Evaluate from command line. Easy downloading of resources by url (for any command):&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg -e '(markdown "https://raw.githubusercontent.com/retrogradeorbit/bootleg/master/README.md")'
&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;bootleg&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;Static website generation made simple. A powerful, fast, clojure templating solution that rocks!...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CSS selector based processing. The magic of enlive:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-enlive.clj
(&lt;span class="pl-en"&gt;-&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;markdown&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simple.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-en"&gt;enlive/at&lt;/span&gt; [&lt;span class="pl-c1"&gt;:p&lt;/span&gt;] (&lt;span class="pl-en"&gt;enlive/set-attr&lt;/span&gt; &lt;span class="pl-c1"&gt;:style&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color:green;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-gfm"&gt;&lt;pre&gt;$ cat simple.md
&lt;span class="pl-mh"&gt;&lt;span class="pl-mh"&gt;#&lt;/span&gt;&lt;span class="pl-mh"&gt; &lt;/span&gt;Markdown support&lt;/span&gt;

This is some simple markdown&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg example-enlive.clj
&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;Markdown support&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt; &lt;span class="pl-e"&gt;style&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-c1"&gt;color&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;green&lt;/span&gt;;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;This is some simple markdown&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Combine hiccup, mustache, markdown and enlive processing:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-combine.clj
(&lt;span class="pl-en"&gt;mustache&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;quickstart.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
          (&lt;span class="pl-en"&gt;assoc&lt;/span&gt; (&lt;span class="pl-en"&gt;yaml&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fields.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                 &lt;span class="pl-c1"&gt;:body&lt;/span&gt; (&lt;span class="pl-en"&gt;markdown&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simple.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:html&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;$ bootleg example-combine.clj
&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;Bootleg&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;by Crispin&amp;lt;/&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;Markdown support&amp;lt;/&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;This is some simple markdown&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Data output with -d flag:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ cat example-data.clj
(&lt;span class="pl-en"&gt;-&amp;gt;&lt;/span&gt; (&lt;span class="pl-en"&gt;mustache&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;quickstart.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
              (&lt;span class="pl-en"&gt;assoc&lt;/span&gt; (&lt;span class="pl-en"&gt;yaml&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fields.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                     &lt;span class="pl-c1"&gt;:body&lt;/span&gt; (&lt;span class="pl-en"&gt;markdown&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simple.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:html&lt;/span&gt;)))
    (&lt;span class="pl-en"&gt;convert-to&lt;/span&gt; &lt;span class="pl-c1"&gt;:hickory-seq&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d example-data.clj
({&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;, &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil, &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:h1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bootleg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 {&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;, &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil, &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:h2&lt;/span&gt;, &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;by Crispin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 {&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil,
  &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:div&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [{&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;,
             &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil,
             &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:h1&lt;/span&gt;,
             &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Markdown support&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}
            {&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;,
             &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil,
             &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:p&lt;/span&gt;,
             &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This is some simple markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}]}
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ bootleg example-data.clj          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; &amp;lt;- no -d flag means output will be html&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;h&lt;span class="pl-k"&gt;1&amp;gt;&lt;/span&gt;Bootleg&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;/h&lt;span class="pl-k"&gt;1&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;h&lt;span class="pl-k"&gt;2&amp;gt;&lt;/span&gt;by Crispin&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;/h&lt;span class="pl-k"&gt;2&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&amp;gt;&amp;lt;h&lt;span class="pl-k"&gt;1&amp;gt;&lt;/span&gt;Markdown support&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;/h1&amp;gt;&amp;lt;p&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;This is some simple markdown&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;/p&amp;gt;&amp;lt;/div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Bootleg is distributed for linux as a single executable file. Download the latest tarball from &lt;a href="https://github.com/retrogradeorbit/bootleg/releases"&gt;https://github.com/retrogradeorbit/bootleg/releases&lt;/a&gt; and then extract it. Once extracted, move the binary to your path. For system wide installation try &lt;code&gt;/usr/local/bin&lt;/code&gt; or for personal use &lt;code&gt;~/bin&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ curl -LO https://github.com/retrogradeorbit/bootleg/releases/download/v0.1.6-1/bootleg-0.1.6-1-linux-amd64.tgz
$ tar xvf bootleg-0.1.6-1-linux-amd64.tgz
$ mv bootleg /usr/local/bin&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-other-platforms" class="anchor" aria-hidden="true" href="#other-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Platforms&lt;/h3&gt;
&lt;p&gt;Windows support is experimental. Download (&lt;a href="https://github.com/retrogradeorbit/bootleg/releases/download/v0.1.6-1/bootleg-0.1.6-1-windows-amd64.zip"&gt;https://github.com/retrogradeorbit/bootleg/releases/download/v0.1.6-1/bootleg-0.1.6-1-windows-amd64.zip&lt;/a&gt;) and unzip the archive. Copy the bootleg.exe binary to somewhere on your path.&lt;/p&gt;
&lt;p&gt;The jar release file is also an option if you have java installed. You can run it as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ java -jar bootleg-0.1.6-1.jar&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Run at the command line for options:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ bootleg -h
Static website generation made simple. A powerful, fast, clojure html templating solution.

Usage: bootleg [options] [clj-file]

Options:
  -h, --help           Print the &lt;span class="pl-c1"&gt;command&lt;/span&gt; line &lt;span class="pl-c1"&gt;help&lt;/span&gt;
  -v, --version        Print the version string and &lt;span class="pl-c1"&gt;exit&lt;/span&gt;
  -e, --evaluate CODE  Pass &lt;span class="pl-k"&gt;in&lt;/span&gt; the hiccup to evaluate on the &lt;span class="pl-c1"&gt;command&lt;/span&gt; line
  -d, --data           Output the rendered template as a clojure form instead of html
  -o, --output FILE    Write the output to the specified file instead of stdout
  -t, --traceback      Print the full exception traceback
  -c, --colour         Print outputs &lt;span class="pl-k"&gt;in&lt;/span&gt; colour where appropriate
      --color          Alias &lt;span class="pl-k"&gt;for&lt;/span&gt; --colour&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;bootleg&lt;/code&gt; loads and evaluates the clj file specified on the command line, or evaluates the &lt;code&gt;CODE&lt;/code&gt; form specified in the -e flag. The code can return any of the supported data structures listed below. &lt;code&gt;bootleg&lt;/code&gt; will then automatically convert that format into html and write it out to standard out, or to &lt;code&gt;FILE&lt;/code&gt; if specified. This conversion to html step can be prevented by calling with the &lt;code&gt;-d&lt;/code&gt; flag. In this case the output will be a pretty formatted edn form of the output data structure.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bootleg&lt;/code&gt; supports five main markup data structures. Three are more flexible. And two are limited. We will begin describing the two limited data structures and why they are limited.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hiccup" class="anchor" aria-hidden="true" href="#hiccup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hiccup&lt;/h3&gt;
&lt;p&gt;Hiccup is a standard clojure DSL syntax for representing markup as nested sequences of vectors, and is represented in option flags by the keyword &lt;code&gt;:hiccup&lt;/code&gt;. An example of some hiccup: the html &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;This is an example&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; is represented in hiccup as &lt;code&gt;[:div [:p "This is an example"]]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hiccup, as the term is used in bootleg, is refering to this vector form. It represents a single root element and its children. This means there are template fragments that &lt;em&gt;cannot&lt;/em&gt; be represented like this. For example, the html snippet &lt;code&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;/code&gt; cannot be represented as hiccup. It is comprised of two hiccup forms. &lt;code&gt;[:p "one"]&lt;/code&gt; and &lt;code&gt;[:p "two"]&lt;/code&gt;. See &lt;code&gt;hiccup-seq&lt;/code&gt; below for information about this form.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hickory" class="anchor" aria-hidden="true" href="#hickory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hickory&lt;/h3&gt;
&lt;p&gt;Hickory is a format used to internally represent document trees in clojure for programmatic processing. In option flags it is referenced by the keyword &lt;code&gt;:hickory&lt;/code&gt;. It is very verbose and not suitable to write by hand. It is supported internally for passing between functions that use it. A simple example of some hickory: the html &lt;code&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&lt;/code&gt; is represented in hickory as &lt;code&gt;{:type :element, :attrs nil, :tag :p, :content ["one"]}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Both the hickory and enlive clojure projects use this format internally to represent and manipulate DOM trees.&lt;/p&gt;
&lt;p&gt;Hickory, as the term is used in bootleg, is refering to this hashmap form. It represents a single root element and its children. This means there are template fragments that &lt;em&gt;cannot&lt;/em&gt; be represented in hickory. For example, the html snippet &lt;code&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;/code&gt; cannot be represented as hickory. It is comprised of two hickory forms. &lt;code&gt;{:type :element, :attrs nil, :tag :p, :content ["one"]}&lt;/code&gt; and &lt;code&gt;{:type :element, :attrs nil, :tag :p, :content ["two"]}&lt;/code&gt;. See &lt;code&gt;hickory-seq&lt;/code&gt; below for information about this form.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hiccup-seq" class="anchor" aria-hidden="true" href="#hiccup-seq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hiccup-seq&lt;/h3&gt;
&lt;p&gt;Hiccup-seq is simply a clojure sequence (or vector) of hiccup forms. In option flags it is referenced by the keyword &lt;code&gt;:hiccup-seq&lt;/code&gt;. By wrapping multiple hiccup forms in a sequence, hiccup-seq can represent any single root element (and it's children) &lt;em&gt;and&lt;/em&gt; any template fragment composed of sibling elements.&lt;/p&gt;
&lt;p&gt;For example: the html snippet &lt;code&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;/code&gt; is represented in hiccup-seq as: &lt;code&gt;([:p "one"] [:p "two"])&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hickory-seq" class="anchor" aria-hidden="true" href="#hickory-seq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hickory-seq&lt;/h3&gt;
&lt;p&gt;Hickory-seq is simply a clojure sequence (or vector) of hickory forms. In option flags it is referenced by the keyword &lt;code&gt;:hickory-seq&lt;/code&gt;. By wrapping multiple hickory forms in a sequence, hickory-seq can represent any single root element (and it's children) &lt;em&gt;and&lt;/em&gt; any template fragment composed of sibling elements.&lt;/p&gt;
&lt;p&gt;For example: the html snippet &lt;code&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;/code&gt; is represented in hickory-seq as: &lt;code&gt;({:type :element, :attrs nil, :tag :p, :content ["one"]} {:type :element, :attrs nil, :tag :p, :content ["two"]})&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-html" class="anchor" aria-hidden="true" href="#html"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;html&lt;/h3&gt;
&lt;p&gt;html (or any type of xml) is represented internally as a string. This is a flexible type and can hold a root element and children, or a number of sibling elements sequentially.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-inbuilt-functions" class="anchor" aria-hidden="true" href="#inbuilt-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inbuilt functions&lt;/h2&gt;
&lt;p&gt;The following functions are inbuilt into the clojure interpreter:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-markup-processing-functions" class="anchor" aria-hidden="true" href="#markup-processing-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Markup Processing Functions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-markdown" class="anchor" aria-hidden="true" href="#markdown"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;markdown&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(markdown source &amp;amp; options)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load the markdown from the file specified in &lt;code&gt;source&lt;/code&gt; and render it. &lt;code&gt;source&lt;/code&gt; can be a local file path (relative to the executing hiccup file location) or a URL to gather the markdown from.&lt;/p&gt;
&lt;p&gt;Options can be used to alter the behaviour of the function. Options are a list of keywords and can be specified in any order after the source parameter. Options can be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:data&lt;/code&gt; Interpret the &lt;code&gt;source&lt;/code&gt; argument as markdown data, not a file to load&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup-seq&lt;/code&gt; Return the rendered markdown as a hiccup sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory-seq&lt;/code&gt; Return the rendered markdown as a hickory sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:html&lt;/code&gt; Return the rendered markdown as an html string&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -e '(markdown &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;# heading&lt;span class="pl-cce"&gt;\n&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt;)'
&amp;lt;h1&amp;gt;heading&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;paragraph&amp;lt;/p&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(markdown &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;# heading&lt;span class="pl-cce"&gt;\n&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:hickory-seq&lt;/span&gt;)'
({&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;, &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil, &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:h1&lt;/span&gt;, &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;heading&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}
 {&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;, &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; nil, &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:p&lt;/span&gt;, &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]})&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(markdown &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;# heading&lt;span class="pl-cce"&gt;\n&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup-seq&lt;/span&gt;)'
([&lt;span class="pl-c1"&gt;:h1&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;heading&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(markdown &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;# heading&lt;span class="pl-cce"&gt;\n&lt;/span&gt;paragraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:html&lt;/span&gt;)'
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;h1&amp;gt;heading&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;paragraph&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-mustache" class="anchor" aria-hidden="true" href="#mustache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mustache&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(mustache source vars &amp;amp; options)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load a mustache template from the file specified in &lt;code&gt;source&lt;/code&gt; and render it substituting the vars from &lt;code&gt;vars&lt;/code&gt;. &lt;code&gt;source&lt;/code&gt; can be a local file path (relative to the executing hiccup file location) or a URL to gather the markdown from.&lt;/p&gt;
&lt;p&gt;Options can be used to alter the behaviour of the function. Options are a list of keywords and can be specified in any order after the source parameter. Options can be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:data&lt;/code&gt; Interpret the &lt;code&gt;source&lt;/code&gt; argument as mustache data, not a file to load&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup&lt;/code&gt; Return the rendered mustache as hiccup&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup-seq&lt;/code&gt; Return the rendered mustache as a hiccup sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory&lt;/code&gt; Return the rendered mustache as hickory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory-seq&lt;/code&gt; Return the rendered mustache as a hickory sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:html&lt;/code&gt; Return the rendered mustache as an html string&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -e '(mustache &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;{{var1}}&amp;lt;/p&amp;gt;&amp;lt;div&amp;gt;{{&amp;amp;var2}}&amp;lt;/div&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:var1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:var2&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;markup&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-c1"&gt;:data&lt;/span&gt;)'
&amp;lt;p&amp;gt;value &lt;span class="pl-c1"&gt;1&lt;/span&gt;&amp;lt;/p&amp;gt;&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;markup&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(mustache &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;{{var1}}&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:var1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup-seq&lt;/span&gt;)'
([&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-selmer" class="anchor" aria-hidden="true" href="#selmer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;selmer&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(selmer source vars &amp;amp; options)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load a selmer template from the file specified in &lt;code&gt;source&lt;/code&gt; and render it substituting the vars from &lt;code&gt;vars&lt;/code&gt;. &lt;code&gt;source&lt;/code&gt; can be a local file path (relative to the executing hiccup file location) or a URL to gather the markdown from.&lt;/p&gt;
&lt;p&gt;Options can be used to alter the behaviour of the function. Options are a list of keywords and can be specified in any order after the source parameter. Options can be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:data&lt;/code&gt; Interpret the &lt;code&gt;source&lt;/code&gt; argument as selmer data, not a file to load&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup&lt;/code&gt; Return the rendered selmer as hiccup&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup-seq&lt;/code&gt; Return the rendered selmer as a hiccup sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory&lt;/code&gt; Return the rendered selmer as hickory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory-seq&lt;/code&gt; Return the rendered selmer as a hickory sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:html&lt;/code&gt; Return the rendered selmer as an html string&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -e '(selmer &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;Hello {{name|capitalize}}!&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-c1"&gt;:data&lt;/span&gt;)'
&amp;lt;p&amp;gt;Hello World!&amp;lt;/p&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(selmer &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;Hello {{name|capitalize}}!&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup-seq&lt;/span&gt;)'
([&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;selmer&lt;/code&gt; namespaces are also provided at their usual namespace locations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;selmer.filter-parser&lt;/li&gt;
&lt;li&gt;selmer.filters&lt;/li&gt;
&lt;li&gt;selmer.middleware&lt;/li&gt;
&lt;li&gt;selmer.node&lt;/li&gt;
&lt;li&gt;selmer.parser&lt;/li&gt;
&lt;li&gt;selmer.tags&lt;/li&gt;
&lt;li&gt;selmer.template-parser&lt;/li&gt;
&lt;li&gt;selmer.util&lt;/li&gt;
&lt;li&gt;selmer.validator&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-slurp" class="anchor" aria-hidden="true" href="#slurp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;slurp&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(slurp source)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load the contents of a file, from a local or remote source, into memory and return it. This &lt;code&gt;slurp&lt;/code&gt; can load from URLs. Does no interpretation of the file contents at all. Returns them as is.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-html-1" class="anchor" aria-hidden="true" href="#html-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;html&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(html source &amp;amp; options)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Loads the contents of a html or xml file and returns them in &lt;code&gt;:hiccup-seq&lt;/code&gt; (by default).&lt;/p&gt;
&lt;p&gt;Options can be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:data&lt;/code&gt; Interpret the &lt;code&gt;source&lt;/code&gt; argument as markdown data, not a file to load&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup&lt;/code&gt; Return the rendered markdown as hiccup&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hiccup-seq&lt;/code&gt; Return the rendered markdown as a hiccup sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory&lt;/code&gt; Return the rendered markdown as hickory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hickory-seq&lt;/code&gt; Return the rendered markdown as a hickory sequence data structure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:html&lt;/code&gt; Return the rendered markdown as an html string&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(html &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;h1&amp;gt;heading&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;body&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup-seq&lt;/span&gt;)'
([&lt;span class="pl-c1"&gt;:h1&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;heading&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(html &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;div&amp;gt;&amp;lt;h1&amp;gt;heading&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;body&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:data&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup&lt;/span&gt;)'
[&lt;span class="pl-c1"&gt;:div&lt;/span&gt; {} [&lt;span class="pl-c1"&gt;:h1&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;heading&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-hiccup-1" class="anchor" aria-hidden="true" href="#hiccup-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hiccup&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(hiccup source)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Loads and evaluates the clojure source from another file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-filesystem-functions" class="anchor" aria-hidden="true" href="#filesystem-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filesystem Functions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-glob" class="anchor" aria-hidden="true" href="#glob"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;glob&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(glob pattern)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Returns a sequence of files that match the globbing pattern &lt;code&gt;pattern&lt;/code&gt;. Supports &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;[abc]&lt;/code&gt;, &lt;code&gt;[a-z]&lt;/code&gt;, &lt;code&gt;[!a]&lt;/code&gt; and relative file paths &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt;. File paths are returned relative to the directory of the executing file.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ bootleg -d -e &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(glob "**/*.y?l")&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.github/workflows/deploy.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.circleci/config.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;examples/quickstart/fields.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test/files/simple.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-symlink" class="anchor" aria-hidden="true" href="#symlink"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;symlink&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(symlink link target)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Make a symlink from &lt;code&gt;link&lt;/code&gt; to &lt;code&gt;target&lt;/code&gt;. Operates idempotently. If the link already exists it does nothing. If the &lt;code&gt;link&lt;/code&gt; exists but points to another target, changes the link to point to the specified &lt;code&gt;target&lt;/code&gt;. If the &lt;code&gt;link&lt;/code&gt; exists but is not a symbolic link, throws an exception. On success returns the path of the link.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-mkdir" class="anchor" aria-hidden="true" href="#mkdir"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mkdir&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(mkdir path)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Make a directory &lt;code&gt;path&lt;/code&gt;. Does not create any parent directories. Operates idempotently. If the direcotry exists, it does nothing. Otherwise it tries to create the directory. On success it returns the directory path.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-mkdirs" class="anchor" aria-hidden="true" href="#mkdirs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mkdirs&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(mkdirs path)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Make a directory &lt;code&gt;path&lt;/code&gt; including all the parent directories. Operates idempotently. If the direcotry exists, it does nothing. Otherwise it tries to create the directories. On success it returns the final directory path.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-spit" class="anchor" aria-hidden="true" href="#spit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;spit&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(spit filename data)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Write &lt;code&gt;data&lt;/code&gt; into the specified &lt;code&gt;filename&lt;/code&gt;. The filename is interpereted relative to the path of the current script.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-var-loading-functions" class="anchor" aria-hidden="true" href="#var-loading-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Var Loading Functions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-yaml" class="anchor" aria-hidden="true" href="#yaml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;yaml&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(yaml source)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load yaml data from &lt;code&gt;source&lt;/code&gt; and process it. Returns the parsed data structure.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-json" class="anchor" aria-hidden="true" href="#json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;json&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(json source)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load json data from &lt;code&gt;source&lt;/code&gt; and process it. Returns the parsed data structure.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-edn" class="anchor" aria-hidden="true" href="#edn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;edn&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(edn source)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Load edn data from &lt;code&gt;source&lt;/code&gt; and process it. Returns the parsed data structure.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-testing" class="anchor" aria-hidden="true" href="#data-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Testing&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-is-hiccup" class="anchor" aria-hidden="true" href="#is-hiccup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;is-hiccup?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(is-hiccup? data)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Test the markup in &lt;code&gt;data&lt;/code&gt;. Return &lt;code&gt;true&lt;/code&gt; if the data is a hiccup form.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-is-hiccup-seq" class="anchor" aria-hidden="true" href="#is-hiccup-seq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;is-hiccup-seq?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(is-hiccup-seq? data)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Test the markup in &lt;code&gt;data&lt;/code&gt;. Return &lt;code&gt;true&lt;/code&gt; if the data is a sequence of hiccup forms.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-is-hickory" class="anchor" aria-hidden="true" href="#is-hickory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;is-hickory?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(is-hickory? data)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Test the markup in &lt;code&gt;data&lt;/code&gt;. Return &lt;code&gt;true&lt;/code&gt; if the data is a hickory form.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-is-hickory-seq" class="anchor" aria-hidden="true" href="#is-hickory-seq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;is-hickory-seq?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(is-hickory-seq? data)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Test the markup in &lt;code&gt;data&lt;/code&gt;. Return &lt;code&gt;true&lt;/code&gt; if the data is a sequence of hickory forms.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-conversion" class="anchor" aria-hidden="true" href="#data-conversion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Conversion&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-convert-to" class="anchor" aria-hidden="true" href="#convert-to"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;convert-to&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(convert-to data type)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Convert one supported data type to another. Input data may be hiccup, hiccup-seq, hickory, hickory-seq or html.&lt;/p&gt;
&lt;p&gt;Type may be &lt;code&gt;:hiccup&lt;/code&gt;, &lt;code&gt;:hiccup-seq&lt;/code&gt;, &lt;code&gt;:hickory&lt;/code&gt;, &lt;code&gt;:hickory-seq&lt;/code&gt; or &lt;code&gt;:html&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(convert-to [&lt;span class="pl-c1"&gt;:p#id.class&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c1"&gt;:hickory&lt;/span&gt;)'
{&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt;,
 &lt;span class="pl-c1"&gt;:attrs&lt;/span&gt; {&lt;span class="pl-c1"&gt;:class&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;class&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:id&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
 &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:p&lt;/span&gt;,
 &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(convert-to &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p class=&lt;span class="pl-cce"&gt;\"&lt;/span&gt;class&lt;span class="pl-cce"&gt;\"&lt;/span&gt; id=&lt;span class="pl-cce"&gt;\"&lt;/span&gt;id&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&amp;gt;one&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup&lt;/span&gt;)'
[&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {&lt;span class="pl-c1"&gt;:class&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;class&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:id&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(convert-to &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup-seq&lt;/span&gt;)'
([&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] [&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(convert-to {&lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-c1"&gt;:element&lt;/span&gt; &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-c1"&gt;:p&lt;/span&gt; &lt;span class="pl-c1"&gt;:content&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]} &lt;span class="pl-c1"&gt;:html&lt;/span&gt;)'
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some conversions are lossy. Converting from html or any *-seq data type to hickory or hiccup may lose forms. Only the last form will be returned.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;$ bootleg -d -e '(convert-to &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;p&amp;gt;one&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;two&amp;lt;/p&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:hiccup&lt;/span&gt;)'
[&lt;span class="pl-c1"&gt;:p&lt;/span&gt; {} &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-as-html" class="anchor" aria-hidden="true" href="#as-html"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;as-html&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(as-html data)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Convert any supported input format passed into &lt;code&gt;data&lt;/code&gt; to html output. Same as &lt;code&gt;(convert-to data :html)&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-enlive-processing" class="anchor" aria-hidden="true" href="#enlive-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enlive Processing&lt;/h3&gt;
&lt;p&gt;Enlive html functions are to be found in the &lt;code&gt;enlive&lt;/code&gt; namespace. A new version of &lt;code&gt;at&lt;/code&gt; is supplied that provides automatic type coercion for the inputs and outputs.&lt;/p&gt;
&lt;p&gt;In addition to this the standard enlive namespaces are available in their usual locations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;net.cgrand.enlive-html&lt;/li&gt;
&lt;li&gt;net.cgrand.jsoup&lt;/li&gt;
&lt;li&gt;net.cgrand.tagsoup&lt;/li&gt;
&lt;li&gt;net.cgrand.xml&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-at" class="anchor" aria-hidden="true" href="#at"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;at&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(at data selector transform &amp;amp; more)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Take the markup &lt;code&gt;data&lt;/code&gt; and process every element matching &lt;code&gt;selector&lt;/code&gt; through the transform &lt;code&gt;transform&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-deftemplate" class="anchor" aria-hidden="true" href="#deftemplate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;deftemplate&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(deftemplate name source args &amp;amp; forms)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Defines a template as a function that returns a &lt;em&gt;hiccup-seq&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;** Note ** the original deftemplate returned a sequence of strings&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-defsnippet" class="anchor" aria-hidden="true" href="#defsnippet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;defsnippet&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(defsnippet name source selector args &amp;amp; forms)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Define a named snippet -- equivalent to (def name (snippet source selector args ...)).&lt;/p&gt;
&lt;p&gt;Returns a hickory-seq on nodes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-enlive-transforms" class="anchor" aria-hidden="true" href="#enlive-transforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enlive Transforms&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-content" class="anchor" aria-hidden="true" href="#content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(content &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replaces the content of the element. Values can be any supported formats: hickory, hickory-seq, hiccup, hiccup-seq or html.&lt;/p&gt;
&lt;p&gt;** note: ** This is different to the standard enlive &lt;code&gt;content&lt;/code&gt; function. The standard function is present as &lt;code&gt;content*&lt;/code&gt;. Passing html to &lt;code&gt;content&lt;/code&gt; will embed that markup in the output. In contrast, passing html to &lt;code&gt;content*&lt;/code&gt; will insert that html in an escaped form.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-html-snippet" class="anchor" aria-hidden="true" href="#html-snippet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;html-snippet&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(html-snippet &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Concatenate values as a string and then parse it with tagsoup. html-snippet doesn't insert missing  or  tags.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-html-content" class="anchor" aria-hidden="true" href="#html-content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;html-content&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(html-content &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replaces the content of the element. Values are strings containing html code. This is present for backwards compatibility. The new &lt;code&gt;content&lt;/code&gt; function can take and embed html code and should be used instead.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-wrap" class="anchor" aria-hidden="true" href="#wrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;wrap&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(wrap tag attr)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Wraps selected node into the given tag. eg. &lt;code&gt;(wrap :div)&lt;/code&gt; or &lt;code&gt;(wrap :div {:class "foo"})&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-unwrap" class="anchor" aria-hidden="true" href="#unwrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unwrap&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;unwrap&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Opposite to wrap, returns the content of the selected node.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-set-attr" class="anchor" aria-hidden="true" href="#set-attr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set-attr&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(set-attr &amp;amp; key-value-pairs)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Assocs attributes on the selected element. eg. &lt;code&gt;(set-attr :attr1 "val1" :attr2 "val2")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-remove-attr" class="anchor" aria-hidden="true" href="#remove-attr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;remove-attr&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(remove-attr &amp;amp; attr-names)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Sets given key value pairs as attributes for selected node. eg. &lt;code&gt;(remove-attr :attr1 :attr2)&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-add-class" class="anchor" aria-hidden="true" href="#add-class"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;add-class&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(add-class &amp;amp; classes)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Adds class(es) to the selected node. eg. &lt;code&gt;(add-class "foo" "bar")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-remove-class" class="anchor" aria-hidden="true" href="#remove-class"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;remove-class&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(add-class &amp;amp; classes)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Removes class(es) from the selected node. eg. &lt;code&gt;(remove-class "foo" "bar")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-do-" class="anchor" aria-hidden="true" href="#do-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;do-&amp;gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(do-&amp;gt; &amp;amp; fns)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Chains (composes) several transformations. Applies functions from left to right. eg. &lt;code&gt;(do-&amp;gt; transformation1 transformation2)&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-append" class="anchor" aria-hidden="true" href="#append"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;append&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(append &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Appends the values to the content of the selected element. eg. &lt;code&gt;(append "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Values can be any supported formats: hickory, hickory-seq, hiccup, hiccup-seq or html.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-prepend" class="anchor" aria-hidden="true" href="#prepend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;prepend&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(prepend &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Prepends the values to the content of the selected element. eg. &lt;code&gt;(prepend "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Values can be any supported formats: hickory, hickory-seq, hiccup, hiccup-seq or html.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-after" class="anchor" aria-hidden="true" href="#after"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;after&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(after &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Inserts the values after the current selection (node or fragment). eg. &lt;code&gt;(after "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Values can be any supported formats: hickory, hickory-seq, hiccup, hiccup-seq or html.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-before" class="anchor" aria-hidden="true" href="#before"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;before&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(before &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Inserts the values before the current selection (node or fragment). eg. &lt;code&gt;(before "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Values can be any supported formats: hickory, hickory-seq, hiccup, hiccup-seq or html.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-substitute" class="anchor" aria-hidden="true" href="#substitute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;substitute&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(substitute &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replaces the current selection (node or fragment). eg. &lt;code&gt;(substitute "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Values can be any supported formats: hickory, hickory-seq, hiccup, hiccup-seq or html.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-move" class="anchor" aria-hidden="true" href="#move"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;move&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(move src-selector dest-selector)&lt;/code&gt;
&lt;code&gt;(src-selector dest-selector combiner)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Takes all nodes (under the current element) matched by src-selector, removes them and combines them with the elements matched by dest-selector. eg. &lt;code&gt;(move [:.footnote] [:#footnotes] content)&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-content-1" class="anchor" aria-hidden="true" href="#content-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content*&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(content* &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The original enlive content transformer. Replaces the content of the element. Values can be hickory nodes, collection of hikory nodes, or plain text strings.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-append-1" class="anchor" aria-hidden="true" href="#append-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;append*&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(append* &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The original enlive append transformer. Appends the values to the content of the selected element. eg. &lt;code&gt;(append "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-prepend-1" class="anchor" aria-hidden="true" href="#prepend-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;prepend*&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(prepend* &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The original enlive prepend transformer. Prepends the values to the content of the selected element. eg. &lt;code&gt;(prepend "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-after-1" class="anchor" aria-hidden="true" href="#after-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;after*&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(after* &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The original enlive after transformer. Inserts the values after the current selection (node or fragment). eg. &lt;code&gt;(after "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-before-1" class="anchor" aria-hidden="true" href="#before-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;before*&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(before* &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The original enlive before transformer. Inserts the values before the current selection (node or fragment). eg. &lt;code&gt;(before "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-substitute-1" class="anchor" aria-hidden="true" href="#substitute-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;substitute*&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(substitute* &amp;amp; values)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The original enlive substitute transformer. Replaces the current selection (node or fragment). eg. &lt;code&gt;(substitute "xyz" a-node "abc")&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hickory-1" class="anchor" aria-hidden="true" href="#hickory-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hickory&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;hickory&lt;/code&gt; namespaces are provided at their usual namespace locations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hickory.convert&lt;/li&gt;
&lt;li&gt;hickory.hiccup-utils&lt;/li&gt;
&lt;li&gt;hickory.render&lt;/li&gt;
&lt;li&gt;hickory.select&lt;/li&gt;
&lt;li&gt;hickory.utils&lt;/li&gt;
&lt;li&gt;hickory.zip&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-functions" class="anchor" aria-hidden="true" href="#other-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Functions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-pprint" class="anchor" aria-hidden="true" href="#pprint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pprint&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(pprint form)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pretty print to stdout the passed in form. If &lt;code&gt;--colour&lt;/code&gt; is passed on command line then print with colour highlighting.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-parse-string" class="anchor" aria-hidden="true" href="#parse-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;parse-string&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;(parse-string string)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Parse the passed in string into a clojure type. Useful for converting strings to numbers, keywords, vectors or hashmaps. A binding of &lt;a href="https://github.com/borkdude/edamame"&gt;edamame's&lt;/a&gt; &lt;code&gt;parse-string&lt;/code&gt; is used for parsing.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-executable" class="anchor" aria-hidden="true" href="#building-the-executable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the executable&lt;/h2&gt;
&lt;p&gt;Ensure graalvm community edition 19.3.0 is installed in your home directory and the native image extension is also installed.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make clean
$ make all&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The compiled file will be at &lt;code&gt;build/bootleg&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To use a different version of graal or one installed in a different path, add the GRAALVM suffix like:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make all GRAALVM_HOME=/path/to/graal-vm&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;The following are some example sites built using bootleg for you to use as inspiration, or as a base for your own work.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/epiccastle/epiccastle.io"&gt;epiccastle.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-submit-your-own-example" class="anchor" aria-hidden="true" href="#submit-your-own-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submit Your Own Example&lt;/h3&gt;
&lt;p&gt;Have you built a website with bootleg? Is the source of this website open source? If so &lt;a href="https://github.com/retrogradeorbit/bootleg/issues/new"&gt;open an issue&lt;/a&gt; on the project with a link to your github project with the source tree in it and I will add it to the examples list. This way there will be more reference material for bootleg users to draw apon!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;bootleg&lt;/code&gt; leverages other people's amazing work. The following projects and people enable this to exist at all.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.michielborkent.nl/" rel="nofollow"&gt;Michiel Borkent&lt;/a&gt; built &lt;a href="https://github.com/borkdude/sci"&gt;Sci&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.booleanknot.com/" rel="nofollow"&gt;James Reeves&lt;/a&gt; built &lt;a href="https://github.com/weavejester/hiccup"&gt;Hiccup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://clj-me.cgrand.net/" rel="nofollow"&gt;Christophe Grand&lt;/a&gt; built &lt;a href="https://github.com/cgrand/enlive"&gt;Enlive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davidsantiago"&gt;David Santiago&lt;/a&gt; built &lt;a href="https://github.com/davidsantiago/hickory"&gt;Hickory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yogthos.net/" rel="nofollow"&gt;Dmitri Sotnikov&lt;/a&gt; built &lt;a href="https://github.com/yogthos/Selmer"&gt;Selmer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019 Crispin Wellington&lt;/p&gt;
&lt;p&gt;This program and the accompanying materials are made available under the
terms of the Eclipse Public License 2.0 which is available at
&lt;a href="http://www.eclipse.org/legal/epl-2.0" rel="nofollow"&gt;http://www.eclipse.org/legal/epl-2.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This Source Code may also be made available under the following Secondary
Licenses when the conditions for such availability set forth in the Eclipse
Public License, v. 2.0 are satisfied: GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or (at your
option) any later version, with the GNU Classpath Exception which is available
at &lt;a href="https://www.gnu.org/software/classpath/license.html" rel="nofollow"&gt;https://www.gnu.org/software/classpath/license.html&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>retrogradeorbit</author><guid isPermaLink="false">https://github.com/retrogradeorbit/bootleg</guid><pubDate>Tue, 24 Dec 2019 00:05:00 GMT</pubDate></item><item><title>mdxprograms/d4rkst4r-v2 #6 in Clojure, Today</title><link>https://github.com/mdxprograms/d4rkst4r-v2</link><description>&lt;p&gt;&lt;i&gt;d4rkst4r app rebuilt in ClojureScript&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-d4rkst4r" class="anchor" aria-hidden="true" href="#d4rkst4r"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;d4rkst4r&lt;/h1&gt;
&lt;p&gt;Netlify url: &lt;a href="https://d4rkst4r-v2.netlify.com/" rel="nofollow"&gt;https://d4rkst4r-v2.netlify.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://app.netlify.com/sites/d4rkst4r-v2/deploys" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9cad94eb9969144033e86b229d35e22ecff787a3/68747470733a2f2f6170692e6e65746c6966792e636f6d2f6170692f76312f6261646765732f61653765633065302d636237632d343131612d626161382d6661353331643837313064362f6465706c6f792d737461747573" alt="Netlify Status" data-canonical-src="https://api.netlify.com/api/v1/badges/ae7ec0e0-cb7c-411a-baa8-fa531d8710d6/deploy-status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project was bootstrapped with &lt;a href="https://github.com/filipesilva/create-cljs-app"&gt;Create CLJS App&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-available-scripts" class="anchor" aria-hidden="true" href="#available-scripts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Available Scripts&lt;/h2&gt;
&lt;p&gt;In the project directory, you can run:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-npm-start" class="anchor" aria-hidden="true" href="#npm-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Runs the app in development mode.&lt;br&gt;
Open &lt;a href="http://localhost:3000" rel="nofollow"&gt;http://localhost:3000&lt;/a&gt; to view it in the browser.
The page will reload if you make edits.&lt;/p&gt;
&lt;p&gt;The app uses &lt;a href="https://reagent-project.github.io" rel="nofollow"&gt;Reagent&lt;/a&gt;, a minimalistic interface between ClojureScript and React.&lt;br&gt;
You can use existing npm React components directly via a &lt;a href="http://reagent-project.github.io/docs/master/InteropWithReact.html#creating-reagent-components-from-react-components" rel="nofollow"&gt;interop call&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Builds use &lt;a href="https://github.com/thheller/shadow-cljs"&gt;Shadow CLJS&lt;/a&gt; for maximum compatibility with NPM libraries. You'll need a &lt;a href="https://adoptopenjdk.net/" rel="nofollow"&gt;Java SDK&lt;/a&gt; (Version 8+, Hotspot) to use it. &lt;br&gt;
You can &lt;a href="https://shadow-cljs.github.io/docs/UsersGuide.html#js-deps" rel="nofollow"&gt;import npm libraries&lt;/a&gt; using Shadow CLJS. See the &lt;a href="https://shadow-cljs.github.io/docs/UsersGuide.html" rel="nofollow"&gt;user manual&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-npm-run-cards" class="anchor" aria-hidden="true" href="#npm-run-cards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;npm run cards&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Runs the interactive live development enviroment.&lt;br&gt;
You can use it to design, test, and think about parts of your app in isolation.&lt;/p&gt;
&lt;p&gt;This environment uses &lt;a href="https://github.com/bhauman/devcards"&gt;Devcards&lt;/a&gt; and &lt;a href="https://testing-library.com/docs/react-testing-library/intro" rel="nofollow"&gt;React Testing Library&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-npm-run-build" class="anchor" aria-hidden="true" href="#npm-run-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;npm run build&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Builds the app for production to the &lt;code&gt;public&lt;/code&gt; folder.&lt;br&gt;
It correctly bundles all code and optimizes the build for the best performance.&lt;/p&gt;
&lt;p&gt;Your app is ready to be deployed!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-useful-scripts" class="anchor" aria-hidden="true" href="#other-useful-scripts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other useful scripts&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-null-and-npm-run-e2e" class="anchor" aria-hidden="true" href="#null-and-npm-run-e2e"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;null&lt;/code&gt; and &lt;code&gt;npm run e2e&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;You can use &lt;code&gt;null&lt;/code&gt; to run tests a single time, and &lt;code&gt;npm run e2e&lt;/code&gt; to run the end-to-end test app.
&lt;code&gt;npm test&lt;/code&gt; launches tests in interactive watch mode.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;See the ClojureScript &lt;a href="https://clojurescript.org/tools/testing" rel="nofollow"&gt;testing page&lt;/a&gt; for more information. E2E tests use &lt;a href="https://github.com/getgauge/taiko"&gt;Taiko&lt;/a&gt; to interact with a headless browser.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-npm-run-lint-and-npm-run-format" class="anchor" aria-hidden="true" href="#npm-run-lint-and-npm-run-format"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;npm run lint&lt;/code&gt; and &lt;code&gt;npm run format&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;npm run lint&lt;/code&gt; checks the code for known bad code patterns using &lt;a href="https://github.com/borkdude/clj-kondo"&gt;clj-kondo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm run format&lt;/code&gt; will format your code in a consistent manner using &lt;a href="https://github.com/clj-commons/zprint-clj"&gt;zprint-clj&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-npm-run-report" class="anchor" aria-hidden="true" href="#npm-run-report"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;npm run report&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Make a report of what files contribute to your app size.&lt;br&gt;
Consider &lt;a href="https://code.thheller.com/blog/shadow-cljs/2019/03/03/code-splitting-clojurescript.html" rel="nofollow"&gt;code-splitting&lt;/a&gt; or using smaller libraries to make your app load faster.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-npm-run-server" class="anchor" aria-hidden="true" href="#npm-run-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;npm run server&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Starts a Shadow CLJS background server.&lt;br&gt;
This will speed up starting time for other commands that use Shadow CLJS.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-useful-resources" class="anchor" aria-hidden="true" href="#useful-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful resources&lt;/h2&gt;
&lt;p&gt;Clojurians Slack &lt;a href="http://clojurians.net/" rel="nofollow"&gt;http://clojurians.net/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;CLJS FAQ (for JavaScript developers) &lt;a href="https://clojurescript.org/guides/faq-js" rel="nofollow"&gt;https://clojurescript.org/guides/faq-js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Official CLJS API &lt;a href="https://cljs.github.io/api/" rel="nofollow"&gt;https://cljs.github.io/api/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Quick reference &lt;a href="https://cljs.info/cheatsheet/" rel="nofollow"&gt;https://cljs.info/cheatsheet/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Offline searchable docs &lt;a href="https://devdocs.io/" rel="nofollow"&gt;https://devdocs.io/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;VSCode plugin &lt;a href="https://github.com/BetterThanTomorrow/calva"&gt;https://github.com/BetterThanTomorrow/calva&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mdxprograms</author><guid isPermaLink="false">https://github.com/mdxprograms/d4rkst4r-v2</guid><pubDate>Tue, 24 Dec 2019 00:06:00 GMT</pubDate></item><item><title>borkdude/sci #7 in Clojure, Today</title><link>https://github.com/borkdude/sci</link><description>&lt;p&gt;&lt;i&gt;Small Clojure Interpreter&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="logo/logo-300dpi.png"&gt;&lt;img src="logo/logo-300dpi.png" width="100px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/borkdude/sci/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08cd8ab8d5d58945077f30e61c25704ea421937d/68747470733a2f2f636972636c6563692e636f6d2f67682f626f726b647564652f7363692f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/borkdude/sci/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojars.org/borkdude/sci" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80f41ff368767c16dfb2695d1f472b65677dfda6/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f626f726b647564652f7363692e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/borkdude/sci.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@borkdude/sci" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed34181aef3828517d477b396728f60dd5f5f30a/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40626f726b647564652f736369" alt="NPM Project" data-canonical-src="https://img.shields.io/npm/v/@borkdude/sci" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cljdoc.org/d/borkdude/sci/CURRENT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2f28e762ac4c9154a34ec7fcbffa8dc245d39624/68747470733a2f2f636c6a646f632e6f72672f62616467652f626f726b647564652f736369" alt="cljdoc badge" data-canonical-src="https://cljdoc.org/badge/borkdude/sci" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.slack.com/client/T03RZGPFR/CLX41ASCS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d32eacbaaf4d06e17885b5da976a2d0cb18238e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6a6f696e5f636861742d627269676874677265656e2e737667" alt="project chat" data-canonical-src="https://img.shields.io/badge/slack-join_chat-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Small Clojure Interpreter&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p lang="en" dir="ltr"&gt;I want a limited dialect of Clojure for a single-purpose, scripted application. Sci will fit nicely.&lt;/p&gt;
    —
    &lt;a href="https://twitter.com/tiagoluchini/status/1193144124142211073" rel="nofollow"&gt;@tiagoluchini&lt;/a&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-use-from-clojurescript" class="anchor" aria-hidden="true" href="#use-from-clojurescript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use from Clojure(Script)&lt;/h3&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[sci.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; sci])
(&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(inc 1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) =&amp;gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; 2&lt;/span&gt;
(&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(inc x)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'x &lt;span class="pl-c1"&gt;2&lt;/span&gt;}}) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#Usage"&gt;More&lt;/a&gt; on how to use sci from Clojure.
Use from &lt;a href="#use-from-javaScript"&gt;JavaScript&lt;/a&gt;. Use from &lt;a href="#use-from-java"&gt;Java&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale&lt;/h2&gt;
&lt;p&gt;You want to evaluate code from user input, or use Clojure for a DSL inside
configuration files, but &lt;code&gt;eval&lt;/code&gt; isn't safe or simply doesn't work.&lt;/p&gt;
&lt;p&gt;This library works with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clojure on the JVM&lt;/li&gt;
&lt;li&gt;Clojure compiled with GraalVM native&lt;/li&gt;
&lt;li&gt;ClojureScript, even when compiled with &lt;code&gt;:advanced&lt;/code&gt;, and (as a consequence) JavaScript&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is used in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/borkdude/babashka"&gt;Babashka&lt;/a&gt;. A Clojure scripting tool that plays well with Bash.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/retrogradeorbit/bootleg"&gt;Bootleg&lt;/a&gt;. An HTML templating CLI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/liquidz/daddy"&gt;Daddy&lt;/a&gt;. A configuration management tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dundalek/closh"&gt;Closh&lt;/a&gt;. Bash-like shell based on Clojure. GraalVM port is work in progress.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/borkdude/jet"&gt;Jet&lt;/a&gt;. CLI to convert between JSON, EDN and Transit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metosin/malli"&gt;Malli&lt;/a&gt;. Plain data Schemas for Clojure/Script.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;Experimental. Breaking changes are expected to happen at this phase.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Use as a dependency:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://clojars.org/borkdude/sci" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80f41ff368767c16dfb2695d1f472b65677dfda6/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f626f726b647564652f7363692e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/borkdude/sci.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@borkdude/sci" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed34181aef3828517d477b396728f60dd5f5f30a/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40626f726b647564652f736369" alt="NPM Project" data-canonical-src="https://img.shields.io/npm/v/@borkdude/sci" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-api-docs" class="anchor" aria-hidden="true" href="#api-docs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API docs&lt;/h2&gt;
&lt;p&gt;For Clojure, see the generated &lt;a href="https://borkdude.github.io/sci/doc/codox" rel="nofollow"&gt;codox&lt;/a&gt;
documentation. For Java, see the generated &lt;a href="https://borkdude.github.io/sci/doc/javadoc/index.html" rel="nofollow"&gt;Java
documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Currently the only API function is &lt;code&gt;sci.core/eval-string&lt;/code&gt; which takes a string
to evaluate and an optional options map.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;sci&lt;/code&gt;, &lt;code&gt;defn&lt;/code&gt; does not mutate the outside world, only the evaluation
context inside a call to &lt;code&gt;sci/eval-string&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default &lt;code&gt;sci&lt;/code&gt; only enables access to the pure non-side-effecting functions in
Clojure.  More functions can be enabled, at your own risk, using &lt;code&gt;:bindings&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-k"&gt;require&lt;/span&gt; '[sci.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; sci])
user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(println &lt;span class="pl-cce"&gt;\"&lt;/span&gt;hello&lt;span class="pl-cce"&gt;\"&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'println println}})
hello
&lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also possible to provide namespaces which can be required:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;opts&lt;/span&gt; {&lt;span class="pl-c1"&gt;:namespaces&lt;/span&gt; {'foo.bar {'println println}}})
user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(require '[foo.bar :as lib]) (lib/println &lt;span class="pl-cce"&gt;\"&lt;/span&gt;hello&lt;span class="pl-cce"&gt;\"&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; opts)
hello
&lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can provide a list of allowed symbols. Using other symbols causes an exception:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(inc 1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:allow&lt;/span&gt; '[inc]})
&lt;span class="pl-c1"&gt;2&lt;/span&gt;
user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(dec 1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:allow&lt;/span&gt; '[inc]})
ExceptionInfo dec is not allowed! [at line &lt;span class="pl-c1"&gt;1&lt;/span&gt;, column &lt;span class="pl-c1"&gt;2&lt;/span&gt;]  clojure.core/ex-info (&lt;span class="pl-en"&gt;core.clj:4739&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Providing a list of disallowed symbols has the opposite effect:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(inc 1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:deny&lt;/span&gt; '[inc]})
ExceptionInfo inc is not allowed! [at line &lt;span class="pl-c1"&gt;1&lt;/span&gt;, column &lt;span class="pl-c1"&gt;2&lt;/span&gt;]  clojure.core/ex-info (&lt;span class="pl-en"&gt;core.clj:4739&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Preventing forever lasting evaluation of infinite sequences can be achieved with
&lt;code&gt;:realize-max&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(vec (range))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:realize-max&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;})
ExceptionInfo Maximum number of elements realized: &lt;span class="pl-c1"&gt;10&lt;/span&gt; [at line &lt;span class="pl-c1"&gt;1&lt;/span&gt;, column &lt;span class="pl-c1"&gt;1&lt;/span&gt;]  clojure.core/ex-info (&lt;span class="pl-en"&gt;core.clj:4739&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The preset &lt;code&gt;:termination-safe&lt;/code&gt;, which is currently &lt;code&gt;{:deny '[loop recur trampoline] :realize-max 100}&lt;/code&gt;, is helpful for making expressions terminate:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(loop [] (recur))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:preset&lt;/span&gt; &lt;span class="pl-c1"&gt;:termination-safe&lt;/span&gt;})
ExceptionInfo &lt;span class="pl-k"&gt;loop&lt;/span&gt; is not allowed! [at line &lt;span class="pl-c1"&gt;1&lt;/span&gt;, column &lt;span class="pl-c1"&gt;2&lt;/span&gt;]  clojure.core/ex-info (&lt;span class="pl-en"&gt;core.clj:4739&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Providing a macro as a binding can be done by providing a normal function that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;has &lt;code&gt;:sci/macro&lt;/code&gt; on the metadata set to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;has two extra arguments at the start for &lt;code&gt;&amp;amp;form&lt;/code&gt; and &lt;code&gt;&amp;amp;env&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;user=&amp;gt; (&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;do-twice&lt;/span&gt; ^:sci/macro (&lt;span class="pl-k"&gt;fn&lt;/span&gt; [_&amp;amp;env _&amp;amp;form x] (&lt;span class="pl-en"&gt;list&lt;/span&gt; 'do x x)))
user=&amp;gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(do-twice (f))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'do-twice do-twice 'f #(&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)}})
hello
hello
&lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-vars" class="anchor" aria-hidden="true" href="#vars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vars&lt;/h2&gt;
&lt;p&gt;Sci has a var type, distinguished from Clojure vars. In a sci program these vars
are created with &lt;code&gt;def&lt;/code&gt; and &lt;code&gt;defn&lt;/code&gt; just like in normal Clojure:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;x&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
(&lt;span class="pl-k"&gt;defn&lt;/span&gt; &lt;span class="pl-e"&gt;foo&lt;/span&gt; [] &lt;span class="pl-e"&gt;x&lt;/span&gt;)
(&lt;span class="pl-en"&gt;foo&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 1&lt;/span&gt;
(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;x&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
(&lt;span class="pl-en"&gt;foo&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dynamic vars with thread-local bindings are also supported:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; ^:dynamic *x* &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
(&lt;span class="pl-k"&gt;binding&lt;/span&gt; [*x* &lt;span class="pl-c1"&gt;10&lt;/span&gt;] x) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 10&lt;/span&gt;
(&lt;span class="pl-k"&gt;binding&lt;/span&gt; [*x* &lt;span class="pl-c1"&gt;10&lt;/span&gt;] (&lt;span class="pl-en"&gt;set!&lt;/span&gt; x &lt;span class="pl-c1"&gt;12&lt;/span&gt;) x) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 12&lt;/span&gt;
x &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pre-creating vars that can be used in a sci program can be done using
&lt;code&gt;sci/new-var&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;x&lt;/span&gt; (&lt;span class="pl-en"&gt;sci/new-var&lt;/span&gt; 'x &lt;span class="pl-c1"&gt;10&lt;/span&gt;))
(&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(inc x)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'x x}}) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create a dynamic sci var you can set metadata or use &lt;code&gt;sci/new-dynamic-var&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[sci.core] &lt;span class="pl-c1"&gt;:as&lt;/span&gt; sci)
(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;x1&lt;/span&gt; (&lt;span class="pl-en"&gt;sci/new-var&lt;/span&gt; 'x &lt;span class="pl-c1"&gt;10&lt;/span&gt; {&lt;span class="pl-c1"&gt;:dynamic&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}))
(&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(binding [*x* 12] (inc *x*))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'*x* x1}}) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 13&lt;/span&gt;
(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;x2&lt;/span&gt; (&lt;span class="pl-en"&gt;sci/new-dynamic-var&lt;/span&gt; 'x &lt;span class="pl-c1"&gt;10&lt;/span&gt;))
(&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(binding [*x* 12] (inc *x*))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'*x* x2}}) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pre-created sci vars can also be externally rebound:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;x&lt;/span&gt; (&lt;span class="pl-en"&gt;sci/new-dynamic-var&lt;/span&gt; 'x &lt;span class="pl-c1"&gt;10&lt;/span&gt;))
(&lt;span class="pl-en"&gt;sci/binding&lt;/span&gt; [x &lt;span class="pl-c1"&gt;11&lt;/span&gt;] (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(inc *x*)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'*x* x2}})) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The dynamic vars &lt;code&gt;*in*&lt;/code&gt;, &lt;code&gt;*out*&lt;/code&gt;, &lt;code&gt;*err*&lt;/code&gt; in a sci program correspond to the
dynamic sci vars &lt;code&gt;sci.core/in&lt;/code&gt;, &lt;code&gt;sci.core/out&lt;/code&gt; and &lt;code&gt;sci.core/err&lt;/code&gt; in API. These
vars can be rebound as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;sw&lt;/span&gt; (&lt;span class="pl-en"&gt;java.io.StringWriter.&lt;/span&gt;))
(&lt;span class="pl-en"&gt;sci/binding&lt;/span&gt; [sci/out sw] (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(println &lt;span class="pl-cce"&gt;\"&lt;/span&gt;hello&lt;span class="pl-cce"&gt;\"&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; nil&lt;/span&gt;
(&lt;span class="pl-en"&gt;str&lt;/span&gt; sw) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; "hello\n"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A shorthand for rebinding &lt;code&gt;sci/out&lt;/code&gt; is &lt;code&gt;sci/with-out-str&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;sci/with-out-str&lt;/span&gt; (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(println &lt;span class="pl-cce"&gt;\"&lt;/span&gt;hello&lt;span class="pl-cce"&gt;\"&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; "hello\n"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-stdoud-and-stdin" class="anchor" aria-hidden="true" href="#stdoud-and-stdin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stdoud and stdin&lt;/h2&gt;
&lt;p&gt;To enable printing to &lt;code&gt;stdoud&lt;/code&gt; and reading from &lt;code&gt;stdin&lt;/code&gt; you can bind
&lt;code&gt;sci.core/out&lt;/code&gt; and &lt;code&gt;sci.core/in&lt;/code&gt; to &lt;code&gt;*out*&lt;/code&gt; and &lt;code&gt;*in*&lt;/code&gt; respectively:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;sci/binding&lt;/span&gt; [sci/out *out*
              sci/in *in*]
  (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(print &lt;span class="pl-cce"&gt;\"&lt;/span&gt;Type your name!&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&amp;gt; &lt;span class="pl-cce"&gt;\"&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(flush)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; [name (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(read-line)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
    (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(printf &lt;span class="pl-cce"&gt;\"&lt;/span&gt;Hello %s!&lt;span class="pl-cce"&gt;\"&lt;/span&gt; name)&lt;/span&gt;
&lt;span class="pl-s"&gt;                      (flush)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                     {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'name name}})))
Type your name!
&amp;gt; Michiel
Hello Michiel!&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-futures" class="anchor" aria-hidden="true" href="#futures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Futures&lt;/h2&gt;
&lt;p&gt;Creating threads with &lt;code&gt;future&lt;/code&gt; and &lt;code&gt;pmap&lt;/code&gt; is disabled by default, but can be
enabled by requiring &lt;code&gt;sci.addons&lt;/code&gt; and applying the &lt;code&gt;sci.addons/future&lt;/code&gt; function
to the sci options:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;ns&lt;/span&gt; &lt;span class="pl-e"&gt;my.sci.app&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;:require&lt;/span&gt;
   [sci.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; sci]
   [sci.addons &lt;span class="pl-c1"&gt;:as&lt;/span&gt; addons]))

(&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@(future (inc x))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                 (&lt;span class="pl-en"&gt;-&amp;gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'x &lt;span class="pl-c1"&gt;1&lt;/span&gt;}}
                     (&lt;span class="pl-en"&gt;addons/future&lt;/span&gt;)))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For conveying thread-local sci bindings to an external &lt;code&gt;future&lt;/code&gt; use
&lt;code&gt;sci.core/future&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;ns&lt;/span&gt; &lt;span class="pl-e"&gt;my.sci.app&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;:require&lt;/span&gt;
   [sci.core &lt;span class="pl-c1"&gt;:as&lt;/span&gt; sci]
   [sci.addons &lt;span class="pl-c1"&gt;:as&lt;/span&gt; addons]))

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;x&lt;/span&gt; (&lt;span class="pl-en"&gt;sci/new-dynamic-var&lt;/span&gt; 'x &lt;span class="pl-c1"&gt;10&lt;/span&gt;))

@(&lt;span class="pl-en"&gt;sci/binding&lt;/span&gt; [x &lt;span class="pl-c1"&gt;11&lt;/span&gt;]
   (&lt;span class="pl-en"&gt;sci/future&lt;/span&gt;
     (&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@(future (inc x))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                      (&lt;span class="pl-en"&gt;-&amp;gt;&lt;/span&gt; {&lt;span class="pl-c1"&gt;:bindings&lt;/span&gt; {'x @x}}
                          (&lt;span class="pl-en"&gt;addons/future&lt;/span&gt;)))))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; 12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-classes" class="anchor" aria-hidden="true" href="#classes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Classes&lt;/h2&gt;
&lt;p&gt;Adding support for classes is done via the &lt;code&gt;:classes&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;sci/eval-string&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(java.util.UUID/randomUUID)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  {&lt;span class="pl-c1"&gt;:classes&lt;/span&gt; {'java.util.UUID java.util.UUID}})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;=&amp;gt; #uuid "312ba519-37e2-4109-b164-97fb140b57b0"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To make this work with &lt;code&gt;GraalVM&lt;/code&gt; you will also need to add an entry to your
&lt;a href="https://github.com/oracle/graal/blob/master/substratevm/REFLECTION.md"&gt;reflection
config&lt;/a&gt;
for this class. Also see &lt;a href="reflection.json"&gt;&lt;code&gt;reflection.json&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-feature-parity" class="anchor" aria-hidden="true" href="#feature-parity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature parity&lt;/h2&gt;
&lt;p&gt;Currently the following special forms/macros are supported: &lt;code&gt;def&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt;,
function literals (&lt;code&gt;#(inc %)&lt;/code&gt;), &lt;code&gt;defn&lt;/code&gt;, &lt;code&gt;quote&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;,&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;if-let&lt;/code&gt;, &lt;code&gt;if-not&lt;/code&gt;,
&lt;code&gt;when&lt;/code&gt;, &lt;code&gt;when-let&lt;/code&gt;, &lt;code&gt;when-not&lt;/code&gt;, &lt;code&gt;cond&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;letfn&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;-&amp;gt;&lt;/code&gt;,
&lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;as-&amp;gt;&lt;/code&gt;, &lt;code&gt;comment&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;lazy-seq&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;doseq&lt;/code&gt;, &lt;code&gt;case&lt;/code&gt;,
&lt;code&gt;try/catch/finally&lt;/code&gt;, &lt;code&gt;declare&lt;/code&gt;, &lt;code&gt;cond-&amp;gt;&lt;/code&gt;, &lt;code&gt;cond-&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;some-&amp;gt;&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;,
&lt;code&gt;import&lt;/code&gt;, &lt;code&gt;in-ns&lt;/code&gt;, &lt;code&gt;ns&lt;/code&gt;, &lt;code&gt;binding&lt;/code&gt;, &lt;code&gt;with-out-str&lt;/code&gt;, &lt;code&gt;with-in-str&lt;/code&gt;, &lt;code&gt;future&lt;/code&gt;. Sci
also supports user defined macros.&lt;/p&gt;
&lt;p&gt;More examples of what is currently possible can be found at
&lt;a href="https://github.com/borkdude/babashka"&gt;babashka&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you miss something, feel free to post an issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-caveats" class="anchor" aria-hidden="true" href="#caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats&lt;/h2&gt;
&lt;p&gt;To make the &lt;code&gt;rand-*&lt;/code&gt; functions behave well when compiling to a GraalVM native binary, use this setting:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;--initialize-at-run-time=java.lang.Math\$RandomNumberGeneratorHolder&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-use-from-javascript" class="anchor" aria-hidden="true" href="#use-from-javascript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use from JavaScript&lt;/h2&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;evalString&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;@borkdude/sci&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;opts&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {bindings&lt;span class="pl-k"&gt;:&lt;/span&gt; {&lt;span class="pl-en"&gt;f&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;() { &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); }}};
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;evalString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(dotimes [i 2] (f))&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, opts);
hello
hello&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note for JavaScript users: the JS API is similar to the Clojure one. Instead of
symbols and keywords it expects strings. Instead of kebab-case, use
camelCase. Read &lt;a href="#Usage"&gt;here&lt;/a&gt; how to use sci from Clojure.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-use-from-java" class="anchor" aria-hidden="true" href="#use-from-java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use from Java&lt;/h2&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;borkdude.sci.*&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;borkdude.sci.options.*&lt;/span&gt;;

&lt;span class="pl-smi"&gt;Namespace&lt;/span&gt; fooBar &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Namespace&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo.bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
fooBar&lt;span class="pl-k"&gt;.&lt;/span&gt;addVar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Options&lt;/span&gt; opts &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Options&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;addNamespace(fooBar);
&lt;span class="pl-smi"&gt;Sci&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;evalString(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo.bar/x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, opts); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note for Java users: the Java API for is conceptually similar to the Clojure
one, but made more idiomatic for Java users. Check the generated &lt;a href="https://borkdude.github.io/sci/doc/javadoc/index.html" rel="nofollow"&gt;Java
documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-test" class="anchor" aria-hidden="true" href="#test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test&lt;/h2&gt;
&lt;p&gt;Required: &lt;code&gt;lein&lt;/code&gt;, the &lt;code&gt;clojure&lt;/code&gt; CLI and GraalVM.&lt;/p&gt;
&lt;p&gt;To succesfully run the GraalVM tests, you will have to compile the binary first
with &lt;code&gt;script/compile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To run all tests:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;script/test/all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For running individual tests, see the scripts in &lt;code&gt;script/test&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.adgoji.com/" rel="nofollow"&gt;adgoji&lt;/a&gt; for financial support&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019 Michiel Borkent&lt;/p&gt;
&lt;p&gt;Distributed under the Eclipse Public License 1.0. This project contains code
from Clojure and ClojureScript which are also licensed under the EPL 1.0. See
LICENSE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>borkdude</author><guid isPermaLink="false">https://github.com/borkdude/sci</guid><pubDate>Tue, 24 Dec 2019 00:07:00 GMT</pubDate></item><item><title>day8/re-frame-template #8 in Clojure, Today</title><link>https://github.com/day8/re-frame-template</link><description>&lt;p&gt;&lt;i&gt;Leiningen template for reagent web app based on the re-frame pattern. Includes shadow-cljs and optionally cider, compjure, garden, less, re-com, re-frisk, re-frame-10x and secretary.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://github.com/day8/re-frame-template/actions?workflow=ci"&gt;&lt;img src="https://github.com/day8/re-frame-template/workflows/ci/badge.svg" alt="CI" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/day8/re-frame-template/actions?workflow=cd"&gt;&lt;img src="https://github.com/day8/re-frame-template/workflows/cd/badge.svg" alt="CD" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/day8/re-frame-template/tags"&gt;&lt;img src="https://camo.githubusercontent.com/d96eb1aa6855a1a7d2318e39a99aa0014f9bcaa4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f7461672f646179382f72652d6672616d652d74656d706c6174653f7374796c653d666c6174" alt="GitHub tag (latest by date)" data-canonical-src="https://img.shields.io/github/v/tag/day8/re-frame-template?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://clojars.org/re-frame/lein-template" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/af6b8d01a492c127d3916ff08782c952d7bf22ad/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f72652d6672616d652f6c65696e2d74656d706c6174652e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/re-frame/lein-template.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/day8/re-frame-template/issues"&gt;&lt;img src="https://camo.githubusercontent.com/5a3c6ed6e3b605952dbed3b8dfb3ab24da0f2caf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f646179382f72652d6672616d652d74656d706c6174653f7374796c653d666c6174" alt="GitHub issues" data-canonical-src="https://img.shields.io/github/issues-raw/day8/re-frame-template?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/day8/re-frame-template/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/4eca24291db744ab7fb7f3cdd9eb8244244e8798/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f646179382f72652d6672616d652d74656d706c617465" alt="GitHub pull requests" data-canonical-src="https://img.shields.io/github/issues-pr/day8/re-frame-template" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/day8/re-frame-template/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/1ca7731a0bd25606bb866a80d102e8b7641d1b58/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f646179382f72652d6672616d652d74656d706c6174653f7374796c653d666c6174" alt="GitHub" data-canonical-src="https://img.shields.io/github/license/day8/re-frame-template?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-re-frame-template" class="anchor" aria-hidden="true" href="#re-frame-template"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;re-frame-template&lt;/h1&gt;
&lt;p&gt;Leiningen template for &lt;a href="https://github.com/reagent-project/reagent"&gt;reagent&lt;/a&gt; web
apps which implement the &lt;a href="https://github.com/day8/re-frame"&gt;re-frame&lt;/a&gt; pattern.&lt;/p&gt;
&lt;p&gt;Through the use of profiles, this template lets the developer pick and choose
what "extras" are included in their application.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;
&lt;p&gt;The base template includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/day8/re-frame"&gt;re-frame&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shadow-cljs.github.io/docs/UsersGuide.html" rel="nofollow"&gt;shadow-cljs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/binaryage/cljs-devtools"&gt;cljs-devtools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To create an application with the base template, use this commandline:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lein new re-frame &amp;lt;project-name&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where you might, for example, substitute &lt;code&gt;my-early-masterpiece&lt;/code&gt; for the &lt;code&gt;&amp;lt;project-name&amp;gt;&lt;/code&gt; bit or, perhaps, &lt;code&gt;killer-app&lt;/code&gt; or &lt;code&gt;yeah&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Troubleshooting note:&lt;/strong&gt; for &lt;code&gt;&amp;lt;project-name&amp;gt;&lt;/code&gt; don't use &lt;code&gt;cljs&lt;/code&gt;. That name will confuse the compiler (long story) and you will later see errors like &lt;code&gt;cljs.core.init is not a function&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-extras" class="anchor" aria-hidden="true" href="#extras"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extras&lt;/h2&gt;
&lt;p&gt;The optional profiles include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/noprompt/garden"&gt;garden&lt;/a&gt; (&lt;code&gt;+garden&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/montoux/lein-less"&gt;less&lt;/a&gt; (&lt;code&gt;+less&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Debug
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/day8/re-frame-10x"&gt;re-frame-10x&lt;/a&gt; (&lt;code&gt;+10x&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/flexsurfer/re-frisk"&gt;re-frisk&lt;/a&gt; (&lt;code&gt;+re-frisk&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Development
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/clojure-emacs/cider"&gt;cider&lt;/a&gt; (&lt;code&gt;+cider&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/clojure/clojurescript/blob/master/src/main/cljs/cljs/test.cljs"&gt;cljs.test&lt;/a&gt; (&lt;code&gt;+test&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Full-stack
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/weavejester/compojure"&gt;compojure&lt;/a&gt; (&lt;code&gt;+handler&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Misc.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/day8/re-com"&gt;re-com&lt;/a&gt; (&lt;code&gt;+re-com&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gadfly361/re-pressed"&gt;re-pressed&lt;/a&gt; (&lt;code&gt;+re-pressed&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gadfly361/breaking-point"&gt;breaking-point&lt;/a&gt; (&lt;code&gt;+breaking-point&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Routing
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gf3/secretary"&gt;secretary&lt;/a&gt; (&lt;code&gt;+routes&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To add a profile to the base template, just append the profile name (let's use &lt;code&gt;+re-com&lt;/code&gt; as an example):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lein new re-frame &amp;lt;project-name&amp;gt; +re-com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Any combination of profiles can be added at once:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lein new re-frame &amp;lt;project-name&amp;gt; +garden +re-com +routes +test +less +10x
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: to assist debugging, you'll want to include either &lt;code&gt;+10x&lt;/code&gt; or &lt;code&gt;+re-frisk&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-start-cider-from-emacs-if-using-cider" class="anchor" aria-hidden="true" href="#start-cider-from-emacs-if-using-cider"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start Cider from Emacs (if using +cider):&lt;/h2&gt;
&lt;p&gt;Refer to the &lt;a href="https://shadow-cljs.github.io/docs/UsersGuide.html#cider" rel="nofollow"&gt;shadow-cljs Emacs / CIDER documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The mentioned &lt;code&gt;dir-local.el&lt;/code&gt; file is created by this template.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compile-css-if-using-garden-or-less" class="anchor" aria-hidden="true" href="#compile-css-if-using-garden-or-less"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile css (if using +garden or +less):&lt;/h2&gt;
&lt;p&gt;To compile css files once.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;lein garden once

lein less once&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When developing, to automatically recompile css files on each file change, use:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;lein garden auto

lein less auto&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-run-application" class="anchor" aria-hidden="true" href="#run-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run application:&lt;/h2&gt;
&lt;p&gt;Retrieve dependencies (can take a while the first time):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;lein deps
yarn install  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or npm install&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;lein dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wait a bit, perhaps 20 seconds, keeping an eye out for a sign the compile has finished, then browse to &lt;a href="http://localhost:8280" rel="nofollow"&gt;http://localhost:8280&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To see other available &lt;code&gt;shadow-cljs&lt;/code&gt; commands run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lein run -m shadow.cljs.devtools.cli --help
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-your-browser" class="anchor" aria-hidden="true" href="#setting-up-your-browser"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting Up Your Browser&lt;/h2&gt;
&lt;p&gt;So, you now have the application running.&lt;/p&gt;
&lt;p&gt;Before you start developing, you should tweak two settings within your
browser's &lt;code&gt;devtools&lt;/code&gt;. These are one-time actions (for each browser and laptop you use).
I'll assume Chrome for the purposes of further explanation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open devtools. Press press &lt;code&gt;F12&lt;/code&gt; or &lt;code&gt;Ctrl-Shift-i&lt;/code&gt; (&lt;a href="https://developer.chrome.com/devtools" rel="nofollow"&gt;actually there's a variety of ways&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Open devtool's "Setting" Panel. Press F1. (Careful. Not the Setting panel for Chrome itself!! The Settings panel for devtools)&lt;/li&gt;
&lt;li&gt;Under the "Network" heading, tick the option "Disable cache (while DevTools is open)". You don't want shadow-clj's attempts at reloading to be defeated by caching.&lt;/li&gt;
&lt;li&gt;Under the "Console" heading, tick the option "Enable custom formatters". This allows &lt;a href="https://github.com/binaryage/cljs-devtools"&gt;cljs-devtools&lt;/a&gt; to perform its magic.&lt;/li&gt;
&lt;li&gt;Close Settings. Close Devtools.&lt;/li&gt;
&lt;li&gt;Reopen Devtools&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/devtools-settings.png"&gt;&lt;img src="docs/images/devtools-settings.png" alt="settings" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-open-10x-panel-if-using-10x" class="anchor" aria-hidden="true" href="#open-10x-panel-if-using-10x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open 10x Panel (if using +10x):&lt;/h2&gt;
&lt;p&gt;To use &lt;code&gt;re-frame-10x&lt;/code&gt; for debugging your app:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;click on the application, minimal through it is, to give it "input focus" (you want to be sure that any key presses are going to your new app)&lt;/li&gt;
&lt;li&gt;press &lt;code&gt;Ctrl-H&lt;/code&gt; and you should see the &lt;code&gt;re-frame-10x&lt;/code&gt; panel appear on the right side of the window&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sometimes achieving Step 1 on a really simple app - one without widgets - can be fiddly,
because the browser itself hogs "input focus" and grabs all the keystrokes (like &lt;code&gt;Ctrl-H&lt;/code&gt;) which don't
then make it through to your app. You may need to be determined and creative with Step 1.
I have every confidence in you.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hot-reloading-is-now-go" class="anchor" aria-hidden="true" href="#hot-reloading-is-now-go"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hot Reloading Is Now Go&lt;/h2&gt;
&lt;p&gt;If you now edit files, like perhaps &lt;code&gt;/src/cljs/&amp;lt;project-name&amp;gt;/views.cljs&lt;/code&gt;, Figwheel will automatically
recompile your changes and "hot load" them into your running app, without your app needing
to be re-started. The resulting fast, iterative workflow tends to make you very productive, and
is cherished by those lucky enough to experience it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debug" class="anchor" aria-hidden="true" href="#debug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;debug?:&lt;/h3&gt;
&lt;p&gt;In &lt;em&gt;project-name.config&lt;/em&gt;, there is a variable called &lt;code&gt;debug?&lt;/code&gt;, which defaults to
&lt;em&gt;true&lt;/em&gt; in the &lt;code&gt;dev&lt;/code&gt; build, and &lt;em&gt;false&lt;/em&gt; in the &lt;code&gt;prod&lt;/code&gt; build.&lt;/p&gt;
&lt;p&gt;If, for example, you wrap your &lt;code&gt;println&lt;/code&gt;s with a &lt;code&gt;when&lt;/code&gt; block as shown below,
then you will get logs printed to the browser's console for the &lt;code&gt;dev&lt;/code&gt; build and
not the &lt;code&gt;prod&lt;/code&gt; build.&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;when&lt;/span&gt; config/debug?
  (&lt;span class="pl-en"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dev mode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-run-tests-if-using-test" class="anchor" aria-hidden="true" href="#run-tests-if-using-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run tests (if using +test):&lt;/h2&gt;
&lt;p&gt;Install karma and headless chrome&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install -g karma-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then run your tests&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lein karma
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-production-build" class="anchor" aria-hidden="true" href="#production-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Production Build&lt;/h2&gt;
&lt;p&gt;To compile clojurescript to javascript:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lein prod
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-deploy-to-heroku-if-using-handler" class="anchor" aria-hidden="true" href="#deploy-to-heroku-if-using-handler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deploy to heroku (if using &lt;code&gt;+handler&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;Create uberjar&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lein clean
lein with-profile prod uberjar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create app on heroku&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;heroku create
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then deploy the application&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git push heroku master
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-other-templates" class="anchor" aria-hidden="true" href="#other-templates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Templates&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/plexus/chestnut"&gt;chestnut&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luminus-framework/luminus-template"&gt;luminus&lt;/a&gt;  (full stack)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gadfly361/reagent-figwheel"&gt;reagent-figwheel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gadfly361/reagent-seed"&gt;reagent-seed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-backend-options" class="anchor" aria-hidden="true" href="#backend-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backend Options&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ring-clojure/ring"&gt;ring&lt;/a&gt; and &lt;a href="http://clojure-liberator.github.io/liberator/" rel="nofollow"&gt;liberator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/duct-framework/duct"&gt;duct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/juxt/yada"&gt;yada&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pedestal/pedestal"&gt;pedestal&lt;/a&gt; and &lt;a href="https://github.com/cognitect-labs/vase"&gt;vase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-more-re-frame" class="anchor" aria-hidden="true" href="#more-re-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More re-frame&lt;/h2&gt;
&lt;p&gt;Looking for more re-frame inspiration, templates or example applications?
See the &lt;a href="https://github.com/day8/re-frame/blob/master/docs/External-Resources.md"&gt;external resources&lt;/a&gt; docs page.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are welcomed!  To add a new profile, this is what I'd recommend:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a file with the name of the profile &lt;a href="https://github.com/day8/re-frame-template/tree/master/src/leiningen/new/options"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Look at the existing options in that folder for inspiration for what to include in that file&lt;/li&gt;
&lt;li&gt;Update &lt;a href="https://github.com/day8/re-frame-template/blob/master/src/leiningen/new/re_frame.clj"&gt;project.clj&lt;/a&gt; with the profile&lt;/li&gt;
&lt;li&gt;Add any new files &lt;a href="https://github.com/day8/re-frame-template/tree/master/src/leiningen/new/re_frame"&gt;here&lt;/a&gt; and use the {{ var-name }} syntax as needed&lt;/li&gt;
&lt;li&gt;Update the &lt;a href="https://github.com/day8/re-frame-template/tree/master/src/leiningen/new/re_frame"&gt;README&lt;/a&gt; that will result when the template is used, as well as the top-level &lt;a href="https://github.com/day8/re-frame-template/blob/master/README.md"&gt;README&lt;/a&gt; for re-frame-template itself&lt;/li&gt;
&lt;li&gt;In a terminal, at the root of re-frame-template, run &lt;code&gt;lein install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Locally test that your profile works, &lt;code&gt;lein new re-frame &amp;lt;app-name&amp;gt; +&amp;lt;profile-name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add your profile to &lt;a href="https://github.com/day8/re-frame-template/blob/master/create-templates.sh"&gt;create-templates&lt;/a&gt; and run the script to make sure the other profiles didn't break.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;The MIT License (MIT)

Copyright © 2015 Matthew Jaoudi
Copyright © 2015 Dylan Paris
Copyright © 2015 Michael Thompson
Copyright © 2015 Markku Rontu
Copyright © 2016 Daniel Compton
Copyright © 2019 Isaac Johnston

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>day8</author><guid isPermaLink="false">https://github.com/day8/re-frame-template</guid><pubDate>Tue, 24 Dec 2019 00:08:00 GMT</pubDate></item><item><title>juxt/crux #9 in Clojure, Today</title><link>https://github.com/juxt/crux</link><description>&lt;p&gt;&lt;i&gt;Open Time Store&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./docs/img/crux-logo-banner.svg"&gt;&lt;img alt="Crux" src="./docs/img/crux-logo-banner.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://juxt-oss.zulipchat.com/#narrow/stream/194466-crux" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11c063c06dacad518cf3aa987986e97ef2018727/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7a756c69702d6a6f696e5f636861742d627269676874677265656e2e737667" alt="project chat" data-canonical-src="https://img.shields.io/badge/zulip-join_chat-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Crux is an open source document database with bitemporal graph queries. Java,
Clojure and HTTP APIs are provided.&lt;/p&gt;
&lt;p&gt;Crux follows an &lt;em&gt;unbundled&lt;/em&gt; architectural approach, which means that it is
assembled from highly decoupled components through the use of semi-immutable
logs at the core of its design. Logs can currently be stored in LMDB or RocksDB
for standalone single-node deployments, or using Kafka for clustered
deployments. Indexes can currently be stored using LMDB or RocksDB.&lt;/p&gt;
&lt;p&gt;Crux is built for efficient bitemporal indexing of schemaless documents, and
this simplicity enables broad possibilities for creating layered extensions on
top, such as to add additional transaction, query, and schema capabilities.
Crux does not currently support SQL but it does provide an EDN-based
&lt;a href="https://en.wikipedia.org/wiki/Datalog" rel="nofollow"&gt;Datalog&lt;/a&gt; query interface that can be
used to express a comprehensive range of SQL-like join operations as well as
recursive graph traversals.&lt;/p&gt;
&lt;p&gt;Crux has been available as a &lt;em&gt;Public Alpha&lt;/em&gt; since 19&lt;sup&gt;th&lt;/sup&gt; April 2019.
The Public Alpha period will continue until Crux is released as a Generally
Available open source software product by JUXT later in 2019.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-circleci-build" class="anchor" aria-hidden="true" href="#circleci-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CircleCI Build&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/juxt/crux" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cae4970dba42399cf109dcf4644992ffbc8364cc/68747470733a2f2f636972636c6563692e636f6d2f67682f6a7578742f637275782e7376673f7374796c653d73766726636972636c652d746f6b656e3d38363762383462366431623464666666333332373733663737313435373334393532396165653862" alt="CircleCI" data-canonical-src="https://circleci.com/gh/juxt/crux.svg?style=svg&amp;amp;circle-token=867b84b6d1b4dfff332773f771457349529aee8b" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-latest-release" class="anchor" aria-hidden="true" href="#latest-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest Release&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://clojars.org/juxt/crux-core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3d1041227341460ac74978787de7c48d13aff0d6/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6a7578742f637275782d636f72652e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/juxt/crux-core.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-unbundled-architecture" class="anchor" aria-hidden="true" href="#unbundled-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unbundled Architecture&lt;/h2&gt;
&lt;p&gt;Crux embraces the transaction log as the central point of coordination when
running as a distributed system. Use of a separate document log enables simple
eviction of active and historical data to assist with technical compliance for
information privacy regulations.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What do we have to gain from turning the database inside out? Simpler code,
better scalability, better robustness, lower latency, and more flexibility for
doing interesting things with data.&lt;/p&gt;
&lt;p&gt;— Martin Kleppmann (2014)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./docs/img/crux-node-1.svg"&gt;&lt;img alt="Unbundled Architecture Diagram" src="./docs/img/crux-node-1.svg" width="1000px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This design makes it feasible and desirable to embed Crux nodes directly in
your application processes, which reduces deployment complexity and eliminates
round-trip overheads when running complex application queries.&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-data-model" class="anchor" aria-hidden="true" href="#data-model"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Model&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./docs/img/crux-venn-1.svg"&gt;&lt;img alt="Document database with graph queries" src="./docs/img/crux-venn-1.svg" width="500px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Crux is fundamentally a store of versioned EDN documents. The only requirement
is that you specify a valid &lt;code&gt;:crux.db/id&lt;/code&gt; key which links the documents to
their corresponding entities. The fields within these documents are
automatically indexed as Entity-Attribute-Value triples to support efficient
graph queries. Document versions are indexed by &lt;code&gt;valid-time&lt;/code&gt; (in addition to
&lt;code&gt;transaction-time&lt;/code&gt;) which allows you to model updates into the past, present or
future.&lt;/p&gt;
&lt;p&gt;Crux supports a Datalog query interface for reading data and traversing
relationships across all documents. Queries are executed so that the results
are lazily streamed from the underlying indexes. Queries can be made against
consistent point-in-time snapshots of your database from any Crux node
connected to the same transaction log, by specifying &lt;code&gt;transaction-time&lt;/code&gt; and/or
&lt;code&gt;valid-time&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Please visit our &lt;a href="https://juxt.pro/crux/docs/index.html" rel="nofollow"&gt;official
documentation&lt;/a&gt; to get started with Crux.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-try-it-with-docker" class="anchor" aria-hidden="true" href="#try-it-with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try it with Docker&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/juxt/crux/tree/master/docs/example/standalone_webservice"&gt;standalone webservice
example&lt;/a&gt;
for a demo Docker container.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community--contact" class="anchor" aria-hidden="true" href="#community--contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community &amp;amp; Contact&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://juxt-oss.zulipchat.com/#narrow/stream/194466-crux" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11c063c06dacad518cf3aa987986e97ef2018727/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7a756c69702d6a6f696e5f636861742d627269676874677265656e2e737667" alt="project chat" data-canonical-src="https://img.shields.io/badge/zulip-join_chat-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3rd-party-modules" class="anchor" aria-hidden="true" href="#3rd-party-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3rd Party Modules&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/avisi-apps/crux-xodus"&gt;avisi-apps/crux-xodus&lt;/a&gt; - pure-JVM
alternative to &lt;code&gt;crux-rocksdb&lt;/code&gt; and &lt;code&gt;crux-lmdb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/avisi-apps/crux-active-objects"&gt;avisi-apps/crux-active-objects&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;TxLog implementation backed by Active Objects for use inside Atlassian
Addons&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-companies-using-crux" class="anchor" aria-hidden="true" href="#companies-using-crux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Companies using Crux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.oscaro.com" rel="nofollow"&gt;Oscaro (eCommerce)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.avisi.nl/blog/crux-our-final-database-migration" rel="nofollow"&gt;Avisi (AtlasCRM)&lt;/a&gt; - &lt;a href="https://www.avisi.nl/blog/crux-our-final-database-migration" rel="nofollow"&gt;"Crux: Our Final Database Migration"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gnurdle.github.io/HoppyResume2017.html" rel="nofollow"&gt;Gnurdle (consulting)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Yours? Let us know :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="mailto:crux@juxt.pro"&gt;crux@juxt.pro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-repo-layout" class="anchor" aria-hidden="true" href="#repo-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repo Layout&lt;/h2&gt;
&lt;p&gt;Crux is split across multiple projects which are maintained within this
repository. &lt;code&gt;crux-core&lt;/code&gt; contains the main functional components of Crux along
with interfaces for the pluggable storage components (Kafka, LMDB, RocksDB
etc.). Implementations of these storage options are located in their own
projects.&lt;/p&gt;
&lt;p&gt;Project directories are published to Clojars independently so that you can
maintain granular dependencies on precisely the individual components needed
for your application. Alternatively you can depend on &lt;code&gt;crux-uberjar&lt;/code&gt; whilst in
development to spend less time worrying about which parts of Crux you need now
or in the future.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-core" class="anchor" aria-hidden="true" href="#core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-crux-core" class="anchor" aria-hidden="true" href="#crux-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;crux-core&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://clojars.org/juxt/crux-core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3d1041227341460ac74978787de7c48d13aff0d6/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6a7578742f637275782d636f72652e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/juxt/crux-core.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cluster-node-storage" class="anchor" aria-hidden="true" href="#cluster-node-storage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cluster Node storage&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-crux-kafka" class="anchor" aria-hidden="true" href="#crux-kafka"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;crux-kafka&lt;/h4&gt;
&lt;p&gt;For scalability and durability.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://clojars.org/juxt/crux-kafka" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ef319fed30ceafc41e5a44d86b2f8f34ca819708/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6a7578742f637275782d6b61666b612e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/juxt/crux-kafka.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-crux-kafka-embedded" class="anchor" aria-hidden="true" href="#crux-kafka-embedded"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;crux-kafka-embedded&lt;/h4&gt;
&lt;p&gt;Useful for experimentation and testing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://clojars.org/juxt/crux-kafka-embedded" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ef75396082dfe24a27d25b1753a4c977017f014/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6a7578742f637275782d6b61666b612d656d6265646465642e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/juxt/crux-kafka-embedded.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-local-kv-and-standalone-mode-storage" class="anchor" aria-hidden="true" href="#local-kv-and-standalone-mode-storage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local KV and Standalone mode storage&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-crux-lmdb" class="anchor" aria-hidden="true" href="#crux-lmdb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;crux-lmdb&lt;/h4&gt;
&lt;p&gt;Better read performance for intensive querying.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://clojars.org/juxt/crux-lmdb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9d97e1e2beebae5d8f707c7cec3380aaddd3f1c1/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6a7578742f637275782d6c6d64622e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/juxt/crux-lmdb.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-crux-rocksdb" class="anchor" aria-hidden="true" href="#crux-rocksdb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;crux-rocksdb&lt;/h4&gt;
&lt;p&gt;Better write performance for heavy ingestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://clojars.org/juxt/crux-rocksdb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ccd2f94c8a8150220075da52f086f6a11f3bba2a/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6a7578742f637275782d726f636b7364622e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/juxt/crux-rocksdb.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;crux-rocksdb&lt;/code&gt; is a good default choice.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-http" class="anchor" aria-hidden="true" href="#http"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-server" class="anchor" aria-hidden="true" href="#server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Server&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://clojars.org/juxt/crux-http-server" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/949650cd11beee13286866deeaab18de698b0fd2/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6a7578742f637275782d687474702d7365727665722e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/juxt/crux-http-server.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-client" class="anchor" aria-hidden="true" href="#client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Client&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://clojars.org/juxt/crux-http-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a6eac486aef6c59b536bec48f0122f7115e9e465/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6a7578742f637275782d687474702d636c69656e742e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/juxt/crux-http-client.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-additional" class="anchor" aria-hidden="true" href="#additional"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-crux-decorators" class="anchor" aria-hidden="true" href="#crux-decorators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;crux-decorators&lt;/h4&gt;
&lt;p&gt;Aggregation decorator and experimental API composition.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://clojars.org/juxt/crux-decorators" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64390238b0504d3bc454da4a438a152da7ba0cad/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6a7578742f637275782d6465636f7261746f72732e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/juxt/crux-decorators.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-crux-rdf" class="anchor" aria-hidden="true" href="#crux-rdf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;crux-rdf&lt;/h4&gt;
&lt;p&gt;Import RDF data and run a subset of SPARQL queries.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://clojars.org/juxt/crux-rdf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/863016dcf69cd97b9558009c6606101513849740/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6a7578742f637275782d7264662e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/juxt/crux-rdf.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uberjar" class="anchor" aria-hidden="true" href="#uberjar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Uberjar&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-crux-uberjar" class="anchor" aria-hidden="true" href="#crux-uberjar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;crux-uberjar&lt;/h4&gt;
&lt;p&gt;One dependency to rule them all.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://clojars.org/juxt/crux-uberjar" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/af4e6e6ed54efdcc167ba3cfef98c21c4c4a7859/68747470733a2f2f696d672e736869656c64732e696f2f636c6f6a6172732f762f6a7578742f637275782d756265726a61722e737667" alt="Clojars Project" data-canonical-src="https://img.shields.io/clojars/v/juxt/crux-uberjar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-clojure" class="anchor" aria-hidden="true" href="#using-clojure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Clojure&lt;/h2&gt;
&lt;p&gt;Please note that Clojure is not &lt;em&gt;required&lt;/em&gt; when using Crux. HTTP and Java
APIs are also available.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-repl" class="anchor" aria-hidden="true" href="#repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REPL&lt;/h3&gt;
&lt;p&gt;Launch a REPL using the very latest Clojars &lt;code&gt;-SNAPSHOT&lt;/code&gt; release:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;clj -Sdeps &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{:deps {juxt/crux-core {:mvn/version "RELEASE"}}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start a standalone in-memory (i.e. not persisted anywhere) node:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;require&lt;/span&gt; '[crux.api &lt;span class="pl-c1"&gt;:as&lt;/span&gt; crux])
(&lt;span class="pl-k"&gt;import&lt;/span&gt; '[crux.api ICruxAPI])

(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;my-node&lt;/span&gt;
  (&lt;span class="pl-en"&gt;crux/start-node&lt;/span&gt;
    {&lt;span class="pl-c1"&gt;:crux.node/topology&lt;/span&gt; &lt;span class="pl-c1"&gt;:crux.standalone/topology&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:crux.node/kv-store&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;crux.kv.memdb/kv&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; see 'configuration' section of docs for LMDB/RocksDB storage options&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:crux.standalone/event-log-dir&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data/event-log-dir-1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:crux.standalone/event-log-kv-store&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;crux.kv.memdb/kv&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
     &lt;span class="pl-c1"&gt;:crux.kv/db-dir&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data/db-dir-1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;put&lt;/code&gt; a document:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;my-document&lt;/span&gt;
  {&lt;span class="pl-c1"&gt;:crux.db/id&lt;/span&gt; &lt;span class="pl-c1"&gt;:some/fancy-id&lt;/span&gt;
   &lt;span class="pl-c1"&gt;:arbitrary-key&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;an untyped value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;]
   &lt;span class="pl-c1"&gt;:nested-map&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;and values&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:can-be-arbitrarily-nested&lt;/span&gt;}})

(&lt;span class="pl-en"&gt;crux/submit-tx&lt;/span&gt; my-node [[&lt;span class="pl-c1"&gt;:crux.tx/put&lt;/span&gt; my-document]])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Take an immutable snapshot of the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-e"&gt;my-db&lt;/span&gt; (&lt;span class="pl-en"&gt;crux/db&lt;/span&gt; my-node))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Retrieve the current version of the document:&lt;/p&gt;
&lt;div class="highlight highlight-source-clojure"&gt;&lt;pre&gt;(&lt;span class="pl-en"&gt;crux/entity&lt;/span&gt; my-db &lt;span class="pl-c1"&gt;:some/fancy-id&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-development-uber-repl" class="anchor" aria-hidden="true" href="#development-uber-repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development "uber" REPL&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To run a REPL that includes depedencies for all components of Crux, first build the sub-modules using &lt;code&gt;lein sub install&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Then, &lt;code&gt;cd crux-dev&lt;/code&gt; and &lt;code&gt;lein repl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Once you've connected to the REPL, in the &lt;code&gt;user&lt;/code&gt; namespace, run &lt;code&gt;(dev)&lt;/code&gt; to load the dev namespace.&lt;/li&gt;
&lt;li&gt;You can now &lt;code&gt;(start)&lt;/code&gt;, &lt;code&gt;(stop)&lt;/code&gt; and &lt;code&gt;(reset)&lt;/code&gt; the Crux development system (amongst other things).&lt;/li&gt;
&lt;li&gt;You should now have a running Crux node in the &lt;code&gt;dev/node&lt;/code&gt; var - you can verify this by calling &lt;code&gt;(crux/status node)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h3&gt;
&lt;p&gt;The recommended way of running the primary tests is &lt;code&gt;lein build&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright--license" class="anchor" aria-hidden="true" href="#copyright--license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright &amp;amp; License&lt;/h2&gt;
&lt;p&gt;The MIT License (MIT)&lt;/p&gt;
&lt;p&gt;Copyright © 2018-2019 JUXT LTD.&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;A list of compiled dependencies and corresponding licenses is available
&lt;a href="LICENSE-deps.adoc"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>juxt</author><guid isPermaLink="false">https://github.com/juxt/crux</guid><pubDate>Tue, 24 Dec 2019 00:09:00 GMT</pubDate></item><item><title>ring-clojure/ring #10 in Clojure, Today</title><link>https://github.com/ring-clojure/ring</link><description>&lt;p&gt;&lt;i&gt;Clojure HTTP server abstraction&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ring" class="anchor" aria-hidden="true" href="#ring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ring&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ring-clojure/ring" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/12ef37185ce1650f8d2a6bf44f1f98222276683c/68747470733a2f2f7472617669732d63692e6f72672f72696e672d636c6f6a7572652f72696e672e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ring-clojure/ring.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ring is a Clojure web applications library inspired by Python's WSGI
and Ruby's Rack. By abstracting the details of HTTP into a simple,
unified API, Ring allows web applications to be constructed of modular
components that can be shared among a variety of applications, web
servers, and web frameworks.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/ring-clojure/ring/blob/master/SPEC"&gt;SPEC&lt;/a&gt; file at the root of this distribution provides a
complete description of the Ring interface.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-upgrade-notice" class="anchor" aria-hidden="true" href="#upgrade-notice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrade Notice&lt;/h2&gt;
&lt;p&gt;From version 1.2.1 onward, the ring/ring-core package no longer comes
with the &lt;code&gt;javax.servlet/servlet-api&lt;/code&gt; package as a dependency (see
issue &lt;a href="https://github.com/ring-clojure/ring/pull/89"&gt;#89&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;If you are using the &lt;code&gt;ring/ring-core&lt;/code&gt; namespace on its own, you may
run into errors when executing tests or running alternative adapters.
To resolve this, include the following dependency in your dev profile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[javax.servlet/servlet-api "2.5"]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-libraries" class="anchor" aria-hidden="true" href="#libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Libraries&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ring-core - essential functions for handling parameters, cookies and more&lt;/li&gt;
&lt;li&gt;ring-devel - functions for developing and debugging Ring applications&lt;/li&gt;
&lt;li&gt;ring-servlet - construct Java servlets from Ring handlers&lt;/li&gt;
&lt;li&gt;ring-jetty-adapter - a Ring adapter that uses the Jetty webserver&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To include one of the above libraries, for example &lt;code&gt;ring-core&lt;/code&gt;, add
the following to your &lt;code&gt;:dependencies&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[ring/ring-core "1.8.0"]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To include all of them:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[ring "1.8.0"]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ring-clojure/ring/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ring-clojure.github.com/ring"&gt;API docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://groups.google.com/group/ring-clojure" rel="nofollow"&gt;Google group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please see &lt;a href="https://github.com/ring-clojure/ring/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;p&gt;This project borrows heavily from Ruby's Rack and Python's WSGI;
thanks to those communities for their work.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2009-2019 Mark McGranaghan, James Reeves &amp;amp; contributors.&lt;/p&gt;
&lt;p&gt;Released under the MIT license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ring-clojure</author><guid isPermaLink="false">https://github.com/ring-clojure/ring</guid><pubDate>Tue, 24 Dec 2019 00:10:00 GMT</pubDate></item></channel></rss>