<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Processing, Today</title><link>https://github.com/trending/processing?since=daily</link><description>The top repositories on GitHub for processing, measured daily</description><pubDate>Sat, 21 Dec 2019 01:04:33 GMT</pubDate><lastBuildDate>Sat, 21 Dec 2019 01:04:33 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>transitland/transitland-processing-animation #1 in Processing, Today</title><link>https://github.com/transitland/transitland-processing-animation</link><description>&lt;p&gt;&lt;i&gt;Animating scheduled transit trips using the Transitland API and Processing&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-visualizing-scheduled-transit-frequency" class="anchor" aria-hidden="true" href="#visualizing-scheduled-transit-frequency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visualizing scheduled transit frequency&lt;/h1&gt;
&lt;p&gt;TransitFlow uses Mapzen's &lt;a href="https://transit.land/" rel="nofollow"&gt;Transitland API&lt;/a&gt; to download transit schedule data and &lt;a href="https://processing.org/" rel="nofollow"&gt;Processing&lt;/a&gt; with &lt;a href="http://unfoldingmaps.org/" rel="nofollow"&gt;Unfolding Maps&lt;/a&gt; to animate scheduled transit frequency.&lt;/p&gt;
&lt;p&gt;See this blog post for more info: &lt;a href="https://mapzen.com/blog/animating-transitland/" rel="nofollow"&gt;https://mapzen.com/blog/animating-transitland/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is an example animation generated for San Francisco with a single command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python transitflow.py --name=san_francisco --bbox=-122.515411,37.710714,-122.349243,37.853983 --clip_to_bbox&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/230827684?quality=1080p" title="San Francisco Transit Flows" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/59fd3f915198dc1950701f445d65655e36f3f9ce/687474703a2f2f692e696d6775722e636f6d2f337a46347545372e706e67" alt="IMAGE ALT TEXT" data-canonical-src="http://i.imgur.com/3zF4uE7.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See here for more &lt;a href="https://vimeopro.com/willgeary/transit-flows" rel="nofollow"&gt;transit flow visualizations&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install-processing" class="anchor" aria-hidden="true" href="#install-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Processing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download &lt;a href="https://processing.org/" rel="nofollow"&gt;Processing 3&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Download &lt;a href="http://services.informatik.hs-mannheim.de/~nagel/GDV/Unfolding_for_processing_0.9.9beta.zip" rel="nofollow"&gt;Unfolding Maps version 0.9.9 for Processing 3&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;~/Documents/Processing/libraries&lt;/code&gt; on your machine.&lt;/li&gt;
&lt;li&gt;Drag and drop the unzipped Unfolding Maps folder into &lt;code&gt;~/Documents/Processing/libraries&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Open Processing, navigate to Sketch &amp;gt; Import Library &amp;gt; Add Libary. Search for "Video Export" and click Install.&lt;/li&gt;
&lt;li&gt;Quit and re-open Processing.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-instructions" class="anchor" aria-hidden="true" href="#instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instructions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Download the repository, unzip it and &lt;code&gt;cd&lt;/code&gt; into it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt; to install the python requirements (pandas, numpy, requests)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd transitflow&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, you are ready to download transit schedule data and generate visualizations.&lt;/p&gt;
&lt;p&gt;There are two ways to go about using this tool:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-1-search-by-transit-operator-onestop-id" class="anchor" aria-hidden="true" href="#1-search-by-transit-operator-onestop-id"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1) Search by transit operator Onestop ID&lt;/h3&gt;
&lt;p&gt;You can visualize a single transit operator by passing in the operator's Onestop ID. What's a Onestop ID, you ask? As part of Transitland's &lt;a href="https://transit.land/documentation/onestop-id-scheme/" rel="nofollow"&gt;Onestop ID  Scheme&lt;/a&gt;, every transit operator, route, feed and stop are assigned a unique identifier called a Onestop ID.&lt;/p&gt;
&lt;p&gt;You can look up an operator's Onestop ID using the &lt;a href="https://transit.land/feed-registry/" rel="nofollow"&gt;Transitland Feed Registery&lt;/a&gt;. For example, the Onestop ID for San Francisco BART is &lt;code&gt;o-9q9-bart&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Visualize one day of BART transit flows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;python transitflow.py --name=bart --operator=o-9q9-bart&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/230364702?quality=1080p" title="One Day of BART Trips" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bfe7393742cf45904fbe81727b7ef0f22a071aa4/687474703a2f2f692e696d6775722e636f6d2f4e4650456e596a2e706e67" alt="IMAGE ALT TEXT" data-canonical-src="http://i.imgur.com/NFPEnYj.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2-search-by-bounding-box" class="anchor" aria-hidden="true" href="#2-search-by-bounding-box"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2) Search by bounding box&lt;/h3&gt;
&lt;p&gt;You can also visualize transit flows by searching for all operators within a bounding box. The bounding box must be in the format: West, South, East, North. I like using &lt;a href="http://bboxfinder.com/" rel="nofollow"&gt;bboxfinder&lt;/a&gt; to draw bounding boxes. For example, here's the command to visualize transit flows in Chicago:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;python transitflow.py --name=chicago --bbox=-87.992249,41.605175,-87.302856,42.126747 --clip_to_bbox --exclude=o-9-amtrak,o-9-amtrakcharteredvehicle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/230857619?quality=1080p" title="Chicago Transit Flows" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/79093495512fb329402f2a2c76efec442999af1a/687474703a2f2f692e696d6775722e636f6d2f704837417767422e706e67" alt="IMAGE ALT TEXT" data-canonical-src="http://i.imgur.com/pH7AwgB.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note, the use of &lt;code&gt;--clip_to_bbox&lt;/code&gt;. This command will clip the dataset to only include transit vehicle trips within the specified bounding box, both in the geo-visualization and in the vehicle count calculations that drive the stacked bar chart.&lt;/p&gt;
&lt;p&gt;Also, note the optional use of &lt;code&gt;--exclude&lt;/code&gt;. This command will exclude specified operators, Amtrak in this case.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-play-your-animation" class="anchor" aria-hidden="true" href="#play-your-animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Play your animation&lt;/h3&gt;
&lt;p&gt;Navigate to &lt;code&gt;sketches\{name}\{date}\sketch&lt;/code&gt; and open the &lt;code&gt;sketch.pde&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;This should open the Processing application. Simply click Play or &lt;code&gt;command + r&lt;/code&gt; to play the animation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-change-map-providers" class="anchor" aria-hidden="true" href="#change-map-providers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change map providers&lt;/h3&gt;
&lt;p&gt;Cycle through the first two rows on the keyboard (1 to 0, q to u) to see the built in map provider options.&lt;/p&gt;
&lt;p&gt;Read more about Unfolding Maps map providers here: &lt;a href="http://unfoldingmaps.org/tutorials/mapprovider-and-tiles.html" rel="nofollow"&gt;http://unfoldingmaps.org/tutorials/mapprovider-and-tiles.html&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-panning-and-zooming" class="anchor" aria-hidden="true" href="#panning-and-zooming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Panning and zooming&lt;/h3&gt;
&lt;p&gt;You can pan around on the map by clicking and dragging it. You can zoom in with Shift + "+" and zoom out with "-".&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-exporting-to-video" class="anchor" aria-hidden="true" href="#exporting-to-video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exporting to video&lt;/h3&gt;
&lt;p&gt;Open &lt;code&gt;sketch.pde&lt;/code&gt; file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For a quick, medium quality video, set &lt;code&gt;boolean recording = true;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For a high quality video, set &lt;code&gt;boolean recording = true;&lt;/code&gt; and &lt;code&gt;boolean HQ = true;&lt;/code&gt;. This will generate 3,600 .tiff frames that can be stiched together using ffmpeg or Processing's built in movie maker tool.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-command-line-arguments" class="anchor" aria-hidden="true" href="#command-line-arguments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line arguments&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Key&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Status&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;--name&lt;/td&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;The name of your project&lt;/td&gt;
&lt;td&gt;--name=boston&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--date&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;Defaults to today's date&lt;/td&gt;
&lt;td&gt;--date=2017-08-15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--operator&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;Operator Onestop ID&lt;/td&gt;
&lt;td&gt;--operator=o-drt-mbta&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--bbox&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;West, South, East, North&lt;/td&gt;
&lt;td&gt;--bbox=-71.4811,42.1135,-70.6709,42.6157&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--clip_to_bbox&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;Clip results to bounding box&lt;/td&gt;
&lt;td&gt;--clip_to_bbox&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--exclude&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;Operators to be excluded&lt;/td&gt;
&lt;td&gt;--exclude=o-9-amtrak&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--apikey&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;Mapzen API key&lt;/td&gt;
&lt;td&gt;--apikey=mapzen-abc1234&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A Mapzen API Key is optional, but recommended for faster results. Sign up for a &lt;a href="https://mapzen.com/developers/sign_up" rel="nofollow"&gt;Mapzen API Key here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;If your visualization is not working as expected...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Make sure that the operator of interest actually has service on the specified date (no &lt;code&gt;--date&lt;/code&gt; argument defaults to today's date). Some operators are better than others at sharing updated data. For example, Mexico City's &lt;a href="https://transit.land/api/v1/schedule_stop_pairs?operator_onestop_id=o-9g3w-metrobs" rel="nofollow"&gt;Metrobús&lt;/a&gt; has a &lt;code&gt;service_end_date&lt;/code&gt; of 2016-08-17. So, you would need pass in a &lt;code&gt;--date=2016-08-17&lt;/code&gt; or earlier or to download and visualize the Metrobús.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure that Transitland has coverage in your area of interest. You can search for transit operators and feeds using the &lt;a href="https://transit.land/feed-registry/" rel="nofollow"&gt;Transitland Feed Registery&lt;/a&gt;. Is Transitland missing a feed? &lt;a href="https://transit.land/participate/" rel="nofollow"&gt;Let us know&lt;/a&gt;!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-attribution" class="anchor" aria-hidden="true" href="#attribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Attribution&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/wgeary" rel="nofollow"&gt;Will Geary&lt;/a&gt; for Mapzen, August 2017&lt;/li&gt;
&lt;li&gt;Transit schedule data from &lt;a href="https://mapzen.com/" rel="nofollow"&gt;Mapzen&lt;/a&gt;, &lt;a href="https://transit.land/" rel="nofollow"&gt;Transitland&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Map tiles from &lt;a href="https://stamen.com/" rel="nofollow"&gt;Stamen&lt;/a&gt;, &lt;a href="http://carto.com/" rel="nofollow"&gt;Carto&lt;/a&gt;, &lt;a href="http://www.openstreetmap.org/" rel="nofollow"&gt;OpenStreetMap&lt;/a&gt;, &lt;a href="http://www.esri.com/" rel="nofollow"&gt;ESRI&lt;/a&gt;, &lt;a href="https://www.bing.com/maps" rel="nofollow"&gt;Bing Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The visualization incorporates Processing code from &lt;a href="https://github.com/juanfrans-courses/DataScienceSocietyWorkshop"&gt;this workshop&lt;/a&gt; by &lt;a href="http://juanfrans.com/" rel="nofollow"&gt;Juan Francisco Saldarriaga&lt;/a&gt; to plot trips using linear interpolation. It also relies on the &lt;a href="http://unfoldingmaps.org/" rel="nofollow"&gt;Unfolding Maps&lt;/a&gt; library by &lt;a href="http://tillnagel.com/" rel="nofollow"&gt;Till Nagel&lt;/a&gt; for its built-in map tiles and functions to convert geolocations into screen positions. Thank you to Juan and Till for your inspiring work!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sources-of-inspiration" class="anchor" aria-hidden="true" href="#sources-of-inspiration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sources of inspiration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="http://tillnagel.com/2013/12/shanghai-metro-flow/" rel="nofollow"&gt;Shanghai Metro Flow&lt;/a&gt;&lt;/em&gt;, Till Nagel&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="http://juanfrans.com/projects/barcelonaCycleChallenge.html" rel="nofollow"&gt;Barcelona Cycle Challenge&lt;/a&gt;&lt;/em&gt;, Juan Francisco Saldarriaga&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="http://labs.densitydesign.org/carsharing/" rel="nofollow"&gt;Seven Days of Car-Sharing in Milan&lt;/a&gt;&lt;/em&gt;, Matteo Azzi, Daniele Ciminieri, others&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="http://chriswhong.github.io/nyctaxi/" rel="nofollow"&gt;NYC Taxis: A Day in the Life&lt;/a&gt;&lt;/em&gt;, Chris Whong&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="http://toddwschneider.com/posts/analyzing-1-1-billion-nyc-taxi-and-uber-trips-with-a-vengeance/" rel="nofollow"&gt;Analyzing 1.1 Billion NYC Taxi and Uber Trips&lt;/a&gt;&lt;/em&gt;, Todd Schneider&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See more visualizations created with TransitFlow here: &lt;a href="https://vimeopro.com/willgeary/transit-flows" rel="nofollow"&gt;https://vimeopro.com/willgeary/transit-flows&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-press--recognition" class="anchor" aria-hidden="true" href="#press--recognition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Press &amp;amp; Recognition&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The Guardian&lt;/strong&gt; &lt;a href="https://www.theguardian.com/cities/2017/oct/04/hypnotic-beauty-public-transport-mapped" rel="nofollow"&gt;&lt;em&gt;"Go with the flow: the hypnotic beauty of public transport – mapped"&lt;/em&gt;&lt;/a&gt; (October 2017)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Le Monde&lt;/strong&gt; &lt;a href="http://www.lemonde.fr/smart-cities/article/2017/10/12/l-etrange-beaute-des-flux-de-paris-dans-une-carte-animee_5200106_4811534.html#zqdvSAkUWw754WcX.99" rel="nofollow"&gt;&lt;em&gt;"L’étrange beauté des flux de Paris dans une carte animée"&lt;/em&gt;&lt;/a&gt; (December 2017)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kantar Information is Beautiful Awards Longlist&lt;/strong&gt; &lt;a href="https://www.informationisbeautifulawards.com/showcase/2347" rel="nofollow"&gt;&lt;em&gt;"Multimodal Symphony"&lt;/em&gt;&lt;/a&gt; (October 2017)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CityLab&lt;/strong&gt; &lt;a href="https://www.citylab.com/transportation/2017/09/visualize-transit-frequency-nearly-anywhere-in-the-world/538725/" rel="nofollow"&gt;&lt;em&gt;"Mapping the Ebb and Flow of Transit Around the World"&lt;/em&gt;&lt;/a&gt; (September 2017)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mobility Lab&lt;/strong&gt; &lt;a href="https://mobilitylab.org/2017/04/11/nyc-visualization-transit-options/" rel="nofollow"&gt;&lt;em&gt;"A visualized day of New York’s transit options, working together"&lt;/em&gt;&lt;/a&gt; (April 2017)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Planetizen&lt;/strong&gt;&lt;a href="https://www.planetizen.com/node/94598/watch-transit-move-these-animated-maps" rel="nofollow"&gt;&lt;em&gt;"Watch Transit Move With These Animated Maps"&lt;/em&gt;&lt;/a&gt; (September 2017)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>transitland</author><guid isPermaLink="false">https://github.com/transitland/transitland-processing-animation</guid><pubDate>Sat, 21 Dec 2019 00:01:00 GMT</pubDate></item></channel></rss>