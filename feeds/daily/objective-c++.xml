<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Objective-C++, Today</title><link>https://github.com/trending/objective-c++?since=daily</link><description>The top repositories on GitHub for objective-c++, measured daily</description><pubDate>Tue, 12 Nov 2019 01:08:27 GMT</pubDate><lastBuildDate>Tue, 12 Nov 2019 01:08:27 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>facebook/pop #1 in Objective-C++, Today</title><link>https://github.com/facebook/pop</link><description>&lt;p&gt;&lt;i&gt;An extensible iOS and OS X animation library, useful for physics-based interactions.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/facebook/pop/blob/master/Images/pop.gif?raw=true"&gt;&lt;img src="https://github.com/facebook/pop/raw/master/Images/pop.gif?raw=true" alt="pop" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pop is an extensible animation engine for iOS, tvOS, and OS X. In addition to basic static animations, it supports spring and decay dynamic animations, making it useful for building realistic, physics-based interactions. The API allows quick integration with existing Objective-C or Swift codebases and enables the animation of any property on any object. It's a mature and well-tested framework that drives all the animations and transitions in &lt;a href="https://en.wikipedia.org/wiki/Facebook_Paper" rel="nofollow"&gt;Paper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/facebook/pop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9930e41ff58d33e1975e2790e45b25aa0910b357/68747470733a2f2f7472617669732d63692e6f72672f66616365626f6f6b2f706f702e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/facebook/pop.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Pop is available on &lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;. Just add the following to your project Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pop&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bugs are first fixed in master and then made available via a designated release. If you tend to live on the bleeding edge, you can use Pop from master with the following Podfile entry:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pop&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:git&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/facebook/pop.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-framework-manual" class="anchor" aria-hidden="true" href="#framework-manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Framework (manual)&lt;/h3&gt;
&lt;p&gt;By adding the project to your project and adding pop.embedded framework to the Embedded Binaries section on the General tab of your app's target, you can set up pop in seconds! This also enables &lt;code&gt;@import pop&lt;/code&gt; syntax with header modules.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: because of some awkward limitations with Xcode, embedded binaries must share the same name as the module and must have &lt;code&gt;.framework&lt;/code&gt; as an extension. This means that you'll see three pop.frameworks when adding embedded binaries (one for OS X, one for tvOS, and one for iOS). You'll need to be sure to add the right one; they appear identically in the list but note the list is populated in order of targets. You can verify the correct one was chosen by checking the path next to the framework listed, in the format &lt;code&gt;&amp;lt;configuration&amp;gt;-&amp;lt;platform&amp;gt;&lt;/code&gt; (e.g. &lt;code&gt;Debug-iphoneos&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Images/EmbeddedBinaries.png?raw=true"&gt;&lt;img src="Images/EmbeddedBinaries.png?raw=true" alt="Embedded Binaries" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: this method does not currently play nicely with workspaces. Since targets can only depend on and embed products from other targets in the same project, it only works when pop.xcodeproj is added as a subproject to the current target's project. Otherwise, you'll need to manually set the build ordering in the scheme and copy in the product.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-static-library-manual" class="anchor" aria-hidden="true" href="#static-library-manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Static Library (manual)&lt;/h3&gt;
&lt;p&gt;Alternatively, you can add the project to your workspace and adopt the provided configuration files or manually copy the files under the pop subdirectory into your project. If installing manually, ensure the C++ standard library is also linked by including &lt;code&gt;-lc++&lt;/code&gt; to your project linker flags.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Pop adopts the Core Animation explicit animation programming model. Use by including the following import:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c" class="anchor" aria-hidden="true" href="#objective-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;pop/POP.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or if you're using the embedded framework:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;@import pop;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift" class="anchor" aria-hidden="true" href="#swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;pop&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-start-stop--update" class="anchor" aria-hidden="true" href="#start-stop--update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start, Stop &amp;amp; Update&lt;/h3&gt;
&lt;p&gt;To start an animation, add it to the object you wish to animate:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-1" class="anchor" aria-hidden="true" href="#objective-c-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPSpringAnimation *anim = [POPSpringAnimation &lt;span class="pl-c1"&gt;animation&lt;/span&gt;];
...
[layer &lt;span class="pl-c1"&gt;pop_addAnimation:&lt;/span&gt;anim &lt;span class="pl-c1"&gt;forKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-1" class="anchor" aria-hidden="true" href="#swift-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;POPSpringAnimation&lt;/span&gt;()
&lt;span class="pl-k"&gt;...&lt;/span&gt;
layer.&lt;span class="pl-c1"&gt;pop_add&lt;/span&gt;(anim, &lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To stop an animation, remove it from the object referencing the key specified on start:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-2" class="anchor" aria-hidden="true" href="#objective-c-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;[layer &lt;span class="pl-c1"&gt;pop_removeAnimationForKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-2" class="anchor" aria-hidden="true" href="#swift-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;layer.&lt;span class="pl-c1"&gt;pop_removeAnimation&lt;/span&gt;(&lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The key can also be used to query for the existence of an animation. Updating the toValue of a running animation can provide the most seamless way to change course:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-3" class="anchor" aria-hidden="true" href="#objective-c-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;anim = [layer &lt;span class="pl-c1"&gt;pop_animationForKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-k"&gt;if&lt;/span&gt; (anim) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; update to value to new destination &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  anim.&lt;span class="pl-smi"&gt;toValue&lt;/span&gt; = @(&lt;span class="pl-c1"&gt;42.0&lt;/span&gt;);
} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; create and start a new animation &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  ....
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-3" class="anchor" aria-hidden="true" href="#swift-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; layer.&lt;span class="pl-c1"&gt;pop_animation&lt;/span&gt;(&lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;as?&lt;/span&gt; POPSpringAnimation {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; update to value to new destination &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    anim.&lt;span class="pl-smi"&gt;toValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42.0&lt;/span&gt;
} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; create and start a new animation &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;....&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While a layer was used in the above examples, the Pop interface is implemented as a category addition on NSObject. Any NSObject or subclass can be animated.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-types" class="anchor" aria-hidden="true" href="#types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Types&lt;/h3&gt;
&lt;p&gt;There are four concrete animation types: spring, decay, basic and custom.&lt;/p&gt;
&lt;p&gt;Spring animations can be used to give objects a delightful bounce. In this example, we use a spring animation to animate a layer's bounds from its current value to (0, 0, 400, 400):&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-4" class="anchor" aria-hidden="true" href="#objective-c-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPSpringAnimation *anim = [POPSpringAnimation &lt;span class="pl-c1"&gt;animationWithPropertyNamed:&lt;/span&gt;&lt;span class="pl-c1"&gt;kPOPLayerBounds&lt;/span&gt;];
anim.toValue = [&lt;span class="pl-c1"&gt;NSValue&lt;/span&gt; &lt;span class="pl-c1"&gt;valueWithCGRect:&lt;/span&gt;&lt;span class="pl-c1"&gt;CGRectMake&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;400&lt;/span&gt;, &lt;span class="pl-c1"&gt;400&lt;/span&gt;)];
[layer &lt;span class="pl-c1"&gt;pop_addAnimation:&lt;/span&gt;anim &lt;span class="pl-c1"&gt;forKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;size&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-4" class="anchor" aria-hidden="true" href="#swift-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;POPSpringAnimation&lt;/span&gt;(&lt;span class="pl-c1"&gt;propertyNamed&lt;/span&gt;: kPOPLayerBounds) {
    anim.&lt;span class="pl-smi"&gt;toValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSValue&lt;/span&gt;(&lt;span class="pl-c1"&gt;cgRect&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGRect&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;width&lt;/span&gt;: &lt;span class="pl-c1"&gt;400&lt;/span&gt;, &lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;400&lt;/span&gt;))
    layer.&lt;span class="pl-c1"&gt;pop_add&lt;/span&gt;(anim, &lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;size&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Decay animations can be used to gradually slow an object to a halt. In this example, we decay a layer's positionX from it's current value and velocity 1000pts per second:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-5" class="anchor" aria-hidden="true" href="#objective-c-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPDecayAnimation *anim = [POPDecayAnimation &lt;span class="pl-c1"&gt;animationWithPropertyNamed:&lt;/span&gt;&lt;span class="pl-c1"&gt;kPOPLayerPositionX&lt;/span&gt;];
anim.velocity = @(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;.);
[layer &lt;span class="pl-c1"&gt;pop_addAnimation:&lt;/span&gt;anim &lt;span class="pl-c1"&gt;forKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;slide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-5" class="anchor" aria-hidden="true" href="#swift-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;POPDecayAnimation&lt;/span&gt;(&lt;span class="pl-c1"&gt;propertyNamed&lt;/span&gt;: kPOPLayerPositionX) {
    anim.&lt;span class="pl-smi"&gt;velocity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000.0&lt;/span&gt;
    layer.&lt;span class="pl-c1"&gt;pop_add&lt;/span&gt;(anim, &lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;slide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basic animations can be used to interpolate values over a specified time period. To use an ease-in ease-out animation to animate a view's alpha from 0.0 to 1.0 over the default duration:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-6" class="anchor" aria-hidden="true" href="#objective-c-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPBasicAnimation *anim = [POPBasicAnimation &lt;span class="pl-c1"&gt;animationWithPropertyNamed:&lt;/span&gt;&lt;span class="pl-c1"&gt;kPOPViewAlpha&lt;/span&gt;];
anim.timingFunction = [CAMediaTimingFunction &lt;span class="pl-c1"&gt;functionWithName:&lt;/span&gt;&lt;span class="pl-c1"&gt;kCAMediaTimingFunctionEaseInEaseOut&lt;/span&gt;];
anim.fromValue = @(&lt;span class="pl-c1"&gt;0.0&lt;/span&gt;);
anim.toValue = @(&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;);
[view &lt;span class="pl-c1"&gt;pop_addAnimation:&lt;/span&gt;anim &lt;span class="pl-c1"&gt;forKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;fade&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-6" class="anchor" aria-hidden="true" href="#swift-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;POPBasicAnimation&lt;/span&gt;(&lt;span class="pl-c1"&gt;propertyNamed&lt;/span&gt;: kPOPViewAlpha) {
    anim.&lt;span class="pl-smi"&gt;timingFunction&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CAMediaTimingFunction&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: kCAMediaTimingFunctionEaseInEaseOut)
    anim.&lt;span class="pl-smi"&gt;fromValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.0&lt;/span&gt;
    anim.&lt;span class="pl-smi"&gt;toValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;
    view.&lt;span class="pl-c1"&gt;pop_add&lt;/span&gt;(anim, &lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fade&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;POPCustomAnimation&lt;/code&gt; makes creating custom animations and transitions easier by handling CADisplayLink and associated time-step management. See header for more details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-properties" class="anchor" aria-hidden="true" href="#properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Properties&lt;/h3&gt;
&lt;p&gt;The property animated is specified by the &lt;code&gt;POPAnimatableProperty&lt;/code&gt; class. In this example we create a spring animation and explicitly set the animatable property corresponding to &lt;code&gt;-[CALayer bounds]&lt;/code&gt;:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-7" class="anchor" aria-hidden="true" href="#objective-c-7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPSpringAnimation *anim = [POPSpringAnimation &lt;span class="pl-c1"&gt;animation&lt;/span&gt;];
anim.property = [POPAnimatableProperty &lt;span class="pl-c1"&gt;propertyWithName:&lt;/span&gt;&lt;span class="pl-c1"&gt;kPOPLayerBounds&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-7" class="anchor" aria-hidden="true" href="#swift-7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;POPSpringAnimation&lt;/span&gt;()
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; property &lt;span class="pl-k"&gt;=&lt;/span&gt; POPAnimatableProperty.&lt;span class="pl-c1"&gt;property&lt;/span&gt;(&lt;span class="pl-c1"&gt;withName&lt;/span&gt;: kPOPLayerBounds) &lt;span class="pl-k"&gt;as?&lt;/span&gt; POPAnimatableProperty {
    anim.&lt;span class="pl-smi"&gt;property&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; property
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The framework provides many common layer and view animatable properties out of box. You can animate a custom property by creating a new instance of the class. In this example, we declare a custom volume property:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-8" class="anchor" aria-hidden="true" href="#objective-c-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;prop = [POPAnimatableProperty &lt;span class="pl-c1"&gt;propertyWithName:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;com.foo.radio.volume&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;initializer:&lt;/span&gt;^(POPMutableAnimatableProperty *prop) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; read value&lt;/span&gt;
  prop.&lt;span class="pl-smi"&gt;readBlock&lt;/span&gt; = ^(&lt;span class="pl-c1"&gt;id&lt;/span&gt; obj, &lt;span class="pl-c1"&gt;CGFloat&lt;/span&gt; values[]) {
    values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] = [obj &lt;span class="pl-c1"&gt;volume&lt;/span&gt;];
  };
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; write value&lt;/span&gt;
  prop.&lt;span class="pl-smi"&gt;writeBlock&lt;/span&gt; = ^(&lt;span class="pl-c1"&gt;id&lt;/span&gt; obj, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;CGFloat&lt;/span&gt; values[]) {
    [obj &lt;span class="pl-c1"&gt;setVolume:&lt;/span&gt;values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]];
  };
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; dynamics threshold&lt;/span&gt;
  prop.&lt;span class="pl-smi"&gt;threshold&lt;/span&gt; = &lt;span class="pl-c1"&gt;0.01&lt;/span&gt;;
}];

anim.property = prop;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-8" class="anchor" aria-hidden="true" href="#swift-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; prop &lt;span class="pl-k"&gt;=&lt;/span&gt; POPAnimatableProperty.&lt;span class="pl-c1"&gt;property&lt;/span&gt;(&lt;span class="pl-c1"&gt;withName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.foo.radio.volume&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;initializer&lt;/span&gt;: { prop &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; prop &lt;span class="pl-k"&gt;=&lt;/span&gt; prop &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    }
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; read value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    prop.&lt;span class="pl-smi"&gt;readBlock&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { obj, values &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; obj &lt;span class="pl-k"&gt;as?&lt;/span&gt; Volumeable, &lt;span class="pl-k"&gt;let&lt;/span&gt; values &lt;span class="pl-k"&gt;=&lt;/span&gt; values &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt;
        }

        values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; obj.&lt;span class="pl-smi"&gt;volume&lt;/span&gt;
    }
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; write value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    prop.&lt;span class="pl-smi"&gt;writeBlock&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { obj, values &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; obj &lt;span class="pl-k"&gt;as?&lt;/span&gt; Volumeable, &lt;span class="pl-k"&gt;let&lt;/span&gt; values &lt;span class="pl-k"&gt;=&lt;/span&gt; values &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt;
        }

        obj.&lt;span class="pl-smi"&gt;volume&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
    }
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; dynamics threshold&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    prop.&lt;span class="pl-smi"&gt;threshold&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.01&lt;/span&gt;
}) &lt;span class="pl-k"&gt;as?&lt;/span&gt; POPAnimatableProperty {
    anim.&lt;span class="pl-smi"&gt;property&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; prop
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a complete listing of provided animatable properties, as well more information on declaring custom properties see &lt;code&gt;POPAnimatableProperty.h&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h3&gt;
&lt;p&gt;Here are a few tips when debugging. Pop obeys the Simulator's Toggle Slow Animations setting. Try enabling it to slow down animations and more easily observe interactions.&lt;/p&gt;
&lt;p&gt;Consider naming your animations. This will allow you to more easily identify them when referencing them, either via logging or in the debugger:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-9" class="anchor" aria-hidden="true" href="#objective-c-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;anim.name = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;springOpen&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-9" class="anchor" aria-hidden="true" href="#swift-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;anim.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;springOpen&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each animation comes with an associated tracer. The tracer allows you to record all animation-related events, in a fast and efficient manner, allowing you to query and analyze them after animation completion. The below example starts the tracer and configures it to log all events on animation completion:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-10" class="anchor" aria-hidden="true" href="#objective-c-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPAnimationTracer *tracer = anim.tracer;
tracer.shouldLogAndResetOnCompletion = &lt;span class="pl-c1"&gt;YES&lt;/span&gt;;
[tracer &lt;span class="pl-c1"&gt;start&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-10" class="anchor" aria-hidden="true" href="#swift-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; tracer &lt;span class="pl-k"&gt;=&lt;/span&gt; anim.&lt;span class="pl-smi"&gt;tracer&lt;/span&gt; {
    tracer.&lt;span class="pl-smi"&gt;shouldLogAndResetOnCompletion&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    tracer.&lt;span class="pl-c1"&gt;start&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;code&gt;POPAnimationTracer.h&lt;/code&gt; for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;Pop has extensive unit test coverage. To install test dependencies, navigate to the root pop directory and type:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pod install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming CocoaPods is installed, this will include the necessary OCMock dependency to the unit test targets.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-scenekit" class="anchor" aria-hidden="true" href="#scenekit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SceneKit&lt;/h2&gt;
&lt;p&gt;Due to SceneKit requiring iOS 8 and OS X 10.9, POP's SceneKit extensions aren't provided out of box. Unfortunately, &lt;a href="https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPFrameworks/Concepts/WeakLinking.html" rel="nofollow"&gt;weakly linked frameworks&lt;/a&gt; cannot be used due to issues mentioned in the &lt;a href="https://developer.apple.com/library/ios/releasenotes/DeveloperTools/RN-Xcode/Chapters/xc6_release_notes.html" rel="nofollow"&gt;Xcode 6.1 Release Notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To remedy this, you can easily opt-in to use SceneKit! Simply add this to the Preprocessor Macros section of your Xcode Project:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;POP_USE_SCENEKIT=1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;p&gt;A collection of links to external resources that may prove valuable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hfossli/aggeometrykit-pop"&gt;AGGeometryKit+POP - Animating Quadrilaterals with Pop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/CoreAnimation_guide/Introduction/Introduction.html" rel="nofollow"&gt;Apple – Core Animation Programming Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://iosdevtips.co/post/84571595353/replicating-uiscrollviews-deceleration-with-facebook" rel="nofollow"&gt;iOS Development Tips – UIScrollView-like deceleration with Pop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/callmeed/pop-playground"&gt;Pop Playground – Repository of Pop animation examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://victorbaro.com/2014/05/pop-playground-playing-with-facebooks-framework/" rel="nofollow"&gt;Pop Playground 2 – Playing with Facebook's framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewcheok/POP-MCAnimate"&gt;POP-MCAnimate – Concise syntax for the Pop animation framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schneiderandre/popping"&gt;Popping - Great examples in one project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://facebook.github.io/rebound/" rel="nofollow"&gt;Rebound – Spring Animations for Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tapity.com/tutorial-getting-started-with-pop/" rel="nofollow"&gt;Tapity Tutorial – Getting Started with Pop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/tweaks"&gt;Tweaks – Easily adjust parameters for iOS apps in development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxmyers/FacebookPop"&gt;POP Tutorial in 5 steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/victorBaro/VBFPopFlatButton"&gt;VBFPopFlatButton – Flat animatable button, using Pop to transition between states&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See the CONTRIBUTING file for how to help out.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Pop is released under a BSD License. See LICENSE file for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/pop</guid><pubDate>Tue, 12 Nov 2019 00:01:00 GMT</pubDate></item><item><title>avibrazil/RDM #2 in Objective-C++, Today</title><link>https://github.com/avibrazil/RDM</link><description>&lt;p&gt;&lt;i&gt;Easily set Mac Retina display to higher unsupported resolutions&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;This is a tool that lets you use MacBook Pro Retina's highest and unsupported resolutions.
As an example, a Retina MacBook Pro 13" can be set to 3360×2100 maximum resolution, as
opposed to Apple's max supported 1680×1050. It is accessible from the menu bar.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/3484242/7100316/255a7d74-dff0-11e4-9bf9-16e726336e29.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/3484242/7100316/255a7d74-dff0-11e4-9bf9-16e726336e29.png" alt="rdm-screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You should prefer resolutions marked with &lt;g-emoji class="g-emoji" alias="zap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a1.png"&gt;⚡️&lt;/g-emoji&gt; (lightning), which indicates the resolution
is HiDPI or 2× or more dense in pixels.&lt;/p&gt;
&lt;p&gt;For more practical results, add RDM.app to your Login Items in &lt;strong&gt;System Preferences ➡ Users &amp;amp; Groups ➡ Login Items&lt;/strong&gt;.
This way RDM will run automatically on startup.&lt;/p&gt;
&lt;p&gt;This software was studied and released &lt;a href="http://garethjenkins.com/2012/07/01/investigating-a-high-resolution-retina-utility-for-macbook-pro-1x-and-2x-modes/#comment-623" rel="nofollow"&gt;here&lt;/a&gt;
and &lt;a href="http://www.reddit.com/r/apple/comments/vi9yf/set_your_retina_macbook_pros_resolution_to/" rel="nofollow"&gt;here&lt;/a&gt;
by its original authors. I just improved the build system and Makefile, fixed the icon,
added support for easy installable package (PKG, DMG) and improved the way menu is
displayed. I don't know what is the license by its authors because it came 100%
uncommented and undocumented. But I'm sure they would enjoy you to freely use it. Me too.&lt;/p&gt;
&lt;p&gt;Want installable binary package? &lt;a href="http://avi.alkalay.net/software/RDM/" rel="nofollow"&gt;It is here&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>avibrazil</author><guid isPermaLink="false">https://github.com/avibrazil/RDM</guid><pubDate>Tue, 12 Nov 2019 00:02:00 GMT</pubDate></item><item><title>textmate/textmate #3 in Objective-C++, Today</title><link>https://github.com/textmate/textmate</link><description>&lt;p&gt;&lt;i&gt;TextMate is a graphical text editor for macOS 10.10 or later&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-textmate" class="anchor" aria-hidden="true" href="#textmate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TextMate&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h2&gt;
&lt;p&gt;You can &lt;a href="http://macromates.com/download" rel="nofollow"&gt;download TextMate from here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-feedback" class="anchor" aria-hidden="true" href="#feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback&lt;/h2&gt;
&lt;p&gt;You can use &lt;a href="http://lists.macromates.com/listinfo/textmate" rel="nofollow"&gt;the TextMate mailing list&lt;/a&gt; or #textmate IRC channel on &lt;a href="http://freenode.net/" rel="nofollow"&gt;freenode.net&lt;/a&gt; for questions, comments, and bug reports.&lt;/p&gt;
&lt;p&gt;You can also &lt;a href="http://macromates.com/contact" rel="nofollow"&gt;contact MacroMates&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before you submit a bug report please read the &lt;a href="http://kb.textmate.org/writing_bug_reports" rel="nofollow"&gt;writing bug reports&lt;/a&gt; instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-screenshot" class="anchor" aria-hidden="true" href="#screenshot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a36aa85ba9cd3600fb7db5cd5cf2b306acd55a47/68747470733a2f2f7261772e6769746875622e636f6d2f746578746d6174652f746578746d6174652f67682d70616765732f696d616765732f73637265656e73686f742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a36aa85ba9cd3600fb7db5cd5cf2b306acd55a47/68747470733a2f2f7261772e6769746875622e636f6d2f746578746d6174652f746578746d6174652f67682d70616765732f696d616765732f73637265656e73686f742e706e67" alt="textmate" data-canonical-src="https://raw.github.com/textmate/textmate/gh-pages/images/screenshot.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-bootstrap" class="anchor" aria-hidden="true" href="#bootstrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bootstrap&lt;/h2&gt;
&lt;p&gt;To bootstrap the build you need to run &lt;code&gt;./configure&lt;/code&gt; (in the root of the source tree). You can set a few (environment) variables read by this script that change the generated build file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;builddir&lt;/code&gt; — location of built files. Defaults to &lt;code&gt;~/build/TextMate&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;identity&lt;/code&gt; — for Apple’s &lt;code&gt;codesign&lt;/code&gt;. Defaults to ad-hoc signing, which does not use an identity at all.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boostdir&lt;/code&gt; — location of boost includes. By default it will search various locations including MacPorts and Homebrew.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sparsedir&lt;/code&gt; — location of sparsehash includes. By default it will search various locations including MacPorts and Homebrew.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the simplest case (assuming &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; is installed) you would run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install ragel boost multimarkdown hg ninja capnp google-sparsehash libressl
git clone --recursive https://github.com/textmate/textmate.git
cd textmate
./configure &amp;amp;&amp;amp; ninja
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you're using &lt;a href="http://www.macports.org/" rel="nofollow"&gt;MacPorts&lt;/a&gt; then instead run this line to install dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo port install ninja ragel boost multimarkdown mercurial sparsehash libressl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unless you’re using &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; then &lt;a href="https://github.com/capnproto/capnproto.git"&gt;Cap’n Proto&lt;/a&gt; must be manually installed. Feel free to submit a PR to update &lt;code&gt;configure&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;port&lt;/code&gt; fails with a build error then likely you need to agree (system-wide) to Apple’s Xcode license:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo xcodebuild -license
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Building TextMate has the following dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ninja-build.org/" rel="nofollow"&gt;ninja&lt;/a&gt;         — build system similar to &lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.complang.org/ragel/" rel="nofollow"&gt;ragel&lt;/a&gt;         — state machine compiler&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.boost.org/" rel="nofollow"&gt;boost&lt;/a&gt;         — portable C++ source libraries&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.google.com/p/sparsehash/" rel="nofollow"&gt;sparsehash&lt;/a&gt;    — A cache friendly hash_map&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fletcherpenney.net/multimarkdown/" rel="nofollow"&gt;multimarkdown&lt;/a&gt; — marked-up plain text compiler&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mercurial-scm.org/" rel="nofollow"&gt;mercurial&lt;/a&gt;     — distributed SCM system&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/capnproto/capnproto.git"&gt;Cap’n Proto&lt;/a&gt; — serialization library&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.libressl.org" rel="nofollow"&gt;LibreSSL&lt;/a&gt; - OpenBSD fork of OpenSSL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In practice &lt;code&gt;hg&lt;/code&gt; (&lt;a href="https://www.mercurial-scm.org/" rel="nofollow"&gt;mercurial&lt;/a&gt;) is only required for the SCM library’s tests so you can skip this dependency if you don’t mind a failing test.&lt;/p&gt;
&lt;p&gt;If you want to avoid the libressl linker warnings about being built for different deployment target then run &lt;code&gt;brew edit libressl&lt;/code&gt; and make the following change:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-    system "./configure", *args
+    system "env", "LDFLAGS=-mmacosx-version-min=10.8", "CFLAGS=-mmacosx-version-min=10.8", "./configure", *args
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Afterward you must rebuild using: &lt;code&gt;brew reinstall --build-from-source libressl&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-within-textmate" class="anchor" aria-hidden="true" href="#building-from-within-textmate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from within TextMate&lt;/h2&gt;
&lt;p&gt;You should install the &lt;a href="https://github.com/textmate/ninja.tmbundle"&gt;Ninja&lt;/a&gt; bundle which can be installed via &lt;em&gt;Preferences&lt;/em&gt; → &lt;em&gt;Bundles&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;After this you can press ⌘B to build from within TextMate. In case you haven't already you also need to set up the &lt;code&gt;PATH&lt;/code&gt; variable either in &lt;em&gt;Preferences&lt;/em&gt; → &lt;em&gt;Variables&lt;/em&gt; or &lt;code&gt;~/.tm_properties&lt;/code&gt; so it can find &lt;code&gt;ninja&lt;/code&gt; and related tools; an example could be &lt;code&gt;$PATH:/opt/local/bin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The default target is &lt;code&gt;TextMate/run&lt;/code&gt;. This will relaunch TextMate but when called from within TextMate, a dialog will appear before the current instance is killed. As there is full session restore, it is safe to relaunch even with unsaved changes.&lt;/p&gt;
&lt;p&gt;If the current file is a test file then the target to build is changed to build the library to which the test belongs (this is done by setting &lt;code&gt;TM_NINJA_TARGET&lt;/code&gt; in the &lt;code&gt;.tm_properties&lt;/code&gt; file found in the root of the source tree).&lt;/p&gt;
&lt;p&gt;Similarly, if the current file belongs to an application target (other than &lt;code&gt;TextMate.app&lt;/code&gt;) then &lt;code&gt;TM_NINJA_TARGET&lt;/code&gt; is set to build and run this application.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-targets" class="anchor" aria-hidden="true" href="#build-targets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Targets&lt;/h2&gt;
&lt;p&gt;For the &lt;code&gt;TextMate.app&lt;/code&gt; application there are two symbolic build targets:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ninja TextMate      # Build and sign TextMate
ninja TextMate/run  # Build, sign, and (re)launch TextMate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To clean everything run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ninja -t clean
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-legal" class="anchor" aria-hidden="true" href="#legal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Legal&lt;/h1&gt;
&lt;p&gt;The source for TextMate is released under the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;
&lt;p&gt;TextMate is a trademark of Allan Odgaard.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>textmate</author><guid isPermaLink="false">https://github.com/textmate/textmate</guid><pubDate>Tue, 12 Nov 2019 00:03:00 GMT</pubDate></item></channel></rss>