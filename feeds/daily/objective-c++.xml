<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Objective-C++, Today</title><link>https://github.com/trending/objective-c++?since=daily</link><description>The top repositories on GitHub for objective-c++, measured daily</description><pubDate>Sat, 04 Jan 2020 01:10:52 GMT</pubDate><lastBuildDate>Sat, 04 Jan 2020 01:10:52 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>TextureGroup/Texture #1 in Objective-C++, Today</title><link>https://github.com/TextureGroup/Texture</link><description>&lt;p&gt;&lt;i&gt;Smooth asynchronous user interfaces for iOS apps.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-coming-from-asyncdisplaykit-learn-more-here" class="anchor" aria-hidden="true" href="#coming-from-asyncdisplaykit-learn-more-here"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coming from AsyncDisplayKit? Learn more &lt;a href="https://medium.com/@Pinterest_Engineering/introducing-texture-a-new-home-for-asyncdisplaykit-e7c003308f50" rel="nofollow"&gt;here&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/texturegroup/texture/raw/master/docs/static/images/logo.png"&gt;&lt;img src="https://github.com/texturegroup/texture/raw/master/docs/static/images/logo.png" alt="Texture" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org/pods/Texture" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe1ecbc55a97926d9079d1123e735983e7d81985/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f61742f546578747572652e7376673f6c6162656c3d417070732532305573696e672532305465787475726526636f6c6f72423d323842394645" alt="Apps Using" data-canonical-src="https://img.shields.io/cocoapods/at/Texture.svg?label=Apps%20Using%20Texture&amp;amp;colorB=28B9FE" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/Texture" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/298494f2b9cbb7629d14deca19ccdb41db8bfa92/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f64742f546578747572652e7376673f6c6162656c3d546f74616c253230446f776e6c6f61647326636f6c6f72423d323842394645" alt="Downloads" data-canonical-src="https://img.shields.io/cocoapods/dt/Texture.svg?label=Total%20Downloads&amp;amp;colorB=28B9FE" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://texturegroup.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/91b60f9006475dfa1cbf5815e2349ff6a44479a7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d694f5325323025374325323074764f532d6f72616e67652e737667" alt="Platform" data-canonical-src="https://img.shields.io/badge/platforms-iOS%20%7C%20tvOS-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://texturegroup.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/63b6d5c0481787bbe14e8d6a994a2429ff1358c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e6775616765732d4f626a4325323025374325323053776966742d6f72616e67652e737667" alt="Languages" data-canonical-src="https://img.shields.io/badge/languages-ObjC%20%7C%20Swift-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org/pods/Texture" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/048ff982dc07633ed5c38c3e4f88de6986f670ea/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f546578747572652e737667" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/Texture.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/34d29da882aced60ec42351d7c4c5da781e947e6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3539433933392e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-59C939.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/texturegroup/texture/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/2aa3f9033719026ec1c6057f93ac20a3ec6946ec/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f546578747572652e737667" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/Texture.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Texture is available via CocoaPods or Carthage. See our &lt;a href="http://texturegroup.org/docs/installation.html" rel="nofollow"&gt;Installation&lt;/a&gt; guide for instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance-gains" class="anchor" aria-hidden="true" href="#performance-gains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Gains&lt;/h2&gt;
&lt;p&gt;Texture's basic unit is the &lt;code&gt;node&lt;/code&gt;. An ASDisplayNode is an abstraction over &lt;code&gt;UIView&lt;/code&gt;, which in turn is an abstraction over &lt;code&gt;CALayer&lt;/code&gt;. Unlike views, which can only be used on the main thread, nodes are thread-safe: you can instantiate and configure entire hierarchies of them in parallel on background threads.&lt;/p&gt;
&lt;p&gt;To keep its user interface smooth and responsive, your app should render at 60 frames per second â€” the gold standard on iOS. This means the main thread has one-sixtieth of a second to push each frame. That's 16 milliseconds to execute all layout and drawing code! And because of system overhead, your code usually has less than ten milliseconds to run before it causes a frame drop.&lt;/p&gt;
&lt;p&gt;Texture lets you move image decoding, text sizing and rendering, layout, and other expensive UI operations off the main thread, to keep the main thread available to respond to user interaction.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-advanced-developer-features" class="anchor" aria-hidden="true" href="#advanced-developer-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Developer Features&lt;/h2&gt;
&lt;p&gt;As the framework has grown, many features have been added that can save developers tons of time by eliminating common boilerplate style structures common in modern iOS apps. If you've ever dealt with cell reuse bugs, tried to performantly preload data for a page or scroll style interface or even just tried to keep your app from dropping too many frames you can benefit from integrating Texture.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn More&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Read the our &lt;a href="http://texturegroup.org/docs/getting-started.html" rel="nofollow"&gt;Getting Started&lt;/a&gt; guide&lt;/li&gt;
&lt;li&gt;Get the &lt;a href="https://github.com/texturegroup/texture/tree/master/examples"&gt;sample projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Browse the &lt;a href="http://texturegroup.org/appledocs.html" rel="nofollow"&gt;API reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h2&gt;
&lt;p&gt;We use Slack for real-time debugging, community updates, and general talk about Texture. &lt;a href="http://asdk-slack-auto-invite.herokuapp.com" rel="nofollow"&gt;Signup&lt;/a&gt; yourself or email &lt;a href="mailto:textureframework@gmail.com"&gt;textureframework@gmail.com&lt;/a&gt; to get an invite.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-release-process" class="anchor" aria-hidden="true" href="#release-process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release process&lt;/h2&gt;
&lt;p&gt;For the release process see the &lt;a href="https://github.com/texturegroup/texture/blob/master/RELEASE.md"&gt;RELEASE&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We welcome any contributions. See the &lt;a href="https://github.com/texturegroup/texture/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; file for how to get involved.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The Texture project is available for free use, as described by the &lt;a href="https://github.com/texturegroup/texture/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt; (Apache 2.0).&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>TextureGroup</author><guid isPermaLink="false">https://github.com/TextureGroup/Texture</guid><pubDate>Sat, 04 Jan 2020 00:01:00 GMT</pubDate></item><item><title>mapbox/mapbox-gl-native-ios #2 in Objective-C++, Today</title><link>https://github.com/mapbox/mapbox-gl-native-ios</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mapbox-maps-sdks-for-ios-and-macos" class="anchor" aria-hidden="true" href="#mapbox-maps-sdks-for-ios-and-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mapbox Maps SDKs for iOS and macOS&lt;/h1&gt;
&lt;p&gt;The Mapbox Maps SDK for iOS is an open-source framework for embedding interactive map views with scalable, customizable vector maps into Cocoa Touch applications on iOS 9.0 and above using Objective-C, Swift, or Interface Builder. It takes stylesheets that conform to the &lt;a href="https://www.mapbox.com/mapbox-gl-style-spec/" rel="nofollow"&gt;Mapbox Style Specification&lt;/a&gt;, applies them to vector tiles that conform to the &lt;a href="https://www.mapbox.com/developers/vector-tiles/" rel="nofollow"&gt;Mapbox Vector Tile Specification&lt;/a&gt;, and renders them using OpenGL. It is based on the &lt;a href="https://github.com/mapbox/mapbox-gl-native"&gt;Mapbox GL Native&lt;/a&gt; library.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SDK&lt;/th&gt;
&lt;th&gt;Languages&lt;/th&gt;
&lt;th&gt;Build status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="platform/ios/"&gt;Mapbox Maps SDK for iOS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Objective-C or Swift&lt;/td&gt;
&lt;td&gt;&lt;a href="https://circleci.com/gh/mapbox/workflows/mapbox-gl-native-ios/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1f94bb3dadb441c664af1220808667096902b0f9/68747470733a2f2f636972636c6563692e636f6d2f67682f6d6170626f782f6d6170626f782d676c2d6e61746976652d696f732e7376673f7374796c653d736869656c64" alt="Circle CI build status" data-canonical-src="https://circleci.com/gh/mapbox/mapbox-gl-native-ios.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="platform/macos/"&gt;Mapbox Maps SDK for macOS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Objective-C, Swift, or AppleScript&lt;/td&gt;
&lt;td&gt;&lt;a href="https://circleci.com/gh/mapbox/workflows/mapbox-gl-native-ios/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1f94bb3dadb441c664af1220808667096902b0f9/68747470733a2f2f636972636c6563692e636f6d2f67682f6d6170626f782f6d6170626f782d676c2d6e61746976652d696f732e7376673f7374796c653d736869656c64" alt="Circle CI build status" data-canonical-src="https://circleci.com/gh/mapbox/mapbox-gl-native-ios.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Mapbox GL Native is licensed under the &lt;a href="LICENSE.md"&gt;2-Clause BSD license&lt;/a&gt;. The licenses of its dependencies are tracked via &lt;a href="https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmapbox%2Fmapbox-gl-native" rel="nofollow"&gt;FOSSA&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmapbox%2Fmapbox-gl-native" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f58af66c827d66dd8b85dabb44d94dbb39d954c1/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f67697425324268747470732533412532462532466769746875622e636f6d2532466d6170626f782532466d6170626f782d676c2d6e61746976652e7376673f747970653d6c61726765" alt="FOSSA Status" data-canonical-src="https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmapbox%2Fmapbox-gl-native.svg?type=large" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mapbox</author><guid isPermaLink="false">https://github.com/mapbox/mapbox-gl-native-ios</guid><pubDate>Sat, 04 Jan 2020 00:02:00 GMT</pubDate></item><item><title>facebook/pop #3 in Objective-C++, Today</title><link>https://github.com/facebook/pop</link><description>&lt;p&gt;&lt;i&gt;An extensible iOS and OS X animation library, useful for physics-based interactions.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/facebook/pop/blob/master/Images/pop.gif?raw=true"&gt;&lt;img src="https://github.com/facebook/pop/raw/master/Images/pop.gif?raw=true" alt="pop" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pop is an extensible animation engine for iOS, tvOS, and OS X. In addition to basic static animations, it supports spring and decay dynamic animations, making it useful for building realistic, physics-based interactions. The API allows quick integration with existing Objective-C or Swift codebases and enables the animation of any property on any object. It's a mature and well-tested framework that drives all the animations and transitions in &lt;a href="https://en.wikipedia.org/wiki/Facebook_Paper" rel="nofollow"&gt;Paper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/facebook/pop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9930e41ff58d33e1975e2790e45b25aa0910b357/68747470733a2f2f7472617669732d63692e6f72672f66616365626f6f6b2f706f702e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/facebook/pop.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Pop is available on &lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;. Just add the following to your project Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pop&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bugs are first fixed in master and then made available via a designated release. If you tend to live on the bleeding edge, you can use Pop from master with the following Podfile entry:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pop&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:git&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/facebook/pop.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-framework-manual" class="anchor" aria-hidden="true" href="#framework-manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Framework (manual)&lt;/h3&gt;
&lt;p&gt;By adding the project to your project and adding pop.embedded framework to the Embedded Binaries section on the General tab of your app's target, you can set up pop in seconds! This also enables &lt;code&gt;@import pop&lt;/code&gt; syntax with header modules.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: because of some awkward limitations with Xcode, embedded binaries must share the same name as the module and must have &lt;code&gt;.framework&lt;/code&gt; as an extension. This means that you'll see three pop.frameworks when adding embedded binaries (one for OS X, one for tvOS, and one for iOS). You'll need to be sure to add the right one; they appear identically in the list but note the list is populated in order of targets. You can verify the correct one was chosen by checking the path next to the framework listed, in the format &lt;code&gt;&amp;lt;configuration&amp;gt;-&amp;lt;platform&amp;gt;&lt;/code&gt; (e.g. &lt;code&gt;Debug-iphoneos&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Images/EmbeddedBinaries.png?raw=true"&gt;&lt;img src="Images/EmbeddedBinaries.png?raw=true" alt="Embedded Binaries" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: this method does not currently play nicely with workspaces. Since targets can only depend on and embed products from other targets in the same project, it only works when pop.xcodeproj is added as a subproject to the current target's project. Otherwise, you'll need to manually set the build ordering in the scheme and copy in the product.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-static-library-manual" class="anchor" aria-hidden="true" href="#static-library-manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Static Library (manual)&lt;/h3&gt;
&lt;p&gt;Alternatively, you can add the project to your workspace and adopt the provided configuration files or manually copy the files under the pop subdirectory into your project. If installing manually, ensure the C++ standard library is also linked by including &lt;code&gt;-lc++&lt;/code&gt; to your project linker flags.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Pop adopts the Core Animation explicit animation programming model. Use by including the following import:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c" class="anchor" aria-hidden="true" href="#objective-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;pop/POP.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or if you're using the embedded framework:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;@import pop;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift" class="anchor" aria-hidden="true" href="#swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;pop&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-start-stop--update" class="anchor" aria-hidden="true" href="#start-stop--update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start, Stop &amp;amp; Update&lt;/h3&gt;
&lt;p&gt;To start an animation, add it to the object you wish to animate:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-1" class="anchor" aria-hidden="true" href="#objective-c-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPSpringAnimation *anim = [POPSpringAnimation &lt;span class="pl-c1"&gt;animation&lt;/span&gt;];
...
[layer &lt;span class="pl-c1"&gt;pop_addAnimation:&lt;/span&gt;anim &lt;span class="pl-c1"&gt;forKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-1" class="anchor" aria-hidden="true" href="#swift-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;POPSpringAnimation&lt;/span&gt;()
&lt;span class="pl-k"&gt;...&lt;/span&gt;
layer.&lt;span class="pl-c1"&gt;pop_add&lt;/span&gt;(anim, &lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To stop an animation, remove it from the object referencing the key specified on start:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-2" class="anchor" aria-hidden="true" href="#objective-c-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;[layer &lt;span class="pl-c1"&gt;pop_removeAnimationForKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-2" class="anchor" aria-hidden="true" href="#swift-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;layer.&lt;span class="pl-c1"&gt;pop_removeAnimation&lt;/span&gt;(&lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The key can also be used to query for the existence of an animation. Updating the toValue of a running animation can provide the most seamless way to change course:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-3" class="anchor" aria-hidden="true" href="#objective-c-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;anim = [layer &lt;span class="pl-c1"&gt;pop_animationForKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
&lt;span class="pl-k"&gt;if&lt;/span&gt; (anim) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; update to value to new destination &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  anim.&lt;span class="pl-smi"&gt;toValue&lt;/span&gt; = @(&lt;span class="pl-c1"&gt;42.0&lt;/span&gt;);
} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; create and start a new animation &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  ....
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-3" class="anchor" aria-hidden="true" href="#swift-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; layer.&lt;span class="pl-c1"&gt;pop_animation&lt;/span&gt;(&lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;myKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;as?&lt;/span&gt; POPSpringAnimation {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; update to value to new destination &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    anim.&lt;span class="pl-smi"&gt;toValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42.0&lt;/span&gt;
} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; create and start a new animation &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;....&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While a layer was used in the above examples, the Pop interface is implemented as a category addition on NSObject. Any NSObject or subclass can be animated.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-types" class="anchor" aria-hidden="true" href="#types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Types&lt;/h3&gt;
&lt;p&gt;There are four concrete animation types: spring, decay, basic and custom.&lt;/p&gt;
&lt;p&gt;Spring animations can be used to give objects a delightful bounce. In this example, we use a spring animation to animate a layer's bounds from its current value to (0, 0, 400, 400):&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-4" class="anchor" aria-hidden="true" href="#objective-c-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPSpringAnimation *anim = [POPSpringAnimation &lt;span class="pl-c1"&gt;animationWithPropertyNamed:&lt;/span&gt;&lt;span class="pl-c1"&gt;kPOPLayerBounds&lt;/span&gt;];
anim.toValue = [&lt;span class="pl-c1"&gt;NSValue&lt;/span&gt; &lt;span class="pl-c1"&gt;valueWithCGRect:&lt;/span&gt;&lt;span class="pl-c1"&gt;CGRectMake&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;400&lt;/span&gt;, &lt;span class="pl-c1"&gt;400&lt;/span&gt;)];
[layer &lt;span class="pl-c1"&gt;pop_addAnimation:&lt;/span&gt;anim &lt;span class="pl-c1"&gt;forKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;size&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-4" class="anchor" aria-hidden="true" href="#swift-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;POPSpringAnimation&lt;/span&gt;(&lt;span class="pl-c1"&gt;propertyNamed&lt;/span&gt;: kPOPLayerBounds) {
    anim.&lt;span class="pl-smi"&gt;toValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSValue&lt;/span&gt;(&lt;span class="pl-c1"&gt;cgRect&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGRect&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;width&lt;/span&gt;: &lt;span class="pl-c1"&gt;400&lt;/span&gt;, &lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;400&lt;/span&gt;))
    layer.&lt;span class="pl-c1"&gt;pop_add&lt;/span&gt;(anim, &lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;size&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Decay animations can be used to gradually slow an object to a halt. In this example, we decay a layer's positionX from it's current value and velocity 1000pts per second:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-5" class="anchor" aria-hidden="true" href="#objective-c-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPDecayAnimation *anim = [POPDecayAnimation &lt;span class="pl-c1"&gt;animationWithPropertyNamed:&lt;/span&gt;&lt;span class="pl-c1"&gt;kPOPLayerPositionX&lt;/span&gt;];
anim.velocity = @(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;.);
[layer &lt;span class="pl-c1"&gt;pop_addAnimation:&lt;/span&gt;anim &lt;span class="pl-c1"&gt;forKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;slide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-5" class="anchor" aria-hidden="true" href="#swift-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;POPDecayAnimation&lt;/span&gt;(&lt;span class="pl-c1"&gt;propertyNamed&lt;/span&gt;: kPOPLayerPositionX) {
    anim.&lt;span class="pl-smi"&gt;velocity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000.0&lt;/span&gt;
    layer.&lt;span class="pl-c1"&gt;pop_add&lt;/span&gt;(anim, &lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;slide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basic animations can be used to interpolate values over a specified time period. To use an ease-in ease-out animation to animate a view's alpha from 0.0 to 1.0 over the default duration:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-6" class="anchor" aria-hidden="true" href="#objective-c-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPBasicAnimation *anim = [POPBasicAnimation &lt;span class="pl-c1"&gt;animationWithPropertyNamed:&lt;/span&gt;&lt;span class="pl-c1"&gt;kPOPViewAlpha&lt;/span&gt;];
anim.timingFunction = [CAMediaTimingFunction &lt;span class="pl-c1"&gt;functionWithName:&lt;/span&gt;&lt;span class="pl-c1"&gt;kCAMediaTimingFunctionEaseInEaseOut&lt;/span&gt;];
anim.fromValue = @(&lt;span class="pl-c1"&gt;0.0&lt;/span&gt;);
anim.toValue = @(&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;);
[view &lt;span class="pl-c1"&gt;pop_addAnimation:&lt;/span&gt;anim &lt;span class="pl-c1"&gt;forKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;fade&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-6" class="anchor" aria-hidden="true" href="#swift-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;POPBasicAnimation&lt;/span&gt;(&lt;span class="pl-c1"&gt;propertyNamed&lt;/span&gt;: kPOPViewAlpha) {
    anim.&lt;span class="pl-smi"&gt;timingFunction&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CAMediaTimingFunction&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: kCAMediaTimingFunctionEaseInEaseOut)
    anim.&lt;span class="pl-smi"&gt;fromValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.0&lt;/span&gt;
    anim.&lt;span class="pl-smi"&gt;toValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;
    view.&lt;span class="pl-c1"&gt;pop_add&lt;/span&gt;(anim, &lt;span class="pl-c1"&gt;forKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fade&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;POPCustomAnimation&lt;/code&gt; makes creating custom animations and transitions easier by handling CADisplayLink and associated time-step management. See header for more details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-properties" class="anchor" aria-hidden="true" href="#properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Properties&lt;/h3&gt;
&lt;p&gt;The property animated is specified by the &lt;code&gt;POPAnimatableProperty&lt;/code&gt; class. In this example we create a spring animation and explicitly set the animatable property corresponding to &lt;code&gt;-[CALayer bounds]&lt;/code&gt;:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-7" class="anchor" aria-hidden="true" href="#objective-c-7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPSpringAnimation *anim = [POPSpringAnimation &lt;span class="pl-c1"&gt;animation&lt;/span&gt;];
anim.property = [POPAnimatableProperty &lt;span class="pl-c1"&gt;propertyWithName:&lt;/span&gt;&lt;span class="pl-c1"&gt;kPOPLayerBounds&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-7" class="anchor" aria-hidden="true" href="#swift-7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; anim &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;POPSpringAnimation&lt;/span&gt;()
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; property &lt;span class="pl-k"&gt;=&lt;/span&gt; POPAnimatableProperty.&lt;span class="pl-c1"&gt;property&lt;/span&gt;(&lt;span class="pl-c1"&gt;withName&lt;/span&gt;: kPOPLayerBounds) &lt;span class="pl-k"&gt;as?&lt;/span&gt; POPAnimatableProperty {
    anim.&lt;span class="pl-smi"&gt;property&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; property
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The framework provides many common layer and view animatable properties out of box. You can animate a custom property by creating a new instance of the class. In this example, we declare a custom volume property:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-8" class="anchor" aria-hidden="true" href="#objective-c-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;prop = [POPAnimatableProperty &lt;span class="pl-c1"&gt;propertyWithName:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;com.foo.radio.volume&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;initializer:&lt;/span&gt;^(POPMutableAnimatableProperty *prop) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; read value&lt;/span&gt;
  prop.&lt;span class="pl-smi"&gt;readBlock&lt;/span&gt; = ^(&lt;span class="pl-c1"&gt;id&lt;/span&gt; obj, &lt;span class="pl-c1"&gt;CGFloat&lt;/span&gt; values[]) {
    values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] = [obj &lt;span class="pl-c1"&gt;volume&lt;/span&gt;];
  };
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; write value&lt;/span&gt;
  prop.&lt;span class="pl-smi"&gt;writeBlock&lt;/span&gt; = ^(&lt;span class="pl-c1"&gt;id&lt;/span&gt; obj, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;CGFloat&lt;/span&gt; values[]) {
    [obj &lt;span class="pl-c1"&gt;setVolume:&lt;/span&gt;values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]];
  };
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; dynamics threshold&lt;/span&gt;
  prop.&lt;span class="pl-smi"&gt;threshold&lt;/span&gt; = &lt;span class="pl-c1"&gt;0.01&lt;/span&gt;;
}];

anim.property = prop;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-8" class="anchor" aria-hidden="true" href="#swift-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; prop &lt;span class="pl-k"&gt;=&lt;/span&gt; POPAnimatableProperty.&lt;span class="pl-c1"&gt;property&lt;/span&gt;(&lt;span class="pl-c1"&gt;withName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.foo.radio.volume&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;initializer&lt;/span&gt;: { prop &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; prop &lt;span class="pl-k"&gt;=&lt;/span&gt; prop &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    }
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; read value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    prop.&lt;span class="pl-smi"&gt;readBlock&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { obj, values &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; obj &lt;span class="pl-k"&gt;as?&lt;/span&gt; Volumeable, &lt;span class="pl-k"&gt;let&lt;/span&gt; values &lt;span class="pl-k"&gt;=&lt;/span&gt; values &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt;
        }

        values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; obj.&lt;span class="pl-smi"&gt;volume&lt;/span&gt;
    }
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; write value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    prop.&lt;span class="pl-smi"&gt;writeBlock&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { obj, values &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; obj &lt;span class="pl-k"&gt;as?&lt;/span&gt; Volumeable, &lt;span class="pl-k"&gt;let&lt;/span&gt; values &lt;span class="pl-k"&gt;=&lt;/span&gt; values &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt;
        }

        obj.&lt;span class="pl-smi"&gt;volume&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
    }
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; dynamics threshold&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    prop.&lt;span class="pl-smi"&gt;threshold&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.01&lt;/span&gt;
}) &lt;span class="pl-k"&gt;as?&lt;/span&gt; POPAnimatableProperty {
    anim.&lt;span class="pl-smi"&gt;property&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; prop
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a complete listing of provided animatable properties, as well more information on declaring custom properties see &lt;code&gt;POPAnimatableProperty.h&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h3&gt;
&lt;p&gt;Here are a few tips when debugging. Pop obeys the Simulator's Toggle Slow Animations setting. Try enabling it to slow down animations and more easily observe interactions.&lt;/p&gt;
&lt;p&gt;Consider naming your animations. This will allow you to more easily identify them when referencing them, either via logging or in the debugger:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-9" class="anchor" aria-hidden="true" href="#objective-c-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;anim.name = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;springOpen&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-9" class="anchor" aria-hidden="true" href="#swift-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;anim.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;springOpen&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each animation comes with an associated tracer. The tracer allows you to record all animation-related events, in a fast and efficient manner, allowing you to query and analyze them after animation completion. The below example starts the tracer and configures it to log all events on animation completion:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-objective-c-10" class="anchor" aria-hidden="true" href="#objective-c-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h4&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;POPAnimationTracer *tracer = anim.tracer;
tracer.shouldLogAndResetOnCompletion = &lt;span class="pl-c1"&gt;YES&lt;/span&gt;;
[tracer &lt;span class="pl-c1"&gt;start&lt;/span&gt;];&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-10" class="anchor" aria-hidden="true" href="#swift-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; tracer &lt;span class="pl-k"&gt;=&lt;/span&gt; anim.&lt;span class="pl-smi"&gt;tracer&lt;/span&gt; {
    tracer.&lt;span class="pl-smi"&gt;shouldLogAndResetOnCompletion&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    tracer.&lt;span class="pl-c1"&gt;start&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;code&gt;POPAnimationTracer.h&lt;/code&gt; for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;Pop has extensive unit test coverage. To install test dependencies, navigate to the root pop directory and type:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pod install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming CocoaPods is installed, this will include the necessary OCMock dependency to the unit test targets.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-scenekit" class="anchor" aria-hidden="true" href="#scenekit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SceneKit&lt;/h2&gt;
&lt;p&gt;Due to SceneKit requiring iOS 8 and OS X 10.9, POP's SceneKit extensions aren't provided out of box. Unfortunately, &lt;a href="https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPFrameworks/Concepts/WeakLinking.html" rel="nofollow"&gt;weakly linked frameworks&lt;/a&gt; cannot be used due to issues mentioned in the &lt;a href="https://developer.apple.com/library/ios/releasenotes/DeveloperTools/RN-Xcode/Chapters/xc6_release_notes.html" rel="nofollow"&gt;Xcode 6.1 Release Notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To remedy this, you can easily opt-in to use SceneKit! Simply add this to the Preprocessor Macros section of your Xcode Project:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;POP_USE_SCENEKIT=1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;p&gt;A collection of links to external resources that may prove valuable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hfossli/aggeometrykit-pop"&gt;AGGeometryKit+POP - Animating Quadrilaterals with Pop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/CoreAnimation_guide/Introduction/Introduction.html" rel="nofollow"&gt;Apple â€“ Core Animation Programming Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://iosdevtips.co/post/84571595353/replicating-uiscrollviews-deceleration-with-facebook" rel="nofollow"&gt;iOS Development Tips â€“ UIScrollView-like deceleration with Pop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/callmeed/pop-playground"&gt;Pop Playground â€“ Repository of Pop animation examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://victorbaro.com/2014/05/pop-playground-playing-with-facebooks-framework/" rel="nofollow"&gt;Pop Playground 2 â€“ Playing with Facebook's framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewcheok/POP-MCAnimate"&gt;POP-MCAnimate â€“ Concise syntax for the Pop animation framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schneiderandre/popping"&gt;Popping - Great examples in one project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://facebook.github.io/rebound/" rel="nofollow"&gt;Rebound â€“ Spring Animations for Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tapity.com/tutorial-getting-started-with-pop/" rel="nofollow"&gt;Tapity Tutorial â€“ Getting Started with Pop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/tweaks"&gt;Tweaks â€“ Easily adjust parameters for iOS apps in development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxmyers/FacebookPop"&gt;POP Tutorial in 5 steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/victorBaro/VBFPopFlatButton"&gt;VBFPopFlatButton â€“ Flat animatable button, using Pop to transition between states&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See the CONTRIBUTING file for how to help out.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Pop is released under a BSD License. See LICENSE file for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/pop</guid><pubDate>Sat, 04 Jan 2020 00:03:00 GMT</pubDate></item><item><title>cedarbdd/cedar #4 in Objective-C++, Today</title><link>https://github.com/cedarbdd/cedar</link><description>&lt;p&gt;&lt;i&gt;BDD-style testing using Objective-C&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cedar" class="anchor" aria-hidden="true" href="#cedar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cedar&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/cedarbdd/cedar" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e32e32962470048c5e7b18ea8a9ad2dfaa43eeb/68747470733a2f2f7472617669732d63692e6f72672f63656461726264642f63656461722e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/cedarbdd/cedar.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cedar is a BDD-style Objective-C testing framework with an expressive matcher DSL and convenient test doubles.&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;describe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Example specs on NSString&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ^{
    &lt;span class="pl-c1"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;lowercaseString returns a new string with everything in lower case&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ^{
        [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;FOOBar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;lowercaseString&lt;/span&gt;] should &lt;span class="pl-smi"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;foobar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    });

    &lt;span class="pl-c1"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;length returns the number of characters in the string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ^{
        [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;internationalization&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;length&lt;/span&gt;] should &lt;span class="pl-smi"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;20&lt;/span&gt;);
    });

    &lt;span class="pl-c1"&gt;describe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;isEqualToString:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ^{
        &lt;span class="pl-c1"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;should return true if the strings are the same&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ^{
            [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;someString&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;isEqualToString:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;someString&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] should be_truthy;
        });

        &lt;span class="pl-c1"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;should return false if the strings are not the same&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ^{
            [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;someString&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;isEqualToString:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;anotherString&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] should be_falsy;
        });
    });
});&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Add Cedar to your project via &lt;a href="https://cocoapods.org/pods/Cedar" rel="nofollow"&gt;CocoaPods&lt;/a&gt; (&lt;code&gt;pod 'Cedar'&lt;/code&gt;), &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; (&lt;code&gt;github "cedarbdd/cedar"&lt;/code&gt;), or &lt;a href="https://github.com/cedarbdd/cedar/wiki/Installation#available-installation-methods"&gt;another method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install the Cedar Xcode file templates using the &lt;a href="http://alcatraz.io/" rel="nofollow"&gt;Alcatraz package manager&lt;/a&gt; or by running this command in a terminal:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;    $ curl -L https://raw.github.com/cedarbdd/cedar/master/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Or if you want to install from HEAD. Run:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;    $ bash &amp;lt;(echo "set -- --head; $(curl -L https://raw.github.com/cedarbdd/cedar/master/install.sh)")
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Restart Xcode&lt;/li&gt;
&lt;li&gt;Add new spec files to your project's Test Bundle using the Xcode templates&lt;/li&gt;
&lt;li&gt;Start writing specs!&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;Documentation can be found on the &lt;a href="https://github.com/cedarbdd/cedar/wiki"&gt;Cedar Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-support-and-feedback" class="anchor" aria-hidden="true" href="#support-and-feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support and feedback&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Search past discussions: &lt;a href="http://groups.google.com/group/cedar-discuss" rel="nofollow"&gt;http://groups.google.com/group/cedar-discuss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Send an e-mail to the discussion list: &lt;a href="mailto:cedar-discuss@googlegroups.com"&gt;mailto:cedar-discuss@googlegroups.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;View the project backlog on Pivotal Tracker: &lt;a href="http://www.pivotaltracker.com/projects/77775" rel="nofollow"&gt;http://www.pivotaltracker.com/projects/77775&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Follow us on twitter: &lt;a href="http://twitter.com/cedarbdd" rel="nofollow"&gt;@cedarbdd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Please read the &lt;a href="https://github.com/cedarbdd/cedar/wiki/Contributor-guide"&gt;Contributor Guide&lt;/a&gt; on the wiki.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-maintainers" class="anchor" aria-hidden="true" href="#maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainers&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="mailto:akitchen@pivotallabs.com"&gt;Andrew Kitchen&lt;/a&gt; (&lt;a href="https://github.com/akitchen"&gt;akitchen&lt;/a&gt;), Pivotal Labs, San Francisco&lt;/li&gt;
&lt;li&gt;&lt;a href="mailto:bcroom@pivotal.io"&gt;Brian Croom&lt;/a&gt; (&lt;a href="https://github.com/briancroom"&gt;briancroom&lt;/a&gt;), Pivotal Labs, Toronto&lt;/li&gt;
&lt;li&gt;&lt;a href="mailto:jhui@pivotallabs.com"&gt;Jeff Hui&lt;/a&gt; (&lt;a href="https://github.com/jeffh"&gt;jeffh&lt;/a&gt;), Pivotal Labs, San Francisco&lt;/li&gt;
&lt;li&gt;&lt;a href="mailto:scoward@pivotallabs.com"&gt;Sam Coward&lt;/a&gt; (&lt;a href="https://github.com/idoru"&gt;idoru&lt;/a&gt;), Pivotal Labs, New York&lt;/li&gt;
&lt;li&gt;&lt;a href="mailto:tjarratt@pivotal.io"&gt;Tim Jarratt&lt;/a&gt; (&lt;a href="https://github.com/tjarratt"&gt;tjarratt&lt;/a&gt;), Pivotal Labs, San Francisco&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Copyright (c) 2010-2016 Pivotal Labs. This software is licensed under the MIT License. &lt;a href="http://mixpanel.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e0f4abafedd2d4e07033a60a4bf7ca44b3d387d7/68747470733a2f2f6170692e6d697870616e656c2e636f6d2f747261636b2f3f646174613d435873695a585a6c626e51694f694169534739745a53425761584e70644349734941304b4943416749416b4a496e42796233426c636e52705a584d694f6942374943414a44516f67494341674943416749416b69644739725a5734694f6941694e6d4a6a5a6d45334d6d51354f4755325a6a64685a6a466b4e6a513359574e6d593251324e6a4d774e5445694943416744516f6749434167494341674943416749434167494341676651304b4943416749434167494342392669703d3126696d673d31" alt="Mixpanel" data-canonical-src="https://api.mixpanel.com/track/?data=CXsiZXZlbnQiOiAiSG9tZSBWaXNpdCIsIA0KICAgIAkJInByb3BlcnRpZXMiOiB7ICAJDQogICAgICAgIAkidG9rZW4iOiAiNmJjZmE3MmQ5OGU2ZjdhZjFkNjQ3YWNmY2Q2NjMwNTEiICAgDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICB9&amp;amp;ip=1&amp;amp;img=1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cedarbdd</author><guid isPermaLink="false">https://github.com/cedarbdd/cedar</guid><pubDate>Sat, 04 Jan 2020 00:04:00 GMT</pubDate></item><item><title>DerekSelander/dsdump #5 in Objective-C++, Today</title><link>https://github.com/DerekSelander/dsdump</link><description>&lt;p&gt;&lt;i&gt;An improved nm + Objective-C &amp; Swift class-dump&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-dsdump" class="anchor" aria-hidden="true" href="#dsdump"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dsdump&lt;/h2&gt;
&lt;p&gt;An improved nm + objc/swift class-dump (&lt;a href="https://derekselander.github.io/dsdump/" rel="nofollow"&gt;writeup&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Works great on Objective-C classes
&lt;a href="https://store.raywenderlich.com/products/advanced-apple-debugging-and-reverse-engineering" rel="nofollow"&gt;&lt;img src="media/vmmap.png" alt="img" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;... and Swift types
&lt;a href="https://store.raywenderlich.com/products/advanced-apple-debugging-and-reverse-engineering" rel="nofollow"&gt;&lt;img src="media/swift.png" alt="img" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-man" class="anchor" aria-hidden="true" href="#man"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;man&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;dsdump(1)                 BSD General Commands Manual                dsdump(1)

NAME
     dsdump -- An improved nm + objc/swift class-dump

SYNOPSIS
     dsdump [option...] &amp;lt;mach-o-file&amp;gt;

DESCRIPTION
     Provides an "nm-improved" experience when working with Mach-O executa-
     bles. dsdump has 3 "primary" modes: Symbol table (--sym), Objective-C
     (--objc), and Swift (--swift, -s). Omitting all of these options will
     default to the sym mode.

OPTIONS
     -c, --color
             Adds color to output

     -O, --opcs
             Dump the DYLD opcodes used to bind external symbols at load time

     -f, --filter FilterWord
             Specify classes to filter by (case insensitive, can be used mul-
             tiple times)

     -a, --arch architecture
             Specify the arichtecture if file is FAT. Understands x86_64h,
             x86_64, arm64, arm64e

     -u, --undefined
             Only display undefined (externally referenced) symbols or classes

     -U, --defined
             Only display defined (internally implemented) symbols or classes

     -v, --verbose
             Specifies the verbosity level. The -v option can be used multiple
             times, while the long argument sets the exact level 0-5. Kind of
             like codesign(1)'s verbosity that everyone complains about...

     --objc  Dump the Objective-C classes

     --swift
             Dump the Swift type descriptors (classes, structs, enums)

     -s      Sets mode to Swift mode and verbosity to level 4

     -h, --help
             Print out this beautiful, helpful document

EXAMPLES
     List ObjC internal/external classes referenced/implemented by vmmap:
           dsdump --objc $(which vmmap)

     List the Objective-C external classes called by vmmap:
           dsdump --objc $(which vmmap) -u

     List the Objective-C internal classes implemented by vmmap:
           dsdump --objc $(which vmmap) -U

     Perform an Objective-C "class-dump" in color of vmmap
           dsdump --objc $(which vmmap) -U -vvvc

     Thoroughly dump the Swift content in color in the Console app
           dsdump --swift
           /Applications/Utilities/Console.app/Contents/MacOS/Console -cvvvv

VERBOSITY
     dsdump can output a range of verbosity between the 3 different modes
     (--sym, --swift, --objc). The verbosity level can be set by the long form
     (--verbose=3) or by specifying a count via short form (-vvv). The break-
     down of these levels are shown below:

     --sym:
           0. Print symbol
           1. 0 + library path or Mach-O section
           2. 1 + fullpath to library
           3. 2 + nlist struct output
           4. Same as 3... for now
           5. Same as 3... for now

     --swift:
           0. List swift types
           1. 0 + Parent classes
           2. 1 + Protocols
           3. 2 + Swift type dump
           4. 3 + Extended type dump, ObjC bridge methods
           5. 4 + Commenting in methods

     --objc:
           0. List Objective-C classes
           1. 0 + Parent classes &amp;amp; library basename for external
           2. 1 + Fullpath to libraries for external + protocols
           3. 2 + Objective-C class dump
           4. 3 + Print properties
           5. 4 + Print ivars &amp;amp; offsets

ENVIRONMENT
     DSCOLOR Enables color. Alternatively, use -c

     ARCH &amp;lt;arch&amp;gt; Specify the architecture if inspecting a FAT executable,
     Alternatively use --arch

SEE ALSO
     nm(1), objdump(1), vmmap(1)

BUGS
     There's a situation where occassionally dsdump will think the parent
     class is a RO_ROOT where it will in fact won't be. I'll print this out
     for now so I can hunt it down

     ARM64e still needs some luv, especially on the Swift side, especially
     with Protocols... and not crashing

AUTHORS
     Derek Selander @LOLgrep

Darwin                         December 8, 2019                         Darwin
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;&lt;a id="user-content-compiling" class="anchor" aria-hidden="true" href="#compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling&lt;/h2&gt;
&lt;p&gt;Compiling this will be a bit of a pain in the butt on your end. You'll need to clone the Swift language in the same directory. Swift can't be a submodule to this repo since some of their git cloning scripts won't work :|&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; cd into the dsdump repo&lt;/span&gt;
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; dsdump/

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; make a directory called swift-source, yes, name it exactly that&lt;/span&gt;
mkdir swift-source

&lt;span class="pl-c1"&gt;cd&lt;/span&gt; swift-source/

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; clone the Swift repository into swift-source&lt;/span&gt;
git clone https://github.com/apple/swift.git

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; checkout &lt;/span&gt;
git checkout 75670c17272a993ed798cee7e31c20590e94118b

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use the Swift update helper script to grab everything else &lt;/span&gt;
./swift/utils/update-checkout --clone&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Comment out any remaining problematic code after a build, remove methods in &lt;code&gt;Metadata.h&lt;/code&gt; as needed (i.e. problematic ARC bridging code on line 700)&lt;/p&gt;
&lt;p&gt;I've included the &lt;code&gt;libSwiftDemangling.a&lt;/code&gt; static lib that I built into &lt;code&gt;dsdump/dsdump&lt;/code&gt;.  If you want to build entirely from Swift source, you'll need to build this yourself. Otherwise you should be good to go to build &lt;code&gt;dsdump&lt;/code&gt; via Xcode.&lt;/p&gt;
&lt;p&gt;Alternatively, you can skip all of this by simply grabbing the compiled &lt;code&gt;dsdump&lt;/code&gt; version in the &lt;strong&gt;compiled&lt;/strong&gt; directory &lt;a href="https://github.com/DerekSelander/dsdump/blob/master/compiled/dsdump"&gt;found here&lt;/a&gt;. Make sure the SHA1 matches below if you're paranoid.&lt;/p&gt;
&lt;p&gt;Compiled SHA1&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SHA1: 17149fce3a73bd2614d21901ec791ef64815370a
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.apple.com/source/dyld/dyld-635.2/src/dyldInitialization.cpp.auto.html" rel="nofollow"&gt;https://opensource.apple.com/source/dyld/dyld-635.2/src/dyldInitialization.cpp.auto.html&lt;/a&gt; Specifically the THREADED code for ARM64e&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.apple.com/source/objc4/" rel="nofollow"&gt;https://opensource.apple.com/source/objc4/&lt;/a&gt; Specifically, the objc_class swift_class structs (and all the property, protocol, method, ivar, etc structs)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift"&gt;https://github.com/apple/swift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>DerekSelander</author><guid isPermaLink="false">https://github.com/DerekSelander/dsdump</guid><pubDate>Sat, 04 Jan 2020 00:05:00 GMT</pubDate></item></channel></rss>