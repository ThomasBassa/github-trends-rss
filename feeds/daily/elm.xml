<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Elm, Today</title><link>https://github.com/trending/elm?since=daily</link><description>The top repositories on GitHub for elm, measured daily</description><pubDate>Tue, 29 Oct 2019 03:38:05 GMT</pubDate><lastBuildDate>Tue, 29 Oct 2019 03:38:05 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>1400</ttl><item><title>rtfeldman/elm-spa-example #1 in Elm, Today</title><link>https://github.com/rtfeldman/elm-spa-example</link><description>&lt;p&gt;&lt;i&gt;A Single Page Application written in Elm&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/556934/25448178/3e7dc5c0-2a7d-11e7-8069-06da5169dae6.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/556934/25448178/3e7dc5c0-2a7d-11e7-8069-06da5169dae6.png" alt="RealWorld Example App" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; I gave &lt;a href="https://www.youtube.com/watch?v=x1FU3e0sT1I" rel="nofollow"&gt;a talk&lt;/a&gt;
to explain the principles I used to build this. I highly recommend watching it!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://elm-lang.org" rel="nofollow"&gt;Elm&lt;/a&gt; codebase containing real world examples (CRUD, auth, advanced patterns, etc) that adheres to the &lt;a href="https://github.com/gothinkster/realworld-example-apps"&gt;RealWorld&lt;/a&gt; spec and API.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-demorealworld" class="anchor" aria-hidden="true" href="#demorealworld"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://elm-spa-example.netlify.com/" rel="nofollow"&gt;Demo&lt;/a&gt;    &lt;a href="https://github.com/gothinkster/realworld"&gt;RealWorld&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This codebase was created to demonstrate a fully fledged fullstack application built with &lt;a href="http://elm-lang.org" rel="nofollow"&gt;Elm&lt;/a&gt; including CRUD operations, authentication, routing, pagination, and more.&lt;/p&gt;
&lt;p&gt;For more information on how this works with other frontends/backends, head over to the &lt;a href="https://github.com/gothinkster/realworld"&gt;RealWorld&lt;/a&gt; repo.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-how-it-works" class="anchor" aria-hidden="true" href="#how-it-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it works&lt;/h1&gt;
&lt;p&gt;Check out &lt;a href="https://dev.to/rtfeldman/tour-of-an-open-source-elm-spa" rel="nofollow"&gt;the full writeup&lt;/a&gt;!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;p&gt;I decided not to include a build script, since all you need for a development build is the &lt;code&gt;elm&lt;/code&gt; executable, and all you need on top of that for production is Uglify.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development-build" class="anchor" aria-hidden="true" href="#development-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development Build&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://guide.elm-lang.org/install.html" rel="nofollow"&gt;Install Elm&lt;/a&gt; (e.g. with &lt;code&gt;npm install --global elm&lt;/code&gt;), then from the root project directory, run this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ elm make src/Main.elm --output elm.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to include the time-traveling debugger, add &lt;code&gt;--debug&lt;/code&gt; like so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ elm make src/Main.elm --output elm.js --debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To view the site in a browser, bring up &lt;code&gt;index.html&lt;/code&gt; from any local HTTP server, for example &lt;a href="https://www.npmjs.com/package/http-server" rel="nofollow"&gt;&lt;code&gt;http-server&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-production-build" class="anchor" aria-hidden="true" href="#production-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Production Build&lt;/h2&gt;
&lt;p&gt;This is a two-step process. First we compile &lt;code&gt;elm.js&lt;/code&gt; using &lt;code&gt;elm make&lt;/code&gt; with &lt;code&gt;--optimize&lt;/code&gt;, and then we Uglify the result.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-step-1" class="anchor" aria-hidden="true" href="#step-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 1&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ elm make src/Main.elm --output elm.js --optimize
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This &lt;a href="https://elm-lang.org/blog/small-assets-without-the-headache" rel="nofollow"&gt;generates production-optimized JS&lt;/a&gt; that is ready to be minified further using Uglify.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-step-2" class="anchor" aria-hidden="true" href="#step-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 2&lt;/h4&gt;
&lt;p&gt;(Make sure you have &lt;a href="http://lisperator.net/uglifyjs/" rel="nofollow"&gt;Uglify&lt;/a&gt; installed first, e.g. with &lt;code&gt;npm install --global uglify-js&lt;/code&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ uglifyjs elm.js --compress 'pure_funcs="F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9",pure_getters=true,keep_fargs=false,unsafe_comps=true,unsafe=true,passes=2' --output=elm.js &amp;amp;&amp;amp; uglifyjs elm.js --mangle --output=elm.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This one lengthy command (make sure to scroll horizontally to get all of it if you're copy/pasting!) runs &lt;code&gt;uglifyjs&lt;/code&gt; twice - first with &lt;code&gt;--compress&lt;/code&gt; and then again with &lt;code&gt;--mangle&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It's necessay to run Uglify twice if you use the &lt;code&gt;pure_funcs&lt;/code&gt; flag, because if you enable both &lt;code&gt;--compress&lt;/code&gt; and &lt;code&gt;--mangle&lt;/code&gt; at the same time, the &lt;code&gt;pure_funcs&lt;/code&gt; argument will have no effect; Uglify will mangle the names first and then not recognize them when it encounters those functions later.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rtfeldman</author><guid isPermaLink="false">https://github.com/rtfeldman/elm-spa-example</guid><pubDate>Tue, 29 Oct 2019 00:00:00 GMT</pubDate></item><item><title>gianlo/elm-world-temperature-explorer #2 in Elm, Today</title><link>https://github.com/gianlo/elm-world-temperature-explorer</link><description>&lt;p&gt;&lt;i&gt;Elm test project: Visualize yearly average temperature from 1900 to 2020 from the worldbank api.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-world-temperature-explorer" class="anchor" aria-hidden="true" href="#world-temperature-explorer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;World Temperature Explorer&lt;/h2&gt;
&lt;p&gt;This is an &lt;code&gt;elm&lt;/code&gt; demo project.
It implements a viewer of time series from the &lt;a href="https://datahelpdesk.worldbank.org/knowledgebase/articles/902061-climate-data-api" rel="nofollow"&gt;climate data API&lt;/a&gt; from &lt;code&gt;worldbank.org&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The user is presented with yearly temperature average line charts for a bunch of countries from 1900 to today.&lt;/p&gt;
&lt;p&gt;The frontend is developed both in plain elm (see the &lt;code&gt;Main&lt;/code&gt; module that uses the &lt;code&gt;HtmlView&lt;/code&gt; module) and using &lt;code&gt;elm-ui&lt;/code&gt; (see the &lt;code&gt;ElmUiView&lt;/code&gt; module).&lt;/p&gt;
&lt;p&gt;Both implementations provide the user with the ability to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;zoom on the time axis (&lt;em&gt;from&lt;/em&gt; and &lt;em&gt;to&lt;/em&gt; year range)&lt;/li&gt;
&lt;li&gt;select what series are displayed on the graph&lt;/li&gt;
&lt;li&gt;remove the time series for a country&lt;/li&gt;
&lt;li&gt;add the time series for a country not yet displayed&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-run" class="anchor" aria-hidden="true" href="#how-to-run"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to run&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install elm &lt;code&gt;0.19.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For the plain &lt;code&gt;elm&lt;/code&gt; implementation run: &lt;code&gt;elm make src/Main.elm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For the &lt;code&gt;elm-ui&lt;/code&gt; implementation run: &lt;code&gt;elm make src/ElmUiView.elm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;View the &lt;code&gt;index.html&lt;/code&gt; produced by the compiler in a browser&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations&lt;/h2&gt;
&lt;p&gt;The plain &lt;code&gt;elm&lt;/code&gt; implementation does not style the html produced.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://elm-lang.org/" rel="nofollow"&gt;Elm language&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://package.elm-lang.org/packages/mdgriffith/elm-ui/latest/" rel="nofollow"&gt;Elm ui&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://package.elm-lang.org/packages/terezka/line-charts/latest/" rel="nofollow"&gt;Elm line charts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://datahelpdesk.worldbank.org/knowledgebase/articles/902061-climate-data-api" rel="nofollow"&gt;World Bank: Climate Data API&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gianlo</author><guid isPermaLink="false">https://github.com/gianlo/elm-world-temperature-explorer</guid><pubDate>Tue, 29 Oct 2019 00:00:00 GMT</pubDate></item><item><title>icidasset/diffuse #3 in Elm, Today</title><link>https://github.com/icidasset/diffuse</link><description>&lt;p&gt;&lt;i&gt;A music player that connects to your cloud/distributed storage.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e8b2ab84658c3849c14560fdbcb5122dd8fd691a/68747470733a2f2f646966667573652e73682f696d616765732f646966667573652d6461726b2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/e8b2ab84658c3849c14560fdbcb5122dd8fd691a/68747470733a2f2f646966667573652e73682f696d616765732f646966667573652d6461726b2e737667" alt="Diffuse" width="158" data-canonical-src="https://diffuse.sh/images/diffuse-dark.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A music player that connects to your cloud/distributed storage,&lt;br&gt;
in the form of a static, serverless, web application.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="round_pushpin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cd.png"&gt;📍&lt;/g-emoji&gt; Available at &lt;a href="https://diffuse.sh/" rel="nofollow"&gt;diffuse.sh&lt;/a&gt; and for &lt;a href="https://github.com/icidasset/diffuse/releases"&gt;download&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d8f988f3cdbf21ca7d9b51022acde664b76db001/68747470733a2f2f6963696461737365742d7075626c69632e73332e616d617a6f6e6177732e636f6d2f646966667573652d76322e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/d8f988f3cdbf21ca7d9b51022acde664b76db001/68747470733a2f2f6963696461737365742d7075626c69632e73332e616d617a6f6e6177732e636f6d2f646966667573652d76322e6a7067" data-canonical-src="https://icidasset-public.s3.amazonaws.com/diffuse-v2.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-integrations" class="anchor" aria-hidden="true" href="#integrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integrations&lt;/h3&gt;
&lt;p&gt;User layer for user-data storage.&lt;br&gt;
Music layer for music storage.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-user-layer" class="anchor" aria-hidden="true" href="#user-layer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User layer&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blockstack.org/" rel="nofollow"&gt;Blockstack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dropbox.com/" rel="nofollow"&gt;Dropbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API" rel="nofollow"&gt;IndexedDB&lt;/a&gt; (browser)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ipfs.io/" rel="nofollow"&gt;IPFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remotestorage.io/" rel="nofollow"&gt;RemoteStorage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/textileio/go-textile"&gt;Textile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-music-layer" class="anchor" aria-hidden="true" href="#music-layer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Music layer&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/s3/" rel="nofollow"&gt;Amazon S3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-us/services/storage/blobs/" rel="nofollow"&gt;Azure Blob Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-us/services/storage/files/" rel="nofollow"&gt;Azure File Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dropbox.com/" rel="nofollow"&gt;Dropbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/" rel="nofollow"&gt;Google Drive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ipfs.io/" rel="nofollow"&gt;IPFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/WebDAV" rel="nofollow"&gt;WebDAV&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-hosting-on-your-own-server" class="anchor" aria-hidden="true" href="#hosting-on-your-own-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hosting on your own server&lt;/h3&gt;
&lt;p&gt;Diffuse is a static web application, which means it's just HTML, CSS and Javascript. No REST API, database, or anything backend-related involved. The app uses a hash, aka. fragment, based routing system, so you don't need any special server rules for routing. You can download a pre-build web-only version of Diffuse on the &lt;a href="https://github.com/icidasset/diffuse/releases"&gt;releases&lt;/a&gt; page. Diffuse uses service workers, so you may need HTTPS for it to work smoothly in certain browsers. I should also note that some source services use OAuth, so you'll need to use your own application credentials (eg. google drive client id + secret).&lt;/p&gt;
&lt;p&gt;In short:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Diffuse is a static, serverless, web application&lt;/li&gt;
&lt;li&gt;Routing is done using hashes/fragments (eg. &lt;code&gt;diffuse.sh/#/sources&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Download a web build on the &lt;a href="https://github.com/icidasset/diffuse/releases"&gt;releases&lt;/a&gt; page&lt;/li&gt;
&lt;li&gt;Uses service workers (use HTTPS if possible)&lt;/li&gt;
&lt;li&gt;May need own OAuth application credentials for some source services&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-building-it-yourself" class="anchor" aria-hidden="true" href="#building-it-yourself"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building it yourself&lt;/h3&gt;
&lt;p&gt;For version numbers, see &lt;code&gt;.tool-versions&lt;/code&gt; and &lt;code&gt;stack.yaml&lt;/code&gt;.&lt;br&gt;
All of these, except the last one, can be install using &lt;a href="https://brew.sh/" rel="nofollow"&gt;homebrew&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://elm-lang.org/" rel="nofollow"&gt;Elm&lt;/a&gt; programming language&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.haskellstack.org/en/stable/README/" rel="nofollow"&gt;Haskell&lt;/a&gt; programming language&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/" rel="nofollow"&gt;Node.js&lt;/a&gt; programming language with the &lt;a href="https://yarnpkg.com/" rel="nofollow"&gt;Yarn&lt;/a&gt; package manager&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/closure-compiler#getting-started"&gt;Google Closure Compiler&lt;/a&gt; minifying assets&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cortesi/devd"&gt;Devd&lt;/a&gt; web server for development (optional)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/watchexec/watchexec"&gt;Watchexec&lt;/a&gt; watching for file changes (optional)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icidasset/elm-proofread"&gt;Elm Proofread&lt;/a&gt; documentation tests (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 🍱&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 1. Install programming languages:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;    Elm 0.19.1 &amp;amp; Haskell (Stack), see links above&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 2. Install Javascript dependencies&lt;/span&gt;
yarn install

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 3. Build, start server &amp;amp; watch for changes&lt;/span&gt;
make&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>icidasset</author><guid isPermaLink="false">https://github.com/icidasset/diffuse</guid><pubDate>Tue, 29 Oct 2019 00:00:00 GMT</pubDate></item></channel></rss>