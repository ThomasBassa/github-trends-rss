<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Elm, Today</title><link>https://github.com/trending/elm?since=daily</link><description>The top repositories on GitHub for elm, measured daily</description><pubDate>Sun, 09 Feb 2020 01:09:43 GMT</pubDate><lastBuildDate>Sun, 09 Feb 2020 01:09:43 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>rtfeldman/elm-spa-example #1 in Elm, Today</title><link>https://github.com/rtfeldman/elm-spa-example</link><description>&lt;p&gt;&lt;i&gt;A Single Page Application written in Elm&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/556934/25448178/3e7dc5c0-2a7d-11e7-8069-06da5169dae6.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/556934/25448178/3e7dc5c0-2a7d-11e7-8069-06da5169dae6.png" alt="RealWorld Example App" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;ðŸ‘‰&lt;/g-emoji&gt; I gave &lt;a href="https://www.youtube.com/watch?v=x1FU3e0sT1I" rel="nofollow"&gt;a talk&lt;/a&gt;
to explain the principles I used to build this. I highly recommend watching it!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://elm-lang.org" rel="nofollow"&gt;Elm&lt;/a&gt; codebase containing real world examples (CRUD, auth, advanced patterns, etc) that adheres to the &lt;a href="https://github.com/gothinkster/realworld-example-apps"&gt;RealWorld&lt;/a&gt; spec and API.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-demorealworld" class="anchor" aria-hidden="true" href="#demorealworld"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://elm-spa-example.netlify.com/" rel="nofollow"&gt;Demo&lt;/a&gt;Â Â Â Â &lt;a href="https://github.com/gothinkster/realworld"&gt;RealWorld&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This codebase was created to demonstrate a fully fledged fullstack application built with &lt;a href="http://elm-lang.org" rel="nofollow"&gt;Elm&lt;/a&gt; including CRUD operations, authentication, routing, pagination, and more.&lt;/p&gt;
&lt;p&gt;For more information on how this works with other frontends/backends, head over to the &lt;a href="https://github.com/gothinkster/realworld"&gt;RealWorld&lt;/a&gt; repo.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-how-it-works" class="anchor" aria-hidden="true" href="#how-it-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it works&lt;/h1&gt;
&lt;p&gt;Check out &lt;a href="https://dev.to/rtfeldman/tour-of-an-open-source-elm-spa" rel="nofollow"&gt;the full writeup&lt;/a&gt;!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;p&gt;I decided not to include a build script, since all you need for a development build is the &lt;code&gt;elm&lt;/code&gt; executable, and all you need on top of that for production is Uglify.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development-build" class="anchor" aria-hidden="true" href="#development-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development Build&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://guide.elm-lang.org/install.html" rel="nofollow"&gt;Install Elm&lt;/a&gt; (e.g. with &lt;code&gt;npm install --global elm&lt;/code&gt;), then from the root project directory, run this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ elm make src/Main.elm --output elm.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to include the time-traveling debugger, add &lt;code&gt;--debug&lt;/code&gt; like so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ elm make src/Main.elm --output elm.js --debug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To view the site in a browser, bring up &lt;code&gt;index.html&lt;/code&gt; from any local HTTP server, for example &lt;a href="https://www.npmjs.com/package/http-server" rel="nofollow"&gt;&lt;code&gt;http-server&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-production-build" class="anchor" aria-hidden="true" href="#production-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Production Build&lt;/h2&gt;
&lt;p&gt;This is a two-step process. First we compile &lt;code&gt;elm.js&lt;/code&gt; using &lt;code&gt;elm make&lt;/code&gt; with &lt;code&gt;--optimize&lt;/code&gt;, and then we Uglify the result.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-step-1" class="anchor" aria-hidden="true" href="#step-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 1&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ elm make src/Main.elm --output elm.js --optimize
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This &lt;a href="https://elm-lang.org/blog/small-assets-without-the-headache" rel="nofollow"&gt;generates production-optimized JS&lt;/a&gt; that is ready to be minified further using Uglify.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-step-2" class="anchor" aria-hidden="true" href="#step-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 2&lt;/h4&gt;
&lt;p&gt;(Make sure you have &lt;a href="http://lisperator.net/uglifyjs/" rel="nofollow"&gt;Uglify&lt;/a&gt; installed first, e.g. with &lt;code&gt;npm install --global uglify-js&lt;/code&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ uglifyjs elm.js --compress 'pure_funcs="F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9",pure_getters=true,keep_fargs=false,unsafe_comps=true,unsafe=true,passes=2' --output=elm.js &amp;amp;&amp;amp; uglifyjs elm.js --mangle --output=elm.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This one lengthy command (make sure to scroll horizontally to get all of it if you're copy/pasting!) runs &lt;code&gt;uglifyjs&lt;/code&gt; twice - first with &lt;code&gt;--compress&lt;/code&gt; and then again with &lt;code&gt;--mangle&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It's necessary to run Uglify twice if you use the &lt;code&gt;pure_funcs&lt;/code&gt; flag, because if you enable both &lt;code&gt;--compress&lt;/code&gt; and &lt;code&gt;--mangle&lt;/code&gt; at the same time, the &lt;code&gt;pure_funcs&lt;/code&gt; argument will have no effect; Uglify will mangle the names first and then not recognize them when it encounters those functions later.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rtfeldman</author><guid isPermaLink="false">https://github.com/rtfeldman/elm-spa-example</guid><pubDate>Sun, 09 Feb 2020 00:01:00 GMT</pubDate></item><item><title>Viir/bots #2 in Elm, Today</title><link>https://github.com/Viir/bots</link><description>&lt;p&gt;&lt;i&gt;Grinding is not necessary anymore. Use bots to improve your gaming experience.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;What is more exciting than playing video games? - Building an AI that plays video games!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-guides" class="anchor" aria-hidden="true" href="#guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Running a bot using the botengine console app: &lt;a href="./guide/how-to-run-a-bot.md"&gt;./guide/how-to-run-a-bot.md&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developing Bots for EVE Online: &lt;a href="./guide/eve-online/developing-bots-for-eve-online.md"&gt;./guide/eve-online/developing-bots-for-eve-online.md&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to collect samples for 64-bit memory reading development: &lt;a href="./guide/how-to-collect-samples-for-64-bit-memory-reading-development.md"&gt;./guide/how-to-collect-samples-for-64-bit-memory-reading-development.md&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-example-projects" class="anchor" aria-hidden="true" href="#example-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;EVE Online warp-to-0 autopilot&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User guide: &lt;a href="./guide/eve-online/how-to-automate-traveling-in-eve-online-using-a-warp-to-0-autopilot.md"&gt;./guide/eve-online/how-to-automate-traveling-in-eve-online-using-a-warp-to-0-autopilot.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Program code: &lt;a href="./implement/applications/eve-online/eve-online-warp-to-0-autopilot"&gt;./implement/applications/eve-online/eve-online-warp-to-0-autopilot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EVE Online mining bot&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User guide: &lt;a href="./guide/eve-online/how-to-automate-mining-asteroids-in-eve-online.md"&gt;./guide/eve-online/how-to-automate-mining-asteroids-in-eve-online.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Program code: &lt;a href="./implement/applications/eve-online/eve-online-mining-bot"&gt;./implement/applications/eve-online/eve-online-mining-bot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EVE Online ratting bot&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Program code: &lt;a href="./implement/applications/eve-online/eve-online-ratting-bot"&gt;./implement/applications/eve-online/eve-online-ratting-bot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tribal Wars 2 farmbot&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User guide: &lt;a href="./guide/tribal-wars-2/farm-manager-tribal-wars-2-farmbot.md"&gt;./guide/tribal-wars-2/farm-manager-tribal-wars-2-farmbot.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Program code: &lt;a href="./implement/applications/tribal-wars-2/tribal-wars-2-farmbot"&gt;./implement/applications/tribal-wars-2/tribal-wars-2-farmbot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More links to program codes are listed at &lt;a href="https://botcatalog.org" rel="nofollow"&gt;https://botcatalog.org&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-exploration" class="anchor" aria-hidden="true" href="#exploration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exploration&lt;/h2&gt;
&lt;p&gt;In the &lt;a href="./explore"&gt;'explore'&lt;/a&gt; subdirectory, I report on explorations in the world of botting in video games. These are raw chronological reports of experiments and discoveries. Some of the approaches and solutions discovered here become seeds for bots and guides.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Viir</author><guid isPermaLink="false">https://github.com/Viir/bots</guid><pubDate>Sun, 09 Feb 2020 00:02:00 GMT</pubDate></item><item><title>theiceshelf/arisgarden #3 in Elm, Today</title><link>https://github.com/theiceshelf/arisgarden</link><description>&lt;p&gt;&lt;i&gt;Electronic Cookbook&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="src/assets/imgs/_ari_1.png"&gt;&lt;img src="src/assets/imgs/_ari_1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arisgarden.theiceshelf.com/" rel="nofollow"&gt;Ari's Garden&lt;/a&gt; is a site for collecting and displaying the journey of making and
discovering food.&lt;/p&gt;
&lt;p&gt;Using Ari's Garden, you can find recipes and use dynamic features like tooltips
and timers to help you cook.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building--process" class="anchor" aria-hidden="true" href="#building--process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building / Process&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Elm 0.19.1&lt;/li&gt;
&lt;li&gt;Node &amp;gt;= 7.x.x&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Steps to Getting Started&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone the repo&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Adding new recipes/images&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recipes are stored in &lt;code&gt;src/scripts/recipes.org&lt;/code&gt;. All recipes must follow the same general schema.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;convert.js&lt;/code&gt; is used to turn &lt;code&gt;recipes.org&lt;/code&gt; into &lt;code&gt;src/scripts/db.json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;sequences of images can be turned into gifs using &lt;code&gt;ImageMagick's&lt;/code&gt; &lt;code&gt;mogrify&lt;/code&gt; command:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mogrify -resize 400 &lt;span class="pl-k"&gt;*&lt;/span&gt;.JPG

convert -delay 5 -loop 0 &lt;span class="pl-k"&gt;*&lt;/span&gt;.JPG output.gif&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>theiceshelf</author><guid isPermaLink="false">https://github.com/theiceshelf/arisgarden</guid><pubDate>Sun, 09 Feb 2020 00:03:00 GMT</pubDate></item></channel></rss>