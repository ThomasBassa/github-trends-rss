<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Assembly, Today</title><link>https://github.com/trending/assembly?since=daily</link><description>The top repositories on GitHub for assembly, measured daily</description><pubDate>Mon, 02 Dec 2019 01:06:08 GMT</pubDate><lastBuildDate>Mon, 02 Dec 2019 01:06:08 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>xiph/rav1e #1 in Assembly, Today</title><link>https://github.com/xiph/rav1e</link><description>&lt;p&gt;&lt;i&gt;The fastest and safest AV1 encoder.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rav1e----" class="anchor" aria-hidden="true" href="#rav1e----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rav1e &lt;a href="https://travis-ci.org/xiph/rav1e" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cf5369dac6e2aa181e4161efdf47b446dd524f78/68747470733a2f2f7472617669732d63692e6f72672f786970682f72617631652e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/xiph/rav1e.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/tdaede/rav1e/history" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/caa4dc60c0d8d4460dda29f8891f4ebcb786841f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f786970682f72617631653f6272616e63683d6d6173746572267376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/xiph/rav1e?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/xiph/rav1e/actions"&gt;&lt;img src="https://github.com/xiph/rav1e/workflows/rav1e/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/xiph/rav1e?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/687a8e0c6b9fa1a58949e9de01b1cb82876b30f7/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f786970682f72617631652f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/xiph/rav1e/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The fastest and safest AV1 encoder.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;rav1e is an AV1 video encoder. It is designed to eventually cover all use cases, though in its current form it is most suitable for cases where libaom (the reference encoder) is too slow.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intra and inter frames&lt;/li&gt;
&lt;li&gt;64x64 superblocks&lt;/li&gt;
&lt;li&gt;4x4 to 64x64 RDO-selected square and 2:1/1:2 rectangular blocks&lt;/li&gt;
&lt;li&gt;DC, H, V, Paeth, smooth, and a subset of directional prediction modes&lt;/li&gt;
&lt;li&gt;DCT, (FLIP-)ADST and identity transforms (up to 64x64, 16x16 and 32x32 respectively)&lt;/li&gt;
&lt;li&gt;8-, 10- and 12-bit depth color&lt;/li&gt;
&lt;li&gt;4:2:0 (full support), 4:2:2 and 4:4:4 (limited) chroma sampling&lt;/li&gt;
&lt;li&gt;Variable speed settings&lt;/li&gt;
&lt;li&gt;Near real-time encoding at high speed levels&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-releases" class="anchor" aria-hidden="true" href="#releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases&lt;/h2&gt;
&lt;p&gt;For the foreseeable future, a weekly pre-release of rav1e will be &lt;a href="https://github.com/xiph/rav1e/releases"&gt;published&lt;/a&gt; every Tuesday.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-windows-builds" class="anchor" aria-hidden="true" href="#windows-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows builds&lt;/h2&gt;
&lt;p&gt;Automated AppVeyor builds can be found &lt;a href="https://ci.appveyor.com/project/tdaede/rav1e/history" rel="nofollow"&gt;here&lt;/a&gt;. Click on a build (it is recommended you select a build based on "master"), then click ARTIFACTS to reveal the rav1e.exe download link.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;Some &lt;code&gt;x86_64&lt;/code&gt;-specific optimizations require a recent version of &lt;a href="https://nasm.us/" rel="nofollow"&gt;NASM&lt;/a&gt; and are enabled by default.&lt;/p&gt;
&lt;p&gt;In order to build, test and link to the codec with the default features on UNIX on &lt;code&gt;x86_64&lt;/code&gt;, you need NASM. To install this on Ubuntu or Linux Mint, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt install nasm&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Windows, a &lt;a href="https://www.nasm.us/pub/nasm/releasebuilds/" rel="nofollow"&gt;NASM binary&lt;/a&gt; in your system PATH is required.&lt;/p&gt;
&lt;p&gt;To build release binary in &lt;code&gt;target/release/rav1e&lt;/code&gt; run:&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;cargo build --release&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-target-specific-builds" class="anchor" aria-hidden="true" href="#target-specific-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Target-specific builds&lt;/h3&gt;
&lt;p&gt;The rust autovectorizer can produce a binary that is about 6%-7% faster if it can use &lt;code&gt;avx2&lt;/code&gt; in the general code, you may allow it by issuing:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RUSTFLAGS="-C target-cpu=native" cargo build --release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RUSTFLAGS="-C target-features=+avx2,+fma" cargo build --release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The resulting binary will not work on cpus that do not sport the same set of SIMD extensions enabled.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-the-c-api" class="anchor" aria-hidden="true" href="#building-the-c-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the C-API&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;rav1e&lt;/strong&gt; provides a C-compatible set of library, header and pkg-config file.&lt;/p&gt;
&lt;p&gt;To build and install it you can use &lt;a href="https://crates.io/crates/cargo-c" rel="nofollow"&gt;cargo-c&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cargo install cargo-c
cargo cinstall --release&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-compressing-video" class="anchor" aria-hidden="true" href="#compressing-video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compressing video&lt;/h2&gt;
&lt;p&gt;Input videos must be in y4m format. The monochrome color format is not supported.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cargo run --release --bin rav1e -- input.y4m -o output.ivf&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-decompressing-video" class="anchor" aria-hidden="true" href="#decompressing-video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Decompressing video&lt;/h2&gt;
&lt;p&gt;Encoder output should be compatible with any AV1 decoder compliant with the v1.0.0 specification. You can build compatible aomdec using the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir aom_test
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; aom_test
cmake /path/to/aom -DAOM_TARGET_CPU=generic -DCONFIG_AV1_ENCODER=0 -DENABLE_TESTS=0 -DENABLE_DOCS=0 -DCONFIG_LOWBITDEPTH=1
make -j8
./aomdec ../output.ivf -o output.y4m&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-configuring" class="anchor" aria-hidden="true" href="#configuring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring&lt;/h2&gt;
&lt;p&gt;rav1e has several optional features that can be enabled by passing --features to cargo test. Passing --all-features is discouraged.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;asm - enabled by default. When enabled, assembly is built for the platforms supporting it.
&lt;ul&gt;
&lt;li&gt;It requires &lt;code&gt;nasm&lt;/code&gt; on &lt;code&gt;x86_64&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;It requires &lt;code&gt;gas&lt;/code&gt; on &lt;code&gt;aarch64&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;SSE2&lt;/code&gt; is always enabled on &lt;code&gt;x86_64&lt;/code&gt;, &lt;code&gt;neon&lt;/code&gt; is always enabled for aarch64, you may set the environment variable &lt;code&gt;RAV1E_CPU_TARGET&lt;/code&gt; to &lt;code&gt;rust&lt;/code&gt; to disable all the assembly-optimized routines at the runtime.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-the-aomanalyzer" class="anchor" aria-hidden="true" href="#using-the-aomanalyzer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the AOMAnalyzer&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-local-analyzer" class="anchor" aria-hidden="true" href="#local-analyzer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Analyzer&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Download the &lt;a href="http://aomanalyzer.org" rel="nofollow"&gt;AOM Analyzer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Download &lt;a href="https://people.xiph.org/~mbebenita/analyzer/inspect.js" rel="nofollow"&gt;inspect.js&lt;/a&gt; and &lt;a href="https://people.xiph.org/~mbebenita/analyzer/inspect.wasm" rel="nofollow"&gt;inspect.wasm&lt;/a&gt; and save them in the same directory.&lt;/li&gt;
&lt;li&gt;Run the analyzer: &lt;code&gt;AOMAnalyzer path_to_inspect.js output.ivf&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-online-analyzer" class="anchor" aria-hidden="true" href="#online-analyzer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Online Analyzer&lt;/h3&gt;
&lt;p&gt;If your &lt;code&gt;.ivf&lt;/code&gt; file is hosted somewhere (and CORS is enabled on your web server) you can use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://arewecompressedyet.com/analyzer/?d=https://people.xiph.org/~mbebenita/analyzer/inspect.js&amp;amp;f=path_to_output.ivf
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-design" class="anchor" aria-hidden="true" href="#design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;src/context.rs - High-level functions that write symbols to the bitstream, and maintain context.&lt;/li&gt;
&lt;li&gt;src/ec.rs - Low-level implementation of the entropy coder, which directly writes the bitstream.&lt;/li&gt;
&lt;li&gt;src/lib.rs - The top level library, contains code to write headers, manage buffers, and iterate through each superblock.&lt;/li&gt;
&lt;li&gt;src/partition.rs - Functions and enums to manage partitions (subdivisions of a superblock).&lt;/li&gt;
&lt;li&gt;src/predict.rs - Intra prediction implementations.&lt;/li&gt;
&lt;li&gt;src/quantize.rs - Quantization and dequantization functions for coefficients.&lt;/li&gt;
&lt;li&gt;src/rdo.rs - RDO-related structures and distortion computation functions.&lt;/li&gt;
&lt;li&gt;src/transform/*.rs - Implementations of DCT and ADST transforms.&lt;/li&gt;
&lt;li&gt;src/util.rs - Misc utility code.&lt;/li&gt;
&lt;li&gt;src/bin/rav1e.rs - rav1e command line tool.&lt;/li&gt;
&lt;li&gt;src/bin/rav1erepl.rs - Command line tool for debugging.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-toolchain" class="anchor" aria-hidden="true" href="#toolchain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Toolchain&lt;/h3&gt;
&lt;p&gt;rav1e uses the stable version of Rust (the stable toolchain).&lt;/p&gt;
&lt;p&gt;To install the toolchain:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rustup install stable&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-coding-style" class="anchor" aria-hidden="true" href="#coding-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding style&lt;/h3&gt;
&lt;p&gt;Format code with &lt;a href="https://github.com/rust-lang-nursery/rustfmt"&gt;rustfmt&lt;/a&gt; 1.3.0 and above (distributed with Rust 1.37.0 and above) before submitting a PR.&lt;/p&gt;
&lt;p&gt;To install rustfmt:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rustup component add rustfmt&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cargo fmt&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-code-analysis" class="anchor" aria-hidden="true" href="#code-analysis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Analysis&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://github.com/rust-lang-nursery/rust-clippy"&gt;clippy&lt;/a&gt; will help catch common mistakes and improve your Rust code.&lt;/p&gt;
&lt;p&gt;We recommend you use it before submitting a PR.&lt;/p&gt;
&lt;p&gt;To install clippy:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rustup component add clippy&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then you can run &lt;code&gt;cargo clippy&lt;/code&gt; in place of &lt;code&gt;cargo check&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h3&gt;
&lt;p&gt;Run unit tests with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cargo &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Encode-decode integration tests require libaom and libdav1d.&lt;/p&gt;
&lt;p&gt;Installation on Ubuntu:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt install libaom-dev libdav1d-dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Installation on Fedora:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo dnf install libaom-devel libdav1d-devel&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run encode-decode integration tests against libaom with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cargo &lt;span class="pl-c1"&gt;test&lt;/span&gt; --release --features=decode_test&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run the encode-decode tests against &lt;code&gt;dav1d&lt;/code&gt; with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cargo &lt;span class="pl-c1"&gt;test&lt;/span&gt; --release --features=decode_test_dav1d&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run regular benchmarks with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cargo bench --features=bench&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-fuzzing" class="anchor" aria-hidden="true" href="#fuzzing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fuzzing&lt;/h3&gt;
&lt;p&gt;Install &lt;code&gt;cargo-fuzz&lt;/code&gt; with &lt;code&gt;cargo install cargo-fuzz&lt;/code&gt;. Running fuzz targets requires nightly Rust, so install that too with &lt;code&gt;rustup install nightly&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;List the fuzz targets with &lt;code&gt;cargo fuzz list&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run a fuzz target with &lt;code&gt;cargo +nightly fuzz run &amp;lt;target&amp;gt;&lt;/code&gt;.
&lt;ul&gt;
&lt;li&gt;Parallel fuzzing: &lt;code&gt;cargo +nightly fuzz run --jobs &amp;lt;n&amp;gt; &amp;lt;target&amp;gt; -- -workers=&amp;lt;n&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Disable memory leak detection (seems to trigger always): &lt;code&gt;cargo +nightly fuzz run &amp;lt;target&amp;gt; -- -detect_leaks=0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Bump the "slow unit" time limit: &lt;code&gt;cargo +nightly fuzz run &amp;lt;target&amp;gt; -- -report_slow_units=600&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make the fuzzer generate long inputs right away (useful because fuzzing uses a ring buffer for data, so when the fuzzer generates big inputs it has a chance to affect different settings individually): &lt;code&gt;cargo +nightly fuzz run &amp;lt;target&amp;gt; -- -max_len=256 -len_control=0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Release configuration (not really recommended because it disables debug assertions and integer overflow assertions): &lt;code&gt;RUSTFLAGS='-C codegen-units=1' cargo +nightly fuzz run --release &amp;lt;target&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;codegen-units=1&lt;/code&gt; fixes &lt;a href="https://github.com/rust-fuzz/cargo-fuzz/issues/161"&gt;https://github.com/rust-fuzz/cargo-fuzz/issues/161&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Just give me the complete command line: &lt;code&gt;RUSTFLAGS='-C codegen-units=1' cargo +nightly fuzz run -j10 encode -- -workers=10 -detect_leaks=0 -timeout=600 -report_slow_units=600 -max_len=256 -len_control=0&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Run a single artifact with debug output: &lt;code&gt;RUST_LOG=debug &amp;lt;path/to/fuzz/target/executable&amp;gt; &amp;lt;path/to/artifact&amp;gt;&lt;/code&gt;, for example, &lt;code&gt;RUST_LOG=debug fuzz/target/x86_64-unknown-linux-gnu/debug/encode fuzz/artifacts/encode/crash-2f5672cb76691b989bbd2022a5349939a2d7b952&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For adding new fuzz targets, see comment at the top of &lt;code&gt;src/fuzzing.rs&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-in-touch" class="anchor" aria-hidden="true" href="#getting-in-touch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting in Touch&lt;/h2&gt;
&lt;p&gt;Come chat with us on the IRC channel #daala on Freenode! If you don't have IRC set
up you can easily connect from your &lt;a href="http://webchat.freenode.net/?channels=%23daala" rel="nofollow"&gt;web browser&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xiph</author><guid isPermaLink="false">https://github.com/xiph/rav1e</guid><pubDate>Mon, 02 Dec 2019 00:01:00 GMT</pubDate></item><item><title>kanaka/mal #2 in Assembly, Today</title><link>https://github.com/kanaka/mal</link><description>&lt;p&gt;&lt;i&gt;mal - Make a Lisp&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mal---make-a-lisp" class="anchor" aria-hidden="true" href="#mal---make-a-lisp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mal - Make a Lisp&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/kanaka/mal" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/28d41556cf726e46c06fc2d472dc0b20d1ac413d/68747470733a2f2f7472617669732d63692e6f72672f6b616e616b612f6d616c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/kanaka/mal.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. Mal is a Clojure inspired Lisp interpreter&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Mal is implemented in 79 languages (81 different implementations and 102 runtime modes)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Creator&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#ada"&gt;Ada&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zmower"&gt;Chris Moore&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#ada2"&gt;Ada #2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/asarhaddon"&gt;Nicolas Boulenguez&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#gnu-awk"&gt;GNU Awk&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kariya-mitsuru"&gt;Miutsuru Kariya&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#bash-4"&gt;Bash 4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#basic-c64-and-qbasic"&gt;BASIC&lt;/a&gt; (C64 &amp;amp; QBasic)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#bbc-basic-v"&gt;BBC BASIC V&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bjh21"&gt;Ben Harris&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#c"&gt;C&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#c-1"&gt;C++&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sdt"&gt;Stephen Thirlwall&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#c-2"&gt;C#&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#chuck"&gt;ChucK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/wasamasa"&gt;Vasilij Schneidermann&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#clojure"&gt;Clojure&lt;/a&gt; (Clojure &amp;amp; ClojureScript)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#coffeescript"&gt;CoffeeScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#common-lisp"&gt;Common Lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/iqbalansari"&gt;Iqbal Ansari&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#crystal"&gt;Crystal&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/rhysd"&gt;Linda_pp&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#d"&gt;D&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#dart"&gt;Dart&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/hterkelsen"&gt;Harry Terkelsen&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#elixir"&gt;Elixir&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/ekmartin"&gt;Martin Ek&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#elm"&gt;Elm&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/c0deaddict"&gt;Jos van Bakel&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#emacs-lisp"&gt;Emacs Lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/wasamasa"&gt;Vasilij Schneidermann&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#erlang"&gt;Erlang&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nlfiedler"&gt;Nathan Fiedler&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#es6-ecmascript-2015"&gt;ES6&lt;/a&gt; (ECMAScript 2015)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#f"&gt;F#&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/pstephens"&gt;Peter Stephens&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#factor"&gt;Factor&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jordanlewis"&gt;Jordan Lewis&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#fantom"&gt;Fantom&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#forth"&gt;Forth&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/chouser"&gt;Chris Houser&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#gnu-guile-21"&gt;GNU Guile&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/NalaGinrut"&gt;Mu Lei&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#gnu-smalltalk"&gt;GNU Smalltalk&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/wasamasa"&gt;Vasilij Schneidermann&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#go"&gt;Go&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#groovy"&gt;Groovy&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#haskell"&gt;Haskell&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#haxe-neko-python-c-and-javascript"&gt;Haxe&lt;/a&gt; (Neko, Python, C++, &amp;amp; JS)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#hy"&gt;Hy&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#io"&gt;Io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#java-17"&gt;Java&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#javascriptnode"&gt;JavaScript&lt;/a&gt; (&lt;a href="http://kanaka.github.io/mal" rel="nofollow"&gt;Demo&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#julia"&gt;Julia&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#kotlin"&gt;Kotlin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/ivern"&gt;Javier Fernandez-Ivern&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#livescript"&gt;LiveScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/c0deaddict"&gt;Jos van Bakel&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#logo"&gt;Logo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#lua"&gt;Lua&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#gnu-make-381"&gt;GNU Make&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#mal"&gt;mal itself&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#matlab-gnu-octave-and-matlab"&gt;MATLAB&lt;/a&gt; (GNU Octave &amp;amp; MATLAB)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#minimal"&gt;miniMAL&lt;/a&gt; (&lt;a href="https://github.com/kanaka/miniMAL"&gt;Repo&lt;/a&gt;, &lt;a href="https://kanaka.github.io/miniMAL/" rel="nofollow"&gt;Demo&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#nasm"&gt;NASM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bendudson"&gt;Ben Dudson&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#nim-0170"&gt;Nim&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/def-"&gt;Dennis Felsing&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#object-pascal"&gt;Object Pascal&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#objective-c"&gt;Objective C&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#ocaml-4010"&gt;OCaml&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/chouser"&gt;Chris Houser&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#perl-5"&gt;Perl&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#perl-6"&gt;Perl 6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/hinrik"&gt;Hinrik Örn Sigurðsson&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#php-53"&gt;PHP&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#picolisp"&gt;Picolisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/wasamasa"&gt;Vasilij Schneidermann&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#pike"&gt;Pike&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#plpgsql-postgresql-sql-procedural-language"&gt;PL/pgSQL&lt;/a&gt; (PostgreSQL)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#plsql-oracle-sql-procedural-language"&gt;PL/SQL&lt;/a&gt; (Oracle)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#postscript-level-23"&gt;PostScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#powershell"&gt;PowerShell&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#python-2x-and-3x"&gt;Python&lt;/a&gt; (2.X &amp;amp; 3.X)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#python2-3x"&gt;Python #2&lt;/a&gt; (3.X)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/epylar"&gt;Gavin Lewis&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#rpython"&gt;RPython&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#r"&gt;R&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#racket-53"&gt;Racket&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#rexx"&gt;Rexx&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#ruby-19"&gt;Ruby&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#rust-138"&gt;Rust&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#scala"&gt;Scala&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#scheme-r7rs"&gt;Scheme (R7RS)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/wasamasa"&gt;Vasilij Schneidermann&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#skew"&gt;Skew&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#swift"&gt;Swift 2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/keith-rollin"&gt;Keith Rollin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#swift-3"&gt;Swift 3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#swift-4"&gt;Swift 4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/LispLY"&gt;陆遥&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#tcl-86"&gt;Tcl&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#typescript"&gt;TypeScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vvakame"&gt;Masahiro Wakame&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#vala"&gt;Vala&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sgtatham"&gt;Simon Tatham&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#vhdl"&gt;VHDL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#vimscript"&gt;Vimscript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#visual-basicnet"&gt;Visual Basic.NET&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#webassembly-wasm"&gt;WebAssembly&lt;/a&gt; (wasm)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kanaka"&gt;Joel Martin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#wren"&gt;Wren&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#yorick"&gt;Yorick&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/dubek"&gt;Dov Murik&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;3. Mal is a learning tool&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Each implementation of mal is separated into
11 incremental, self-contained (and testable) steps that demonstrate
core concepts of Lisp. The last step is capable of self-hosting
(running the mal implementation of mal). See the &lt;a href="process/guide.md"&gt;make-a-lisp process
guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The make-a-lisp steps are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="process/guide.md#step0"&gt;step0_repl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="process/guide.md#step1"&gt;step1_read_print&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="process/guide.md#step2"&gt;step2_eval&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="process/guide.md#step3"&gt;step3_env&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="process/guide.md#step4"&gt;step4_if_fn_do&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="process/guide.md#step5"&gt;step5_tco&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="process/guide.md#step6"&gt;step6_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="process/guide.md#step7"&gt;step7_quote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="process/guide.md#step8"&gt;step8_macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="process/guide.md#step9"&gt;step9_try&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="process/guide.md#stepA"&gt;stepA_mal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each make-a-lisp step has an associated architectural diagram. That elements
that are new for that step are highlighted in red.
Here is the final diagram for &lt;a href="process/guide.md#stepA"&gt;step A&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="process/stepA_mal.png"&gt;&lt;img src="process/stepA_mal.png" alt="stepA_mal architecture" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are interested in creating a mal implementation (or just
interested in using mal for something), please drop by the #mal
channel on freenode. In addition to the &lt;a href="process/guide.md"&gt;make-a-lisp process
guide&lt;/a&gt; there is also a &lt;a href="docs/FAQ.md"&gt;mal/make-a-lisp
FAQ&lt;/a&gt; where I attempt to answer some common questions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-presentations" class="anchor" aria-hidden="true" href="#presentations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presentations&lt;/h2&gt;
&lt;p&gt;Mal was presented publicly for the first time in a lightning talk at
Clojure West 2014 (unfortunately there is no video). See
examples/clojurewest2014.mal for the presentation that was given at the
conference (yes, the presentation is a mal program).&lt;/p&gt;
&lt;p&gt;At Midwest.io 2015, Joel Martin gave a presentation on Mal titled
"Achievement Unlocked: A Better Path to Language Learning".
&lt;a href="https://www.youtube.com/watch?v=lgyOAiRtZGw" rel="nofollow"&gt;Video&lt;/a&gt;,
&lt;a href="http://kanaka.github.io/midwest.io.mal/" rel="nofollow"&gt;Slides&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More recently Joel gave a presentation on "Make Your Own Lisp Interpreter
in 10 Incremental Steps" at LambdaConf 2016:
&lt;a href="https://www.youtube.com/watch?v=jVhupfthTEk" rel="nofollow"&gt;Part 1&lt;/a&gt;,
&lt;a href="https://www.youtube.com/watch?v=X5OQBMGpaTU" rel="nofollow"&gt;Part 2&lt;/a&gt;,
&lt;a href="https://www.youtube.com/watch?v=6mARZzGgX4U" rel="nofollow"&gt;Part 3&lt;/a&gt;,
&lt;a href="https://www.youtube.com/watch?v=dCO1SYR5kDU" rel="nofollow"&gt;Part 4&lt;/a&gt;,
&lt;a href="http://kanaka.github.io/lambdaconf/" rel="nofollow"&gt;Slides&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-buildingrunning-implementations" class="anchor" aria-hidden="true" href="#buildingrunning-implementations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building/running implementations&lt;/h2&gt;
&lt;p&gt;The simplest way to run any given implementation is to use docker.
Every implementation has a docker image pre-built with language
dependencies installed. You can launch the REPL using a convenient
target in the top level Makefile (where IMPL is the implementation
directory name and stepX is the step to run):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make DOCKERIZE=1 "repl^IMPL^stepX"
    # OR stepA is the default step:
make DOCKERIZE=1 "repl^IMPL"
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-external-implementations" class="anchor" aria-hidden="true" href="#external-implementations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External Implementations&lt;/h2&gt;
&lt;p&gt;The following implementations are maintained as separate projects:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-holyc" class="anchor" aria-hidden="true" href="#holyc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HolyC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bagnalla/holyc_mal"&gt;by Alexander Bagnalla&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-rust" class="anchor" aria-hidden="true" href="#rust"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/seven1m/mal-rust"&gt;by Tim Morgan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vi/mal-rust-vi"&gt;by vi&lt;/a&gt; - using &lt;a href="https://pest.rs/" rel="nofollow"&gt;Pest&lt;/a&gt; grammar, not using typical Mal infrastructure (cargo-ized steps and built-in converted tests).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-other-mal-projects" class="anchor" aria-hidden="true" href="#other-mal-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other mal Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dubek/malc"&gt;malc&lt;/a&gt; - Mal (Make A Lisp) compiler. Compiles a Mal program to LLVM assembly language, then binary.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seven1m/malcc"&gt;malcc&lt;/a&gt; - malcc is an incremental compiler implementation for the Mal language. It uses the Tiny C Compiler as the compiler backend and has full support for the Mal language, including macros, tail-call elimination, and even run-time eval. &lt;a href="https://mpov.timmorgan.org/i-built-a-lisp-compiler/" rel="nofollow"&gt;"I Built a Lisp Compiler"&lt;/a&gt; post about the process.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chr15m/frock"&gt;frock&lt;/a&gt; - Clojure-flavoured PHP. Uses mal/php to run programs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-implementation-details" class="anchor" aria-hidden="true" href="#implementation-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implementation Details&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-ada" class="anchor" aria-hidden="true" href="#ada"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ada&lt;/h3&gt;
&lt;p&gt;The Ada implementation was developed with GNAT 4.9 on debian. It also
compiles unchanged on windows if you have windows versions of git,
GNAT and (optionally) make.  There are no external dependencies
(readline not implemented).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ada
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-ada2" class="anchor" aria-hidden="true" href="#ada2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ada.2&lt;/h3&gt;
&lt;p&gt;The second Ada implementation was developed with GNAT 8 and links with
the GNU readline library.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ada
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-gnu-awk" class="anchor" aria-hidden="true" href="#gnu-awk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GNU awk&lt;/h3&gt;
&lt;p&gt;The GNU awk implementation of mal has been tested with GNU awk 4.1.1.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd gawk
gawk -O -f stepX_YYY.awk
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-bash-4" class="anchor" aria-hidden="true" href="#bash-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bash 4&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd bash
bash stepX_YYY.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-basic-c64-and-qbasic" class="anchor" aria-hidden="true" href="#basic-c64-and-qbasic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BASIC (C64 and QBasic)&lt;/h3&gt;
&lt;p&gt;The BASIC implementation uses a preprocessor that can generate BASIC
code that is compatible with both C64 BASIC (CBM v2) and QBasic. The
C64 mode has been tested with
&lt;a href="https://github.com/kanaka/cbmbasic"&gt;cbmbasic&lt;/a&gt; (the patched version is
currently required to fix issues with line input) and the QBasic mode
has been tested with &lt;a href="http://www.qb64.net/" rel="nofollow"&gt;qb64&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Generate C64 code and run it using cbmbasic:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd basic
make stepX_YYY.bas
STEP=stepX_YYY ./run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate QBasic code and load it into qb64:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd basic
make MODE=qbasic stepX_YYY.bas
./qb64 stepX_YYY.bas
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thanks to &lt;a href="https://github.com/sjsyrek"&gt;Steven Syrek&lt;/a&gt; for the original
inspiration for this implementation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bbc-basic-v" class="anchor" aria-hidden="true" href="#bbc-basic-v"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BBC BASIC V&lt;/h3&gt;
&lt;p&gt;The BBC BASIC V implementation can run in the Brandy interpreter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd bbc-basic
brandy -quit stepX_YYY.bbc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or in ARM BBC BASIC V under RISC OS 3 or later:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*Dir bbc-basic.riscos
*Run setup
*Run stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-c" class="anchor" aria-hidden="true" href="#c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C&lt;/h3&gt;
&lt;p&gt;The C implementation of mal requires the following libraries (lib and
header packages): glib, libffi6, libgc, and either the libedit or GNU readline
library.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd c
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-c-1" class="anchor" aria-hidden="true" href="#c-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C++&lt;/h3&gt;
&lt;p&gt;The C++ implementation of mal requires g++-4.9 or clang++-3.5 and
a readline compatible library to build. See the &lt;code&gt;cpp/README.md&lt;/code&gt; for
more details:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd cpp
make
    # OR
make CXX=clang++-3.5
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-c-2" class="anchor" aria-hidden="true" href="#c-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C#&lt;/h3&gt;
&lt;p&gt;The C# implementation of mal has been tested on Linux using the Mono
C# compiler (mcs) and the Mono runtime (version 2.10.8.1). Both are
required to build and run the C# implementation.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd cs
make
mono ./stepX_YYY.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-chuck" class="anchor" aria-hidden="true" href="#chuck"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ChucK&lt;/h3&gt;
&lt;p&gt;The ChucK implementation has been tested with ChucK 1.3.5.2.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd chuck
./run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-clojure" class="anchor" aria-hidden="true" href="#clojure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clojure&lt;/h3&gt;
&lt;p&gt;For the most part the Clojure implementation requires Clojure 1.5,
however, to pass all tests, Clojure 1.8.0-RC4 is required.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd clojure
lein with-profile +stepX trampoline run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-coffeescript" class="anchor" aria-hidden="true" href="#coffeescript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CoffeeScript&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo npm install -g coffee-script
cd coffee
coffee ./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-common-lisp" class="anchor" aria-hidden="true" href="#common-lisp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common Lisp&lt;/h3&gt;
&lt;p&gt;The implementation has been tested with SBCL, CCL, CMUCL, GNU CLISP, ECL and
Allegro CL on Ubuntu 16.04 and Ubuntu 12.04, see
the &lt;a href="common-lisp/README.org"&gt;README&lt;/a&gt; for more details. Provided you have the
dependencies mentioned installed, do the following to run the implementation&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd common-lisp
make
./run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-crystal" class="anchor" aria-hidden="true" href="#crystal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Crystal&lt;/h3&gt;
&lt;p&gt;The Crystal implementation of mal has been tested with Crystal 0.26.1.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd crystal
crystal run ./stepX_YYY.cr
    # OR
make   # needed to run tests
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-d" class="anchor" aria-hidden="true" href="#d"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;D&lt;/h3&gt;
&lt;p&gt;The D implementation of mal was tested with GDC 4.8.  It requires the GNU
readline library.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd d
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-dart" class="anchor" aria-hidden="true" href="#dart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dart&lt;/h3&gt;
&lt;p&gt;The Dart implementation has been tested with Dart 1.20.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd dart
dart ./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-emacs-lisp" class="anchor" aria-hidden="true" href="#emacs-lisp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emacs Lisp&lt;/h3&gt;
&lt;p&gt;The Emacs Lisp implementation of mal has been tested with Emacs 24.3
and 24.5.  While there is very basic readline editing (&lt;code&gt;&amp;lt;backspace&amp;gt;&lt;/code&gt;
and &lt;code&gt;C-d&lt;/code&gt; work, &lt;code&gt;C-c&lt;/code&gt; cancels the process), it is recommended to use
&lt;code&gt;rlwrap&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd elisp
emacs -Q --batch --load stepX_YYY.el
# with full readline support
rlwrap emacs -Q --batch --load stepX_YYY.el
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-elixir" class="anchor" aria-hidden="true" href="#elixir"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Elixir&lt;/h3&gt;
&lt;p&gt;The Elixir implementation of mal has been tested with Elixir 1.0.5.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd elixir
mix stepX_YYY
# Or with readline/line editing functionality:
iex -S mix stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-elm" class="anchor" aria-hidden="true" href="#elm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Elm&lt;/h3&gt;
&lt;p&gt;The Elm implementation of mal has been tested with Elm 0.18.0&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd elm
make stepX_YYY.js
STEP=stepX_YYY ./run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-erlang" class="anchor" aria-hidden="true" href="#erlang"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Erlang&lt;/h3&gt;
&lt;p&gt;The Erlang implementation of mal requires &lt;a href="http://www.erlang.org/download.html" rel="nofollow"&gt;Erlang/OTP R17&lt;/a&gt;
and &lt;a href="https://github.com/rebar/rebar"&gt;rebar&lt;/a&gt; to build.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd erlang
make
    # OR
MAL_STEP=stepX_YYY rebar compile escriptize # build individual step
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-es6-ecmascript-2015" class="anchor" aria-hidden="true" href="#es6-ecmascript-2015"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ES6 (ECMAScript 2015)&lt;/h3&gt;
&lt;p&gt;The ES6 / ECMAScript 2015 implementation uses the
&lt;a href="https://babeljs.io" rel="nofollow"&gt;babel&lt;/a&gt; compiler to generate ES5 compatible
JavaScript. The generated code has been tested with Node 0.12.4.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd es6
make
node build/stepX_YYY.js
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-f" class="anchor" aria-hidden="true" href="#f"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;F#&lt;/h3&gt;
&lt;p&gt;The F# implementation of mal has been tested on Linux using the Mono
F# compiler (fsharpc) and the Mono runtime (version 3.12.1). The mono C#
compiler (mcs) is also necessary to compile the readline dependency. All are
required to build and run the F# implementation.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd fsharp
make
mono ./stepX_YYY.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-factor" class="anchor" aria-hidden="true" href="#factor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Factor&lt;/h3&gt;
&lt;p&gt;The Factor implementation of mal has been tested with Factor 0.97
(&lt;a href="http://factorcode.org" rel="nofollow"&gt;factorcode.org&lt;/a&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd factor
FACTOR_ROOTS=. factor -run=stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-fantom" class="anchor" aria-hidden="true" href="#fantom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fantom&lt;/h3&gt;
&lt;p&gt;The Fantom implementation of mal has been tested with Fantom 1.0.70.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd fantom
make lib/fan/stepX_YYY.pod
STEP=stepX_YYY ./run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-forth" class="anchor" aria-hidden="true" href="#forth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forth&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd forth
gforth stepX_YYY.fs
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-gnu-guile-21" class="anchor" aria-hidden="true" href="#gnu-guile-21"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GNU Guile 2.1+&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd guile
guile -L ./ stepX_YYY.scm
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-gnu-smalltalk" class="anchor" aria-hidden="true" href="#gnu-smalltalk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GNU Smalltalk&lt;/h3&gt;
&lt;p&gt;The Smalltalk implementation of mal has been tested with GNU Smalltalk 3.2.91.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd gnu-smalltalk
./run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-go" class="anchor" aria-hidden="true" href="#go"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Go&lt;/h3&gt;
&lt;p&gt;The Go implementation of mal requires that go is installed on on the
path. The implementation has been tested with Go 1.3.1.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd go
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-groovy" class="anchor" aria-hidden="true" href="#groovy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Groovy&lt;/h3&gt;
&lt;p&gt;The Groovy implementation of mal requires Groovy to run and has been
tested with Groovy 1.8.6.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd groovy
make
groovy ./stepX_YYY.groovy
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-haskell" class="anchor" aria-hidden="true" href="#haskell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Haskell&lt;/h3&gt;
&lt;p&gt;The Haskell implementation requires the ghc compiler version 7.10.1 or
later and also the Haskell parsec and readline (or editline) packages.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd haskell
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-haxe-neko-python-c-and-javascript" class="anchor" aria-hidden="true" href="#haxe-neko-python-c-and-javascript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Haxe (Neko, Python, C++ and JavaScript)&lt;/h3&gt;
&lt;p&gt;The Haxe implementation of mal requires Haxe version 3.2 to compile.
Four different Haxe targets are supported: Neko, Python, C++, and
JavaScript.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd haxe
# Neko
make all-neko
neko ./stepX_YYY.n
# Python
make all-python
python3 ./stepX_YYY.py
# C++
make all-cpp
./cpp/stepX_YYY
# JavaScript
make all-js
node ./stepX_YYY.js
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-hy" class="anchor" aria-hidden="true" href="#hy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hy&lt;/h3&gt;
&lt;p&gt;The Hy implementation of mal has been tested with Hy 0.13.0.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd hy
./stepX_YYY.hy
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-io" class="anchor" aria-hidden="true" href="#io"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Io&lt;/h3&gt;
&lt;p&gt;The Io implementation of mal has been tested with Io version 20110905.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd io
io ./stepX_YYY.io
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-java-17" class="anchor" aria-hidden="true" href="#java-17"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java 1.7&lt;/h3&gt;
&lt;p&gt;The Java implementation of mal requires maven2 to build.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd java
mvn compile
mvn -quiet exec:java -Dexec.mainClass=mal.stepX_YYY
    # OR
mvn -quiet exec:java -Dexec.mainClass=mal.stepX_YYY -Dexec.args="CMDLINE_ARGS"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-javascriptnode" class="anchor" aria-hidden="true" href="#javascriptnode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JavaScript/Node&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd js
npm update
node stepX_YYY.js
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-julia" class="anchor" aria-hidden="true" href="#julia"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Julia&lt;/h3&gt;
&lt;p&gt;The Julia implementation of mal requires Julia 0.4.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd julia
julia stepX_YYY.jl
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-kotlin" class="anchor" aria-hidden="true" href="#kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin&lt;/h3&gt;
&lt;p&gt;The Kotlin implementation of mal has been tested with Kotlin 1.0.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd kotlin
make
java -jar stepX_YYY.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-livescript" class="anchor" aria-hidden="true" href="#livescript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LiveScript&lt;/h3&gt;
&lt;p&gt;The LiveScript implementation of mal has been tested with LiveScript 1.5.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd livescript
make
node_modules/.bin/lsc stepX_YYY.ls
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-logo" class="anchor" aria-hidden="true" href="#logo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logo&lt;/h3&gt;
&lt;p&gt;The Logo implementation of mal has been tested with UCBLogo 6.0.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd logo
logo stepX_YYY.lg
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-lua" class="anchor" aria-hidden="true" href="#lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua&lt;/h3&gt;
&lt;p&gt;The Lua implementation of mal has been tested with Lua 5.2. The
implementation requires that luarocks and the lua-rex-pcre library
are installed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd lua
make  # to build and link linenoise.so
./stepX_YYY.lua
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-mal" class="anchor" aria-hidden="true" href="#mal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mal&lt;/h3&gt;
&lt;p&gt;Running the mal implementation of mal involves running stepA of one of
the other implementations and passing the mal step to run as a command
line argument.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd IMPL
IMPL_STEPA_CMD ../mal/stepX_YYY.mal

&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-gnu-make-381" class="anchor" aria-hidden="true" href="#gnu-make-381"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GNU Make 3.81&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd make
make -f stepX_YYY.mk
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-nasm" class="anchor" aria-hidden="true" href="#nasm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NASM&lt;/h3&gt;
&lt;p&gt;The NASM implementation of mal is written for x86-64 Linux, and has been tested
with Linux 3.16.0-4-amd64 and NASM version 2.11.05.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd nasm
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-nim-0170" class="anchor" aria-hidden="true" href="#nim-0170"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nim 0.17.0&lt;/h3&gt;
&lt;p&gt;The Nim implementation of mal has been tested with Nim 0.17.0.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd nim
make
  # OR
nimble build
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-object-pascal" class="anchor" aria-hidden="true" href="#object-pascal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Object Pascal&lt;/h3&gt;
&lt;p&gt;The Object Pascal implementation of mal has been built and tested on
Linux using the Free Pascal compiler version 2.6.2 and 2.6.4.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd objpascal
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-objective-c" class="anchor" aria-hidden="true" href="#objective-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective C&lt;/h3&gt;
&lt;p&gt;The Objective C implementation of mal has been built and tested on
Linux using clang/LLVM 3.6. It has also been built and tested on OS
X using XCode 7.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd objc
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-ocaml-4010" class="anchor" aria-hidden="true" href="#ocaml-4010"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OCaml 4.01.0&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd ocaml
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-matlab-gnu-octave-and-matlab" class="anchor" aria-hidden="true" href="#matlab-gnu-octave-and-matlab"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MATLAB (GNU Octave and MATLAB)&lt;/h3&gt;
&lt;p&gt;The MatLab implementation has been tested with GNU Octave 4.2.1.
It has also been tested with MATLAB version R2014a on Linux. Note that
MATLAB is a commercial product.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd matlab
./stepX_YYY
octave -q --no-gui --no-history --eval "stepX_YYY();quit;"
matlab -nodisplay -nosplash -nodesktop -nojvm -r "stepX_YYY();quit;"
    # OR with command line arguments
octave -q --no-gui --no-history --eval "stepX_YYY('arg1','arg2');quit;"
matlab -nodisplay -nosplash -nodesktop -nojvm -r "stepX_YYY('arg1','arg2');quit;"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-minimal" class="anchor" aria-hidden="true" href="#minimal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;miniMAL&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/kanaka/miniMAL"&gt;miniMAL&lt;/a&gt; is small Lisp interpreter
implemented in less than 1024 bytes of JavaScript. To run the miniMAL
implementation of mal you need to download/install the miniMAL
interpreter (which requires Node.js).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd miniMAL
# Download miniMAL and dependencies
npm install
export PATH=`pwd`/node_modules/minimal-lisp/:$PATH
# Now run mal implementation in miniMAL
miniMAL ./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-perl-5" class="anchor" aria-hidden="true" href="#perl-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Perl 5&lt;/h3&gt;
&lt;p&gt;The Perl 5 implementation should work with perl 5.19.3 and later.&lt;/p&gt;
&lt;p&gt;For readline line editing support, install Term::ReadLine::Perl or
Term::ReadLine::Gnu from CPAN.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd perl
perl stepX_YYY.pl
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-perl-6" class="anchor" aria-hidden="true" href="#perl-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Perl 6&lt;/h3&gt;
&lt;p&gt;The Perl 6 implementation was tested on Rakudo Perl 6 2016.04.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd perl6
perl6 stepX_YYY.pl
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-php-53" class="anchor" aria-hidden="true" href="#php-53"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PHP 5.3&lt;/h3&gt;
&lt;p&gt;The PHP implementation of mal requires the php command line interface
to run.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd php
php stepX_YYY.php
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-picolisp" class="anchor" aria-hidden="true" href="#picolisp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Picolisp&lt;/h3&gt;
&lt;p&gt;The Picolisp implementation requires libreadline and Picolisp 3.1.11
or later.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd picolisp
./run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-pike" class="anchor" aria-hidden="true" href="#pike"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pike&lt;/h3&gt;
&lt;p&gt;The Pike implementation was tested on Pike 8.0.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd pike
pike stepX_YYY.pike
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-plpgsql-postgresql-sql-procedural-language" class="anchor" aria-hidden="true" href="#plpgsql-postgresql-sql-procedural-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PL/pgSQL (PostgreSQL SQL Procedural Language)&lt;/h3&gt;
&lt;p&gt;The PL/pgSQL implementation of mal requires a running PostgreSQL server
(the "kanaka/mal-test-plpgsql" docker image automatically starts
a PostgreSQL server). The implementation connects to the PostgreSQL server
and create a database named "mal" to store tables and stored
procedures. The wrapper script uses the psql command to connect to the
server and defaults to the user "postgres" but this can be overridden
with the PSQL_USER environment variable. A password can be specified
using the PGPASSWORD environment variable. The implementation has been
tested with PostgreSQL 9.4.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd plpgsql
./wrap.sh stepX_YYY.sql
    # OR
PSQL_USER=myuser PGPASSWORD=mypass ./wrap.sh stepX_YYY.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-plsql-oracle-sql-procedural-language" class="anchor" aria-hidden="true" href="#plsql-oracle-sql-procedural-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PL/SQL (Oracle SQL Procedural Language)&lt;/h3&gt;
&lt;p&gt;The PL/SQL implementation of mal requires a running Oracle DB
server (the "kanaka/mal-test-plsql" docker image automatically
starts an Oracle Express server). The implementation connects to the
Oracle server to create types, tables and stored procedures. The
default SQL*Plus logon value (username/password@connect_identifier) is
"system/oracle" but this can be overridden with the ORACLE_LOGON
environment variable. The implementation has been tested with Oracle
Express Edition 11g Release 2. Note that any SQL*Plus connection
warnings (user password expiration, etc) will interfere with the
ability of the wrapper script to communicate with the DB.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd plsql
./wrap.sh stepX_YYY.sql
    # OR
ORACLE_LOGON=myuser/mypass@ORCL ./wrap.sh stepX_YYY.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-postscript-level-23" class="anchor" aria-hidden="true" href="#postscript-level-23"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PostScript Level 2/3&lt;/h3&gt;
&lt;p&gt;The PostScript implementation of mal requires Ghostscript to run. It
has been tested with Ghostscript 9.10.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ps
gs -q -dNODISPLAY -I./ stepX_YYY.ps
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-powershell" class="anchor" aria-hidden="true" href="#powershell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PowerShell&lt;/h3&gt;
&lt;p&gt;The PowerShell implementation of mal requires the PowerShell script
language. It has been tested with PowerShell 6.0.0 Alpha 9 on Linux.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd powershell
powershell ./stepX_YYY.ps1
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-python-2x-and-3x" class="anchor" aria-hidden="true" href="#python-2x-and-3x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python (2.X and 3.X)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd python
python stepX_YYY.py
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-python2-3x" class="anchor" aria-hidden="true" href="#python2-3x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python.2 (3.X)&lt;/h3&gt;
&lt;p&gt;The second Python implementation makes heavy use of type annotations and uses the Arpeggio parser library.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Recommended: do these steps in a Python virtual environment.
pip3 install Arpeggio==1.9.0
python3 stepX_YYY.py
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-rpython" class="anchor" aria-hidden="true" href="#rpython"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RPython&lt;/h3&gt;
&lt;p&gt;You must have &lt;a href="https://rpython.readthedocs.org/" rel="nofollow"&gt;rpython&lt;/a&gt; on your path
(included with &lt;a href="https://bitbucket.org/pypy/pypy/" rel="nofollow"&gt;pypy&lt;/a&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd rpython
make        # this takes a very long time
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-r" class="anchor" aria-hidden="true" href="#r"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;R&lt;/h3&gt;
&lt;p&gt;The R implementation of mal requires R (r-base-core) to run.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd r
make libs  # to download and build rdyncall
Rscript stepX_YYY.r
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-racket-53" class="anchor" aria-hidden="true" href="#racket-53"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Racket (5.3)&lt;/h3&gt;
&lt;p&gt;The Racket implementation of mal requires the Racket
compiler/interpreter to run.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd racket
./stepX_YYY.rkt
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-rexx" class="anchor" aria-hidden="true" href="#rexx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rexx&lt;/h3&gt;
&lt;p&gt;The Rexx implementation of mal has been tested with Regina Rexx 3.6.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd rexx
make
rexx -a ./stepX_YYY.rexxpp
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-ruby-19" class="anchor" aria-hidden="true" href="#ruby-19"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ruby (1.9+)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd ruby
ruby stepX_YYY.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-rust-138" class="anchor" aria-hidden="true" href="#rust-138"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rust (1.38+)&lt;/h3&gt;
&lt;p&gt;The rust implementation of mal requires the rust compiler and build
tool (cargo) to build.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd rust
cargo run --release --bin stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-scala" class="anchor" aria-hidden="true" href="#scala"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scala&lt;/h3&gt;
&lt;p&gt;Install scala and sbt (&lt;a href="http://www.scala-sbt.org/0.13/tutorial/Installing-sbt-on-Linux.html" rel="nofollow"&gt;http://www.scala-sbt.org/0.13/tutorial/Installing-sbt-on-Linux.html&lt;/a&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd scala
sbt 'run-main stepX_YYY'
    # OR
sbt compile
scala -classpath target/scala*/classes stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-scheme-r7rs" class="anchor" aria-hidden="true" href="#scheme-r7rs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scheme (R7RS)&lt;/h3&gt;
&lt;p&gt;The Scheme implementation of mal has been tested with Chibi-Scheme
0.7.3, Kawa 2.4, Gauche 0.9.5, CHICKEN 4.11.0, Sagittarius 0.8.3,
Cyclone 0.6.3 (Git version) and Foment 0.4 (Git version).  You should
be able to get it running on other conforming R7RS implementations
after figuring out how libraries are loaded and adjusting the
&lt;code&gt;Makefile&lt;/code&gt; and &lt;code&gt;run&lt;/code&gt; script accordingly.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd scheme
make symlinks
# chibi
scheme_MODE=chibi ./run
# kawa
make kawa
scheme_MODE=kawa ./run
# gauche
scheme_MODE=gauche ./run
# chicken
make chicken
scheme_MODE=chicken ./run
# sagittarius
scheme_MODE=sagittarius ./run
# cyclone
make cyclone
scheme_MODE=cyclone ./run
# foment
scheme_MODE=foment ./run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-skew" class="anchor" aria-hidden="true" href="#skew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Skew&lt;/h3&gt;
&lt;p&gt;The Skew implementation of mal has been tested with Skew 0.7.42.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd skew
make
node stepX_YYY.js
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swift" class="anchor" aria-hidden="true" href="#swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h3&gt;
&lt;p&gt;The Swift implementation of mal requires the Swift 2.0 compiler (XCode
7.0) to build. Older versions will not work due to changes in the
language and standard library.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd swift
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swift-3" class="anchor" aria-hidden="true" href="#swift-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 3&lt;/h3&gt;
&lt;p&gt;The Swift 3 implementation of mal requires the Swift 3.0 compiler. It
has been tested with Swift 3 Preview 3.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd swift3
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swift-4" class="anchor" aria-hidden="true" href="#swift-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 4&lt;/h3&gt;
&lt;p&gt;The Swift 4 implementation of mal requires the Swift 4.0 compiler. It
has been tested with Swift 4.2.3 release.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd swift4
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-tcl-86" class="anchor" aria-hidden="true" href="#tcl-86"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tcl 8.6&lt;/h3&gt;
&lt;p&gt;The Tcl implementation of mal requires Tcl 8.6 to run.  For readline line
editing support, install tclreadline.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd tcl
tclsh ./stepX_YYY.tcl
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-typescript" class="anchor" aria-hidden="true" href="#typescript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TypeScript&lt;/h3&gt;
&lt;p&gt;The TypeScript implementation of mal requires the TypeScript 2.2 compiler.
It has been tested with Node.js v6.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ts
make
node ./stepX_YYY.js
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-vala" class="anchor" aria-hidden="true" href="#vala"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vala&lt;/h3&gt;
&lt;p&gt;The Vala implementation of mal has been tested with the Vala 0.40.8
compiler. You will need to install &lt;code&gt;valac&lt;/code&gt; and &lt;code&gt;libreadline-dev&lt;/code&gt; or
equivalent.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd vala
make
./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-vhdl" class="anchor" aria-hidden="true" href="#vhdl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VHDL&lt;/h3&gt;
&lt;p&gt;The VHDL implementation of mal has been tested with GHDL 0.29.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd vhdl
make
./run_vhdl.sh ./stepX_YYY
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-vimscript" class="anchor" aria-hidden="true" href="#vimscript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vimscript&lt;/h3&gt;
&lt;p&gt;The Vimscript implementation of mal requires Vim 8.0 to run.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd vimscript
./run_vimscript.sh ./stepX_YYY.vim
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-visual-basicnet" class="anchor" aria-hidden="true" href="#visual-basicnet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Basic.NET&lt;/h3&gt;
&lt;p&gt;The VB.NET implementation of mal has been tested on Linux using the Mono
VB compiler (vbnc) and the Mono runtime (version 2.10.8.1). Both are
required to build and run the VB.NET implementation.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd vb
make
mono ./stepX_YYY.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-webassembly-wasm" class="anchor" aria-hidden="true" href="#webassembly-wasm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebAssembly (wasm)&lt;/h3&gt;
&lt;p&gt;The WebAssembly implementation is written in
&lt;a href="https://github.com/kanaka/wam"&gt;Wam&lt;/a&gt; (WebAssembly Macro language) and
runs under several different non-web embeddings (runtimes):
&lt;a href="https://nodejs.org" rel="nofollow"&gt;node&lt;/a&gt;,
&lt;a href="https://github.com/CraneStation/wasmtime"&gt;wasmtime&lt;/a&gt;,
&lt;a href="https://wasmer.io" rel="nofollow"&gt;wasmer&lt;/a&gt;,
&lt;a href="https://github.com/fastly/lucet"&gt;lucet&lt;/a&gt;,
&lt;a href="https://github.com/kanaka/wac"&gt;wax&lt;/a&gt;,
&lt;a href="https://github.com/kanaka/wac"&gt;wace&lt;/a&gt;,
&lt;a href="https://github.com/kanaka/warpy"&gt;warpy&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd wasm
# node
make wasm_MODE=node
./run.js ./stepX_YYY.wasm
# wasmtime
make wasm_MODE=wasmtime
wasmtime --dir=./ --dir=../ --dir=/ ./stepX_YYY.wasm
# wasmer
make wasm_MODE=wasmer
wasmer run --dir=./ --dir=../ --dir=/ ./stepX_YYY.wasm
# lucet
make wasm_MODE=lucet
lucet-wasi --dir=./:./ --dir=../:../ --dir=/:/ ./stepX_YYY.so
# wax
make wasm_MODE=wax
wax ./stepX_YYY.wasm
# wace
make wasm_MODE=wace_libc
wace ./stepX_YYY.wasm
# warpy
make wasm_MODE=warpy
warpy --argv --memory-pages 256 ./stepX_YYY.wasm
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-wren" class="anchor" aria-hidden="true" href="#wren"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wren&lt;/h3&gt;
&lt;p&gt;The Wren implementation of mal was tested on Wren 0.2.0.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd wren
wren ./stepX_YYY.wren
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-yorick" class="anchor" aria-hidden="true" href="#yorick"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Yorick&lt;/h3&gt;
&lt;p&gt;The Yorick implementation of mal was tested on Yorick 2.2.04.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd yorick
yorick -batch ./stepX_YYY.i
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests&lt;/h2&gt;
&lt;p&gt;The top level Makefile has a number of useful targets to assist with
implementation development and testing. The &lt;code&gt;help&lt;/code&gt; target provides
a list of the targets and options:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make help
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-functional-tests" class="anchor" aria-hidden="true" href="#functional-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functional tests&lt;/h3&gt;
&lt;p&gt;The are almost 800 generic functional tests (for all implementations)
in the &lt;code&gt;tests/&lt;/code&gt; directory. Each step has a corresponding test file
containing tests specific to that step. The &lt;code&gt;runtest.py&lt;/code&gt; test harness
launches a Mal step implementation and then feeds the tests one at
a time to the implementation and compares the output/return value to
the expected output/return value.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To run all the tests across all implementations (be prepared to wait):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make test
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;To run all tests against a single implementation:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make "test^IMPL"

# e.g.
make "test^clojure"
make "test^js"
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;To run tests for a single step against all implementations:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make "test^stepX"

# e.g.
make "test^step2"
make "test^step7"
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;To run tests for a specific step against a single implementation:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make "test^IMPL^stepX"

# e.g
make "test^ruby^step3"
make "test^ps^step4"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-self-hosted-functional-tests" class="anchor" aria-hidden="true" href="#self-hosted-functional-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Self-hosted functional tests&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To run the functional tests in self-hosted mode, you specify &lt;code&gt;mal&lt;/code&gt;
as the test implementation and use the &lt;code&gt;MAL_IMPL&lt;/code&gt; make variable
to change the underlying host language (default is JavaScript):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make MAL_IMPL=IMPL "test^mal^step2"

# e.g.
make "test^mal^step2"   # js is default
make MAL_IMPL=ruby "test^mal^step2"
make MAL_IMPL=python "test^mal^step2"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-starting-the-repl" class="anchor" aria-hidden="true" href="#starting-the-repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting the REPL&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To start the REPL of an implementation in a specific step:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make "repl^IMPL^stepX"

# e.g
make "repl^ruby^step3"
make "repl^ps^step4"
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;If you omit the step, then &lt;code&gt;stepA&lt;/code&gt; is used:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make "repl^IMPL"

# e.g
make "repl^ruby"
make "repl^ps"
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;To start the REPL of the self-hosted implementation, specify &lt;code&gt;mal&lt;/code&gt; as the
REPL implementation and use the &lt;code&gt;MAL_IMPL&lt;/code&gt; make variable to change the
underlying host language (default is JavaScript):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make MAL_IMPL=IMPL "repl^mal^stepX"

# e.g.
make "repl^mal^step2"   # js is default
make MAL_IMPL=ruby "repl^mal^step2"
make MAL_IMPL=python "repl^mal"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tests" class="anchor" aria-hidden="true" href="#performance-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tests&lt;/h3&gt;
&lt;p&gt;Warning: These performance tests are neither statistically valid nor
comprehensive; runtime performance is a not a primary goal of mal. If
you draw any serious conclusions from these performance tests, then
please contact me about some amazing oceanfront property in Kansas
that I'm willing to sell you for cheap.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To run performance tests against a single implementation:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make "perf^IMPL"

# e.g.
make "perf^js"
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;To run performance tests against all implementations:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make "perf"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-generating-language-statistics" class="anchor" aria-hidden="true" href="#generating-language-statistics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generating language statistics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To report line and byte statistics for a single implementation:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make "stats^IMPL"

# e.g.
make "stats^js"
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-dockerized-testing" class="anchor" aria-hidden="true" href="#dockerized-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dockerized testing&lt;/h2&gt;
&lt;p&gt;Every implementation directory contains a Dockerfile to create
a docker image containing all the dependencies for that
implementation. In addition, the top-level Makefile contains support
for running the tests target (and perf, stats, repl, etc) within
a docker container for that implementation by passing &lt;em&gt;"DOCKERIZE=1"&lt;/em&gt;
on the make command line. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make DOCKERIZE=1 "test^js^step3"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Existing implementations already have docker images built and pushed
to the docker registry. However, if
you wish to build or rebuild a docker image locally, the toplevel
Makefile provides a rule for building docker images:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make "docker-build^IMPL"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Docker images are named &lt;em&gt;"kanaka/mal-test-IMPL"&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;JVM-based language implementations (Groovy, Java, Clojure, Scala):
you will probably need to run this command once manually
first &lt;code&gt;make DOCKERIZE=1 "repl^IMPL"&lt;/code&gt; before you can run tests because
runtime dependencies need to be downloaded to avoid the tests timing
out. These dependencies are downloaded to dot-files in the /mal
directory so they will persist between runs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Mal (make-a-lisp) is licensed under the MPL 2.0 (Mozilla Public
License 2.0). See LICENSE.txt for more details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kanaka</author><guid isPermaLink="false">https://github.com/kanaka/mal</guid><pubDate>Mon, 02 Dec 2019 00:02:00 GMT</pubDate></item><item><title>LuigiBlood/zelda_dawn_dusk #3 in Assembly, Today</title><link>https://github.com/LuigiBlood/zelda_dawn_dusk</link><description>&lt;p&gt;&lt;i&gt;Zelda 64: Dawn &amp; Dusk - Expansion Disk&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./images/64DD_Logo.png"&gt;&lt;img src="./images/64DD_Logo.png" alt="Zelda 64 - Dawn &amp;amp; Dusk" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Zelda 64 - Dawn &amp;amp; Dusk is a brand new disk expansion for The Legend of Zelda - Ocarina of Time.&lt;/p&gt;
&lt;p&gt;It is &lt;strong&gt;NOT&lt;/strong&gt; meant to be a recreation of Ura Zelda or Zelda Gaiden, it has been purposefully made to show off the capabilities of Zelda's 64DD support by &lt;strong&gt;hackers&lt;/strong&gt; (this is an important distinction, explained later in this README).&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lead Development &amp;amp; Music&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Captain Seedy-Eye&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;64DD Porting&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;LuigiBlood&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Special Thanks to&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;PK-LOVE&lt;/li&gt;
&lt;li&gt;BWXIX&lt;/li&gt;
&lt;li&gt;Hylian Modding (&lt;a href="http://hylianmodding.com/" rel="nofollow"&gt;http://hylianmodding.com/&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testers&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Captain Seedy-Eye&lt;/li&gt;
&lt;li&gt;LuigiBlood&lt;/li&gt;
&lt;li&gt;Hard4Games&lt;/li&gt;
&lt;li&gt;ZFG&lt;/li&gt;
&lt;li&gt;Dry4Haz&lt;/li&gt;
&lt;li&gt;Fig&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;p&gt;See &lt;a href="./doc/BUILDING.md"&gt;BUILDING.md&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-playing" class="anchor" aria-hidden="true" href="#playing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Playing&lt;/h1&gt;
&lt;p&gt;(Regardless of disk &amp;amp; Zelda ROM region, the expansion will play fully in english. Don't worry about the language barrier.)&lt;/p&gt;
&lt;p&gt;See &lt;a href="./doc/PLAYING.md"&gt;PLAYING.md&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-making-of-the-disk" class="anchor" aria-hidden="true" href="#the-making-of-the-disk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Making of the Disk&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-the-beginning" class="anchor" aria-hidden="true" href="#the-beginning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The beginning&lt;/h2&gt;
&lt;p&gt;This project has been underway since around the beginning of 2018, when a proof of concept was made (&lt;a href="https://github.com/LuigiBlood/zeldadisk"&gt;https://github.com/LuigiBlood/zeldadisk&lt;/a&gt;), based on the research that Zoinkity did for the disk implementation in the original game.&lt;/p&gt;
&lt;p&gt;I have been trying to get ways to show this off in a way that's enjoyable, so I have been teaming up with people who could handle the more creative side, which is why the lead developer is actually not me (LuigiBlood) but Captain Seedy-Eye. My only input on the creative side was basically conveying how much content I wanted for such a proof of concept... and tell the lead dev how much I liked it.&lt;/p&gt;
&lt;p&gt;I was more interested on the technical side of things and he has done a great job. This was developed first on a Master Quest Debug ROM, for the ease of hacking tools. My job would be then to port all the changes to a 64DD disk, &lt;strong&gt;no matter the hacky tricks I would do.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-zelda-handles-64dd-integration" class="anchor" aria-hidden="true" href="#how-zelda-handles-64dd-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How Zelda handles 64DD integration&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;But first, a little technical word on how Zelda handles 64DD, and what Ura Zelda actually is:&lt;/strong&gt; Upon starting a disk save file, and not before, the game loads a block of code and callbacks from the disk to initialize the process, and then activates a bunch of traps into the regular game code where if the callback it wants exists, it would call it. The only exception is the scene file loading, handled by the game using a specific byte to tell if the game has to load from disk or not, but most of the time, the loading has to be handled entirely by the disk's code (so, my code).&lt;/p&gt;
&lt;p&gt;It just so happens that the default scene list have default information when it comes to load scenes from disk, and &lt;strong&gt;they are most of the dungeons, indicating what Nintendo had planned for since before the game's release, that is, Master Quest.&lt;/strong&gt; That said, this Scene List could be replaced (and that's a feature intended by devs), so you can technically replace more scenes.&lt;/p&gt;
&lt;p&gt;However the smoking gun is the fact that the minimap loading routine, handles both overworld and dungeon minimaps (they are seperate files), yet &lt;strong&gt;only the dungeon minimaps have an explicit 64DD trap that allows loading from another source.&lt;/strong&gt; This means that &lt;strong&gt;Ura Zelda IS Master Quest&lt;/strong&gt;, and could be found out by looking at what the original devs intended this for.&lt;/p&gt;
&lt;p&gt;You could technically replace almost any game file, but the game had several revisions over its lifetime, making this feature useless as files were changing in addresses and sizes, &lt;strong&gt;effectively rendering impossible most other changes unless you do specific version checks&lt;/strong&gt;, which, from a developer standpoint, is just too hacky to be worthwhile if you don't know when you'll stop making newer revisions of the game.&lt;/p&gt;
&lt;p&gt;The main problem of this implementation, is that whatever they did, it was set in stone when the first version of the game was finished. It is not future proof. If plans changed, they had to fit in what they already implemented. That said, &lt;strong&gt;Miyamoto did evoke making a special cartridge for this instead...&lt;/strong&gt; which was kind of what happened since, and effectively a better way of handling this.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-we-are-handling-64dd-integration" class="anchor" aria-hidden="true" href="#how-we-are-handling-64dd-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How WE are handling 64DD integration&lt;/h2&gt;
&lt;p&gt;However, &lt;strong&gt;we're hackers, and we don't have to care about what Nintendo wanted to do,&lt;/strong&gt; and because disk support gives us a free entrypoint to run our own code, this disk has been pulling all sorts of tricks to make this work as close as the original hacked Debug ROM as possible. &lt;strong&gt;Version specific checks, code patching on the fly, loading all the necessary files from the disk AND ROM, patch them and repoint them before the gameplay starts.&lt;/strong&gt; That, in a nutshell, are essentially all of the changes made to accomodate to this hack.&lt;/p&gt;
&lt;p&gt;And because using 64DD requires the Expansion Pak, we effectively have 4 additional megs of RAM just for this &lt;em&gt;(except sometimes the game runs code on the extra RAM and puts a framebuffer there for a bit so we have a bit less than that)&lt;/em&gt;. We have used a lot of it, and &lt;strong&gt;we are far above and beyond what Nintendo intended this for.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I had quite the task of writing all the code in assembly, mostly because I didn't know how to build stuff in C for this exact purpose; but that's okay, I'm not the best assembly coder but I know how to do it. Some experts may laugh at the stupid code I have written.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I wanted this disk to work on all NTSC revisions of the original game cartridge&lt;/strong&gt;, I did not want to hack the ROM, you shouldn't need cheat codes. So I had to face some issues, like the lack of technical documentation for version 1.1 and 1.2, so I had decided to make this fully work on 1.0, and then find ways to port all the changes to the other versions. It turned out that since most of the code is actually identical, porting these changes to 1.1 and 1.2 ended up being more of a breeze than anything, most changes being actually 1:1.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I also wanted to reuse files from the game instead of supplying already modified files into the disk as much as I could&lt;/strong&gt;, mostly to avoid copyright issues and also because it's much more optimized that way, and with all the optimizations in place, &lt;strong&gt;all of the disk data is actually just under 4 MB, and all of the disk code is under 4 KB.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'll just say this for any other developer interested: &lt;strong&gt;ALIGN YOUR FILES IN ROM, RAM AND DISK. Preferably 64-bit alignment.&lt;/strong&gt; This took ages to debug, about two weeks trying to find the problem that prevented real hardware support, so much so I was worried to release this disk in a state where it only worked for emulators.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-final-thoughts" class="anchor" aria-hidden="true" href="#final-thoughts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;It turns out that I enjoyed working on this &lt;em&gt;(...except that real hardware bug)&lt;/em&gt;, from a technical perspective I'd like to think I came out as a more mature low level developer. But this would be my only project for Zelda on Nintendo 64, unless I find more dummy things to do.&lt;/p&gt;
&lt;p&gt;I want to give huge thanks to everyone involved in this project, and &lt;strong&gt;I hope you'll enjoy this expansion.&lt;/strong&gt; And check out Hylian Modding (&lt;a href="http://hylianmodding.com/" rel="nofollow"&gt;http://hylianmodding.com/&lt;/a&gt;), they made this expansion possible.&lt;/p&gt;
&lt;p&gt;But I really gotta say though, the 64DD integration in Zelda kinda &lt;em&gt;sucks&lt;/em&gt;. It really seems to be a thing that was done with little thought.&lt;/p&gt;
&lt;p&gt;-LuigiBlood&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>LuigiBlood</author><guid isPermaLink="false">https://github.com/LuigiBlood/zelda_dawn_dusk</guid><pubDate>Mon, 02 Dec 2019 00:03:00 GMT</pubDate></item><item><title>microsoft/MS-DOS #4 in Assembly, Today</title><link>https://github.com/microsoft/MS-DOS</link><description>&lt;p&gt;&lt;i&gt;The original sources of MS-DOS 1.25 and 2.0, for reference purposes&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/Microsoft/MS-DOS/blob/master/msdos-logo.png"&gt;&lt;img width="150" height="150" align="left" alt="MS-DOS logo" src="https://github.com/Microsoft/MS-DOS/raw/master/msdos-logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;   
&lt;h1&gt;&lt;a id="user-content-ms-dos-v125-and-v20-source-code" class="anchor" aria-hidden="true" href="#ms-dos-v125-and-v20-source-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MS-DOS v1.25 and v2.0 Source Code&lt;/h1&gt;
&lt;p&gt;This repo contains the original source-code and compiled binaries for MS-DOS v1.25 and MS-DOS v2.0.&lt;/p&gt;
&lt;p&gt;These are the same files &lt;a href="http://www.computerhistory.org/atchm/microsoft-ms-dos-early-source-code/" rel="nofollow"&gt;originally shared at the Computer History Museum on March 25th, 2014&lt;/a&gt; and are being (re)published in this repo to make them easier to find, reference-to in external writing and works, and to allow exploration and experimentation for those interested in early PC Operating Systems.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;All files within this repo are released under the &lt;a href="https://en.wikipedia.org/wiki/MIT_License" rel="nofollow"&gt;MIT (OSI) License&lt;/a&gt; as per the &lt;a href="https://github.com/Microsoft/MS-DOS/blob/master/LICENSE.md"&gt;LICENSE file&lt;/a&gt; stored in the root of this repo.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute!&lt;/h1&gt;
&lt;p&gt;The source files in this repo are for historical reference and will be kept static, so please &lt;strong&gt;don’t send&lt;/strong&gt; Pull Requests suggesting any modifications to the source files, but feel free to fork this repo and experiment &lt;g-emoji class="g-emoji" alias="blush" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png"&gt;😊&lt;/g-emoji&gt;.&lt;/p&gt;
&lt;p&gt;If, however, you’d like to submit additional non-source content or modifications to non-source files (e.g., this README), please submit via PR, and we’ll review and consider.&lt;/p&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.  For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/MS-DOS</guid><pubDate>Mon, 02 Dec 2019 00:04:00 GMT</pubDate></item><item><title>pret/pokered #5 in Assembly, Today</title><link>https://github.com/pret/pokered</link><description>&lt;p&gt;&lt;i&gt;disassembly of Pokémon Red/Blue&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-pokémon-red-and-blue" class="anchor" aria-hidden="true" href="#pokémon-red-and-blue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pokémon Red and Blue&lt;/h1&gt;
&lt;p&gt;This is a disassembly of Pokémon Red and Blue.&lt;/p&gt;
&lt;p&gt;It builds the following roms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pokemon Red (UE) [S][!].gb  &lt;code&gt;md5: 3d45c1ee9abd5738df46d2bdda8b57dc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Pokemon Blue (UE) [S][!].gb &lt;code&gt;md5: 50927e843568814f7ed45ec4f944bd8b&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To set up the repository, see &lt;a href="INSTALL.md"&gt;&lt;strong&gt;INSTALL.md&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See also&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokeyellow"&gt;&lt;strong&gt;Pokémon Yellow&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokegold"&gt;&lt;strong&gt;Pokémon Gold&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokecrystal"&gt;&lt;strong&gt;Pokémon Crystal&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokepinball"&gt;&lt;strong&gt;Pokémon Pinball&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/poketcg"&gt;&lt;strong&gt;Pokémon TCG&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokeruby"&gt;&lt;strong&gt;Pokémon Ruby&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokefirered"&gt;&lt;strong&gt;Pokémon Fire Red&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokeemerald"&gt;&lt;strong&gt;Pokémon Emerald&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Discord: &lt;a href="https://discord.gg/6EuWgX9" rel="nofollow"&gt;&lt;strong&gt;pret&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;irc: &lt;strong&gt;irc.freenode.net&lt;/strong&gt; &lt;a href="https://kiwiirc.com/client/irc.freenode.net/?#pret" rel="nofollow"&gt;&lt;strong&gt;#pret&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pret</author><guid isPermaLink="false">https://github.com/pret/pokered</guid><pubDate>Mon, 02 Dec 2019 00:05:00 GMT</pubDate></item><item><title>chrislgarry/Apollo-11 #6 in Assembly, Today</title><link>https://github.com/chrislgarry/Apollo-11</link><description>&lt;p&gt;&lt;i&gt;Original Apollo 11 Guidance Computer (AGC) source code for the command and lunar modules.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-apollo-11" class="anchor" aria-hidden="true" href="#apollo-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apollo-11&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.nasa.gov/mission_pages/apollo/missions/apollo11.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b0879e5ad3dded69a38362aacf9ec5baac73b1eb/68747470733a2f2f72617763646e2e6769746861636b2e636f6d2f616c65656e34322f6261646765732f63393234366637342f7372632f6e6173612e737667" alt="NASA" data-canonical-src="https://rawcdn.githack.com/aleen42/badges/c9246f74/src/nasa.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="crossed_flags" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f38c.png"&gt;🎌&lt;/g-emoji&gt;
&lt;a href="README.id.md"&gt;Bahasa Indonesia&lt;/a&gt;,
&lt;a href="README.ca.md"&gt;Català&lt;/a&gt;,
&lt;a href="README.de.md"&gt;Deutsch&lt;/a&gt;,
&lt;strong&gt;English&lt;/strong&gt;,
&lt;a href="README.es.md"&gt;Español&lt;/a&gt;,
&lt;a href="README.fr.md"&gt;Français&lt;/a&gt;,
&lt;a href="README.it.md"&gt;Italiano&lt;/a&gt;,
&lt;a href="README.pl.md"&gt;Polski&lt;/a&gt;,
&lt;a href="README.pt_br.md"&gt;Português&lt;/a&gt;,
&lt;a href="README.ru.md"&gt;Русский&lt;/a&gt;,
&lt;a href="README.tr.md"&gt;Türkçe&lt;/a&gt;,
&lt;a href="README.ro.md"&gt;Română&lt;/a&gt;,
&lt;a href="README.ar.md"&gt;العربية&lt;/a&gt;,
&lt;a href="README.hi_in.md"&gt;हिंदी&lt;/a&gt;,
&lt;a href="README.zh_tw.md"&gt;正體中文&lt;/a&gt;,
&lt;a href="README.zh_cn.md"&gt;简体中文&lt;/a&gt;,
&lt;a href="README.ko_kr.md"&gt;한국어&lt;/a&gt;,
&lt;a href="README.ja.md"&gt;日本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Original Apollo 11 guidance computer (AGC) source code for Command
Module (Comanche055) and Lunar Module (Luminary099). Digitized by
the folks at &lt;a href="http://www.ibiblio.org/apollo/" rel="nofollow"&gt;Virtual AGC&lt;/a&gt; and &lt;a href="http://web.mit.edu/museum/" rel="nofollow"&gt;MIT Museum&lt;/a&gt;. The goal is to be
a repo for the original Apollo 11 source code. As such, PRs are
welcome for any issues identified between the transcriptions in this
repository and the original source scans for &lt;a href="http://www.ibiblio.org/apollo/ScansForConversion/Luminary099/" rel="nofollow"&gt;Luminary 099&lt;/a&gt; and
&lt;a href="http://www.ibiblio.org/apollo/ScansForConversion/Comanche055/" rel="nofollow"&gt;Comanche 055&lt;/a&gt;, as well as any files I may have missed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please read &lt;a href="https://github.com/chrislgarry/Apollo-11/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; before opening a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling" class="anchor" aria-hidden="true" href="#compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling&lt;/h2&gt;
&lt;p&gt;If you are interested in compiling the original source code, check
out &lt;a href="https://github.com/rburkey2005/virtualagc"&gt;Virtual AGC&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-attribution" class="anchor" aria-hidden="true" href="#attribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Attribution&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt; &lt;/th&gt;
&lt;th align="left"&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Copyright&lt;/td&gt;
&lt;td align="left"&gt;Public domain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Comanche055&lt;/td&gt;
&lt;td align="left"&gt;Part of the source code for Colossus 2A, the Command Module's (CM) Apollo Guidance Computer (AGC) for Apollo 11&lt;br&gt;&lt;code&gt;Assemble revision 055 of AGC program Comanche by NASA&lt;/code&gt;&lt;br&gt;&lt;code&gt;2021113-051. 10:28 APR. 1, 1969&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Luminary099&lt;/td&gt;
&lt;td align="left"&gt;Part of the source code for Luminary 1A, the Lunar Module's (LM) Apollo Guidance Computer (AGC) for Apollo 11&lt;br&gt;&lt;code&gt;Assemble revision 001 of AGC program LYM99 by NASA&lt;/code&gt;&lt;br&gt;&lt;code&gt;2021112-061. 16:27 JUL. 14, 1969&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Assembler&lt;/td&gt;
&lt;td align="left"&gt;yaYUL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Contact&lt;/td&gt;
&lt;td align="left"&gt;Ron Burkey &lt;a href="mailto:info@sandroid.org"&gt;info@sandroid.org&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Website&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://www.ibiblio.org/apollo" rel="nofollow"&gt;www.ibiblio.org/apollo&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Digitalization&lt;/td&gt;
&lt;td align="left"&gt;This source code has been transcribed or otherwise adapted from digitized images of a hardcopy from the MIT Museum. The digitization was performed by Paul Fjeld, and arranged for by Deborah Douglas of the Museum. Many thanks to both.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-contract-and-approvals" class="anchor" aria-hidden="true" href="#contract-and-approvals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contract and Approvals&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Derived from &lt;a href="https://github.com/chrislgarry/Apollo-11/blob/master/Comanche055/CONTRACT_AND_APPROVALS.agc"&gt;CONTRACT_AND_APPROVALS.agc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This AGC program shall also be referred to as Colossus 2A.&lt;/p&gt;
&lt;p&gt;This program is intended for use in the CM as specified in report &lt;code&gt;R-577&lt;/code&gt;. This program was prepared under DSR project &lt;code&gt;55-23870&lt;/code&gt;, sponsored by the Manned Spacecraft Center of The National Aeronautics and Space Administration through contract &lt;code&gt;NAS 9-4065&lt;/code&gt; with the Instrumentation Laboratory, Massachusetts Institute of Technology, Cambridge, Mass.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Submitted by&lt;/th&gt;
&lt;th align="left"&gt;Role&lt;/th&gt;
&lt;th align="left"&gt;Date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Margaret H. Hamilton&lt;/td&gt;
&lt;td align="left"&gt;Colossus Programming Leader&lt;br&gt;Apollo Guidance and Navigation&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Approved by&lt;/th&gt;
&lt;th align="left"&gt;Role&lt;/th&gt;
&lt;th align="left"&gt;Date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Daniel J. Lickly&lt;/td&gt;
&lt;td align="left"&gt;Director, Mission Program Development&lt;br&gt;Apollo Guidance and Navigation Program&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Fred H. Martin&lt;/td&gt;
&lt;td align="left"&gt;Colossus Project Manager&lt;br&gt;Apollo Guidance and Navigation Program&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Norman E. Sears&lt;/td&gt;
&lt;td align="left"&gt;Director, Mission Development&lt;br&gt;Apollo Guidance and Navigation Program&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Richard H. Battin&lt;/td&gt;
&lt;td align="left"&gt;Director, Mission Development&lt;br&gt;Apollo Guidance and Navigation Program&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;David G. Hoag&lt;/td&gt;
&lt;td align="left"&gt;Director&lt;br&gt;Apollo Guidance and Navigation Program&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Ralph R. Ragan&lt;/td&gt;
&lt;td align="left"&gt;Deputy Director&lt;br&gt;Instrumentation Laboratory&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>chrislgarry</author><guid isPermaLink="false">https://github.com/chrislgarry/Apollo-11</guid><pubDate>Mon, 02 Dec 2019 00:06:00 GMT</pubDate></item><item><title>bitdump/BLHeli #7 in Assembly, Today</title><link>https://github.com/bitdump/BLHeli</link><description>&lt;p&gt;&lt;i&gt;BLHeli for brushless ESC firmware&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;This tree contains BLHeli code for sensorless brushless motor electronic speed control (ESC) boards.&lt;/p&gt;
&lt;p&gt;To view and use the files, click the "Clone or download" button on this page,&lt;br&gt;
and then select "Download ZIP" to download the repository to your computer.&lt;/p&gt;
&lt;p&gt;For flashing and configuration, download the BLHeliSuite PC software:&lt;br&gt;
&lt;a href="https://www.mediafire.com/folder/dx6kfaasyo24l/BLHeliSuite" rel="nofollow"&gt;https://www.mediafire.com/folder/dx6kfaasyo24l/BLHeliSuite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more information, check out these threads:&lt;br&gt;
&lt;a href="https://www.rcgroups.com/forums/showthread.php?2640796" rel="nofollow"&gt;https://www.rcgroups.com/forums/showthread.php?2640796&lt;/a&gt; (for BLHeli_S)&lt;br&gt;
&lt;a href="http://www.rcgroups.com/forums/showthread.php?t=2136895" rel="nofollow"&gt;http://www.rcgroups.com/forums/showthread.php?t=2136895&lt;/a&gt; (for BLHeli)&lt;/p&gt;
&lt;p&gt;And look in the "BLHeli_32 ARM" folder for info on BLHeli_32.&lt;/p&gt;
&lt;p&gt;October 2018,
Steffen Skaug&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bitdump</author><guid isPermaLink="false">https://github.com/bitdump/BLHeli</guid><pubDate>Mon, 02 Dec 2019 00:07:00 GMT</pubDate></item><item><title>dgryski/go-metro #8 in Assembly, Today</title><link>https://github.com/dgryski/go-metro</link><description>&lt;p&gt;&lt;i&gt;Go translation of MetroHash&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;MetroHash

This package is a mechanical translation of the reference C++ code for
MetroHash, available at &lt;a href="https://github.com/jandrewrogers/MetroHash"&gt;https://github.com/jandrewrogers/MetroHash&lt;/a&gt; 

I claim no additional copyright over the original implementation.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>dgryski</author><guid isPermaLink="false">https://github.com/dgryski/go-metro</guid><pubDate>Mon, 02 Dec 2019 00:08:00 GMT</pubDate></item><item><title>Rangi42/polishedcrystal #9 in Assembly, Today</title><link>https://github.com/Rangi42/polishedcrystal</link><description>&lt;p&gt;&lt;i&gt;An upgrade to Pokémon Crystal. Brings features and content up to date, and adds some original content.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-pokémon-polished-crystal" class="anchor" aria-hidden="true" href="#pokémon-polished-crystal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pokémon Polished Crystal&lt;/h1&gt;
&lt;p&gt;This is a custom Pokémon game based on &lt;a href="https://github.com/pret/pokecrystal"&gt;the Pokémon Crystal disassembly&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My goal is to create what the title says: an improved, polished version of Pokémon Crystal. It fixes bugs, takes into account the official game changes since 2001, and adds some new ideas of my own. Many features restore what was removed from R/B/Y, or original to HG/SS.&lt;/p&gt;
&lt;p&gt;I've had vague plans to make a Pokémon game for years. I'm very impressed by the effort that's gone into disassembling Pokémon Crystal and making the code so well-organized. Thanks to making it open-source (and to the ROM hackers that inspired me), I'm finally making this game a reality.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are many ways to create games but the way we work at Game Freak may be a little different from other companies. That is, we constantly change and tweak what we have come up with. To make a fun game even more fun and polish it up, we take what we have made and start thinking about it from scratch. And to make the game the most fun to play we make endless changes and tweaks no matter how long it takes. It may not be the best way, but I think these tweaks are important to make our games fun and better.&lt;/p&gt;
&lt;p&gt;— Junichi Masuda, "&lt;a href="https://www.gamefreak.co.jp/blog/dir_english/?p=21" rel="nofollow"&gt;HIDDEN POWER of masuda No. 7&lt;/a&gt;"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-download-and-play" class="anchor" aria-hidden="true" href="#download-and-play"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download and Play&lt;/h2&gt;
&lt;p&gt;The most recent version is &lt;a href="https://github.com/Rangi42/polishedcrystal/releases/tag/v2.2.0"&gt;2.2.0&lt;/a&gt; as of September 20, 2016. &lt;a href="CHANGELOG.md"&gt;The changelog&lt;/a&gt; lists all changes since then.&lt;/p&gt;
&lt;p&gt;To play, download the .ips patch file, and use a tool like &lt;a href="http://fusoya.eludevisibility.org/lips/" rel="nofollow"&gt;Lunar IPS&lt;/a&gt; (for Windows), &lt;a href="http://projects.sappharad.com/tools/multipatch.html" rel="nofollow"&gt;MultiPatch&lt;/a&gt; (for OS X), or &lt;a href="https://play.google.com/store/apps/details?id=org.emunix.unipatcher&amp;amp;hl=en" rel="nofollow"&gt;UniPatcher&lt;/a&gt; (for Android) to apply the patch to a default Crystal ROM.&lt;/p&gt;
&lt;p&gt;This is the ROM you should use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pokémon - Crystal Version (UE) (V1.0) [C][!].gbc&lt;br&gt;
(&lt;code&gt;md5: 9f2922b235a5eeb78d65594e82ef5dde&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's identical to the one built by the &lt;a href="https://github.com/pret/pokecrystal"&gt;pokecrystal&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you want to do a &lt;a href="http://bulbapedia.bulbagarden.net/wiki/Nuzlocke_Challenge" rel="nofollow"&gt;Nuzlocke Challenge&lt;/a&gt;, check out Nuzlocke mode in the Option menu!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are two patches for Polished Crystal. The "faithful" patch does not change any Pokémon base stats or move attributes beyond the updates in Gen VI. The regular patch has some custom changes for more diverse and viable Pokémon.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="patches/polishedcrystal-2.2.0.ips"&gt;Pokémon Polished Crystal 2.2.0&lt;/a&gt;&lt;br&gt;
(IPS patch file &lt;code&gt;md5: 043769cc7e1a0ccfad635ff72b0ab8d0&lt;/code&gt;)&lt;br&gt;
(Patched GBC ROM &lt;code&gt;md5: 9d3a3026bc3730cdf5d813b0bfe49697&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="patches/polishedcrystal-faithful-2.2.0.ips"&gt;Pokémon Polished Crystal (Faithful) 2.2.0&lt;/a&gt;&lt;br&gt;
(IPS patch file &lt;code&gt;md5: 5cbd4bef0e03936291f40b14c75b47d3&lt;/code&gt;)&lt;br&gt;
(Patched GBC ROM &lt;code&gt;md5: cb5921d6646d2adfd302d8957e5e39af&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;A full list of features is in &lt;a href="FEATURES.md"&gt;FEATURES.md&lt;/a&gt;. Some highlights:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;253 Pokémon, including some new evolutions.&lt;/li&gt;
&lt;li&gt;48 new moves.&lt;/li&gt;
&lt;li&gt;65 TMs and 21 move tutors.&lt;/li&gt;
&lt;li&gt;Many new mechanics, including the Fairy type, Physical/Special split, Natures, unlimited TMs, Running Shoes, and continuous Repel.&lt;/li&gt;
&lt;li&gt;New maps: some restored from R/B/Y, some devamped from HG/SS, and some original.&lt;/li&gt;
&lt;li&gt;New characters, including Lorelei and Agatha from R/B/Y, Lyra and the Team Rocket Executives from HG/SS, and others.&lt;/li&gt;
&lt;li&gt;More post-game content, like Gym Leader rematches and an event after the battle with Red.&lt;/li&gt;
&lt;li&gt;An improved level curve with steadily increasing challenges throughout the game.&lt;/li&gt;
&lt;li&gt;Music and graphics devamped from other versions.&lt;/li&gt;
&lt;li&gt;Nuzlocke mode in the Option menu, enabling the basic rules of the &lt;a href="http://bulbapedia.bulbagarden.net/wiki/Nuzlocke_Challenge" rel="nofollow"&gt;Nuzlocke Challenge&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-discussion" class="anchor" aria-hidden="true" href="#discussion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussion&lt;/h2&gt;
&lt;p&gt;You can post questions or comments on any of these sites. But please read the &lt;a href="FAQ.md"&gt;FAQ&lt;/a&gt; first if you have a question.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/ZK5pqK8" rel="nofollow"&gt;Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hax.iimarck.us/topic/6874/" rel="nofollow"&gt;Skeetendo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pokecommunity.com/showthread.php?t=373172" rel="nofollow"&gt;PokéCommunity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.romhack.me/polishedcrystal/wall/" rel="nofollow"&gt;Romhack.me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/PokemonROMhacks/comments/51kbcn/pok%C3%A9mon_polished_crystal_200/" rel="nofollow"&gt;/r/PokemonROMHacks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://s7.zetaboards.com/Nuzlocke_Forum/topic/11003710/" rel="nofollow"&gt;Nuzlocke Forums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pokemonhackersonline.com/showthread.php?t=15811" rel="nofollow"&gt;Pokémon Hackers Online&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/title-screen.png"&gt;&lt;img src="screenshots/title-screen.png" alt="title-screen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/running-shoes.png"&gt;&lt;img src="screenshots/running-shoes.png" alt="running-shoes" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/town-map.png"&gt;&lt;img src="screenshots/town-map.png" alt="town-map" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/lyra.png"&gt;&lt;img src="screenshots/lyra.png" alt="lyra" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/cherrygrove-city.png"&gt;&lt;img src="screenshots/cherrygrove-city.png" alt="cherrygrove-city" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/pokemon-center.png"&gt;&lt;img src="screenshots/pokemon-center.png" alt="pokemon-center" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/nuzlocke-mode.png"&gt;&lt;img src="screenshots/nuzlocke-mode.png" alt="nuzlocke-mode" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/oaks-aide.png"&gt;&lt;img src="screenshots/oaks-aide.png" alt="oaks-aide" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/elder-li.png"&gt;&lt;img src="screenshots/elder-li.png" alt="elder-li" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/move-tutor.png"&gt;&lt;img src="screenshots/move-tutor.png" alt="move-tutor" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/moss-rock.png"&gt;&lt;img src="screenshots/moss-rock.png" alt="moss-rock" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/rich-boy.png"&gt;&lt;img src="screenshots/rich-boy.png" alt="rich-boy" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/tm58.png"&gt;&lt;img src="screenshots/tm58.png" alt="tm58" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/game-corner-prizes.png"&gt;&lt;img src="screenshots/game-corner-prizes.png" alt="game-corner-prizes" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/goldenrod-move-tutor.png"&gt;&lt;img src="screenshots/goldenrod-move-tutor.png" alt="goldenrod-move-tutor" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/eviolite.png"&gt;&lt;img src="screenshots/eviolite.png" alt="eviolite" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/wonder-trade.png"&gt;&lt;img src="screenshots/wonder-trade.png" alt="wonder-trade" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/ecruteak-shrine.png"&gt;&lt;img src="screenshots/ecruteak-shrine.png" alt="ecruteak-shrine" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/cowgirl.png"&gt;&lt;img src="screenshots/cowgirl.png" alt="cowgirl" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/olivine-city.png"&gt;&lt;img src="screenshots/olivine-city.png" alt="olivine-city" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/remoraid.png"&gt;&lt;img src="screenshots/remoraid.png" alt="remoraid" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/team-rocket.png"&gt;&lt;img src="screenshots/team-rocket.png" alt="team-rocket" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/steelix.png"&gt;&lt;img src="screenshots/steelix.png" alt="steelix" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/custom-map.png"&gt;&lt;img src="screenshots/custom-map.png" alt="custom-map" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/ice-rock.png"&gt;&lt;img src="screenshots/ice-rock.png" alt="ice-rock" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/hex-maniac.png"&gt;&lt;img src="screenshots/hex-maniac.png" alt="hex-maniac" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/route-45.png"&gt;&lt;img src="screenshots/route-45.png" alt="route-45" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/stats.png"&gt;&lt;img src="screenshots/stats.png" alt="stats" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/sitrus-berry.png"&gt;&lt;img src="screenshots/sitrus-berry.png" alt="sitrus-berry" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/weavile.png"&gt;&lt;img src="screenshots/weavile.png" alt="weavile" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/move-reminder.png"&gt;&lt;img src="screenshots/move-reminder.png" alt="move-reminder" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/moves.png"&gt;&lt;img src="screenshots/moves.png" alt="moves" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/sylveon-moonblast.png"&gt;&lt;img src="screenshots/sylveon-moonblast.png" alt="sylveon-moonblast" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/togetic-fairy-wind.png"&gt;&lt;img src="screenshots/togetic-fairy-wind.png" alt="togetic-fairy-wind" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/aerodactyl-fossil.png"&gt;&lt;img src="screenshots/aerodactyl-fossil.png" alt="aerodactyl-fossil" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/cerulean-city.png"&gt;&lt;img src="screenshots/cerulean-city.png" alt="cerulean-city" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/celadon-city.png"&gt;&lt;img src="screenshots/celadon-city.png" alt="celadon-city" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/fly-to-rock-tunnel.png"&gt;&lt;img src="screenshots/fly-to-rock-tunnel.png" alt="fly-to-rock-tunnel" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/viridian-forest.png"&gt;&lt;img src="screenshots/viridian-forest.png" alt="viridian-forest" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/mismagius.png"&gt;&lt;img src="screenshots/mismagius.png" alt="mismagius" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/fighting-dojo.png"&gt;&lt;img src="screenshots/fighting-dojo.png" alt="fighting-dojo" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/silph-co.png"&gt;&lt;img src="screenshots/silph-co.png" alt="silph-co" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/new-balls.png"&gt;&lt;img src="screenshots/new-balls.png" alt="new-balls" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/rock-tunnel.png"&gt;&lt;img src="screenshots/rock-tunnel.png" alt="rock-tunnel" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/safari-zone.png"&gt;&lt;img src="screenshots/safari-zone.png" alt="safari-zone" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/soul-house.png"&gt;&lt;img src="screenshots/soul-house.png" alt="soul-house" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/cinnabar-island.png"&gt;&lt;img src="screenshots/cinnabar-island.png" alt="cinnabar-island" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/seafoam-islands.png"&gt;&lt;img src="screenshots/seafoam-islands.png" alt="seafoam-islands" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Rangi42</author><guid isPermaLink="false">https://github.com/Rangi42/polishedcrystal</guid><pubDate>Mon, 02 Dec 2019 00:09:00 GMT</pubDate></item></channel></rss>