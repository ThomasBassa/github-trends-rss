<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Assembly, Today</title><link>https://github.com/trending/assembly?since=daily</link><description>The top repositories on GitHub for assembly, measured daily</description><pubDate>Thu, 26 Dec 2019 01:12:47 GMT</pubDate><lastBuildDate>Thu, 26 Dec 2019 01:12:47 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>xiph/rav1e #1 in Assembly, Today</title><link>https://github.com/xiph/rav1e</link><description>&lt;p&gt;&lt;i&gt;The fastest and safest AV1 encoder.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rav1e----" class="anchor" aria-hidden="true" href="#rav1e----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rav1e &lt;a href="https://travis-ci.org/xiph/rav1e" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cf5369dac6e2aa181e4161efdf47b446dd524f78/68747470733a2f2f7472617669732d63692e6f72672f786970682f72617631652e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/xiph/rav1e.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/tdaede/rav1e/history" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/caa4dc60c0d8d4460dda29f8891f4ebcb786841f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f786970682f72617631653f6272616e63683d6d6173746572267376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/xiph/rav1e?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/xiph/rav1e/actions"&gt;&lt;img src="https://github.com/xiph/rav1e/workflows/rav1e/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/xiph/rav1e?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/687a8e0c6b9fa1a58949e9de01b1cb82876b30f7/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f786970682f72617631652f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/xiph/rav1e/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The fastest and safest AV1 encoder.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;rav1e is an AV1 video encoder. It is designed to eventually cover all use cases, though in its current form it is most suitable for cases where libaom (the reference encoder) is too slow.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intra and inter frames&lt;/li&gt;
&lt;li&gt;64x64 superblocks&lt;/li&gt;
&lt;li&gt;4x4 to 64x64 RDO-selected square and 2:1/1:2 rectangular blocks&lt;/li&gt;
&lt;li&gt;DC, H, V, Paeth, smooth, and a subset of directional prediction modes&lt;/li&gt;
&lt;li&gt;DCT, (FLIP-)ADST and identity transforms (up to 64x64, 16x16 and 32x32 respectively)&lt;/li&gt;
&lt;li&gt;8-, 10- and 12-bit depth color&lt;/li&gt;
&lt;li&gt;4:2:0 (full support), 4:2:2 and 4:4:4 (limited) chroma sampling&lt;/li&gt;
&lt;li&gt;Variable speed settings&lt;/li&gt;
&lt;li&gt;Near real-time encoding at high speed levels&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-releases" class="anchor" aria-hidden="true" href="#releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases&lt;/h2&gt;
&lt;p&gt;For the foreseeable future, a weekly pre-release of rav1e will be &lt;a href="https://github.com/xiph/rav1e/releases"&gt;published&lt;/a&gt; every Tuesday.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-windows-builds" class="anchor" aria-hidden="true" href="#windows-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows builds&lt;/h2&gt;
&lt;p&gt;Automated AppVeyor builds can be found &lt;a href="https://ci.appveyor.com/project/tdaede/rav1e/history" rel="nofollow"&gt;here&lt;/a&gt;. Click on a build (it is recommended you select a build based on "master"), then click ARTIFACTS to reveal the rav1e.exe download link.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;Some &lt;code&gt;x86_64&lt;/code&gt;-specific optimizations require a recent version of &lt;a href="https://nasm.us/" rel="nofollow"&gt;NASM&lt;/a&gt; and are enabled by default.&lt;/p&gt;
&lt;p&gt;In order to build, test and link to the codec with the default features on UNIX on &lt;code&gt;x86_64&lt;/code&gt;, you need NASM. To install this on Ubuntu or Linux Mint, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo apt install nasm&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Windows, a &lt;a href="https://www.nasm.us/pub/nasm/releasebuilds/" rel="nofollow"&gt;NASM binary&lt;/a&gt; in your system PATH is required.&lt;/p&gt;
&lt;p&gt;To build release binary in &lt;code&gt;target/release/rav1e&lt;/code&gt; run:&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;cargo build --release&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-target-specific-builds" class="anchor" aria-hidden="true" href="#target-specific-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Target-specific builds&lt;/h3&gt;
&lt;p&gt;The rust autovectorizer can produce a binary that is about 6%-7% faster if it can use &lt;code&gt;avx2&lt;/code&gt; in the general code, you may allow it by issuing:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RUSTFLAGS="-C target-cpu=native" cargo build --release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RUSTFLAGS="-C target-features=+avx2,+fma" cargo build --release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The resulting binary will not work on cpus that do not sport the same set of SIMD extensions enabled.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-the-c-api" class="anchor" aria-hidden="true" href="#building-the-c-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the C-API&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;rav1e&lt;/strong&gt; provides a C-compatible set of library, header and pkg-config file.&lt;/p&gt;
&lt;p&gt;To build and install it you can use &lt;a href="https://crates.io/crates/cargo-c" rel="nofollow"&gt;cargo-c&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cargo install cargo-c
cargo cinstall --release&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-compressing-video" class="anchor" aria-hidden="true" href="#compressing-video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compressing video&lt;/h2&gt;
&lt;p&gt;Input videos must be in y4m format. The monochrome color format is not supported.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;cargo run --release --bin rav1e -- input.y4m -o output.ivf&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-decompressing-video" class="anchor" aria-hidden="true" href="#decompressing-video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Decompressing video&lt;/h2&gt;
&lt;p&gt;Encoder output should be compatible with any AV1 decoder compliant with the v1.0.0 specification. You can build compatible aomdec using the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir aom_test
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; aom_test
cmake /path/to/aom -DAOM_TARGET_CPU=generic -DCONFIG_AV1_ENCODER=0 -DENABLE_TESTS=0 -DENABLE_DOCS=0 -DCONFIG_LOWBITDEPTH=1
make -j8
./aomdec ../output.ivf -o output.y4m&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-configuring" class="anchor" aria-hidden="true" href="#configuring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring&lt;/h2&gt;
&lt;p&gt;rav1e has several optional features that can be enabled by passing --features to cargo test. Passing --all-features is discouraged.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;asm - enabled by default. When enabled, assembly is built for the platforms supporting it.
&lt;ul&gt;
&lt;li&gt;It requires &lt;code&gt;nasm&lt;/code&gt; on &lt;code&gt;x86_64&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;It requires &lt;code&gt;gas&lt;/code&gt; on &lt;code&gt;aarch64&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;SSE2&lt;/code&gt; is always enabled on &lt;code&gt;x86_64&lt;/code&gt;, &lt;code&gt;neon&lt;/code&gt; is always enabled for aarch64, you may set the environment variable &lt;code&gt;RAV1E_CPU_TARGET&lt;/code&gt; to &lt;code&gt;rust&lt;/code&gt; to disable all the assembly-optimized routines at the runtime.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-the-aomanalyzer" class="anchor" aria-hidden="true" href="#using-the-aomanalyzer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the AOMAnalyzer&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-local-analyzer" class="anchor" aria-hidden="true" href="#local-analyzer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Analyzer&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Download the &lt;a href="http://aomanalyzer.org" rel="nofollow"&gt;AOM Analyzer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Download &lt;a href="https://people.xiph.org/~mbebenita/analyzer/inspect.js" rel="nofollow"&gt;inspect.js&lt;/a&gt; and &lt;a href="https://people.xiph.org/~mbebenita/analyzer/inspect.wasm" rel="nofollow"&gt;inspect.wasm&lt;/a&gt; and save them in the same directory.&lt;/li&gt;
&lt;li&gt;Run the analyzer: &lt;code&gt;AOMAnalyzer path_to_inspect.js output.ivf&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-online-analyzer" class="anchor" aria-hidden="true" href="#online-analyzer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Online Analyzer&lt;/h3&gt;
&lt;p&gt;If your &lt;code&gt;.ivf&lt;/code&gt; file is hosted somewhere (and CORS is enabled on your web server) you can use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://arewecompressedyet.com/analyzer/?d=https://people.xiph.org/~mbebenita/analyzer/inspect.js&amp;amp;f=path_to_output.ivf
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-design" class="anchor" aria-hidden="true" href="#design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;src/context.rs - High-level functions that write symbols to the bitstream, and maintain context.&lt;/li&gt;
&lt;li&gt;src/ec.rs - Low-level implementation of the entropy coder, which directly writes the bitstream.&lt;/li&gt;
&lt;li&gt;src/lib.rs - The top level library, contains code to write headers, manage buffers, and iterate through each superblock.&lt;/li&gt;
&lt;li&gt;src/partition.rs - Functions and enums to manage partitions (subdivisions of a superblock).&lt;/li&gt;
&lt;li&gt;src/predict.rs - Intra prediction implementations.&lt;/li&gt;
&lt;li&gt;src/quantize.rs - Quantization and dequantization functions for coefficients.&lt;/li&gt;
&lt;li&gt;src/rdo.rs - RDO-related structures and distortion computation functions.&lt;/li&gt;
&lt;li&gt;src/transform/*.rs - Implementations of DCT and ADST transforms.&lt;/li&gt;
&lt;li&gt;src/util.rs - Misc utility code.&lt;/li&gt;
&lt;li&gt;src/bin/rav1e.rs - rav1e command line tool.&lt;/li&gt;
&lt;li&gt;src/bin/rav1erepl.rs - Command line tool for debugging.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please read our guide to &lt;a href="CONTRIBUTING.md"&gt;contributing to rav1e&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-in-touch" class="anchor" aria-hidden="true" href="#getting-in-touch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting in Touch&lt;/h2&gt;
&lt;p&gt;Come chat with us on the IRC channel #daala on Freenode! If you don't have IRC set
up you can easily connect from your &lt;a href="http://webchat.freenode.net/?channels=%23daala" rel="nofollow"&gt;web browser&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xiph</author><guid isPermaLink="false">https://github.com/xiph/rav1e</guid><pubDate>Thu, 26 Dec 2019 00:01:00 GMT</pubDate></item><item><title>JSsixtyfour/smashremix #2 in Assembly, Today</title><link>https://github.com/JSsixtyfour/smashremix</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="txt" data-path="readme.txt"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;THIS IS ONLY FOR THOSE INTERESTED IN THE SOURCE CODE OF THE MOD. PLEASE DOWNLOAD THE RELEASE VERSION BY CLICKING THE RELEASE TAB.
=======
The original xdelta will generate a smash rom that is compatible with our ASM code. Much of our edits are done within
the compressed files within the rom. If you utilize a vanilla Smash 64 rom, it will not work correctly.

You must utilize the xdelta patch to generate a good rom for Assembly.

You must place your legally acquired patched ROM in the rom folder for this to work. It must be named original.z64
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>JSsixtyfour</author><guid isPermaLink="false">https://github.com/JSsixtyfour/smashremix</guid><pubDate>Thu, 26 Dec 2019 00:02:00 GMT</pubDate></item><item><title>dspinellis/unix-history-repo #3 in Assembly, Today</title><link>https://github.com/dspinellis/unix-history-repo</link><description>&lt;p&gt;&lt;i&gt;Continuous Unix commit history from 1970 until today&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-unix-history-repository" class="anchor" aria-hidden="true" href="#unix-history-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unix History Repository&lt;/h1&gt;
&lt;p&gt;The history and evolution of the Unix operating system is made available
as a revision management repository, covering the period from its
inception in 1970 as a 2.5 thousand line kernel and 26 commands,
to 2017 as a widely-used 27 million line system. The 1.1GB repository
contains about half a million commits and more than two thousand merges.
The repository employs Git system for its storage and is hosted on GitHub.
It has been created by synthesizing with custom software 24 snapshots of
systems developed at Bell Labs, the University of California at Berkeley,
and the 386BSD team, two legacy repositories, and the modern repository
of the open source FreeBSD system.
In total, about one thousand individual contributors are identified,
the early ones through primary research.
The data set can be used for empirical research in software engineering,
information systems, and software archaeology.&lt;/p&gt;
&lt;p&gt;You can read more details about the contents, creation, and uses of this
repository through &lt;a href="http://www.dmst.aueb.gr/dds/pubs/jrnl/2016-EMPSE-unix-history/html/unix-history.html" rel="nofollow"&gt;this link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Two repositories are associated with the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dspinellis/unix-history-repo"&gt;unix-history-repo&lt;/a&gt; is
a repository representing a
reconstructed version of the Unix history, based on the currently
available data. This repository will be often automatically regenerated from
scratch, so this is not a place to make contributions.
To ensure replicability its users are encouraged to fork it or archive it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dspinellis/unix-history-make"&gt;unix-history-make&lt;/a&gt; is
a repository containing code and metadata used to build the above repository.
Contributions to this repository are welcomed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-project-status" class="anchor" aria-hidden="true" href="#project-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project status&lt;/h2&gt;
&lt;p&gt;The project has achieved its major goal with the establishment of a continuous timeline from 1970 until today. The repository contains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;snapshots of PDP-7, V1, V2, V3, V4, V5, V6, and V7 Research Edition,&lt;/li&gt;
&lt;li&gt;Unix/32V,&lt;/li&gt;
&lt;li&gt;all available BSD releases,&lt;/li&gt;
&lt;li&gt;the CSRG SCCS history,&lt;/li&gt;
&lt;li&gt;two releases of 386BSD,&lt;/li&gt;
&lt;li&gt;the 386BSD patchkit,&lt;/li&gt;
&lt;li&gt;the FreeBSD 1.0 to 1.1.5 CVS history,&lt;/li&gt;
&lt;li&gt;an import of the FreeBSD repository starting from its initial imports that led to FreeBSD 2.0, and&lt;/li&gt;
&lt;li&gt;the current FreeBSD repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The files appear to be added in the repository in chronological order according to their modification time, and large parts of the source code have been attributed to their actual authors.  Commands like &lt;code&gt;git blame&lt;/code&gt; and &lt;code&gt;git log&lt;/code&gt; produce the expected results.&lt;/p&gt;
&lt;p&gt;The repository contains a number of two-way merges.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 BSD is merged from Unix/32V and Research Edition 6&lt;/li&gt;
&lt;li&gt;Various BSD releases are merged from the development branch and a time point of BSD-SCCS&lt;/li&gt;
&lt;li&gt;FreeBSD 1.0 is merged from Net/2 BSD and 386BSD-0.1-patchkit&lt;/li&gt;
&lt;li&gt;FreeBSD 2.0 is merged from BSD 4.4/Lite1 and FreeBSD 1.1.5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Blame is apportioned appropriately.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tags-and-branches" class="anchor" aria-hidden="true" href="#tags-and-branches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tags and Branches&lt;/h2&gt;
&lt;p&gt;The following tags or branch names mark specific releases, listed in rough chronological order.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Epoch&lt;/li&gt;
&lt;li&gt;Research-PDP7&lt;/li&gt;
&lt;li&gt;Research-V1&lt;/li&gt;
&lt;li&gt;Research-V2&lt;/li&gt;
&lt;li&gt;Research-V3&lt;/li&gt;
&lt;li&gt;Research-V4&lt;/li&gt;
&lt;li&gt;Research-V5&lt;/li&gt;
&lt;li&gt;Research-V6&lt;/li&gt;
&lt;li&gt;BSD-1&lt;/li&gt;
&lt;li&gt;BSD-2&lt;/li&gt;
&lt;li&gt;Research-V7&lt;/li&gt;
&lt;li&gt;Bell-32V&lt;/li&gt;
&lt;li&gt;BSD-3&lt;/li&gt;
&lt;li&gt;BSD-4&lt;/li&gt;
&lt;li&gt;BSD-4_1_snap&lt;/li&gt;
&lt;li&gt;BSD-4_1c_2&lt;/li&gt;
&lt;li&gt;BSD-4_2&lt;/li&gt;
&lt;li&gt;BSD-4_3&lt;/li&gt;
&lt;li&gt;BSD-4_3_Reno&lt;/li&gt;
&lt;li&gt;BSD-4_3_Net_1&lt;/li&gt;
&lt;li&gt;BSD-4_3_Tahoe&lt;/li&gt;
&lt;li&gt;BSD-4_3_Net_2&lt;/li&gt;
&lt;li&gt;BSD-4_4&lt;/li&gt;
&lt;li&gt;BSD-4_4_Lite1&lt;/li&gt;
&lt;li&gt;BSD-4_4_Lite2&lt;/li&gt;
&lt;li&gt;BSD-SCCS-END&lt;/li&gt;
&lt;li&gt;386BSD-0.0&lt;/li&gt;
&lt;li&gt;386BSD-0.1&lt;/li&gt;
&lt;li&gt;386BSD-0.1-patchkit&lt;/li&gt;
&lt;li&gt;FreeBSD-release/1.0, 1.1, 1.1.5&lt;/li&gt;
&lt;li&gt;FreeBSD-release/2.0 2.0.5, 2.1.0, 2.1.5, 2.1.6, 2.1.6.1, 2.1.7, 2.2.0, 2.2.1, 2.2.2, 2.2.5, 2.2.6, 2.2.7, 2.2.8&lt;/li&gt;
&lt;li&gt;FreeBSD-release/3.0.0, 3.1.0, 3.2.0, 3.3.0, 3.4.0, 3.5.0&lt;/li&gt;
&lt;li&gt;FreeBSD-release/4.0.0 4.1.0, 4.1.1, 4.2.0, 4.3.0, 4.4.0, 4.5.0, 4.6.0, 4.6.1, 4.6.2, 4.7.0, 4.8.0, 4.9.0, 4.10.0, 4.11.0&lt;/li&gt;
&lt;li&gt;FreeBSD-release/5.0.0 5.1.0, 5.2.0, 5.2.1, 5.3.0, 5.4.0, 5.5.0&lt;/li&gt;
&lt;li&gt;FreeBSD-release/6.0.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0&lt;/li&gt;
&lt;li&gt;FreeBSD-release/7.0.0, 7.1.0, 7.2.0, 7.3.0, 7.4.0&lt;/li&gt;
&lt;li&gt;FreeBSD-release/8.0.0, 8.1.0, 8.2.0, 8.3.0, 8.4.0&lt;/li&gt;
&lt;li&gt;FreeBSD-release/9.0.0, 9.1.0, 9.2.0&lt;/li&gt;
&lt;li&gt;FreeBSD-release/10.0.0, 10.1.0, 10.2.0, 10.3.0&lt;/li&gt;
&lt;li&gt;FreeBSD-release/11.0.0, 11.0.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A detailed description of the major tags is available in the
file &lt;a href="https://github.com/dspinellis/unix-history-make/blob/master/releases.md"&gt;releases.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More tags and branches are available.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;-Snapshot-Development&lt;/code&gt; branches denote commits that have been synthesized from a time-ordered sequence of a snapshot's files.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;-VCS-Development&lt;/code&gt; tags denote the point along an imported version control history branch where a particular release occurred.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cool-things-you-can-do" class="anchor" aria-hidden="true" href="#cool-things-you-can-do"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cool things you can do&lt;/h2&gt;
&lt;p&gt;The easiest thing you can do is to
watch the repository's &lt;a href="https://youtu.be/S7JB0mhrGCQ" rel="nofollow"&gt;Gource Visualization&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have a broadband network connection and about 1.5GB of free disk space,
you can download the repository and run Git commands that go back decades.
Run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/dspinellis/unix-history-repo
git checkout BSD-Release&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to get a local copy of the Unix history repository.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-view-log-across-releases" class="anchor" aria-hidden="true" href="#view-log-across-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View log across releases&lt;/h3&gt;
&lt;p&gt;Running&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git log --reverse --date-order&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will give you commits such as the following&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;commit 64d7600ea5210a9125bd1a06e5d184ef7547d23d
Author: Ken Thompson &amp;lt;ken@research.uucp&amp;gt;
Date:   Tue Jun 20 05:00:00 1972 -0500

    Research V1 development
    Work on file u5.s

    Co-Authored-By: Dennis Ritchie &amp;lt;dmr@research.uucp&amp;gt;
    Synthesized-from: v1/sys
[...]
commit 4030f8318890a026e065bc8926cebefb71e9d353
Author: Ken Thompson &amp;lt;ken@research.uucp&amp;gt;
Date:   Thu Aug 30 19:30:25 1973 -0500

    Research V3 development
    Work on file sys/ken/slp.c

    Synthesized-from: v3
[...]
commit c4999ec655319a01e84d9460d84df824006f9e2d
Author: Dennis Ritchie &amp;lt;dmr@research.uucp&amp;gt;
Date:   Thu Aug 30 19:33:01 1973 -0500

    Research V3 development
    Work on file sys/dmr/kl.c

    Synthesized-from: v3
[...]
commit 355c543c6840fa5f37d8daf2e2eaa735ea6daa4a
Author: Brian W. Kernighan &amp;lt;bwk@research.uucp&amp;gt;
Date:   Tue May 13 19:43:47 1975 -0500

    Research V6 development
    Work on file usr/source/rat/r.g

    Synthesized-from: v6
[...]
commit 0ce027f7fb2cf19b7e92d74d3f09eb02e8fea50e
Author: S. R. Bourne &amp;lt;srb@research.uucp&amp;gt;
Date:   Fri Jan 12 02:17:45 1979 -0500

    Research V7 development
    Work on file usr/src/cmd/sh/blok.c

    Synthesized-from: v7
[...]
Author: Eric Schmidt &amp;lt;schmidt@ucbvax.Berkeley.EDU&amp;gt;
Date:   Sat Jan 5 22:49:18 1980 -0800

    BSD 3 development

    Work on file usr/src/cmd/net/sub.c
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-view-changes-to-a-specific-file" class="anchor" aria-hidden="true" href="#view-changes-to-a-specific-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View changes to a specific file&lt;/h3&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git checkout Research-Release
git log --follow --simplify-merges usr/src/cmd/c/c00.c&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to see dates on which the C compiler was modified.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-annotate-lines-in-a-specific-file-by-their-version" class="anchor" aria-hidden="true" href="#annotate-lines-in-a-specific-file-by-their-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Annotate lines in a specific file by their version&lt;/h3&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git blame -C -C usr/sys/sys/pipe.c
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to see how the Unix pipe functionality evolved over the years.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3cc1108b usr/sys/ken/pipe.c     (Ken Thompson 1974-11-26 18:13:21 -0500  53) 	rf-&amp;gt;f_flag = FREAD|FPIPE;
3cc1108b usr/sys/ken/pipe.c     (Ken Thompson 1974-11-26 18:13:21 -0500  54) 	rf-&amp;gt;f_inode = ip;
3cc1108b usr/sys/ken/pipe.c     (Ken Thompson 1974-11-26 18:13:21 -0500  55) 	ip-&amp;gt;i_count = 2;
[...]
1f183be2 usr/sys/sys/pipe.c     (Ken Thompson 1979-01-10 15:19:35 -0500 122) 	register struct inode *ip;
1f183be2 usr/sys/sys/pipe.c     (Ken Thompson 1979-01-10 15:19:35 -0500 123) 
1f183be2 usr/sys/sys/pipe.c     (Ken Thompson 1979-01-10 15:19:35 -0500 124) 	ip = fp-&amp;gt;f_inode;
1f183be2 usr/sys/sys/pipe.c     (Ken Thompson 1979-01-10 15:19:35 -0500 125) 	c = u.u_count;
1f183be2 usr/sys/sys/pipe.c     (Ken Thompson 1979-01-10 15:19:35 -0500 126) 
1f183be2 usr/sys/sys/pipe.c     (Ken Thompson 1979-01-10 15:19:35 -0500 127) loop:
1f183be2 usr/sys/sys/pipe.c     (Ken Thompson 1979-01-10 15:19:35 -0500 128) 
1f183be2 usr/sys/sys/pipe.c     (Ken Thompson 1979-01-10 15:19:35 -0500 129) 	/*
9a9f6b22 usr/src/sys/sys/pipe.c (Bill Joy     1980-01-05 05:51:18 -0800 130) 	 * If error or all done, return.
9a9f6b22 usr/src/sys/sys/pipe.c (Bill Joy     1980-01-05 05:51:18 -0800 131) 	 */
9a9f6b22 usr/src/sys/sys/pipe.c (Bill Joy     1980-01-05 05:51:18 -0800 132) 
9a9f6b22 usr/src/sys/sys/pipe.c (Bill Joy     1980-01-05 05:51:18 -0800 133) 	if (u.u_error)
9a9f6b22 usr/src/sys/sys/pipe.c (Bill Joy     1980-01-05 05:51:18 -0800 134) 		return;
6d632e85 usr/sys/ken/pipe.c     (Ken Thompson 1975-07-17 10:33:37 -0500 135) 	plock(ip);
6d632e85 usr/sys/ken/pipe.c     (Ken Thompson 1975-07-17 10:33:37 -0500 136) 	if(c == 0) {
6d632e85 usr/sys/ken/pipe.c     (Ken Thompson 1975-07-17 10:33:37 -0500 137) 		prele(ip);
6d632e85 usr/sys/ken/pipe.c     (Ken Thompson 1975-07-17 10:33:37 -0500 138) 		u.u_count = 0;
6d632e85 usr/sys/ken/pipe.c     (Ken Thompson 1975-07-17 10:33:37 -0500 139) 		return;
6d632e85 usr/sys/ken/pipe.c     (Ken Thompson 1975-07-17 10:33:37 -0500 140) 	}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-how-you-can-help" class="anchor" aria-hidden="true" href="#how-you-can-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How you can help&lt;/h2&gt;
&lt;p&gt;You can help if you were there at the time, or if you can locate a
source that contains information that is currently missing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If your current GitHub account is not linked to your past contributions,
(you can search them through
&lt;a href="http://www.spinellis.gr/cgi-bin/namegrep.pl" rel="nofollow"&gt;this page&lt;/a&gt;),
associate your past email with your current account through your
&lt;a href="https://github.com/settings/emails"&gt;GitHub account settings&lt;/a&gt;.
(Contact me for instructions on how to add email addresses to which you no
longer have access.)&lt;/li&gt;
&lt;li&gt;Look for errors and omissions in the
&lt;a href="https://github.com/dspinellis/unix-history-make/blob/master/src/author-path"&gt;files that map file paths to authors&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Look for parts of the system that have not yet been attributed
&lt;a href="https://github.com/dspinellis/unix-history-make/blob/master/src/unmatched"&gt;in these files&lt;/a&gt;
and propose suitable attributions.
Keep in mind that attributions for parts that were developed in one place
and modified elsewhere (e.g. developed at Bell Labs and modified at Berkeley)
should be for the person who did the modification, not the original author.&lt;/li&gt;
&lt;li&gt;Look for authors whose identifier starts with &lt;code&gt;x-&lt;/code&gt; in the
author id to name map files for
&lt;a href="https://github.com/dspinellis/unix-history-make/blob/master/src/bell.au"&gt;Bell Labs&lt;/a&gt;,
and
&lt;a href="https://github.com/dspinellis/unix-history-make/blob/master/src/berkeley.au"&gt;Berkeley&lt;/a&gt;,
and provide or confirm their actual login identifier.
(The one used is a guess.)&lt;/li&gt;
&lt;li&gt;Contribute a path regular expression to contributor map file
(see &lt;a href="https://github.com/dspinellis/unix-history-make/blob/master/src/author-path/v7"&gt;v7.map&lt;/a&gt;) for
&lt;a href="http://www.tuhs.org/Archive/4BSD/Distributions/4.2BSD/" rel="nofollow"&gt;4.2BSD&lt;/a&gt;,
&lt;a href="http://www.tuhs.org/Archive/4BSD/Distributions/4.3BSD/" rel="nofollow"&gt;4.3BSD&lt;/a&gt;,
&lt;a href="http://www.tuhs.org/Archive/4BSD/Distributions/4.3BSD-Reno/" rel="nofollow"&gt;4.3BSD-Reno&lt;/a&gt;,
&lt;a href="http://www.tuhs.org/Archive/4BSD/Distributions/4.3BSD-Tahoe/" rel="nofollow"&gt;4.3BSD-Tahoe&lt;/a&gt;,
&lt;a href="http://www.tuhs.org/Archive/4BSD/Distributions/4.3BSD-Alpha/" rel="nofollow"&gt;4.3BSD-Alpha&lt;/a&gt;, and
&lt;a href="http://www.tuhs.org/Archive/4BSD/Distributions/Net2/" rel="nofollow"&gt;Net2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Import further branches, such as 2BSD, NetBSD, OpenBSD, and &lt;em&gt;Plan 9 from Bell Labs&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-re-creating-the-historical-repository-from-scratch" class="anchor" aria-hidden="true" href="#re-creating-the-historical-repository-from-scratch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Re-creating the historical repository from scratch&lt;/h2&gt;
&lt;p&gt;The -make repository is provided to share and document the creation process, rather than as a bullet-proof way to get consistent and repeatable results.  For instance, importing the snapshots on a system that is case-insensitive (NTFS, HFS Plus with default settings) will result in a few files getting lost.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;Perl&lt;/li&gt;
&lt;li&gt;The Perl modules &lt;code&gt;VCS::SCCS&lt;/code&gt; and &lt;code&gt;Git::FastExport&lt;/code&gt;
(Install with &lt;code&gt;sudo cpanm VCS::SCCS Git::FastExport&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;If compiling patch under GNU/Linux and library &lt;code&gt;libbsd&lt;/code&gt;
(e.g. the &lt;code&gt;libbsd-dev&lt;/code&gt; package).&lt;/li&gt;
&lt;li&gt;Sudo (and authorization to use it to mount ISO images)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-repository-creation" class="anchor" aria-hidden="true" href="#repository-creation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repository creation&lt;/h3&gt;
&lt;p&gt;The -repo repository can be created with the following commands.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make
./import.sh&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-adding-a-single-source" class="anchor" aria-hidden="true" href="#adding-a-single-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding a single source&lt;/h2&gt;
&lt;p&gt;If you want to add a new source without running the full import process,
you can do the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prepare the source's maps and data&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt; to the repo directory&lt;/li&gt;
&lt;li&gt;Checkout the repo at the point where the new source will branch out&lt;/li&gt;
&lt;li&gt;Run a Perl command such as the following.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;perl ../import-dir.pl [-v] -m Research-V7 -c ../author-path/Bell-32V \
-n ../bell.au -r Research-V7 -i ../ignore/Bell-32V \
$ARCHIVE/32v Bell 32V -0500 | gfi
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-further-reading" class="anchor" aria-hidden="true" href="#further-reading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Further reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Diomidis Spinellis. A repository of Unix history and evolution. &lt;em&gt;Empirical Software Engineering&lt;/em&gt;, 2017. doi:10.1007/s10664-016-9445-5.
&lt;a href="http://www.dmst.aueb.gr/dds/pubs/jrnl/2016-EMPSE-unix-history/html/unix-history.html" rel="nofollow"&gt;HTML&lt;/a&gt;, &lt;a href="http://www.dmst.aueb.gr/dds/pubs/jrnl/2016-EMPSE-unix-history/html/unix-history.pdf" rel="nofollow"&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Diomidis Spinellis. A repository with 44 years of Unix evolution. In &lt;em&gt;MSR '15: Proceedings of the 12th Working Conference on Mining Software Repositories&lt;/em&gt;, pages 13-16. IEEE, 2015. Best Data Showcase Award. &lt;a href="http://www.dmst.aueb.gr/dds/pubs/conf/2015-MSR-Unix-History/html/Spi15c.pdf" rel="nofollow"&gt;PDF&lt;/a&gt;, &lt;a href="http://www.dmst.aueb.gr/dds/pubs/conf/2015-MSR-Unix-History/html/Spi15c.html" rel="nofollow"&gt;HTML&lt;/a&gt;, &lt;a href="http://www.dmst.aueb.gr/dds/pubs/conf/2015-MSR-Unix-History/html/poster.pdf" rel="nofollow"&gt;poster&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Warren Toomey, First Edition Unix: Its Creation and Restoration, in &lt;em&gt;IEEE Annals of the History of Computing&lt;/em&gt;, vol. 32, no. 3, pp. 74-82, July-Sept. 2010. doi:10.1109/MAHC.2009.55. &lt;a href="http://www.tuhs.org/Archive/Documentation/Papers/1eUnix_creation_restoration.pdf" rel="nofollow"&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Warren Toomey,  The Restoration of Early UNIX Artifacts, in &lt;em&gt;USENIX ATC '09: 2009 USENIX Annual Technical Conference&lt;/em&gt;. 2009. &lt;a href="https://www.usenix.org/legacy/events/usenix09/tech/full_papers/toomey/toomey.pdf" rel="nofollow"&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Diomidis Spinellis, Panagiotis Louridas, and Maria Kechagia. An exploratory study on the evolution of C programming in the Unix operating system. In Qing Wang and Guenther Ruhe, editors, &lt;em&gt;ESEM '15: 9th International Symposium on Empirical Software Engineering and Measurement&lt;/em&gt;, pages 54–57. IEEE, October 2015. &lt;a href="http://www.dmst.aueb.gr/dds/pubs/conf/2015-ESEM-CodeStyle/html/SLK15.html" rel="nofollow"&gt;HTML&lt;/a&gt;, &lt;a href="http://www.dmst.aueb.gr/dds/pubs/conf/2015-ESEM-CodeStyle/html/SLK15.pdf" rel="nofollow"&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Diomidis Spinellis, Panos Louridas, and Maria Kechagia. The evolution of C programming practices: A study of the Unix operating system 1973–2015. In Willem Visser and Laurie Williams, editors, &lt;em&gt;ICSE '16: Proceedings of the 38th International Conference on Software Engineering&lt;/em&gt;, May 2016. Association for Computing Machinery. doi:10.1145/2884781.2884799. &lt;a href="http://www.dmst.aueb.gr/dds/pubs/conf/2016-ICSE-ProgEvol/html/SLK16.pdf" rel="nofollow"&gt;PDF&lt;/a&gt;, &lt;a href="http://www.dmst.aueb.gr/dds/pubs/conf/2016-ICSE-ProgEvol/html/SLK16.html" rel="nofollow"&gt;HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wikipedia: The Free Encyclopedia
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/History_of_Unix" rel="nofollow"&gt;History of Unix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/List_of_Unix_systems" rel="nofollow"&gt;List of Unix systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/List_of_Unix_commands" rel="nofollow"&gt;List of Unix commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/List_of_Unix_daemons" rel="nofollow"&gt;List of Unix daemons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Research_Unix" rel="nofollow"&gt;Research Unix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/BSD_Unix" rel="nofollow"&gt;Berkeley Software Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Unix_philosophy" rel="nofollow"&gt;Unix philosophy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TUHS: The Unix Heritage Society
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://minnie.tuhs.org/cgi-bin/utree.pl" rel="nofollow"&gt;The Unix Tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Historical documents and data
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DoctorWkt/pdp7-unix"&gt;PDP-7 Unix restoration project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bitsavers.trailing-edge.com/pdf/bellLabs/unix/PreliminaryUnixImplementationDocument_Jun72.pdf" rel="nofollow"&gt;First Edition Unix printout - 1972&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cm.bell-labs.com/cm/cs/who/dmr/otherports/32vscan.pdf" rel="nofollow"&gt;Unix 32/V Report - 1978&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mckusick.com/csrg/index.html" rel="nofollow"&gt;Berkeley CSRG Archive CD-ROMs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Studies
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://archive.org/details/a_research_unix_reader" rel="nofollow"&gt;M. Douglas McIlroy. A Research UNIX Reader: Annotated Excerpts from the Programmer's Manual, 1971-1986&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.princeton.edu/~hos/Mahoney/unixpeople.htm" rel="nofollow"&gt;Michael S. Mahoney. Unix at the Bell Labs - People&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The following people helped with Bell Labs login identifiers.&lt;/li&gt;
&lt;li&gt;Brian W. Kernighan&lt;/li&gt;
&lt;li&gt;Doug McIlroy&lt;/li&gt;
&lt;li&gt;Arnold D. Robbins&lt;/li&gt;
&lt;li&gt;The following people helped with *BSD login identifiers.&lt;/li&gt;
&lt;li&gt;Clem Cole&lt;/li&gt;
&lt;li&gt;Era Eriksson&lt;/li&gt;
&lt;li&gt;Mary Ann Horton&lt;/li&gt;
&lt;li&gt;Warner Losh&lt;/li&gt;
&lt;li&gt;Kirk McKusick&lt;/li&gt;
&lt;li&gt;Jeremy C. Reed&lt;/li&gt;
&lt;li&gt;Ingo Schwarze&lt;/li&gt;
&lt;li&gt;Anatole Shaw&lt;/li&gt;
&lt;li&gt;The BSD SCCS import code is based on work by&lt;/li&gt;
&lt;li&gt;&lt;a href="http://search.cpan.org/~hmbrand/VCS-SCCS-0.20/SCCS.pm" rel="nofollow"&gt;H. Merijn Brand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonathangray/csrg-git-patches/"&gt;Jonathan Gray&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-build-identification" class="anchor" aria-hidden="true" href="#build-identification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build identification&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Software URL: &lt;a href="https://github.com/dspinellis/unix-history-make"&gt;https://github.com/dspinellis/unix-history-make&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Software SHA: 2548f4c5a28844490f036cc103a41432b06d9e58&lt;/li&gt;
&lt;li&gt;Build timestamp: 2018-11-29 15:37:02 UTC&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dspinellis</author><guid isPermaLink="false">https://github.com/dspinellis/unix-history-repo</guid><pubDate>Thu, 26 Dec 2019 00:03:00 GMT</pubDate></item><item><title>virtualagc/virtualagc #4 in Assembly, Today</title><link>https://github.com/virtualagc/virtualagc</link><description>&lt;p&gt;&lt;i&gt;Virtual Apollo Guidance Computer (AGC) software&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-virtual-apollo-guidance-computer" class="anchor" aria-hidden="true" href="#virtual-apollo-guidance-computer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Virtual Apollo Guidance Computer&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-build-status" class="anchor" aria-hidden="true" href="#build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build status&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Travis CI (Linux)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://travis-ci.org/virtualagc/virtualagc/branches" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/85790975a88fceab7086704d758265f841606c32/68747470733a2f2f7472617669732d63692e6f72672f7669727475616c6167632f7669727475616c6167632e7376673f6272616e63683d6d6173746572" alt="travis-image" data-canonical-src="https://travis-ci.org/virtualagc/virtualagc.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Apollo_(spacecraft)" rel="nofollow"&gt;Apollo&lt;/a&gt; spacecraft used for lunar missions in the late 1960's and early 1970's was really two different spacecraft, the &lt;a href="https://en.wikipedia.org/wiki/Apollo_command_and_service_module" rel="nofollow"&gt;Command Module (CM)&lt;/a&gt; and the &lt;a href="https://en.wikipedia.org/wiki/Apollo_Lunar_Module" rel="nofollow"&gt;Lunar Module (LM)&lt;/a&gt;. The CM was used to get the three astronauts to the moon, and back again. The LM was used to land two of the astronauts on the moon while the third astronaut remained in the CM, in orbit around the moon.&lt;/p&gt;
&lt;p&gt;Each of the spacecraft needed to be able to navigate through space, with or without the assistance of the astronauts, and therefore needed to have a "guidance system". The guidance system was developed by &lt;a href="https://en.wikipedia.org/wiki/MIT_Instrumentation_Laboratory" rel="nofollow"&gt;MIT's Instrumentation Lab&lt;/a&gt;, now an independent company known as the Charles Stark Draper Laboratory.&lt;/p&gt;
&lt;p&gt;An important part of the guidance system was the &lt;a href="https://en.wikipedia.org/wiki/Apollo_Guidance_Computer" rel="nofollow"&gt;Apollo Guidance Computer&lt;/a&gt;—or just "AGC" for short. On any given Apollo mission, there were two AGCs, one for the Command Module, and one for the Lunar Module. The two AGCs were identical and interchangeable, but they ran different software because the tasks the spacecraft had to perform were different. Moreover, the software run by the AGC evolved over time, so that the AGC software used in later missions like &lt;a href="https://en.wikipedia.org/wiki/Apollo_17" rel="nofollow"&gt;Apollo 17&lt;/a&gt; differed somewhat from that of earlier missions like &lt;a href="https://en.wikipedia.org/wiki/Apollo_8" rel="nofollow"&gt;Apollo 8&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Considered just as a computer, the AGC was severely underpowered by modern standards.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-other-repository-branches" class="anchor" aria-hidden="true" href="#other-repository-branches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Repository Branches&lt;/h1&gt;
&lt;p&gt;Since you are looking at this README file, you are in the "master" branch of the repository, which contains source-code transcriptions of the original Project Apollo software for the Apollo Guidance Computer (AGC) and &lt;a href="https://en.wikipedia.org/wiki/Apollo_Abort_Guidance_System" rel="nofollow"&gt;Abort Guidance System (AGS)&lt;/a&gt;, as well as our software for emulating the AGC, AGS, and some of their peripheral devices (such as the display-keyboard unit, or DSKY).&lt;/p&gt;
&lt;p&gt;Other branches of the repository often contain very different files. Here are some of the more-significant branches which differ in that way from the master branch:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gh-pages&lt;/strong&gt;: HTML files and imagery for the main Virtual AGC Project website. Contains the complete website, exclusive of the large library of scanned supplementary documentation and drawings.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mechanical&lt;/strong&gt;: 2D CAD files and 3D models in DXF and STEP formats, intended to replicate the original AGC/DSKY mechanical design.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;scenarios&lt;/strong&gt;: Pad loads or other setup for mission scenarios.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schematics&lt;/strong&gt;: CAD transcriptions in KiCad format of the original AGC/DSKY electrical design.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;wiki&lt;/strong&gt;: Wiki files associated with the repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-agc-specifications" class="anchor" aria-hidden="true" href="#agc-specifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AGC Specifications&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2048 words of RAM. A "word" was 15 bits of data—therefore just under 2 bytes (16 bits) of data—and so the total RAM was just 3840 bytes.&lt;/li&gt;
&lt;li&gt;36,864 words of read-only memory, equivalent to 69,120 bytes.&lt;/li&gt;
&lt;li&gt;Maximum of about 85,000 CPU instructions executed per second.&lt;/li&gt;
&lt;li&gt;Dimensions: 24"×12.5"×6".&lt;/li&gt;
&lt;li&gt;Weight: 70.1 pounds.&lt;/li&gt;
&lt;li&gt;Power supply: 2.5A of current at 28V DC&lt;/li&gt;
&lt;li&gt;Real DSKY.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is occasionally quipped—with perhaps greater wit than insight—that the AGC was more like a calculator than a computer. But to say this is to grossly underestimate the AGC's sophistication. For example, the AGC was multi-tasking, so that it could seemingly run multiple programs simultaneously.&lt;/p&gt;
&lt;p&gt;Another important part of the guidance system was the &lt;a href="https://en.wikipedia.org/wiki/Apollo_Guidance_Computer#/media/File:Apollo_DSKY_interface.svg" rel="nofollow"&gt;Display/Keyboard unit&lt;/a&gt;—or just "DSKY" for short. The AGC by itself was simply a box with electrical connections, without any built-in way for the astronaut to access it. The DSKY provided the astronaut with an interface by which to access the AGC.&lt;/p&gt;
&lt;p&gt;The Lunar Module had a single DSKY, positioned between the two astronauts where it could be operated by either of them. The Command Module actually had two DSKYs. One of the CM's DSKYs was only the main control panel, while the other was positioned near the optical equipment used to mark the positions of stars or other landmarks.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-dsky-specifications" class="anchor" aria-hidden="true" href="#dsky-specifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DSKY Specifications&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Dimensions: 8"×8"×7"&lt;/li&gt;
&lt;li&gt;Weight: 17.5 pounds.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Perhaps the most important part of the guidance system was the &lt;a href="https://en.wikipedia.org/wiki/Apollo_PGNCS" rel="nofollow"&gt;Inertial Measurement Unit&lt;/a&gt;—or just "IMU" for short. The IMU continuously kept track of the acceleration and rotation of the spacecraft, and reported this information back to the AGC. By mathematically processing this data, the AGC could know on a moment-by-moment basis the orientation and position of the spacecraft.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-what-this-project-is-for" class="anchor" aria-hidden="true" href="#what-this-project-is-for"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What this project is for&lt;/h1&gt;
&lt;p&gt;This repository is associated with &lt;a href="http://www.ibiblio.org/apollo" rel="nofollow"&gt;the website of the Virtual AGC project&lt;/a&gt;, which provides a virtual machine which simulates the AGC, the DSKY, and some other portions of the guidance system. In other words, if the virtual machine—which we call yaAGC—is given the same software which was originally run by the real AGCs, and is fed the same input signals encountered by the real AGCs during Apollo missions, then it will respond in the same way as the real AGCs did.&lt;/p&gt;
&lt;p&gt;The Virtual AGC software is open source code so that it can be studied or modified. The repository contains the actual assembly-language source code for the AGC, for as many missions as we've been able to acquire, along with software for processing that AGC code. Principal tools are an assembler (to create executable code from the source code) and a CPU simulator (to run the executable code), as well as simulated peripherals (such as the DSKY). Similar source code and tools are provided for the very-different abort computer that resided in the Lunar Module. Finally, any supplemental software material we have been able to find or create for the Saturn rocket's &lt;a href="https://en.wikipedia.org/wiki/Saturn_Launch_Vehicle_Digital_Computer" rel="nofollow"&gt;Launch Vehicle Digital Computer&lt;/a&gt; or for the &lt;a href="https://en.wikipedia.org/wiki/Gemini_Guidance_Computer" rel="nofollow"&gt;Gemini on-board computer (OBC)&lt;/a&gt; are provided, though these materials are minimal at present.&lt;/p&gt;
&lt;p&gt;Virtual AGC is a computer model of the AGC. It does not try to mimic the superficial behavioral characteristics of the AGC, but rather to model the AGC's inner workings. The result is a computer model of the AGC which is itself capable of executing the original Apollo software on (for example) a desktop PC. In computer terms, Virtual AGC is an emulator. Virtual AGC also provides an emulated Abort Guidance System (AGS) and (in the planning stages) an emulated LVDC. Virtual AGC is a catch-all term that comprises all of these.&lt;/p&gt;
&lt;p&gt;The current version of the Virtual AGC software has been designed to work in Linux, in Windows XP/Vista/7, and in Mac OS X 10.3 or later (but 10.5 or later is best). It also works in at least some versions of FreeBSD. However, since I personally work in Linux, I have the most confidence in the Linux version.&lt;/p&gt;
&lt;p&gt;You can read about this project in more detail here:
&lt;a href="http://www.ibiblio.org/apollo/index.html" rel="nofollow"&gt;http://www.ibiblio.org/apollo/index.html&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-what-this-project-is-not-for" class="anchor" aria-hidden="true" href="#what-this-project-is-not-for"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What this project is not for&lt;/h1&gt;
&lt;p&gt;Virtual AGC is not a flight simulator, nor a lunar-lander simulator, nor even a behavioral simulation of the Apollo Lunar Module (LM) or Command-Module (CM) control panels. (In other words, if you expect a realistic LM control panel to suddenly appear on your computer screen, you'll be disappointed.) Virtual AGC could be used, however, as a component of such a simulation, and developers of such software are encouraged to do so. Indeed, some developers already have! See the FAQ for more information:
&lt;a href="http://www.ibiblio.org/apollo/faq.html" rel="nofollow"&gt;http://www.ibiblio.org/apollo/faq.html&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Tcl/Tk is required for all platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Requires Fedora Core 4 or later.&lt;/li&gt;
&lt;li&gt;Requires Ubuntu 7.04 or later.&lt;/li&gt;
&lt;li&gt;Requires SuSE 10.1 or later.&lt;/li&gt;
&lt;li&gt;Known to work on Raspbian (Raspberry Pi) 2016-05-27.&lt;/li&gt;
&lt;li&gt;et, presumably, cetera.&lt;/li&gt;
&lt;li&gt;32 and 64-bit systems have been tested successfully.&lt;/li&gt;
&lt;li&gt;The X-Window system, xterm, and gtk+ libraries must be installed.&lt;/li&gt;
&lt;li&gt;You will need the normal gcc C/C++ compiler toolchain, as well as developer packages ("dev" or "devel") for wxWidgets, ncurses and SDL.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On Fedora 22 or later you may encounter that the wxWidgets doesn't have the wx-config but the wx-config-3.0 utility as well as the wxrc-3.0 versus wxrc. Just create a symbolic link for wx-config and wxrc respectively&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Requires XP or later. 32-bit systems have been tested successfully.&lt;/li&gt;
&lt;li&gt;Vista and Windows 7 may need workarounds. For example, on the Windows platform it is expected that the Tcl/Tk installation program will create a file called &lt;code&gt;wish.exe&lt;/code&gt; but on Windows Vista the installation program creates a file called &lt;code&gt;wish85.exe&lt;/code&gt;. This prevents certain features of Virtual AGC from working. The workaround is to duplicate the file &lt;code&gt;c:\tcl\bin\wish85.exe&lt;/code&gt; and call the duplicate &lt;code&gt;c:\tcl\bin\wish.exe&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Windows 98 or prior are known not to work. Windows 2000 has not been tested.&lt;/li&gt;
&lt;li&gt;You will need the MinGW compiler with the options selected - if offered - of including g++ compiler and make.&lt;/li&gt;
&lt;li&gt;You will also need the Msys environment, wxWidgets 2.8.9 or above, POSIX Threads for Windows, GNU readline for Windows and the regular-expression library from MinGW called libgnurx.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-mac-os-x" class="anchor" aria-hidden="true" href="#mac-os-x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac OS X:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Requires 10.4 and later for Intel or PowerPC&lt;/li&gt;
&lt;li&gt;10.2 or prior are known not to work.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-freebsd" class="anchor" aria-hidden="true" href="#freebsd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FreeBSD:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Requires FreeBSD 7.2 or later.&lt;/li&gt;
&lt;li&gt;Requires PC-BSD 7.1 or later.&lt;/li&gt;
&lt;li&gt;You will need to install wxWidgets 2.8.9, GNU readline 6.0 into &lt;code&gt;/usr/local&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;libSDL must be installed&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-opensolaris" class="anchor" aria-hidden="true" href="#opensolaris"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenSolaris&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Requires OpenSolaris 0811.&lt;/li&gt;
&lt;li&gt;The code is only confirmed to partially work on this platform.&lt;/li&gt;
&lt;li&gt;You will need SUNWgnome-common-devel, SUNWGtk, SUNWxorg-headers, FSWxorg-headers, SUNWncurses, SUNWtcl, SUNWtk and SUNWlibsdl&lt;/li&gt;
&lt;li&gt;You will also need GNU readline 6.0, wxWidgets 2.8.9 (with &lt;code&gt;configure --disable-shared&lt;/code&gt;), Allegro 4.2.2 (with "configure --enable-shared=no --enable-static=yes") and to put &lt;code&gt;/usr/local/bin&lt;/code&gt; and/or &lt;code&gt;/usr/local/bin/wx-config&lt;/code&gt; linked into your &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More information at &lt;a href="http://www.ibiblio.org/apollo/download.html#Build" rel="nofollow"&gt;http://www.ibiblio.org/apollo/download.html#Build&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building-the-virtual-agc-software" class="anchor" aria-hidden="true" href="#building-the-virtual-agc-software"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Virtual AGC software&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;cd yaAGC
make
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-linux-1" class="anchor" aria-hidden="true" href="#linux-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h2&gt;
&lt;p&gt;These instructions relate specifically to building from source as of 2016-08-07 on 64-bit Linux Mint 17.3. I'm sorry to have to make them so specific, but hopefully they are easily adapted to other Linux environments. Alternate build instructions (for example, for Raspberry Pi) may be found at &lt;a href="http://www.ibiblio.org/apollo/download.html" rel="nofollow"&gt;http://www.ibiblio.org/apollo/download.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You will probably have to install a variety of packages which aren't normally installed. I found that I had to install the following, which were all available from the standard software repositories (in Linux Mint, anyway):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;libsdl1.2-dev&lt;/li&gt;
&lt;li&gt;libncurses5-dev&lt;/li&gt;
&lt;li&gt;liballegro4.4-dev or liballegro4-dev&lt;/li&gt;
&lt;li&gt;g++&lt;/li&gt;
&lt;li&gt;libgtk2.0-dev&lt;/li&gt;
&lt;li&gt;libwxgtk2.8-dev&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To build, simply &lt;code&gt;cd&lt;/code&gt; into the directory containing the source and do:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Note: Do not &lt;code&gt;configure&lt;/code&gt; and do not &lt;code&gt;make install&lt;/code&gt;. While there is a &lt;code&gt;configure&lt;/code&gt; script provided, it is presently used only for setting up builds of a couple of now-obsoleted programs, and it does not matter whether you run it or not nor whether it succeeds or fails. If the build does not complete because of a difference when comparing the &lt;code&gt;bin&lt;/code&gt; files then you can rebuild with &lt;code&gt;make -k&lt;/code&gt; to keep going. This however might mask other issues.&lt;/p&gt;
&lt;p&gt;You will find that this has created a directory &lt;code&gt;VirtualAGC/temp/lVirtualAGC/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To match the default setup of the installer program execute the following:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv yaAGC/VirtualAGC/temp/lVirtualAGC ~/VirtualAGC&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can make a desktop icon called &lt;em&gt;Virtual AGC&lt;/em&gt; that links to &lt;code&gt;VirtualAGC/bin/VirtualAGC&lt;/code&gt;. The image normally used for the desktop icon is found at &lt;code&gt;VirtualAGC/bin/ApolloPatch2.png&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you try to use the ACA simulation (joystick) and it doesn't work you can find some information on configuring it here:
&lt;a href="http://www.ibiblio.org/apollo/yaTelemetry.html#Joystick_configuration_for_use_with_the" rel="nofollow"&gt;http://www.ibiblio.org/apollo/yaTelemetry.html#Joystick_configuration_for_use_with_the&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-windows-1" class="anchor" aria-hidden="true" href="#windows-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h2&gt;
&lt;p&gt;Run &lt;code&gt;Msys&lt;/code&gt; to bring up a command shell and enter your home directory.&lt;/p&gt;
&lt;p&gt;Install the SDL library with this command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make install-sdl prefix=/usr/local&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;All software needed to build Virtual AGC will be installed under &lt;code&gt;/usr/local&lt;/code&gt;, so eventually it will be populated with sub-directories such as &lt;code&gt;/usr/local/bin&lt;/code&gt;, &lt;code&gt;/usr/local/include&lt;/code&gt;, &lt;code&gt;/usr/local/lib&lt;/code&gt;, and so on. The Virtual AGC makefiles are hard-coded to assume these installation locations. Note, the Virtual AGC binaries you are going to create are not installed under &lt;code&gt;/usr/local&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;At present, Virtual AGC binary packages are always built with wxWidgets 2.8.9, so 2.8.9 is a safe choice. Unpack the tarball in your home directory, 'cd' into the directory this creates, and then do &lt;code&gt;./configure&lt;/code&gt;, &lt;code&gt;make&lt;/code&gt;, and &lt;code&gt;make install&lt;/code&gt;. The &lt;code&gt;configure&lt;/code&gt; step will accept various command-line options that select unicode vs. ansi, static linking vs. dynamic linking, etc., but the default options seem to work fine.&lt;/p&gt;
&lt;p&gt;Install POSIX Threads for Windows ("pthreads"). You can do this by unpacking the source tarball, 'cd' into the directory it creates, then run the command &lt;code&gt;make clean GC-inlined&lt;/code&gt;. This creates various files that you should copy into &lt;code&gt;/usr/local&lt;/code&gt; as follows: &lt;code&gt;copy \*.dll&lt;/code&gt; into &lt;code&gt;/usr/local/bin&lt;/code&gt;; copy &lt;code&gt;\*.h&lt;/code&gt; into &lt;code&gt;/usr/local/include&lt;/code&gt;; copy the single &lt;code&gt;libpthread\*.a&lt;/code&gt; file created into &lt;code&gt;/usr/local/lib&lt;/code&gt; and rename it &lt;code&gt;libpthread.a&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Install GNU readline for Windows. You should find zipfiles of both binaries and developer files are available for download. They should both be downloaded and unpacked into &lt;code&gt;/usr/local&lt;/code&gt;. (I.e., each zipfile contains directories like &lt;code&gt;bin/&lt;/code&gt;, &lt;code&gt;include/&lt;/code&gt;, &lt;code&gt;lib/&lt;/code&gt;, and so on, and we want these to be merged into &lt;code&gt;/usr/local/bin/&lt;/code&gt;, &lt;code&gt;/usr/local/include/&lt;/code&gt;, etc.)&lt;/p&gt;
&lt;p&gt;Install a regular-expression library. The MinGW project has a "contributed" regex library ("libgnurx") that you can use. Download both the &lt;code&gt;bin&lt;/code&gt; and &lt;code&gt;dev&lt;/code&gt; tarballs and unpack them into &lt;code&gt;/usr/local&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If all of this was done correctly you can build the Virtual AGC as follows:&lt;/p&gt;
&lt;p&gt;Unpack the development tarball in your home directory:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tar -xjvf yaAGC-dev-YYYYMMDD.tar.bz2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Build it:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make -C yaAGC WIN32=yes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;On Windows 7 (but not on XP) it is also necessary to copy &lt;code&gt;c:\MinGW\bin\mingwm10.dll&lt;/code&gt; to &lt;code&gt;yaAGC/VirtualAGC/temp/lVirtualAGC/Resources/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This will create a directory &lt;code&gt;yaAGC/VirtualAGC/temp/lVirtualAGC/&lt;/code&gt; which is the "installation directory". This directory is relocatable and need to remain within the Msys environment so you can move it wherever you like. Regardless you really need to create a desktop icon in order to run the program. The desktop icon should point to &lt;code&gt;lVirtualAGC\bin\VirtualAGC.exe&lt;/code&gt; as the executable, and should use a "starting directory" of &lt;code&gt;lVirtualAGC\Resources&lt;/code&gt;. The graphic normally used for the desktop icon is &lt;code&gt;ApolloPatch2.jpg&lt;/code&gt; in the &lt;code&gt;lVirtualAGC\Resources&lt;/code&gt; directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mac-os-x-1" class="anchor" aria-hidden="true" href="#mac-os-x-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac OS X&lt;/h2&gt;
&lt;p&gt;From the command line unpack the development-snapshot tarball as follows:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tar --bzip2 -xf yaAGC-dev-YYYYMMDD.tar.bz2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Get the Terminator application's dmg file:
&lt;a href="https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/jessies/terminator-26.159.6816.zip" rel="nofollow"&gt;https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/jessies/terminator-26.159.6816.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Open the Terminator dmg file and drag the Terminator application to the working directory in which you created &lt;code&gt;yaAGC/&lt;/code&gt; above.&lt;/p&gt;
&lt;p&gt;From a command line in that working directory, make a tarball from Terminator.app:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tar -cjvf Terminator.app.tar.bz2 Terminator.app&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once you have the tarball, you can delete the Terminator app and its dmg file.&lt;/p&gt;
&lt;p&gt;From the working directory (not from within the &lt;code&gt;yaAGC/&lt;/code&gt; directory) build Virtual AGC:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make -C yaAGC MACOSX=yes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In the folder &lt;code&gt;yaAGC/VirtualAGC/temp/&lt;/code&gt; you will now find the VirtualAGC application.&lt;/p&gt;
&lt;p&gt;Drag the VirtualAGC application from &lt;code&gt;yaAGC/VirtualAGC/temp/&lt;/code&gt; to the desktop.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-freebsd-1" class="anchor" aria-hidden="true" href="#freebsd-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FreeBSD&lt;/h2&gt;
&lt;p&gt;From the command line unpack the development-snapshot tarball as follows: &lt;code&gt;tar --bzip2 -xf yaAGC-dev-YYYYMMDD.tar.bz2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After unpacking there will be a new directory called &lt;code&gt;yaAGC&lt;/code&gt;. To build the program:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gmake FREEBSD=yes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Do not &lt;code&gt;configure&lt;/code&gt; and do not &lt;code&gt;gmake install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You will find that this has created a directory &lt;code&gt;yaAGC/VirtualAGC/temp/lVirtualAGC/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To match the default setup of the installer program execute the following:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv yaAGC/VirtualAGC/temp/lVirtualAGC ~/VirtualAGC&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can make a desktop icon called &lt;em&gt;Virtual AGC&lt;/em&gt; that links to &lt;code&gt;/VirtualAGC/bin/VirtualAGC&lt;/code&gt;. The image normally used for the desktop icon is found at &lt;code&gt;/VirtualAGC/bin/ApolloPatch2.png&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you try to use the ACA simulation (joystick) and it doesn't work you can find some information on configuring it here:
&lt;a href="http://www.ibiblio.org/apollo/yaTelemetry.html#Joystick_configuration_for_use_with_the" rel="nofollow"&gt;http://www.ibiblio.org/apollo/yaTelemetry.html#Joystick_configuration_for_use_with_the&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-solaris" class="anchor" aria-hidden="true" href="#solaris"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Solaris&lt;/h2&gt;
&lt;p&gt;Unpack the Virtual AGC snapshot tarball:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tar --bzip2 -xf yaAGC-dev-YYYYMMDD.tar.bz2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Open the &lt;code&gt;yaAGC/&lt;/code&gt; directory and build:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make SOLARIS=yes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Do not &lt;code&gt;configure&lt;/code&gt; and do not &lt;code&gt;gmake install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You'll find that this has created a directory &lt;code&gt;yaAGC/VirtualAGC/temp/lVirtualAGC/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To match the default setup of the installer program execute the following:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv yaAGC/VirtualAGC/temp/lVirtualAGC ~/VirtualAGC&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can make a desktop icon called &lt;em&gt;Virtual AGC&lt;/em&gt; that links to &lt;code&gt;/VirtualAGC/bin/VirtualAGC&lt;/code&gt;. The image normally used for the desktop icon is found at &lt;code&gt;/VirtualAGC/bin/ApolloPatch2.png&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately the ACA simulation (joystick) programs do not work in this environment.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-endnotes" class="anchor" aria-hidden="true" href="#endnotes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Endnotes&lt;/h1&gt;
&lt;p&gt;This Readme was created from information contained in the main project website here:
&lt;a href="http://www.ibiblio.org/apollo/index.html" rel="nofollow"&gt;http://www.ibiblio.org/apollo/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The project website was created by Ronald Burkey. The first version of this Readme was compiled by Shane Coughlan.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>virtualagc</author><guid isPermaLink="false">https://github.com/virtualagc/virtualagc</guid><pubDate>Thu, 26 Dec 2019 00:04:00 GMT</pubDate></item></channel></rss>