<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Swift, Today</title><link>https://github.com/trending/swift?since=daily</link><description>The top repositories on GitHub for swift, measured daily</description><pubDate>Mon, 10 Feb 2020 01:18:46 GMT</pubDate><lastBuildDate>Mon, 10 Feb 2020 01:18:46 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>twostraws/Sitrep #1 in Swift, Today</title><link>https://github.com/twostraws/Sitrep</link><description>&lt;p&gt;&lt;i&gt;A source code analyzer for Swift projects.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/702eb2a251bf1640dbc8efb3ea584832877185c6/68747470733a2f2f7777772e6861636b696e677769746873776966742e636f6d2f66696c65732f7369747265702f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/702eb2a251bf1640dbc8efb3ea584832877185c6/68747470733a2f2f7777772e6861636b696e677769746873776966742e636f6d2f66696c65732f7369747265702f6c6f676f2e706e67" alt="Sitrep logo" width="483" data-canonical-src="https://www.hackingwithswift.com/files/sitrep/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/667f6dfa9824258f1bea9b0cefb960b3f983092f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352e312d627269676874677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/667f6dfa9824258f1bea9b0cefb960b3f983092f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352e312d627269676874677265656e2e737667" data-canonical-src="https://img.shields.io/badge/Swift-5.1-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://twitter.com/twostraws" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/35c3b79b4e4b8d52b18845903076fafab6a0f8db/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6e746163742d4074776f7374726177732d6c69676874677265792e7376673f7374796c653d666c6174" alt="Twitter: @twostraws" data-canonical-src="https://img.shields.io/badge/Contact-@twostraws-lightgrey.svg?style=flat" style="max-width:100%;"&gt;
    &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Sitrep is source code analyzer for Swift projects, giving you a high-level overview of your code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A count of your classes, structs, enums, protocols, and extensions.&lt;/li&gt;
&lt;li&gt;Total lines of code, and also source lines of code (minus comments and whitespace).&lt;/li&gt;
&lt;li&gt;Which file and type are the longest, plus their source lines of code.&lt;/li&gt;
&lt;li&gt;Which imports you’re using and how often.&lt;/li&gt;
&lt;li&gt;How many UIViews, UIViewControllers, and SwiftUI views are in your project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Behind the scenes, Sitrep captures a lot more information that could be utilized – how many functions you have, how many comments (regular and documentation), how large your enums are, and more. These aren’t currently reported, but could be in a future release. It’s also written as both a library and an executable, so it can be integrated elsewhere as needed.&lt;/p&gt;
&lt;p&gt;Sitrep is built using Apple’s &lt;a href="https://github.com/apple/swift-syntax"&gt;SwiftSyntax&lt;/a&gt;, which means it parses Swift code accurately and efficiently.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Sitrep can be used through the Swift Package Manager. You can add it as a dependency in your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/twostraws/Sitrep&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;branch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;master&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    ],
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;import SitrepCore&lt;/code&gt; wherever you’d like to use it.&lt;/p&gt;
&lt;p&gt;To install the Sitrep command line tool, clone the repository and run &lt;code&gt;make install&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/twostraws/Sitrep
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; Sitrep
make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From now on you can use the &lt;code&gt;sitrep&lt;/code&gt; command to scan Swift projects.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-try-it-yourself" class="anchor" aria-hidden="true" href="#try-it-yourself"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try it yourself&lt;/h2&gt;
&lt;p&gt;Sitrep is written using Swift 5.1. You can either build and run the executable directly, or integrate the SitrepCore library into your own code.&lt;/p&gt;
&lt;p&gt;To build Sitrep, clone this repository and open Terminal in the repository root directory. Then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;swift build
swift run sitrep ~/path/to/your/project/root
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you would like to keep a copy of the &lt;code&gt;sitrep&lt;/code&gt; executable around, find it in the &lt;code&gt;.debug&lt;/code&gt; directory after running &lt;code&gt;swift build&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To run Sitrep from the command line just provide it with the name of a project directory to parse – it will locate all Swift files recursively from there. Alternatively, just using &lt;code&gt;sitrep&lt;/code&gt; by itself will scan the current directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guide" class="anchor" aria-hidden="true" href="#contribution-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution guide&lt;/h2&gt;
&lt;p&gt;Any help you can offer with this project is most welcome, and trust me: there are opportunities big and small, so that someone with only a small amount of Swift experience can help.&lt;/p&gt;
&lt;p&gt;Some suggestions you might want to explore:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Converting more of the tracked data (number of functions, parameters to functions, length of functions, etc) into reported data.&lt;/li&gt;
&lt;li&gt;Adding a sitrep.yml file that lets users configure how files are scanned, such as the ability to ignore certain directories, what kind of output is printed, or to enable stripped parsing of individual types using &lt;code&gt;BodyStripper&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Additional command-line options, such as whether to output JSON.&lt;/li&gt;
&lt;li&gt;Reading more data from the parsed files, and using it to calculate things such as cyclomatic complexity.&lt;/li&gt;
&lt;li&gt;Reading non-Swift data, such as number of storyboard scenes, number of outlets, number of assets in asset catalogs, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please ensure you write tests to accompany any code you contribute, and that SwiftLint returns no errors or warnings.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Sitrep was designed and built by Paul Hudson, and is copyright © Paul Hudson 2020. Sitrep is licensed under the Apache License v2.0 with Runtime Library Exception; for the full license please see the LICENSE file.&lt;/p&gt;
&lt;p&gt;Sitrep is built on top of Apple’s &lt;a href="https://github.com/apple/swift-syntax"&gt;SwiftSyntax&lt;/a&gt; library for parsing code, which is also available under the Apache License v2.0 with Runtime Library Exception.&lt;/p&gt;
&lt;p&gt;Swift, the Swift logo, and Xcode are trademarks of Apple Inc., registered in the U.S. and other countries.&lt;/p&gt;
&lt;p&gt;If you find Sitrep useful, you might find my website full of Swift tutorials equally useful: &lt;a href="https://www.hackingwithswift.com" rel="nofollow"&gt;Hacking with Swift&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>twostraws</author><guid isPermaLink="false">https://github.com/twostraws/Sitrep</guid><pubDate>Mon, 10 Feb 2020 00:01:00 GMT</pubDate></item><item><title>yanue/V2rayU #2 in Swift, Today</title><link>https://github.com/yanue/V2rayU</link><description>&lt;p&gt;&lt;i&gt;V2rayU,基于v2ray核心的mac版客户端,用于科学上网,使用swift编写,支持vmess,shadowsocks,socks5等服务协议,支持订阅, 支持二维码,剪贴板导入,手动配置,二维码分享等&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-v2rayu" class="anchor" aria-hidden="true" href="#v2rayu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;V2rayU&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yanue/V2rayU/blob/master/V2rayU/Assets.xcassets/AppIcon.appiconset/128.png?raw=true"&gt;&lt;img src="https://github.com/yanue/V2rayU/raw/master/V2rayU/Assets.xcassets/AppIcon.appiconset/128.png?raw=true" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;V2rayU 是一款v2ray mac客户端,用于科学上网,使用swift4.2编写,基于v2ray项目,支持vmess,shadowsocks,socks5等服务协议(推荐搭建&lt;strong&gt;v2ray服务&lt;/strong&gt;,可伪装成正常网站,防封锁), 支持二维码,剪贴板导入,手动配置,二维码分享等, 支持订阅, 项目地址: &lt;a href="https://github.com/yanue/V2rayU"&gt;https://github.com/yanue/V2rayU&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-主要特性" class="anchor" aria-hidden="true" href="#主要特性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;主要特性&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支持协议:&lt;/strong&gt; vmess:// 和 ss:// 和 ssr:// 协议,支持socks5协议&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持导入&lt;/strong&gt;: 支持二维码,粘贴板导入,本地文件及url导入&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持编辑&lt;/strong&gt;: 导入配置后可以手动更改配置信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;手动配置&lt;/strong&gt;: 支持在导入或未导入情况下手动配置主要参数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分享二维码&lt;/strong&gt;: 支持v2ray及shadowsocks协议格式分享&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主动更新&lt;/strong&gt;: 支持主动更新到最新版&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持模式&lt;/strong&gt;: 支持pac模式,手动代理模式,支持全局代理(有别于vpn,只是将代理信息更新到系统代理http,https,socks)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持4.0&lt;/strong&gt;: 支持手动切换到v2ray-core 4.0以上配置格式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持订阅&lt;/strong&gt;: &lt;span&gt;支持v2ray和ss及ssr订阅&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-下载安装" class="anchor" aria-hidden="true" href="#下载安装"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;下载安装&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;方式一: 使用homebrew命令安装&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;  brew cask install v2rayu
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;方式二: 下载最新版安装&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/yanue/V2rayU/releases"&gt;https://github.com/yanue/V2rayU/releases&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-v2ray简介" class="anchor" aria-hidden="true" href="#v2ray简介"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;v2ray简介&lt;/h3&gt;
&lt;p&gt;V2Ray 是 Project V 下的一个工具。Project V 包含一系列工具，帮助你打造专属的定制网络体系。而 V2Ray 属于最核心的一个。
简单地说，V2Ray 是一个与 Shadowsocks 类似的代理软件，但比Shadowsocks更具优势&lt;/p&gt;
&lt;p&gt;V2Ray 用户手册：&lt;a href="https://www.v2ray.com" rel="nofollow"&gt;https://www.v2ray.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;V2Ray 项目地址：&lt;a href="https://github.com/v2ray/v2ray-core"&gt;https://github.com/v2ray/v2ray-core&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-功能预览" class="anchor" aria-hidden="true" href="#功能预览"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;功能预览&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;
	&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yanue/V2rayU/blob/master/screenshot/menu.png?raw=true"&gt;&lt;img src="https://github.com/yanue/V2rayU/raw/master/screenshot/menu.png?raw=true" height="300" style="max-width:100%;"&gt;&lt;/a&gt; 
	&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yanue/V2rayU/blob/master/screenshot/share.png?raw=true"&gt;&lt;img src="https://github.com/yanue/V2rayU/raw/master/screenshot/share.png?raw=true" height="300" style="max-width:100%;"&gt;&lt;/a&gt; 
    &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yanue/V2rayU/blob/master/screenshot/about.png?raw=true"&gt;&lt;img src="https://github.com/yanue/V2rayU/raw/master/screenshot/about.png?raw=true" height="300" style="max-width:100%;"&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p&gt;
	&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yanue/V2rayU/blob/master/screenshot/import.png?raw=true"&gt;&lt;img src="https://github.com/yanue/V2rayU/raw/master/screenshot/import.png?raw=true" width="400" style="max-width:100%;"&gt;&lt;/a&gt; 
	&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yanue/V2rayU/blob/master/screenshot/manual.png?raw=true"&gt;&lt;img src="https://github.com/yanue/V2rayU/raw/master/screenshot/manual.png?raw=true" width="400" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
	&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yanue/V2rayU/blob/master/screenshot/general.png?raw=true"&gt;&lt;img src="https://github.com/yanue/V2rayU/raw/master/screenshot/general.png?raw=true" height="300" style="max-width:100%;"&gt;&lt;/a&gt; 
	&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yanue/V2rayU/blob/master/screenshot/advance.png?raw=true"&gt;&lt;img src="https://github.com/yanue/V2rayU/raw/master/screenshot/advance.png?raw=true" height="300" style="max-width:100%;"&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p&gt;
	&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yanue/V2rayU/blob/master/screenshot/subscribe.png?raw=true"&gt;&lt;img src="https://github.com/yanue/V2rayU/raw/master/screenshot/subscribe.png?raw=true" height="300" style="max-width:100%;"&gt;&lt;/a&gt; 
	&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yanue/V2rayU/blob/master/screenshot/pac.png?raw=true"&gt;&lt;img src="https://github.com/yanue/V2rayU/raw/master/screenshot/pac.png?raw=true" height="300" style="max-width:100%;"&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-v2ray服务器搭建推荐" class="anchor" aria-hidden="true" href="#v2ray服务器搭建推荐"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;v2ray服务器搭建推荐&lt;/h3&gt;
&lt;p&gt;v2ray配置指南: &lt;a href="https://toutyrater.github.io/" rel="nofollow"&gt;https://toutyrater.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Caddy+h2脚本: &lt;a href="https://github.com/dylanbai8/V2Ray_h2-tls_Website_onekey.git"&gt;https://github.com/dylanbai8/V2Ray_h2-tls_Website_onekey.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;v2ray模板: &lt;a href="https://github.com/KiriKira/vTemplate"&gt;https://github.com/KiriKira/vTemplate&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-代理模式" class="anchor" aria-hidden="true" href="#代理模式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代理模式&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;全局模式: 有别于vpn,只是将代理信息更新到系统代理http,https,socks,若需要真正全局模式, 推荐搭配使用Proxifier
rules模式: 浏览器推荐搭配使用Proxy SwitchyOmega
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-相关文件" class="anchor" aria-hidden="true" href="#相关文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;相关文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;v2ray-core文件: /Applications/V2rayU.app/Contents/Resources/v2ray-core
v2ray-core启动: ~/Library/LaunchAgents/yanue.v2rayu.v2ray-core.plist
v2ray-core日志: ~/Library/Logs/V2rayU.log
当前启动服务配置: /Applications/V2rayU.app/Contents/Resources/config.json
其他服务配置信息: ~/Library/Preferences/net.yanue.V2rayU.plist


如果启动无反应可以尝试从命令行手动启动,查看原因
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;cd /Applications/V2rayU.app/Contents/Resources/
./v2ray-core/v2ray -config ./config.json
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-相关问题" class="anchor" aria-hidden="true" href="#相关问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;相关问题&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. 闪退&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大多因为读取配置文件问题,删除以下文件重新配置即可&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt; ~/Library/Preferences/net.yanue.V2rayU.plist
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;另外, 可以通过 command + 空格 搜索 console.app , 打开后搜索 V2rayU 定位具体闪退错误日志&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 无法启动v2ray服务&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;多数情况为端口被占用,可以通过 show logs... 查看日志进行排查, 如端口被占用,请更改后重试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;3. 正常启动却无法翻墙访问&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;确保配置是正确的,然后确认启动的模式,在到网络-&amp;gt;高级里面查看是否写入对应的代理信息(manual模式需要配合浏览器插件使用)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;4. 报错: open config.json: no such file or directory&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;请严格按照 dmg 文件,拖动到 Applications 里面试下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-问题排查方法" class="anchor" aria-hidden="true" href="#问题排查方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;问题排查方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;不能使用&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如果之前有用过,更新或更改配置导致不能使用, 请彻底卸载试下,包含上面的相关文件(推荐使用appcleaner)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start="2"&gt;
&lt;li&gt;无法启动或启动后无法翻墙:&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;&lt;a id="user-content-a-检查配置是否正确主要是outbound和stream" class="anchor" aria-hidden="true" href="#a-检查配置是否正确主要是outbound和stream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;a. 检查配置是否正确(主要是outbound和stream)&lt;/h5&gt;
&lt;h5&gt;&lt;a id="user-content-b-查看日志" class="anchor" aria-hidden="true" href="#b-查看日志"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;b. 查看日志&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;	v2ray自身日志: V2rayU -&amp;gt; Show logs...
	V2rayU日志: command + 空格 搜索 console.app , 打开后搜索 V2rayU 定位错误日志
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-c-手动启动" class="anchor" aria-hidden="true" href="#c-手动启动"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;c. 手动启动&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;cd /Applications/V2rayU.app/Contents/Resources/
./v2ray-core/v2ray -config ./config.json
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-d-查看网络配置-启动v2rayu后查看-网络---高级---代理-是否生效" class="anchor" aria-hidden="true" href="#d-查看网络配置-启动v2rayu后查看-网络---高级---代理-是否生效"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;d. 查看网络配置: 启动V2rayU后查看: 网络 -&amp;gt; 高级 -&amp;gt; 代理 是否生效&lt;/h5&gt;
&lt;h5&gt;&lt;a id="user-content-e-以上都解决不了提交issue" class="anchor" aria-hidden="true" href="#e-以上都解决不了提交issue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;e. 以上都解决不了,提交issue&lt;/h5&gt;
&lt;h3&gt;&lt;a id="user-content-待实现功能" class="anchor" aria-hidden="true" href="#待实现功能"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;待实现功能:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;中文
路由规则配置
速度测试
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-欢迎贡献代码" class="anchor" aria-hidden="true" href="#欢迎贡献代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;欢迎贡献代码:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;1. fork 然后 git clone
2. pod install
3. 下载最新版v2ray-core,如: https://github.com/v2ray/v2ray-core/releases/download/v4.8.0/v2ray-macos.zip,解压到Build目录,重命名为v2ray-core
4. 运行xcode即可
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-软件使用问题" class="anchor" aria-hidden="true" href="#软件使用问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;软件使用问题&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;1. 安装包显示文件已损坏的解决方案: sudo spctl --master-disable
2. 如果启动后代理无效,请查看日志,入口: 菜单 -&amp;gt; Show logs...
3. 有其他问题请提issue
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-感谢" class="anchor" aria-hidden="true" href="#感谢"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;感谢&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;参考: ShadowsocksX-NG V2RayX
logo: @小文
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;GPLv3
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>yanue</author><guid isPermaLink="false">https://github.com/yanue/V2rayU</guid><pubDate>Mon, 10 Feb 2020 00:02:00 GMT</pubDate></item><item><title>ilyapuchka/URLFormat #3 in Swift, Today</title><link>https://github.com/ilyapuchka/URLFormat</link><description>&lt;p&gt;&lt;i&gt;Type safe url pattern matching without regular expressions and arguments type mismatches based on parser combinators.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-urlformat" class="anchor" aria-hidden="true" href="#urlformat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;URLFormat&lt;/h1&gt;
&lt;p&gt;Type safe url pattern matching without regular expressions and argument type mismatches based on parser combinators.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; format&lt;span class="pl-k"&gt;:&lt;/span&gt; URLFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;.&lt;span class="pl-smi"&gt;users&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;.&lt;span class="pl-smi"&gt;string&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;.&lt;span class="pl-smi"&gt;repos&lt;/span&gt;&lt;span class="pl-k"&gt;/?&lt;/span&gt;.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(.&lt;span class="pl-smi"&gt;string&lt;/span&gt;)&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;.&lt;span class="pl-c1"&gt;page&lt;/span&gt;(.&lt;span class="pl-c1"&gt;int&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLComponents&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/users/apple/repos/?filter=swift&amp;amp;page=2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLRequestComponents&lt;/span&gt;(&lt;span class="pl-c1"&gt;urlComponents&lt;/span&gt;: url)
&lt;span class="pl-k"&gt;let&lt;/span&gt; parameters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; format.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(request)

&lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;flatten&lt;/span&gt;(parameters) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ("apple", "swift", 2)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; format.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(parameters) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "users/apple/repos?filter=swift&amp;amp;page=2"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; format.&lt;span class="pl-c1"&gt;template&lt;/span&gt;(parameters) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "users/:String/repos?filter=:String&amp;amp;page=:Int"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This library is based on &lt;a href="https://github.com/ilyapuchka/common-parsers"&gt;CommonParsers&lt;/a&gt; which provides a common foundation for parser combinators and is heavily inspired by &lt;a href="https://github.com/pointfreeco/swift-parser-printer"&gt;swift-parser-printer&lt;/a&gt; from &lt;a href="https://twitter.com/pointfreeco" rel="nofollow"&gt;pointfreeco&lt;/a&gt;. If you want to learn more about &lt;a href="https://www.pointfree.co/episodes/ep62-parser-combinators-part-1" rel="nofollow"&gt;parser combinators&lt;/a&gt; and application of functional concepts in every day iOS development check out their &lt;a href="https://www.pointfree.co" rel="nofollow"&gt;blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;URLFormat is used in &lt;a href="https://github.com/ilyapuchka/SwiftNIOMock"&gt;SwiftNIOMock&lt;/a&gt; to implement URL router. Vapor extension will be published in the future (most likely as a separate repository).&lt;/p&gt;
&lt;p&gt;Also checkout &lt;a href="https://github.com/ilyapuchka/Interplate"&gt;Interplate&lt;/a&gt; which provides a foundation for string templates using parser combinators and string interpolation together.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;URLFormat is a URL builder that allows you to describe URL in a natural manner and allows you to pattern match it in a type safe way.&lt;/p&gt;
&lt;p&gt;Conventional way of represting URL patterns, i.e. for web server API routes, is using some kind of string placehoders for paramters, i.e. &lt;code&gt;/user/:name&lt;/code&gt;. This then is being parsed and path and query paramters are aggregated into collection. The issues is that this approach is error-prone (what if &lt;code&gt;:&lt;/code&gt; is missed) and access to the parameters is not type safe - it's possible to access parameters as a wrong type or convertion must be implemented by the client, and it's possible to access parameter by wrong key or index.&lt;/p&gt;
&lt;p&gt;Another approach that Swift allows is to use enums pattern matching, like described in &lt;a href="https://alisoftware.github.io/swift/pattern-matching/2015/08/23/urls-and-pattern-matching/" rel="nofollow"&gt;this post&lt;/a&gt; and implemented in &lt;a href="https://github.com/johnpatrickmorgan/URLPatterns"&gt;URLPatterns&lt;/a&gt;. While this approach allows type-safe access to parameters it's not very ergonomic and nice to read:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;n4&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;let&lt;/span&gt; userId, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;profile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;_&lt;/span&gt;) &lt;span class="pl-k"&gt;~=&lt;/span&gt; url.&lt;span class="pl-c1"&gt;countedPathElements&lt;/span&gt;() { &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another downside of this approach is that it only allows to extract parameters of the same type, so most of the time you would extract all of them as &lt;code&gt;String&lt;/code&gt; and convert to other types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;chat&lt;/span&gt;(&lt;span class="pl-c1"&gt;room&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;membersCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)

&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;n3&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;let&lt;/span&gt; room, &lt;span class="pl-k"&gt;let&lt;/span&gt; membersCount)&lt;span class="pl-k"&gt;:&lt;/span&gt;
  &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;chat&lt;/span&gt;(&lt;span class="pl-c1"&gt;room&lt;/span&gt;: room, &lt;span class="pl-c1"&gt;membersCount&lt;/span&gt;: number) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Cannot convert value of type 'String' to expected argument type 'Int'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Vapor routes are defined as a collection of path components:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;router.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-smi"&gt;parameter&lt;/span&gt;) { req &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; req.&lt;span class="pl-smi"&gt;parameters&lt;/span&gt;.&lt;span class="pl-c1"&gt;next&lt;/span&gt;(&lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;User #&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can as well use string placeholders for parameters:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;router.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { request &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; userName &lt;span class="pl-k"&gt;=&lt;/span&gt; request.&lt;span class="pl-smi"&gt;parameters&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;string&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; Abort.&lt;span class="pl-smi"&gt;badRequest&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;You requested User #&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;userName&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is nicer to write and read, but it's even less type safe - the parameters must be fetched in the order they appear in the path and their types should match but compiler won't ensure that and you would need to make sure that the pattern definition and parameters access are always in sync.&lt;/p&gt;
&lt;p&gt;You can't as well describe query parameters in the route, they instead are accessed in the route handler either via &lt;code&gt;request.data["key"]?.string&lt;/code&gt; or &lt;code&gt;request.query?["key"]?.stirng&lt;/code&gt; which is not type safe as well.&lt;/p&gt;
&lt;p&gt;With URLFormat you would describe URLs as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; urlFormat&lt;span class="pl-k"&gt;:&lt;/span&gt; URLFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;.&lt;span class="pl-smi"&gt;users&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;.&lt;span class="pl-smi"&gt;string&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;.&lt;span class="pl-smi"&gt;repos&lt;/span&gt;&lt;span class="pl-k"&gt;/?&lt;/span&gt;.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(.&lt;span class="pl-smi"&gt;string&lt;/span&gt;)&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;.&lt;span class="pl-c1"&gt;page&lt;/span&gt;(.&lt;span class="pl-c1"&gt;int&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLComponents&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/users/apple/repos/?filter=swift&amp;amp;page=2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLRequestComponents&lt;/span&gt;(&lt;span class="pl-c1"&gt;urlComponents&lt;/span&gt;: url)
&lt;span class="pl-k"&gt;let&lt;/span&gt; parameters &lt;span class="pl-k"&gt;=&lt;/span&gt; urlFormat.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(request)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;flatten&lt;/span&gt;(parameters)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ("apple", "swift", 2)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This patter will match URL with path like &lt;code&gt;/users/apple/repos/?filter=swift&amp;amp;page=1&lt;/code&gt; (first and last &lt;code&gt;/&lt;/code&gt; are optional). The fully qualified type of &lt;code&gt;urlFormat&lt;/code&gt; in this case would be  &lt;code&gt;ClosedQueryFormat&amp;lt;((String, String), Int)&amp;gt;&lt;/code&gt; (most of the time using base class type &lt;code&gt;URLFormat&lt;/code&gt; is sufficient). The type of generic parameter describes types of all captured parameters. To extract them from the actual URL you'd use &lt;code&gt;parse&lt;/code&gt; method and one of &lt;code&gt;flatten&lt;/code&gt; functions to "flatten" nested tuples, i.e. &lt;code&gt;((A, B), C) -&amp;gt; (A, B, C)&lt;/code&gt; which makes it more convenient to access parameters.&lt;/p&gt;
&lt;p&gt;Note that it's not necessary to specify a generic type parameter manually as compiler can infer it from the declaration&lt;sup id="user-content-a1"&gt;&lt;a href="#f1"&gt;1&lt;/a&gt;&lt;/sup&gt;. And compiler ensures that pattern and types of captured parameters are always in sync.&lt;/p&gt;
&lt;p&gt;A nice caveat is that &lt;code&gt;URLFormat&lt;/code&gt; can be used to print actual URLs and their readable templates if you provide it values for its parameters (again compiler makes sure that they are always in sync):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; parameters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;parenthesize&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;apple&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
urlFormat.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(parameters) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "users/apple/repos?filter=swift&amp;amp;page=2"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;urlFormat.&lt;span class="pl-c1"&gt;template&lt;/span&gt;(parameters) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "users/:String/repos?filter=:String&amp;amp;page=:Int"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that there are no string literals involved in declaring this URL except the first one. This is because under the hood &lt;code&gt;URLFormat&lt;/code&gt; implements &lt;code&gt;@dynamicMemberLookup&lt;/code&gt;, so expression like &lt;code&gt;.users&lt;/code&gt; is converted to the parser that parses &lt;code&gt;"users"&lt;/code&gt; string from the path components.&lt;/p&gt;
&lt;p&gt;You can either leave the first string component empty&lt;sup id="user-content-a2"&gt;&lt;a href="#f2"&gt;2&lt;/a&gt;&lt;/sup&gt; or use it to specify the HTTP method of the request if you use URLFormat with HTTP requests and not just URLs:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; urlFormat&lt;span class="pl-k"&gt;:&lt;/span&gt; URLFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GET&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;.&lt;span class="pl-smi"&gt;users&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;.&lt;span class="pl-smi"&gt;string&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;.&lt;span class="pl-smi"&gt;repos&lt;/span&gt;&lt;span class="pl-k"&gt;/?&lt;/span&gt;.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(.&lt;span class="pl-smi"&gt;string&lt;/span&gt;)&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;.&lt;span class="pl-c1"&gt;page&lt;/span&gt;(.&lt;span class="pl-c1"&gt;int&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLComponents&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/users/apple/repos/?filter=swift&amp;amp;page=2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLRequestComponents&lt;/span&gt;(&lt;span class="pl-c1"&gt;method&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GET&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;urlComponents&lt;/span&gt;: url)
&lt;span class="pl-k"&gt;let&lt;/span&gt; parameters &lt;span class="pl-k"&gt;=&lt;/span&gt; urlFormat.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(request)
urlFormat.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(parameters) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "GET users/apple/repos?filter=swift&amp;amp;page=2"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Path parameters are parsed using &lt;code&gt;.string&lt;/code&gt; and &lt;code&gt;.int&lt;/code&gt; operators. Query parameters are parsed with a combination of these operators and dynamic member lookup, so &lt;code&gt;.filter(.string)&lt;/code&gt; will parse a string query parameter named &lt;code&gt;"filter"&lt;/code&gt;, &lt;code&gt;.page(.int)&lt;/code&gt; will parse an integer query parameter named &lt;code&gt;"page"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;URLFormat also makes sure that URL is composed of path and query components correctly by allowing usage of &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;/?&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;*?&lt;/code&gt; operators only in the correct places. This is done by using different subclasses of &lt;code&gt;URLFormat&lt;/code&gt; to keep track of the builder state. It is similar to using phantom generic type parameters but allows to implement dynamic member lookup only for specific states of the builder.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-f1"&gt;1&lt;/a&gt;: an exeption here is when pattern does not capture any parameters, i.e. &lt;code&gt;_ = URLFormat&amp;lt;Prelude.Unit&amp;gt; = ""/.helloworld&lt;/code&gt; . &lt;code&gt;Prelude.Unit&lt;/code&gt; here is a type, similar to &lt;code&gt;Void&lt;/code&gt;, but unlike &lt;code&gt;Void&lt;/code&gt; it is an actual empty struct type. &lt;a href="#a1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-f2"&gt;2&lt;/a&gt;: String in the beginning of the pattern is needed because static &lt;code&gt;dynamicMemberLookup&lt;/code&gt; subscript calls can't be infered without explicitly specifying type in the beginning of expression (see &lt;a href="https://forums.swift.org/t/static-dynamicmemberlookup/33310/5" rel="nofollow"&gt;this discussion&lt;/a&gt; for details) &lt;a href="#a2"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-parameters-types" class="anchor" aria-hidden="true" href="#parameters-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parameters types&lt;/h2&gt;
&lt;p&gt;Following parameters types are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt; with &lt;code&gt;.string&lt;/code&gt; operator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Character&lt;/code&gt; with &lt;code&gt;.char&lt;/code&gt; operator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Int&lt;/code&gt; with &lt;code&gt;.int&lt;/code&gt; operator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Double&lt;/code&gt; with &lt;code&gt;.double&lt;/code&gt; operator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bool&lt;/code&gt; with &lt;code&gt;.bool&lt;/code&gt; operator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UUID&lt;/code&gt; with &lt;code&gt;.uuid&lt;/code&gt; operator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Any&lt;/code&gt; with &lt;code&gt;.any&lt;/code&gt; operator (unlike &lt;code&gt;*&lt;/code&gt; this will match only single path component, &lt;code&gt;*&lt;/code&gt; will capture all trailing path components into one string)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LosslessStringConvertible&lt;/code&gt; types with &lt;code&gt;lossless(MyType.self)&lt;/code&gt; operator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RawRepresentable&lt;/code&gt; with &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Character&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt; raw value types with &lt;code&gt;raw(MyType.self)&lt;/code&gt; operator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can add support for your own types by implementing &lt;code&gt;PartialIso&amp;lt;String, MyType&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;CommonParsers&lt;/span&gt;

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PartialIso&lt;/span&gt; &lt;span class="pl-k"&gt;where&lt;/span&gt; A &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, B &lt;span class="pl-k"&gt;==&lt;/span&gt; MyType {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; myType&lt;span class="pl-k"&gt;:&lt;/span&gt; PartialIso { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
}
&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;OpenPathFormat&lt;/span&gt; &lt;span class="pl-k"&gt;where&lt;/span&gt; A &lt;span class="pl-k"&gt;==&lt;/span&gt; Prelude.Unit {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; myType&lt;span class="pl-k"&gt;:&lt;/span&gt; ClosedPathFormat&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyType&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;ClosedPathFormat&lt;/span&gt;(parser &lt;span class="pl-k"&gt;%&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;path&lt;/span&gt;(.&lt;span class="pl-smi"&gt;myType&lt;/span&gt;))
    }
}
&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;OpenPathFormat&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; myType&lt;span class="pl-k"&gt;:&lt;/span&gt; ClosedPathFormat&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;(A, MyType)&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;ClosedPathFormat&lt;/span&gt;(parser &lt;span class="pl-k"&gt;&amp;lt;%&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;path&lt;/span&gt;(.&lt;span class="pl-smi"&gt;myType&lt;/span&gt;))
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With that you can use your type as a path or a query parameter:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;""/.users/.myType/.repos/?.filter(.myType)&amp;amp;.page(.int)&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-operators" class="anchor" aria-hidden="true" href="#operators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Operators&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;/&lt;/code&gt; - concatenates two path components
&lt;code&gt;/?&lt;/code&gt; - concatenates path with a query component
&lt;code&gt;&amp;amp;&lt;/code&gt; - concatenates two query components
&lt;code&gt;*&lt;/code&gt; - allows any trailing path components
&lt;code&gt;*?&lt;/code&gt; - concatenates path with any trailing path components and a query component&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/ilyapuchka/URLFormat.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;branch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;master&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ilyapuchka</author><guid isPermaLink="false">https://github.com/ilyapuchka/URLFormat</guid><pubDate>Mon, 10 Feb 2020 00:03:00 GMT</pubDate></item><item><title>apple/swift-syntax #4 in Swift, Today</title><link>https://github.com/apple/swift-syntax</link><description>&lt;p&gt;&lt;i&gt;SwiftPM package for SwiftSyntax library.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftsyntax" class="anchor" aria-hidden="true" href="#swiftsyntax"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftSyntax&lt;/h1&gt;
&lt;p&gt;SwiftSyntax is a set of Swift bindings for the
&lt;a href="https://github.com/apple/swift/tree/master/lib/Syntax"&gt;libSyntax&lt;/a&gt; library. It
allows for Swift tools to parse, inspect, generate, and transform Swift source
code.&lt;/p&gt;
&lt;p&gt;Its API is designed for performance critical applications. It uses value types almost exclusively and aims to avoid existential conversions where possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: SwiftSyntax is still in development, and the API is not guaranteed to
be stable. It's subject to change without warning.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-declare-swiftpm-dependency-with-release-tag" class="anchor" aria-hidden="true" href="#declare-swiftpm-dependency-with-release-tag"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Declare SwiftPM dependency with release tag&lt;/h3&gt;
&lt;p&gt;Add this repository to the &lt;code&gt;Package.swift&lt;/code&gt; manifest of your project:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:4.2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyTool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SwiftSyntax&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/apple/swift-syntax.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;exact&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;#Specify Release tag#&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),
  ],
  &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyTool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SwiftSyntax&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Replace &lt;code&gt;&amp;lt;#Specify Release tag#&amp;gt;&lt;/code&gt; by the version of SwiftSyntax that you want to use (see the following table for mapping details).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Xcode Release&lt;/th&gt;
&lt;th align="center"&gt;Swift Release Tag&lt;/th&gt;
&lt;th align="center"&gt;SwiftSyntax Release Tag&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Xcode 11.0&lt;/td&gt;
&lt;td align="center"&gt;swift-5.1-RELEASE&lt;/td&gt;
&lt;td align="center"&gt;0.50100.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Xcode 10.2&lt;/td&gt;
&lt;td align="center"&gt;swift-5.0-RELEASE&lt;/td&gt;
&lt;td align="center"&gt;0.50000.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Xcode 10.0&lt;/td&gt;
&lt;td align="center"&gt;swift-4.2-RELEASE&lt;/td&gt;
&lt;td align="center"&gt;0.40200.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Then, import &lt;code&gt;SwiftSyntax&lt;/code&gt; in your Swift code.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-declare-swiftpm-dependency-with-nightly-build" class="anchor" aria-hidden="true" href="#declare-swiftpm-dependency-with-nightly-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Declare SwiftPM dependency with nightly build&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download and install the latest Trunk Development (master) &lt;a href="https://swift.org/download/#snapshots" rel="nofollow"&gt;toolchain&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Define the &lt;code&gt;TOOLCHAINS&lt;/code&gt; environment variable as below to have the &lt;code&gt;swift&lt;/code&gt; command point inside the toolchain:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ export TOOLCHAINS=swift
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;To make sure everything is setup correctly, check the result of &lt;code&gt;xcrun --find swift&lt;/code&gt;. It should point inside the OSS toolchain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add this entry to the &lt;code&gt;Package.swift&lt;/code&gt; manifest of your project:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:4.2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyTool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/apple/swift-syntax.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;revision&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;swift-DEVELOPMENT-SNAPSHOT-2019-02-26&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),
  ],
  &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyTool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SwiftSyntax&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tags will be created for every nightly build in the form of &lt;code&gt;swift-DEVELOPMENT-SNAPSHOT-&amp;lt;DATE&amp;gt;&lt;/code&gt;. Revision field
should be specified with the intended tag.&lt;/p&gt;
&lt;p&gt;Different from building SwiftSyntax from source, declaring SwiftSyntax as a SwiftPM dependency doesn't require
the Swift compiler source because we always push gyb-generated files to a tag.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-some-example-users" class="anchor" aria-hidden="true" href="#some-example-users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some Example Users&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://swift-ast-explorer.kishikawakatsumi.com/" rel="nofollow"&gt;&lt;strong&gt;Swift AST Explorer&lt;/strong&gt;&lt;/a&gt;: a Swift AST visualizer.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/apple/swift-format"&gt;&lt;strong&gt;swift-format&lt;/strong&gt;&lt;/a&gt;: formatting technology for Swift source code.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/apple/swift-stress-tester"&gt;&lt;strong&gt;Swift Stress Tester&lt;/strong&gt;&lt;/a&gt;: a test driver for sourcekitd and Swift evolution.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/SwiftDocOrg/SwiftSemantics"&gt;&lt;strong&gt;SwiftSemantics&lt;/strong&gt;&lt;/a&gt;: parses Swift code into its constituent declarations.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/inamiy/SwiftRewriter"&gt;&lt;strong&gt;SwiftRewriter&lt;/strong&gt;&lt;/a&gt;: a Swift code formatter.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/omochi/SwiftPack"&gt;&lt;strong&gt;SwiftPack&lt;/strong&gt;&lt;/a&gt;: a tool for automatically embedding Swift library source.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/peripheryapp/periphery"&gt;&lt;strong&gt;Periphery&lt;/strong&gt;&lt;/a&gt;: a tool to detect unused code.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Flinesoft/BartyCrouch"&gt;&lt;strong&gt;BartyCrouch&lt;/strong&gt;&lt;/a&gt;: a tool to incrementally update strings files to help App localization.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/muter-mutation-testing/muter"&gt;&lt;strong&gt;Muter&lt;/strong&gt;&lt;/a&gt;: Automated mutation testing for Swift&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/LucianoPAlmeida/variable-injector"&gt;&lt;strong&gt;Swift Variable Injector&lt;/strong&gt;&lt;/a&gt;: a tool to replace string literals with environment variables values.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/woshiccm/Pecker"&gt;&lt;strong&gt;Pecker&lt;/strong&gt;&lt;/a&gt;: a tool to detect unused code based on &lt;a href="https://github.com/apple/swift-syntax.git"&gt;SwiftSyntax&lt;/a&gt; and &lt;a href="https://github.com/apple/indexstore-db.git"&gt;IndexStoreDB&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/uber/piranha"&gt;&lt;strong&gt;Piranha&lt;/strong&gt;&lt;/a&gt;: a tool for refactoring code related to feature flags.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-issues" class="anchor" aria-hidden="true" href="#reporting-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Issues&lt;/h3&gt;
&lt;p&gt;If you should hit any issues while using SwiftSyntax, we appreciate bug reports on &lt;a href="https://bugs.swift.org" rel="nofollow"&gt;bugs.swift.org&lt;/a&gt; in the &lt;a href="https://bugs.swift.org/issues/?jql=component%20%3D%20SwiftSyntax" rel="nofollow"&gt;SwiftSyntax component&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-building-swiftsyntax-from-master" class="anchor" aria-hidden="true" href="#building-swiftsyntax-from-master"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building SwiftSyntax from &lt;code&gt;master&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Since SwiftSyntax relies on definitions in the main Swift repository to generate the layout of the syntax tree using &lt;code&gt;gyb&lt;/code&gt;, a checkout of &lt;a href="https://github.com/apple/swift"&gt;apple/swift&lt;/a&gt; is still required to build &lt;code&gt;master&lt;/code&gt; of SwiftSyntax.&lt;/p&gt;
&lt;p&gt;To build the &lt;code&gt;master&lt;/code&gt; version of SwiftSyntax, follow the following instructions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Check &lt;code&gt;swift-syntax&lt;/code&gt; and  &lt;code&gt;swift&lt;/code&gt; out side by side:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;- (enclosing directory)
  - swift
  - swift-syntax
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Make sure you have a recent &lt;a href="https://swift.org/download/#snapshots" rel="nofollow"&gt;master Swift toolchain&lt;/a&gt; installed.&lt;/li&gt;
&lt;li&gt;Define the &lt;code&gt;TOOLCHAINS&lt;/code&gt; environment variable as below to have the &lt;code&gt;swift&lt;/code&gt; command point inside the toolchain:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ export TOOLCHAINS=swift
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="4"&gt;
&lt;li&gt;To make sure everything is setup correctly, check the return statement of &lt;code&gt;xcrun --find swift&lt;/code&gt;. It should point inside the latest installed master toolchain. If it points inside an Xcode toolchain, check that you exported the &lt;code&gt;TOOLCHAINS&lt;/code&gt; environment variable correctly. If it points inside a version specific toolchain (like Swift 5.0-dev), you'll need to remove that toolchain.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;swift-syntax/build-script.py&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If, despite following those instructions, you get compiler errors, the Swift toolchain might be too old to contain recent changes in Swift's SwiftSyntaxParser C library. In that case, you'll have to build the compiler and SwiftSyntax together with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ swift/utils/build-script --swiftsyntax --swiftpm --llbuild
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Swift-CI will automatically run the code generation step whenever a new toolchain (development snapshot or release) is published. It should thus almost never be necessary to perform the above build yourself.&lt;/p&gt;
&lt;p&gt;Afterwards, SwiftPM can also generate an Xcode project to develop SwiftSyntax by running &lt;code&gt;swift package generate-xcodeproj&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you also want to run tests locally, read the section below as testing has additional requirements.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-local-testing" class="anchor" aria-hidden="true" href="#local-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Testing&lt;/h3&gt;
&lt;p&gt;SwiftSyntax uses some test utilities that need to be built as part of the Swift compiler project. To build the most recent version of SwiftSyntax and test it, follow the steps in &lt;a href="https://github.com/apple/swift/blob/master/README.md"&gt;swift/README.md&lt;/a&gt; and pass &lt;code&gt;--llbuild --swiftpm --swiftsyntax&lt;/code&gt; to the build script invocation to build SwiftSyntax and all its dependencies using the current &lt;code&gt;master&lt;/code&gt; compiler.&lt;/p&gt;
&lt;p&gt;SwiftSyntax can then be tested using the build script in &lt;code&gt;apple/swift&lt;/code&gt; by running&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;swift/utils/build-script --swiftsyntax --swiftpm --llbuild -t --skip-test-cmark --skip-test-swift --skip-test-llbuild --skip-test-swiftpm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This command will build SwiftSyntax and all its dependencies, tell the build script to run tests, but skip all tests but the SwiftSyntax tests.&lt;/p&gt;
&lt;p&gt;Note that it is not currently supported to SwiftSyntax while building the Swift compiler using Xcode.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ci-testing" class="anchor" aria-hidden="true" href="#ci-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CI Testing&lt;/h3&gt;
&lt;p&gt;Running &lt;code&gt;@swift-ci Please test&lt;/code&gt; on the main Swift repository will also test the most recent version of SwiftSyntax.&lt;/p&gt;
&lt;p&gt;Testing SwiftSyntax from its own repository is now available by commenting &lt;code&gt;@swift-ci Please test macOS platform&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;This is a program that adds 1 to every integer literal in a Swift file.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SwiftSyntax&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Foundation&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; AddOneToIntegerLiterals will visit each token in the Syntax tree, and&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; (if it is an integer literal token) add 1 to the integer and return the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; new integer literal token.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AddOneToIntegerLiterals&lt;/span&gt;: &lt;span class="pl-e"&gt;SyntaxRewriter &lt;/span&gt;{
  &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;visit&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;token&lt;/span&gt;: TokenSyntax) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Syntax {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only transform integer literals.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;integerLiteral&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; text) &lt;span class="pl-k"&gt;=&lt;/span&gt; token.&lt;span class="pl-smi"&gt;tokenKind&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; {
      &lt;span class="pl-k"&gt;return&lt;/span&gt; token
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Remove underscores from the original text.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; integerText &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;(text.&lt;span class="pl-c1"&gt;filter&lt;/span&gt; { (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;9&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) })

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Parse out the integer.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; int &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;(integerText)&lt;span class="pl-k"&gt;!&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Return a new integer literal token with `int + 1` as its text.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; token.&lt;span class="pl-c1"&gt;withKind&lt;/span&gt;(.&lt;span class="pl-c1"&gt;integerLiteral&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;int &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
  }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; file &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CommandLine&lt;/span&gt;.&lt;span class="pl-c1"&gt;arguments&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;fileURLWithPath&lt;/span&gt;: file)
&lt;span class="pl-k"&gt;let&lt;/span&gt; sourceFile &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; SyntaxParser.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(url)
&lt;span class="pl-k"&gt;let&lt;/span&gt; incremented &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AddOneToIntegerLiterals&lt;/span&gt;().&lt;span class="pl-c1"&gt;visit&lt;/span&gt;(sourceFile)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(incremented)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example turns this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; y &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3_000&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;into:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; y &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3001&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift-syntax</guid><pubDate>Mon, 10 Feb 2020 00:04:00 GMT</pubDate></item><item><title>groue/GRDB.swift #5 in Swift, Today</title><link>https://github.com/groue/GRDB.swift</link><description>&lt;p&gt;&lt;i&gt;A toolkit for SQLite databases, with a focus on application development&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/groue/GRDB.swift/master/GRDB.png"&gt;&lt;img src="https://raw.githubusercontent.com/groue/GRDB.swift/master/GRDB.png" alt="GRDB: A toolkit for SQLite databases, with a focus on application development" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;strong&gt;A toolkit for SQLite databases, with a focus on application development&lt;/strong&gt;&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img alt="Swift 4.2" src="https://camo.githubusercontent.com/7deaf2fd442ddfbdc28a7dc3ce67f067a59618a0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d342e322d6f72616e67652e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/swift-4.2-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img alt="Swift 5" src="https://camo.githubusercontent.com/c71f82ee3309bc14cc904fb1a628903768e1ac39/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352d6f72616e67652e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/swift-5-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img alt="Platforms" src="https://camo.githubusercontent.com/0b596e48758a762e966c41ea71cb4eeab1b3588c/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f475244422e73776966742e737667" data-canonical-src="https://img.shields.io/cocoapods/p/GRDB.swift.svg" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/groue/GRDB.swift/blob/master/LICENSE"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/7436c9380b0004504c50be20057c7759b100fc5d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f67726f75652f475244422e73776966742e7376673f6d61784167653d32353932303030" data-canonical-src="https://img.shields.io/github/license/groue/GRDB.swift.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://travis-ci.org/groue/GRDB.swift" rel="nofollow"&gt;&lt;img alt="Build Status" src="https://camo.githubusercontent.com/7454ea95706b4541a19f4e7b2183204cc9c5529e/68747470733a2f2f7472617669732d63692e6f72672f67726f75652f475244422e73776966742e7376673f6272616e63683d6d6173746572" data-canonical-src="https://travis-ci.org/groue/GRDB.swift.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Latest release&lt;/strong&gt;: January 17, 2020 • version 4.9.0 • &lt;a href="CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt; • &lt;a href="Documentation/GRDB3MigrationGuide.md"&gt;Migrating From GRDB 3 to GRDB 4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;: iOS 9.0+ / macOS 10.9+ / tvOS 9.0+ / watchOS 2.0+ • Swift 4.2+ / Xcode 10.0+&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Swift version&lt;/th&gt;
&lt;th&gt;GRDB version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Swift 5&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;v4.9.0&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Swift 4.2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;v4.9.0&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 4.1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v3.7.0"&gt;v3.7.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 4&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v2.10.0"&gt;v2.10.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 3.2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v1.3.0"&gt;v1.3.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 3.1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v1.3.0"&gt;v1.3.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v1.0"&gt;v1.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 2.3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v0.81.2"&gt;v0.81.2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 2.2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v0.80.2"&gt;v0.80.2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Contact&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Release announcements and usage tips: follow &lt;a href="http://twitter.com/groue" rel="nofollow"&gt;@groue&lt;/a&gt; on Twitter.&lt;/li&gt;
&lt;li&gt;Report bugs in a &lt;a href="https://github.com/groue/GRDB.swift/issues/new"&gt;Github issue&lt;/a&gt;. Make sure you check the &lt;a href="https://github.com/groue/GRDB.swift/issues?q=is%3Aopen"&gt;existing issues&lt;/a&gt; first.&lt;/li&gt;
&lt;li&gt;A question? Looking for advice? Do you wonder how to contribute? Fancy a chat? Go to the &lt;a href="https://forums.swift.org/c/related-projects/grdb" rel="nofollow"&gt;GRDB forums&lt;/a&gt;, or open a &lt;a href="https://github.com/groue/GRDB.swift/issues/new"&gt;Github issue&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-this" class="anchor" aria-hidden="true" href="#what-is-this"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is this?&lt;/h2&gt;
&lt;p&gt;GRDB provides raw access to SQL and advanced SQLite features, because one sometimes enjoys a sharp tool. It has robust concurrency primitives, so that multi-threaded applications can efficiently use their databases. It grants your application models with persistence and fetching methods, so that you don't have to deal with SQL and raw database rows when you don't want to.&lt;/p&gt;
&lt;p&gt;Compared to &lt;a href="http://github.com/stephencelis/SQLite.swift"&gt;SQLite.swift&lt;/a&gt; or &lt;a href="http://github.com/ccgus/fmdb"&gt;FMDB&lt;/a&gt;, GRDB can spare you a lot of glue code. Compared to &lt;a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/CoreData/" rel="nofollow"&gt;Core Data&lt;/a&gt; or &lt;a href="http://realm.io" rel="nofollow"&gt;Realm&lt;/a&gt;, it can simplify your multi-threaded applications.&lt;/p&gt;
&lt;p&gt;It comes with &lt;a href="#documentation"&gt;up-to-date documentation&lt;/a&gt;, &lt;a href="#general-guides--good-practices"&gt;general guides&lt;/a&gt;, and it is &lt;a href="https://github.com/groue/GRDB.swift/wiki/Performance"&gt;fast&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/WhyAdoptGRDB.md"&gt;Why Adopt GRDB?&lt;/a&gt; if you are looking for your favorite database library.&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;
    &lt;a href="#features"&gt;Features&lt;/a&gt; •
    &lt;a href="#usage"&gt;Usage&lt;/a&gt; •
    &lt;a href="#installation"&gt;Installation&lt;/a&gt; •
    &lt;a href="#documentation"&gt;Documentation&lt;/a&gt; •
    &lt;a href="#demo-application"&gt;Demo Application&lt;/a&gt; •
    &lt;a href="#faq"&gt;FAQ&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;GRDB ships with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sqlite-api"&gt;Access to raw SQL and SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#records"&gt;Records&lt;/a&gt;: Fetching and persistence methods for your custom structs and class hierarchies.&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-query-interface"&gt;Query Interface&lt;/a&gt;: A swift way to avoid the SQL language.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;: Relations and joins between record types.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-pools"&gt;WAL Mode Support&lt;/a&gt;: Extra performance for multi-threaded applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="#migrations"&gt;Migrations&lt;/a&gt;: Transform your database as your application evolves.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-changes-observation"&gt;Database Observation&lt;/a&gt;: Observe database changes and transactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/FullTextSearch.md"&gt;Full-Text Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#encryption"&gt;Encryption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;Support for Custom SQLite Builds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Companion libraries that enhance and extend GRDB:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;: track database changes in a reactive way, with &lt;a href="https://developer.apple.com/documentation/combine" rel="nofollow"&gt;Combine&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;: track database changes in a reactive way, with &lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRDBObjc"&gt;GRDBObjc&lt;/a&gt;: FMDB-compatible bindings to GRDB.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;details open=""&gt;
  &lt;summary&gt;Connect to an SQLite database&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Simple database connection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Enhanced multithreading based on SQLite's WAL mode&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#database-connections"&gt;Database Connections&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Execute SQL statements&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        CREATE TABLE place (&lt;/span&gt;
&lt;span class="pl-s"&gt;          id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-s"&gt;          title TEXT NOT NULL,&lt;/span&gt;
&lt;span class="pl-s"&gt;          favorite BOOLEAN NOT NULL DEFAULT 0,&lt;/span&gt;
&lt;span class="pl-s"&gt;          latitude DOUBLE NOT NULL,&lt;/span&gt;
&lt;span class="pl-s"&gt;          longitude DOUBLE NOT NULL)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)

    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        INSERT INTO place (title, favorite, latitude, longitude)&lt;/span&gt;
&lt;span class="pl-s"&gt;        VALUES (?, ?, ?, ?)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paris&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;48.85341&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.3488&lt;/span&gt;])
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; parisId &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-smi"&gt;lastInsertedRowID&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5 only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        INSERT INTO place (title, favorite, latitude, longitude)&lt;/span&gt;
&lt;span class="pl-s"&gt;        VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Madrid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;40.41678&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;-3.70379&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#executing-updates"&gt;Executing Updates&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Fetch database rows and values&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch database rows&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch values&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeTitles &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT title FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [String]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetch-queries"&gt;Fetch Queries&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Store custom models aka "records"&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; snip: turn Place into a "record" by adopting the protocols that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; provide fetching and persistence methods.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create database table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
        t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;boolean&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    }
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; berlin &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Berlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;isFavorite&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;coordinate&lt;/span&gt;: &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(&lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;52.52437&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;13.41053&lt;/span&gt;))
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; berlin.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    berlin.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    berlin.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; berlin.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#records"&gt;Records&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Fetch records and values with the Swift query interface&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Place?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Place?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; berlin &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Berlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Place]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; favoritePlaces &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
        .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; favoriteCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL is always welcome&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;a href="#the-query-interface"&gt;Query Interface&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Be notified of database changes&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}
observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh places could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    onChange&lt;span class="pl-k"&gt;:&lt;/span&gt; { (&lt;span class="pl-c1"&gt;places&lt;/span&gt;: [Place]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Places have changed.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#database-changes-observation"&gt;Database Changes Observation&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;GRDB runs on top of SQLite&lt;/strong&gt;: you should get familiar with the &lt;a href="http://www.sqlite.org/faq.html" rel="nofollow"&gt;SQLite FAQ&lt;/a&gt;. For general and detailed information, jump to the &lt;a href="http://www.sqlite.org/docs.html" rel="nofollow"&gt;SQLite Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/index.html" rel="nofollow"&gt;GRDB Reference&lt;/a&gt; (generated by &lt;a href="https://github.com/realm/jazzy"&gt;Jazzy&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demo-application"&gt;Demo Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-connections"&gt;Database Connections&lt;/a&gt;: Connect to SQLite databases&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sqlite-and-sql" class="anchor" aria-hidden="true" href="#sqlite-and-sql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite and SQL&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sqlite-api"&gt;SQLite API&lt;/a&gt;: The low-level SQLite API • &lt;a href="#executing-updates"&gt;executing updates&lt;/a&gt; • &lt;a href="#fetch-queries"&gt;fetch queries&lt;/a&gt; • &lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-records-and-the-query-interface" class="anchor" aria-hidden="true" href="#records-and-the-query-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Records and the Query Interface&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#records"&gt;Records&lt;/a&gt;: Fetching and persistence methods for your custom structs and class hierarchies&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-query-interface"&gt;Query Interface&lt;/a&gt;: A swift way to generate SQL • &lt;a href="#database-schema"&gt;table creation&lt;/a&gt; • &lt;a href="#requests"&gt;requests&lt;/a&gt; • &lt;a href="Documentation/AssociationsBasics.md"&gt;associations between record types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-application-tools" class="anchor" aria-hidden="true" href="#application-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Application Tools&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#migrations"&gt;Migrations&lt;/a&gt;: Transform your database as your application evolves.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/FullTextSearch.md"&gt;Full-Text Search&lt;/a&gt;: Perform efficient and customizable full-text searches.&lt;/li&gt;
&lt;li&gt;&lt;a href="#joined-queries-support"&gt;Joined Queries Support&lt;/a&gt;: Consume complex joined queries.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-changes-observation"&gt;Database Changes Observation&lt;/a&gt;: Observe database changes and transactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="#encryption"&gt;Encryption&lt;/a&gt;: Encrypt your database with SQLCipher.&lt;/li&gt;
&lt;li&gt;&lt;a href="#backup"&gt;Backup&lt;/a&gt;: Dump the content of a database to another.&lt;/li&gt;
&lt;li&gt;&lt;a href="#interrupt-a-database"&gt;Interrupt a Database&lt;/a&gt;: Abort any pending database operation.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/AppGroupContainers.md"&gt;App Group Containers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-good-to-know" class="anchor" aria-hidden="true" href="#good-to-know"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Good to Know&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#avoiding-sql-injection"&gt;Avoiding SQL Injection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unicode"&gt;Unicode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#memory-management"&gt;Memory Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-protection"&gt;Data Protection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#performance"&gt;Performance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-general-guides--good-practices" class="anchor" aria-hidden="true" href="#general-guides--good-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General Guides &amp;amp; Good Practices&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;a href="Documentation/GoodPracticesForDesigningRecordTypes.md"&gt;Good Practices for Designing Record Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;a href="Documentation/GRDB3MigrationGuide.md"&gt;Migrating From GRDB 3 to GRDB 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;a href="https://github.com/groue/GRDB.swift/issues?q=is%3Aissue+label%3A%22best+practices%22"&gt;Issues tagged "best practices"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2753.png"&gt;❓&lt;/g-emoji&gt; &lt;a href="https://github.com/groue/GRDB.swift/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20label%3Aquestion"&gt;Issues tagged "question"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;📘&lt;/g-emoji&gt; &lt;a href="Documentation/WhyAdoptGRDB.md"&gt;Why Adopt GRDB?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;📘&lt;/g-emoji&gt; &lt;a href="https://medium.com/@gwendal.roue/how-to-build-an-ios-application-with-sqlite-and-grdb-swift-d023a06c29b3" rel="nofollow"&gt;How to build an iOS application with SQLite and GRDB.swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;📘&lt;/g-emoji&gt; &lt;a href="https://medium.com/@gwendal.roue/four-different-ways-to-handle-sqlite-concurrency-db3bcc74d00e" rel="nofollow"&gt;Four different ways to handle SQLite concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;📘&lt;/g-emoji&gt; &lt;a href="https://hackernoon.com/unexpected-sqlite-with-swift-ddc6343bcbfc" rel="nofollow"&gt;Unexpected SQLite with Swift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#sample-code"&gt;Sample Code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;The installation procedures below have GRDB use the version of SQLite that ships with the target operating system.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="#encryption"&gt;Encryption&lt;/a&gt; for the installation procedure of GRDB with SQLCipher.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;Custom SQLite builds&lt;/a&gt; for the installation procedure of GRDB with a customized build of SQLite 3.28.0.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/FullTextSearch.md#enabling-fts5-support"&gt;Enabling FTS5 Support&lt;/a&gt; for the installation procedure of GRDB with support for the FTS5 full-text engine.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Xcode projects. To use GRDB with CocoaPods (version 1.2 or higher), specify in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB can be installed as a framework, or a static library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; automates the distribution of Swift code. To use GRDB with SPM, add a dependency to your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/groue/GRDB.swift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: Linux is not currently supported.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: Due to an Xcode bug, you will get "No such module 'CSQLite'" errors when you want to embed the GRDB package in other targets than the main application (watch extensions, for example). UI and Unit testing targets are OK, though. See &lt;a href="https://github.com/groue/GRDB.swift/issues/642#issuecomment-575994093"&gt;#642&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is &lt;strong&gt;unsupported&lt;/strong&gt;. For some context about this decision, see &lt;a href="https://github.com/groue/GRDB.swift/issues/433"&gt;#433&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/groue/GRDB.swift/releases"&gt;Download&lt;/a&gt; a copy of GRDB, or clone its repository and make sure you checkout the latest tagged version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embed the &lt;code&gt;GRDB.xcodeproj&lt;/code&gt; project in your own project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;code&gt;GRDBOSX&lt;/code&gt;, &lt;code&gt;GRDBiOS&lt;/code&gt;, &lt;code&gt;GRDBtvOS&lt;/code&gt;, or &lt;code&gt;GRDBWatchOS&lt;/code&gt; target in the &lt;strong&gt;Target Dependencies&lt;/strong&gt; section of the &lt;strong&gt;Build Phases&lt;/strong&gt; tab of your application target (extension target for WatchOS).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;code&gt;GRDB.framework&lt;/code&gt; from the targetted platform to the &lt;strong&gt;Embedded Binaries&lt;/strong&gt; section of the &lt;strong&gt;General&lt;/strong&gt;  tab of your application target (extension target for WatchOS).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for an example of such integration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-demo-application" class="anchor" aria-hidden="true" href="#demo-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo Application&lt;/h1&gt;
&lt;p&gt;The repository comes with a &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; that shows you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to setup a database in an iOS app&lt;/li&gt;
&lt;li&gt;how to define a simple &lt;a href="#codable-records"&gt;Codable Record&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;how to track database changes with &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-database-connections" class="anchor" aria-hidden="true" href="#database-connections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Connections&lt;/h1&gt;
&lt;p&gt;GRDB provides two classes for accessing SQLite databases: &lt;code&gt;DatabaseQueue&lt;/code&gt; and &lt;code&gt;DatabasePool&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Pick one:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The differences are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Database pools allow concurrent database accesses (this can improve the performance of multithreaded applications).&lt;/li&gt;
&lt;li&gt;Database pools open your SQLite database in the &lt;a href="https://www.sqlite.org/wal.html" rel="nofollow"&gt;WAL mode&lt;/a&gt; (unless read-only).&lt;/li&gt;
&lt;li&gt;Database queues support &lt;a href="https://www.sqlite.org/inmemorydb.html" rel="nofollow"&gt;in-memory databases&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If you are not sure, choose DatabaseQueue.&lt;/strong&gt; You will always be able to switch to DatabasePool later.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#database-queues"&gt;Database Queues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-pools"&gt;Database Pools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-database-queues" class="anchor" aria-hidden="true" href="#database-queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Queues&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Open a database queue&lt;/strong&gt; with the path to a database file:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; inMemoryDBQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite creates the database file if it does not already exist. The connection is closed when the database queue gets deallocated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A database queue can be used from any thread.&lt;/strong&gt; The &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; methods are synchronous, and block the current thread until your database statements are executed in a protected dispatch queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Modify the database:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read values:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Database access methods can return values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; newPlaceCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;A database queue serializes accesses to the database&lt;/strong&gt;, which means that there is never more than one thread that uses the database.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When you don't need to modify the database, prefer the &lt;code&gt;read&lt;/code&gt; method. It prevents any modification to the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;write&lt;/code&gt; method wraps your database statements in a transaction that commits if and only if no error occurs. On the first unhandled error, all changes are reverted, the whole transaction is rollbacked, and the error is rethrown.&lt;/p&gt;
&lt;p&gt;When precise transaction handling is required, see &lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;A database queue needs your application to follow rules in order to deliver its safety guarantees.&lt;/strong&gt; Please refer to the &lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt; chapter.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample code that sets up a database queue on iOS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-databasequeue-configuration" class="anchor" aria-hidden="true" href="#databasequeue-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseQueue Configuration&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
config.&lt;span class="pl-smi"&gt;foreignKeysEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default is already true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;trace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) }     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all SQL statements&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;label&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyDatabase&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Useful when your app opens multiple databases&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/Configuration.html" rel="nofollow"&gt;Configuration&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-database-pools" class="anchor" aria-hidden="true" href="#database-pools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Pools&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;A database pool allows concurrent database accesses.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite creates the database file if it does not already exist. The connection is closed when the database pool gets deallocated.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: unless read-only, a database pool opens your database in the SQLite "WAL mode". The WAL mode does not fit all situations. Please have a look at &lt;a href="https://www.sqlite.org/wal.html" rel="nofollow"&gt;https://www.sqlite.org/wal.html&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;A database pool can be used from any thread.&lt;/strong&gt; The &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; methods are synchronous, and block the current thread until your database statements are executed in a protected dispatch queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Modify the database:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read values:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Database access methods can return values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; newPlaceCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Database pools allow several threads to access the database at the same time:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When you don't need to modify the database, prefer the &lt;code&gt;read&lt;/code&gt; method, because several threads can perform reads in parallel.&lt;/p&gt;
&lt;p&gt;Reads are generally non-blocking, unless the maximum number of concurrent reads has been reached. In this case, a read has to wait for another read to complete. That maximum number can be &lt;a href="#databasepool-configuration"&gt;configured&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reads are guaranteed an immutable view of the last committed state of the database, regardless of concurrent writes. This kind of isolation is called &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;snapshot isolation&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unlike reads, writes are serialized. There is never more than a single thread that is writing into the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;write&lt;/code&gt; method wraps your database statements in a transaction that commits if and only if no error occurs. On the first unhandled error, all changes are reverted, the whole transaction is rollbacked, and the error is rethrown.&lt;/p&gt;
&lt;p&gt;When precise transaction handling is required, see &lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Database pools can take &lt;a href="#database-snapshots"&gt;snapshots&lt;/a&gt; of the database.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;A database pool needs your application to follow rules in order to deliver its safety guarantees.&lt;/strong&gt; See the &lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt; chapter for more details about database pools, how they differ from database queues, and advanced use cases.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample code that sets up a database queue on iOS, and just replace DatabaseQueue with DatabasePool.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-databasepool-configuration" class="anchor" aria-hidden="true" href="#databasepool-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabasePool Configuration&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
config.&lt;span class="pl-smi"&gt;foreignKeysEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default is already true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;trace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) }     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all SQL statements&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;label&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyDatabase&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Useful when your app opens multiple databases&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;maximumReaderCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The default is 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/Configuration.html" rel="nofollow"&gt;Configuration&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Database pools are more memory-hungry than database queues. See &lt;a href="#memory-management"&gt;Memory Management&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sqlite-api" class="anchor" aria-hidden="true" href="#sqlite-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite API&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;In this section of the documentation, we will talk SQL.&lt;/strong&gt; Jump to the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt; if SQL is not your cup of tea.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#executing-updates"&gt;Executing Updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetch-queries"&gt;Fetch Queries&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetching-methods"&gt;Fetching Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#row-queries"&gt;Row Queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#value-queries"&gt;Value Queries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#values"&gt;Values&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#data-and-memory-savings"&gt;Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#date-and-datecomponents"&gt;Date and DateComponents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nsnumber-and-nsdecimalnumber"&gt;NSNumber and NSDecimalNumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-enums"&gt;Swift enums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-value-types"&gt;Custom Value Types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advanced topics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#prepared-statements"&gt;Prepared Statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-sql-functions-and-aggregates"&gt;Custom SQL Functions and Aggregates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-schema-introspection"&gt;Database Schema Introspection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#row-adapters"&gt;Row Adapters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#raw-sqlite-pointers"&gt;Raw SQLite Pointers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-executing-updates" class="anchor" aria-hidden="true" href="#executing-updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Executing Updates&lt;/h2&gt;
&lt;p&gt;Once granted with a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;, the &lt;code&gt;execute&lt;/code&gt; method executes the SQL statements that do not return any database row, such as &lt;code&gt;CREATE TABLE&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;ALTER&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        CREATE TABLE player (&lt;/span&gt;
&lt;span class="pl-s"&gt;            id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-s"&gt;            name TEXT NOT NULL,&lt;/span&gt;
&lt;span class="pl-s"&gt;            score INT)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, score) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET score = :score WHERE id = :id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;])
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;?&lt;/code&gt; and colon-prefixed keys like &lt;code&gt;:score&lt;/code&gt; in the SQL query are the &lt;strong&gt;statements arguments&lt;/strong&gt;. You pass arguments with arrays or dictionaries, as in the example above. See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported arguments types (Bool, Int, String, Date, Swift enums, etc.), and &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt; for a detailed documentation of SQLite arguments.&lt;/p&gt;
&lt;p&gt;In Swift 5, you can embed query arguments right into your SQL queries, with the &lt;code&gt;literal&lt;/code&gt; argument label, as in the example below. See &lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        INSERT INTO player (name, score)&lt;/span&gt;
&lt;span class="pl-s"&gt;        VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;O'Brien&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;550&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Never ever embed values directly in your raw SQL strings&lt;/strong&gt;. See &lt;a href="#avoiding-sql-injection"&gt;Avoiding SQL Injection&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WRONG: don't embed values in raw SQL strings&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = '&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;' WHERE id = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;id&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: use SQL Interpolation (Swift 5)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; WHERE id = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;id&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: use arguments dictionary&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = :name WHERE id = :id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; name, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; id])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: use arguments array&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = ? WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [name, id])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Join multiple statements with a semicolon&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (?, ?);&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (?, ?);&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;750&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;750&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;);&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;);&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to make sure that a single statement is executed, use &lt;a href="#prepared-statements"&gt;Prepared Statements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;After an INSERT statement&lt;/strong&gt;, you can get the row ID of the inserted row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, score) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; playerId &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-smi"&gt;lastInsertedRowID&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't miss &lt;a href="#records"&gt;Records&lt;/a&gt;, that provide classic &lt;strong&gt;persistence methods&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
&lt;span class="pl-k"&gt;let&lt;/span&gt; playerId &lt;span class="pl-k"&gt;=&lt;/span&gt; player.&lt;span class="pl-smi"&gt;id&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-fetch-queries" class="anchor" aria-hidden="true" href="#fetch-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetch Queries&lt;/h2&gt;
&lt;p&gt;&lt;a href="#database-connections"&gt;Database connections&lt;/a&gt; let you fetch database rows, plain values, and custom models aka "records".&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rows&lt;/strong&gt; are the raw results of SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]) {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name, color)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Values&lt;/strong&gt; are the Bool, Int, String, Date, Swift enums, etc. stored in row columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; urls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; URL.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; urls.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(url)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Records&lt;/strong&gt; are your application objects that can initialize themselves from rows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetching-methods"&gt;Fetching Methods&lt;/a&gt; and &lt;a href="#cursors"&gt;Cursors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#row-queries"&gt;Row Queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#value-queries"&gt;Value Queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#records"&gt;Records&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-fetching-methods" class="anchor" aria-hidden="true" href="#fetching-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Methods&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Throughout GRDB&lt;/strong&gt;, you can always fetch &lt;em&gt;cursors&lt;/em&gt;, &lt;em&gt;arrays&lt;/em&gt;, or &lt;em&gt;single values&lt;/em&gt; of any fetchable type (database &lt;a href="#row-queries"&gt;row&lt;/a&gt;, simple &lt;a href="#value-queries"&gt;value&lt;/a&gt;, or custom &lt;a href="#records"&gt;record&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Row]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fetchCursor&lt;/code&gt; returns a &lt;strong&gt;&lt;a href="#cursors"&gt;cursor&lt;/a&gt;&lt;/strong&gt; over fetched values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fetchAll&lt;/code&gt; returns an &lt;strong&gt;array&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fetchOne&lt;/code&gt; returns a &lt;strong&gt;single optional value&lt;/strong&gt;, and consumes a single database row (if any).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cursors" class="anchor" aria-hidden="true" href="#cursors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cursors&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Whenever you consume several rows from the database, you can fetch an Array, or a Cursor&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fetchAll()&lt;/code&gt; method returns a regular Swift array, that you iterate like all other arrays:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unlike arrays, cursors returned by &lt;code&gt;fetchCursor()&lt;/code&gt; load their results step after step:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Cursor of Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; players.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both arrays and cursors can iterate over database results. How do you choose one or the other? Look at the differences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors can not be used on any thread&lt;/strong&gt;: you must consume a cursor on the dispatch queue it was created in. Particularly, don't extract a cursor out of a database access method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wrong&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; cursor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; cursor.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() { &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Conversely, arrays may be consumed on any thread:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; OK&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; array &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; array { &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors can be iterated only one time.&lt;/strong&gt; Arrays can be iterated many times.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors iterate database results in a lazy fashion&lt;/strong&gt;, and don't consume much memory. Arrays contain copies of database values, and may take a lot of memory when there are many fetched results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors are granted with direct access to SQLite,&lt;/strong&gt; unlike arrays that have to take the time to copy database values. If you look after extra performance, you may prefer cursors over arrays.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors adopt the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Protocols/Cursor.html" rel="nofollow"&gt;Cursor&lt;/a&gt; protocol, which looks a lot like standard &lt;a href="https://developer.apple.com/reference/swift/lazysequenceprotocol" rel="nofollow"&gt;lazy sequences&lt;/a&gt; of Swift.&lt;/strong&gt; As such, cursors come with many convenience methods: &lt;code&gt;compactMap&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;dropFirst&lt;/code&gt;, &lt;code&gt;dropLast&lt;/code&gt;, &lt;code&gt;drop(while:)&lt;/code&gt;, &lt;code&gt;enumerated&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;forEach&lt;/code&gt;, &lt;code&gt;joined&lt;/code&gt;, &lt;code&gt;joined(separator:)&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;max(by:)&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;min(by:)&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;prefix(while:)&lt;/code&gt;, &lt;code&gt;reduce&lt;/code&gt;, &lt;code&gt;reduce(into:)&lt;/code&gt;, &lt;code&gt;suffix&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all Github links&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; URL
    .&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt; { url &lt;span class="pl-k"&gt;in&lt;/span&gt; url.&lt;span class="pl-smi"&gt;host&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    .&lt;span class="pl-c1"&gt;forEach&lt;/span&gt; { url &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(url) }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; An efficient cursor of coordinates:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; locations &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.
    .&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT latitude, longitude FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;map&lt;/span&gt; { row &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(&lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;])
    }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Turn cursors into arrays or sets:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; array &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(cursor)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Set&lt;/span&gt;(cursor)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors are not Swift sequences.&lt;/strong&gt; That's because Swift sequences can't handle iteration errors, when reading SQLite results may fail at any time. SQL functions may throw errors. On iOS, &lt;a href="#data-protection"&gt;data protection&lt;/a&gt; may block access to the database file in the background. On macOS, your application users may mess with the file system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors require a little care&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Don't modify the results during a cursor iteration:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Undefined behavior&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; players.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DELETE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don't turn a cursor of &lt;code&gt;Row&lt;/code&gt; into an array. You would not get the distinct rows you expect. To get a array of rows, use &lt;code&gt;Row.fetchAll(...)&lt;/code&gt;. Generally speaking, make sure you copy a row whenever you extract it from a cursor for later use: &lt;code&gt;row.copy()&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you don't see, or don't care about the difference, use arrays. If you care about memory and performance, use cursors when appropriate.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-row-queries" class="anchor" aria-hidden="true" href="#row-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Row Queries&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetching-rows"&gt;Fetching Rows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#column-values"&gt;Column Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rows-as-dictionaries"&gt;Rows as Dictionaries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-fetching-rows" class="anchor" aria-hidden="true" href="#fetching-rows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Rows&lt;/h4&gt;
&lt;p&gt;Fetch &lt;strong&gt;cursors&lt;/strong&gt; of rows, &lt;strong&gt;arrays&lt;/strong&gt;, or &lt;strong&gt;single&lt;/strong&gt; rows (see &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Row]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name, color)
    }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments are optional arrays or dictionaries that fill the positional &lt;code&gt;?&lt;/code&gt; and colon-prefixed keys like &lt;code&gt;:name&lt;/code&gt; in the query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name = :name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported arguments types (Bool, Int, String, Date, Swift enums, etc.), and &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt; for a detailed documentation of SQLite arguments.&lt;/p&gt;
&lt;p&gt;Unlike row arrays that contain copies of the database rows, row cursors are close to the SQLite metal, and require a little care:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Don't turn a cursor of &lt;code&gt;Row&lt;/code&gt; into an array&lt;/strong&gt;. You would not get the distinct rows you expect. To get a array of rows, use &lt;code&gt;Row.fetchAll(...)&lt;/code&gt;. Generally speaking, make sure you copy a row whenever you extract it from a cursor for later use: &lt;code&gt;row.copy()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-column-values" class="anchor" aria-hidden="true" href="#column-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Column Values&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Read column values&lt;/strong&gt; by index or column name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0 is the leftmost column&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Leftmost matching column - lookup is case-insensitive&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Using query interface's Column&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure to ask for an optional when the value may be NULL:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;row[]&lt;/code&gt; subscript returns the type you ask for. See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported value types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount64&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; hasBooks&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false when 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; string&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "2015-09-11 18:14:15.123"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date&lt;span class="pl-k"&gt;:&lt;/span&gt; Date         &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Depends on the type of the property.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use the &lt;code&gt;as&lt;/code&gt; type casting operator:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: avoid the &lt;code&gt;as!&lt;/code&gt; and &lt;code&gt;as?&lt;/code&gt; operators:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; int &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as?&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BAD - doesn't work&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; int &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; GOOD&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Generally speaking, you can extract the type you need, provided it can be converted from the underlying SQLite value:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Successful conversions include:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All numeric SQLite values to all numeric Swift types, and Bool (zero is the only false boolean).&lt;/li&gt;
&lt;li&gt;Text SQLite values to Swift String.&lt;/li&gt;
&lt;li&gt;Blob SQLite values to Foundation Data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported types (Bool, Int, String, Date, Swift enums, etc.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NULL returns nil.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT NULL&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert NULL to Int.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is one exception, though: the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseValue &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DatabaseValue.null&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Missing columns return nil.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'foo' AS foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;missing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;missing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: no such column: missing&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can explicitly check for a column presence with the &lt;code&gt;hasColumn&lt;/code&gt; method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Invalid conversions throw a fatal error.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Mom’s birthday'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Mom’s birthday"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Date&lt;span class="pl-k"&gt;?&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "Mom’s birthday" to Date.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Date   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "Mom’s birthday" to Date.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 256&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 256&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert 256 to UInt8.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert 256 to UInt8.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those conversion fatal errors can be avoided with the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Mom’s birthday'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle invalid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This extra verbosity is the consequence of having to deal with an untrusted database: you may consider fixing the content of your database instead. See &lt;a href="#fatal-errors"&gt;Fatal Errors&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SQLite has a weak type system, and provides &lt;a href="https://www.sqlite.org/c3ref/column_blob.html" rel="nofollow"&gt;convenience conversions&lt;/a&gt; that can turn String to Int, Double to Blob, etc.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GRDB will sometimes let those conversions go through:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT '20 small cigars'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 20&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't freak out: those conversions did not prevent SQLite from becoming the immensely successful database engine you want to use. And GRDB adds safety checks described just above. You can also prevent those convenience conversions altogether by using the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-databasevalue" class="anchor" aria-hidden="true" href="#databasevalue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseValue&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;DatabaseValue is an intermediate type between SQLite and your values, which gives information about the raw value stored in the database.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You get DatabaseValue just like other value types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil if and only if column does not exist&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Check for NULL:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The stored value:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int64, Double, String, Data, or nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All the five storage classes supported by SQLite:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;switch&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt; {
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;null&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;                 &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NULL&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;int64&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; int64)&lt;span class="pl-k"&gt;:&lt;/span&gt;     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Int64: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;int64&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;double&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; double)&lt;span class="pl-k"&gt;:&lt;/span&gt;   &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Double: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;double&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;string&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; string)&lt;span class="pl-k"&gt;:&lt;/span&gt;   &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;String: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;string&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;blob&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; data)&lt;span class="pl-k"&gt;:&lt;/span&gt;       &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Data: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;data&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can extract regular &lt;a href="#values"&gt;values&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.) from DatabaseValue with the &lt;a href="#custom-value-types"&gt;DatabaseValueConvertible.fromDatabaseValue()&lt;/a&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount64 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int64?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasBooks    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool?, false when 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "2015-09-11 18:14:15.123"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date   &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Date?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;fromDatabaseValue&lt;/code&gt; returns nil for invalid conversions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Mom’s birthday'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Mom’s birthday"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; int    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date   &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-rows-as-dictionaries" class="anchor" aria-hidden="true" href="#rows-as-dictionaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rows as Dictionaries&lt;/h4&gt;
&lt;p&gt;Row adopts the standard &lt;a href="https://developer.apple.com/documentation/swift/randomaccesscollection" rel="nofollow"&gt;RandomAccessCollection&lt;/a&gt; protocol, and can be seen as a dictionary of &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All the (columnName, dbValue) tuples, from left to right:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; (columnName, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; row {
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;You can build rows from dictionaries&lt;/strong&gt; (standard Swift dictionaries and NSDictionary). See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row&lt;span class="pl-k"&gt;:&lt;/span&gt; Row &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Row&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Row&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; [AnyHashable: Any] &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil if invalid dictionary&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet rows are not real dictionaries: they may contain duplicate columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 1 AS foo, 2 AS foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row.&lt;span class="pl-smi"&gt;columnNames&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ["foo", "foo"]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;databaseValues&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1 (leftmost matching column)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; (columnName, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; row { &lt;span class="pl-k"&gt;...&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ("foo", 1), ("foo", 2)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When you build a dictionary from a row&lt;/strong&gt;, you have to disambiguate identical columns, and choose how to present database values. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;[String: DatabaseValue]&lt;/code&gt; dictionary that keeps leftmost value in case of duplicated column name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dict &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dictionary&lt;/span&gt;(row, &lt;span class="pl-c1"&gt;uniquingKeysWith&lt;/span&gt;: { (left, &lt;span class="pl-c1"&gt;_&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt; left })&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;[String: AnyObject]&lt;/code&gt; dictionary which keeps rightmost value in case of duplicated column name. This dictionary is identical to FMResultSet's resultDictionary from FMDB. It contains NSNull values for null columns, and can be shared with Objective-C:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dict &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dictionary&lt;/span&gt;(
    row.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { (column, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        (column, dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;AnyObject&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;uniquingKeysWith&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;_&lt;/span&gt;, right) &lt;span class="pl-k"&gt;in&lt;/span&gt; right })&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;[String: Any]&lt;/code&gt; dictionary that can feed, for example, JSONSerialization:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dict &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dictionary&lt;/span&gt;(
    row.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { (column, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        (column, dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;uniquingKeysWith&lt;/span&gt;: { (left, &lt;span class="pl-c1"&gt;_&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt; left })&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the documentation of &lt;a href="https://developer.apple.com/documentation/swift/dictionary/2892961-init" rel="nofollow"&gt;&lt;code&gt;Dictionary.init(_:uniquingKeysWith:)&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-value-queries" class="anchor" aria-hidden="true" href="#value-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Value Queries&lt;/h3&gt;
&lt;p&gt;Instead of rows, you can directly fetch &lt;strong&gt;&lt;a href="#values"&gt;values&lt;/a&gt;&lt;/strong&gt;. Like rows, fetch them as &lt;strong&gt;cursors&lt;/strong&gt;, &lt;strong&gt;arrays&lt;/strong&gt;, or &lt;strong&gt;single&lt;/strong&gt; values (see &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt;). Values are extracted from the leftmost column of the SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Int]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When database may contain NULL:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Optional&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Optional&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Int?]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;fetchOne&lt;/code&gt; returns an optional value which is nil in two cases: either the SELECT statement yielded no row, or one row with a NULL value.&lt;/p&gt;
&lt;p&gt;There are many supported value types (Bool, Int, String, Date, Swift enums, etc.). See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; urls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; URL.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [URL]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-values" class="anchor" aria-hidden="true" href="#values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Values&lt;/h2&gt;
&lt;p&gt;GRDB ships with built-in support for the following value types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Swift Standard Library&lt;/strong&gt;: Bool, Double, Float, all signed and unsigned integer types, String, &lt;a href="#swift-enums"&gt;Swift enums&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Foundation&lt;/strong&gt;: &lt;a href="#data-and-memory-savings"&gt;Data&lt;/a&gt;, &lt;a href="#date-and-datecomponents"&gt;Date&lt;/a&gt;, &lt;a href="#date-and-datecomponents"&gt;DateComponents&lt;/a&gt;, NSNull, &lt;a href="#nsnumber-and-nsdecimalnumber"&gt;NSNumber&lt;/a&gt;, NSString, URL, &lt;a href="#uuid"&gt;UUID&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CoreGraphics&lt;/strong&gt;: CGFloat.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;&lt;/strong&gt;, the type which gives information about the raw value stored in the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Full-Text Patterns&lt;/strong&gt;: &lt;a href="Documentation/FullTextSearch.md#fts3pattern"&gt;FTS3Pattern&lt;/a&gt; and &lt;a href="Documentation/FullTextSearch.md#fts5pattern"&gt;FTS5Pattern&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generally speaking, all types that adopt the &lt;a href="#custom-value-types"&gt;DatabaseValueConvertible&lt;/a&gt; protocol.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Values can be used as &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/StatementArguments.html" rel="nofollow"&gt;statement arguments&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; verified&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO link (url, verified) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [url, verified])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Values can be &lt;a href="#column-values"&gt;extracted from rows&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; verified&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;verified&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Values can be &lt;a href="#value-queries"&gt;directly fetched&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; urls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; URL.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [URL]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use values in &lt;a href="#records"&gt;Records&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Link&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isVerified&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        url &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        isVerified &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;verified&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use values in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; link &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Link.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; url).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-data-and-memory-savings" class="anchor" aria-hidden="true" href="#data-and-memory-savings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data (and Memory Savings)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt; suits the BLOB SQLite columns. It can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT data, ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; data&lt;span class="pl-k"&gt;:&lt;/span&gt; Data &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At each step of the request iteration, the &lt;code&gt;row[]&lt;/code&gt; subscript creates &lt;em&gt;two copies&lt;/em&gt; of the database bytes: one fetched by SQLite, and another, stored in the Swift Data value.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You have the opportunity to save memory&lt;/strong&gt; by not copying the data fetched by SQLite:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; row.&lt;span class="pl-c1"&gt;dataNoCopy&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Data?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The non-copied data does not live longer than the iteration step: make sure that you do not use it past this point.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-date-and-datecomponents" class="anchor" aria-hidden="true" href="#date-and-datecomponents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date and DateComponents&lt;/h3&gt;
&lt;p&gt;&lt;a href="#date"&gt;&lt;strong&gt;Date&lt;/strong&gt;&lt;/a&gt; and &lt;a href="#datecomponents"&gt;&lt;strong&gt;DateComponents&lt;/strong&gt;&lt;/a&gt; can be stored and fetched from the database.&lt;/p&gt;
&lt;p&gt;Here is how GRDB supports the various &lt;a href="https://www.sqlite.org/lang_datefunc.html" rel="nofollow"&gt;date formats&lt;/a&gt; supported by SQLite:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;SQLite format&lt;/th&gt;
&lt;th align="center"&gt;Date&lt;/th&gt;
&lt;th align="center"&gt;DateComponents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD HH:MM&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD HH:MM:SS&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD HH:MM:SS.SSS&lt;/td&gt;
&lt;td align="center"&gt;Read/Write ¹&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;strong&gt;T&lt;/strong&gt;HH:MM&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;strong&gt;T&lt;/strong&gt;HH:MM:SS&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;strong&gt;T&lt;/strong&gt;HH:MM:SS.SSS&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;HH:MM&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;HH:MM:SS&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;HH:MM:SS.SSS&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Timestamps since unix epoch&lt;/td&gt;
&lt;td align="center"&gt;Read ²&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;now&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;¹ Dates are stored and read in the UTC time zone. Missing components are assumed to be zero.&lt;/p&gt;
&lt;p&gt;² GRDB 2+ interprets numerical values as timestamps that fuel &lt;code&gt;Date(timeIntervalSince1970:)&lt;/code&gt;. Previous GRDB versions used to interpret numbers as &lt;a href="https://en.wikipedia.org/wiki/Julian_day" rel="nofollow"&gt;julian days&lt;/a&gt;. Julian days are still supported, with the &lt;code&gt;Date(julianDay:)&lt;/code&gt; initializer.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-date" class="anchor" aria-hidden="true" href="#date"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Date&lt;/strong&gt; can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (creationDate, ...) VALUES (?, ...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;Date&lt;/span&gt;(), &lt;span class="pl-k"&gt;...&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; creationDate&lt;span class="pl-k"&gt;:&lt;/span&gt; Date &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;creationDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dates are stored using the format "YYYY-MM-DD HH:MM:SS.SSS" in the UTC time zone. It is precise to the millisecond.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: this format was chosen because it is the only format that is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Comparable (&lt;code&gt;ORDER BY date&lt;/code&gt; works)&lt;/li&gt;
&lt;li&gt;Comparable with the SQLite keyword CURRENT_TIMESTAMP (&lt;code&gt;WHERE date &amp;gt; CURRENT_TIMESTAMP&lt;/code&gt; works)&lt;/li&gt;
&lt;li&gt;Able to feed &lt;a href="https://www.sqlite.org/lang_datefunc.html" rel="nofollow"&gt;SQLite date &amp;amp; time functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Precise enough&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;When the default format does not fit your needs, customize date conversions. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (creationDate, ...) VALUES (?, ...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;Date&lt;/span&gt;().&lt;span class="pl-smi"&gt;timeIntervalSinceReferenceDate&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; creationDate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;timeIntervalSinceReferenceDate&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;creationDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more date customization options.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-datecomponents" class="anchor" aria-hidden="true" href="#datecomponents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DateComponents&lt;/h4&gt;
&lt;p&gt;DateComponents is indirectly supported, through the &lt;strong&gt;DatabaseDateComponents&lt;/strong&gt; helper type.&lt;/p&gt;
&lt;p&gt;DatabaseDateComponents reads date components from all &lt;a href="https://www.sqlite.org/lang_datefunc.html" rel="nofollow"&gt;date formats supported by SQLite&lt;/a&gt;, and stores them in the format of your choice, from HH:MM to YYYY-MM-DD HH:MM:SS.SSS.&lt;/p&gt;
&lt;p&gt;DatabaseDateComponents can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; components &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateComponents&lt;/span&gt;()
components.&lt;span class="pl-smi"&gt;year&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1973&lt;/span&gt;
components.&lt;span class="pl-smi"&gt;month&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;9&lt;/span&gt;
components.&lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Store "1973-09-18"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbComponents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseDateComponents&lt;/span&gt;(components, &lt;span class="pl-c1"&gt;format&lt;/span&gt;: .&lt;span class="pl-smi"&gt;YMD&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (birthDate, ...) VALUES (?, ...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [dbComponents, &lt;span class="pl-k"&gt;...&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read "1973-09-18"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT birthDate ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbComponents&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseDateComponents &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;birthDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
dbComponents.&lt;span class="pl-smi"&gt;format&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; .YMD (the actual format found in the database)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbComponents.&lt;span class="pl-smi"&gt;dateComponents&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DateComponents&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-nsnumber-and-nsdecimalnumber" class="anchor" aria-hidden="true" href="#nsnumber-and-nsdecimalnumber"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NSNumber and NSDecimalNumber&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NSNumber&lt;/strong&gt; can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;. Floating point NSNumbers are stored as Double. Integer and boolean, as Int64. Integers that don't fit Int64 won't be stored: you'll get a fatal error instead. Be cautious when an NSNumber contains an UInt64, for example.&lt;/p&gt;
&lt;p&gt;NSDecimalNumber deserves a longer discussion:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQLite has no support for decimal numbers.&lt;/strong&gt; Given the table below, SQLite will actually store integers or doubles:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;transfer&lt;/span&gt; (
    amount &lt;span class="pl-k"&gt;DECIMAL&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; will store integer or double, actually&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This means that computations will not be exact:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO transfer (amount) VALUES (0.1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO transfer (amount) VALUES (0.2)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; sum &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; NSDecimalNumber.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT SUM(amount) FROM transfer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Yikes! 0.3000000000000000512&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt;(sum)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't blame SQLite or GRDB, and instead store your decimal numbers differently.&lt;/p&gt;
&lt;p&gt;A classic technique is to store &lt;em&gt;integers&lt;/em&gt; instead, since SQLite performs exact computations of integers. For example, don't store Euros, but store cents instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Write&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; amount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSDecimalNumber&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; integerAmount &lt;span class="pl-k"&gt;=&lt;/span&gt; amount.&lt;span class="pl-c1"&gt;multiplying&lt;/span&gt;(&lt;span class="pl-c1"&gt;byPowerOf10&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;).&lt;span class="pl-smi"&gt;int64Value&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO transfer (amount) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [integerAmount])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; integerAmount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT SUM(amount) FROM transfer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; amount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSDecimalNumber&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: integerAmount).&lt;span class="pl-c1"&gt;multiplying&lt;/span&gt;(&lt;span class="pl-c1"&gt;byPowerOf10&lt;/span&gt;: &lt;span class="pl-c1"&gt;-2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0.10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-uuid" class="anchor" aria-hidden="true" href="#uuid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UUID&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;UUID&lt;/strong&gt; can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;GRDB stores uuids as 16-bytes data blobs, and decodes them from both 16-bytes data blobs and strings such as "E621E1F8-C36C-495A-93FC-0C247A3E6E5F".&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-enums" class="anchor" aria-hidden="true" href="#swift-enums"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Enums&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Swift enums&lt;/strong&gt; and generally all types that adopt the &lt;a href="https://developer.apple.com/library/tvos/documentation/Swift/Reference/Swift_RawRepresentable_Protocol/index.html" rel="nofollow"&gt;RawRepresentable&lt;/a&gt; protocol can be stored and fetched from the database just like their raw &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Color&lt;/span&gt; : &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;red&lt;/span&gt;, &lt;span class="pl-c1"&gt;white&lt;/span&gt;, &lt;span class="pl-c1"&gt;rose&lt;/span&gt;
}

&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Grape&lt;/span&gt; : &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;chardonnay&lt;/span&gt;, &lt;span class="pl-c1"&gt;merlot&lt;/span&gt;, &lt;span class="pl-c1"&gt;riesling&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Declare empty DatabaseValueConvertible adoption&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Color&lt;/span&gt; : &lt;span class="pl-e"&gt;DatabaseValueConvertible &lt;/span&gt;{ }
&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Grape&lt;/span&gt; : &lt;span class="pl-e"&gt;DatabaseValueConvertible &lt;/span&gt;{ }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Store&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO wine (grape, color) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [Grape.&lt;span class="pl-smi"&gt;merlot&lt;/span&gt;, Color.&lt;span class="pl-smi"&gt;red&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; grape&lt;span class="pl-k"&gt;:&lt;/span&gt; Grape &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;grape&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When a database value does not match any enum case&lt;/strong&gt;, you get a fatal error. This fatal error can be avoided with the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'syrah'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;

row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "syrah"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Grape&lt;span class="pl-k"&gt;?&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "syrah" to Grape.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Grape   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "syrah" to Grape.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; grape &lt;span class="pl-k"&gt;=&lt;/span&gt; Grape.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid grape&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle unknown grape&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-value-types" class="anchor" aria-hidden="true" href="#custom-value-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Value Types&lt;/h3&gt;
&lt;p&gt;Conversion to and from the database is based on the &lt;code&gt;DatabaseValueConvertible&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;DatabaseValueConvertible&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a value that can be stored in the database.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a value initialized from dbValue, if possible.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fromDatabaseValue&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;dbValue&lt;/span&gt;: DatabaseValue) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Self&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All types that adopt this protocol can be used like all other &lt;a href="#values"&gt;values&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.)&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;databaseValue&lt;/code&gt; property returns &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;, a type that wraps the five values supported by SQLite: NULL, Int64, Double, String and Data. Since DatabaseValue has no public initializer, use &lt;code&gt;DatabaseValue.null&lt;/code&gt;, or another type that already adopts the protocol: &lt;code&gt;1.databaseValue&lt;/code&gt;, &lt;code&gt;"foo".databaseValue&lt;/code&gt;, etc. Conversion to DatabaseValue &lt;em&gt;must not&lt;/em&gt; fail.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fromDatabaseValue()&lt;/code&gt; factory method returns an instance of your custom type if the database value contains a suitable value. If the database value does not contain a suitable value, such as "foo" for Date, &lt;code&gt;fromDatabaseValue&lt;/code&gt; &lt;em&gt;must&lt;/em&gt; return nil (GRDB will interpret this nil result as a conversion error, and react accordingly).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-transactions-and-savepoints" class="anchor" aria-hidden="true" href="#transactions-and-savepoints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transactions and Savepoints&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#transactions-and-safety"&gt;Transactions and Safety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#explicit-transactions"&gt;Explicit Transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#savepoints"&gt;Savepoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#transaction-kinds"&gt;Transaction Kinds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-transactions-and-safety" class="anchor" aria-hidden="true" href="#transactions-and-safety"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transactions and Safety&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;A transaction&lt;/strong&gt; is a fundamental tool of SQLite that guarantees &lt;a href="https://www.sqlite.org/transactional.html" rel="nofollow"&gt;data consistency&lt;/a&gt; as well as &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;proper isolation&lt;/a&gt; between application threads and database connections.&lt;/p&gt;
&lt;p&gt;GRDB generally opens transactions for you, as a way to enforce its &lt;a href="#concurrency"&gt;concurrency guarantees&lt;/a&gt;, and provide maximal security for both your application data and application logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet you may need to exactly control when transactions take place:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-explicit-transactions" class="anchor" aria-hidden="true" href="#explicit-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Explicit Transactions&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;DatabaseQueue.inDatabase()&lt;/code&gt; and &lt;code&gt;DatabasePool.writeWithoutTransaction()&lt;/code&gt; execute your database statements outside of any transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Writing outside of any transaction is dangerous,&lt;/strong&gt; for two reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In our credit/debit example, you may successfully insert a credit, but fail inserting the debit, and end up with unbalanced accounts (oops).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE DATABASE INTEGRITY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; may succeed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; may fail&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transactions avoid this kind of bug.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#database-pools"&gt;Database pool&lt;/a&gt; concurrent reads can see an inconsistent state of the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Concurrent dbPool.read sees a partial db update here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transactions avoid this kind of bug, too.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To open explicit transactions, use one of the &lt;code&gt;Database.inTransaction&lt;/code&gt;, &lt;code&gt;DatabaseQueue.inTransaction&lt;/code&gt;, or &lt;code&gt;DatabasePool.writeInTransaction&lt;/code&gt; methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeInTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If an error is thrown from the transaction block, the transaction is rollbacked and the error is rethrown by the &lt;code&gt;inTransaction&lt;/code&gt; method. If you return &lt;code&gt;.rollback&lt;/code&gt; instead of &lt;code&gt;.commit&lt;/code&gt;, the transaction is also rollbacked, but no error is thrown.&lt;/p&gt;
&lt;p&gt;You can also perform manual transaction management:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;beginTransaction&lt;/span&gt;()
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;commit&lt;/span&gt;()
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BEGIN TRANSACTION&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ROLLBACK&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transactions can't be left opened unless you set the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/Configuration.html" rel="nofollow"&gt;allowsUnsafeTransactions&lt;/a&gt; configuration flag:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: A transaction has been left opened at the end of a database access&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BEGIN TRANSACTION&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- no commit or rollback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can ask if a transaction is currently opened:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;myCriticalMethod&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;precondition&lt;/span&gt;(db.&lt;span class="pl-smi"&gt;isInsideTransaction&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This method requires a transaction&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet, you have a better option than checking for transactions: critical database sections should use savepoints, described below:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;myCriticalMethod&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Here the database is guaranteed to be inside a transaction.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-savepoints" class="anchor" aria-hidden="true" href="#savepoints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Savepoints&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Statements grouped in a savepoint can be rollbacked without invalidating a whole transaction:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Makes sure both inserts succeed, or none:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Other savepoints, etc...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If an error is thrown from the savepoint block, the savepoint is rollbacked and the error is rethrown by the &lt;code&gt;inSavepoint&lt;/code&gt; method. If you return &lt;code&gt;.rollback&lt;/code&gt; instead of &lt;code&gt;.commit&lt;/code&gt;, the savepoint is also rollbacked, but no error is thrown.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unlike transactions, savepoints can be nested.&lt;/strong&gt; They implicitly open a transaction if no one was opened when the savepoint begins. As such, they behave just like nested transactions. Yet the database changes are only written to disk when the outermost transaction is committed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
        }
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; writes changes to disk&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite savepoints are more than nested transactions, though. For advanced uses, use &lt;a href="https://www.sqlite.org/lang_savepoint.html" rel="nofollow"&gt;SQLite savepoint documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-transaction-kinds" class="anchor" aria-hidden="true" href="#transaction-kinds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transaction Kinds&lt;/h3&gt;
&lt;p&gt;SQLite supports &lt;a href="https://www.sqlite.org/lang_transaction.html" rel="nofollow"&gt;three kinds of transactions&lt;/a&gt;: deferred (the default), immediate, and exclusive.&lt;/p&gt;
&lt;p&gt;The transaction kind can be changed in the database configuration, or for each transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1) Default configuration:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN DEFERED TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN EXCLUSIVE TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;inTransaction&lt;/span&gt;(.&lt;span class="pl-smi"&gt;exclusive&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2) Customized default transaction kind:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;defaultTransactionKind&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;immediate&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN IMMEDIATE TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN EXCLUSIVE TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;inTransaction&lt;/span&gt;(.&lt;span class="pl-smi"&gt;exclusive&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-prepared-statements" class="anchor" aria-hidden="true" href="#prepared-statements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prepared Statements&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Prepared Statements&lt;/strong&gt; let you prepare an SQL query and execute it later, several times if you need, with different arguments.&lt;/p&gt;
&lt;p&gt;There are two kinds of prepared statements: &lt;strong&gt;select statements&lt;/strong&gt;, and &lt;strong&gt;update statements&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; updateSQL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, score) VALUES (:name, :score)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; updateStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeUpdateStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: updateSQL)
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; selectSQL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; selectStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: selectSQL)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;?&lt;/code&gt; and colon-prefixed keys like &lt;code&gt;:name&lt;/code&gt; in the SQL query are the statement arguments. You set them with arrays or dictionaries (arguments are actually of type &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt;, which happens to adopt the ExpressibleByArrayLiteral and ExpressibleByDictionaryLiteral protocols).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;updateStatement.&lt;span class="pl-smi"&gt;arguments&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;]
selectStatement.&lt;span class="pl-smi"&gt;arguments&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After arguments are set, you can execute the prepared statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; updateStatement.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Select statements can be used wherever a raw SQL query string would fit (see &lt;a href="#fetch-queries"&gt;fetch queries&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(selectStatement)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(selectStatement) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(selectStatement)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can set the arguments at the moment of the statement execution:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; updateStatement.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(selectStatement, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: it is a programmer error to reuse a prepared statement that has failed: GRDB may crash if you do so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See &lt;a href="#row-queries"&gt;row queries&lt;/a&gt;, &lt;a href="#value-queries"&gt;value queries&lt;/a&gt;, and &lt;a href="#records"&gt;Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prepared-statements-cache" class="anchor" aria-hidden="true" href="#prepared-statements-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prepared Statements Cache&lt;/h3&gt;
&lt;p&gt;When the same query will be used several times in the lifetime of your application, you may feel a natural desire to cache prepared statements.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't cache statements yourself.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: This is because you don't have the necessary tools. Statements are tied to specific SQLite connections and dispatch queues which you don't manage yourself, especially when you use &lt;a href="#database-pools"&gt;database pools&lt;/a&gt;. A change in the database schema &lt;a href="https://www.sqlite.org/compile.html#max_schema_retry" rel="nofollow"&gt;may, or may not&lt;/a&gt; invalidate a statement. On systems earlier than OSX 10.10 that don't have the &lt;a href="https://www.sqlite.org/c3ref/close.html" rel="nofollow"&gt;sqlite3_close_v2 function&lt;/a&gt;, SQLite connections won't close properly if statements have been kept alive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Instead, use the &lt;code&gt;cachedUpdateStatement&lt;/code&gt; and &lt;code&gt;cachedSelectStatement&lt;/code&gt; methods. GRDB does all the hard caching and &lt;a href="#memory-management"&gt;memory management&lt;/a&gt; stuff for you:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; updateStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;cachedUpdateStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)
&lt;span class="pl-k"&gt;let&lt;/span&gt; selectStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;cachedSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Should a cached prepared statement throw an error, don't reuse it (it is a programmer error). Instead, reload it from the cache.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-custom-sql-functions-and-aggregates" class="anchor" aria-hidden="true" href="#custom-sql-functions-and-aggregates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom SQL Functions and Aggregates&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;SQLite lets you define SQL functions and aggregates.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A custom SQL function or aggregate extends SQLite:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; reverse(name) &lt;span class="pl-k"&gt;FROM&lt;/span&gt; player;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; custom function&lt;/span&gt;
&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; maxLength(name) &lt;span class="pl-k"&gt;FROM&lt;/span&gt; player; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; custom aggregate&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#custom-sql-functions"&gt;Custom SQL Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-aggregates"&gt;Custom Aggregates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-custom-sql-functions" class="anchor" aria-hidden="true" href="#custom-sql-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom SQL Functions&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; reverse &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reverse&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;argumentCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { (&lt;span class="pl-c1"&gt;values&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Extract string value, if any...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    }
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... and return reversed string:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;(string.&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;())
}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: reverse)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Or dbPool.add(function: ...)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "oof"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT reverse('foo')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;em&gt;function&lt;/em&gt; argument takes an array of &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;, and returns any valid &lt;a href="#values"&gt;value&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.) The number of database values is guaranteed to be &lt;em&gt;argumentCount&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;SQLite has the opportunity to perform additional optimizations when functions are "pure", which means that their result only depends on their arguments. So make sure to set the &lt;em&gt;pure&lt;/em&gt; argument to true when possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Functions can take a variable number of arguments:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When you don't provide any explicit &lt;em&gt;argumentCount&lt;/em&gt;, the function can take any number of arguments:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; averageOf &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;averageOf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { (&lt;span class="pl-c1"&gt;values&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; doubles &lt;span class="pl-k"&gt;=&lt;/span&gt; values.&lt;span class="pl-smi"&gt;compactMap&lt;/span&gt; { &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; doubles.&lt;span class="pl-c1"&gt;reduce&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-k"&gt;+&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;(doubles.&lt;span class="pl-c1"&gt;count&lt;/span&gt;)
}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: averageOf)

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT averageOf(1, 2, 3)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Functions can throw:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sqrt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sqrt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;argumentCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { (&lt;span class="pl-c1"&gt;values&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; double &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; double &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseError&lt;/span&gt;(&lt;span class="pl-c1"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;invalid negative number&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;sqrt&lt;/span&gt;(double)
}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: sqrt)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQLite error 1 with statement `SELECT sqrt(-1)`: invalid negative number&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT sqrt(-1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Use custom functions in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT reverseString("name") FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(reverseString.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(nameColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;GRDB ships with built-in SQL functions that perform unicode-aware string transformations.&lt;/strong&gt; See &lt;a href="#unicode"&gt;Unicode&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-custom-aggregates" class="anchor" aria-hidden="true" href="#custom-aggregates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Aggregates&lt;/h3&gt;
&lt;p&gt;Before registering a custom aggregate, you need to define a type that adopts the &lt;code&gt;DatabaseAggregate&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;DatabaseAggregate&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Initializes an aggregate&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Called at each step of the aggregation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;step&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;dbValues&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;throws&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Returns the final result&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;finalize&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseValueConvertible&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;MaxLength&lt;/span&gt; : &lt;span class="pl-e"&gt;DatabaseAggregate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxLength&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;step&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;dbValues&lt;/span&gt;: [DatabaseValue]) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; At each step, extract string value, if any...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValues[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt;
        }
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... and update the result&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; length &lt;span class="pl-k"&gt;=&lt;/span&gt; string.&lt;span class="pl-c1"&gt;count&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; length &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; maxLength {
            maxLength &lt;span class="pl-k"&gt;=&lt;/span&gt; length
        }
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;finalize&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseValueConvertible&lt;span class="pl-k"&gt;?&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; maxLength
    }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; maxLength &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxLength&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;argumentCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;aggregate&lt;/span&gt;: MaxLength.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: maxLength)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Or dbPool.add(function: ...)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT maxLength(name) FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;step&lt;/code&gt; method of the aggregate takes an array of &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;. This array contains as many values as the &lt;em&gt;argumentCount&lt;/em&gt; parameter (or any number of values, when &lt;em&gt;argumentCount&lt;/em&gt; is omitted).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;finalize&lt;/code&gt; method of the aggregate returns the final aggregated &lt;a href="#values"&gt;value&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.).&lt;/p&gt;
&lt;p&gt;SQLite has the opportunity to perform additional optimizations when aggregates are "pure", which means that their result only depends on their inputs. So make sure to set the &lt;em&gt;pure&lt;/em&gt; argument to true when possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use custom aggregates in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT maxLength("name") FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(maxLength.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(nameColumn))
&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-database-schema-introspection" class="anchor" aria-hidden="true" href="#database-schema-introspection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Schema Introspection&lt;/h2&gt;
&lt;p&gt;GRDB comes with a set of schema introspection methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if the table exists&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;tableExists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ColumnInfo], the columns in the table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;columns&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; PrimaryKeyInfo&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ForeignKeyInfo], the foreign keys defined on the table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;foreignKeys&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [IndexInfo], the indexes defined on the table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;indexes&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if column(s) is a unique key (primary key or unique index)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;table&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;hasUniqueKey&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if argument is the name of an internal SQLite table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Database.&lt;span class="pl-c1"&gt;isSQLiteInternalTable&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if argument is the name of an internal GRDB table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Database.&lt;span class="pl-c1"&gt;isGRDBInternalTable&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-row-adapters" class="anchor" aria-hidden="true" href="#row-adapters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Row Adapters&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Row adapters let you present database rows in the way expected by the row consumers.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;They basically help two incompatible row interfaces to work together. For example, a row consumer expects a column named "consumed", but the produced row has a column named "produced".&lt;/p&gt;
&lt;p&gt;In this case, the &lt;code&gt;ColumnMapping&lt;/code&gt; row adapter comes in handy:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch a 'produced' column, and consume a 'consumed' column:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ColumnMapping&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;consumed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;produced&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Hello' AS produced&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;consumed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Hello"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;produced&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Row adapters are values that adopt the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Protocols/RowAdapter.html" rel="nofollow"&gt;RowAdapter&lt;/a&gt; protocol. You can implement your own custom adapters (&lt;a href="#what-are-experimental-features"&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt; EXPERIMENTAL&lt;/strong&gt;&lt;/a&gt;), or use one of the four built-in adapters, described below.&lt;/p&gt;
&lt;p&gt;To see how row adapters can be used, see &lt;a href="#joined-queries-support"&gt;Joined Queries Support&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-columnmapping" class="anchor" aria-hidden="true" href="#columnmapping"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ColumnMapping&lt;/h3&gt;
&lt;p&gt;ColumnMapping renames columns. Build one with a dictionary whose keys are adapted column names, and values the column names in the raw row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [newName:"Hello"]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ColumnMapping&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;oldName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Hello' AS oldName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-suffixrowadapter" class="anchor" aria-hidden="true" href="#suffixrowadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SuffixRowAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SuffixRowAdapter&lt;/code&gt; hides the first columns in a row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [b:1 c:2]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SuffixRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;fromIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-rangerowadapter" class="anchor" aria-hidden="true" href="#rangerowadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RangeRowAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;RangeRowAdapter&lt;/code&gt; only exposes a range of columns.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-emptyrowadapter" class="anchor" aria-hidden="true" href="#emptyrowadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EmptyRowAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;EmptyRowAdapter&lt;/code&gt; hides all columns.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;EmptyRowAdapter&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row.&lt;span class="pl-c1"&gt;isEmpty&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This limit adapter may turn out useful in some narrow use cases. You'll be happy to find it when you need it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-scopeadapter" class="anchor" aria-hidden="true" href="#scopeadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ScopeAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ScopeAdapter&lt;/code&gt; defines &lt;em&gt;row scopes&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;),
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;)])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c, 3 AS d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ScopeAdapter does not change the columns and values of the fetched row. Instead, it defines &lt;em&gt;scopes&lt;/em&gt;, which you access through the &lt;code&gt;Row.scopes&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;row                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0 b:1 c:2 d:3]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0 b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [c:2 d:3]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;missing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scopes can be nested:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;),
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)]),
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;),
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;)])
    ])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c, 3 AS d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; leftRow &lt;span class="pl-k"&gt;=&lt;/span&gt; row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;!&lt;/span&gt;
leftRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;leftRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; rightRow &lt;span class="pl-k"&gt;=&lt;/span&gt; row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;!&lt;/span&gt;
rightRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [c:2]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;rightRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [d:3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Any adapter can be extended with scopes:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; baseAdapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;base&lt;/span&gt;: baseAdapter, &lt;span class="pl-c1"&gt;scopes&lt;/span&gt;: [
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remainder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;SuffixRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;fromIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;)])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c, 3 AS d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;

row &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0 b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remainder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [c:2 d:3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-raw-sqlite-pointers" class="anchor" aria-hidden="true" href="#raw-sqlite-pointers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Raw SQLite Pointers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;If not all SQLite APIs are exposed in GRDB, you can still use the &lt;a href="https://www.sqlite.org/c3ref/intro.html" rel="nofollow"&gt;SQLite C Interface&lt;/a&gt; and call &lt;a href="https://www.sqlite.org/c3ref/funclist.html" rel="nofollow"&gt;SQLite C functions&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Those functions are embedded right into the &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;GRDBCustom&lt;/a&gt; module. Otherwise, you'll need to import &lt;code&gt;SQLite3&lt;/code&gt;, &lt;code&gt;SQLCipher&lt;/code&gt;, or &lt;code&gt;CSQLite&lt;/code&gt;, depending on the GRDB flavor you are using:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift Package Manager&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;CSQLite&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQLCipher&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLCipher&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; System SQLite&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLite3&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; sqliteVersion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;cString&lt;/span&gt;: &lt;span class="pl-c1"&gt;sqlite3_libversion&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Raw pointers to database connections and statements are available through the &lt;code&gt;Database.sqliteConnection&lt;/code&gt; and &lt;code&gt;Statement.sqliteStatement&lt;/code&gt; properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The raw pointer to a database connection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; sqliteConnection &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-smi"&gt;sqliteConnection&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The raw pointer to a statement:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; statement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; sqliteStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; statement.&lt;span class="pl-smi"&gt;sqliteStatement&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Those pointers are owned by GRDB: don't close connections or finalize statements created by GRDB.&lt;/li&gt;
&lt;li&gt;GRDB opens SQLite connections in the "&lt;a href="https://www.sqlite.org/threadsafe.html" rel="nofollow"&gt;multi-thread mode&lt;/a&gt;", which (oddly) means that &lt;strong&gt;they are not thread-safe&lt;/strong&gt;. Make sure you touch raw databases and statements inside their dedicated dispatch queues.&lt;/li&gt;
&lt;li&gt;Use the raw SQLite C Interface at your own risk. GRDB won't prevent you from shooting yourself in the foot.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-records" class="anchor" aria-hidden="true" href="#records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Records&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;On top of the &lt;a href="#sqlite-api"&gt;SQLite API&lt;/a&gt;, GRDB provides protocols and a class&lt;/strong&gt; that help manipulating database rows as regular objects named "records":&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; place &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
        place.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, you need to open a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;, and &lt;a href="#database-schema"&gt;create database tables&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;To define your custom records, you subclass the ready-made &lt;code&gt;Record&lt;/code&gt; class, or you extend your structs and classes with protocols that come with focused sets of features: fetching methods, persistence methods, record comparison...&lt;/p&gt;
&lt;p&gt;Extending structs with record protocols is more "swifty". Subclassing the Record class is more "classic". You can choose either way. See some &lt;a href="#examples-of-record-definitions"&gt;examples of record definitions&lt;/a&gt;, and the &lt;a href="#list-of-record-methods"&gt;list of record methods&lt;/a&gt; for an overview.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: if you are familiar with Core Data's NSManagedObject or Realm's Object, you may experience a cultural shock: GRDB records are not uniqued, do not auto-update, and do not lazy-load. This is both a purpose, and a consequence of protocol-oriented programming. You should read &lt;a href="https://medium.com/@gwendal.roue/how-to-build-an-ios-application-with-sqlite-and-grdb-swift-d023a06c29b3" rel="nofollow"&gt;How to build an iOS application with SQLite and GRDB.swift&lt;/a&gt; for a general introduction.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: after you have read this chapter, check the &lt;a href="Documentation/GoodPracticesForDesigningRecordTypes.md"&gt;Good Practices for Designing Record Types&lt;/a&gt; Guide.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that uses records.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#inserting-records"&gt;Inserting Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-records"&gt;Fetching Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#updating-records"&gt;Updating Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deleting-records"&gt;Deleting Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#counting-records"&gt;Counting Records&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Protocols and the Record Class&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord Protocol&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#persistence-methods"&gt;Persistence Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customizing-the-persistence-methods"&gt;Customizing the Persistence Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-class"&gt;Record Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-customization-options"&gt;Record Customization Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Records in a Glance&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#examples-of-record-definitions"&gt;Examples of Record Definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list-of-record-methods"&gt;List of Record Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-inserting-records" class="anchor" aria-hidden="true" href="#inserting-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inserting Records&lt;/h3&gt;
&lt;p&gt;To insert a record in the database, call the &lt;code&gt;insert&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;email&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; &lt;code&gt;insert&lt;/code&gt; is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fetching-records" class="anchor" aria-hidden="true" href="#fetching-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Records&lt;/h3&gt;
&lt;p&gt;To fetch records from the database, call a &lt;a href="#fetching-methods"&gt;fetching method&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; arthur &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db,            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM players WHERE name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; bestPlayers &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;desc&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    
&lt;span class="pl-k"&gt;let&lt;/span&gt; spain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ES&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; Fetching from raw SQL is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; Fetching without SQL, using the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;, is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt both &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; and &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-updating-records" class="anchor" aria-hidden="true" href="#updating-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updating Records&lt;/h3&gt;
&lt;p&gt;To update a record in the database, call the &lt;code&gt;update&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) 
    player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is possible to &lt;a href="#record-comparison"&gt;avoid useless updates&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; does not hit the database if score has not changed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) {
        &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For batch updates, execute an &lt;a href="#executing-updates"&gt;SQL query&lt;/a&gt;, or see the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET score = score + 1 WHERE team = 'red'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, scoreColumn &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; update methods are available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deleting-records" class="anchor" aria-hidden="true" href="#deleting-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deleting Records&lt;/h3&gt;
&lt;p&gt;To delete a record in the database, call the &lt;code&gt;delete&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also delete by primary key, or any unique index:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For batch deletes, execute an &lt;a href="#executing-updates"&gt;SQL query&lt;/a&gt;, or see the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DELETE player WHERE email IS NULL&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; delete methods are available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-counting-records" class="anchor" aria-hidden="true" href="#counting-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Counting Records&lt;/h3&gt;
&lt;p&gt;To count records, call the &lt;code&gt;fetchCount&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)

&lt;span class="pl-k"&gt;let&lt;/span&gt; playerWithEmailCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; &lt;code&gt;fetchCount&lt;/code&gt; is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;p&gt;Details follow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-class"&gt;Record Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-customization-options"&gt;Record Customization Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples-of-record-definitions"&gt;Examples of Record Definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list-of-record-methods"&gt;List of Record Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-record-protocols-overview" class="anchor" aria-hidden="true" href="#record-protocols-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Protocols Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GRDB ships with three record protocols&lt;/strong&gt;. Your own types will adopt one or several of them, according to the abilities you want to extend your types with.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; is able to &lt;strong&gt;decode database rows&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;It is always possible to decode rows without this protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places&lt;span class="pl-k"&gt;:&lt;/span&gt; [Place] &lt;span class="pl-k"&gt;=&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { row &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;id&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;title&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;coordinate&lt;/span&gt;: &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
                &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]))
        )
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But FetchableRecord lets you write code that is easier to read, and more efficient as well, both in terms of performance and memory usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: FetchableRecord can derive its implementation from the standard Decodable protocol. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FetchableRecord can decode database rows, but it is not able to build SQL requests for you. For that, you also need TableRecord:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; is able to &lt;strong&gt;generate SQL queries&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM place ORDER BY title&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a type adopts both TableRecord and FetchableRecord, it can load from those requests:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; is able to &lt;strong&gt;write&lt;/strong&gt;: it can create, update, and delete rows in the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A persistable record can also &lt;a href="#record-comparison"&gt;compare&lt;/a&gt; itself against other records, and avoid useless database updates.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: PersistableRecord can derive its implementation from the standard Encodable protocol. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-fetchablerecord-protocol" class="anchor" aria-hidden="true" href="#fetchablerecord-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FetchableRecord Protocol&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The FetchableRecord protocol grants fetching methods to any type&lt;/strong&gt; that can be built from a database row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Row initializer&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;To use FetchableRecord&lt;/strong&gt;, subclass the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, or adopt it explicitly. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rows also accept column enums:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#column-values"&gt;column values&lt;/a&gt; for more information about the &lt;code&gt;row[]&lt;/code&gt; subscript.&lt;/p&gt;
&lt;p&gt;When your record type adopts the standard Decodable protocol, you don't have to provide the implementation for &lt;code&gt;init(row:)&lt;/code&gt;. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; That's all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FetchableRecord allows adopting types to be fetched from SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Place&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Place]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Place?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for information about the &lt;code&gt;fetchCursor&lt;/code&gt;, &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchOne&lt;/code&gt; methods. See &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt; for more information about the query arguments.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: for performance reasons, the same row argument to &lt;code&gt;init(row:)&lt;/code&gt; is reused during the iteration of a fetch query. If you want to keep the row for later use, make sure to store a copy: &lt;code&gt;self.row = row.copy()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;FetchableRecord.init(row:)&lt;/code&gt; initializer fits the needs of most applications. But some application are more demanding than others. When FetchableRecord does not exactly provide the support you need, have a look at the &lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt; chapter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-tablerecord-protocol" class="anchor" aria-hidden="true" href="#tablerecord-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TableRecord Protocol&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The TableRecord protocol&lt;/strong&gt; generates SQL for you. To use TableRecord, subclass the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, or adopt it explicitly:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;TableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;databaseSelection&lt;/code&gt; type property is optional, and documented in the &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt; chapter.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;databaseTableName&lt;/code&gt; type property is the name of a database table. By default, it is derived from the type name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{ }
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(Place.&lt;span class="pl-smi"&gt;databaseTableName&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "place"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Place: &lt;code&gt;place&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Country: &lt;code&gt;country&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;PostalAddress: &lt;code&gt;postalAddress&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;HTTPRequest: &lt;code&gt;httpRequest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;TOEFL: &lt;code&gt;toefl&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can still provide a custom table name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseTableName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;location&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(Place.&lt;span class="pl-smi"&gt;databaseTableName&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "location"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class must always override their superclass's &lt;code&gt;databaseTableName&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(Place.&lt;span class="pl-smi"&gt;databaseTableName&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "place"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a type adopts both TableRecord and &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;, it can be fetched using the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM place WHERE name = 'Paris'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paris&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TableRecord can also fetch records by primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the table has no explicit primary key, GRDB uses the &lt;a href="#the-implicit-rowid-primary-key"&gt;hidden "rowid" column&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Document?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multiple-column primary keys and unique keys defined by unique indexes, provide a dictionary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Citizenship?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-persistablerecord-protocol" class="anchor" aria-hidden="true" href="#persistablerecord-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PersistableRecord Protocol&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GRDB record types can create, update, and delete rows in the database.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Those abilities are granted by three protocols:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Defines how a record encodes itself into the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Defines the values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Adds persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;MutablePersistableRecord&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;EncodableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Optional method that lets your adopting type store its rowID upon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; successful insertion. Don't call it directly: it is called for you.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Adds immutability&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;PersistableRecord&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Non-mutating version of the optional didInsert(with:for:)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, three protocols instead of one. Here is how you pick one or the other:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;If your type is a class&lt;/strong&gt;, choose &lt;code&gt;PersistableRecord&lt;/code&gt;. On top of that, implement &lt;code&gt;didInsert(with:for:)&lt;/code&gt; if the database table has an auto-incremented primary key.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;If your type is a struct, and the database table has an auto-incremented primary key&lt;/strong&gt;, choose &lt;code&gt;MutablePersistableRecord&lt;/code&gt;, and implement &lt;code&gt;didInsert(with:for:)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Otherwise&lt;/strong&gt;, choose &lt;code&gt;PersistableRecord&lt;/code&gt;, and ignore &lt;code&gt;didInsert(with:for:)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;encode(to:)&lt;/code&gt; method defines which &lt;a href="#values"&gt;values&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.) are assigned to database columns.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;didInsert&lt;/code&gt; method lets the adopting type store its rowID after successful insertion, and is only useful for tables that have an auto-incremented primary key. It is called from a protected dispatch queue, and serialized with all database updates.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To use the persistable protocols&lt;/strong&gt;, subclass the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, or adopt one of them explicitly. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paris&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;coordinate&lt;/span&gt;: &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(&lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;48.8534100&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;2.3488000&lt;/span&gt;))

&lt;span class="pl-k"&gt;try&lt;/span&gt; paris.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
paris.&lt;span class="pl-smi"&gt;id&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Persistence containers also accept column enums:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When your record type adopts the standard Encodable protocol, you don't have to provide the implementation for &lt;code&gt;encode(to:)&lt;/code&gt;. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; That's all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Encodable&lt;/span&gt;, &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-persistence-methods" class="anchor" aria-hidden="true" href="#persistence-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistence Methods&lt;/h3&gt;
&lt;p&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt; subclasses and types that adopt &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; are given default implementations for methods that insert, update, and delete:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Instance methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;save&lt;/span&gt;(db)                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT or UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;columns&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Maybe UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) { &lt;span class="pl-k"&gt;...&lt;/span&gt; }    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Maybe UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Maybe UPDATE (Record class only)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(db)                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;exists&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Type methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; can throw a &lt;a href="#error-handling"&gt;DatabaseError&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;update&lt;/code&gt; and &lt;code&gt;updateChanges&lt;/code&gt; can also throw a &lt;a href="#persistenceerror"&gt;PersistenceError&lt;/a&gt;, should the update fail because there is no matching row in the database.&lt;/p&gt;
&lt;p&gt;When saving an object that may or may not already exist in the database, prefer the &lt;code&gt;save&lt;/code&gt; method:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;updateAll&lt;/code&gt; performs a batch update. See &lt;a href="#update-requests"&gt;Update Requests&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;save&lt;/code&gt; makes sure your values are stored in the database.&lt;/p&gt;
&lt;p&gt;It performs an UPDATE if the record has a non-null primary key, and then, if no row was modified, an INSERT. It directly perfoms an INSERT if the record has no primary key, or a null primary key.&lt;/p&gt;
&lt;p&gt;Despite the fact that it may execute two SQL statements, &lt;code&gt;save&lt;/code&gt; behaves as an atomic operation: GRDB won't allow any concurrent thread to sneak in (see &lt;a href="#concurrency"&gt;concurrency&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;delete&lt;/code&gt; returns whether a database row was deleted or not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;All primary keys are supported&lt;/strong&gt;, including composite primary keys that span several columns, and the &lt;a href="#the-implicit-rowid-primary-key"&gt;implicit rowid primary key&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-customizing-the-persistence-methods" class="anchor" aria-hidden="true" href="#customizing-the-persistence-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing the Persistence Methods&lt;/h3&gt;
&lt;p&gt;Your custom type may want to perform extra work when the persistence methods are invoked.&lt;/p&gt;
&lt;p&gt;For example, it may want to have its UUID automatically set before inserting. Or it may want to validate its values before saving.&lt;/p&gt;
&lt;p&gt;When you subclass &lt;a href="#record-class"&gt;Record&lt;/a&gt;, you simply have to override the customized method, and call &lt;code&gt;super&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; uuid&lt;span class="pl-k"&gt;:&lt;/span&gt; UUID&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;insert&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; uuid &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            uuid &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UUID&lt;/span&gt;()
        }
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you use the raw &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol, use one of the &lt;em&gt;special methods&lt;/em&gt; &lt;code&gt;performInsert&lt;/code&gt;, &lt;code&gt;performUpdate&lt;/code&gt;, &lt;code&gt;performSave&lt;/code&gt;, &lt;code&gt;performDelete&lt;/code&gt;, or &lt;code&gt;performExists&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Link&lt;/span&gt; : &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;insert&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;validate&lt;/span&gt;()
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;performInsert&lt;/span&gt;(db)
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;update&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;columns&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&amp;gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;validate&lt;/span&gt;()
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;performUpdate&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;columns&lt;/span&gt;: columns)
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;validate&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; url.&lt;span class="pl-smi"&gt;host&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;ValidationError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url must be absolute.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the special methods &lt;code&gt;performInsert&lt;/code&gt;, &lt;code&gt;performUpdate&lt;/code&gt;, etc. are reserved for your custom implementations. Do not use them elsewhere. Do not provide another implementation for those methods.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: it is recommended that you do not implement your own version of the &lt;code&gt;save&lt;/code&gt; method. Its default implementation forwards the job to &lt;code&gt;update&lt;/code&gt; or &lt;code&gt;insert&lt;/code&gt;: these are the methods that may need customization, not &lt;code&gt;save&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-codable-records" class="anchor" aria-hidden="true" href="#codable-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Codable Records&lt;/h2&gt;
&lt;p&gt;Record types that adopt an archival protocol (&lt;a href="https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types" rel="nofollow"&gt;Codable, Encodable or Decodable&lt;/a&gt;) get free database support just by declaring conformance to the desired &lt;a href="#record-protocols-overview"&gt;record protocols&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Declare a record...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...and there you go:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Codable records encode and decode their properties according to their own implementation of the Encodable and Decodable protocols. Yet databases have specific requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Properties are always coded according to their preferred database representation, when they have one (all &lt;a href="#values"&gt;values&lt;/a&gt; that adopt the &lt;a href="#custom-value-types"&gt;DatabaseValueConvertible&lt;/a&gt; protocol).&lt;/li&gt;
&lt;li&gt;You can customize the encoding and decoding of dates and uuids.&lt;/li&gt;
&lt;li&gt;Complex properties (arrays, dictionaries, nested structs, etc.) are stored as JSON.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information about Codable records, see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#json-columns"&gt;JSON Columns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;Date and UUID Coding Strategies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-userinfo-dictionary"&gt;The userInfo Dictionary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tip-derive-columns-from-coding-keys"&gt;Tip: Derive Columns from Coding Keys&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that uses Codable records.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-json-columns" class="anchor" aria-hidden="true" href="#json-columns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Columns&lt;/h3&gt;
&lt;p&gt;When a &lt;a href="#codable-records"&gt;Codable record&lt;/a&gt; contains a property that is not a simple &lt;a href="#values"&gt;value&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.), that value is encoded and decoded as a &lt;strong&gt;JSON string&lt;/strong&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;AchievementColor&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;bronze&lt;/span&gt;, &lt;span class="pl-c1"&gt;silver&lt;/span&gt;, &lt;span class="pl-c1"&gt;gold&lt;/span&gt;
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Achievement&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; AchievementColor
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; achievements&lt;span class="pl-k"&gt;:&lt;/span&gt; [Achievement] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; stored in a JSON column&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO player (name, score, achievements)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; VALUES (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   'Arthur',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   100,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   '[{"color":"gold","name":"Use Codable Records"}]')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; achievement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Achievement&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Use Codable Records&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;color&lt;/span&gt;: .&lt;span class="pl-smi"&gt;gold&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;achievements&lt;/span&gt;: [achievement])
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB uses the standard &lt;a href="https://developer.apple.com/documentation/foundation/jsondecoder" rel="nofollow"&gt;JSONDecoder&lt;/a&gt; and &lt;a href="https://developer.apple.com/documentation/foundation/jsonencoder" rel="nofollow"&gt;JSONEncoder&lt;/a&gt; from Foundation. By default, Data values are handled with the &lt;code&gt;.base64&lt;/code&gt; strategy, Date with the &lt;code&gt;.millisecondsSince1970&lt;/code&gt; strategy, and non conforming floats with the &lt;code&gt;.throw&lt;/code&gt; strategy.&lt;/p&gt;
&lt;p&gt;You can customize the JSON format by implementing those methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseJSONDecoder&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; JSONDecoder
}

&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseJSONEncoder&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; JSONEncoder
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: Make sure you set the JSONEncoder &lt;code&gt;sortedKeys&lt;/code&gt; option, available from iOS 11.0+, macOS 10.13+, tvOS 9.0+ and watchOS 4.0+. This option makes sure that the JSON output is stable. This stability is required for &lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt; to work as expected, and database observation tools such as &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt; to accurately recognize changed records.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-date-and-uuid-coding-strategies" class="anchor" aria-hidden="true" href="#date-and-uuid-coding-strategies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date and UUID Coding Strategies&lt;/h3&gt;
&lt;p&gt;By default, &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; encode and decode their Date and UUID properties as described in the general &lt;a href="#date-and-datecomponents"&gt;Date and DateComponents&lt;/a&gt; and &lt;a href="#uuid"&gt;UUID&lt;/a&gt; chapters.&lt;/p&gt;
&lt;p&gt;To sum up: dates encode themselves in the "YYYY-MM-DD HH:MM:SS.SSS" format, in the UTC time zone, and decode a variety of date formats and timestamps. UUIDs encode themselves as 16-bytes data blobs, and decode both 16-bytes data blobs and strings such as "E621E1F8-C36C-495A-93FC-0C247A3E6E5F".&lt;/p&gt;
&lt;p&gt;Those behaviors can be overridden:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseDateDecodingStrategy&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseDateDecodingStrategy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseDateEncodingStrategy&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseDateEncodingStrategy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseUUIDEncodingStrategy&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseUUIDEncodingStrategy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://groue.github.io/GRDB.swift/docs/4.9/Enums/DatabaseDateDecodingStrategy.html" rel="nofollow"&gt;DatabaseDateDecodingStrategy&lt;/a&gt;, &lt;a href="https://groue.github.io/GRDB.swift/docs/4.9/Enums/DatabaseDateEncodingStrategy.html" rel="nofollow"&gt;DatabaseDateEncodingStrategy&lt;/a&gt;, and &lt;a href="https://groue.github.io/GRDB.swift/docs/4.9/Enums/DatabaseUUIDEncodingStrategy.html" rel="nofollow"&gt;DatabaseUUIDEncodingStrategy&lt;/a&gt; to learn about all available strategies.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: there is no customization of uuid decoding, because UUID can already decode all its encoded variants (16-bytes blobs, and uuid strings).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-the-userinfo-dictionary" class="anchor" aria-hidden="true" href="#the-userinfo-dictionary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The userInfo Dictionary&lt;/h3&gt;
&lt;p&gt;Your &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; can be stored in the database, but they may also have other purposes. In this case, you may need to customize their implementations of &lt;code&gt;Decodable.init(from:)&lt;/code&gt; and &lt;code&gt;Encodable.encode(to:)&lt;/code&gt;, depending on the context.&lt;/p&gt;
&lt;p&gt;The standard way to provide such context is the &lt;code&gt;userInfo&lt;/code&gt; dictionary. Implement those properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseDecodingUserInfo&lt;span class="pl-k"&gt;:&lt;/span&gt; [CodingUserInfoKey&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseEncodingUserInfo&lt;span class="pl-k"&gt;:&lt;/span&gt; [CodingUserInfoKey&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, here is a Player type that customizes its decoding:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A key that holds a decoder's name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; decoderName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CodingUserInfoKey&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;decoderName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;Decodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;decoder&lt;/span&gt;: Decoder) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Print the decoder name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; decoderName &lt;span class="pl-k"&gt;=&lt;/span&gt; decoder.&lt;span class="pl-smi"&gt;userInfo&lt;/span&gt;[decoderName] &lt;span class="pl-k"&gt;as?&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Decoded from &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;decoderName &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unknown decoder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can have a specific decoding from JSON...&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "Decoded from JSON"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; decoder &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONDecoder&lt;/span&gt;()
decoder.&lt;span class="pl-smi"&gt;userInfo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [decoderName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JSON&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; decoder.&lt;span class="pl-c1"&gt;decode&lt;/span&gt;(Player.&lt;span class="pl-k"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: jsonData)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and another one from database rows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseDecodingUserInfo&lt;span class="pl-k"&gt;:&lt;/span&gt; [CodingUserInfoKey&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [decoderName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;database row&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "Decoded from database row"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: make sure the &lt;code&gt;databaseDecodingUserInfo&lt;/code&gt; and &lt;code&gt;databaseEncodingUserInfo&lt;/code&gt; properties are explicitly declared as &lt;code&gt;[CodingUserInfoKey: Any]&lt;/code&gt;. If they are not, the Swift compiler may silently miss the protocol requirement, resulting in sticky empty userInfo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-tip-derive-columns-from-coding-keys" class="anchor" aria-hidden="true" href="#tip-derive-columns-from-coding-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tip: Derive Columns from Coding Keys&lt;/h3&gt;
&lt;p&gt;Codable types are granted with a &lt;a href="https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types" rel="nofollow"&gt;CodingKeys&lt;/a&gt; enum. You can use them to safely define database columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;id&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;name&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; score &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;score&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt; and &lt;a href="Documentation/GoodPracticesForDesigningRecordTypes.md"&gt;Good Practices for Designing Record Types&lt;/a&gt; for further information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-record-class" class="anchor" aria-hidden="true" href="#record-class"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Class&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Record&lt;/strong&gt; is a class that is designed to be subclassed. It inherits its features from the &lt;a href="#record-protocols-overview"&gt;FetchableRecord, TableRecord, and PersistableRecord&lt;/a&gt; protocols. On top of that, Record instances can compare against previous versions of themselves in order to &lt;a href="#record-comparison"&gt;avoid useless updates&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Record subclasses define their custom database relationship by overriding database methods. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;id&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;title&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;isFavorite&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;coordinate&lt;/span&gt;&lt;/span&gt;: CLLocationCoordinate2D) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coordinate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;()
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;favorite&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;required&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;favorite&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;row&lt;/span&gt;: row)
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;favorite&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Update record ID after a successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-record-comparison" class="anchor" aria-hidden="true" href="#record-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Comparison&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Records that adopt the &lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt; protocol can compare against other records, or against previous versions of themselves.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This helps avoiding costly UPDATE statements when a record has not been edited.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-updatechanges-methods"&gt;The &lt;code&gt;updateChanges&lt;/code&gt; Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-databaseequals-method"&gt;The &lt;code&gt;databaseEquals&lt;/code&gt; Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-databasechanges-and-hasdatabasechanges-methods"&gt;The &lt;code&gt;databaseChanges&lt;/code&gt; and &lt;code&gt;hasDatabaseChanges&lt;/code&gt; Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-the-updatechanges-methods" class="anchor" aria-hidden="true" href="#the-updatechanges-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;updateChanges&lt;/code&gt; Methods&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;updateChanges&lt;/code&gt; methods perform a database update of the changed columns only (and does nothing if record has no change).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;updateChanges(_:from:)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This method lets you compare two records:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; oldPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; newPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; oldPlayer
    newPlayer.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: oldPlayer) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was modified, and updated in the database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was not modified, and database was not hit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;updateChanges(_:with:)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This method lets you update a record in place:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; modified &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) {
        &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;if&lt;/span&gt; modified {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was modified, and updated in the database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was not modified, and database was not hit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;updateChanges(_:)&lt;/code&gt; (Record class only)&lt;/p&gt;
&lt;p&gt;Instances of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class are able to compare against themselves, and know if they have changes that have not been saved since the last fetch or saving:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record class only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) {
    player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was modified, and updated in the database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was not modified, and database was not hit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-the-databaseequals-method" class="anchor" aria-hidden="true" href="#the-databaseequals-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;databaseEquals&lt;/code&gt; Method&lt;/h3&gt;
&lt;p&gt;This method returns whether two records have the same database representation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; oldPlayer&lt;span class="pl-k"&gt;:&lt;/span&gt; Player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; newPlayer&lt;span class="pl-k"&gt;:&lt;/span&gt; Player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;databaseEquals&lt;/span&gt;(oldPlayer) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;save&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The comparison is performed on the database representation of records. As long as your record type adopts the EncodableRecord protocol, you don't need to care about Equatable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-the-databasechanges-and-hasdatabasechanges-methods" class="anchor" aria-hidden="true" href="#the-databasechanges-and-hasdatabasechanges-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;databaseChanges&lt;/code&gt; and &lt;code&gt;hasDatabaseChanges&lt;/code&gt; Methods&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;databaseChanges(from:)&lt;/code&gt; returns a dictionary of differences between two records:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; oldPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; newPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
&lt;span class="pl-k"&gt;for&lt;/span&gt; (column, oldValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;databaseChanges&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: oldPlayer) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;column&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; was &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;oldValue&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "score was 100"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="#record-class"&gt;Record&lt;/a&gt; class is able to compare against itself:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record class only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (column, oldValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; player.&lt;span class="pl-smi"&gt;databaseChanges&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;column&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; was &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;oldValue&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "score was 100"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt; instances also have a &lt;code&gt;hasDatabaseChanges&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record class only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;save&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Record.hasDatabaseChanges&lt;/code&gt; is false after a Record instance has been fetched or saved into the database. Subsequent modifications may set it, or not: &lt;code&gt;hasDatabaseChanges&lt;/code&gt; is based on value comparison. &lt;strong&gt;Setting a property to the same value does not set the changed flag&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;750&lt;/span&gt;)
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;player.&lt;span class="pl-smi"&gt;databaseChanges&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ["score": 750]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For an efficient algorithm which synchronizes the content of a database table with a JSON payload, check &lt;a href="Documentation/Playgrounds/JSONSynchronization.playground/Contents.swift"&gt;JSONSynchronization.playground&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-record-customization-options" class="anchor" aria-hidden="true" href="#record-customization-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Customization Options&lt;/h2&gt;
&lt;p&gt;GRDB records come with many default behaviors, that are designed to fit most situations. Many of those defaults can be customized for your specific needs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#customizing-the-persistence-methods"&gt;Customizing the Persistence Methods&lt;/a&gt;: define what happens when you call a persistance method such as &lt;code&gt;player.insert(db)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conflict-resolution"&gt;Conflict Resolution&lt;/a&gt;: Run &lt;code&gt;INSERT OR REPLACE&lt;/code&gt; queries, and generally define what happens when a persistence method violates a unique index.&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-implicit-rowid-primary-key"&gt;The Implicit RowID Primary Key&lt;/a&gt;: all about the special &lt;code&gt;rowid&lt;/code&gt; column.&lt;/li&gt;
&lt;li&gt;&lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt;: define which columns are selected by requests such as &lt;code&gt;Player.fetchAll(db)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt;: the FetchableRecord protocol is not the end of the story.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; have a few extra options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#json-columns"&gt;JSON Columns&lt;/a&gt;: control the format of JSON columns.&lt;/li&gt;
&lt;li&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;Date and UUID Coding Strategies&lt;/a&gt;: control the format of Date and UUID properties in your Codable records.&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-userinfo-dictionary"&gt;The userInfo Dictionary&lt;/a&gt;: adapt your Codable implementation for the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-conflict-resolution" class="anchor" aria-hidden="true" href="#conflict-resolution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conflict Resolution&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Insertions and updates can create conflicts&lt;/strong&gt;: for example, a query may attempt to insert a duplicate row that violates a unique index.&lt;/p&gt;
&lt;p&gt;Those conflicts normally end with an error. Yet SQLite let you alter the default behavior, and handle conflicts with specific policies. For example, the &lt;code&gt;INSERT OR REPLACE&lt;/code&gt; statement handles conflicts with the "replace" policy which replaces the conflicting row instead of throwing an error.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://www.sqlite.org/lang_conflict.html" rel="nofollow"&gt;five different policies&lt;/a&gt; are: abort (the default), replace, rollback, fail, and ignore.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQLite let you specify conflict policies at two different places:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In the definition of the database table:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE player (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     email TEXT UNIQUE ON CONFLICT REPLACE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;(&lt;span class="pl-c1"&gt;onConflict&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;--&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Despite the unique index on email, both inserts succeed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The second insert replaces the first row:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In each modification query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE player (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     email TEXT UNIQUE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;()
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Again, despite the unique index on email, both inserts succeed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT OR REPLACE INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT OR REPLACE INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you want to handle conflicts at the query level, specify a custom &lt;code&gt;persistenceConflictPolicy&lt;/code&gt; in your type that adopts the PersistableRecord protocol. It will alter the INSERT and UPDATE queries run by the &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;save&lt;/code&gt; &lt;a href="#persistence-methods"&gt;persistence methods&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;MutablePersistableRecord&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The policy that handles SQLite conflicts when records are&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; inserted or updated.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This property is optional: its default value uses the ABORT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; policy for both insertions and updates, so that GRDB generate&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; regular INSERT and UPDATE queries.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; persistenceConflictPolicy&lt;span class="pl-k"&gt;:&lt;/span&gt; PersistenceConflictPolicy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; persistenceConflictPolicy &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PersistenceConflictPolicy&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;insert&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;update&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT OR REPLACE INTO player (...) VALUES (...)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the &lt;code&gt;ignore&lt;/code&gt; policy does not play well at all with the &lt;code&gt;didInsert&lt;/code&gt; method which notifies the rowID of inserted records. Choose your poison:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if you specify the &lt;code&gt;ignore&lt;/code&gt; policy in the database table definition, don't implement the &lt;code&gt;didInsert&lt;/code&gt; method: it will be called with some random id in case of failed insert.&lt;/li&gt;
&lt;li&gt;if you specify the &lt;code&gt;ignore&lt;/code&gt; policy at the query level, the &lt;code&gt;didInsert&lt;/code&gt; method is never called.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;replace&lt;/code&gt; policy may have to delete rows so that inserts and updates can succeed. Those deletions are not reported to &lt;a href="#transactionobserver-protocol"&gt;transaction observers&lt;/a&gt; (this might change in a future release of SQLite).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-the-implicit-rowid-primary-key" class="anchor" aria-hidden="true" href="#the-implicit-rowid-primary-key"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Implicit RowID Primary Key&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;All SQLite tables have a primary key.&lt;/strong&gt; Even when the primary key is not explicit:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No explicit primary key&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;event&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;datetime&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No way to define an explicit primary key&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The implicit primary key is stored in the hidden column &lt;code&gt;rowid&lt;/code&gt;. Hidden means that &lt;code&gt;SELECT *&lt;/code&gt; does not select it, and yet it can be selected and queried: &lt;code&gt;SELECT *, rowid ... WHERE rowid = 1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Some GRDB methods will automatically use this hidden column when a table has no explicit primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM event WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; event &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Event.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM book WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Book.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-exposing-the-rowid-column" class="anchor" aria-hidden="true" href="#exposing-the-rowid-column"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exposing the RowID Column&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;By default, a record type that wraps a table without any explicit primary key doesn't know about the hidden rowid column.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Without primary key, records don't have any identity, and the &lt;a href="#persistence-methods"&gt;persistence method&lt;/a&gt; can behave in undesired fashion: &lt;code&gt;update()&lt;/code&gt; throws errors, &lt;code&gt;save()&lt;/code&gt; always performs insertions and may break constraints, &lt;code&gt;exists()&lt;/code&gt; is always false.&lt;/p&gt;
&lt;p&gt;When SQLite won't let you provide an explicit primary key (as in &lt;a href="Documentation/FullTextSearch.md"&gt;full-text&lt;/a&gt; tables, for example), you may want to make your record type fully aware of the hidden rowid column:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Have the &lt;code&gt;databaseSelection&lt;/code&gt; static property (from the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol) return the hidden rowid column:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Event&lt;/span&gt; : &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;AllColumns&lt;/span&gt;(), Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When you subclass Record, you need an override:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Book&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; [&lt;span class="pl-c1"&gt;AllColums&lt;/span&gt;(), Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB will then select the &lt;code&gt;rowid&lt;/code&gt; column by default:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT *, rowid FROM event&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; events &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Event.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Have &lt;code&gt;init(row:)&lt;/code&gt; from the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol consume the "rowid" column:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Event&lt;/span&gt; : &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your fetched records will then know their ids:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; event &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Event.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)&lt;span class="pl-k"&gt;!&lt;/span&gt;
event.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Encode the rowid in &lt;code&gt;encode(to:)&lt;/code&gt;, and keep it in the &lt;code&gt;didInsert(with:for:)&lt;/code&gt; method (both from the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord and MutablePersistableRecord&lt;/a&gt; protocols):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Event&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; message
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; date
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will then be able to track your record ids, update them, or check for their existence:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; event &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Event&lt;/span&gt;(&lt;span class="pl-c1"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;date&lt;/span&gt;: &lt;span class="pl-c1"&gt;Date&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Insertion sets the record id:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; event.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
event.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record can be updated:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;event.&lt;span class="pl-smi"&gt;message&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; event.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record knows if it exists:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;event.&lt;span class="pl-c1"&gt;exists&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-beyond-fetchablerecord" class="anchor" aria-hidden="true" href="#beyond-fetchablerecord"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Beyond FetchableRecord&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Some GRDB users eventually discover that the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol does not fit all situations.&lt;/strong&gt; Use cases that are not well handled by FetchableRecord include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Your application needs polymorphic row decoding: it decodes some type or another, depending on the values contained in a database row.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your application needs to decode rows with a context: each decoded value should be initialized with some extra value that does not come from the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your application needs a record type that supports untrusted databases, and may fail at decoding database rows (throw an error when a row contains invalid values).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since those use cases are not well handled by FetchableRecord, don't try to implement them on top of this protocol: you'll just fight the framework.&lt;/p&gt;
&lt;p&gt;Instead, please have a look at the &lt;a href="Documentation/Playgrounds/CustomizedDecodingOfDatabaseRows.playground/Contents.swift"&gt;CustomizedDecodingOfDatabaseRows&lt;/a&gt; playground. You'll run some sample code, and learn how to escape FetchableRecord when you need. And remember that leaving FetchableRecord will not deprive you of &lt;a href="#requests"&gt;query interface requests&lt;/a&gt; and generally all SQL generation features of the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; and &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocols.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples-of-record-definitions" class="anchor" aria-hidden="true" href="#examples-of-record-definitions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples of Record Definitions&lt;/h2&gt;
&lt;p&gt;We will show below how to declare a record type for the following database table:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
        t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;isFavorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;boolean&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each one of the three examples below is correct. You will pick one or the other depending on your personal preferences and the requirements of your application:&lt;/p&gt;
&lt;details&gt;
  &lt;summary&gt;Define a Codable struct, and adopt the record protocols you need&lt;/summary&gt;
&lt;p&gt;This is the shortest way to define a record type.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt;, and &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; latitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; longitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D {
        &lt;span class="pl-k"&gt;get&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: latitude,
                &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: longitude)
        }
        &lt;span class="pl-k"&gt;set&lt;/span&gt; {
            latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
            longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
        }
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL generation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;id&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; title &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;title&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetching methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{ }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;Define a plain struct, and adopt the record protocols you need&lt;/summary&gt;
&lt;p&gt;See the &lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL generation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;isFavorite&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetching methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;Define a plain struct optimized for fetching performance&lt;/summary&gt;
&lt;p&gt;This struct derives is persistence methpds from the standard Encodable protocol (see &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;), but performs optimized row decoding by accessing database columns with numeric indexes.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Encodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; latitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; longitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D {
        &lt;span class="pl-k"&gt;get&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: latitude,
                &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: longitude)
        }
        &lt;span class="pl-k"&gt;set&lt;/span&gt; {
            latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
            longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
        }
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL generation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;id&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; title &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;title&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;)
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Arrange the selected columns and lock their order&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [
        Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;favorite&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetching methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; For high performance, use numeric indexes that match the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; order of Place.databaseSelection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;3&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;4&lt;/span&gt;])
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;Subclass the &lt;code&gt;Record&lt;/code&gt; class&lt;/summary&gt;
&lt;p&gt;See the &lt;a href="#record-class"&gt;Record class&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;id&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;title&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;isFavorite&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;coordinate&lt;/span&gt;&lt;/span&gt;: CLLocationCoordinate2D) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coordinate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;()
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;isFavorite&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;required&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;row&lt;/span&gt;: row)
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-list-of-record-methods" class="anchor" aria-hidden="true" href="#list-of-record-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;List of Record Methods&lt;/h2&gt;
&lt;p&gt;This is the list of record methods, along with their required protocols. The &lt;a href="#record-class"&gt;Record&lt;/a&gt; class adopts all these protocols, and adds a few extra methods.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Protocols&lt;/th&gt;
&lt;th align="center"&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Core Methods&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;init(row:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseTableName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseSelection&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#columns-selected-by-a-request"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.persistenceConflictPolicy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#conflict-resolution"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.encode(to:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.didInsert(with:for:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Insert and Update Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.insert(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.save(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.update(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.update(db, columns:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db, from:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#record-comparison"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db) { ... }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#record-comparison"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#record-comparison"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.updateAll(db, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).updateAll(db, ...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Delete Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.delete(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.deleteOne(db, key:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¹&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.deleteAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.deleteAll(db, keys:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¹&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).deleteAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Check Record Existence&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.exists(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Convert Record to Dictionary&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseDictionary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Count Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCount(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchCount(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fetch Record &lt;a href="#cursors"&gt;Cursors&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(db, keys:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¹&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(db, sql: sql)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-3"&gt;³&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(statement)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-4"&gt;⁴&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchCursor(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fetch Record Arrays&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(db, keys:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¹&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(db, sql: sql)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-3"&gt;³&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(statement)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-4"&gt;⁴&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fetch Individual Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(db, key:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¹&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(db, sql: sql)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-3"&gt;³&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(statement)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-4"&gt;⁴&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchOne(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseDecodingUserInfo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#the-userinfo-dictionary"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseJSONDecoder(for:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#json-columns"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseDateDecodingStrategy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseEncodingUserInfo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#the-userinfo-dictionary"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseJSONEncoder(for:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#json-columns"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseDateEncodingStrategy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseUUIDEncodingStrategy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Define &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.belongsTo(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasMany(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasOne(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasManyThrough(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasOneThrough(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Building Query Interface &lt;a href="#requests"&gt;Requests&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.request(for:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; &amp;amp; &lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.all()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.none()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.select(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.select(..., as:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.annotated(with:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.matching(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.including(all:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.including(optional:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.including(required:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.joining(optional:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.joining(required:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.order(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.orderByPrimaryKey()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.having(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.limit(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseEquals(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseChanges(from:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db, from:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db) { ... }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.hasDatabaseChanges&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseChanges&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-1"&gt;¹&lt;/a&gt; All unique keys are supported: primary keys (single-column, composite, &lt;a href="#the-implicit-rowid-primary-key"&gt;implicit RowID&lt;/a&gt;) and unique indexes:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)                               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-2"&gt;²&lt;/a&gt; See &lt;a href="#requests"&gt;Fetch Requests&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;).&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-3"&gt;³&lt;/a&gt; See &lt;a href="#fetch-queries"&gt;SQL queries&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-4"&gt;⁴&lt;/a&gt; See &lt;a href="#prepared-statements"&gt;Prepared Statements&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; statement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(statement, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;])  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-the-query-interface" class="anchor" aria-hidden="true" href="#the-query-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Query Interface&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;The query interface lets you write pure Swift instead of SQL:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update database schema&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch records&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(originColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(priceColumn)
        .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Count&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(colorColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; Color.&lt;span class="pl-smi"&gt;red&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(originColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, priceColumn &lt;span class="pl-k"&gt;*=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.75&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Delete&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(corkedColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You need to open a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt; before you can query the database.&lt;/p&gt;
&lt;p&gt;Please bear in mind that the query interface can not generate all possible SQL queries. You may also &lt;em&gt;prefer&lt;/em&gt; writing SQL, and this is just OK. From little snippets to full queries, your SQL skills are welcome:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update database schema (with SQL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CREATE TABLE wine (...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch records (with SQL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine WHERE origin = ? ORDER BY price&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Count (with an SQL snippet)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [Color.&lt;span class="pl-smi"&gt;red&lt;/span&gt;])
        .&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update (with SQL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE wine SET price = price * 0.75 WHERE origin = 'Burgundy'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Delete (with SQL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DELETE FROM wine WHERE corked&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So don't miss the &lt;a href="#sqlite-api"&gt;SQL API&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the generated SQL may change between GRDB releases, without notice: don't have your application rely on any specific SQL output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#database-schema"&gt;Database Schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requests"&gt;Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#expressions"&gt;Expressions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sql-operators"&gt;SQL Operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sql-functions"&gt;SQL Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-from-requests"&gt;Fetching from Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-by-key"&gt;Fetching by Key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-aggregated-values"&gt;Fetching Aggregated Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#delete-requests"&gt;Delete Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#update-requests"&gt;Update Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-requests"&gt;Custom Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;Associations and Joins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-database-schema" class="anchor" aria-hidden="true" href="#database-schema"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Schema&lt;/h2&gt;
&lt;p&gt;Once granted with a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;, you can setup your database schema without writing SQL:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#create-tables"&gt;Create Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#modify-tables"&gt;Modify Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#drop-tables"&gt;Drop Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-indexes"&gt;Create Indexes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-create-tables" class="anchor" aria-hidden="true" href="#create-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Tables&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE place (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   title TEXT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   favorite BOOLEAN NOT NULL DEFAULT 0,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   latitude DOUBLE NOT NULL,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   longitude DOUBLE NOT NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;boolean&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;create(table:)&lt;/code&gt; method covers nearly all SQLite table creation features. For virtual tables, see &lt;a href="Documentation/FullTextSearch.md"&gt;Full-Text Search&lt;/a&gt;, or use raw SQL.&lt;/p&gt;
&lt;p&gt;SQLite itself has many reference documents about table creation: &lt;a href="https://www.sqlite.org/lang_createtable.html" rel="nofollow"&gt;CREATE TABLE&lt;/a&gt;, &lt;a href="https://www.sqlite.org/datatype3.html" rel="nofollow"&gt;Datatypes In SQLite Version 3&lt;/a&gt;, &lt;a href="https://www.sqlite.org/foreignkeys.html" rel="nofollow"&gt;SQLite Foreign Key Support&lt;/a&gt;, &lt;a href="https://www.sqlite.org/lang_conflict.html" rel="nofollow"&gt;ON CONFLICT&lt;/a&gt;, &lt;a href="https://www.sqlite.org/withoutrowid.html" rel="nofollow"&gt;The WITHOUT ROWID Optimization&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Configure table creation&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE example ( ... )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TEMPORARY TABLE example IF NOT EXISTS (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;temporary&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;ifNotExists&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: database table names should be singular, and camel-cased. Make them look like Swift identifiers: &lt;code&gt;place&lt;/code&gt;, &lt;code&gt;country&lt;/code&gt;, &lt;code&gt;postalAddress&lt;/code&gt;, 'httpRequest'.&lt;/p&gt;
&lt;p&gt;This will help you using &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt; when you need them. Database table names that follow another naming convention are totally OK, but you will need to perform extra configuration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Add regular columns&lt;/strong&gt; with their name and eventual type (text, integer, double, numeric, boolean, blob, date and datetime) - see &lt;a href="https://www.sqlite.org/datatype3.html" rel="nofollow"&gt;SQLite data types&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE example (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   a,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   name TEXT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   creationDate DATETIME,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;creationDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;datetime&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Define &lt;strong&gt;not null&lt;/strong&gt; columns, and set &lt;strong&gt;default&lt;/strong&gt; values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; email TEXT NOT NULL,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; name TEXT NOT NULL DEFAULT 'Anonymous',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Anonymous&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use an individual column as &lt;strong&gt;primary&lt;/strong&gt;, &lt;strong&gt;unique&lt;/strong&gt;, or &lt;strong&gt;foreign key&lt;/strong&gt;. When defining a foreign key, the referenced column is the primary key of the referenced table (unless you specify otherwise):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; uuid TEXT PRIMARY KEY,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;uuid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; email TEXT UNIQUE,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; countryCode TEXT REFERENCES country(code) ON DELETE CASCADE,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;references&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;country&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;onDelete&lt;/span&gt;: .&lt;span class="pl-smi"&gt;cascade&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: when you need an integer primary key that automatically generates unique values, it is highly recommended that you use the &lt;code&gt;autoIncrementedPrimaryKey&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The reason for this recommendation is that auto-incremented primary keys prevent the reuse of ids. This prevents your app or &lt;a href="#database-changes-observation"&gt;database observation tools&lt;/a&gt; to think that a row was updated, when it was actually deleted, then replaced. Depending on your application needs, this may be acceptable. But usually it is not.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Create an index&lt;/strong&gt; on the column:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;integer&lt;/span&gt;).&lt;span class="pl-c1"&gt;indexed&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For extra index options, see &lt;a href="#create-indexes"&gt;Create Indexes&lt;/a&gt; below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Perform integrity checks&lt;/strong&gt; on individual columns, and SQLite will only let conforming rows in. In the example below, the &lt;code&gt;$0&lt;/code&gt; closure variable is a column which lets you build any SQL &lt;a href="#expressions"&gt;expression&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; name TEXT CHECK (LENGTH(name) &amp;gt; 0)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; score INTEGER CHECK (score &amp;gt; 0)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-smi"&gt;check&lt;/span&gt; { &lt;span class="pl-c1"&gt;length&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; }
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;integer&lt;/span&gt;).&lt;span class="pl-c1"&gt;check&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score &amp;gt; 0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Other &lt;strong&gt;table constraints&lt;/strong&gt; can involve several columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; PRIMARY KEY (a, b),&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNIQUE (a, b) ON CONFLICT REPLACE,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;uniqueKey&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;onConfict&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FOREIGN KEY (a, b) REFERENCES parents(c, d),&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;foreignKey&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;references&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;parents&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CHECK (a + b &amp;lt; 10),&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;check&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CHECK (a + b &amp;lt; 10)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;check&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a + b &amp;lt; 10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-modify-tables" class="anchor" aria-hidden="true" href="#modify-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modify Tables&lt;/h3&gt;
&lt;p&gt;SQLite lets you rename tables, and add columns to existing tables:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ALTER TABLE referer RENAME TO referrer&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;rename&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;referer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;referrer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ALTER TABLE player ADD COLUMN url TEXT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;alter&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;column&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: SQLite restricts the possible table alterations, and may require you to recreate dependent triggers or views. See the documentation of the &lt;a href="https://www.sqlite.org/lang_altertable.html" rel="nofollow"&gt;ALTER TABLE&lt;/a&gt; for details. See &lt;a href="#advanced-database-schema-changes"&gt;Advanced Database Schema Changes&lt;/a&gt; for a way to lift restrictions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-drop-tables" class="anchor" aria-hidden="true" href="#drop-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Drop Tables&lt;/h3&gt;
&lt;p&gt;Drop tables with the &lt;code&gt;drop(table:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;drop&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;obsolete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-create-indexes" class="anchor" aria-hidden="true" href="#create-indexes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Indexes&lt;/h3&gt;
&lt;p&gt;Create indexes with the &lt;code&gt;create(index:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE UNIQUE INDEX byEmail ON users(email)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;byEmail&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;on&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;columns&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;unique&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Relevant SQLite documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/lang_createindex.html" rel="nofollow"&gt;CREATE INDEX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/expridx.html" rel="nofollow"&gt;Indexes On Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/partialindex.html" rel="nofollow"&gt;Partial Indexes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requests" class="anchor" aria-hidden="true" href="#requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requests&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The query interface requests&lt;/strong&gt; let you fetch values from the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;).&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All requests start from &lt;strong&gt;a type&lt;/strong&gt; that adopts the &lt;code&gt;TableRecord&lt;/code&gt; protocol, such as a &lt;code&gt;Record&lt;/code&gt; subclass (see &lt;a href="#records"&gt;Records&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Declare the table &lt;strong&gt;columns&lt;/strong&gt; that you want to use for filtering, or sorting:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; idColumn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; nameColumn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also declare column enums, if you prefer:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Columns.id and Columns.name can be used just as&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; idColumn and nameColumn declared above.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;name&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can now build requests with the following methods: &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;distinct&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;matching&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;having&lt;/code&gt;, &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;reversed&lt;/code&gt;, &lt;code&gt;limit&lt;/code&gt;, &lt;code&gt;joining&lt;/code&gt;, &lt;code&gt;including&lt;/code&gt;. All those methods return another request, which you can further refine by applying another method: &lt;code&gt;Player.select(...).filter(...).order(...)&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;all()&lt;/code&gt;, &lt;code&gt;none()&lt;/code&gt;: the requests for all rows, or no row.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, all columns are selected. See &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;select(...)&lt;/code&gt; and &lt;code&gt;select(..., as:)&lt;/code&gt; define the selected columns. See &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;annotated(with: expression...)&lt;/code&gt; extends the selection.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT *, (score + bonus) AS total FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;annotated&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: (scoreColumn &lt;span class="pl-k"&gt;+&lt;/span&gt; bonusColumn).&lt;span class="pl-c1"&gt;forKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;total&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Such annotations can help using &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT player.*, team.name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; JOIN team ON team.id = player.teamId&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; teamAlias &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TableAlias&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;annotated&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: teamAlias[nameColumn])
    .&lt;span class="pl-c1"&gt;joining&lt;/span&gt;(&lt;span class="pl-c1"&gt;required&lt;/span&gt;: Player.&lt;span class="pl-smi"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;aliased&lt;/span&gt;(teamAlias))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;annotated(with: aggregate)&lt;/code&gt; extends the selection with &lt;a href="Documentation/AssociationsBasics.md#association-aggregates"&gt;association aggregates&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT team.*, COUNT(DISTINCT player.rowid) AS playerCount&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM team&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LEFT JOIN player ON player.teamId = team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; GROUP BY team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Team.&lt;span class="pl-c1"&gt;annotated&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: Team.&lt;span class="pl-smi"&gt;players&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;distinct()&lt;/code&gt; performs uniquing.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT DISTINCT name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;).&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;filter(expression)&lt;/code&gt; applies conditions.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;].&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(idColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (name IS NOT NULL) AND (height &amp;gt; 1.75)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; heightColumn &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1.75&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;filter(key:)&lt;/code&gt; and &lt;code&gt;filter(keys:)&lt;/code&gt; apply conditions on primary keys and unique keys:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Country.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Citizenship.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;matching(pattern)&lt;/code&gt; performs &lt;a href="Documentation/FullTextSearch.md"&gt;full-text search&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE document MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAllTokensIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the pattern is nil, no row will match.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;group(expression, ...)&lt;/code&gt; groups rows.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT name, MAX(score) FROM player GROUP BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player
    .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
    .&lt;span class="pl-c1"&gt;group&lt;/span&gt;(nameColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;having(expression)&lt;/code&gt; applies conditions on grouped rows.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT team, MAX(score) FROM player GROUP BY team HAVING MIN(score) &amp;gt;= 1000&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player
    .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(teamColumn, &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
    .&lt;span class="pl-c1"&gt;group&lt;/span&gt;(teamColumn)
    .&lt;span class="pl-c1"&gt;having&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn) &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;having(aggregate)&lt;/code&gt; applies conditions on grouped rows, according to an &lt;a href="Documentation/AssociationsBasics.md#association-aggregates"&gt;association aggregate&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT team.*&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM team&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LEFT JOIN player ON player.teamId = team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; GROUP BY team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; HAVING COUNT(DISTINCT player.rowid) &amp;gt;= 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Team.&lt;span class="pl-c1"&gt;having&lt;/span&gt;(Team.&lt;span class="pl-smi"&gt;players&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;order(ordering, ...)&lt;/code&gt; sorts.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY score DESC, name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;, nameColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite considers NULL values to be smaller than any other values for sorting purposes. Hence, NULLs naturally appear at the beginning of an ascending ordering and at the end of a descending ordering. With a &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;custom SQLite build&lt;/a&gt;, this can be changed using &lt;code&gt;.ascNullsLast&lt;/code&gt; and &lt;code&gt;.descNullsFirst&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY score ASC NULLS LAST&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn.&lt;span class="pl-smi"&gt;ascNullsLast&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each &lt;code&gt;order&lt;/code&gt; call clears any previous ordering:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn).&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;orderByPrimaryKey()&lt;/code&gt; sorts by primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;orderByPrimaryKey&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country ORDER BY code&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Country.&lt;span class="pl-c1"&gt;orderByPrimaryKey&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship ORDER BY citizenId, countryCode&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Citizenship.&lt;span class="pl-c1"&gt;orderByPrimaryKey&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;reversed()&lt;/code&gt; reverses the eventual orderings.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY score ASC, name DESC&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;, nameColumn).&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If no ordering was already specified, this method has no effect:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;().&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;limit(limit, offset: offset)&lt;/code&gt; limits and pages results.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player LIMIT 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player LIMIT 5 OFFSET 10&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;offset&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;joining(...)&lt;/code&gt; and &lt;code&gt;including(...)&lt;/code&gt; fetch and join records through &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT player.*, team.*&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; JOIN team ON team.id = player.teamId&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;including&lt;/span&gt;(&lt;span class="pl-c1"&gt;required&lt;/span&gt;: Player.&lt;span class="pl-smi"&gt;team&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can refine requests by chaining those methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (email IS NOT NULL) ORDER BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn).&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, and &lt;code&gt;limit&lt;/code&gt; methods ignore and replace previously applied selection, orderings, grouping, and limits. On the opposite, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;matching&lt;/code&gt;, and &lt;code&gt;having&lt;/code&gt; methods extend the query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Player                          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WHERE (name IS NOT NULL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;        AND (email IS NOT NULL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; - ignored -&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;()                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; - ignored -&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn)         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ORDER BY score&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;offset&lt;/span&gt;: &lt;span class="pl-c1"&gt;40&lt;/span&gt;)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; - ignored -&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LIMIT 10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Raw SQL snippets are also accepted, with eventual &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/StatementArguments.html" rel="nofollow"&gt;arguments&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT DATE(creationDate), COUNT(*) FROM player WHERE name = 'Arthur' GROUP BY date(creationDate)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player
    .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DATE(creationDate), COUNT(*)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    .&lt;span class="pl-c1"&gt;group&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DATE(creationDate)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-columns-selected-by-a-request" class="anchor" aria-hidden="true" href="#columns-selected-by-a-request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Columns Selected by a Request&lt;/h3&gt;
&lt;p&gt;By default, query interface requests select all columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;The selection can be changed for each individual requests, or for all requests built from a given type.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;select(...)&lt;/code&gt; and &lt;code&gt;select(..., as:)&lt;/code&gt; methods change the selection of a single request (see &lt;a href="#fetching-from-requests"&gt;Fetching from Requests&lt;/a&gt; for detailed information):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default selection for a record type is controlled by the &lt;code&gt;databaseSelection&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;RestrictedPlayer&lt;/span&gt; : &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseTableName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;ExtendedPlayer&lt;/span&gt; : &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseTableName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;AllColumns&lt;/span&gt;(), Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; RestrictedPlayer.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT *, rowid FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; ExtendedPlayer.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: make sure the &lt;code&gt;databaseSelection&lt;/code&gt; property is explicitly declared as &lt;code&gt;[SQLSelectable]&lt;/code&gt;. If it is not, the Swift compiler may silently miss the protocol requirement, resulting in sticky &lt;code&gt;SELECT *&lt;/code&gt; requests. To verify your setup, see the &lt;a href="#how-do-i-print-a-request-as-sql"&gt;How do I print a request as SQL?&lt;/a&gt; FAQ.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-expressions" class="anchor" aria-hidden="true" href="#expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Expressions&lt;/h2&gt;
&lt;p&gt;Feed &lt;a href="#requests"&gt;requests&lt;/a&gt; with SQL expressions built from your Swift code:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sql-operators" class="anchor" aria-hidden="true" href="#sql-operators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Operators&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;IS NOT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Comparison operators are based on the Swift operators &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, &lt;code&gt;!==&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (name = 'Arthur')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (name IS NULL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (score IS 1000)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(scoreColumn &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM rectangle WHERE width &amp;lt; height&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Rectangle.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(widthColumn &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; heightColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: SQLite string comparison, by default, is case-sensitive and not Unicode-aware. See &lt;a href="#string-comparison"&gt;string comparison&lt;/a&gt; if you need more control.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;SQLite arithmetic operators are derived from their Swift equivalent:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT ((temperature * 1.8) + 32) AS farenheit FROM planet&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Planet.&lt;span class="pl-c1"&gt;select&lt;/span&gt;((temperatureColumn &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1.8&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;32&lt;/span&gt;).&lt;span class="pl-c1"&gt;forKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;farenheit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: an expression like &lt;code&gt;nameColumn + "rrr"&lt;/code&gt; will be interpreted by SQLite as a numerical addition (with funny results), not as a string concatenation. See the &lt;code&gt;concat&lt;/code&gt; operator below.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When you want to join a sequence of expressions with the &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;*&lt;/code&gt; operator, use &lt;code&gt;joined(operator:)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT score + bonus + 1000 FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; values &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    scoreColumn,
    bonusColumn,
    &lt;span class="pl-c1"&gt;1000&lt;/span&gt;.&lt;span class="pl-smi"&gt;databaseValue&lt;/span&gt;]
Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(values.&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;operator&lt;/span&gt;: .&lt;span class="pl-smi"&gt;add&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note in the example above how you concatenate raw values: &lt;code&gt;1000.databaseValue&lt;/code&gt;. A plain &lt;code&gt;1000&lt;/code&gt; would not compile.&lt;/p&gt;
&lt;p&gt;When the sequence is empty, &lt;code&gt;joined(operator: .add)&lt;/code&gt; returns 0, and &lt;code&gt;joined(operator: .multiply)&lt;/code&gt; returns 1.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;||&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Concatenate several strings:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT firstName || ' ' || lastName FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;([firstNameColumn, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;databaseValue&lt;/span&gt;, lastNameColumn].&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;operator&lt;/span&gt;: .&lt;span class="pl-smi"&gt;concat&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note in the example above how you concatenate raw strings: &lt;code&gt;" ".databaseValue&lt;/code&gt;. A plain &lt;code&gt;" "&lt;/code&gt; would not compile.&lt;/p&gt;
&lt;p&gt;When the sequence is empty, &lt;code&gt;joined(operator: .concat)&lt;/code&gt; returns the empty string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;AND&lt;/code&gt;, &lt;code&gt;OR&lt;/code&gt;, &lt;code&gt;NOT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The SQL logical operators are derived from the Swift &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE ((NOT verified) OR (score &amp;lt; 1000))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-k"&gt;!&lt;/span&gt;verifiedColumn &lt;span class="pl-k"&gt;||&lt;/span&gt; scoreColumn &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to join a sequence of expressions with the &lt;code&gt;AND&lt;/code&gt; or &lt;code&gt;OR&lt;/code&gt; operator, use &lt;code&gt;joined(operator:)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (verified AND (score &amp;gt;= 1000) AND (name IS NOT NULL))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; conditions &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    verifiedColumn,
    scoreColumn &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;,
    nameColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;]
Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(conditions.&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;operator&lt;/span&gt;: .&lt;span class="pl-smi"&gt;and&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the sequence is empty, &lt;code&gt;joined(operator: .and)&lt;/code&gt; returns true, and &lt;code&gt;joined(operator: .or)&lt;/code&gt; returns false:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([].&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;operator&lt;/span&gt;: .&lt;span class="pl-smi"&gt;and&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([].&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;operator&lt;/span&gt;: .&lt;span class="pl-smi"&gt;or&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BETWEEN&lt;/code&gt;, &lt;code&gt;IN&lt;/code&gt;, &lt;code&gt;NOT IN&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To check inclusion in a Swift sequence (array, set, range…), call the &lt;code&gt;contains&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;].&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(idColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id NOT IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-k"&gt;!&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;].&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(idColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE score BETWEEN 0 AND 1000&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(scoreColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (score &amp;gt;= 0) AND (score &amp;lt; 1000)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(scoreColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE initial BETWEEN 'A' AND 'N'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;N&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(initialColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (initial &amp;gt;= 'A') AND (initial &amp;lt; 'N')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;N&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(initialColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: SQLite string comparison, by default, is case-sensitive and not Unicode-aware. See &lt;a href="#string-comparison"&gt;string comparison&lt;/a&gt; if you need more control.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;LIKE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The SQLite LIKE operator is available as the &lt;code&gt;like&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (email LIKE '%@example.com')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn.&lt;span class="pl-c1"&gt;like&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the SQLite LIKE operator is case-insensitive but not Unicode-aware. For example, the expression &lt;code&gt;'a' LIKE 'A'&lt;/code&gt; is true but &lt;code&gt;'æ' LIKE 'Æ'&lt;/code&gt; is false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;MATCH&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The full-text MATCH operator is available through &lt;a href="Documentation/FullTextSearch.md#fts3pattern"&gt;FTS3Pattern&lt;/a&gt; (for FTS3 and FTS4 tables) and &lt;a href="Documentation/FullTextSearch.md#fts5pattern"&gt;FTS5Pattern&lt;/a&gt; (for FTS5):&lt;/p&gt;
&lt;p&gt;FTS3 and FTS4:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAllTokensIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE document MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE content MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Document.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(contentColumn.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(pattern))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FTS5:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAllTokensIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE document MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sql-functions" class="anchor" aria-hidden="true" href="#sql-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Functions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ABS&lt;/code&gt;, &lt;code&gt;AVG&lt;/code&gt;, &lt;code&gt;COUNT&lt;/code&gt;, &lt;code&gt;LENGTH&lt;/code&gt;, &lt;code&gt;MAX&lt;/code&gt;, &lt;code&gt;MIN&lt;/code&gt;, &lt;code&gt;SUM&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Those are based on the &lt;code&gt;abs&lt;/code&gt;, &lt;code&gt;average&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;sum&lt;/code&gt; Swift functions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT MIN(score), MAX(score) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;count&lt;/span&gt;(nameColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(DISTINCT name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;count&lt;/span&gt;(&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;: nameColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IFNULL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use the Swift &lt;code&gt;??&lt;/code&gt; operator:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT IFNULL(name, 'Anonymous') FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Anonymous&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT IFNULL(name, email) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;??&lt;/span&gt; emailColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;LOWER&lt;/code&gt;, &lt;code&gt;UPPER&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The query interface does not give access to those SQLite functions. Nothing against them, but they are not unicode aware.&lt;/p&gt;
&lt;p&gt;Instead, GRDB extends SQLite with SQL functions that call the Swift built-in string functions &lt;code&gt;capitalized&lt;/code&gt;, &lt;code&gt;lowercased&lt;/code&gt;, &lt;code&gt;uppercased&lt;/code&gt;, &lt;code&gt;localizedCapitalized&lt;/code&gt;, &lt;code&gt;localizedLowercased&lt;/code&gt; and &lt;code&gt;localizedUppercased&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn.&lt;span class="pl-c1"&gt;uppercased&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: When &lt;em&gt;comparing&lt;/em&gt; strings, you'd rather use a &lt;a href="#string-comparison"&gt;collation&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Not recommended&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;nameColumn.&lt;span class="pl-c1"&gt;uppercased&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; name.&lt;span class="pl-c1"&gt;uppercased&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Better&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;nameColumn.&lt;span class="pl-c1"&gt;collating&lt;/span&gt;(.&lt;span class="pl-smi"&gt;caseInsensitiveCompare&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; name&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom SQL functions and aggregates&lt;/p&gt;
&lt;p&gt;You can apply your own &lt;a href="#custom-functions-"&gt;custom SQL functions and aggregates&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; f &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT f(name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(f.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(nameColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-fetching-from-requests" class="anchor" aria-hidden="true" href="#fetching-from-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching from Requests&lt;/h2&gt;
&lt;p&gt;Once you have a request, you can fetch the records at the origin of the request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some request based on `Player`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; QueryInterfaceRequest&amp;lt;Player&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch players:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; allPlayers &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; arthur &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for information about the &lt;code&gt;fetchCursor&lt;/code&gt;, &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchOne&lt;/code&gt; methods.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You sometimes want to fetch other values&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The simplest way is to use the request as an argument to a fetching method of the desired type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch an Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch a Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request)&lt;span class="pl-k"&gt;!&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; minScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also change the request so that it knows the type it has to fetch:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;With &lt;code&gt;asRequest(of:)&lt;/code&gt;, useful when you use &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;BookInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;Decodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; book&lt;span class="pl-k"&gt;:&lt;/span&gt; Book
    &lt;span class="pl-k"&gt;var&lt;/span&gt; author&lt;span class="pl-k"&gt;:&lt;/span&gt; Author
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A request of BookInfo&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Book
    .&lt;span class="pl-c1"&gt;including&lt;/span&gt;(&lt;span class="pl-c1"&gt;required&lt;/span&gt;: Book.&lt;span class="pl-smi"&gt;author&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;asRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;of&lt;/span&gt;: BookInfo.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; bookInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [BookInfo]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With &lt;code&gt;select(..., as:)&lt;/code&gt;, which is handy when you change the selection:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A request of Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-fetching-by-key" class="anchor" aria-hidden="true" href="#fetching-by-key"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching By Key&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Fetching records according to their primary key&lt;/strong&gt; is a very common task. It has a shortcut which accepts any single-column primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the table has no explicit primary key, GRDB uses the &lt;a href="#the-implicit-rowid-primary-key"&gt;hidden "rowid" column&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Document?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multiple-column primary keys and unique keys defined by unique indexes, provide a dictionary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Citizenship?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When you want to build a request and plan to fetch from it later&lt;/strong&gt;, use the &lt;code&gt;filter(key:)&lt;/code&gt; and &lt;code&gt;filter(keys:)&lt;/code&gt; methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; country &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; countries &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; citizenship &lt;span class="pl-k"&gt;=&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Citizenship?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-fetching-aggregated-values" class="anchor" aria-hidden="true" href="#fetching-aggregated-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Aggregated Values&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Requests can count.&lt;/strong&gt; The &lt;code&gt;fetchCount()&lt;/code&gt; method returns the number of rows that would be returned by a fetch request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM player WHERE email IS NOT NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(DISTINCT name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn).&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM (SELECT DISTINCT name, score FROM player)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, scoreColumn).&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Other aggregated values&lt;/strong&gt; can also be selected and fetched (see &lt;a href="#sql-functions"&gt;SQL Functions&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request)&lt;span class="pl-k"&gt;!&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; minScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-delete-requests" class="anchor" aria-hidden="true" href="#delete-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Delete Requests&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Requests can delete records&lt;/strong&gt;, with the &lt;code&gt;deleteAll()&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE team = 'red'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(teamColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player ORDER BY score LIMIT 10&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn)
    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt; Deletion methods are only available for records that adopts the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Deleting records according to their primary key&lt;/strong&gt; is also quite common. It has a shortcut which accepts any single-column primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM country WHERE isoCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the table has no explicit primary key, GRDB uses the &lt;a href="#the-implicit-rowid-primary-key"&gt;hidden "rowid" column&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM document WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multiple-column primary keys and unique keys defined by unique indexes, provide a dictionary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-update-requests" class="anchor" aria-hidden="true" href="#update-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update Requests&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Requests can batch update records&lt;/strong&gt;. The &lt;code&gt;updateAll()&lt;/code&gt; method accepts &lt;em&gt;column assignments&lt;/em&gt; defined with the &lt;code&gt;&amp;lt;-&lt;/code&gt; operator:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE player SET score = 0, isHealthy = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, scoreColumn &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, isHealthyColumn &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE player SET score = 0 WHERE team = 'red'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(teamColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, scoreColumn &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE player SET top = 1 ORDER BY score DESC LIMIT 10&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, topColumn &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Column assignments accept any expression:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE player SET score = score + (bonus * 2)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, scoreColumn &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; scoreColumn &lt;span class="pl-k"&gt;+&lt;/span&gt; bonusColumn &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a convenience, you can also use the &lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;-=&lt;/code&gt;, &lt;code&gt;*=&lt;/code&gt;, or &lt;code&gt;/=&lt;/code&gt; operators:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE player SET score = score + (bonus * 2)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, scoreColumn &lt;span class="pl-k"&gt;+=&lt;/span&gt; bonusColumn &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Default &lt;a href="#conflict-resolution"&gt;Conflict Resolution&lt;/a&gt; rules apply, and you may also provide a specific one:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE OR IGNORE player SET ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;updateAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;onConflict&lt;/span&gt;: .&lt;span class="pl-smi"&gt;ignore&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; assignments... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt; The &lt;code&gt;updateAll&lt;/code&gt; method is only available for records that adopts the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-custom-requests" class="anchor" aria-hidden="true" href="#custom-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Requests&lt;/h2&gt;
&lt;p&gt;Until now, we have seen &lt;a href="#requests"&gt;requests&lt;/a&gt; created from any type that adopts the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; QueryInterfaceRequest&amp;lt;Player&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those requests of type &lt;code&gt;QueryInterfaceRequest&lt;/code&gt; can fetch and count:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When the query interface can not generate the SQL you need&lt;/strong&gt;, you can still fallback to &lt;a href="#fetch-queries"&gt;raw SQL&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Custom SQL is always welcome&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But you may prefer to bring some elegance back in, and build custom requests:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No custom SQL in sight&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;customRequest&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetchrequest-protocol"&gt;FetchRequest Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-custom-requests"&gt;Building Custom Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-from-custom-requests"&gt;Fetching From Custom Requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-fetchrequest-protocol" class="anchor" aria-hidden="true" href="#fetchrequest-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FetchRequest Protocol&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;FetchRequest&lt;/strong&gt; is the protocol for all requests that run from a single select statement, and know how fetched rows should be interpreted:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchRequest&lt;/span&gt;: &lt;span class="pl-e"&gt;DatabaseRegionConvertible &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The type that tells how fetched rows should be decoded&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;RowDecoder&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a PreparedRequest made of a prepared statement that is ready to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; be executed, and an eventual row adapter.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;makePreparedRequest&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-en"&gt;forSingleResult&lt;/span&gt; &lt;span class="pl-smi"&gt;singleResult&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; PreparedRequest
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The number of rows fetched by the request.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchCount&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the &lt;code&gt;RowDecoder&lt;/code&gt; associated type is &lt;a href="#fetching-rows"&gt;Row&lt;/a&gt;, or a &lt;a href="#value-queries"&gt;value&lt;/a&gt;, or a type that conforms to &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;, the request can fetch: see &lt;a href="#fetching-from-custom-requests"&gt;Fetching From Custom Requests&lt;/a&gt; below.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;makePreparedRequest(_:forSingleResult:)&lt;/code&gt; method accepts a database connection, a &lt;code&gt;singleResult&lt;/code&gt; hint, and returns a "prepared request" made of a &lt;a href="#prepared-statements"&gt;prepared statement&lt;/a&gt; and an optional &lt;a href="#row-adapters"&gt;row adapter&lt;/a&gt;. Conforming types can use the &lt;code&gt;singleResult&lt;/code&gt; hint as an optimization opportunity, and return a statement that fetches at most one row, with a &lt;code&gt;LIMIT&lt;/code&gt; SQL clause, when possible.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fetchCount&lt;/code&gt; method has a default implementation that builds a correct but naive SQL query from the statement returned by &lt;code&gt;prepare&lt;/code&gt;: &lt;code&gt;SELECT COUNT(*) FROM (...)&lt;/code&gt;. Adopting types can refine the counting SQL by customizing their &lt;code&gt;fetchCount&lt;/code&gt; implementation.&lt;/p&gt;
&lt;p&gt;The base &lt;code&gt;DatabaseRegionConvertible&lt;/code&gt; protocol is involved in &lt;a href="#database-changes-observation"&gt;database observation&lt;/a&gt;. For more information, see &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;, &lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;, and &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The FetchRequest protocol is adopted, for example, by &lt;a href="#requests"&gt;query interface requests&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A FetchRequest whose RowDecoder associated type is Player:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-custom-requests" class="anchor" aria-hidden="true" href="#building-custom-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Custom Requests&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;To build custom requests&lt;/strong&gt;, you can use one of the built-in requests, derive requests from other requests, or create your own request type that adopts the &lt;a href="#fetchrequest-protocol"&gt;FetchRequest&lt;/a&gt; protocol.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/SQLRequest.html" rel="nofollow"&gt;SQLRequest&lt;/a&gt; is a fetch request built from raw SQL. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;color&lt;/span&gt;&lt;/span&gt;: Color) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; SQLRequest&amp;lt;Player&amp;gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Player&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE color = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            arguments&lt;span class="pl-k"&gt;:&lt;/span&gt; [color])
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;color&lt;/span&gt;: .&lt;span class="pl-smi"&gt;red&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Swift 5, you can build SQLRequest with &lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;color&lt;/span&gt;&lt;/span&gt;: Color) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; SQLRequest&amp;lt;Player&amp;gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE color = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;color&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;asRequest(of:)&lt;/code&gt; method changes the type fetched by the request. It is useful, for example, when you use &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;BookInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;Decodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; book&lt;span class="pl-k"&gt;:&lt;/span&gt; Book
    &lt;span class="pl-k"&gt;var&lt;/span&gt; author&lt;span class="pl-k"&gt;:&lt;/span&gt; Author
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Book
    .&lt;span class="pl-c1"&gt;including&lt;/span&gt;(&lt;span class="pl-c1"&gt;required&lt;/span&gt;: Book.&lt;span class="pl-smi"&gt;author&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;asRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;of&lt;/span&gt;: BookInfo.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [BookInfo]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;adapted(_:)&lt;/code&gt; method eases the consumption of complex rows with &lt;a href="#row-adapters"&gt;row adapters&lt;/a&gt;. See &lt;a href="#joined-queries-support"&gt;Joined Queries Support&lt;/a&gt; for some sample code that uses this method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/AnyFetchRequest.html" rel="nofollow"&gt;AnyFetchRequest&lt;/a&gt;: a &lt;a href="http://chris.eidhof.nl/post/type-erasers-in-swift/" rel="nofollow"&gt;type-erased&lt;/a&gt; request.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-fetching-from-custom-requests" class="anchor" aria-hidden="true" href="#fetching-from-custom-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching From Custom Requests&lt;/h3&gt;
&lt;p&gt;A type adopting &lt;a href="#fetchrequest-protocol"&gt;FetchRequest&lt;/a&gt; knows exactly what it has to do when its RowDecoder associated type can decode database rows (&lt;a href="#fetching-rows"&gt;Row&lt;/a&gt; itself, &lt;a href="#value-queries"&gt;values&lt;/a&gt;, or &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rowRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some FetchRequest that fetches Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A cursor of rows&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; playerRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some FetchRequest that fetches Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; intRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some FetchRequest that fetches Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Player&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE color = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    arguments&lt;span class="pl-k"&gt;:&lt;/span&gt; [color])
&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for information about the &lt;code&gt;fetchCursor&lt;/code&gt;, &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchOne&lt;/code&gt; methods.&lt;/p&gt;
&lt;p&gt;The RowDecoder type associated with the FetchRequest does not have to be Row, DatabaseValueConvertible, or FetchableRecord. See the &lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt; chapter for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-migrations" class="anchor" aria-hidden="true" href="#migrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrations&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Migrations&lt;/strong&gt; are a convenient way to alter your database schema over time in a consistent and easy way.&lt;/p&gt;
&lt;p&gt;Migrations run in order, once and only once. When a user upgrades your application, only non-applied migrations are run.&lt;/p&gt;
&lt;p&gt;Inside each migration, you typically &lt;a href="#database-schema"&gt;define and update your database tables&lt;/a&gt; according to your evolving application needs:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; migrator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseMigrator&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1st migration&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-c1"&gt;registerMigration&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2nd migration&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-c1"&gt;registerMigration&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;alter&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Migrations for future versions will be inserted here:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; // 3rd migration&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; migrator.registerMigration("...") { db in&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Each migration runs in a separate transaction.&lt;/strong&gt; Should one throw an error, its transaction is rollbacked, subsequent migrations do not run, and the error is eventually thrown by &lt;code&gt;migrator.migrate(dbQueue)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The memory of applied migrations is stored in the database itself&lt;/strong&gt; (in a reserved table).&lt;/p&gt;
&lt;p&gt;You migrate the database up to the latest version with the &lt;code&gt;migrate(_:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or migrator.migrate(dbPool)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To migrate a database up to a specific version, use &lt;code&gt;migrate(_:upTo:)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue, &lt;span class="pl-c1"&gt;upTo&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Migrations can only run forward:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue, &lt;span class="pl-c1"&gt;upTo&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue, &lt;span class="pl-c1"&gt;upTo&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: database is already migrated beyond migration "v1"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check if a migration has been applied:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; appliedMigrations &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;appliedMigrations&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue)
&lt;span class="pl-k"&gt;if&lt;/span&gt; appliedMigrations.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "v2" migration has been applied&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-the-erasedatabaseonschemachange-option" class="anchor" aria-hidden="true" href="#the-erasedatabaseonschemachange-option"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;eraseDatabaseOnSchemaChange&lt;/code&gt; Option&lt;/h3&gt;
&lt;p&gt;A DatabaseMigrator can automatically wipe out the full database content, and recreate the whole database from scratch, if it detects that a migration has changed its definition:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; migrator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseMigrator&lt;/span&gt;()
migrator.&lt;span class="pl-smi"&gt;eraseDatabaseOnSchemaChange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Beware! This flag can destroy your precious users' data!&lt;/p&gt;
&lt;p&gt;Yet it may be useful in those two situations:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;During application development, as you are still designing migrations, and the schema changes often.&lt;/p&gt;
&lt;p&gt;In this case, it is recommended that this flag does not ship in the distributed application:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; migrator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseMigrator&lt;/span&gt;()
#&lt;span class="pl-k"&gt;if&lt;/span&gt; DEBUG
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Speed up development by nuking the database when migrations change&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-smi"&gt;eraseDatabaseOnSchemaChange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
#&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When the database content can easily be recreated, such as a cache for some downloaded data.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &lt;code&gt;eraseDatabaseOnSchemaChange&lt;/code&gt; option triggers a recreation of the database if the migrator detects a &lt;em&gt;schema change&lt;/em&gt;. A schema change is any difference in the &lt;code&gt;sqlite_master&lt;/code&gt; table, which contains the SQL used to create database tables, indexes, triggers, and views.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-database-schema-changes" class="anchor" aria-hidden="true" href="#advanced-database-schema-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Database Schema Changes&lt;/h3&gt;
&lt;p&gt;SQLite does not support many schema changes, and won't let you drop a table column with "ALTER TABLE ... DROP COLUMN ...", for example.&lt;/p&gt;
&lt;p&gt;Yet any kind of schema change is still possible. The SQLite documentation explains in detail how to do so: &lt;a href="https://www.sqlite.org/lang_altertable.html#otheralter" rel="nofollow"&gt;https://www.sqlite.org/lang_altertable.html#otheralter&lt;/a&gt;. This technique requires the temporary disabling of foreign key checks, and is supported by the &lt;code&gt;registerMigrationWithDeferredForeignKeyCheck&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add a NOT NULL constraint on player.name:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-c1"&gt;registerMigrationWithDeferredForeignKeyCheck&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AddNotNullCheckOnName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new_player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
        t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO new_player SELECT * FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;drop&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;rename&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new_player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While your migration code runs with disabled foreign key checks, those are re-enabled and checked at the end of the migration, regardless of eventual errors.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-joined-queries-support" class="anchor" aria-hidden="true" href="#joined-queries-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Joined Queries Support&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GRDB helps consuming joined queries with complex selection.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this chapter, we will focus on the extraction of information from complex rows, such as the ones fetched by the query below:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; How to consume the left, middle, and right parts of those rows?&lt;/span&gt;
&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; player.&lt;span class="pl-k"&gt;*&lt;/span&gt;, team.&lt;span class="pl-k"&gt;*&lt;/span&gt;, &lt;span class="pl-c1"&gt;MAX&lt;/span&gt;(&lt;span class="pl-c1"&gt;round&lt;/span&gt;.&lt;span class="pl-c1"&gt;score&lt;/span&gt;) &lt;span class="pl-k"&gt;AS&lt;/span&gt; maxScore
&lt;span class="pl-k"&gt;FROM&lt;/span&gt; player
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; team &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; round &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;GROUP BY&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will not talk about the &lt;em&gt;generation&lt;/em&gt; of joined queries, which is covered in &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So what are we talking about?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is difficult to consume rows fetched from complex joined queries, because they often contain several columns with the same name: &lt;code&gt;id&lt;/code&gt; from table &lt;code&gt;player&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt; from table &lt;code&gt;team&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;When such ambiguity happens, GRDB row accessors always favor the leftmost matching column. This means that &lt;code&gt;row["id"]&lt;/code&gt; would give a player id, whithout any obvious way to access the team id.&lt;/p&gt;
&lt;p&gt;A classical technique to avoid this ambiguity is to give each column a unique name. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; A classical technique&lt;/span&gt;
&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; &lt;span class="pl-c1"&gt;player&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; player_id, &lt;span class="pl-c1"&gt;player&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; player_name, &lt;span class="pl-c1"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; team_id, &lt;span class="pl-c1"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; team_name, &lt;span class="pl-c1"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; team_color, &lt;span class="pl-c1"&gt;MAX&lt;/span&gt;(&lt;span class="pl-c1"&gt;round&lt;/span&gt;.&lt;span class="pl-c1"&gt;score&lt;/span&gt;) &lt;span class="pl-k"&gt;AS&lt;/span&gt; maxScore
&lt;span class="pl-k"&gt;FROM&lt;/span&gt; player
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; team &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; round &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;GROUP BY&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This technique works pretty well, but it has three drawbacks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The selection becomes hard to read and understand.&lt;/li&gt;
&lt;li&gt;Such queries are difficult to write by hand.&lt;/li&gt;
&lt;li&gt;The mangled names are a &lt;em&gt;very&lt;/em&gt; bad fit for &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; types that expect specific column names. After all, if the &lt;code&gt;Team&lt;/code&gt; record type can read &lt;code&gt;SELECT * FROM team ...&lt;/code&gt;, it should be able to read &lt;code&gt;SELECT ..., team.*, ...&lt;/code&gt; as well.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We thus need another technique. &lt;strong&gt;Below we'll see how to split rows into slices, and preserve column names.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SELECT player.*, team.*, MAX(round.score) AS maxScore FROM ...&lt;/code&gt; will be splitted into three slices: one that contains player's columns, one that contains team's columns, and a remaining slice that contains remaining column(s). The Player record type will be able to read the first slice, which contains the colums expected by the &lt;code&gt;Player.init(row:)&lt;/code&gt; initializer. In the same way, the Team record type could read the second slice.&lt;/p&gt;
&lt;p&gt;Unlike the name-mangling technique, splitting rows keeps SQL legible, accepts your hand-crafted SQL queries, and plays as nicely as possible with your existing &lt;a href="#records"&gt;record types&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#splitting-rows-an-introduction"&gt;Splitting Rows, an Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splitting-rows-the-record-way"&gt;Splitting Rows, the Record Way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splitting-rows-the-request-way"&gt;Splitting Rows, the Request Way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splitting-rows-the-codable-way"&gt;Splitting Rows, the Codable Way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-an-introduction" class="anchor" aria-hidden="true" href="#splitting-rows-an-introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, an Introduction&lt;/h3&gt;
&lt;p&gt;Let's first write some introductory code, hoping that this chapter will make you understand how pieces fall together. We'll see &lt;a href="#splitting-rows-the-record-way"&gt;later&lt;/a&gt; how records will help us streamline the initial approach, how to track changes in joined requests, and how we can use the standard Decodable protocol.&lt;/p&gt;
&lt;p&gt;To split rows, we will use &lt;a href="#row-adapters"&gt;row adapters&lt;/a&gt;. Row adapters adapt rows so that row consumers see exactly the columns they want. Among other things, row adapters can define several &lt;em&gt;row scopes&lt;/em&gt; that give access to as many &lt;em&gt;row slices&lt;/em&gt;. Sounds like a perfect match.&lt;/p&gt;
&lt;p&gt;At the very beginning, there is an SQL query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        SELECT player.*, team.*, MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;        FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;        LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;        LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;        GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We need an adapter that extracts player columns, in a slice that has as many columns as there are columns in the player table. That's &lt;a href="#rangerowadapter"&gt;RangeRowAdapter&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT player.*, team.*, ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;        &amp;lt;------&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerWidth &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;columns&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;count&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerAdapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt; playerWidth)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also need an adapter that extracts team columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT player.*, team.*, ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;                  &amp;lt;----&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; teamWidth &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;columns&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;count&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; teamAdapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(playerWidth &lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt; (playerWidth &lt;span class="pl-k"&gt;+&lt;/span&gt; teamWidth))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We merge those two adapters in a single &lt;a href="#scopeadapter"&gt;ScopeAdapter&lt;/a&gt; that will allow us to access both sliced rows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerScope &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; teamScope &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
        playerScope&lt;span class="pl-k"&gt;:&lt;/span&gt; playerAdapter,
        &lt;span class="pl-c1"&gt;teamScope&lt;/span&gt;: teamAdapter])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now we can fetch, and start consuming our rows. You already know &lt;a href="#fetching-rows"&gt;row cursors&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From a fetched row, we can build a player:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player &lt;span class="pl-k"&gt;=&lt;/span&gt; row[playerScope]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the SQL query, the team is joined with the &lt;code&gt;LEFT JOIN&lt;/code&gt; operator. This means that the team may be missing: its slice may contain team values, or it may only contain NULLs. When this happens, we don't want to build a Team record, and we thus load an &lt;em&gt;optional&lt;/em&gt; Team:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[teamScope]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally, we can load the maximum score, assuming that the "maxScore" column is not ambiguous:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;team&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;maxScore&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; In this chapter, we have learned:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to use &lt;code&gt;RangeRowAdapter&lt;/code&gt; to extract a specific table's columns into a &lt;em&gt;row slice&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;how to use &lt;code&gt;ScopeAdapter&lt;/code&gt; to gives access to several row slices through named scopes.&lt;/li&gt;
&lt;li&gt;how to use Row subscripting to extract records from rows, or optional records in order to deal with left joins.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-the-record-way" class="anchor" aria-hidden="true" href="#splitting-rows-the-record-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, the Record Way&lt;/h3&gt;
&lt;p&gt;Our introduction above has introduced important techniques. It uses &lt;a href="#row-adapters"&gt;row adapters&lt;/a&gt; in order to split rows. It uses Row subscripting in order to extract records from row slices.&lt;/p&gt;
&lt;p&gt;But we may want to make it more usable and robust:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It's generally easier to consume records than raw rows.&lt;/li&gt;
&lt;li&gt;Joined records not always need all columns from a table (see &lt;code&gt;TableRecord.databaseSelection&lt;/code&gt; in &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Building row adapters is long and error prone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To address the first bullet, let's define a record that holds our player, optional team, and maximum score. Since it can decode database rows, it adopts the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player
    &lt;span class="pl-k"&gt;var&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; PlayerInfo can decode rows:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Scopes&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; team &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        player &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;]
        team &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;]
        maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's now write the method that fetches PlayerInfo records:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [PlayerInfo] {&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To acknowledge that both Player and Team records may customize their selection of the "player" and "team" columns, we'll write our SQL in a slightly different way:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Let Player and Team customize their selection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, -- instead of player.*&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,   -- instead of team.*&lt;/span&gt;
&lt;span class="pl-s"&gt;                MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;            FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Player.selectionSQL()&lt;/code&gt; will output &lt;code&gt;player.*&lt;/code&gt;, unless Player defines a &lt;a href="#columns-selected-by-a-request"&gt;customized selection&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: you may also use SQL table aliases:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;(&lt;span class="pl-c1"&gt;alias&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;(&lt;span class="pl-c1"&gt;alias&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;        MAX(r.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;    FROM player p&lt;/span&gt;
&lt;span class="pl-s"&gt;    LEFT JOIN team t ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;    LEFT JOIN round r ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;    GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now is the time to build adapters (taking in account the customized selection of both player and team). We use the &lt;code&gt;splittingRowAdapters&lt;/code&gt; global function, which builds row adapters of desired widths:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; adapters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;splittingRowAdapters&lt;/span&gt;(&lt;span class="pl-c1"&gt;columnCounts&lt;/span&gt;: [
            Player.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db),
            Team.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db)])
    
        &lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
            Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;0&lt;/span&gt;],
            Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]])&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;splittingRowAdapters&lt;/code&gt; returns as many adapters as necessary to fully split a row. In the example above, it returns &lt;em&gt;three&lt;/em&gt; adapters: one for player, one for team, and one for the remaining columns.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And finally, we can fetch player infos:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And when your app needs to fetch player infos, it now reads:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; In this chapter, we have learned:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to define a &lt;code&gt;FetchableRecord&lt;/code&gt; record that consumes rows fetched from a joined query.&lt;/li&gt;
&lt;li&gt;how to use &lt;code&gt;selectionSQL&lt;/code&gt; and &lt;code&gt;numberOfSelectedColumns&lt;/code&gt; in order to deal with nested record types that define custom selection.&lt;/li&gt;
&lt;li&gt;how to use &lt;code&gt;splittingRowAdapters&lt;/code&gt; in order to streamline the definition of row slices.&lt;/li&gt;
&lt;li&gt;how to gather all relevant methods and constants in a record type, fully responsible of its relationship with the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-the-request-way" class="anchor" aria-hidden="true" href="#splitting-rows-the-request-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, the Request Way&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;PlayerInfo.fetchAll&lt;/code&gt; method &lt;a href="#splitting-rows-the-record-way"&gt;above&lt;/a&gt; directly fetches records. It's all good, but in order to profit from &lt;a href="#database-changes-observation"&gt;database observation&lt;/a&gt;, you'll need a &lt;a href="#custom-requests"&gt;custom request&lt;/a&gt; that defines a database query.&lt;/p&gt;
&lt;p&gt;It is recommended that you read the previous paragraphs before you dive in this sample code. We start with the same PlayerInfo record as above:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player
    &lt;span class="pl-k"&gt;var&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; PlayerInfo can decode rows:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Scopes&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; team &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        player &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;]
        team &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;]
        maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we write a method that returns a request, and build the fetching method on top of that request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The request for all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;all&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; AdaptedFetchRequest&amp;lt;SQLRequest&amp;lt;PlayerInfo&amp;gt;&amp;gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;            FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;PlayerInfo&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql).&lt;span class="pl-smi"&gt;adapted&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; adapters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;splittingRowAdapters&lt;/span&gt;(&lt;span class="pl-c1"&gt;columnCounts&lt;/span&gt;: [
                Player.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db),
                Team.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db)])
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
                Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;0&lt;/span&gt;],
                Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]])
        }
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetches all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [PlayerInfo] {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;all&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is now time to use our request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track player infos with RxRGDB:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PlayerInfo.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()
    .&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue)
    .&lt;span class="pl-c1"&gt;subscribe&lt;/span&gt;(&lt;span class="pl-c1"&gt;onNext&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;playerInfos&lt;/span&gt;: [PlayerInfo]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player infos have changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; In this chapter, we have learned how to define a custom request that can both fetch records from joined queries, and feed database observation tools.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-the-codable-way" class="anchor" aria-hidden="true" href="#splitting-rows-the-codable-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, the Codable Way&lt;/h3&gt;
&lt;p&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; build on top of the standard Decodable protocol in order to decode database rows.&lt;/p&gt;
&lt;p&gt;You can consume complex joined queries with Codable records as well. As a demonstration, we'll rewrite the &lt;a href="#splitting-rows-the-request-way"&gt;above&lt;/a&gt; sample code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
}
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Team&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color
}
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player
    &lt;span class="pl-k"&gt;var&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The request for all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;all&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; AdaptedFetchRequest&amp;lt;SQLRequest&amp;lt;PlayerInfo&amp;gt;&amp;gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;            FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;PlayerInfo&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql).&lt;span class="pl-smi"&gt;adapted&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; adapters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;splittingRowAdapters&lt;/span&gt;(&lt;span class="pl-c1"&gt;columnCounts&lt;/span&gt;: [
                Player.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db),
                Team.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db)])
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
                CodingKeys.&lt;span class="pl-smi"&gt;player&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringValue&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;0&lt;/span&gt;],
                CodingKeys.&lt;span class="pl-smi"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringValue&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]])
        }
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetches all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [PlayerInfo] {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;all&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track player infos with RxRGDB:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PlayerInfo.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()
    .&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue)
    .&lt;span class="pl-c1"&gt;subscribe&lt;/span&gt;(&lt;span class="pl-c1"&gt;onNext&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;playerInfos&lt;/span&gt;: [PlayerInfo]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player infos have changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; In this chapter, we have learned how to use the &lt;code&gt;Decodable&lt;/code&gt; protocol and its associated &lt;code&gt;CodingKeys&lt;/code&gt; enum in order to dry up our code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-database-changes-observation" class="anchor" aria-hidden="true" href="#database-changes-observation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Changes Observation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;SQLite notifies its host application of changes performed to the database, as well of transaction commits and rollbacks.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GRDB puts this SQLite feature to some good use, and lets you observe the database in various ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#after-commit-hook"&gt;After Commit Hook&lt;/a&gt;: Handle successful transactions one by one.&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-and-databaseregionobservation"&gt;ValueObservation and DatabaseRegionObservation&lt;/a&gt;: Automated tracking of database requests.&lt;/li&gt;
&lt;li&gt;&lt;a href="#transactionobserver-protocol"&gt;TransactionObserver Protocol&lt;/a&gt;: Low-level database observation.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;: Automated tracking of database changes, with &lt;a href="https://developer.apple.com/documentation/combine" rel="nofollow"&gt;Combine&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;: Automated tracking of database changes, with &lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Database observation requires that a single &lt;a href="#database-queues"&gt;database queue&lt;/a&gt; or &lt;a href="#database-pools"&gt;pool&lt;/a&gt; is kept open for all the duration of the database usage.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-after-commit-hook" class="anchor" aria-hidden="true" href="#after-commit-hook"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;After Commit Hook&lt;/h2&gt;
&lt;p&gt;When your application needs to make sure a specific database transaction has been successfully committed before it executes some work, use the &lt;code&gt;Database.afterNextTransactionCommit(_:)&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Its closure argument is called right after database changes have been successfully written to disk:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    db.&lt;span class="pl-smi"&gt;afterNextTransactionCommit&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;success&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "success"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The closure runs in a protected dispatch queue, serialized with all database updates.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This "after commit hook" helps synchronizing the database with other resources, such as files, or system sensors.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the example below, a &lt;a href="https://developer.apple.com/documentation/corelocation/cllocationmanager" rel="nofollow"&gt;location manager&lt;/a&gt; starts monitoring a CLRegion if and only if it has successfully been stored in the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Inserts a region in the database, and start monitoring upon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; successful insertion.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;startMonitoring&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;region&lt;/span&gt;&lt;/span&gt;: CLRegion) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Make sure database is inside a transaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Save the region in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start monitoring if and only if the insertion is&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eventually committed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        db.&lt;span class="pl-smi"&gt;afterNextTransactionCommit&lt;/span&gt; { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; locationManager prefers the main queue:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            DispatchQueue.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
                locationManager.&lt;span class="pl-c1"&gt;startMonitoring&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: region)
            }
        }
        
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The method above won't trigger the location manager if the transaction is eventually rollbacked (explicitly, or because of an error), as in the sample code below:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; success&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;startMonitoring&lt;/span&gt;(db, region)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On error, the transaction is rollbacked, the region is not inserted, and&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the location manager is not invoked.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;failableMethod&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-valueobservation-and-databaseregionobservation" class="anchor" aria-hidden="true" href="#valueobservation-and-databaseregionobservation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation and DatabaseRegionObservation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ValueObservation and DatabaseRegionObservation&lt;/strong&gt; are two database observations tools that track changes in database &lt;a href="#requests"&gt;requests&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Let's observe all players!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt; notifies your application with &lt;strong&gt;fresh values&lt;/strong&gt; (this is what most applications need &lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh players could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;players&lt;/span&gt;: [Player]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; names &lt;span class="pl-k"&gt;=&lt;/span&gt; players.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt; }.&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;separator&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;, &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fresh players: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;names&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Fresh players: Arthur, ..."&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt; notifies your application with &lt;strong&gt;database connections&lt;/strong&gt;, right after an impactful database transaction has been committed (reserved for more advanced use cases &lt;g-emoji class="g-emoji" alias="nerd_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f913.png"&gt;🤓&lt;/g-emoji&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseRegionObservation&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;: request)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Players have changed.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Players have changed."&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-valueobservation" class="anchor" aria-hidden="true" href="#valueobservation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ValueObservation tracks changes in the results of database &lt;a href="#requests"&gt;requests&lt;/a&gt;, and notifies fresh values whenever the database changes.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Changes are only notified after they have been committed in the database. No insertion, update, or deletion in tracked tables is missed. This includes indirect changes triggered by &lt;a href="https://www.sqlite.org/foreignkeys.html#fk_actions" rel="nofollow"&gt;foreign keys&lt;/a&gt; or &lt;a href="https://www.sqlite.org/lang_createtrigger.html" rel="nofollow"&gt;SQL triggers&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#valueobservation-usage"&gt;ValueObservation Usage&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationtrackingvalue"&gt;ValueObservation.tracking(value:)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationtracking_fetch"&gt;ValueObservation.tracking(_:fetch:)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#observationforcount-observationforall-observationforfirst"&gt;observationForCount, observationForAll, observationForFirst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-transformations"&gt;ValueObservation Transformations&lt;/a&gt;: &lt;a href="#valueobservationmap"&gt;map&lt;/a&gt;, &lt;a href="#valueobservationcompactmap"&gt;compactMap&lt;/a&gt;, ...&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-error-handling"&gt;ValueObservation Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-options"&gt;ValueObservation Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-valueobservationtracking_reducer"&gt;Advanced: ValueObservation.tracking(_:reducer:)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-usage" class="anchor" aria-hidden="true" href="#valueobservation-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Usage&lt;/h3&gt;
&lt;p&gt;Here is a typical UIViewController which observes the database in order to keep its view up-to-date:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController &lt;/span&gt;{
    &lt;span class="pl-k"&gt;@IBOutlet&lt;/span&gt; &lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; nameLabel&lt;span class="pl-k"&gt;:&lt;/span&gt; UILabel&lt;span class="pl-k"&gt;!&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; observer&lt;span class="pl-k"&gt;:&lt;/span&gt; TransactionObserver&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillAppear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillAppear&lt;/span&gt;(animated)
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define a ValueObservation which tracks a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;)
        }
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start observing the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
            &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
                &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            },
            &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { [&lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;] (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player has been refreshed: update view&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;                &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; }
                &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;nameLabel&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; player&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt;
            })
    }
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillDisappear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillDisappear&lt;/span&gt;(animated)
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Stop observing the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, all values and errors are notified on the main queue. Views can be updated right from the &lt;code&gt;onChange&lt;/code&gt; callback.&lt;/p&gt;
&lt;p&gt;By default, an initial fetch is performed as soon as the observation starts: the view is set up and ready when the &lt;code&gt;viewWillAppear&lt;/code&gt; method returns.&lt;/p&gt;
&lt;p&gt;The observer returned by the &lt;code&gt;start&lt;/code&gt; method is stored in a property of the view controller. This allows the view controller to control the duration of the observation. When the observer is deallocated, the observation stops. Meanwhile, all transactions that modify the observed player are notified, and the &lt;code&gt;nameLabel&lt;/code&gt; is kept up-to-date.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that uses ValueObservation.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: When fetching values is slow, and should never ever block the main queue, opt in for async notifications:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillAppear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillAppear&lt;/span&gt;(animated)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define a ValueObservation which tracks a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;)
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observation is asynchronous&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    observation.&lt;span class="pl-smi"&gt;scheduling&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;async&lt;/span&gt;(&lt;span class="pl-c1"&gt;onQueue&lt;/span&gt;: .&lt;span class="pl-smi"&gt;main&lt;/span&gt;, &lt;span class="pl-c1"&gt;startImmediately&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start observing the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
        &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        },
        &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { [&lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;] (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player has been refreshed: update view&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; }
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;activityIndicator&lt;/span&gt;.&lt;span class="pl-c1"&gt;stopAnimating&lt;/span&gt;()
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;nameLabel&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; player&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt;
        })

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wait for player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    activityIndicator.&lt;span class="pl-c1"&gt;startAnimating&lt;/span&gt;()
    nameLabel.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#valueobservationscheduling"&gt;ValueObservation.scheduling&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservationtrackingvalue" class="anchor" aria-hidden="true" href="#valueobservationtrackingvalue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.tracking(value:)&lt;/h3&gt;
&lt;p&gt;In order to observe database values, you will generally define a &lt;strong&gt;ValueObservation&lt;/strong&gt; which tracks the value you are interested in, and then start the observation.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track changes in a single player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;)
}

observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fresh player: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;You can observe several requests and several tables if you need&lt;/strong&gt;: all writes that have an impact on the fetched values will trigger the observation, and call the &lt;code&gt;onChange&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It may happen that such an observation notifies identical consecutive values.&lt;/strong&gt; This is because it will fetch a fresh value whenever a change &lt;em&gt;could&lt;/em&gt; happen. For example, the observation for the maximum player score will notify a fresh value everytime a score is changed, inserted, or deleted, even if the maximum score is unchanged:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track changes in the maximum player score&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This observation may notify duplicate values&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)), &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can filter out those duplicates with the &lt;a href="#valueobservationremoveduplicates"&gt;ValueObservation.removeDuplicates&lt;/a&gt; method. It requires the observed value to adopt the Equatable protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)), &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
    }
    .&lt;span class="pl-c1"&gt;removeDuplicates&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will see below other ways to define observations. They all add a little convenience, or optimization.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservationtracking_fetch" class="anchor" aria-hidden="true" href="#valueobservationtracking_fetch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.tracking(_:fetch:)&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;ValueObservation.tracking(_:fetch:)&lt;/code&gt; method is an &lt;strong&gt;optimized&lt;/strong&gt; version of the &lt;a href="#valueobservationtrackingvalue"&gt;&lt;code&gt;ValueObservation.tracking(value:)&lt;/code&gt;&lt;/a&gt; method seen above.&lt;/p&gt;
&lt;p&gt;The returned observation ouputs exactly the same results, but it can perform better when you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, and the fetch is slow. It reduces write contention by fetching fresh values without blocking write accesses. When you use a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt;, no optimization is applied.&lt;/p&gt;
&lt;p&gt;It accepts two arguments:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A list of observed requests.&lt;/li&gt;
&lt;li&gt;A closure that fetches a fresh value whenever one of the observed requests are modified.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Changes that happen outside of the observed requests are ignored, so make sure you fully cover the database region you want to observe. This is the price you pay for the optimization.&lt;/p&gt;
&lt;p&gt;Let's give a practical example, and observe the "Hall of Fame":&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;HallOfFame&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; totalPlayerCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; bestPlayers&lt;span class="pl-k"&gt;:&lt;/span&gt; [Player]
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;HallOfFame&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetch the HallOfFame&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-c1"&gt;fetch&lt;/span&gt;(&lt;span class="pl-c1"&gt;_&lt;/span&gt; db&lt;span class="pl-k"&gt;:&lt;/span&gt; Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; HallOfFame {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; totalPlayerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;let&lt;/span&gt; bestPlayers &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player
            .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;desc&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;HallOfFame&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;totalPlayerCount&lt;/span&gt;: totalPlayerCount,
            &lt;span class="pl-c1"&gt;bestPlayers&lt;/span&gt;: bestPlayers)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to track changes in the Hall of Fame in an optimized way, we see that any change to the &lt;code&gt;player&lt;/code&gt; table can impact the Hall of Fame. We thus track the request for all players, &lt;code&gt;Player.all()&lt;/code&gt;, and fetch a new Hall of Fame whenever players change:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;(Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;(), &lt;span class="pl-c1"&gt;fetch&lt;/span&gt;: { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; HallOfFame.&lt;span class="pl-c1"&gt;fetch&lt;/span&gt;(db)
})&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the initial parameter of &lt;code&gt;ValueObservation.tracking(_:fetch:)&lt;/code&gt; can be fed with requests, and generally speaking, values that adopt the &lt;a href="#the-databaseregionconvertible-protocol"&gt;DatabaseRegionConvertible&lt;/a&gt; protocol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-observationforcount-observationforall-observationforfirst" class="anchor" aria-hidden="true" href="#observationforcount-observationforall-observationforfirst"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;observationForCount, observationForAll, observationForFirst&lt;/h3&gt;
&lt;p&gt;Given a &lt;a href="#requests"&gt;request&lt;/a&gt;, even a &lt;a href="#custom-requests"&gt;custom request&lt;/a&gt;, you can observe its number of results, all results, or the first one:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;request.&lt;span class="pl-c1"&gt;observationForCount&lt;/span&gt;()
request.&lt;span class="pl-c1"&gt;observationForAll&lt;/span&gt;()
request.&lt;span class="pl-c1"&gt;observationForFirst&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those observations are equivalent to the following ones, defined with &lt;a href="#valueobservationtrackingvalue"&gt;&lt;code&gt;ValueObservation.tracking(value:)&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }
ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) }
ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet they are &lt;strong&gt;optimized&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They perform a filtering of consecutive identical values, based on raw database values, so that you are not notified of database changes that do not impact the result of the request.&lt;/li&gt;
&lt;li&gt;They can perform better when you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, and the fetch is slow.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-transformations" class="anchor" aria-hidden="true" href="#valueobservation-transformations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Transformations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#valueobservationmap"&gt;ValueObservation.map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationcompactmap"&gt;ValueObservation.compactMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationremoveduplicates"&gt;ValueObservation.removeDuplicates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationcombine"&gt;ValueObservation.combine(...)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationmap" class="anchor" aria-hidden="true" href="#valueobservationmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.map&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;map&lt;/code&gt; method lets you transform the values notified by a ValueObservation.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observe a player's profile image&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) }
    .&lt;span class="pl-c1"&gt;map&lt;/span&gt; { player &lt;span class="pl-k"&gt;in&lt;/span&gt; player&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;image&lt;/span&gt; }

&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;image&lt;/span&gt;: UIImage&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player picture has changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The transformation closure does not run on the main queue, and is suitable for heavy computations.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationcompactmap" class="anchor" aria-hidden="true" href="#valueobservationcompactmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.compactMap&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;compactMap&lt;/code&gt; method lets you transform and filter the values notified by a ValueObservation. Only non-nil transformed values are notified.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observe a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) }
    .&lt;span class="pl-smi"&gt;compactMap&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt; }
    
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player name: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player.&lt;span class="pl-smi"&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The transformation closure does not run on the main queue, and is suitable for heavy computations.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationremoveduplicates" class="anchor" aria-hidden="true" href="#valueobservationremoveduplicates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.removeDuplicates&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;removeDuplicates&lt;/code&gt; method filters out the consecutive equal values notified by a ValueObservation. The observed values must adopt the standard Equatable protocol.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) }
    .&lt;span class="pl-c1"&gt;removeDuplicates&lt;/span&gt;()

&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the observations returned by the &lt;a href="#observationforcount-observationforall-observationforfirst"&gt;observationForCount, observationForAll, observationForFirst&lt;/a&gt; methods already perform a similar filtering, based on raw database values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationcombine" class="anchor" aria-hidden="true" href="#valueobservationcombine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.combine(...)&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;ValueObservation.combine(...)&lt;/code&gt; method builds a single observation from several:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Two base observations&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCountObservation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; bestPlayersObservation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player
        .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;desc&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The combined observation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-c1"&gt;combine&lt;/span&gt;(
    playerCountObservation, 
    bestPlayersObservation)
    
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start tracking the hall of fame&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (totalPlayerCount, bestPlayers) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            Best players out of &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;totalPlayerCount&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;:&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;bestPlayers&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;combine&lt;/code&gt; also exists as an instance method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;HallOfFame&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; totalPlayerCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; bestPlayers&lt;span class="pl-k"&gt;:&lt;/span&gt; [Player]
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; playerCountObservation.&lt;span class="pl-c1"&gt;combine&lt;/span&gt;(bestPlayersObservation) {
    &lt;span class="pl-c1"&gt;HallOfFame&lt;/span&gt;(&lt;span class="pl-c1"&gt;totalPlayerCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;$0&lt;/span&gt;, &lt;span class="pl-c1"&gt;bestPlayers&lt;/span&gt;: &lt;span class="pl-c1"&gt;$1&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can combine up to eight observations together. They can feed from as many database tables as needed.&lt;/p&gt;
&lt;p&gt;Combining observations provides the guarantee that notified values are &lt;a href="https://en.wikipedia.org/wiki/Consistency_(database_systems)" rel="nofollow"&gt;&lt;strong&gt;consistent&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: readers who are familiar with Reactive Programming will recognize the &lt;a href="http://reactivex.io/documentation/operators/combinelatest.html" rel="nofollow"&gt;CombineLatest&lt;/a&gt; operator in the ValueObservation &lt;code&gt;combine&lt;/code&gt; method. The reactive operator does not care about data consistency, though: if you use a Reactive layer such as &lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt; or &lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;, make sure you compose observations with &lt;code&gt;ValueObservation.combine&lt;/code&gt;, not with the CombineLatest operator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-error-handling" class="anchor" aria-hidden="true" href="#valueobservation-error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Error Handling&lt;/h3&gt;
&lt;p&gt;When you start an observation, the &lt;code&gt;onError&lt;/code&gt; callback is called whenever fresh values could not be fetched. It is scheduled just like values (see &lt;a href="#valueobservationscheduling"&gt;ValueObservation.scheduling&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An error does not stop the observation. After an error has been received, subsequent transactions may succeed in notifying fresh values. You may witness such temporary errors when the database becomes temporarily unreachable, for example due to &lt;a href="#data-protection"&gt;data protection&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Depending on the way your application wants to deal with such errors, you may want to tighten your control on the scheduling of database accesses with &lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;. See also the reactive companion libraries &lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt; and &lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;, which stop observation whenever a ValueObservation error happens.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;onError&lt;/code&gt; callback can be omitted, but this is &lt;strong&gt;not recommended&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Not recommended: omitting the onError callback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-options" class="anchor" aria-hidden="true" href="#valueobservation-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Options&lt;/h3&gt;
&lt;p&gt;Some behaviors of value observations can be configured:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#valueobservationscheduling"&gt;ValueObservation.scheduling&lt;/a&gt;: Control the dispatching of notified values.&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationrequireswriteaccess"&gt;ValueObservation.requiresWriteAccess&lt;/a&gt;: Allow observations to write in the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationscheduling" class="anchor" aria-hidden="true" href="#valueobservationscheduling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.scheduling&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;scheduling&lt;/code&gt; property lets you control how fresh values are notified:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.mainQueue&lt;/code&gt; (the default): all values are notified on the main queue.&lt;/p&gt;
&lt;p&gt;If the observation starts on the main queue, an initial value is notified right upon subscription, synchronously:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Here "fresh value" is already printed.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the observation does not start on the main queue, an initial value is also notified on the main queue, but asynchronously:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Not on the main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the initial value has been notified, all subsequent values are notified asynchronously:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Eventually prints "fresh value" on the main queue&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.async(onQueue:startImmediately:)&lt;/code&gt;: all values are asychronously notified on the specified queue.&lt;/p&gt;
&lt;p&gt;An initial value is fetched and notified if &lt;code&gt;startImmediately&lt;/code&gt; is true.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
observation.&lt;span class="pl-smi"&gt;scheduling&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;async&lt;/span&gt;(&lt;span class="pl-c1"&gt;onQueue&lt;/span&gt;: .&lt;span class="pl-smi"&gt;main&lt;/span&gt;, &lt;span class="pl-c1"&gt;startImmediately&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Eventually prints "fresh value"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;unsafe(startImmediately:)&lt;/code&gt;: values are not all notified on the same dispatch queue.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;startImmediately&lt;/code&gt; is true, an initial value is notified right upon subscription, synchronously, on the dispatch queue which starts the observation.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On any queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
observation.&lt;span class="pl-smi"&gt;scheduling&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;unsafe&lt;/span&gt;(&lt;span class="pl-c1"&gt;startImmediately&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Here "fresh value" is already printed.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the initial value has been notified, all subsequent values are notified on unspecified queues.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: this unsafe mode is intended for third-party libraries that provide their own scheduling engine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationrequireswriteaccess" class="anchor" aria-hidden="true" href="#valueobservationrequireswriteaccess"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.requiresWriteAccess&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;requiresWriteAccess&lt;/code&gt; property is false by default. When true, a ValueObservation has a write access to the database, and its fetches are automatically wrapped in a &lt;a href="#transactions-and-savepoints"&gt;savepoint&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; write access allowed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}
observation.&lt;span class="pl-smi"&gt;requiresWriteAccess&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, don't use this flag unless you really need it. Observations with write access are less efficient because they block all writes for the whole duration of a fetch.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-valueobservationtracking_reducer" class="anchor" aria-hidden="true" href="#advanced-valueobservationtracking_reducer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced: ValueObservation.tracking(_:reducer:)&lt;/h3&gt;
&lt;p&gt;The most low-level way to define a ValueObservation is to create one from an observed database region (see above), and a &lt;strong&gt;reducer&lt;/strong&gt; that adopts the &lt;strong&gt;ValueReducer&lt;/strong&gt; protocol (&lt;a href="#what-are-experimental-features"&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt; EXPERIMENTAL&lt;/strong&gt;&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;ValueReducer&lt;/span&gt; {
    &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;Fetched&lt;/span&gt;
    &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetches a database value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetch&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Fetched
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a notified value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;value&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;fetched&lt;/span&gt;: Fetched) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;fetch&lt;/code&gt; method is called upon changes in the observed &lt;a href="#databaseregion"&gt;database region&lt;/a&gt;. It runs inside a protected dispatch queue and is guaranteed an immutable view of the last committed state of the database.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; method transforms a fetched value into a notified value. It returns nil if the observer should not be notified. It runs inside a dispatch queue called the "reduce queue", which is not the main queue, and not a database queue.&lt;/p&gt;
&lt;p&gt;The sample code below counts the number of times the player table is modified:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; reducer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AnyValueReducer&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;fetch&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; don't fetch anything &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;value&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;defer&lt;/span&gt; { count &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; count })
&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;(Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;(), &lt;span class="pl-c1"&gt;reducer&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; reducer })
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;count&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Number of transactions that have modified players: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;count&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Number of transactions that have modified players: 0"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Number of transactions that have modified players: 1"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-databaseregionobservation" class="anchor" aria-hidden="true" href="#databaseregionobservation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;DatabaseRegionObservation tracks changes in database &lt;a href="#requests"&gt;requests&lt;/a&gt;, and notifies each impactful &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No insertion, update, or deletion in the tracked tables is missed. This includes indirect changes triggered by &lt;a href="https://www.sqlite.org/foreignkeys.html#fk_actions" rel="nofollow"&gt;foreign keys&lt;/a&gt; or &lt;a href="https://www.sqlite.org/lang_createtrigger.html" rel="nofollow"&gt;SQL triggers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;DatabaseRegionObservation calls your application right after changes have been committed in the database, and before any other thread had any opportunity to perform further changes. &lt;em&gt;This is a pretty strong guarantee, that most applications do not really need.&lt;/em&gt; Instead, most applications prefer to be notified with fresh values: make sure you check &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt; before using DatabaseRegionObservation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregionobservation-usage" class="anchor" aria-hidden="true" href="#databaseregionobservation-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation Usage&lt;/h3&gt;
&lt;p&gt;Define an observation by providing one or several requests to track:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track all players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseRegionObservation&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;: Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then start the observation from a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt; or &lt;a href="#database-pools"&gt;pool&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Players were changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And enjoy the changes notifications:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Players were changed"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, the observation lasts until the observer returned by the &lt;code&gt;start&lt;/code&gt; method is deallocated. See &lt;a href="#databaseregionobservationextent"&gt;DatabaseRegionObservation.extent&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;You can also feed DatabaseRegionObservation with &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;, or any type which conforms to the &lt;a href="#the-databaseregionconvertible-protocol"&gt;DatabaseRegionConvertible&lt;/a&gt; protocol. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observe the full database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseRegionObservation&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;: DatabaseRegion.&lt;span class="pl-smi"&gt;fullDatabase&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Database was changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregionobservation-use-cases" class="anchor" aria-hidden="true" href="#databaseregionobservation-use-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation Use Cases&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;There are very few use cases for DatabaseRegionObservation&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;One needs to write in the database after an impactful transaction.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One needs to synchronize the content of the database file with some external resources, like other files, or system sensors like CLRegion monitoring.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On iOS, one needs to process a database transaction before the operating system had any opportunity to put the application in the suspended state.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One wants to build a &lt;a href="#database-snapshots"&gt;database snapshot&lt;/a&gt; with a guaranteed snapshot content.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Outside of those use cases, it is much likely &lt;em&gt;wrong&lt;/em&gt; to use a DatabaseRegionObservation. Please check other &lt;a href="#database-changes-observation"&gt;Database Observation&lt;/a&gt; options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregionobservationextent" class="anchor" aria-hidden="true" href="#databaseregionobservationextent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation.extent&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;extent&lt;/code&gt; property lets you specify the duration of the observation. See &lt;a href="#observation-extent"&gt;Observation Extent&lt;/a&gt; for more details:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This observation lasts until the database connection is closed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; DatabaseRegionObservation&lt;span class="pl-k"&gt;...&lt;/span&gt;
observation.&lt;span class="pl-smi"&gt;extent&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;databaseLifetime&lt;/span&gt;
&lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default extent is &lt;code&gt;.observerLifetime&lt;/code&gt;: the observation stops when the observer returned by &lt;code&gt;start&lt;/code&gt; is deallocated.&lt;/p&gt;
&lt;p&gt;Regardless of the extent of an observation, you can always stop observation with the &lt;code&gt;remove(transactionObserver:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Stop&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-transactionobserver-protocol" class="anchor" aria-hidden="true" href="#transactionobserver-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TransactionObserver Protocol&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;TransactionObserver&lt;/code&gt; protocol lets you &lt;strong&gt;observe individual database changes and transactions&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;TransactionObserver&lt;/span&gt; : &lt;span class="pl-k"&gt;class&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Notifies a database change:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; - event.kind (insert, update, or delete)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; - event.tableName&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; - event.rowID&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; For performance reasons, the event is only valid for the duration of&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; this method call. If you need to keep it longer, store a copy:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; event.copy().&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Filters the database changes that should be notified to the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; `databaseDidChange(with:)` method.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; An opportunity to rollback pending changes by throwing an error.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseWillCommit&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Database changes have been committed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidCommit&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Database changes have been rollbacked.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidRollback&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#activate-a-transaction-observer"&gt;Activate a Transaction Observer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-changes-and-transactions"&gt;Database Changes And Transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filtering-database-events"&gt;Filtering Database Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#observation-extent"&gt;Observation Extent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#support-for-sqlite-pre-update-hooks"&gt;Support for SQLite Pre-Update Hooks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-activate-a-transaction-observer" class="anchor" aria-hidden="true" href="#activate-a-transaction-observer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Activate a Transaction Observer&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;To activate a transaction observer, add it to the database queue or pool:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyObserver&lt;/span&gt;()
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, database holds weak references to its transaction observers: they are not retained, and stop getting notifications after they are deallocated. See &lt;a href="#observation-extent"&gt;Observation Extent&lt;/a&gt; for more options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-database-changes-and-transactions" class="anchor" aria-hidden="true" href="#database-changes-and-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Changes And Transactions&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;A transaction observer is notified of all database changes&lt;/strong&gt;: inserts, updates and deletes. This includes indirect changes triggered by ON DELETE and ON UPDATE actions associated to &lt;a href="https://www.sqlite.org/foreignkeys.html#fk_actions" rel="nofollow"&gt;foreign keys&lt;/a&gt;, and &lt;a href="https://www.sqlite.org/lang_createtrigger.html" rel="nofollow"&gt;SQL triggers&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the changes that are not notified are changes to internal system tables (such as &lt;code&gt;sqlite_master&lt;/code&gt;), changes to &lt;a href="https://www.sqlite.org/withoutrowid.html" rel="nofollow"&gt;&lt;code&gt;WITHOUT ROWID&lt;/code&gt;&lt;/a&gt; tables, and the deletion of duplicate rows triggered by &lt;a href="https://www.sqlite.org/lang_conflict.html" rel="nofollow"&gt;&lt;code&gt;ON CONFLICT REPLACE&lt;/code&gt;&lt;/a&gt; clauses (this last exception might change in a future release of SQLite).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Notified changes are not actually written to disk until the &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt; commits, and the &lt;code&gt;databaseDidCommit&lt;/code&gt; callback is called. On the other side, &lt;code&gt;databaseDidRollback&lt;/code&gt; confirms their invalidation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}                                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. willCommit, 4. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;rollback&lt;/span&gt;                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. didRollback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeError&lt;/span&gt;()
}                                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didRollback&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Database statements that are executed outside of any transaction do not drop off the radar:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange, 2. willCommit, 3. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4. didChange, 5. willCommit, 6. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Changes that are on hold because of a &lt;a href="https://www.sqlite.org/lang_savepoint.html" rel="nofollow"&gt;savepoint&lt;/a&gt; are only notified after the savepoint has been released. This makes sure that notified events are only events that have an opportunity to be committed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; delayed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; delayed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RELEASE SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didChange, 3. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; not notified&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ROLLBACK TO SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;                               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4. willCommit, 5. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Eventual errors&lt;/strong&gt; thrown from &lt;code&gt;databaseWillCommit&lt;/code&gt; are exposed to the application code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. willCommit (throws), 2. didRollback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. The error thrown by the transaction observer.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: all callbacks are called in a protected dispatch queue, and serialized with all database updates.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the databaseDidChange(with:) and databaseWillCommit() callbacks must not touch the SQLite database. This limitation does not apply to databaseDidCommit and databaseDidRollback which can use their database argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;, &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;, &lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;, and &lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt; are all based on the TransactionObserver protocol.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="https://gist.github.com/groue/2e21172719e634657dfd"&gt;TableChangeObserver.swift&lt;/a&gt;, which shows a transaction observer that notifies of modified database tables with NSNotificationCenter.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-filtering-database-events" class="anchor" aria-hidden="true" href="#filtering-database-events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filtering Database Events&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Transaction observers can avoid being notified of database changes they are not interested in.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The filtering happens in the &lt;code&gt;observes(eventsOfKind:)&lt;/code&gt; method, which tells whether the observer wants notification of specific kinds of changes, or not. For example, here is how an observer can focus on the changes that happen on the "player" database table:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only observe changes to the "player" table.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; eventKind.&lt;span class="pl-smi"&gt;tableName&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This method is only called for changes that happen to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the "player" table.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Generally speaking, the &lt;code&gt;observes(eventsOfKind:)&lt;/code&gt; method can distinguish insertions from deletions and updates, and is also able to inspect the columns that are about to be changed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerScoreObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only observe changes to the "score" column of the "player" table.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;switch&lt;/span&gt; eventKind {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; tableName)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; tableName &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; tableName)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; tableName &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; tableName, &lt;span class="pl-k"&gt;let&lt;/span&gt; columnNames)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; tableName &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; columnNames.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the &lt;code&gt;observes(eventsOfKind:)&lt;/code&gt; method returns false for all event kinds, the observer is still notified of commits and rollbacks:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PureTransactionObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Ignore all individual changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Never called &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseWillCommit&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Called before commit &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidRollback&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Called on rollback &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidCommit&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Called on commit &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information about event filtering, see &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-observation-extent" class="anchor" aria-hidden="true" href="#observation-extent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observation Extent&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You can specify how long an observer is notified of database changes and transactions.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;remove(transactionObserver:)&lt;/code&gt; method explicitly stops notifications, at any time:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; From a database queue or pool:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; From a database connection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    db.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, use the &lt;code&gt;extent&lt;/code&gt; parameter of the &lt;code&gt;add(transactionObserver:extent:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyObserver&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On a database queue or pool:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default extent&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer, &lt;span class="pl-c1"&gt;extent&lt;/span&gt;: .&lt;span class="pl-smi"&gt;observerLifetime&lt;/span&gt;)
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer, &lt;span class="pl-c1"&gt;extent&lt;/span&gt;: .&lt;span class="pl-smi"&gt;nextTransaction&lt;/span&gt;)
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer, &lt;span class="pl-c1"&gt;extent&lt;/span&gt;: .&lt;span class="pl-smi"&gt;databaseLifetime&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On a database connection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    db.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The default extent is &lt;code&gt;.observerLifetime&lt;/code&gt;: the database holds a weak reference to the observer, and the observation automatically ends when the observer is deallocated. Meanwhile, observer is notified of all changes and transactions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.nextTransaction&lt;/code&gt; activates the observer until the current or next transaction completes. The database keeps a strong reference to the observer until its &lt;code&gt;databaseDidCommit&lt;/code&gt; or &lt;code&gt;databaseDidRollback&lt;/code&gt; method is eventually called. Hereafter the observer won't get any further notification.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.databaseLifetime&lt;/code&gt; has the database retain and notify the observer until the database connection is closed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, an observer may ignore all database changes until the end of the current transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; playerTableWasModified &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; eventKind.&lt;span class="pl-smi"&gt;tableName&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent) {
        playerTableWasModified &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; It is pointless to keep on tracking further changes:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;stopObservingDatabaseChangesUntilNextTransaction&lt;/span&gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After &lt;code&gt;stopObservingDatabaseChangesUntilNextTransaction()&lt;/code&gt;, the &lt;code&gt;databaseDidChange(with:)&lt;/code&gt; method will not be notified of any change for the remaining duration of the current transaction. This helps GRDB optimize database observation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregion" class="anchor" aria-hidden="true" href="#databaseregion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegion&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://groue.github.io/GRDB.swift/docs/4.9/Structs/DatabaseRegion.html" rel="nofollow"&gt;DatabaseRegion&lt;/a&gt; is a type that helps observing changes in the results of a database &lt;a href="#requests"&gt;request&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A request knows which database modifications can impact its results. It can communicate this information to &lt;a href="#transactionobserver-protocol"&gt;transaction observers&lt;/a&gt; by the way of a DatabaseRegion.&lt;/p&gt;
&lt;p&gt;DatabaseRegion fuels, for example, &lt;a href="#valueobservation-and-databaseregionobservation"&gt;ValueObservation and DatabaseRegionObservation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A region notifies &lt;em&gt;potential&lt;/em&gt; changes, not &lt;em&gt;actual&lt;/em&gt; changes in the results of a request.&lt;/strong&gt; A change is notified if and only if a statement has actually modified the tracked tables and columns by inserting, updating, or deleting a row.&lt;/p&gt;
&lt;p&gt;For example, if you observe the region of &lt;code&gt;Player.select(max(Column("score")))&lt;/code&gt;, then you'll get be notified of all changes performed on the &lt;code&gt;score&lt;/code&gt; column of the &lt;code&gt;player&lt;/code&gt; table (updates, insertions and deletions), even if they do not modify the value of the maximum score. However, you will not get any notification for changes performed on other database tables, or updates to other columns of the player table.&lt;/p&gt;
&lt;p&gt;For more details, see the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Structs/DatabaseRegion.html#/s:4GRDB14DatabaseRegionV10isModified2bySbAA0B5EventV_tF" rel="nofollow"&gt;reference&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-the-databaseregionconvertible-protocol" class="anchor" aria-hidden="true" href="#the-databaseregionconvertible-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The DatabaseRegionConvertible Protocol&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;DatabaseRegionConvertible&lt;/strong&gt; is a protocol for all types that can turn into a &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;DatabaseRegionConvertible&lt;/span&gt; {
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseRegion&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseRegion
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All &lt;a href="#requests"&gt;requests&lt;/a&gt; adopt this protocol, and this allows them to be observed with &lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt; and &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Use this protocol when you want to encapsulate your complex requests in a dedicated type, and still profit from optimized observation APIs. See &lt;a href="#valueobservationtracking_fetch"&gt;&lt;code&gt;ValueObservation.tracking(_:fetch:)&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-support-for-sqlite-pre-update-hooks" class="anchor" aria-hidden="true" href="#support-for-sqlite-pre-update-hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support for SQLite Pre-Update Hooks&lt;/h3&gt;
&lt;p&gt;When SQLite is built with the SQLITE_ENABLE_PREUPDATE_HOOK option, TransactionObserverType gets an extra callback which lets you observe individual column values in the rows modified by a transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;TransactionObserverType&lt;/span&gt; : &lt;span class="pl-k"&gt;class&lt;/span&gt; {
    #&lt;span class="pl-k"&gt;if&lt;/span&gt; SQLITE_ENABLE_PREUPDATE_HOOK
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Notifies before a database change (insert, update, or delete)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; with change information (initial / final values for the row's&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; columns).&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The event is only valid for the duration of this method call. If you&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; need to keep it longer, store a copy: event.copy().&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseWillChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabasePreUpdateEvent)
    #&lt;span class="pl-k"&gt;endif&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This extra API can be activated in two ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use the GRDB.swift CocoaPod with a custom compilation option, as below. It uses the system SQLite, which is compiled with SQLITE_ENABLE_PREUPDATE_HOOK support, but only on iOS 11.0+ (we don't know the minimum version of macOS, tvOS, watchOS):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;11.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or above&lt;/span&gt;

post_install &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;installer&lt;/span&gt;|
  installer.pods_project.targets.&lt;span class="pl-c1"&gt;select&lt;/span&gt; { |&lt;span class="pl-smi"&gt;target&lt;/span&gt;| target.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GRDB.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }.each &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;target&lt;/span&gt;|
    target.build_configurations.each &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Enable extra GRDB APIs&lt;/span&gt;
      config.build_settings[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;OTHER_SWIFT_FLAGS&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$(inherited) -D SQLITE_ENABLE_PREUPDATE_HOOK&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Enable extra SQLite APIs&lt;/span&gt;
      config.build_settings[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GCC_PREPROCESSOR_DEFINITIONS&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$(inherited) GRDB_SQLITE_ENABLE_PREUPDATE_HOOK=1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: make sure you use the right platform version! You will get runtime errors on devices with a lower version.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the &lt;code&gt;GRDB_SQLITE_ENABLE_PREUPDATE_HOOK=1&lt;/code&gt; option in &lt;code&gt;GCC_PREPROCESSOR_DEFINITIONS&lt;/code&gt; defines some C function prototypes that are lacking from the system &lt;code&gt;&amp;lt;sqlite3.h&amp;gt;&lt;/code&gt; header. When Xcode eventually ships with an SDK that includes a complete header, you may get a compiler error about duplicate function definitions. When this happens, just remove this &lt;code&gt;GRDB_SQLITE_ENABLE_PREUPDATE_HOOK=1&lt;/code&gt; option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;custom SQLite build&lt;/a&gt; and activate the &lt;code&gt;SQLITE_ENABLE_PREUPDATE_HOOK&lt;/code&gt; compilation option.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-encryption" class="anchor" aria-hidden="true" href="#encryption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Encryption&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;GRDB can encrypt your database with &lt;a href="http://sqlcipher.net" rel="nofollow"&gt;SQLCipher&lt;/a&gt; v3.4+.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;a href="http://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt;, and specify in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; GRDB with SQLCipher 4&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift/SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 4.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; GRDB with SQLCipher 3&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift/SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 3.4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#creating-or-opening-an-encrypted-database"&gt;Creating or Opening an Encrypted Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changing-the-passphrase-of-an-encrypted-database"&gt;Changing the Passphrase of an Encrypted Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exporting-a-database-to-an-encrypted-database"&gt;Exporting a Database to an Encrypted Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#security-considerations"&gt;Security Considerations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-creating-or-opening-an-encrypted-database" class="anchor" aria-hidden="true" href="#creating-or-opening-an-encrypted-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating or Opening an Encrypted Database&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You create and open an encrypted database&lt;/strong&gt; by providing a passphrase to your &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also in &lt;code&gt;prepareDatabase&lt;/code&gt; that you perform other &lt;a href="https://www.zetetic.net/sqlcipher/sqlcipher-api/" rel="nofollow"&gt;SQLCipher configuration steps&lt;/a&gt; that must happen early in the lifetime of a SQLCipher connection. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PRAGMA cipher_page_size = ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PRAGMA kdf_iter = ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to open an existing SQLCipher 3 database with SQLCipher 4, you may want to run the &lt;code&gt;cipher_compatibility&lt;/code&gt; pragma:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Open an SQLCipher 3 database with SQLCipher 4&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PRAGMA cipher_compatibility = 3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://www.zetetic.net/blog/2018/11/30/sqlcipher-400-release/" rel="nofollow"&gt;SQLCipher 4.0.0 Release&lt;/a&gt; and &lt;a href="https://discuss.zetetic.net/t/upgrading-to-sqlcipher-4/3283" rel="nofollow"&gt;Upgrading to SQLCipher 4&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-changing-the-passphrase-of-an-encrypted-database" class="anchor" aria-hidden="true" href="#changing-the-passphrase-of-an-encrypted-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changing the Passphrase of an Encrypted Database&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You can change the passphrase&lt;/strong&gt; of an already encrypted database.&lt;/p&gt;
&lt;p&gt;When you use a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt;, open the database with the old passphrase, and then apply the new passphrase:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;changePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newSecret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, make sure that no concurrent read can happen by changing the passphrase within the &lt;code&gt;barrierWriteWithoutTransaction&lt;/code&gt; block. You must also ensure all future reads open a new database connection by calling the &lt;code&gt;invalidateReadOnlyConnections&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;barrierWriteWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;changePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newSecret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    dbPool.&lt;span class="pl-c1"&gt;invalidateReadOnlyConnections&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: When an application wants to keep on using a database queue or pool after the passphrase has changed, it is responsible for providing the correct passphrase to the &lt;code&gt;usePassphrase&lt;/code&gt; method called in the database preparation function. Consider:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WRONG: this won't work across a passphrase change&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: get the latest passphrase when it is needed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;DatabasePool.barrierWriteWithoutTransaction&lt;/code&gt; method does not prevent &lt;a href="#database-snapshots"&gt;database snapshots&lt;/a&gt; from accessing the database during the passphrase change, or after the new passphrase has been applied to the database. Those database accesses may throw errors. Applications should provide their own mechanism for invalidating open snapshots before the passphrase is changed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: Instead of changing the passphrase "in place" as described here, you can also export the database in a new encrypted database that uses the new passphrase. See &lt;a href="#exporting-a-database-to-an-encrypted-database"&gt;Exporting a Database to an Encrypted Database&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-exporting-a-database-to-an-encrypted-database" class="anchor" aria-hidden="true" href="#exporting-a-database-to-an-encrypted-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exporting a Database to an Encrypted Database&lt;/h3&gt;
&lt;p&gt;Providing a passphrase won't encrypt a clear-text database that already exists, though. SQLCipher can't do that, and you will get an error instead: &lt;code&gt;SQLite error 26: file is encrypted or is not a database&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Instead, create a new encrypted database, at a distinct location, and export the content of the existing database. This can both encrypt a clear-text database, or change the passphrase of an encrypted databaase.&lt;/p&gt;
&lt;p&gt;The technique to do that is &lt;a href="https://discuss.zetetic.net/t/how-to-encrypt-a-plaintext-sqlite-database-to-use-sqlcipher-and-avoid-file-is-encrypted-or-is-not-a-database-errors/868/1" rel="nofollow"&gt;documented&lt;/a&gt; by SQLCipher.&lt;/p&gt;
&lt;p&gt;With GRDB, it gives:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The existing database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; existingDBQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/existing.db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The new encrypted database, at some distinct location:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; newDBQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/new.db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-k"&gt;try&lt;/span&gt; existingDBQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            ATTACH DATABASE ? AS encrypted KEY ?;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT sqlcipher_export('encrypted');&lt;/span&gt;
&lt;span class="pl-s"&gt;            DETACH DATABASE encrypted;&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [newDBQueue.&lt;span class="pl-smi"&gt;path&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Now the export is completed, and the existing database can be deleted.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-security-considerations" class="anchor" aria-hidden="true" href="#security-considerations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security Considerations&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-managing-the-lifetime-of-the-passphrase-string" class="anchor" aria-hidden="true" href="#managing-the-lifetime-of-the-passphrase-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing the lifetime of the passphrase string&lt;/h4&gt;
&lt;p&gt;It is recommended to avoid keeping the passphrase in memory longer than necessary. To do this, make sure you load the passphrase from inside the &lt;code&gt;prepareDatabase&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; NOT RECOMMENDED: this keeps the passphrase in memory longer than necessary&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; RECOMMENDED: only load the passphrase when it is needed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This technique manages the lifetime of the passphrase string. Some demanding users will want to go further, and manage the lifetime of the raw passphrase bytes. See below.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-managing-the-lifetime-of-the-passphrase-bytes" class="anchor" aria-hidden="true" href="#managing-the-lifetime-of-the-passphrase-bytes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing the lifetime of the passphrase bytes&lt;/h4&gt;
&lt;p&gt;GRDB offers convenience methods for providing the database passphrases as Swift strings: &lt;code&gt;usePassphrase(_:)&lt;/code&gt; and &lt;code&gt;changePassphrase(_:)&lt;/code&gt;. Those methods don't keep the passphrase String in memory longer than necessary. But they are as secure as the standard String type: the lifetime of actual passphrase bytes in memory is not under control.&lt;/p&gt;
&lt;p&gt;When you want to precisely manage the passphrase bytes, talk directly to SQLCipher, using its raw C functions.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLCipher&lt;/span&gt;

&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Carefully load passphrase bytes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; code &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;sqlite3_key&lt;/span&gt;(db.&lt;span class="pl-smi"&gt;sqliteConnection&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; passphrase bytes &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Carefully dispose passphrase bytes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;guard&lt;/span&gt; code &lt;span class="pl-k"&gt;==&lt;/span&gt; SQLITE_OK &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseError&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;resultCode&lt;/span&gt;: &lt;span class="pl-c1"&gt;ResultCode&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt;: code), 
            &lt;span class="pl-c1"&gt;message&lt;/span&gt;: db.&lt;span class="pl-smi"&gt;lastErrorMessage&lt;/span&gt;)
    }
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-passphrase-availability-vs-database-availability" class="anchor" aria-hidden="true" href="#passphrase-availability-vs-database-availability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passphrase availability vs. Database availability&lt;/h4&gt;
&lt;p&gt;When the passphrase is securely stored in the system keychain, your application can protect it using the &lt;a href="https://developer.apple.com/documentation/security/ksecattraccessible" rel="nofollow"&gt;&lt;code&gt;kSecAttrAccessible&lt;/code&gt;&lt;/a&gt; attribute.&lt;/p&gt;
&lt;p&gt;Such protection prevents GRDB from creating SQLite connections when the passphrase is not available:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;loadPassphraseFromSystemKeychain&lt;/span&gt;()
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Success if and only if the passphrase is available&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For the same reason, &lt;a href="#database-pools"&gt;database pools&lt;/a&gt;, which open SQLite connections on demand, may fail at any time as soon as the passphrase becomes unavailable:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Success if and only if the passphrase is available&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; May fail if passphrase has turned unavailable&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; May trigger value observation failure if passphrase has turned unavailable&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because DatabasePool maintains a pool of long-lived SQLite connections, some database accesses will use an existing connection, and succeed. And some other database accesses will fail, as soon as the pool wants to open a new connection. It is impossible to predict which accesses will succeed or fail.&lt;/p&gt;
&lt;p&gt;For the same reason, a database queue, which also maintains a long-lived SQLite connection, will remain available even after the passphrase has turned unavailable.&lt;/p&gt;
&lt;p&gt;Applications are thus responsible for protecting database accesses when the passphrase is unavailable. To this end, they can use &lt;a href="#data-protection"&gt;Data Protection&lt;/a&gt;. They can also destroy their instances of database queue or pool when the passphrase becomes unavailable.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-backup" class="anchor" aria-hidden="true" href="#backup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backup&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;You can backup (copy) a database into another.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Backups can for example help you copying an in-memory database to and from a database file when you implement NSDocument subclasses.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; source&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or DatabasePool&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; destination&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or DatabasePool&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; source.&lt;span class="pl-c1"&gt;backup&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: destination)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;backup&lt;/code&gt; method blocks the current thread until the destination database contains the same contents as the source database.&lt;/p&gt;
&lt;p&gt;When the source is a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, concurrent writes can happen during the backup. Those writes may, or may not, be reflected in the backup, but they won't trigger any error.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-interrupt-a-database" class="anchor" aria-hidden="true" href="#interrupt-a-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interrupt a Database&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The &lt;code&gt;interrupt()&lt;/code&gt; method&lt;/strong&gt; causes any pending database operation to abort and return at its earliest opportunity.&lt;/p&gt;
&lt;p&gt;It can be called from any thread.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dbQueue.&lt;span class="pl-c1"&gt;interrupt&lt;/span&gt;()
dbPool.&lt;span class="pl-c1"&gt;interrupt&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A call to &lt;code&gt;interrupt()&lt;/code&gt; that occurs when there are no running SQL statements is a no-op and has no effect on SQL statements that are started after &lt;code&gt;interrupt()&lt;/code&gt; returns.&lt;/p&gt;
&lt;p&gt;A database operation that is interrupted will throw a DatabaseError with code &lt;code&gt;SQLITE_INTERRUPT&lt;/code&gt;. If the interrupted SQL operation is an INSERT, UPDATE, or DELETE that is inside an explicit transaction, then the entire transaction will be rolled back automatically. If the rolled back transaction was started by a transaction-wrapping method such as &lt;code&gt;DatabaseWriter.write&lt;/code&gt; or &lt;code&gt;Database.inTransaction&lt;/code&gt;, then all database accesses will throw a DatabaseError with code &lt;code&gt;SQLITE_ABORT&lt;/code&gt; until the wrapping method returns.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; throws SQLITE_INTERRUPT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; not executed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}                                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; throws SQLITE_INTERRUPT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; throws SQLITE_INTERRUPT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; { }
}                                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; throws SQLITE_ABORT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; throws SQLITE_INTERRUPT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; { }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; throws SQLITE_ABORT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}                                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; throws SQLITE_ABORT&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can catch both &lt;code&gt;SQLITE_INTERRUPT&lt;/code&gt; and &lt;code&gt;SQLITE_ABORT&lt;/code&gt; errors with the &lt;code&gt;DatabaseError.isInterruptionError&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError &lt;span class="pl-k"&gt;where&lt;/span&gt; error.&lt;span class="pl-smi"&gt;isInterruptionError&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Oops, the database was interrupted.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information, see &lt;a href="https://www.sqlite.org/c3ref/interrupt.html" rel="nofollow"&gt;Interrupt A Long-Running Query&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-avoiding-sql-injection" class="anchor" aria-hidden="true" href="#avoiding-sql-injection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Avoiding SQL Injection&lt;/h2&gt;
&lt;p&gt;SQL injection is a technique that lets an attacker nuke your database.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cecf339daf48ee4cfe86f33630c3732cdc2ab0e1/68747470733a2f2f696d67732e786b63642e636f6d2f636f6d6963732f6578706c6f6974735f6f665f615f6d6f6d2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/cecf339daf48ee4cfe86f33630c3732cdc2ab0e1/68747470733a2f2f696d67732e786b63642e636f6d2f636f6d6963732f6578706c6f6974735f6f665f615f6d6f6d2e706e67" alt="XKCD: Exploits of a Mom" data-canonical-src="https://imgs.xkcd.com/comics/exploits_of_a_mom.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xkcd.com/327/" rel="nofollow"&gt;https://xkcd.com/327/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here is an example of code that is vulnerable to SQL injection:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BAD BAD BAD&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE students SET name = '&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;' WHERE id = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;id&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the user enters a funny string like &lt;code&gt;Robert'; DROP TABLE students; --&lt;/code&gt;, SQLite will see the following SQL, and drop your database table instead of updating a name as intended:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;UPDATE&lt;/span&gt; students &lt;span class="pl-k"&gt;SET&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Robert&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;DROP&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; students;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;' WHERE id = 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid those problems, &lt;strong&gt;never embed raw values in your SQL queries&lt;/strong&gt;. The only correct technique is to provide &lt;a href="#executing-updates"&gt;arguments&lt;/a&gt; to your raw SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Good&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE students SET name = ? WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [name, id])
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Just as good&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE students SET name = :name WHERE id = :id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; name, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; id])
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use &lt;a href="#records"&gt;records&lt;/a&gt; and the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;, GRDB always prevents SQL injection for you:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; student &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Student.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: id) {
        student.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; name
        &lt;span class="pl-k"&gt;try&lt;/span&gt; student.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Handling&lt;/h2&gt;
&lt;p&gt;GRDB can throw &lt;a href="#databaseerror"&gt;DatabaseError&lt;/a&gt;, &lt;a href="#persistenceerror"&gt;PersistenceError&lt;/a&gt;, or crash your program with a &lt;a href="#fatal-errors"&gt;fatal error&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Considering that a local database is not some JSON loaded from a remote server, GRDB focuses on &lt;strong&gt;trusted databases&lt;/strong&gt;. Dealing with &lt;a href="#how-to-deal-with-untrusted-inputs"&gt;untrusted databases&lt;/a&gt; requires extra care.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#databaseerror"&gt;DatabaseError&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#persistenceerror"&gt;PersistenceError&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fatal-errors"&gt;Fatal Errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-deal-with-untrusted-inputs"&gt;How to Deal with Untrusted Inputs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#error-log"&gt;Error Log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-databaseerror" class="anchor" aria-hidden="true" href="#databaseerror"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseError&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;DatabaseError&lt;/strong&gt; are thrown on SQLite errors:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO pet (masterId, name) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bobby&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The SQLite error code: 19 (SQLITE_CONSTRAINT)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The extended error code: 787 (SQLITE_CONSTRAINT_FOREIGNKEY)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;extendedResultCode&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The eventual SQLite message: FOREIGN KEY constraint failed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;message&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The eventual erroneous SQL query&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "INSERT INTO pet (masterId, name) VALUES (?, ?)"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;sql&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Full error description:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "SQLite error 19 with statement `INSERT INTO pet (masterId, name)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  VALUES (?, ?)` arguments [1, "Bobby"]: FOREIGN KEY constraint failed""&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-c1"&gt;description&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;SQLite uses codes to distinguish between various errors:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError &lt;span class="pl-k"&gt;where&lt;/span&gt; error.&lt;span class="pl-smi"&gt;extendedResultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT_FOREIGNKEY&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; foreign key constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError &lt;span class="pl-k"&gt;where&lt;/span&gt; error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other database error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above, &lt;code&gt;error.extendedResultCode&lt;/code&gt; is a precise &lt;a href="https://www.sqlite.org/rescode.html#extended_result_code_list" rel="nofollow"&gt;extended result code&lt;/a&gt;, and &lt;code&gt;error.resultCode&lt;/code&gt; is a less precise &lt;a href="https://www.sqlite.org/rescode.html#primary_result_code_list" rel="nofollow"&gt;primary result code&lt;/a&gt;. Extended result codes are refinements of primary result codes, as &lt;code&gt;SQLITE_CONSTRAINT_FOREIGNKEY&lt;/code&gt; is to &lt;code&gt;SQLITE_CONSTRAINT&lt;/code&gt;, for example. See &lt;a href="https://www.sqlite.org/rescode.html" rel="nofollow"&gt;SQLite result codes&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;As a convenience, extended result codes match their primary result code in a switch statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError {
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; error.&lt;span class="pl-smi"&gt;extendedResultCode&lt;/span&gt; {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; ResultCode.&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT_FOREIGNKEY&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; foreign key constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;case&lt;/span&gt; ResultCode.&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other database error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: SQLite has progressively introduced extended result codes accross its versions. The &lt;a href="http://www.sqlite.org/changes.html" rel="nofollow"&gt;SQLite release notes&lt;/a&gt; are unfortunately not quite clear about that: write your handling of extended result codes with care.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-persistenceerror" class="anchor" aria-hidden="true" href="#persistenceerror"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PersistenceError&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;PersistenceError&lt;/strong&gt; is thrown by the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol, in a single case: when the &lt;code&gt;update&lt;/code&gt; method could not find any row to update:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; PersistenceError.&lt;span class="pl-c1"&gt;recordNotFound&lt;/span&gt;(&lt;span class="pl-c1"&gt;databaseTableName&lt;/span&gt;: table, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: key) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Key &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;key&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; was not found in table &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;table&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-fatal-errors" class="anchor" aria-hidden="true" href="#fatal-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fatal Errors&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Fatal errors notify that the program, or the database, has to be changed.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;They uncover programmer errors, false assumptions, and prevent misuses. Here are a few examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The code asks for a non-optional value, when the database contains NULL:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert NULL to String.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: fix the contents of the database, use &lt;a href="#create-tables"&gt;NOT NULL constraints&lt;/a&gt;, or load an optional:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Conversion from database value to Swift type fails:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "Mom’s birthday" to Date.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date&lt;span class="pl-k"&gt;:&lt;/span&gt; Date &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "" to URL.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: fix the contents of the database, or use &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; to handle all possible cases:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle invalid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The database can't guarantee that the code does what it says:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: table player has no unique index on column email&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: add a unique index to the player.email column, or use the &lt;code&gt;deleteAll&lt;/code&gt; method to make it clear that you may delete more than one row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Database connections are not reentrant:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: Database methods are not reentrant.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: avoid reentrancy, and instead pass a database connection along.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-deal-with-untrusted-inputs" class="anchor" aria-hidden="true" href="#how-to-deal-with-untrusted-inputs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Deal with Untrusted Inputs&lt;/h3&gt;
&lt;p&gt;Let's consider the code below:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some untrusted arguments for the query&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; arguments&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-c1"&gt;StatementArguments&lt;/span&gt;(arguments))

&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some untrusted database value:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; date&lt;span class="pl-k"&gt;:&lt;/span&gt; Date&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It has two opportunities to throw fatal errors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Untrusted arguments&lt;/strong&gt;: The dictionary may contain values that do not conform to the &lt;a href="#values"&gt;DatabaseValueConvertible protocol&lt;/a&gt;, or may miss keys required by the statement.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Untrusted database content&lt;/strong&gt;: The row may contain a non-null value that can't be turned into a date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In such a situation, you can still avoid fatal errors by exposing and handling each failure point, one level down in the GRDB API:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Untrusted arguments&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; arguments &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;StatementArguments&lt;/span&gt;(arguments) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; statement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; statement.&lt;span class="pl-c1"&gt;validate&lt;/span&gt;(&lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: arguments)
    statement.&lt;span class="pl-c1"&gt;unsafeSetArguments&lt;/span&gt;(arguments)
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; cursor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(statement)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; iterator.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Untrusted database content&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
        &lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle invalid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#prepared-statements"&gt;prepared statements&lt;/a&gt; and &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-error-log" class="anchor" aria-hidden="true" href="#error-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Log&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;SQLite can be configured to invoke a callback function containing an error code and a terse error message whenever anomalies occur.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This global error callback must be configured early in the lifetime of your application:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Database.&lt;span class="pl-smi"&gt;logError&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { (resultCode, message) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;NSLog&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%@&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite error &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;resultCode&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;message&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: Database.logError must be set before any database connection is opened. This includes the connections that your application opens with GRDB, but also connections opened by other tools, such as third-party libraries. Setting it after a connection has been opened is an SQLite misuse, and has no effect.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See &lt;a href="https://sqlite.org/errlog.html" rel="nofollow"&gt;The Error And Warning Log&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-unicode" class="anchor" aria-hidden="true" href="#unicode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unicode&lt;/h2&gt;
&lt;p&gt;SQLite lets you store unicode strings in the database.&lt;/p&gt;
&lt;p&gt;However, SQLite does not provide any unicode-aware string transformations or comparisons.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unicode-functions" class="anchor" aria-hidden="true" href="#unicode-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unicode functions&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;UPPER&lt;/code&gt; and &lt;code&gt;LOWER&lt;/code&gt; built-in SQLite functions are not unicode-aware:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "JéRôME"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT UPPER('Jérôme')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB extends SQLite with &lt;a href="#custom-sql-functions-and-aggregates"&gt;SQL functions&lt;/a&gt; that call the Swift built-in string functions &lt;code&gt;capitalized&lt;/code&gt;, &lt;code&gt;lowercased&lt;/code&gt;, &lt;code&gt;uppercased&lt;/code&gt;, &lt;code&gt;localizedCapitalized&lt;/code&gt;, &lt;code&gt;localizedLowercased&lt;/code&gt; and &lt;code&gt;localizedUppercased&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "JÉRÔME"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; uppercased &lt;span class="pl-k"&gt;=&lt;/span&gt; DatabaseFunction.&lt;span class="pl-smi"&gt;uppercase&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;uppercased.&lt;span class="pl-smi"&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;('Jérôme')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those unicode-aware string functions are also readily available in the &lt;a href="#sql-functions"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn.&lt;span class="pl-smi"&gt;uppercased&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-string-comparison" class="anchor" aria-hidden="true" href="#string-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String Comparison&lt;/h3&gt;
&lt;p&gt;SQLite compares strings in many occasions: when you sort rows according to a string column, or when you use a comparison operator such as &lt;code&gt;=&lt;/code&gt; and &lt;code&gt;&amp;lt;=&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The comparison result comes from a &lt;em&gt;collating function&lt;/em&gt;, or &lt;em&gt;collation&lt;/em&gt;. SQLite comes with three built-in collations that do not support Unicode: &lt;a href="https://www.sqlite.org/datatype3.html#collation" rel="nofollow"&gt;binary, nocase, and rtrim&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;GRDB comes with five extra collations that leverage unicode-aware comparisons based on the standard Swift String comparison functions and operators:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unicodeCompare&lt;/code&gt; (uses the built-in &lt;code&gt;&amp;lt;=&lt;/code&gt; and &lt;code&gt;==&lt;/code&gt; Swift operators)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;caseInsensitiveCompare&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localizedCaseInsensitiveCompare&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localizedCompare&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localizedStandardCompare&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A collation can be applied to a table column. All comparisons involving this column will then automatically trigger the comparison function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guarantees case-insensitive email unicity&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;().&lt;span class="pl-c1"&gt;collate&lt;/span&gt;(.&lt;span class="pl-smi"&gt;nocase&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Sort names in a localized case insensitive way&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;collate&lt;/span&gt;(.&lt;span class="pl-smi"&gt;localizedCaseInsensitiveCompare&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Players are sorted in a localized case insensitive way:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: SQLite &lt;em&gt;requires&lt;/em&gt; host applications to provide the definition of any collation other than binary, nocase and rtrim. When a database file has to be shared or migrated to another SQLite library of platform (such as the Android version of your application), make sure you provide a compatible collation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you can't or don't want to define the comparison behavior of a column (see warning above), you can still use an explicit collation in SQL requests and in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; collation &lt;span class="pl-k"&gt;=&lt;/span&gt; DatabaseCollation.&lt;span class="pl-smi"&gt;localizedCaseInsensitiveCompare&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player ORDER BY name COLLATE &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;collation.&lt;span class="pl-smi"&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn.&lt;span class="pl-c1"&gt;collating&lt;/span&gt;(collation)).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;You can also define your own collations&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; collation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseCollation&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;customCollation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { (lhs, rhs) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; NSComparisonResult &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; return the comparison of lhs and rhs strings.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;collation&lt;/span&gt;: collation) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Or dbPool.add(collation: ...)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-memory-management" class="anchor" aria-hidden="true" href="#memory-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory Management&lt;/h2&gt;
&lt;p&gt;Both SQLite and GRDB use non-essential memory that help them perform better.&lt;/p&gt;
&lt;p&gt;You can reclaim this memory with the &lt;code&gt;releaseMemory&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Release as much memory as possible.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;releaseMemory&lt;/span&gt;()
dbPool.&lt;span class="pl-c1"&gt;releaseMemory&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method blocks the current thread until all current database accesses are completed, and the memory collected.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-memory-management-on-ios" class="anchor" aria-hidden="true" href="#memory-management-on-ios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory Management on iOS&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;The iOS operating system likes applications that do not consume much memory.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#database-queues"&gt;Database queues&lt;/a&gt; and &lt;a href="#database-pools"&gt;pools&lt;/a&gt; can call the &lt;code&gt;releaseMemory&lt;/code&gt; method for you, when application receives memory warnings, and when application enters background: call the &lt;code&gt;setupMemoryManagement&lt;/code&gt; method after creating the queue or pool instance:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let dbQueue = try DatabaseQueue(...)
dbQueue.setupMemoryManagement(in: UIApplication.shared)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-data-protection" class="anchor" aria-hidden="true" href="#data-protection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Protection&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/StrategiesforImplementingYourApp/StrategiesforImplementingYourApp.html#//apple_ref/doc/uid/TP40007072-CH5-SW21" rel="nofollow"&gt;Data Protection&lt;/a&gt; lets you protect files so that they are encrypted and unavailable until the device is unlocked.&lt;/p&gt;
&lt;p&gt;Data protection can be enabled &lt;a href="https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/AddingCapabilities/AddingCapabilities.html#//apple_ref/doc/uid/TP40012582-CH26-SW30" rel="nofollow"&gt;globally&lt;/a&gt; for all files created by an application.&lt;/p&gt;
&lt;p&gt;You can also explicitly protect a database, by configuring its enclosing &lt;em&gt;directory&lt;/em&gt;. This will not only protect the database file, but also all &lt;a href="https://www.sqlite.org/tempfiles.html" rel="nofollow"&gt;temporary files&lt;/a&gt; created by SQLite (including the persistent &lt;code&gt;.shm&lt;/code&gt; and &lt;code&gt;.wal&lt;/code&gt; files created by &lt;a href="#database-pools"&gt;database pools&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For example, to explicitly use &lt;a href="https://developer.apple.com/reference/foundation/fileprotectiontype/1616200-complete" rel="nofollow"&gt;complete&lt;/a&gt; protection:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Paths&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; fileManager &lt;span class="pl-k"&gt;=&lt;/span&gt; FileManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; directoryURL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager
    .&lt;span class="pl-c1"&gt;url&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: .&lt;span class="pl-smi"&gt;applicationSupportDirectory&lt;/span&gt;, &lt;span class="pl-c1"&gt;in&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userDomainMask&lt;/span&gt;, &lt;span class="pl-c1"&gt;appropriateFor&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;create&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;isDirectory&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; databaseURL &lt;span class="pl-k"&gt;=&lt;/span&gt; directoryURL.&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create directory if needed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; isDirectory&lt;span class="pl-k"&gt;:&lt;/span&gt; ObjCBool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;fileManager.&lt;span class="pl-c1"&gt;fileExists&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: directoryURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;, &lt;span class="pl-c1"&gt;isDirectory&lt;/span&gt;: &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;isDirectory) {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager.&lt;span class="pl-c1"&gt;createDirectory&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: directoryURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;, &lt;span class="pl-c1"&gt;withIntermediateDirectories&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;isDirectory.&lt;span class="pl-c1"&gt;boolValue&lt;/span&gt; {
    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;NSError&lt;/span&gt;(&lt;span class="pl-c1"&gt;domain&lt;/span&gt;: NSCocoaErrorDomain, &lt;span class="pl-c1"&gt;code&lt;/span&gt;: NSFileWriteFileExistsError, &lt;span class="pl-c1"&gt;userInfo&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Enable data protection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager.&lt;span class="pl-c1"&gt;setAttributes&lt;/span&gt;([.&lt;span class="pl-smi"&gt;protectionKey&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; FileProtectionType.&lt;span class="pl-smi"&gt;complete&lt;/span&gt;], &lt;span class="pl-c1"&gt;ofItemAtPath&lt;/span&gt;: directoryURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Open database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: databaseURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a database is protected, an application that runs in the background on a locked device won't be able to read or write from it. Instead, it will get &lt;a href="#error-handling"&gt;DatabaseError&lt;/a&gt; with code &lt;a href="https://www.sqlite.org/rescode.html#ioerr" rel="nofollow"&gt;&lt;code&gt;SQLITE_IOERR&lt;/code&gt;&lt;/a&gt; (10) "disk I/O error", or &lt;a href="https://www.sqlite.org/rescode.html#auth" rel="nofollow"&gt;&lt;code&gt;SQLITE_AUTH&lt;/code&gt;&lt;/a&gt; (23) "not authorized".&lt;/p&gt;
&lt;p&gt;You can catch those errors and wait for &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationdelegate/1623044-applicationprotecteddatadidbecom" rel="nofollow"&gt;UIApplicationDelegate.applicationProtectedDataDidBecomeAvailable(_:)&lt;/a&gt; or &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationprotecteddatadidbecomeavailable" rel="nofollow"&gt;UIApplicationProtectedDataDidBecomeAvailable&lt;/a&gt; notification in order to retry the failed database operation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-concurrency" class="anchor" aria-hidden="true" href="#concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#guarantees-and-rules"&gt;Guarantees and Rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#differences-between-database-queues-and-pools"&gt;Differences between Database Queues and Pools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-databasepool"&gt;Advanced DatabasePool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-snapshots"&gt;Database Snapshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databasewriter-and-databasereader-protocols"&gt;DatabaseWriter and DatabaseReader Protocols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asynchronous-apis"&gt;Asynchronous APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unsafe-concurrency-apis"&gt;Unsafe Concurrency APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/AppGroupContainers.md"&gt;App Group Containers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-guarantees-and-rules" class="anchor" aria-hidden="true" href="#guarantees-and-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guarantees and Rules&lt;/h3&gt;
&lt;p&gt;GRDB ships with three concurrency modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#database-queues"&gt;DatabaseQueue&lt;/a&gt; opens a single database connection, and serializes all database accesses.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-pools"&gt;DatabasePool&lt;/a&gt; manages a pool of several database connections, and allows concurrent reads and writes.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-snapshots"&gt;DatabaseSnapshot&lt;/a&gt; opens a single read-only database connection on an unchanging database content, and (currently) serializes all database accesses&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;All foster application safety&lt;/strong&gt;: regardless of the concurrency mode you choose, GRDB provides you with the same guarantees, as long as you follow three rules.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img class="emoji" title=":bowtie:" alt=":bowtie:" src="https://github.githubassets.com/images/icons/emoji/bowtie.png" height="20" width="20" align="absmiddle"&gt; &lt;strong&gt;Guarantee 1: writes are always serialized&lt;/strong&gt;. At every moment, there is no more than a single thread that is writing into the database.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Database writes always happen in a unique serial dispatch queue, named the &lt;em&gt;writer protected dispatch queue&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img class="emoji" title=":bowtie:" alt=":bowtie:" src="https://github.githubassets.com/images/icons/emoji/bowtie.png" height="20" width="20" align="absmiddle"&gt; &lt;strong&gt;Guarantee 2: reads are always isolated&lt;/strong&gt;. This means that they are guaranteed an immutable view of the database, and that you can perform subsequent fetches without fearing eventual concurrent writes to mess with your application logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be equal&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;In &lt;a href="#database-queues"&gt;database queues&lt;/a&gt;, reads happen in the same protected dispatch queue as writes: isolation is just a consequence of the serialization of database accesses&lt;/p&gt;
&lt;p&gt;&lt;a href="#database-pools"&gt;Database pools&lt;/a&gt; and &lt;a href="#database-snapshots"&gt;snapshots&lt;/a&gt; both use the "snapshot isolation" made possible by SQLite's WAL mode (see &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;Isolation In SQLite&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img class="emoji" title=":bowtie:" alt=":bowtie:" src="https://github.githubassets.com/images/icons/emoji/bowtie.png" height="20" width="20" align="absmiddle"&gt; &lt;strong&gt;Guarantee 3: requests don't fail&lt;/strong&gt;, unless a database constraint violation, a &lt;a href="#error-handling"&gt;programmer mistake&lt;/a&gt;, or a very low-level issue such as a disk error or an unreadable database file. GRDB grants &lt;em&gt;correct&lt;/em&gt; use of SQLite, and particularly avoids locking errors and other SQLite misuses.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Those guarantees hold as long as you follow three rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Rule 1&lt;/strong&gt;: Have a unique instance of DatabaseQueue or DatabasePool connected to any database file.&lt;/p&gt;
&lt;p&gt;This means that opening a new connection each time you access the database is a bad idea. Do share a single connection instead.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that sets up a single database queue that is available throughout the application.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/AppGroupContainers.md"&gt;App Group Containers&lt;/a&gt; for the specific setup required by applications that share their database files.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchCurrentUser&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; User&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; User.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; dbQueue is a singleton defined somewhere in your app&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;fetchCurrentUser&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This method fails when some other thread is currently writing into&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the database.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;currentUser&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; User&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; User.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
    }
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;currentUser&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Rule 2&lt;/strong&gt;: Group related statements within a single call to a DatabaseQueue or DatabasePool database access method (or use &lt;a href="#database-snapshots"&gt;snapshots&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Database access methods isolate your groups of related statements against eventual database updates performed by other threads, and guarantee a consistent view of the database. This isolation is only guaranteed &lt;em&gt;inside&lt;/em&gt; the closure argument of those methods. Two consecutive calls &lt;em&gt;do not&lt;/em&gt; guarantee isolation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be equal:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Those two values may be different because some other thread may have&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; modified the database between the two blocks:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }
&lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the same vein, when you fetch values that depends on some database updates, group them:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The count is guaranteed to be non-zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The count may be zero because some other thread may have performed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a deletion between the two blocks:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db) }
&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On that last example, see &lt;a href="#advanced-databasepool"&gt;Advanced DatabasePool&lt;/a&gt; if you look after extra performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Rule 3&lt;/strong&gt;: When you perform several modifications of the database that temporarily put the database in an inconsistent state, make sure those modifications are grouped within a &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.write&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeInTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.inTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Concurrent dbPool.read sees a partial db update here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Without transaction, &lt;code&gt;DatabasePool.read { ... }&lt;/code&gt; may see the first statement, but not the second, and access a database where the balance of accounts is not zero. A highly bug-prone situation.&lt;/p&gt;
&lt;p&gt;So do use &lt;a href="#transactions-and-savepoints"&gt;transactions&lt;/a&gt; in order to guarantee database consistency accross your application threads: that's what they are made for.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-differences-between-database-queues-and-pools" class="anchor" aria-hidden="true" href="#differences-between-database-queues-and-pools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differences between Database Queues and Pools&lt;/h3&gt;
&lt;p&gt;Despite the common &lt;a href="#guarantees-and-rules"&gt;guarantees and rules&lt;/a&gt; shared by &lt;a href="#database-queues"&gt;database queues&lt;/a&gt; and &lt;a href="#database-pools"&gt;pools&lt;/a&gt;, those two database accessors don't have the same behavior.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Database queues&lt;/strong&gt; serialize all database accesses, reads, and writes. There is never more than one thread that uses the database. In the image below, we see how three threads can see the database as time passes:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb9e0b2b85ee780c5f12797a1e89636a8badefdd/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f446174616261736551756575655363686564756c696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/eb9e0b2b85ee780c5f12797a1e89636a8badefdd/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f446174616261736551756575655363686564756c696e672e737667" alt="DatabaseQueueScheduling" data-canonical-src="https://cdn.rawgit.com/groue/GRDB.swift/master/Documentation/Images/DatabaseQueueScheduling.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Database pools&lt;/strong&gt; also serialize all writes. But they allow concurrent reads and writes, and isolate reads so that they don't see changes performed by other threads. This gives a very different picture:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9ca1a98ae185a5c052806290122221a743b0ba65/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f4461746162617365506f6f6c5363686564756c696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/9ca1a98ae185a5c052806290122221a743b0ba65/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f4461746162617365506f6f6c5363686564756c696e672e737667" alt="DatabasePoolScheduling" data-canonical-src="https://cdn.rawgit.com/groue/GRDB.swift/master/Documentation/Images/DatabasePoolScheduling.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See how, with database pools, two reads can see different database states at the same time.&lt;/p&gt;
&lt;p&gt;For more information about database pools, grab information about SQLite &lt;a href="https://www.sqlite.org/wal.html" rel="nofollow"&gt;WAL mode&lt;/a&gt; and &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;snapshot isolation&lt;/a&gt;. See &lt;a href="#database-changes-observation"&gt;Database Observation&lt;/a&gt; when you look after automatic notifications of database changes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-databasepool" class="anchor" aria-hidden="true" href="#advanced-databasepool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced DatabasePool&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-concurrentread-method"&gt;The &lt;code&gt;concurrentRead&lt;/code&gt; Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-barrierwritewithouttransaction-method"&gt;The &lt;code&gt;barrierWriteWithoutTransaction&lt;/code&gt; Method&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-the-concurrentread-method" class="anchor" aria-hidden="true" href="#the-concurrentread-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;concurrentRead&lt;/code&gt; Method&lt;/h4&gt;
&lt;p&gt;&lt;a href="#database-pools"&gt;Database pools&lt;/a&gt; are very concurrent, since all reads can run in parallel, and can even run during write operations. But writes are still serialized: at any given point in time, there is no more than a single thread that is writing into the database.&lt;/p&gt;
&lt;p&gt;When your application modifies the database, and then reads some value that depends on those modifications, you may want to avoid locking the writer queue longer than necessary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read the number of players. The writer queue is still locked :-(&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A wrong solution is to chain a write then a read, as below. Don't do that, because another thread may modify the database in between, and make the read unreliable:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WRONG&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- other threads can write in the database here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read some random value :-(&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The correct solution is the &lt;code&gt;concurrentRead&lt;/code&gt; method, which must be called from within a write block, outside of any transaction.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;concurrentRead&lt;/code&gt; returns a &lt;strong&gt;future value&lt;/strong&gt; which you consume on any dispatch queue, with the &lt;code&gt;wait()&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; futureCount&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseFuture&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- not in a transaction here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; futureCount &lt;span class="pl-k"&gt;=&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;concurrentRead&lt;/span&gt; { db
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; futureCount
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- The writer queue has been unlocked :-)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wait for the player count&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; futureCount.&lt;span class="pl-c1"&gt;wait&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;concurrentRead&lt;/code&gt; blocks until it can guarantee its closure argument an isolated access to the last committed state of the database. It then asynchronously executes the closure.&lt;/p&gt;
&lt;p&gt;The closure can run concurrently with eventual updates performed after &lt;code&gt;concurrentRead&lt;/code&gt;: those updates won't be visible from within the closure. In the example below, the number of players is guaranteed to be non-zero, even though it is fetched concurrently with the player deletion:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; futureCount &lt;span class="pl-k"&gt;=&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;concurrentRead&lt;/span&gt; { db
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be non-zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    }
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#transactionobserver-protocol"&gt;Transaction Observers&lt;/a&gt; can also use &lt;code&gt;concurrentRead&lt;/code&gt; in their &lt;code&gt;databaseDidCommit&lt;/code&gt; method in order to process database changes without blocking other threads that want to write into the database.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-the-barrierwritewithouttransaction-method" class="anchor" aria-hidden="true" href="#the-barrierwritewithouttransaction-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;barrierWriteWithoutTransaction&lt;/code&gt; Method&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;barrierWriteWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Exclusive database access&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The barrier write guarantees exclusive access to the database: the method blocks until all concurrent database accesses are completed, reads and writes, and postpones all other accesses until it completes.&lt;/p&gt;
&lt;p&gt;There is a known limitation: reads performed by &lt;a href="#database-snapshots"&gt;database snapshots&lt;/a&gt; are out of scope, and may run concurrently with the barrier.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-database-snapshots" class="anchor" aria-hidden="true" href="#database-snapshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Snapshots&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#database-pools"&gt;Database pool&lt;/a&gt; can take snapshots.&lt;/strong&gt; A database snapshot sees an unchanging database content, as it existed at the moment it was created.&lt;/p&gt;
&lt;p&gt;"Unchanging" means that a snapshot never sees any database modifications during all its lifetime. And yet it doesn't prevent database updates. This "magic" is made possible by SQLite's WAL mode (see &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;Isolation In SQLite&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;You create snapshots from a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; snapshot &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-c1"&gt;makeSnapshot&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can create as many snapshots as you need, regardless of the &lt;a href="#databasepool-configuration"&gt;maximum number of readers&lt;/a&gt; in the pool. A snapshot database connection is closed when the snapshot gets deallocated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A snapshot can be used from any thread.&lt;/strong&gt; Its &lt;code&gt;read&lt;/code&gt; methods is synchronous, and blocks the current thread until your database statements are executed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read values:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Extract a value from the database:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to control the latest committed changes seen by a snapshot, create the snapshot from the pool's writer protected dispatch queue, outside of any transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; snapshot1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseSnapshot &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; delete all players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;()
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- not in a transaction here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; dbPool.&lt;span class="pl-c1"&gt;makeSnapshot&lt;/span&gt;()
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Other threads may modify the database here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; snapshot2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-c1"&gt;makeSnapshot&lt;/span&gt;()

&lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot1.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot2.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Could be anything&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: snapshots currently serialize all database accesses. In the future, snapshots may allow concurrent reads.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-databasewriter-and-databasereader-protocols" class="anchor" aria-hidden="true" href="#databasewriter-and-databasereader-protocols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseWriter and DatabaseReader Protocols&lt;/h3&gt;
&lt;p&gt;Both DatabaseQueue and DatabasePool adopt the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Protocols/DatabaseReader.html" rel="nofollow"&gt;DatabaseReader&lt;/a&gt; and &lt;a href="http://groue.github.io/GRDB.swift/docs/4.9/Protocols/DatabaseWriter.html" rel="nofollow"&gt;DatabaseWriter&lt;/a&gt; protocols. DatabaseSnapshot adopts DatabaseReader only.&lt;/p&gt;
&lt;p&gt;These protocols provide a unified API that let you write generic code that targets all concurrency modes. They fuel, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#migrations"&gt;Migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only five types adopt those protocols: DatabaseQueue, DatabasePool, DatabaseSnapshot, AnyDatabaseReader, and AnyDatabaseWriter. Expanding this set is not supported: any future GRDB release may break your custom writers and readers, without notice.&lt;/p&gt;
&lt;p&gt;DatabaseReader and DatabaseWriter provide the &lt;em&gt;smallest&lt;/em&gt; common guarantees: they don't erase the differences between queues, pools, and snapshots. See for example &lt;a href="#differences-between-database-queues-and-pools"&gt;Differences between Database Queues and Pools&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, you can prevent some parts of your application from writing in the database by giving them a DatabaseReader:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This class can read in the database, but can't write into it.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyReadOnlyComponent&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; reader&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseReader
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;reader&lt;/span&gt;&lt;/span&gt;: DatabaseReader) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;reader&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reader
    }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; component &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyReadOnlyComponent&lt;/span&gt;(&lt;span class="pl-c1"&gt;reader&lt;/span&gt;: dbQueue)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: DatabaseReader is not a &lt;strong&gt;secure&lt;/strong&gt; way to prevent an application component from writing in the database, because write access is just a cast away:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; reader &lt;span class="pl-k"&gt;as?&lt;/span&gt; DatabaseQueue {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-asynchronous-apis" class="anchor" aria-hidden="true" href="#asynchronous-apis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous APIs&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Database queues, pools, snapshots, as well as their common protocols &lt;code&gt;DatabaseReader&lt;/code&gt; and &lt;code&gt;DatabaseWriter&lt;/code&gt; provide asynchronous database access methods.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#asyncread"&gt;&lt;code&gt;asyncRead&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asyncwrite"&gt;&lt;code&gt;asyncWrite&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asyncwritewithouttransaction"&gt;&lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asyncconcurrentread"&gt;&lt;code&gt;asyncConcurrentRead&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-asyncread" class="anchor" aria-hidden="true" href="#asyncread"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncRead&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncRead&lt;/code&gt; method can be used from any thread. It submits your database statements for asynchronous execution on a protected dispatch queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;reader.&lt;span class="pl-smi"&gt;asyncRead&lt;/span&gt; { (&lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Database, &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; result.&lt;span class="pl-c1"&gt;get&lt;/span&gt;()
        &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The argument function accepts a standard &lt;code&gt;Result&amp;lt;Database, Error&amp;gt;&lt;/code&gt; which may contain a failure if it was impossible to start a reading access to the database.&lt;/p&gt;
&lt;p&gt;Any attempt at modifying the database throws an error.&lt;/p&gt;
&lt;p&gt;When you use a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt; or a &lt;a href="#database-snapshots"&gt;database snapshot&lt;/a&gt;, the read has to wait for any eventual concurrent database access performed by this queue or snapshot to complete.&lt;/p&gt;
&lt;p&gt;When you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, reads are generally non-blocking, unless the maximum number of concurrent reads has been reached. In this case, a read has to wait for another read to complete. That maximum number can be &lt;a href="#databasepool-configuration"&gt;configured&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: because it uses the standard &lt;code&gt;Result&lt;/code&gt; type, &lt;code&gt;asyncRead&lt;/code&gt; is only available with a Swift 5+ compiler, starting Xcode 10.2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-asyncwrite" class="anchor" aria-hidden="true" href="#asyncwrite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncWrite&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncWrite&lt;/code&gt; method can be used from any thread. It submits your database statements for asynchronous execution on a protected dispatch queue, wrapped inside a &lt;a href="#transactions-and-savepoints"&gt;database transaction&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;writer.&lt;span class="pl-c1"&gt;asyncWrite&lt;/span&gt;({ (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Void&lt;/span&gt;, &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-smi"&gt;success&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle transaction success&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle transaction error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;asyncWrite&lt;/code&gt; accepts two function arguments. The first one executes your database updates. The second one is a completion function which accepts a database connection and the result of the asynchronous transaction.&lt;/p&gt;
&lt;p&gt;On the first unhandled error during database updates, all changes are reverted, the whole transaction is rollbacked, and the error is passed to the completion function.&lt;/p&gt;
&lt;p&gt;When the transaction completes successfully, the result of the first function is contained in the standard &lt;code&gt;Result&lt;/code&gt; passed to the completion function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;writer.&lt;span class="pl-c1"&gt;asyncWrite&lt;/span&gt;({ (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(newPlayerCount)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new player count: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;newPlayerCount&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle transaction error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The scheduled asynchronous transaction has to wait for any eventual concurrent database write to complete before it can start.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: because it uses the standard &lt;code&gt;Result&lt;/code&gt; type, &lt;code&gt;asyncWrite&lt;/code&gt; is only available with a Swift 5+ compiler, starting Xcode 10.2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-asyncwritewithouttransaction" class="anchor" aria-hidden="true" href="#asyncwritewithouttransaction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt; method can be used from any thread. It submits your database statements for asynchronous execution on a protected dispatch queue, outside of any transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;writer.&lt;span class="pl-smi"&gt;asyncWriteWithoutTransaction&lt;/span&gt; { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Writing outside of any transaction is dangerous.&lt;/strong&gt; You should almost always prefer the &lt;code&gt;asyncWrite&lt;/code&gt; method described above. Please see &lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;The scheduled asynchronous updates have to wait for any eventual concurrent database write to complete before they can start.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-asyncconcurrentread" class="anchor" aria-hidden="true" href="#asyncconcurrentread"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncConcurrentRead&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncConcurrentRead&lt;/code&gt; method is available on database pools only. It is the asynchronous equivalent of the &lt;code&gt;concurrentRead&lt;/code&gt; described in the &lt;a href="#advanced-databasepool"&gt;Advanced DatabasePool&lt;/a&gt; chapter.&lt;/p&gt;
&lt;p&gt;It must be called from a writing dispatch queue, outside of any transaction. You'll get a fatal error otherwise.&lt;/p&gt;
&lt;p&gt;The closure argument is guaranteed to see the database in the last committed state at the moment this method is called. Eventual concurrent database updates are &lt;em&gt;not visible&lt;/em&gt; inside the block.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;asyncConcurrentRead&lt;/code&gt; blocks until it can guarantee its closure argument an isolated access to the last committed state of the database. It then asynchronously executes the closure.&lt;/p&gt;
&lt;p&gt;In the example below, the number of players is fetched concurrently with the player insertion. Yet the future is guaranteed to return zero:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; writer.&lt;span class="pl-smi"&gt;asyncWriteWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Delete all players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;()
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- not in a transaction here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Count players concurrently&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        writer.&lt;span class="pl-smi"&gt;asyncConcurrentRead&lt;/span&gt; { (&lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Database, &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;try&lt;/span&gt; {
                &lt;span class="pl-k"&gt;let&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; result.&lt;span class="pl-c1"&gt;get&lt;/span&gt;()
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;                &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;()
            } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            }
        }
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Insert a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: because it uses the standard &lt;code&gt;Result&lt;/code&gt; type, &lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt; is only available with a Swift 5+ compiler, starting Xcode 10.2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-unsafe-concurrency-apis" class="anchor" aria-hidden="true" href="#unsafe-concurrency-apis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unsafe Concurrency APIs&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Database queues, pools, snapshots, as well as their common protocols &lt;code&gt;DatabaseReader&lt;/code&gt; and &lt;code&gt;DatabaseWriter&lt;/code&gt; provide &lt;em&gt;unsafe&lt;/em&gt; database access methods.&lt;/strong&gt; Unsafe APIs lift &lt;a href="#guarantees-and-rules"&gt;concurrency guarantees&lt;/a&gt;, and allow advanced yet unsafe patterns.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;unsafeRead&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;unsafeRead&lt;/code&gt; method is synchronous, and blocks the current thread until your database statements are executed in a protected dispatch queue. GRDB does just the bare minimum to provide a database connection that can read.&lt;/p&gt;
&lt;p&gt;When used on a database pool, reads are no longer isolated:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dbPool.&lt;span class="pl-smi"&gt;unsafeRead&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Those two values may be different because some other thread&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; may have inserted or deleted a player between the two requests:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When used on a database queue, the closure argument is allowed to write in the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;unsafeReentrantRead&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;unsafeReentrantRead&lt;/code&gt; behaves just as &lt;code&gt;unsafeRead&lt;/code&gt; (see above), and allows reentrant calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db1 &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No "Database methods are not reentrant" fatal error:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    dbPool.&lt;span class="pl-smi"&gt;unsafeReentrantRead&lt;/span&gt; { db2 &lt;span class="pl-k"&gt;in&lt;/span&gt;
        dbPool.&lt;span class="pl-smi"&gt;unsafeReentrantRead&lt;/span&gt; { db3 &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reentrant database accesses make it very easy to break the second &lt;a href="#guarantees-and-rules"&gt;safety rule&lt;/a&gt;, which says: "group related statements within a single call to a DatabaseQueue or DatabasePool database access method.". Using a reentrant method is pretty much likely the sign of a wrong application architecture that needs refactoring.&lt;/p&gt;
&lt;p&gt;There is a single valid use case for reentrant methods, which is when you are unable to control database access scheduling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;unsafeReentrantWrite&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;unsafeReentrantWrite&lt;/code&gt; method is synchronous, and blocks the current thread until your database statements are executed in a protected dispatch queue. Writes are serialized: eventual concurrent database updates are postponed until the block has executed.&lt;/p&gt;
&lt;p&gt;Reentrant calls are allowed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db1 &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No "Database methods are not reentrant" fatal error:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    dbQueue.&lt;span class="pl-smi"&gt;unsafeReentrantWrite&lt;/span&gt; { db2 &lt;span class="pl-k"&gt;in&lt;/span&gt;
        dbQueue.&lt;span class="pl-smi"&gt;unsafeReentrantWrite&lt;/span&gt; { db3 &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reentrant database accesses make it very easy to break the second &lt;a href="#guarantees-and-rules"&gt;safety rule&lt;/a&gt;, which says: "group related statements within a single call to a DatabaseQueue or DatabasePool database access method.". Using a reentrant method is pretty much likely the sign of a wrong application architecture that needs refactoring.&lt;/p&gt;
&lt;p&gt;There is a single valid use case for reentrant methods, which is when you are unable to control database access scheduling.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h2&gt;
&lt;p&gt;GRDB is a reasonably fast library, and can deliver quite efficient SQLite access. See &lt;a href="https://github.com/groue/GRDB.swift/wiki/Performance"&gt;Comparing the Performances of Swift SQLite libraries&lt;/a&gt; for an overview.&lt;/p&gt;
&lt;p&gt;You'll find below general advice when you do look after performance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Focus&lt;/li&gt;
&lt;li&gt;Know your platform&lt;/li&gt;
&lt;li&gt;Use transactions&lt;/li&gt;
&lt;li&gt;Don't do useless work&lt;/li&gt;
&lt;li&gt;Learn about SQL strengths and weaknesses&lt;/li&gt;
&lt;li&gt;Avoid strings &amp;amp; dictionaries&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-focus" class="anchor" aria-hidden="true" href="#performance-tip-focus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: focus&lt;/h3&gt;
&lt;p&gt;You don't know which part of your program needs improvement until you have run a benchmarking tool.&lt;/p&gt;
&lt;p&gt;Don't make any assumption, avoid optimizing code too early, and use &lt;a href="https://developer.apple.com/library/ios/documentation/ToolsLanguages/Conceptual/Xcode_Overview/MeasuringPerformance.html" rel="nofollow"&gt;Instruments&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-know-your-platform" class="anchor" aria-hidden="true" href="#performance-tip-know-your-platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: know your platform&lt;/h3&gt;
&lt;p&gt;If your application processes a huge JSON file and inserts thousands of rows in the database right from the main thread, it will quite likely become unresponsive, and provide a sub-quality user experience.&lt;/p&gt;
&lt;p&gt;If not done yet, read the &lt;a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/ConcurrencyProgrammingGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008091" rel="nofollow"&gt;Concurrency Programming Guide&lt;/a&gt; and learn how to perform heavy computations without blocking your application.&lt;/p&gt;
&lt;p&gt;Most GRBD APIs are &lt;a href="#database-connections"&gt;synchronous&lt;/a&gt;. Spawning them into parallel queues is as easy as:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; { 
    dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Perform database work&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    DispatchQueue.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;async&lt;/span&gt; { 
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; update your user interface&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-use-transactions" class="anchor" aria-hidden="true" href="#performance-tip-use-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: use transactions&lt;/h3&gt;
&lt;p&gt;Performing multiple updates to the database is much faster when executed inside a &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt;. This is because a transaction allows SQLite to postpone writing changes to disk until the final commit:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Inefficient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Efficient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.write&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Efficient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeInTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-dont-do-useless-work" class="anchor" aria-hidden="true" href="#performance-tip-dont-do-useless-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: don't do useless work&lt;/h3&gt;
&lt;p&gt;Obviously, no code is faster than any code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't fetch columns you don't use&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(idColumn, nameColumn).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your Player type can't be built without other columns (it has non-optional properties for other columns), &lt;em&gt;do define and use a different type&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't fetch rows you don't use&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;a href="#fetching-methods"&gt;fetchOne&lt;/a&gt; when you need a single value, and otherwise limit your queries at the database level:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wrong way: this code may discard hundreds of useless database rows&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
&lt;span class="pl-k"&gt;let&lt;/span&gt; hallOfFame &lt;span class="pl-k"&gt;=&lt;/span&gt; players.&lt;span class="pl-c1"&gt;prefix&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Better way&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hallOfFame &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;).&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Don't copy values unless necessary&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Particularly: the Array returned by the &lt;code&gt;fetchAll&lt;/code&gt; method, and the cursor returned by &lt;code&gt;fetchCursor&lt;/code&gt; aren't the same:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fetchAll&lt;/code&gt; copies all values from the database into memory, when &lt;code&gt;fetchCursor&lt;/code&gt; iterates database results as they are generated by SQLite, taking profit from SQLite efficiency.&lt;/p&gt;
&lt;p&gt;You should only load arrays if you need to keep them for later use (such as iterating their contents in the main thread). Otherwise, use &lt;code&gt;fetchCursor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for more information about &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchCursor&lt;/code&gt;. See also the &lt;a href="#data-and-memory-savings"&gt;Row.dataNoCopy&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't update rows unless necessary&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;An UPDATE statement is costly: SQLite has to look for the updated row, update values, and write changes to disk.&lt;/p&gt;
&lt;p&gt;When the overwritten values are the same as the existing ones, it's thus better to avoid performing the UPDATE statement:.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-learn-about-sql-strengths-and-weaknesses" class="anchor" aria-hidden="true" href="#performance-tip-learn-about-sql-strengths-and-weaknesses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: learn about SQL strengths and weaknesses&lt;/h3&gt;
&lt;p&gt;Consider a simple use case: your store application has to display a list of authors with the number of available books:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;J. M. Coetzee (6)&lt;/li&gt;
&lt;li&gt;Herman Melville (1)&lt;/li&gt;
&lt;li&gt;Alice Munro (3)&lt;/li&gt;
&lt;li&gt;Kim Stanley Robinson (7)&lt;/li&gt;
&lt;li&gt;Oliver Sacks (4)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following code is inefficient. It is an example of the &lt;a href="http://stackoverflow.com/questions/97197/what-is-the-n1-selects-issue" rel="nofollow"&gt;N+1 problem&lt;/a&gt;, because it performs one query to load the authors, and then N queries, as many as there are authors. This turns very inefficient as the number of authors grows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM author&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; authors &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Author.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
&lt;span class="pl-k"&gt;for&lt;/span&gt; author &lt;span class="pl-k"&gt;in&lt;/span&gt; authors {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM book WHERE authorId = ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    author.&lt;span class="pl-smi"&gt;bookCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Book.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(authorIdColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; author.&lt;span class="pl-smi"&gt;id&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead, perform &lt;em&gt;a single query&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    SELECT author.*, COUNT(book.id) AS bookCount&lt;/span&gt;
&lt;span class="pl-s"&gt;    FROM author&lt;/span&gt;
&lt;span class="pl-s"&gt;    LEFT JOIN book ON book.authorId = author.id&lt;/span&gt;
&lt;span class="pl-s"&gt;    GROUP BY author.id&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; authors &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Author.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above, consider extending your Author with an extra bookCount property, or define and use a different type.&lt;/p&gt;
&lt;p&gt;Generally, define indexes on your database tables, and use SQLite's efficient query planning:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/queryplanner.html" rel="nofollow"&gt;Query Planning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/lang_createindex.html" rel="nofollow"&gt;CREATE INDEX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/optoverview.html" rel="nofollow"&gt;The SQLite Query Planner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/eqp.html" rel="nofollow"&gt;EXPLAIN QUERY PLAN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-avoid-strings--dictionaries" class="anchor" aria-hidden="true" href="#performance-tip-avoid-strings--dictionaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: avoid strings &amp;amp; dictionaries&lt;/h3&gt;
&lt;p&gt;The String and Dictionary Swift types are better avoided when you look for the best performance.&lt;/p&gt;
&lt;p&gt;Now GRDB &lt;a href="#records"&gt;records&lt;/a&gt;, for your convenience, do use strings and dictionaries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; email&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;required&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;row&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        name &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        email &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;()
    }
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; name          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; email        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When convenience hurts performance, you can still use records, but you have better avoiding their string and dictionary-based methods.&lt;/p&gt;
&lt;p&gt;For example, when fetching values, prefer loading columns by index:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Strings &amp;amp; dictionaries&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column indexes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, name, email FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(idColumn, nameColumn, emailColumn)
&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, request)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; email&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: id, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: name, &lt;span class="pl-c1"&gt;email&lt;/span&gt;: email)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When inserting values, use reusable &lt;a href="#prepared-statements"&gt;prepared statements&lt;/a&gt;, and set statements values with an &lt;em&gt;array&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Strings &amp;amp; dictionaries&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prepared statement&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; insertStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepareStatement&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, email) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only use the unsafe arguments setter if you are sure that you provide&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; all statement arguments. A mistake can store unexpected values in&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the database.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    insertStatement.&lt;span class="pl-c1"&gt;unsafeSetArguments&lt;/span&gt;([player.&lt;span class="pl-smi"&gt;name&lt;/span&gt;, player.&lt;span class="pl-smi"&gt;email&lt;/span&gt;])
    &lt;span class="pl-k"&gt;try&lt;/span&gt; insertStatement.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-do-i-create-a-database-in-my-application"&gt;How do I create a database in my application?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-open-a-database-stored-as-a-resource-of-my-application"&gt;How do I open a database stored as a resource of my application?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-close-a-database-connection"&gt;How do I close a database connection?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-print-a-request-as-sql"&gt;How do I print a request as SQL?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#generic-parameter-t-could-not-be-inferred"&gt;Generic parameter 'T' could not be inferred&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sqlite-error-10-disk-io-error-sqlite-error-23-not-authorized"&gt;SQLite error 10 "disk I/O error", SQLite error 23 "not authorized"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sqlite-error-21-wrong-number-of-statement-arguments-with-like-queries"&gt;SQLite error 21 "wrong number of statement arguments" with LIKE queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-are-experimental-features"&gt;What Are Experimental Features?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-create-a-database-in-my-application" class="anchor" aria-hidden="true" href="#how-do-i-create-a-database-in-my-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I create a database in my application?&lt;/h3&gt;
&lt;p&gt;This question assumes that your application has to create a new database from scratch. If your app has to open an existing database that is embedded inside your application as a resource, see &lt;a href="#how-do-i-open-a-database-stored-as-a-resource-of-my-application"&gt;How do I open a database stored as a resource of my application?&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;The database has to be stored in a valid place where it can be created and modified. For example, in the &lt;a href="https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html" rel="nofollow"&gt;Application Support directory&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; databaseURL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; FileManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;
    .&lt;span class="pl-c1"&gt;url&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: .&lt;span class="pl-smi"&gt;applicationSupportDirectory&lt;/span&gt;, &lt;span class="pl-c1"&gt;in&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userDomainMask&lt;/span&gt;, &lt;span class="pl-c1"&gt;appropriateFor&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;create&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: databaseURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-open-a-database-stored-as-a-resource-of-my-application" class="anchor" aria-hidden="true" href="#how-do-i-open-a-database-stored-as-a-resource-of-my-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I open a database stored as a resource of my application?&lt;/h3&gt;
&lt;p&gt;If your application does not need to modify the database, open a read-only &lt;a href="#database-connections"&gt;connection&lt;/a&gt; to your resource:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPath &lt;span class="pl-k"&gt;=&lt;/span&gt; Bundle.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-c1"&gt;path&lt;/span&gt;(&lt;span class="pl-c1"&gt;forResource&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the application should modify the database, you need to copy it to a place where it can be modified. For example, in the &lt;a href="https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html" rel="nofollow"&gt;Application Support directory&lt;/a&gt;. Only then, open a &lt;a href="#database-connections"&gt;connection&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; fileManager &lt;span class="pl-k"&gt;=&lt;/span&gt; FileManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager
    .&lt;span class="pl-c1"&gt;url&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: .&lt;span class="pl-smi"&gt;applicationSupportDirectory&lt;/span&gt;, &lt;span class="pl-c1"&gt;in&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userDomainMask&lt;/span&gt;, &lt;span class="pl-c1"&gt;appropriateFor&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;create&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-smi"&gt;path&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;fileManager.&lt;span class="pl-c1"&gt;fileExists&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: dbPath) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; dbResourcePath &lt;span class="pl-k"&gt;=&lt;/span&gt; Bundle.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-c1"&gt;path&lt;/span&gt;(&lt;span class="pl-c1"&gt;forResource&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager.&lt;span class="pl-c1"&gt;copyItem&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: dbResourcePath, &lt;span class="pl-c1"&gt;toPath&lt;/span&gt;: dbPath)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-close-a-database-connection" class="anchor" aria-hidden="true" href="#how-do-i-close-a-database-connection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I close a database connection?&lt;/h3&gt;
&lt;p&gt;Database connections are managed by &lt;a href="#database-queues"&gt;database queues&lt;/a&gt; and &lt;a href="#database-pools"&gt;pools&lt;/a&gt;. A connection is closed when its database queue or pool is deallocated, and all usages of this connection are completed.&lt;/p&gt;
&lt;p&gt;Database accesses that run in background threads postpone the closing of connections.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-print-a-request-as-sql" class="anchor" aria-hidden="true" href="#how-do-i-print-a-request-as-sql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I print a request as SQL?&lt;/h3&gt;
&lt;p&gt;When you want to debug a request that does not deliver the expected results, you may want to print the SQL that is actually executed.&lt;/p&gt;
&lt;p&gt;You can turn your request into a &lt;code&gt;SQLRequest&lt;/code&gt; instance:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(originColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(priceColumn)
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; sqlRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;SQLRequest&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;request&lt;/span&gt;: request)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(sqlRequest.&lt;span class="pl-smi"&gt;sql&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints SELECT * FROM wine WHERE origin = ? ORDER BY price&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(sqlRequest.&lt;span class="pl-smi"&gt;arguments&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints ["Burgundy"]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another option is to setup a tracing function that will print out all SQL requests executed by your application. You provide the trace function when you connect to the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;trace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all SQL statements&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(originColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(priceColumn)
        .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints SELECT * FROM wine WHERE origin = 'Burgundy' ORDER BY price&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the generated SQL may change between GRDB releases, without notice: don't have your application rely on any specific SQL output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-generic-parameter-t-could-not-be-inferred" class="anchor" aria-hidden="true" href="#generic-parameter-t-could-not-be-inferred"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generic parameter 'T' could not be inferred&lt;/h3&gt;
&lt;p&gt;You may get this error when using the &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; methods of database queues and pools:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Generic parameter 'T' could not be inferred&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; result &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; result
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is a limitation of the Swift compiler.&lt;/p&gt;
&lt;p&gt;The general workaround is to explicitly declare the type of the closure result:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; General Workaround&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; result &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; result
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also, when possible, write a single-line closure:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Single-line closure workaround:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-sqlite-error-10-disk-io-error-sqlite-error-23-not-authorized" class="anchor" aria-hidden="true" href="#sqlite-error-10-disk-io-error-sqlite-error-23-not-authorized"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite error 10 "disk I/O error", SQLite error 23 "not authorized"&lt;/h3&gt;
&lt;p&gt;Those errors may be the sign that SQLite can't access the database due to &lt;a href="#data-protection"&gt;data protection&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When your application should be able to run in the background on a locked device, it has to catch this error, and, for example, wait for &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationdelegate/1623044-applicationprotecteddatadidbecom" rel="nofollow"&gt;UIApplicationDelegate.applicationProtectedDataDidBecomeAvailable(_:)&lt;/a&gt; or &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationprotecteddatadidbecomeavailable" rel="nofollow"&gt;UIApplicationProtectedDataDidBecomeAvailable&lt;/a&gt; notification and retry the failed database operation.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError &lt;span class="pl-k"&gt;where&lt;/span&gt;
    error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_IOERR&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt;
    error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_AUTH&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle possible data protection error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This error can also be prevented altogether by using a more relaxed &lt;a href="https://developer.apple.com/reference/foundation/filemanager/1653059-file_protection_values" rel="nofollow"&gt;file protection&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sqlite-error-21-wrong-number-of-statement-arguments-with-like-queries" class="anchor" aria-hidden="true" href="#sqlite-error-21-wrong-number-of-statement-arguments-with-like-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite error 21 "wrong number of statement arguments" with LIKE queries&lt;/h3&gt;
&lt;p&gt;You may get the error "wrong number of statement arguments" when executing a LIKE query similar to:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name LIKE '%?%'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [name])
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem lies in the &lt;code&gt;'%?%'&lt;/code&gt; pattern.&lt;/p&gt;
&lt;p&gt;SQLite only interprets &lt;code&gt;?&lt;/code&gt; as a parameter when it is a placeholder for a whole value (int, double, string, blob, null). In this incorrect query, &lt;code&gt;?&lt;/code&gt; is just a character in the &lt;code&gt;'%?%'&lt;/code&gt; string: it is not a query parameter, and is not processed in any way. See &lt;a href="https://www.sqlite.org/lang_expr.html#varparam" rel="nofollow"&gt;https://www.sqlite.org/lang_expr.html#varparam&lt;/a&gt; for more information about SQLite parameters.&lt;/p&gt;
&lt;p&gt;To fix the error, you can feed the request with the pattern itself, instead of the name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; players&lt;span class="pl-k"&gt;:&lt;/span&gt; [Player] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;%&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name LIKE ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [pattern])
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-what-are-experimental-features" class="anchor" aria-hidden="true" href="#what-are-experimental-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What Are Experimental Features?&lt;/h3&gt;
&lt;p&gt;Since GRDB 1.0, all backwards compatibility guarantees of &lt;a href="http://semver.org" rel="nofollow"&gt;semantic versioning&lt;/a&gt; apply: no breaking change will happen until the next major version of the library.&lt;/p&gt;
&lt;p&gt;There is an exception, though: &lt;em&gt;experimental features&lt;/em&gt;, marked with the "&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt; EXPERIMENTAL&lt;/strong&gt;" badge. Those are advanced features that are too young, or lack user feedback. They are not stabilized yet.&lt;/p&gt;
&lt;p&gt;Those experimental features are not protected by semantic versioning, and may break between two minor releases of the library. To help them becoming stable, &lt;a href="https://github.com/groue/GRDB.swift/issues"&gt;your feedback&lt;/a&gt; is greatly appreciated.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sample-code" class="anchor" aria-hidden="true" href="#sample-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample Code&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="#documentation"&gt;Documentation&lt;/a&gt; is full of GRDB snippets.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt;: A sample iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/WWDCCompanion"&gt;WWDC Companion&lt;/a&gt;: A sample iOS application.&lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;GRDB.xcworkspace&lt;/code&gt;: it contains GRDB-enabled playgrounds to play with.&lt;/li&gt;
&lt;li&gt;How to synchronize a database table with a JSON payload: &lt;a href="Documentation/Playgrounds/JSONSynchronization.playground/Contents.swift"&gt;JSONSynchronization.playground&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Thanks&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pierlis.com" rel="nofollow"&gt;Pierlis&lt;/a&gt;, where we write great software.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alextrob"&gt;@alextrob&lt;/a&gt;, &lt;a href="https://github.com/bellebethcooper"&gt;@bellebethcooper&lt;/a&gt;, &lt;a href="https://github.com/bfad"&gt;@bfad&lt;/a&gt;, &lt;a href="https://github.com/cfilipov"&gt;@cfilipov&lt;/a&gt;, &lt;a href="https://github.com/charlesmchen-signal"&gt;@charlesmchen-signal&lt;/a&gt;, &lt;a href="https://github.com/Chiliec"&gt;@Chiliec&lt;/a&gt;, &lt;a href="https://github.com/chrisballinger"&gt;@chrisballinger&lt;/a&gt;, &lt;a href="https://github.com/darrenclark"&gt;@darrenclark&lt;/a&gt;, &lt;a href="https://github.com/davidkraus"&gt;@davidkraus&lt;/a&gt;, &lt;a href="http://github.com/fpillet"&gt;@fpillet&lt;/a&gt;, &lt;a href="https://github.com/gjeck"&gt;@gjeck&lt;/a&gt;, &lt;a href="https://github.com/gusrota"&gt;@gusrota&lt;/a&gt;, &lt;a href="https://github.com/hartbit"&gt;@hartbit&lt;/a&gt;, &lt;a href="https://github.com/kdubb"&gt;@kdubb&lt;/a&gt;, &lt;a href="https://github.com/kluufger"&gt;@kluufger&lt;/a&gt;, &lt;a href="https://github.com/KyleLeneau"&gt;@KyleLeneau&lt;/a&gt;, &lt;a href="https://github.com/Marus"&gt;@Marus&lt;/a&gt;, &lt;a href="https://github.com/MaxDesiatov"&gt;@MaxDesiatov&lt;/a&gt;, &lt;a href="https://github.com/michaelkirk-signal"&gt;@michaelkirk-signal&lt;/a&gt;, &lt;a href="https://github.com/pakko972"&gt;@pakko972&lt;/a&gt;, &lt;a href="https://github.com/peter-ss"&gt;@peter-ss&lt;/a&gt;, &lt;a href="https://github.com/pierlo"&gt;@pierlo&lt;/a&gt;, &lt;a href="https://github.com/pocketpixels"&gt;@pocketpixels&lt;/a&gt;, &lt;a href="https://github.com/robcas3"&gt;@robcas3&lt;/a&gt;, &lt;a href="https://github.com/runhum"&gt;@runhum&lt;/a&gt;, &lt;a href="https://github.com/schveiguy"&gt;@schveiguy&lt;/a&gt;, &lt;a href="https://github.com/SD10"&gt;@SD10&lt;/a&gt;, &lt;a href="https://github.com/sobri909"&gt;@sobri909&lt;/a&gt;, &lt;a href="https://github.com/sroddy"&gt;@sroddy&lt;/a&gt;, &lt;a href="https://github.com/swiftlyfalling"&gt;@swiftlyfalling&lt;/a&gt;, &lt;a href="https://github.com/Timac"&gt;@Timac&lt;/a&gt;, &lt;a href="https://github.com/valexa"&gt;@valexa&lt;/a&gt;, and &lt;a href="https://github.com/zmeyc"&gt;@zmeyc&lt;/a&gt; for their contributions, help, and feedback on GRDB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aymerick"&gt;@aymerick&lt;/a&gt; and &lt;a href="https://github.com/kali"&gt;@kali&lt;/a&gt; because SQL.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ccgus/fmdb"&gt;ccgus/fmdb&lt;/a&gt; for its excellency.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://www.w3.org/Provider/Style/URI" rel="nofollow"&gt;URIs don't change: people change them.&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-changes-tracking" class="anchor" aria-hidden="true" href="#changes-tracking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changes Tracking&lt;/h4&gt;
&lt;p&gt;This chapter has been renamed &lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-fetchedrecordscontroller" class="anchor" aria-hidden="true" href="#fetchedrecordscontroller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FetchedRecordsController&lt;/h4&gt;
&lt;p&gt;This chapter has &lt;a href="Documentation/FetchedRecordsController.md"&gt;moved&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-persistable-protocol" class="anchor" aria-hidden="true" href="#persistable-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistable Protocol&lt;/h4&gt;
&lt;p&gt;This protocol has been renamed &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; in GRDB 3.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-rowconvertible-protocol" class="anchor" aria-hidden="true" href="#rowconvertible-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RowConvertible Protocol&lt;/h4&gt;
&lt;p&gt;This protocol has been renamed &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; in GRDB 3.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-tablemapping-protocol" class="anchor" aria-hidden="true" href="#tablemapping-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TableMapping Protocol&lt;/h4&gt;
&lt;p&gt;This protocol has been renamed &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; in GRDB 3.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-customized-decoding-of-database-rows" class="anchor" aria-hidden="true" href="#customized-decoding-of-database-rows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customized Decoding of Database Rows&lt;/h4&gt;
&lt;p&gt;This chapter has been renamed &lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-full-text-search" class="anchor" aria-hidden="true" href="#full-text-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full-Text Search&lt;/h4&gt;
&lt;p&gt;This chapter has &lt;a href="Documentation/FullTextSearch.md"&gt;moved&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-enabling-fts5-support" class="anchor" aria-hidden="true" href="#enabling-fts5-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enabling FTS5 Support&lt;/h4&gt;
&lt;p&gt;This chapter has &lt;a href="Documentation/FullTextSearch.md#enabling-fts5-support"&gt;moved&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-dealing-with-external-connections" class="anchor" aria-hidden="true" href="#dealing-with-external-connections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dealing with External Connections&lt;/h4&gt;
&lt;p&gt;This chapter has been superseded by &lt;a href="Documentation/AppGroupContainers.md"&gt;App Group Containers&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>groue</author><guid isPermaLink="false">https://github.com/groue/GRDB.swift</guid><pubDate>Mon, 10 Feb 2020 00:05:00 GMT</pubDate></item><item><title>rxhanson/Rectangle #6 in Swift, Today</title><link>https://github.com/rxhanson/Rectangle</link><description>&lt;p&gt;&lt;i&gt;Move and resize windows on macOS with keyboard shortcuts and snap areas&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rectangle" class="anchor" aria-hidden="true" href="#rectangle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rectangle&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/rxhanson/Rectangle/workflows/Build/badge.svg"&gt;&lt;img src="https://github.com/rxhanson/Rectangle/workflows/Build/badge.svg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rectangle is a window management app based on Spectacle, written in Swift.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13651296/71896594-7cdb9280-3154-11ea-83a7-70b71c6df9d4.png"&gt;&lt;img src="https://user-images.githubusercontent.com/13651296/71896594-7cdb9280-3154-11ea-83a7-70b71c6df9d4.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Requirements&lt;/h2&gt;
&lt;p&gt;Rectangle supports macOS v10.11+. If you're willing to test on earlier versions of macOS, this can be updated.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can download the latest dmg from &lt;a href="https://rectangleapp.com" rel="nofollow"&gt;https://rectangleapp.com&lt;/a&gt; or the &lt;a href="https://github.com/rxhanson/Rectangle/releases"&gt;Releases page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Or install with brew cask:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew cask install rectangle&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use-it" class="anchor" aria-hidden="true" href="#how-to-use-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use it&lt;/h2&gt;
&lt;p&gt;They keyboard shortcuts are self explanatory, but the snap areas can use some explanation if you've never used then on Windows or other window management apps.&lt;/p&gt;
&lt;p&gt;Drag a window to the edge of the screen. When the mouse cursor reaches the edge of the screen, you'll see a footprint that Rectangle will attempt to resize and move the window to when the click is released.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Snap Area&lt;/th&gt;
&lt;th&gt;Resulting Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Left or right edge&lt;/td&gt;
&lt;td&gt;Left or right half&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Top&lt;/td&gt;
&lt;td&gt;Maximize&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Corners&lt;/td&gt;
&lt;td&gt;Quarter in respective corner&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Left or right edge, just above or below a corner&lt;/td&gt;
&lt;td&gt;Top or bottom half&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bottom left, center, or right third&lt;/td&gt;
&lt;td&gt;Respective third&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bottom left or right third, then drag to bottom center&lt;/td&gt;
&lt;td&gt;First or last two thirds, respectively&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-ignore-an-app" class="anchor" aria-hidden="true" href="#ignore-an-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignore an app&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Focus the app that you want to ignore (make a window from that app frontmost).&lt;/li&gt;
&lt;li&gt;Open the Rectangle menu and select "Ignore app"&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-keyboard-shortcuts" class="anchor" aria-hidden="true" href="#keyboard-shortcuts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keyboard Shortcuts&lt;/h2&gt;
&lt;p&gt;The default keyboard shortcuts are based on Spectacle, but there is a recommended alternative set of defaults based on the Magnet app. This can be enabled by setting "alternateDefaultShortcuts" to true in NSUserDefaults for Rectangle with the following Terminal command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write com.knollsoft.Rectangle alternateDefaultShortcuts -bool &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then restart the Rectangle app.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-differences-with-spectacle" class="anchor" aria-hidden="true" href="#differences-with-spectacle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differences with Spectacle&lt;/h2&gt;
&lt;p&gt;Spectacle used its own keyboard shortcut recorder, while Rectangle uses &lt;a href="https://github.com/shpakovski/MASShortcut"&gt;MASShortcut&lt;/a&gt;, a well maintained open source library for shortcut recording in macOS apps. This cuts down dramatically on the number of bugs that were only in Spectacle because of the custom shortcut recorder.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-additional-features" class="anchor" aria-hidden="true" href="#additional-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Additional window actions: move windows to each edge without resizing, maximize only the height of a window, almost maximizing a window.&lt;/li&gt;
&lt;li&gt;Next/prev screen thirds is replaced with explicitly first third, first two thirds, center third, last two thirds, and last third. Screen orientation is taken into account, as in first third will be left third on landscape and top third on portrait.&lt;/li&gt;
&lt;li&gt;There's an option to have windows traverse across displays on subsequent left or right executions, similar to what Microsoft provided in Windows 7.&lt;/li&gt;
&lt;li&gt;Windows will snap when dragged to edges/corners of the screen. This can be disabled.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-details-on-halves-to-thirds-subsequent-execution-of-half-and-quarter-actions" class="anchor" aria-hidden="true" href="#details-on-halves-to-thirds-subsequent-execution-of-half-and-quarter-actions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Details on halves to thirds (subsequent execution of half and quarter actions)&lt;/h3&gt;
&lt;p&gt;The default behavior for Rectangle is based on Spectacle. Each time you execute a half or quarter action, the width of the window will cycle through the following sizes: 1/2 -&amp;gt; 2/3 -&amp;gt; 1/3.&lt;/p&gt;
&lt;p&gt;This behavior can be disabled with the following terminal command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write com.knollsoft.Rectangle subsequentExecutionMode -int 2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Followed by a restart of the app.&lt;/p&gt;
&lt;p&gt;Note that the &lt;code&gt;subsequentExecutionMode&lt;/code&gt; is also tied to the setting for traversing displays in the prefs.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-details-on-almost-maximize" class="anchor" aria-hidden="true" href="#details-on-almost-maximize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Details on Almost Maximize&lt;/h3&gt;
&lt;p&gt;By default, "Almost Maximize" will resize the window to 90% of the screen (width &amp;amp; height). These values can be adjusted with the following terminal commands:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write com.knollsoft.Rectangle almostMaximizeHeight -float &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;VALUE_BETWEEN_0_&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;_&lt;span class="pl-k"&gt;1&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write com.knollsoft.Rectangle almostMaximizeWidth -float &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;VALUE_BETWEEN_0_&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;_&lt;span class="pl-k"&gt;1&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Followed by a restart of the app.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-details-on-adding-gaps-between-windows" class="anchor" aria-hidden="true" href="#details-on-adding-gaps-between-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Details on Adding Gaps Between Windows&lt;/h3&gt;
&lt;p&gt;As of v0.17, gaps between windows can be added with the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write com.knollsoft.Rectangle gapSize -float &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;NUM_PIXELS&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Followed by a restart of the app.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-details-on-move-updownleftright" class="anchor" aria-hidden="true" href="#details-on-move-updownleftright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Details on Move Up/Down/Left/Right&lt;/h3&gt;
&lt;p&gt;The current default behavior of these actions is to center the window along the edge that the window is being moved to.&lt;/p&gt;
&lt;p&gt;As of v0.19, the centering can be disabled with the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write com.knollsoft.Rectangle centeredDirectionalMove -int 2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Followed by a restart of the app.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Logic from Rectangle is used in the &lt;a href="https://multitouch.app" rel="nofollow"&gt;Multitouch&lt;/a&gt; app. If you contribute significant code or localizations that get merged into Rectangle, you get a free license of Multitouch. Contributors to Sparkle, MASShortcut, or Spectacle can also receive a free license of Multitouch (just send me a direct message on &lt;a href="https://gitter.im" rel="nofollow"&gt;Gitter&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-localization" class="anchor" aria-hidden="true" href="#localization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Localization&lt;/h3&gt;
&lt;p&gt;Initial localizations were done using &lt;a href="https://www.deepl.com/translator" rel="nofollow"&gt;DeepL&lt;/a&gt; and Google Translate, but many of them have been updated by contributors. Translations that weren't done by humans can definitely be improved. If you would like to contribute to localization, all of the translations are held in the Main.strings per language. If you would like to add a localization but one doesn't currently exist and you don't know how to create one, create an issue and a translation file can be initialized.&lt;/p&gt;
&lt;p&gt;Pull requests for new localizations or improvements on existing localizations are welcome.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-running-the-app-in-xcode-for-developers" class="anchor" aria-hidden="true" href="#running-the-app-in-xcode-for-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the app in Xcode (for developers)&lt;/h3&gt;
&lt;p&gt;Rectangle uses &lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; to install Sparkle and MASShortcut.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure CocoaPods is installed and up to date on your machine (&lt;code&gt;sudo gem install cocoapods&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Execute &lt;code&gt;pod install&lt;/code&gt; the root directory of the project.&lt;/li&gt;
&lt;li&gt;Open the generated xcworkspace file (&lt;code&gt;open Rectangle.xcworkspace&lt;/code&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-signing" class="anchor" aria-hidden="true" href="#signing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Signing&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;When running in Xcode (debug), Rectangle is signed to run locally with no developer ID configured.&lt;/li&gt;
&lt;li&gt;You can run the app out of the box this way, but you might have to authorize the app in System Prefs every time you run it.&lt;/li&gt;
&lt;li&gt;If you don't want to authorize in System Prefs every time you run it and you have a developer ID set up, you'll want to use that to sign it and additionally add the Hardened Runtime capability to the Rectangle and RectangleLauncher targets.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;If windows aren't resizing or moving as you expect, here's some initial steps to get to the bottom of it. Most issues of this type have been caused by other apps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure macOS is up to date, if possible.&lt;/li&gt;
&lt;li&gt;Restart your machine.&lt;/li&gt;
&lt;li&gt;Make sure there are no other window manager applications running.&lt;/li&gt;
&lt;li&gt;Make sure that the app whose windows are not behaving properly does not have any conflicting keyboard shortcuts.&lt;/li&gt;
&lt;li&gt;Try using the menu items to execute a window action or changing the keyboard shortcut to something different so we can tell if it's a keyboard shortcut issue or not.&lt;/li&gt;
&lt;li&gt;Enable debug logging, as per the instructions in the following section.&lt;/li&gt;
&lt;li&gt;The logs are pretty straightforward. If your calculated rect and your resulting rect are identical, chances are that there is another application causing issues. Save your logs if needed to attach to an issue if you create one.&lt;/li&gt;
&lt;li&gt;If you suspect there may be another application causing issues, try creating and logging in as a new macOS user.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-view-debug-logging" class="anchor" aria-hidden="true" href="#view-debug-logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Debug Logging&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Hold down the alt (option) key with the Rectangle menu open.&lt;/li&gt;
&lt;li&gt;Select the "View Logging..." menu item, which is in place of the "About" menu item.&lt;/li&gt;
&lt;li&gt;Logging will appear in the window as you perform Rectangle commands.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-preferences-storage" class="anchor" aria-hidden="true" href="#preferences-storage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preferences Storage&lt;/h2&gt;
&lt;p&gt;The configuration for Rectangle is stored using NSUserDefaults, meaning it is stored in the following location:
&lt;code&gt;~/Library/Preferences/com.knollsoft.Rectangle.plist&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That file can be backed up or transferred to other machines.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rxhanson</author><guid isPermaLink="false">https://github.com/rxhanson/Rectangle</guid><pubDate>Mon, 10 Feb 2020 00:06:00 GMT</pubDate></item><item><title>ivanvorobei/SwiftUI #7 in Swift, Today</title><link>https://github.com/ivanvorobei/SwiftUI</link><description>&lt;p&gt;&lt;i&gt;Examples projects using SwiftUI released by WWDC2019. Include Layout, UI, Animations, Gestures, Draw and Data.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-swiftui-examples" class="anchor" aria-hidden="true" href="#swiftui-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;SwiftUI&lt;/code&gt; Examples&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Previews/animatable-cards.gif"&gt;&lt;img align="left" src="Previews/animatable-cards.gif" width="280" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h3&gt;
&lt;p&gt;Examples projects using &lt;code&gt;SwiftUI&lt;/code&gt; &amp;amp; &lt;code&gt;Combine&lt;/code&gt;.&lt;br&gt;
Include Layout, UI, Animations, Gestures, Draw and Data. See projects files in &lt;code&gt;Files&lt;/code&gt; &amp;amp; &lt;code&gt;Other Projects&lt;/code&gt; folders. If you have project, make a pull request or create issue with link to repo.&lt;/p&gt;
&lt;p&gt;Interested in UI and animations in &lt;code&gt;UIKit&lt;/code&gt;?&lt;br&gt;
See &lt;a href="https://github.com/ivanvorobei/awesome-ios-ui"&gt;awesome-ios-ui&lt;/a&gt; pack with UI elements:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ivanvorobei/awesome-ios-ui"&gt;&lt;img src="https://github.com/ivanvorobei/SPPermissions/raw/master/Assets/Buttons/awesome-ios-ui.svg?sanitize=true" alt="awesome-ios-ui" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you like the project, do not forget to &lt;code&gt;put star ★&lt;/code&gt;&lt;br&gt;
and follow me on GitHub:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ivanvorobei"&gt;&lt;img src="https://github.com/ivanvorobei/SPPermissions/raw/master/Assets/Buttons/follow-me-on-github.svg?sanitize=true" alt="https://github.com/ivanvorobei" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-navigate" class="anchor" aria-hidden="true" href="#navigate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Navigate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#animatable-cards"&gt;Animatable Cards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#area-to-card"&gt;Area to Card&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-other-projects" class="anchor" aria-hidden="true" href="#other-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other projects&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#transition-and-blur"&gt;Transition And Blur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2048-game"&gt;2048 Game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sfsymbols"&gt;SFSymbols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calculator"&gt;Calculator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#creating-and-combining-views"&gt;Creating And Combining Views&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-lists-and-navigation"&gt;Building Lists And Navigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#handling-user-input"&gt;Handling User Input&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#WWDCPlayer"&gt;WWDCPlayer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#composing-complex-interfaces"&gt;Composing Complex Interfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#working-with-uicontrols"&gt;Working With UIControls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#example-to-do-app"&gt;Example To-Do App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ipados-scenes"&gt;iPadOS Scenes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#combine-using-github-api"&gt;Combine using GitHub API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#async-image-loading"&gt;Async image loading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#interfacing-with-uikit"&gt;Interfacing With UIKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github-search"&gt;GitHub Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#time-travel"&gt;Time Travel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#drawing-paths-and-shapes"&gt;Drawing Paths And Shapes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#animating-views-and-transitions"&gt;Animating Views And Transitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jike"&gt;Jike&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#flux"&gt;Flux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SwiftUIDownloadView"&gt;SwiftUI Download Progress View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#puregenius"&gt;PureGenius&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SwiftUI-SideMenu"&gt;SwiftUI SideMenu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SwiftUI-Currency"&gt;SwiftUI Currency App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SwiftUI-Weather"&gt;SwiftUI Weather App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mythxn/DesignCode"&gt;DesignCode SwiftUI App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#MTSlideToOpen-SwiftUI"&gt;SwiftUI SlideToOpen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#FlipClock-SwiftUI"&gt;FlipClock-SwiftUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#transition-and-blur"&gt;Currency Converter &amp;amp; Calculator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#CountdownFilmClutter-SwiftUI"&gt;Countdown Film Clutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SpotlightSearch"&gt;SpotlightSearch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Movie&lt;/li&gt;
&lt;li&gt;InstaFake&lt;/li&gt;
&lt;li&gt;TempusRomanumII&lt;/li&gt;
&lt;li&gt;SwiftUI + Redux&lt;/li&gt;
&lt;li&gt;React Meets SwiftUI&lt;/li&gt;
&lt;li&gt;Webview&lt;/li&gt;
&lt;li&gt;UINote&lt;/li&gt;
&lt;li&gt;SplitView&lt;/li&gt;
&lt;li&gt;Card Animation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-animatable-cards" class="anchor" aria-hidden="true" href="#animatable-cards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animatable Cards&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Previews/animatable-cards.gif"&gt;&lt;img align="left" src="Previews/animatable-cards.gif" width="280" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-3d" class="anchor" aria-hidden="true" href="#3d"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3D&lt;/h4&gt;
&lt;p&gt;For add 3D rotation for back cards use code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;rotation3DEffect&lt;/span&gt;(
	&lt;span class="pl-c1"&gt;Angle&lt;/span&gt;(&lt;span class="pl-c1"&gt;degrees&lt;/span&gt;: dragState.&lt;span class="pl-smi"&gt;isActive&lt;/span&gt; &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;), &lt;span class="pl-c1"&gt;axis&lt;/span&gt;: (&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;10.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;10.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;z&lt;/span&gt;: &lt;span class="pl-c1"&gt;10.0&lt;/span&gt;)
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For medium card use 30 angles.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-animation" class="anchor" aria-hidden="true" href="#animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animation&lt;/h4&gt;
&lt;p&gt;In preview I am use &lt;code&gt;Spring&lt;/code&gt; animation for all cards:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;animation&lt;/span&gt;(.&lt;span class="pl-c1"&gt;spring&lt;/span&gt;())
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-area-to-card" class="anchor" aria-hidden="true" href="#area-to-card"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Area to Card&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Previews/area-to-card.gif"&gt;&lt;img align="left" src="Previews/area-to-card.gif" width="280" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sfsymbols" class="anchor" aria-hidden="true" href="#sfsymbols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SFSymbols&lt;/h4&gt;
&lt;p&gt;For button using &lt;code&gt;SFSymbols&lt;/code&gt; pack with ready-use icons. Also support customisable weight:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Image&lt;/span&gt;(&lt;span class="pl-c1"&gt;systemName&lt;/span&gt;: show &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;slash.circle.fill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;slash.circle&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   .&lt;span class="pl-c1"&gt;font&lt;/span&gt;(Font.&lt;span class="pl-smi"&gt;title&lt;/span&gt;.&lt;span class="pl-c1"&gt;weight&lt;/span&gt;(.&lt;span class="pl-smi"&gt;semibold&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-button" class="anchor" aria-hidden="true" href="#button"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Button&lt;/h4&gt;
&lt;p&gt;For change state using &lt;code&gt;@State&lt;/code&gt; as property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@State&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; show &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-transition-and-blur" class="anchor" aria-hidden="true" href="#transition-and-blur"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transition And Blur&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/TransitionBlur.png"&gt;&lt;img src="Resources/TransitionBlur.png" width="700" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-2048-game" class="anchor" aria-hidden="true" href="#2048-game"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2048 Game&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/2048game.png"&gt;&lt;img src="Resources/2048game.png" width="800" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sfsymbols-1" class="anchor" aria-hidden="true" href="#sfsymbols-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SFSymbols&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/SFSymbols.gif"&gt;&lt;img src="Resources/SFSymbols.gif" width="700" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-calculator" class="anchor" aria-hidden="true" href="#calculator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calculator&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/Calculator.png"&gt;&lt;img src="Resources/Calculator.png" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-creating-and-combining-views" class="anchor" aria-hidden="true" href="#creating-and-combining-views"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating And Combining Views&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/CreatingAndCombiningViews.png"&gt;&lt;img src="Resources/CreatingAndCombiningViews.png" width="650" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-lists-and-navigation" class="anchor" aria-hidden="true" href="#building-lists-and-navigation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Lists And Navigation&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/BuildingListsAndNavigation.png"&gt;&lt;img src="Resources/BuildingListsAndNavigation.png" width="650" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-wwdcplayer" class="anchor" aria-hidden="true" href="#wwdcplayer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WWDCPlayer&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/WWDCPlayer.png"&gt;&lt;img src="Resources/WWDCPlayer.png" width="260" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-handling-user-input" class="anchor" aria-hidden="true" href="#handling-user-input"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Handling User Input&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/HandlingUserInput.png"&gt;&lt;img src="Resources/HandlingUserInput.png" width="650" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-composing-complex-interfaces" class="anchor" aria-hidden="true" href="#composing-complex-interfaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Composing Complex Interfaces&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/ComposingComplexInterfaces.png"&gt;&lt;img src="Resources/ComposingComplexInterfaces.png" width="650" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-working-with-uicontrols" class="anchor" aria-hidden="true" href="#working-with-uicontrols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working With UIControls&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/WorkingWithUIControls.png"&gt;&lt;img src="Resources/WorkingWithUIControls.png" width="650" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/WorkingWithUIControls2.png"&gt;&lt;img src="Resources/WorkingWithUIControls2.png" width="650" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example-to-do-app" class="anchor" aria-hidden="true" href="#example-to-do-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example To-Do App&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/ExampleToDoApp.png"&gt;&lt;img src="Resources/ExampleToDoApp.png" width="850" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ipados-scenes" class="anchor" aria-hidden="true" href="#ipados-scenes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iPadOS Scenes&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/iPadOSScenes.jpeg"&gt;&lt;img src="Resources/iPadOSScenes.jpeg" width="600" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-combine-using-github-api" class="anchor" aria-hidden="true" href="#combine-using-github-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Combine using GitHub API&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/CombineUsingGitHubAPI.png"&gt;&lt;img src="Resources/CombineUsingGitHubAPI.png" width="260" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-async-image-loading" class="anchor" aria-hidden="true" href="#async-image-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Async image loading&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/AsyncImageLoading.gif"&gt;&lt;img src="Resources/AsyncImageLoading.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-interfacing-with-uikit" class="anchor" aria-hidden="true" href="#interfacing-with-uikit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interfacing With UIKit&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/InterfacingWithUIKit.png"&gt;&lt;img src="Resources/InterfacingWithUIKit.png" width="650" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-github-search" class="anchor" aria-hidden="true" href="#github-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitHub Search&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/GitHubSearch.png"&gt;&lt;img src="Resources/GitHubSearch.png" width="270" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-time-travel" class="anchor" aria-hidden="true" href="#time-travel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Time Travel&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/TimeTravel.gif"&gt;&lt;img src="Resources/TimeTravel.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-drawing-paths-and-shapes" class="anchor" aria-hidden="true" href="#drawing-paths-and-shapes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Drawing Paths And Shapes&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/DrawingPathsAndShapes.png"&gt;&lt;img src="Resources/DrawingPathsAndShapes.png" width="650" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-animating-views-and-transitions" class="anchor" aria-hidden="true" href="#animating-views-and-transitions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animating Views And Transitions&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/AnimatingViewsAndTransitions.png"&gt;&lt;img src="Resources/AnimatingViewsAndTransitions.png" width="650" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-jike" class="anchor" aria-hidden="true" href="#jike"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jike&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/Jike.png"&gt;&lt;img src="Resources/Jike.png" width="750" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-flux" class="anchor" aria-hidden="true" href="#flux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flux&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/Flux.gif"&gt;&lt;img src="Resources/Flux.gif" width="260" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swiftuidownloadview" class="anchor" aria-hidden="true" href="#swiftuidownloadview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftUIDownloadView&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/SwiftUIDownloadView.gif"&gt;&lt;img src="Resources/SwiftUIDownloadView.gif" width="294" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
#### PureGenius
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/PureGenius.gif"&gt;&lt;img src="Resources/PureGenius.gif" width="260" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swiftui-sidemenu" class="anchor" aria-hidden="true" href="#swiftui-sidemenu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftUI SideMenu&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Vidhyadharan24/SideMenu"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/SwiftUISideMenu.gif"&gt;&lt;img src="Resources/SwiftUISideMenu.gif" width="300" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swiftui-currency" class="anchor" aria-hidden="true" href="#swiftui-currency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftUI Currency&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/alexliubj/SwiftUI-Currency-Converter"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Resources/SwiftUICurrency.png"&gt;&lt;img src="Resources/SwiftUICurrency.png" width="300" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swiftui-weather" class="anchor" aria-hidden="true" href="#swiftui-weather"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftUI Weather&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/bpisano/Weather"&gt;Source&lt;/a&gt; and &lt;a href="https://medium.com/lunabee-studio/building-a-weather-app-with-swiftui-4ec2743ff615" rel="nofollow"&gt;Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/bpisano/Weather/blob/master/Images/Banner.png"&gt;&lt;img src="https://github.com/bpisano/Weather/raw/master/Images/Banner.png" width="650" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-designcode-swiftui" class="anchor" aria-hidden="true" href="#designcode-swiftui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DesignCode SwiftUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mythxn/DesignCode/tree/master"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/mythxn/DesignCode-SwiftUI/blob/master/preview.gif"&gt;&lt;img src="https://github.com/mythxn/DesignCode-SwiftUI/raw/master/preview.gif" height="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f65557a2c3c8c7617e817d1d20155c2c1a75c06c/68747470733a2f2f692e696d6775722e636f6d2f4e3948665764442e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/f65557a2c3c8c7617e817d1d20155c2c1a75c06c/68747470733a2f2f692e696d6775722e636f6d2f4e3948665764442e706e67" height="450" data-canonical-src="https://i.imgur.com/N9HfWdD.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mtslidetoopen-swiftui" class="anchor" aria-hidden="true" href="#mtslidetoopen-swiftui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MTSlideToOpen-SwiftUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/lemanhtien/MTSlideToOpen-SwiftUI"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="url"&gt;&lt;img src="https://raw.githubusercontent.com/lemanhtien/MTSlideToOpen-SwiftUI/master/example.gif" align="center" height="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-flipclock-swiftui" class="anchor" aria-hidden="true" href="#flipclock-swiftui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FlipClock-SwiftUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/elpassion/FlipClock-SwiftUI"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Light&lt;/th&gt;
&lt;th align="center"&gt;Dark&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/elpassion/FlipClock-SwiftUI/blob/master/Gifs/flip_clock_light.gif"&gt;&lt;img src="https://github.com/elpassion/FlipClock-SwiftUI/raw/master/Gifs/flip_clock_light.gif" width="260" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/elpassion/FlipClock-SwiftUI/blob/master/Gifs/flip_clock_dark.gif"&gt;&lt;img src="https://github.com/elpassion/FlipClock-SwiftUI/raw/master/Gifs/flip_clock_dark.gif" width="260" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-currency-converter--calculator" class="anchor" aria-hidden="true" href="#currency-converter--calculator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Currency Converter &amp;amp; Calculator&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/CurrencyConverterCalculator/iosCCC"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/CurrencyConverterCalculator/iosCCC/blob/master/iosCCC.gif"&gt;&lt;img src="https://github.com/CurrencyConverterCalculator/iosCCC/raw/master/iosCCC.gif" width="360px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-countdownfilmclutter-swiftui" class="anchor" aria-hidden="true" href="#countdownfilmclutter-swiftui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CountdownFilmClutter-SwiftUI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/elpassion/CountdownFilmClutter-SwiftUI"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/elpassion/CountdownFilmClutter-SwiftUI/blob/master/Gifs/countdown_film_clutter.gif"&gt;&lt;img src="https://github.com/elpassion/CountdownFilmClutter-SwiftUI/raw/master/Gifs/countdown_film_clutter.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-spotlightsearch" class="anchor" aria-hidden="true" href="#spotlightsearch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SpotlightSearch&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/boraseoksoon/SpotlightSearch"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Light&lt;/th&gt;
&lt;th align="center"&gt;Dark&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/boraseoksoon/SpotlightSearch/blob/master/gif/white_theme.gif"&gt;&lt;img src="https://github.com/boraseoksoon/SpotlightSearch/raw/master/gif/white_theme.gif" width="260" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/boraseoksoon/SpotlightSearch/blob/master/gif/dark_theme.gif"&gt;&lt;img src="https://github.com/boraseoksoon/SpotlightSearch/raw/master/gif/dark_theme.gif" width="260" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h3&gt;
&lt;p&gt;Thanks for &lt;a href="https://github.com/Jinxiansen"&gt;Jinxiansen&lt;/a&gt;, &lt;a href="https://github.com/ra1028"&gt;ra1028&lt;/a&gt;, &lt;a href="https://github.com/timdonnelly"&gt;timdonnelly&lt;/a&gt;, &lt;a href="https://github.com/TwoLivesLeft"&gt;TwoLivesLeft&lt;/a&gt;, &lt;a href="https://github.com/devxoul"&gt;devxoul&lt;/a&gt;, &lt;a href="https://github.com/cmtrounce"&gt;cmtrounce&lt;/a&gt;, &lt;a href="https://github.com/unixzii"&gt;unixzii&lt;/a&gt;, &lt;a href="https://github.com/ra1028"&gt;ra1028&lt;/a&gt; for examples project.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ivanvorobei</author><guid isPermaLink="false">https://github.com/ivanvorobei/SwiftUI</guid><pubDate>Mon, 10 Feb 2020 00:07:00 GMT</pubDate></item><item><title>serhii-londar/open-source-mac-os-apps #8 in Swift, Today</title><link>https://github.com/serhii-londar/open-source-mac-os-apps</link><description>&lt;p&gt;&lt;i&gt;🚀 Awesome list of open source applications for macOS.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./icons/icon.png"&gt;&lt;img src="./icons/icon.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-awesome-macos-open-source-applications" class="anchor" aria-hidden="true" href="#awesome-macos-open-source-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Awesome macOS open source applications&lt;/h1&gt;
&lt;p align="left"&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img alt="Awesome" src="https://camo.githubusercontent.com/13c4e50d88df7178ae1882a203ed57b641674f94/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" data-canonical-src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/open-source-mac-os-apps/Lobby?utm_source=share-link&amp;amp;utm_medium=link&amp;amp;utm_campaign=share-link" rel="nofollow"&gt;&lt;img alt="Join the chat at gitter" src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;Hey friend! Help me out for a couple of &lt;g-emoji class="g-emoji" alias="beers" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png"&gt;🍻&lt;/g-emoji&gt;!  &lt;span&gt;&lt;a href="https://www.patreon.com/serhiilondar" title="Donate to this project using Patreon" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6446a7907a4d4f8de024ec85750feb07d7914658/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70617472656f6e2d646f6e6174652d79656c6c6f772e737667" alt="Patreon donate button" data-canonical-src="https://img.shields.io/badge/patreon-donate-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;List of awesome open source applications for macOS. This list contains a lot of native, and cross-platform apps. The main goal of this repository is to find free open source apps and start contributing. Feel free to &lt;a href="CONTRIBUTING.md"&gt;contribute&lt;/a&gt; to the list, any suggestions are welcome!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-languages" class="anchor" aria-hidden="true" href="#languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Languages&lt;/h2&gt;
&lt;p&gt;You can see in which language an app is written. Currently there are following languages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt; - C language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt; - C++ language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/csharp-16.png"&gt;&lt;img src="./icons/csharp-16.png" alt="c_sharp_icon" title="C# Language" style="max-width:100%;"&gt;&lt;/a&gt; - C# language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/clojure-16.png"&gt;&lt;img src="./icons/clojure-16.png" alt="clojure_icon" title="Clojure Language" style="max-width:100%;"&gt;&lt;/a&gt; - Clojure language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/coffeescript-16.png"&gt;&lt;img src="./icons/coffeescript-16.png" alt="coffee_script_icon" title="CoffeeScript language." style="max-width:100%;"&gt;&lt;/a&gt; - CoffeeScript language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt; - CSS language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/golang-16.png"&gt;&lt;img src="./icons/golang-16.png" alt="go_icon" title="Go language." style="max-width:100%;"&gt;&lt;/a&gt; - Go language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/elm-16.png"&gt;&lt;img src="./icons/elm-16.png" alt="elm_icon" title="Elm Language" style="max-width:100%;"&gt;&lt;/a&gt; - Elm language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/haskell-16.png"&gt;&lt;img src="./icons/haskell-16.png" alt="haskell_icon" title="Haskell language." style="max-width:100%;"&gt;&lt;/a&gt; - Haskell language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; - JavaScript language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/Lua-16.png"&gt;&lt;img src="./icons/Lua-16.png" alt="lua_icon" title="Lua language." style="max-width:100%;"&gt;&lt;/a&gt; - Lua language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; - Objective-C language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt; - Python language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/ruby-16.png"&gt;&lt;img src="./icons/ruby-16.png" alt="ruby_icon" title="Ruby language." style="max-width:100%;"&gt;&lt;/a&gt; - Ruby language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/rust-16.png"&gt;&lt;img src="./icons/rust-16.png" alt="rust_icon" title="Rust language." style="max-width:100%;"&gt;&lt;/a&gt; - Rust language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt; - Swift language.&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./icons/typescript-16.png"&gt;&lt;img src="./icons/typescript-16.png" alt="type_script_icon" title="TypeScript language." style="max-width:100%;"&gt;&lt;/a&gt; - TypeScript language.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#audio"&gt;Audio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#backup"&gt;Backup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#browser"&gt;Browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chat"&gt;Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cryptocurrency"&gt;Cryptocurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database"&gt;Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#development"&gt;Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#git"&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ios--macos"&gt;iOS / macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#json-parsing"&gt;JSON Parsing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-development"&gt;Web development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-development"&gt;Other development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#downloader"&gt;Downloader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#editors"&gt;Editors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#csv"&gt;CSV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#json"&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#markdown"&gt;Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tex"&gt;TeX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#text"&gt;Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extensions"&gt;Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#finder"&gt;Finder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#games"&gt;Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#graphics"&gt;Graphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ide"&gt;IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#images"&gt;Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keyboard"&gt;Keyboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mail"&gt;Mail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#menubar"&gt;Menubar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#music"&gt;Music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#news"&gt;News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other"&gt;Other&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#podcast"&gt;Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#productivity"&gt;Productivity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#screensaver"&gt;Screensaver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#security"&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sharing-files"&gt;Sharing Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#social-networking"&gt;Social Networking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#streaming"&gt;Streaming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system"&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#terminal"&gt;Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#touch-bar"&gt;Touch Bar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#utilities"&gt;Utilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vpn--proxy"&gt;VPN &amp;amp; Proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#video"&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wallpaper"&gt;Wallpaper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#window-management"&gt;Window Management&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-applications" class="anchor" aria-hidden="true" href="#applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Applications&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-audio" class="anchor" aria-hidden="true" href="#audio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Audio&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vgorloff/AUHost"&gt;AUHost&lt;/a&gt; - Application which hosts AudioUnits v3 using AVFoundation API.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maculateConception/aural-player"&gt;Aural Player&lt;/a&gt; - Aural Player is a audio player application for the macOS platform. Inspired by the classic Winamp player for Windows, it is designed to be to-the-point and easy to use.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonilevy/automute"&gt;AutoMute&lt;/a&gt; - Automatically mute the sound when headphones disconnect / Mac awake from sleep. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kyleneideck/BackgroundMusic"&gt;Background Music&lt;/a&gt; - Background Music, a macOS audio utility: automatically pause your music, set individual apps' volumes and record system audio.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ExistentialAudio/BlackHole"&gt;BlackHole&lt;/a&gt; - BlackHole is a modern macOS virtual audio driver that allows applications to pass audio to other applications with zero additional latency. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanayik/CAM"&gt;CAM&lt;/a&gt; - macOS camera recording using ffmpeg  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/clementine-player/Clementine"&gt;Clementine&lt;/a&gt; - Clementine is a modern music player and library organizer for Windows, Linux and macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/losnoco/cog/src" rel="nofollow"&gt;Cog&lt;/a&gt; - Cog is an open source audio player for macOS. The basic layout is a single-paned playlist interface with two retractable drawers, one for navigating the user's music folders and another for viewing audio file properties, like bitrate &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dsward2/LocalRadio"&gt;LocalRadio&lt;/a&gt; - LocalRadio is software for listening to "Software-Defined Radio" on your Mac and mobile devices.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lyc2345/Lyricism"&gt;Lyricism&lt;/a&gt; - macOS app to show you lyric what currently iTunes or Spotify is playing.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ddddxxx/LyricsX"&gt;LyricsX&lt;/a&gt; - Lyrics for iTunes, Spotify and Vox.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bsdelf/mous"&gt;Mous Player&lt;/a&gt; - Simple yet powerful audio player for BSD/Linux/macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/musa11971/Music-Bar/"&gt;Music Bar&lt;/a&gt; - Music Bar is macOS application that places music controls right in your menu bar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbolar/PlayStatus"&gt;PlayStatus&lt;/a&gt; - PlayStatus is a macOS app that allows the control of Spotify and iTunes music playback from the menu bar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ShazamScrobbler/shazamscrobbler-macos"&gt;ShazamScrobbler&lt;/a&gt; - Scrobble vinyl, radios, movies to Last.fm.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sonoramac/Sonora"&gt;Sonora&lt;/a&gt; - Minimal, beautifully designed music player for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kmikiy/SpotMenu"&gt;SpotMenu&lt;/a&gt; - Spotify and iTunes in your menu bar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/will-stone/SpotSpot"&gt;SpotSpot&lt;/a&gt; - Spotify mini-player for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Sunnyyoung/Suohai"&gt;Suohai&lt;/a&gt; - Audio input/output source lock for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yingDev/Tickeys"&gt;Tickeys&lt;/a&gt; - Instant audio feedback for typing. macOS version.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/rust-16.png"&gt;&lt;img src="./icons/rust-16.png" alt="rust_icon" title="Rust language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CocoaHeadsBrasil/MuteUnmuteMic"&gt;[Un]MuteMic&lt;/a&gt; - macOS app to mute &amp;amp; unmute the input volume of your microphone. Perfect for podcasters. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nodeful/eqMac2"&gt;eqMac2&lt;/a&gt; - System-Wide Equalizer for the Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/enzo1982/freac"&gt;fre:ac&lt;/a&gt; - The fre:ac audio converter project.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alberti42/iTunes-Volume-Control"&gt;iTunes-Volume-Control&lt;/a&gt; - This app allows you to control the iTunes volume using volume up and volume down hotkeys.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jcm93/jmc"&gt;jmc&lt;/a&gt; - jmc is new macOS media organizer.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mikebrady/shairport-sync"&gt;shairport-sync&lt;/a&gt; - macOS/Linux/FreeBSD/OpenBSD Airplay audio receiver. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getoffmyhack/waveSDR"&gt;waveSDR&lt;/a&gt; - macOS native desktop Software Defined Radio application using the RTL-SDR USB device.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-backup" class="anchor" aria-hidden="true" href="#backup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backup&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lra/mackup"&gt;Mackup&lt;/a&gt; - Keep your application settings in sync (macOS/Linux).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uroni/urbackup_backend"&gt;UrBackup&lt;/a&gt; - UrBackup is Client/Server network backup for Windows, macOS and Linux. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alichtman/shallow-backup"&gt;shallow-backup&lt;/a&gt; - Easily create lightweight documentation of installed applications, dotfiles, and more.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-browser" class="anchor" aria-hidden="true" href="#browser"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Browser&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/beakerbrowser/beaker"&gt;Beaker Browser&lt;/a&gt; - Beaker is an experimental peer-to-peer Web browser.   &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brave/brave-browser"&gt;Brave Browser&lt;/a&gt; - Brave browser for Desktop and Laptop computers running Windows, macOS, and Linux.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnste/finicky"&gt;Finicky&lt;/a&gt; - Always opens the right browser.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JadenGeller/Helium"&gt;Helium&lt;/a&gt; - Floating browser window for macOS. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaktus/kaktus"&gt;Kaktus Browser&lt;/a&gt; - Experimental web browser with minimalistic design. Running Windows, macOS and Linux.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/will-stone/browserosaurus"&gt;browserosaurus&lt;/a&gt; - macOS tool that prompts you to choose a browser when opening a link.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OtterBrowser/otter-browser"&gt;otter-browser&lt;/a&gt; - Otter Browser aims to recreate the best aspects of the classic Opera (12.x) UI using Qt5.   &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SafeExamBrowser/seb-mac"&gt;seb-mac&lt;/a&gt; - Safe Exam Browser for macOS and iOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-chat" class="anchor" aria-hidden="true" href="#chat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chat&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tigase/beagle-im"&gt;Beagle IM&lt;/a&gt; - Powerful XMPP client with support for file transfer, VoIP and end-to-end encryption. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stonesam92/ChitChat"&gt;ChitChat&lt;/a&gt; - Native Mac app wrapper for WhatsApp Web.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geeeeeeeeek/electronic-wechat"&gt;Electronic WeChat&lt;/a&gt; - Better WeChat on macOS and Linux.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meetfranz/franz"&gt;Franz&lt;/a&gt; - Franz is messaging application for services like WhatsApp, Slack, Messenger and many more.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kelyvin/Google-Allo-For-Desktop"&gt;Google Allo for Desktop&lt;/a&gt; - Native macOS &amp;amp; Windows desktop app for Google Allo.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dcrousso/GroupMe"&gt;GroupMe&lt;/a&gt; - Unofficial GroupMe App. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/glaurent/MessagesHistoryBrowser"&gt;MessagesHistoryBrowser&lt;/a&gt; - macOS application to comfortably browse and search through your Messages.app history.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vector-im/riot-web"&gt;Riot.im&lt;/a&gt; - Riot.im is a collaboration app (currently Electron) for the &lt;a href="https://matrix.org/blog/home/" rel="nofollow"&gt;Matrix&lt;/a&gt; protocol.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neilalexander/seaglass"&gt;Seaglass&lt;/a&gt; - A truly native &lt;a href="https://matrix.org/blog/home/" rel="nofollow"&gt;Matrix&lt;/a&gt; client for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/signalapp/Signal-Desktop"&gt;Signal Desktop&lt;/a&gt; - Electron app that links with your Signal Android or Signal iOS app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/overtake/TelegramSwift"&gt;Telegram&lt;/a&gt; - Source code of Telegram for macOS on Swift.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/telegramdesktop/tdesktop"&gt;Telegram Desktop&lt;/a&gt; - Telegram Desktop messaging app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Codeux-Software/Textual"&gt;Textual&lt;/a&gt; - Textual is an IRC client for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/javerous/TorChat-Mac"&gt;Torchat-Mac&lt;/a&gt; - TorChat for Mac is a macOS native and unofficial port of torchat.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aldychris/WhatsAppBar"&gt;WhatsAppBar&lt;/a&gt; - Send WhatsApp message from menu bar.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wireapp/wire-desktop"&gt;Wire Desktop&lt;/a&gt; - Standalone Electron app for the chatapp Wire.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cryptocurrency" class="anchor" aria-hidden="true" href="#cryptocurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cryptocurrency&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/balance-io/balance-open"&gt;Balance Open&lt;/a&gt; - App for all the world’s currencies.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adamwaite/CoinBar"&gt;CoinBar&lt;/a&gt; - macOS menu bar application for tracking crypto coin prices.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bitpay/copay"&gt;Copay&lt;/a&gt; - A secure bitcoin wallet platform for both desktop and mobile devices.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/typescript-16.png"&gt;&lt;img src="./icons/typescript-16.png" alt="type_script_icon" title="TypeScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geraldoramos/crypto-bar"&gt;Crypto Bar&lt;/a&gt; - macOS menu bar application built with Electron.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaunteya/FloatCoin"&gt;Float coin&lt;/a&gt; - Native menu bar app with floating window and support for many Exchanges.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-database" class="anchor" aria-hidden="true" href="#database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sqlitebrowser/sqlitebrowser"&gt;DB Browser for SQLite&lt;/a&gt; - SQLite database management GUI.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dbeaver/dbeaver"&gt;DBeaver&lt;/a&gt; - Universal database tool and SQL client.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/java-16.png"&gt;&lt;img src="./icons/java-16.png" alt="java_icon" title="Java language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luin/medis"&gt;Medis&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt; Medis is a beautiful, easy-to-use Mac database management application for Redis. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Paxa/postbird"&gt;Postbird&lt;/a&gt; - PostgreSQL GUI client for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PostgresApp/PostgresApp"&gt;Postgres.app&lt;/a&gt; - The easiest way to get started with PostgreSQL on the Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpadilla/redisapp"&gt;Redis.app&lt;/a&gt; - The easiest way to get started with Redis on the Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Studio3T/robomongo"&gt;Robo 3T&lt;/a&gt; - Robo 3T (formerly Robomongo) is the free lightweight GUI for MongoDB enthusiasts.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sequelpro/sequelpro"&gt;Sequel Pro&lt;/a&gt; - MySQL/MariaDB database management for macOS.   &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gcollazo/mongodbapp"&gt;mongoDB.app&lt;/a&gt; - The easiest way to get started with mongoDB on the Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-git" class="anchor" aria-hidden="true" href="#git"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jensteichert/OpenCashew"&gt;Cashew&lt;/a&gt; - Cashew macOS Github Issue Tracker. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mtgto/GPM"&gt;GPM&lt;/a&gt; - macOS application for easily operating GitHub Projects.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MitMaro/git-interactive-rebase-tool"&gt;Git Interactive Rebase Tool&lt;/a&gt; - Full feature terminal based sequence editor for interactive rebase. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/rust-16.png"&gt;&lt;img src="./icons/rust-16.png" alt="rust_icon" title="Rust language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/desktop/desktop"&gt;GitHub Desktop&lt;/a&gt; - Simple collaboration from your desktop.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/typescript-16.png"&gt;&lt;img src="./icons/typescript-16.png" alt="type_script_icon" title="TypeScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eonist/GitSync"&gt;GitSync&lt;/a&gt; - Minimalistic Git client for Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/git-up/GitUp"&gt;GitUp&lt;/a&gt; - The Git interface you've been missing all your life has finally arrived.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitx/gitx"&gt;GitX&lt;/a&gt; - Graphical client for the git version control system.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nightonke/Gitee"&gt;Gitee&lt;/a&gt; - Gitee, macOS status bar application for Github. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/remirobert/Github-contributions"&gt;Github contributions&lt;/a&gt; - GitHub contributions app, for iOS, WatchOS, and macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ad/GithubListener"&gt;GithubListener&lt;/a&gt; - Simple app that will notify about new commits to watched repositories.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/erik/github-notify"&gt;GithubNotify&lt;/a&gt; - Simple macOS app to alert you when you have unread GitHub notifications.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamieweavis/streaker"&gt;Streaker&lt;/a&gt; - GitHub contribution streak tracking menubar app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcinreliga/TeamStatus-for-GitHub"&gt;TeamStatus-for-GitHub&lt;/a&gt; - macOS status bar application for tracking code review process within the team.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ptsochantaris/trailer"&gt;Trailer&lt;/a&gt; - Managing Pull Requests and Issues For GitHub &amp;amp; GitHub Enterprise.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Uncommon/Xit"&gt;Xit&lt;/a&gt; - Xit is a graphical tool for working with git repositories.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-json-parsing" class="anchor" aria-hidden="true" href="#json-parsing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Parsing&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AppCraft-LLC/json-mapper"&gt;JSON Mapper&lt;/a&gt; - Simple macOS app to generate Swift Object Mapper classes from JSON.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ahmed-Ali/JSONExport"&gt;JSONExport&lt;/a&gt; - Desktop application for macOS which enables you to export JSON objects as model classes with their associated constructors, utility methods, setters and getters in your favorite language.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zadr/j2s"&gt;j2s&lt;/a&gt; - macOS app to convert JSON objects into Swift structs (currently targets Swift 4 and Codable).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-other-development" class="anchor" aria-hidden="true" href="#other-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Development&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Yasumoto/ChefInspector"&gt;ChefInspector&lt;/a&gt; - Node and Attribute viewer for Chef  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dcsch/macho-browser"&gt;macho-browser&lt;/a&gt; - Browser for macOS Mach-O binaries.   &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ant4g0nist/vegvisir"&gt;vegvisir&lt;/a&gt; - Browser based GUI for &lt;strong&gt;LLDB&lt;/strong&gt; Debugger.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-web-development" class="anchor" aria-hidden="true" href="#web-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web Development&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/TheNewNormal/coreos-osx"&gt;CoreOS VM&lt;/a&gt; - CoreOS VM is macOS status bar app which allows in an easy way to control CoreOS VM on your Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TheNewNormal/corectl.app"&gt;Corectl App for macOS&lt;/a&gt; - Corectl App is a macOS Status bar App which works like a wrapper around the corectl command line tool corectld to control the server runtime process.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/httptoolkit/httptoolkit-desktop"&gt;HTTP Toolkit&lt;/a&gt; - HTTP Toolkit is a cross-platform tool to intercept, debug &amp;amp; mock HTTP.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/typescript-16.png"&gt;&lt;img src="./icons/typescript-16.png" alt="type_script_icon" title="TypeScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kong/insomnia"&gt;Insomnia&lt;/a&gt; - Insomnia is a cross-platform REST client, built on top of Electron.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DanSanche/KubeMonitor"&gt;KubeMonitor&lt;/a&gt; - KubeMonitor is a macOS app that displays information about your active Kubernetes cluster in your menu bar.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nsriram/KubeSwitch"&gt;KubeSwitch&lt;/a&gt; - KubeSwitch lists the available kubernetes cluster contexts on the mac, in Mac's Menu bar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RoyalIcing/Lantern"&gt;Lantern&lt;/a&gt; - Dedicated Mac app for website auditing and crawling.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/plan44/localSites"&gt;LocalSites&lt;/a&gt; - Simple Menu Bar (Status Bar) App for macOS listing local Bonjour websites (as Safari 11 no longer has Bonjour Bookmarks).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andypotts/mockup-generator"&gt;Mockup Generator&lt;/a&gt; - Mockup Generator is a macOS app built with AngularJS/Electron that sits in your menu bar allowing you to capture screenshots of your favourite websites and wrap them in device mock-ups.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zeit/now-desktop"&gt;Now Desktop&lt;/a&gt; - Create deployments right from the tray menu.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RafalWilinski/s3-uploader"&gt;aws-s3-uploader&lt;/a&gt; - Simple macOS app for uploading files to Amazon Web Services.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ronakdev/itunesconnect"&gt;iTunesConnect&lt;/a&gt; - macOS app to let you access iTunesConnect.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/720kb/ndm"&gt;ndm&lt;/a&gt; - Npm desktop GUI.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vsaravind007/nodeScratchpad"&gt;nodeScratchpad&lt;/a&gt; - Evaluate Nodejs/JS code snippets from Menubar.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/inket/stts"&gt;stts&lt;/a&gt; - macOS app for monitoring the status of cloud services.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-ios--macos" class="anchor" aria-hidden="true" href="#ios--macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS / macOS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/angelvasa/AVXCAssets-Generator"&gt;AVXCAssets Generator&lt;/a&gt; - Takes path for your assets images and creates appiconset and imageset for you in just one click.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vineetchoudhary/AppBox-iOSAppsWirelessInstallation"&gt;AppBox&lt;/a&gt; - Tool for iOS developers to build and deploy Development, Ad-Hoc and In-house (Enterprise) applications directly to the devices from your Dropbox account.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kuyawa/AppIcons"&gt;AppIcons&lt;/a&gt; - Tool for generating icons in all sizes as required by macOS and iOS apps.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arbel03/AppStoreReviewTimes"&gt;AppStoreReviewTimes&lt;/a&gt; - Gives you indication about the average iOS / macOS app stores review times.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/everettjf/AppleTrace"&gt;AppleTrace&lt;/a&gt; - Trace tool for iOS/macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/insidegui/AssetCatalogTinkerer"&gt;Asset Catalog Tinkerer&lt;/a&gt; - App that lets you open .car files and browse/extract their images. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/e7711bbear/Assets"&gt;Assets&lt;/a&gt; - Assets is a macOS app that manages assets for your development projects (Xcode, web, etc).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/Attabench"&gt;Attabench&lt;/a&gt; - Attabench is a microbenchmarking app for macOS, designed to measure and visualize the performance of Swift code.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JustinFincher/BoardForGitHub"&gt;Board For GitHub&lt;/a&gt; - Small application to monitor your GitHub project web page in a native macOS app &lt;img class="emoji" title=":octocat:" alt=":octocat:" src="https://github.githubassets.com/images/icons/emoji/octocat.png" height="20" width="20" align="absmiddle"&gt;!  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/br1sk/brisk"&gt;Brisk&lt;/a&gt; - macOS app for submitting radars.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/waylybaye/XcodeCleaner"&gt;Cleaner for Xcode&lt;/a&gt; - Cleaner for Xcode.app built with react-native-macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmattozzi/cocoa-rest-client"&gt;CocoaRestClient&lt;/a&gt; - Native Apple macOS app for testing HTTP/REST endpoints.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KrisYu/FilterShop"&gt;FilterShop&lt;/a&gt; - macOS App to explore CoreImage Filters.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/IconGenerator"&gt;IconGenerator&lt;/a&gt; - macOS app to generate app icons.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raphaelhanneken/iconizer"&gt;Iconizer&lt;/a&gt; - Create Xcode image catalogs (xcassets) on the fly.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SAP/macos-icon-generator"&gt;Icons.app&lt;/a&gt; - App for macOS which is designed to generate consistent sized icons of an existing application in various states, jiggling (shaking) etc.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnno1962/InjectionIII"&gt;InjectionIII&lt;/a&gt; - overdue Swift rewrite of Injection. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KnuffApp/Knuff"&gt;Knuff&lt;/a&gt; - The debug application for Apple Push Notification Service (APNs).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yuhua-chen/LayerX"&gt;LayerX&lt;/a&gt; - Intuitive app to display transparent images on screen.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ralcr/Localizable.strings"&gt;Localizable.strings&lt;/a&gt; - Mac app to localize your iOS and macOS projects.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/igorkulman/iOSLocalizationEditor"&gt;Localization Editor&lt;/a&gt; - Simple macOS editor app to help you manage iOS app localizations by allowing you to edit all the translations side by side.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/e7711bbear/Localizations"&gt;Localizations&lt;/a&gt; - Localizations is an macOS app that manages your Xcode project localization files (.strings).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/Menubar-Colors"&gt;Menubar Colors&lt;/a&gt; - macOS app for convenient access to the system color panel.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/macmade/Notarize"&gt;Notarize&lt;/a&gt; - Notarization status monitoring tool for macOS, supporting multiple developer accounts &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kizitonwose/PodsUpdater"&gt;PodsUpdater&lt;/a&gt; - macOS app which helps you manage dependency releases in your Podfile.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shaojiankui/ProfilesManager"&gt;ProfilesManager&lt;/a&gt; - Apple iOS/macOS Provisioning Profiles management,.provisionprofile, .mobileprovision files manager tool for mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/PushNotifications"&gt;PushNotifications&lt;/a&gt; - macOS app to test push notifications on iOS and Android.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/InjoyDeng/ResignTool"&gt;ResignTool&lt;/a&gt; - This is an app for macOS that can (re)sign apps and bundle them into ipa files that are ready to be installed on an iOS device.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onurgenes/Resizr"&gt;Resizr&lt;/a&gt; - MacOS application for creating AppIcon for iOS and Android apps. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shaojiankui/SmartPush"&gt;SmartPush&lt;/a&gt; - iOS Push Notification Debug App.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iseebi/TransporterPad"&gt;TransporterPad&lt;/a&gt; - iOS/Android app deployment tool for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/insidegui/WWDC"&gt;WWDC&lt;/a&gt; - Unofficial WWDC app for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ssamadgh/WWDCsrt"&gt;WWDC.srt&lt;/a&gt; - Powerful app for downloading subtitle for each WWDC session video since 2013 in (srt) format.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xing/calabash-launcher"&gt;calabash-launcher&lt;/a&gt; - iOS Calabash Launcher is a macOS app that helps you run and manage Calabash tests on your Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devcxm/iOS-Images-Extractor"&gt;iOS Images Extractor&lt;/a&gt; - iOS Images Extractor is a Mac app to normalize, decode, and extract images from iOS apps.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wigl/iSimulator"&gt;iSimulator&lt;/a&gt; - iSimulator is a GUI utility to control the Simulator and manage the app installed on the simulator.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/novemberfiveco/xib2Storyboard"&gt;xib2Storyboard&lt;/a&gt; - Tool to convert Xcode .xib to .storyboard files.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-downloader" class="anchor" aria-hidden="true" href="#downloader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloader&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yep/app-downloader"&gt;App Downloader&lt;/a&gt; - Easily search and download macOS apps from the huge &lt;code&gt;homebrew cask&lt;/code&gt; app catalog.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kevin-De-Koninck/Get-It"&gt;Get It&lt;/a&gt; - Native macOS video/audio downloader. Think of it as a youtube downloader that works on many sites.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agalwood/Motrix"&gt;Motrix&lt;/a&gt; - A full-featured download manager.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pjirlip/Pillager"&gt;Pillager&lt;/a&gt; - macOS Video Downloader written in Swift and Objective-C. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DenBeke/YouTube-Downloader-for-macOS"&gt;YouTube Downloader for macOS&lt;/a&gt; - Simple menu bar app to download YouTube movies on your Mac. I wrote this as a test project to learn more about app development on macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FaisalUmair/udemy-downloader-gui"&gt;udemy-downloader-gui&lt;/a&gt; - desktop application for downloading Udemy Courses.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-editors" class="anchor" aria-hidden="true" href="#editors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editors&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-csv" class="anchor" aria-hidden="true" href="#csv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSV&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jakob/TableTool"&gt;TableTool&lt;/a&gt; - simple CSV editor for the macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-json" class="anchor" aria-hidden="true" href="#json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wellsjo/JSON-Splora"&gt;JSON-Splora&lt;/a&gt; - GUI for editing, visualizing, and manipulating JSON data.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-markdown" class="anchor" aria-hidden="true" href="#markdown"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Markdown&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gingko/client"&gt;Gingko&lt;/a&gt; - Tree-structured markdown editor for macOS, Windows, and Linux.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/elm-16.png"&gt;&lt;img src="./icons/elm-16.png" alt="elm_icon" title="Elm Language" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MacDownApp/macdown"&gt;MacDown&lt;/a&gt; - Markdown editor for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marktext/marktext/"&gt;Mark Text&lt;/a&gt; - Realtime preview markdown editor for macOS Windows and Linux.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lukakerr/Pine"&gt;Pine&lt;/a&gt; - A modern MacOS markdown editor.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pbek/QOwnNotes"&gt;QOwnNotes&lt;/a&gt; - Plain-text file notepad and todo-list manager with markdown support and ownCloud / Nextcloud integration. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-tex" class="anchor" aria-hidden="true" href="#tex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TeX&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/qilin-editor/qilin-app"&gt;Qilin Editor&lt;/a&gt; - Text editor for exact sciences with built-in KaTeX/AsciiMath support.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-text" class="anchor" aria-hidden="true" href="#text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Text&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/coteditor/CotEditor"&gt;CotEditor&lt;/a&gt; - Lightweight Plain-Text Editor for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/macvim-dev/macvim"&gt;MacVim&lt;/a&gt; - Text editor for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brunophilipe/noto"&gt;Noto&lt;/a&gt; - Plain text editor for macOS with customizable themes.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/subethaedit/SubEthaEdit"&gt;SubEthaEdit&lt;/a&gt; - General purpose plain text editor for macOS. Widely known for its live collaboration feature. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/textmate/textmate"&gt;TextMate&lt;/a&gt; - TextMate is a graphical text editor for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qvacua/vimr"&gt;VimR&lt;/a&gt; - Refined Neovim experience for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Capevace/BetterPiP"&gt;BetterPiP&lt;/a&gt; - Use native picture-in-picture with browsers such as Google Chrome for HTML5 videos.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fphilipe/PageExtender.app"&gt;PageExtender&lt;/a&gt; - Extend pages with your own CSS and JS files. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bfmatei/PiPTool"&gt;PiPTool&lt;/a&gt; - Add the Picture-in-Picture Functionality to YouTube, Netflix, Plex and other video broadcasting services in macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arnoappenzeller/PiPifier"&gt;PiPifier&lt;/a&gt; - PiPifier is a native macOS 10.12 Safari extension that lets you use every HTML5 video in Picture in Picture mode.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexPerathoner/Sessions"&gt;Sessions&lt;/a&gt; - Safari extension to save your working sessions &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bow-swift/nef-plugin"&gt;nef&lt;/a&gt; - This Xcode extension enables you to make a code selection and export it to a snippets. Available on Mac AppStore. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-finder" class="anchor" aria-hidden="true" href="#finder"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Finder&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Clipy/Clipy"&gt;Clipy&lt;/a&gt; - Clipy is a Clipboard extension app for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mortennn/FiScript"&gt;FiScript&lt;/a&gt; - Execute custom scripts from the MacOS context menu (CTRL+click) in Finder.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/FinderGo"&gt;Finder Go&lt;/a&gt; - macOS app and Finder Sync Extension to open Terminal, iTerm, Hyper from Finder.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sozercan/OpenInCode"&gt;OpenInCode&lt;/a&gt; - Finder toolbar app to open current folder in Visual Studio Code.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ji4n1ng/OpenInTerminal"&gt;OpenInTerminal&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;✨&lt;/g-emoji&gt; Finder Toolbar app for macOS to open the current directory in Terminal, iTerm or Hyper. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/quick-look-plugins"&gt;Quick Look plugins&lt;/a&gt; - List of useful Quick Look plugins for developers. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jbtule/cdto"&gt;cd to... &lt;/a&gt; - Finder Toolbar app to open the current directory in the Terminal &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-games" class="anchor" aria-hidden="true" href="#games"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Games&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wesnoth/wesnoth"&gt;Battle for Wesnoth&lt;/a&gt; - Turn-based tactical strategy game, featuring both single-player and online multiplayer combat.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alunbestor/Boxer"&gt;Boxer&lt;/a&gt; - The DOS game emulator that’s fit for your Mac. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dolphin-emu/dolphin"&gt;Dolphin&lt;/a&gt; - Powerful emulator for Nintendo GameCube and Wii games.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenEmu/OpenEmu"&gt;OpenEmu&lt;/a&gt; - Retro video game emulation for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenRCT2/OpenRCT2"&gt;OpenRCT2&lt;/a&gt; - Re-implementation of RollerCoaster Tycoon 2.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AaronRandall/Screentendo"&gt;Screentendo&lt;/a&gt; - Turn your screen into a playable level of Mario.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daylen/stockfish-mac"&gt;Stockfish&lt;/a&gt; - Beautiful, powerful chess application. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-graphics" class="anchor" aria-hidden="true" href="#graphics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graphics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aseprite/aseprite"&gt;Aseprite&lt;/a&gt; - Animated sprite editor &amp;amp; pixel art tool (Windows, macOS, Linux). &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gragrance/CaptuocrToy"&gt;CaptuocrToy&lt;/a&gt; - Tool to capture screenshot and recognize text by online ocr apis.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/GifCapture"&gt;GifCapture&lt;/a&gt; - Gif capture app for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lettier/gifcurry"&gt;Gifcurry&lt;/a&gt; - Video to GIF maker with a graphical interface capable of cropping, adding text, seeking, and trimming.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/haskell-16.png"&gt;&lt;img src="./icons/haskell-16.png" alt="haskell_icon" title="Haskell language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/Gifski"&gt;Gifski&lt;/a&gt; - Convert videos to high-quality GIFs.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CleanCocoa/InfiniteCanvas"&gt;InfiniteCanvas&lt;/a&gt; - Proof of concept Mac drawing application.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BafS/Material-Colors-native"&gt;Material Colors Native&lt;/a&gt; - Choose your Material colours and copy the hex code.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pencil2d/pencil"&gt;Pencil2D Animation&lt;/a&gt; - Pencil2D is an animation/drawing software for macOS, Windows, and Linux. It lets you create traditional hand-drawn animation (cartoon) using both bitmap and vector graphics.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/duyquoc/ScreenToLayers"&gt;ScreenToLayers for macOS&lt;/a&gt; - ScreenToLayers is a macOS application to easily capture your screen as a layered PSD file. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dsward2/macSVG"&gt;macSVG&lt;/a&gt; - macOS application for designing HTML5 SVG (Scalable Vector Graphics) art and animation with a WebKit web view.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ide" class="anchor" aria-hidden="true" href="#ide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IDE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/atom/atom"&gt;Atom&lt;/a&gt; - The hackable text editor.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/livecode/livecode"&gt;LiveCode&lt;/a&gt; - Cross-platform development IDE &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onivim/oni"&gt;Oni&lt;/a&gt; - Oni is a modern take on modal editing code editor focused on developer productivity.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/typescript-16.png"&gt;&lt;img src="./icons/typescript-16.png" alt="type_script_icon" title="TypeScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode"&gt;Visual Studio Code&lt;/a&gt; - Code editor developed by Microsoft.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/typescript-16.png"&gt;&lt;img src="./icons/typescript-16.png" alt="type_script_icon" title="TypeScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pkulchenko/ZeroBraneStudio"&gt;ZeroBraneStudio&lt;/a&gt; - ZeroBrane Studio is a lightweight cross-platform Lua IDE with code completion, syntax highlighting, remote debugger, code analyzer, live coding, and debugging support for various Lua engines.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/Lua-16.png"&gt;&lt;img src="./icons/Lua-16.png" alt="lua_icon" title="Lua language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-images" class="anchor" aria-hidden="true" href="#images"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Images&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shgodoroja/APNGb"&gt;APNGb&lt;/a&gt; - macOS app which assembles and disassembles animated png files.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrissimpkins/Crunch"&gt;Crunch&lt;/a&gt; - Insane(ly slow but wicked good) PNG image optimization.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szTheory/exifcleaner"&gt;ExifCleaner&lt;/a&gt; - Remove image metadata with drag and drop, multi-core batch processing, and dark mode. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wddwycc/Freehand"&gt;Freehand&lt;/a&gt; - macOS Status Bar App for quick sketch.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GNOME/gimp"&gt;Gimp&lt;/a&gt; - Gimp is GNU Image Manipulation Program.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/liamrosenfeld/Iconology"&gt;Iconology&lt;/a&gt; - Edit Icons and then Export to Xcode, Icns, Ico, Favicon, Mac Iconset, or a Custom List of Sizes. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kornelski/ImageAlpha"&gt;ImageAlpha&lt;/a&gt; - Mac GUI for pngquant, pngnq and posterizer. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meowtec/Imagine"&gt;Imagine&lt;/a&gt; - Imagine is a desktop app for compression of PNG and JPEG, with a modern and friendly UI.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/typescript-16.png"&gt;&lt;img src="./icons/typescript-16.png" alt="type_script_icon" title="TypeScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/invesalius/invesalius3/"&gt;InVesalius&lt;/a&gt; - 3D medical imaging reconstruction software &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bluegill/katana"&gt;Katana&lt;/a&gt; - Katana is a simple screenshot utility for macOS that lives in your menubar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gergelysanta/photominer"&gt;PhotoMiner&lt;/a&gt; - macOS app for finding and lost forgotten photos on your disks.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crilleengvall/Screenbar"&gt;Screenbar&lt;/a&gt; - macOS menubar app for automating screenshots.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/1000ch/WebPonize"&gt;WebPonize&lt;/a&gt; - WebPonize is a macOS App for converting PNG, JPEG, animated (or not) GIF images into WebP. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-keyboard" class="anchor" aria-hidden="true" href="#keyboard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/msvisser/AnnePro-mac"&gt;AnnePro-mac&lt;/a&gt; - macOS application for controlling AnnePro keyboard over bluetooth.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pyroh/Fluor"&gt;Fluor&lt;/a&gt; - Handy tool for macOS allowing you to switch Fn keys' mode based on active application.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yqrashawn/GokuRakuJoudo"&gt;GokuRakuJoudo&lt;/a&gt; - Karabiner-Elements configuration manager, rescue to bloated karabiner.json  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/clojure-16.png"&gt;&lt;img src="./icons/clojure-16.png" alt="clojure_icon" title="Clojure Language" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tekezo/Karabiner"&gt;Karabiner&lt;/a&gt; - Karabiner (KeyRemap4MacBook) is a powerful utility for keyboard customization. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pqrs-org/Karabiner-Elements"&gt;Karabiner-Elements&lt;/a&gt; - Karabiner-Elements is a powerful utility for keyboard customization on macOS Sierra (10.12) or later. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/utatti/kawa"&gt;Kawa&lt;/a&gt; - Better input source switcher for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gbammc/Thor"&gt;Thor&lt;/a&gt; - Switch the right application ASAP.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aahung/Unshaky"&gt;Unshaky&lt;/a&gt; - A software attempt to address the "double key press" issue on Apple's butterfly keyboard  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-mail" class="anchor" aria-hidden="true" href="#mail"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mail&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/amitmerchant1990/correo"&gt;Correo&lt;/a&gt; - Menubar/taskbar Gmail App for Windows and macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vladimiry/ElectronMail"&gt;ElectronMail&lt;/a&gt; - Unofficial desktop app for ProtonMail and Tutanota end-to-end encrypted email providers. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/typescript-16.png"&gt;&lt;img src="./icons/typescript-16.png" alt="type_script_icon" title="TypeScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Foundry376/Mailspring"&gt;Mailspring&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="love_letter" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f48c.png"&gt;💌&lt;/g-emoji&gt; A beautiful, fast and maintained fork of @nylas Mail by one of the original authors &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ramboxapp/community-edition"&gt;Rambox&lt;/a&gt; - Cross Platform messaging and emailing app that combines common web applications into one. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dinhviethoa/dejalu"&gt;dejalu&lt;/a&gt; - Fast and Simple Email Client. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-medical" class="anchor" aria-hidden="true" href="#medical"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Medical&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/invesalius/invesalius3/"&gt;InVesalius&lt;/a&gt; - 3D medical imaging reconstruction software &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-menubar" class="anchor" aria-hidden="true" href="#menubar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Menubar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alvesjtiago/airpass"&gt;Airpass&lt;/a&gt; - Status bar Mac application to overcome time constrained WiFi networks.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonsky/AnyBar"&gt;AnyBar&lt;/a&gt; - macOS menubar status indicator.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matryer/bitbar"&gt;BitBar&lt;/a&gt; - Put the output from any script or program in your macOS Menu Bar.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josh-/CloudyTabs"&gt;CloudyTabs&lt;/a&gt; - Simple menu bar macOS application for displaying lists of your iCloud Tabs and Reading List.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/inderdhir/DatWeatherDoe"&gt;DatWeatherDoe&lt;/a&gt; - Simple menu bar weather app for macOS written in Swift.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kwpolska/DisplayMenu"&gt;DisplayMenu&lt;/a&gt; - Simple (bare-bones) macOS menubar extra to apply display presets.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mortennn/Dozer"&gt;Dozer&lt;/a&gt; - Hide MacOS menubar items. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/turkenh/KubeContext"&gt;KubeContext&lt;/a&gt; - import, manage and switch between your Kubernetes contexts on Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yujitach/MenuMeters"&gt;MenuMeters&lt;/a&gt; - CPU, memory, disk, and network monitoring tools for macOS.   &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lucasbento/menubar-brightness"&gt;Menubar Brightness&lt;/a&gt; - macOS app to change the screen brightness on the menubar.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/musa11971/Music-Bar/"&gt;Music Bar&lt;/a&gt; - Music Bar is macOS application that places music controls right in your menu bar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isaiasmatewos/night-shift-control"&gt;Night Shift Control&lt;/a&gt; - Night Shift Control is a simple macOS menubar app for controlling Night Shift. It's aim is to bring features from f.lux which are missing from Night Shift such as disabling Night Shift for certain apps.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikhilsh/PSIBar"&gt;PSIBar&lt;/a&gt; - Quickly hacked up PSI macOS status bar app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbolar/PlayStatus"&gt;PlayStatus&lt;/a&gt; - PlayStatus is a macOS app that allows the control of Spotify and iTunes music playback from the menu bar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexrosenfeld10/Quickeys"&gt;Quickeys&lt;/a&gt; - A mac menu bar app that provides note taking functionality though a quick dropdown menu.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/archagon/sensible-side-buttons"&gt;SensibleSideButtons&lt;/a&gt; - Small menu bar utility that lets you use your third-party mouse's side buttons for navigation across a variety of apps. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thompsonate/Shifty"&gt;Shifty&lt;/a&gt; - macOS menu bar app that gives you more control over Night Shift.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CodySchrank/gSwitch"&gt;gSwitch&lt;/a&gt; - macOS status bar app that allows control over the gpu on dual gpu macbooks.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iglance/iGlance"&gt;iGlance&lt;/a&gt; - macOS System Monitor (cpu, memory, network, fan and battery) for the Status Bar.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-music" class="anchor" aria-hidden="true" href="#music"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Music&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/audacity/audacity"&gt;Audacity&lt;/a&gt; - Free, open source, cross-platform audio software &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnaghSharma/Carol"&gt;Carol&lt;/a&gt; - A minimal and beautiful lyrics app that stays in the menu bar of macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/csharp-16.png"&gt;&lt;img src="./icons/csharp-16.png" alt="c_sharp_icon" title="C# Language" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cemolcay/ChordDetector"&gt;ChordDetector&lt;/a&gt; - Tiny menu bar app that listens iTunes and Spotify to detect chords of songs!  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imanel/deezplayer"&gt;DeezPlayer&lt;/a&gt; - Deezer Desktop app for Windows, Linux and macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/coffeescript-16.png"&gt;&lt;img src="./icons/coffeescript-16.png" alt="coffee_script_icon" title="CoffeeScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=""&gt;Lilypond UI&lt;/a&gt; - Create beautiful musical scores with LilyPond &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/musa11971/Music-Bar/"&gt;Music Bar&lt;/a&gt; - Music Bar is macOS application that places music controls right in your menu bar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbolar/PlayStatus"&gt;PlayStatus&lt;/a&gt; - PlayStatus is a macOS app that allows the control of Spotify and iTunes music playback from the menu bar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/salomvary/soundcleod"&gt;SoundCleod&lt;/a&gt; - SoundCloud for macOS and Windows.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ersel/spotify-cli-mac"&gt;Spotify-Cli-Mac&lt;/a&gt; - Control Spotify without leaving your terminal. &lt;g-emoji class="g-emoji" alias="notes" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3b6.png"&gt;🎶&lt;/g-emoji&gt;  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/steve228uk/YouTube-Music"&gt;YouTube-Music&lt;/a&gt; - macOS wrapper for music.youtube.com.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zac-Garby/iTunes-Graphs"&gt;iTunes Graphs&lt;/a&gt; - macOS app to visualise your iTunes library as graphs.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mamal72/lyricsify-mac"&gt;lyricsify&lt;/a&gt; - Simple Spotify lyrics viewer menu bar app for macOS in Swift.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ngquerol/Diurna"&gt;Diurna&lt;/a&gt; - Basic/Classic Hacker News app, used as a Cocoa &amp;amp; Swift learning platform.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ranchero-Software/NetNewsWire"&gt;NetNewsWire&lt;/a&gt; - Feed reader for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ViennaRSS/vienna-rss"&gt;Vienna&lt;/a&gt; - Vienna is a RSS/Atom newsreader for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jingweno/hacker-menu"&gt;hacker-menu&lt;/a&gt; - Hacker News Delivered to Desktop.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BoostIO/Boostnote"&gt;Boostnote&lt;/a&gt; - Note-taking application made for programmers just like you.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/glushchenko/fsnotes"&gt;FSNotes&lt;/a&gt; - Notes manager for macOS/iOS: modern notational velocity (nvALT) on steroids.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kilian/fromscratch"&gt;FromScratch&lt;/a&gt; - Little app that you can use as a quick note taking or todo app. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tuxu/nbviewer-app"&gt;Jupyter Notebook Viewer&lt;/a&gt; - Notebook viewer for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/insidegui/NoteTaker"&gt;NoteTaker&lt;/a&gt; - Simple note taking app for macOS and iOS which uses Realm and CloudKit for syncing.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SauvageP/Notes"&gt;Notes&lt;/a&gt; - Notes is a macOS application built to create notes, using text amongst other formats: images, videos, contacts, and etc.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pbek/QOwnNotes"&gt;QOwnNotes&lt;/a&gt; - Plain-text file notepad and todo-list manager with markdown support and ownCloud / Nextcloud integration. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Automattic/simplenote-macos"&gt;Simplenote&lt;/a&gt; - Simplest way to keep notes.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/standardnotes/web"&gt;Standard Notes&lt;/a&gt; - Safe place for your notes, thoughts, and life's work. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/klaussinani/tusk"&gt;Tusk&lt;/a&gt; - Unofficial, third-party, community driven Evernote app with a handful of useful features. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin"&gt;joplin&lt;/a&gt; - Note taking and to-do application with synchronization capabilities for Windows, macOS, Linux, Android and iOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmcfarlane/notable"&gt;notable&lt;/a&gt; - Simple note taking application.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/buddax2/tmpNote"&gt;tmpNote&lt;/a&gt; - Very simple macOS app to make temporary notes.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/brunophilipe/Cakebrew"&gt;Cakebrew&lt;/a&gt; - Manage your Homebrew formulas with style using Cakebrew.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dteoh/devdocs-macos"&gt;DevDocs for macOS&lt;/a&gt; - An unofficial DevDocs API documentation viewer. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/2ndalpha/gasmask"&gt;Gas Mask&lt;/a&gt; - Hosts file manager for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/specialunderwear/Hosts.prefpane"&gt;Hosts&lt;/a&gt; - Cocoa GUI for /etc/hosts.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ImageOptim/ImageOptim"&gt;ImageOptim&lt;/a&gt; - GUI image optimizer for Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/insidegui/KeyframesPlayer"&gt;Keyframes Player&lt;/a&gt; - Simple macOS app to preview animations created with Facebook's keyframes framework.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hackjutsu/Lepton"&gt;Lepton&lt;/a&gt; - Democratizing Code Snippets Management (macOS/Win/Linux).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/klaaspieter/letters"&gt;Letters&lt;/a&gt; - Teach your kids the alphabet and how to type. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sveinbjornt/Platypus"&gt;Platypus&lt;/a&gt; - Mac developer tool that creates application bundles from command line scripts.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/QorumLogs"&gt;QorumLogs&lt;/a&gt; - Swift Logging Utility for Xcode &amp;amp; Google Docs.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jhen0409/react-native-debugger"&gt;React Native Debugger&lt;/a&gt; - Desktop app for inspecting your React Native projects. macOS, Linux, and Windows.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/infinitered/reactotron"&gt;Reactotron&lt;/a&gt; - Desktop app for inspecting your React JS and React Native projects. macOS, Linux, and Windows.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/woofwoofinc/rktmachine"&gt;RktMachine&lt;/a&gt; - Menu bar macOS app for running rkt in a macOS hypervisor CoreOS VM.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gosu/ruby-app"&gt;Ruby.app&lt;/a&gt; - macOS app that contains a full Ruby installation (for use with Ruby/Gosu).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/ruby-16.png"&gt;&lt;img src="./icons/ruby-16.png" alt="ruby_icon" title="Ruby language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fitztrev/shuttle"&gt;Shuttle&lt;/a&gt; - Simple SSH shortcut menu for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftyBeaver/SwiftyBeaver"&gt;SwiftyBeaver&lt;/a&gt; - Convenient logging during development &amp;amp; release in Swift.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jeffhodnett/Unused"&gt;Unused&lt;/a&gt; - Mac app for checking Xcode projects for unused resources.   &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lanayotech/vagrant-manager"&gt;Vagrant Manager&lt;/a&gt; - Manage your vagrant machines in one place with Vagrant Manager for macOS.   &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bunn/macGist"&gt;macGist&lt;/a&gt; - Simple app to send pasteboard items to GitHub's Gist.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/syncthing/syncthing-macos"&gt;syncthing-macosx&lt;/a&gt; - Frugal nativemacOS macOS Syncthing application bundle.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-player" class="anchor" aria-hidden="true" href="#player"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Player&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/iina/iina"&gt;IINA&lt;/a&gt; - The modern video player for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/niltsh/MPlayerX"&gt;MPlayerX&lt;/a&gt; - Media player on macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emoRaivis/MacMorpheus"&gt;MacMorpheus&lt;/a&gt; - 3D 180/360 video player for macOS for PSVR with head tracking.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lettier/movie-monad"&gt;Movie Monad&lt;/a&gt; - Desktop video player built with Haskell that uses GStreamer and GTK+.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/haskell-16.png"&gt;&lt;img src="./icons/haskell-16.png" alt="haskell_icon" title="Haskell language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mpv-player/mpv"&gt;mpv&lt;/a&gt; - Video player based on MPlayer/mplayer2.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-podcast" class="anchor" aria-hidden="true" href="#podcast"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Podcast&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/z-------------/CPod"&gt;Cumulonimbus&lt;/a&gt; - Simple, beautiful podcast app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dyerc/Doughnut"&gt;Doughnut&lt;/a&gt; - Podcast player and library for mac &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/insidegui/PodcastMenu"&gt;PodcastMenu&lt;/a&gt; - PodcastMenu is a simple app which puts &lt;a href="https://overcast.fm/" rel="nofollow"&gt;Overcast&lt;/a&gt; on your Mac's menu bar so you can listen to your favorite podcasts while you work.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phranck/podlive-macos"&gt;Podlive for macOS&lt;/a&gt; - macOS client to listen to live streaming podcasts (only). It currently supports all livestreams broadcasting via Ultraschall with &lt;a href="https://studio-link.de" rel="nofollow"&gt;Studio Link On Air&lt;/a&gt;.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muammar/mkchromecast"&gt;mkchromecast&lt;/a&gt; - Cast macOS and Linux Audio/Video to your Google Cast and Sonos Devices.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-productivity" class="anchor" aria-hidden="true" href="#productivity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Productivity&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/klaussinani/ao"&gt;Ao&lt;/a&gt; - Elegant Microsoft To-Do desktop app. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/varol/Calculeta"&gt;Calculeta&lt;/a&gt; - Calculator for macOS which working on statusbar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KELiON/cerebro"&gt;Cerebro&lt;/a&gt; - Cross-platform launcher app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naotaka/ClipMenu"&gt;ClipMenu&lt;/a&gt; - Clipboard manager for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/n0shake/Clocker"&gt;Clocker&lt;/a&gt; - macOS app to plan and organize through timezones.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dustinrue/ControlPlane"&gt;ControlPlane&lt;/a&gt; - Automate running tasks based on where you are or what you do.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TermiT/flycut"&gt;Flycut&lt;/a&gt; - Clean and simple clipboard manager for developers.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Clipy/KeyHolder"&gt;KeyHolder&lt;/a&gt; - Record shortcuts in macOS, like Alfred.app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kiwix/apple"&gt;Kiwix&lt;/a&gt; - Kiwix for iOS and macOS, build on Swift.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fespinoza/LinkedIdeas"&gt;Linked Ideas&lt;/a&gt; - macOS application to write down and connect ideas.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/p0deje/Maccy"&gt;Maccy&lt;/a&gt; - Lightweight search-as-you-type clipboard manager.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hql287/Manta"&gt;Manta&lt;/a&gt; - Flexible invoicing desktop app with beautiful &amp;amp; customizable templates.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PDF-Archiver/PDF-Archiver"&gt;PDF Archiver&lt;/a&gt; - Nice tool for tagging and archiving tasks.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thomasbrueggemann/paperless-desktop"&gt;Paperless Desktop&lt;/a&gt; - Desktop app that uses the paperless API to manage your document scans.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pbek/QOwnNotes"&gt;QOwnNotes&lt;/a&gt; - Plain-text file notepad and todo-list manager with markdown support and ownCloud / Nextcloud integration. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quicksilver/Quicksilver"&gt;Quicksilver&lt;/a&gt; - Quicksilver is a fast macOS productivity application that gives you the power to control your Mac quickly and elegantly.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quickwords/quickwords"&gt;Quickwords&lt;/a&gt; - Write anything in a matter of seconds. Create snippets that can substitute text, execute tedious tasks and more.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SelfControlApp/selfcontrol"&gt;SelfControl&lt;/a&gt; - macOS app to block your own access to distracting websites etc for a predetermined period of time. It can not be undone by the app or by a restart – you must wait for the timer to run out.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexPerathoner/Sessions"&gt;Sessions&lt;/a&gt; - Safari extension to save your working sessions &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LumingYin/SpeedReader"&gt;Speed Reader&lt;/a&gt; - Read faster with the power of silencing vocalization with SpeedReader. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LumingYin/StickyNotes"&gt;StickyNotes&lt;/a&gt; - A Windows 10-esque Sticky Notes app implemented in AppKit. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/khrykin/StrategrDesktop"&gt;Strategr&lt;/a&gt; - No-fuss time management &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johannesjo/super-productivity"&gt;Super Productivity&lt;/a&gt; - Free to do list &amp;amp; time tracker for programmers &amp;amp; designers with Jira integration. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/typescript-16.png"&gt;&lt;img src="./icons/typescript-16.png" alt="type_script_icon" title="TypeScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joaomoreno/thyme"&gt;Thyme&lt;/a&gt; - The task timer for OS X.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/michaelvillar/timer-app"&gt;Timer&lt;/a&gt; - Simple Timer app for Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=""&gt;Toggl Desktop&lt;/a&gt; - Toggl Desktop app for Windows, Mac and Linux.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivoronin/TomatoBar"&gt;TomatoBar&lt;/a&gt; - Pomodoro Technique Timer for macOS with Touch Bar support. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlong/TrelloApp"&gt;TrelloApp&lt;/a&gt; - Unofficial wrapper application for Trello.com written in Swift. This is almost a "Hello World" for a site specific browser.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TailorDev/Watson"&gt;Watson&lt;/a&gt; - A CLI application for time tracking.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/1000ch/whale"&gt;Whale&lt;/a&gt; - Unofficial Trello app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sendyhalim/Yomu"&gt;Yomu&lt;/a&gt; - Manga reader app for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/federico-terzi/espanso"&gt;espanso&lt;/a&gt; - Cross-platform Text Expander, a powerful replacement for Alfred Snippets &lt;a target="_blank" rel="noopener noreferrer" href="./icons/rust-16.png"&gt;&lt;img src="./icons/rust-16.png" alt="rust_icon" title="Rust language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shubhambatra3019/macOrganizer"&gt;macOrganizer&lt;/a&gt; - macOS app for organizing files or removing unnecessary files.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Onix-Systems/osx-status-bar-todo"&gt;status-bar-todo&lt;/a&gt; - Simple macOS app to keep TODO-list in status bar.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hovancik/stretchly"&gt;stretchly&lt;/a&gt; - Cross-platform electron app that reminds you to take breaks when working with computer.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-screensaver" class="anchor" aria-hidden="true" href="#screensaver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screensaver&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnCoates/Aerial"&gt;Aerial&lt;/a&gt; - Apple TV Aerial Screensaver for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ved62/Image-As-Wallpaper"&gt;Image-As-Wallpaper&lt;/a&gt; - Utility application helps with selection of images for using as desktop wallpaper or in screensaver on Mac computers.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/leonspok/Irvue-Screensaver"&gt;Irvue&lt;/a&gt; - Screensaver for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amiantos/lifesaver"&gt;Life Saver&lt;/a&gt; - An abstract screensaver based on Conway's Game of Life implemented with SpriteKit &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docterd/MusaicFM"&gt;MusaicFM&lt;/a&gt; - iTunes Screensaver Clone for Spotify and Last.fm  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vpeschenkov/Predator"&gt;Predator&lt;/a&gt; - A predator-inspired clock screensaver for macOS &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/winterbe/github-matrix-screensaver"&gt;The GitHub Matrix Screensaver&lt;/a&gt; - The GitHub Matrix Screensaver for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spieglt/cloaker"&gt;Cloaker&lt;/a&gt; - simple drag-and-drop, password-based file encryption. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/rust-16.png"&gt;&lt;img src="./icons/rust-16.png" alt="rust_icon" title="Rust language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cryptomator/cryptomator"&gt;Cryptomator&lt;/a&gt; - Multi-platform transparent client-side encryption of your files in the cloud. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/java-16.png"&gt;&lt;img src="./icons/java-16.png" alt="java_icon" title="Java language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/objective-see/LuLu"&gt;LuLu&lt;/a&gt; - LuLu is macOS firewall application that aims to block unauthorized (outgoing) network traffic.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alichtman/stronghold"&gt;stronghold&lt;/a&gt; - Easily configure macOS security settings from the terminal.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sharing-files" class="anchor" aria-hidden="true" href="#sharing-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sharing Files&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git.deluge-torrent.org/deluge" rel="nofollow"&gt;Deluge&lt;/a&gt; - Lightweight cross-platform BitTorrent client.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nitroshare/nitroshare-desktop"&gt;NitroShare&lt;/a&gt; - Transferring files from one device to another &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timonus/Rhea"&gt;Rhea&lt;/a&gt; - macOS status bar app for quickly sharing files and URLs.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/transmission/transmission"&gt;Transmission&lt;/a&gt; - Official Transmission BitTorrent client repository. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tribler/tribler"&gt;Tribler&lt;/a&gt; - Privacy enhanced BitTorrent client with P2P content discovery.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mileswd/mac2imgur"&gt;mac2imgur&lt;/a&gt; - Simple Mac app designed to make uploading images and screenshots to Imgur quick and effortless.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qbittorrent/qBittorrent"&gt;qBittorrent&lt;/a&gt; - BitTorrent client in Qt.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-social-networking" class="anchor" aria-hidden="true" href="#social-networking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Social Networking&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/caprine#features"&gt;Caprine&lt;/a&gt; - Elegant Facebook Messenger desktop app. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielbuechele/goofy"&gt;Goofy&lt;/a&gt; - Unofficial Facebook Messenger client.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Swiftodon/Leviathan"&gt;Leviathan&lt;/a&gt; - Leviathan is a iOS and macOS client application for the Mastodon social network.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rsms/fb-mac-messenger"&gt;Messenger&lt;/a&gt; - macOS app wrapping Facebook's Messenger for desktop.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/producthunt/producthunt-osx"&gt;Product Hunt&lt;/a&gt; - share and discover your favorite new products and applications.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/1000ch/quail"&gt;Quail&lt;/a&gt; - Unofficial &lt;a href="https://esa.io" rel="nofollow"&gt;esa&lt;/a&gt; app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terkelg/ramme"&gt;Ramme&lt;/a&gt; - Unofficial Instagram Desktop App. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KeliCheng/Simpo"&gt;Simpo&lt;/a&gt; - macOS menubar app to post status quickly.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/ruby-16.png"&gt;&lt;img src="./icons/ruby-16.png" alt="ruby_icon" title="Ruby language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vitorgalvao/appear.in"&gt;appear.in&lt;/a&gt; - Unofficial appear.in app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-streaming" class="anchor" aria-hidden="true" href="#streaming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Streaming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/michealparks/galeri"&gt;Galeri&lt;/a&gt; - Perpetual artwork streaming app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/obsproject/obs-studio"&gt;OBS Studio&lt;/a&gt; - Free and open source software for live streaming and screen recording.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-system" class="anchor" aria-hidden="true" href="#system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AppPolice/AppPolice"&gt;AppPolice&lt;/a&gt; - App for macOS with a minimalistic UI which lets you quickly throttle down the CPU usage of any running process.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raphaelhanneken/apple-juice"&gt;Apple Juice&lt;/a&gt; - Advanced battery gauge for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kevin-De-Koninck/Clean-Me"&gt;Clean-Me&lt;/a&gt; - Small macOS app that acts as a system cleaner (logs, cache, ...).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/macmade/Diagnostics"&gt;Diagnostics&lt;/a&gt; - Diagnostics is an application displaying the diagnostic reports from applications on macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Eun/DisableMonitor"&gt;DisableMonitor&lt;/a&gt; - Easily disable or enable a monitor on your Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/etresoft/EtreCheck"&gt;EtreCheck&lt;/a&gt; - EtreCheck is an easy-to-use macOS app to display important details of your system configuration and allow you to copy that information to the Clipboard.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DanielStormApps/Fanny"&gt;Fanny&lt;/a&gt; - Monitor your Mac's fan speed and CPU temperature from your Notification Center.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jwise/HoRNDIS"&gt;HoRNDIS&lt;/a&gt; - Android USB tethering driver for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brianmichel/Juice"&gt;Juice&lt;/a&gt; - Make your battery information a bit more interesting.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/newmarcel/KeepingYouAwake"&gt;KeepingYouAwake&lt;/a&gt; - Prevents your Mac from going to sleep.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mangerlahn/Latest"&gt;Latest&lt;/a&gt; - Small utility app for macOS that makes sure you know about all the latest updates to the apps you use.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BonzaiThePenguin/Loading"&gt;Loading&lt;/a&gt; - Simple network activity monitor for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KrauseFx/overkill-for-mac"&gt;Overkill&lt;/a&gt; - Stop iTunes from opening when you connect your iPhone.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ProfileCreator/ProfileCreator"&gt;ProfileCreator&lt;/a&gt; - macOS Application to create standard or customized configuration profiles.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sveinbjornt/Sloth"&gt;Sloth&lt;/a&gt; - Sloth is an macOS application that displays a list of all open files and sockets in use by all running applications on your system.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rugarciap/Turbo-Boost-Switcher"&gt;Turbo Boost Switcher&lt;/a&gt; - Turbo Boost Switcher is a little application for Mac computers that allows to enable and/or disable the Turbo Boost feature.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeromirNeves/VerticalBar"&gt;VerticalBar&lt;/a&gt; - macOS application to add a vertical bar to Dock.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LumingYin/macOSLucidaGrande"&gt;macOSLucidaGrande&lt;/a&gt; - A small utility to set Lucida Grande as your Mac's system UI font. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-terminal" class="anchor" aria-hidden="true" href="#terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alacritty/alacritty"&gt;Alacritty&lt;/a&gt; - Cross-platform, GPU-accelerated terminal emulator.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/rust-16.png"&gt;&lt;img src="./icons/rust-16.png" alt="rust_icon" title="Rust language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ishuah/bifrost"&gt;Bifrost&lt;/a&gt; - A tiny terminal emulator for serial port communication (macOS/Linux).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/golang-16.png"&gt;&lt;img src="./icons/golang-16.png" alt="go_icon" title="Go language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/macmade/Console"&gt;Console&lt;/a&gt; - macOS console application.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/FinderGo"&gt;Finder Go&lt;/a&gt; - macOS app and Finder Sync Extension to open Terminal, iTerm, Hyper from Finder.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zeit/hyper"&gt;Hyper&lt;/a&gt; - Terminal built on web technologies. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kovidgoyal/kitty"&gt;Kitty&lt;/a&gt; - Cross-platform, fast, feature full, GPU based terminal emulator. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ji4n1ng/OpenInTerminal"&gt;OpenInTerminal&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;✨&lt;/g-emoji&gt; Finder Toolbar app for macOS to open the current directory in Terminal, iTerm or Hyper. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/es-kumagai/OpenTerminal"&gt;OpenTerminal&lt;/a&gt; - App for macOS that opens a new Finder window and changes the current directory to the folder launched by the app.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/railsware/upterm"&gt;Upterm&lt;/a&gt; - A terminal emulator for the 21st century (formerly Black Screen).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jbtule/cdto"&gt;cd to... &lt;/a&gt; - Finder Toolbar app to open the current directory in the Terminal &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gnachman/iTerm2"&gt;iTerm 2&lt;/a&gt; - Terminal emulator for macOS that does amazing things.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mczachurski/wallpapper"&gt;wallpapper&lt;/a&gt; - wallpapper is a console application for creating dynamic wallpapers for Mojave.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-touch-bar" class="anchor" aria-hidden="true" href="#touch-bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Touch Bar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xzzz9097/Muse"&gt;Muse&lt;/a&gt; - Spotify controller with TouchBar support.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/toxblh/MTMR"&gt;MyTouchbarMyRules&lt;/a&gt; - App to customize your Touch Bar as you want.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pigigaldi/Pock"&gt;Pock&lt;/a&gt; - Display macOS Dock in Touch Bar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/touchbar/Touch-Bar-Preview"&gt;Touch Bar Preview&lt;/a&gt; - Small application to display your designs on the Touch Bar of the new MacBook Pro.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/touch-bar-simulator"&gt;Touch Bar Simulator&lt;/a&gt; - Use the Touch Bar on any Mac.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lessmess-dev/touch-emoji"&gt;Touch Emoji&lt;/a&gt; - Emoji picker for MacBook Pro Touch Bar.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-utilities" class="anchor" aria-hidden="true" href="#utilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Utilities&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mortenjust/androidtool-mac"&gt;Android tool for Mac&lt;/a&gt; - One-click screenshots, video recordings, app installation for iOS and Android  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivoronin/ArchiveMounter"&gt;ArchiveMounter&lt;/a&gt; - Mounts archives like disk images. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/beardedspice/beardedspice"&gt;BeardedSpice&lt;/a&gt; - Control web based media players with the media keys found on Mac keyboards.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bitwarden/desktop"&gt;Bitwarden&lt;/a&gt; - Cross-platform password management solutions for individuals, teams, and business organizations.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/typescript-16.png"&gt;&lt;img src="./icons/typescript-16.png" alt="type_script_icon" title="TypeScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/buttercup/buttercup-desktop"&gt;Buttercup Desktop&lt;/a&gt; - Secure password manager for mac and other platforms.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/varol/Calculeta"&gt;Calculeta&lt;/a&gt; - Calculator for macOS which working on statusbar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mipstian/catch/"&gt;Catch&lt;/a&gt; - Catch: Broadcatching made easy.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LumingYin/ClipboardClear"&gt;Clear Clipboard Text Format&lt;/a&gt; - Easily clear the format of your clipboard text with Clear Clipboard Text Format. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ekreutz/CornerCal"&gt;CornerCal&lt;/a&gt; - Simple, clean calendar and clock app for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HR/Crypter"&gt;Crypter&lt;/a&gt; - Crypter is an innovative, convenient and secure cross-platform crypto app that simplifies secure password generation and management by requiring you to only remember one bit, the MasterPass.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josejuanqm/ECheck"&gt;ECheck&lt;/a&gt; - Small tool to validate epub files for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spieglt/flyingcarpet"&gt;Flying Carpet&lt;/a&gt; - cross-platform file transfer over ad-hoc wifi, like AirDrop but for Mac/Windows/Linux. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/golang-16.png"&gt;&lt;img src="./icons/golang-16.png" alt="go_icon" title="Go language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thecatalinstan/Funky"&gt;Funky&lt;/a&gt; - Easily toggle the function key on your Mac on a per app basis. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Gray"&gt;Gray&lt;/a&gt; - Pick between the light appearance and the dark appearance on a per-app basis with the click of a button  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wulkano/kap"&gt;Kap&lt;/a&gt; - Screen recorder application built with web technology.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keepassxreboot/keepassxc"&gt;KeePassXC&lt;/a&gt; - Cross-platform community-driven port of the Windows application "Keepass Password Safe"  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keeweb/keeweb"&gt;KeeWeb&lt;/a&gt; - Cross-platform password manager compatible with KeePass.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vishaltelangre/Kyapchar"&gt;Kyapchar&lt;/a&gt; - Simple screen and microphone audio recorder for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wvdk/Life-Calendar"&gt;Life-Calendar&lt;/a&gt; - Life Calendar.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alin23/lunar"&gt;Lunar&lt;/a&gt; - Intelligent adaptive brightness for your external displays.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MacPass/MacPass"&gt;MacPass&lt;/a&gt; - Native macOS KeePass client.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shincurry/Maria"&gt;Maria&lt;/a&gt; - macOS native app/widget for aria2 download tool.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MemeMaker/Meme-Maker-Mac"&gt;Meme Maker&lt;/a&gt; - Meme Maker macOS application for meme creation.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IngmarStein/Monolingual"&gt;Monolingual&lt;/a&gt; - Remove unnecessary language resources from macOS  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Caldis/Mos"&gt;Mos&lt;/a&gt; - Smooth your mouse's scrolling and reverse the mouse scroll direction  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/musa11971/Music-Bar/"&gt;Music Bar&lt;/a&gt; - Music Bar is macOS application that places music controls right in your menu bar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jariz/Noti/"&gt;Noti&lt;/a&gt; - Receive Android notifications on your mac (with PushBullet).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikolaeu/Numi"&gt;Numi&lt;/a&gt; - A handy calculator with natural language parsing &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sidneys/pb-for-desktop"&gt;PB for Desktop&lt;/a&gt; - Receive native push notifications on macOS, Windows and Linux.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/padloc/padloc"&gt;Padlock&lt;/a&gt; - A minimal, open source password manager for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cemolcay/PercentCalculator"&gt;PercentCalculator&lt;/a&gt; - A menu bar application that calculates parcents.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbolar/PlayStatus"&gt;PlayStatus&lt;/a&gt; - PlayStatus is a macOS app that allows the control of Spotify and iTunes music playback from the menu bar. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/powershell/powershell"&gt;PowerShell&lt;/a&gt; - PowerShell is a cross-platform automation and configuration tool/framework that works well with your existing tools. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/csharp-16.png"&gt;&lt;img src="./icons/csharp-16.png" alt="c_sharp_icon" title="C# Language" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxogden/screencat"&gt;ScreenCat&lt;/a&gt; - ScreenCat is a screen sharing + remote collaboration application. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/css-16.png"&gt;&lt;img src="./icons/css-16.png" alt="css_icon" title="CSS language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dteoh/SlowQuitApps"&gt;SlowQuitApps&lt;/a&gt; - Add a global delay to Command-Q to stop accidental app quits.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johannesjo/super-productivity"&gt;Super Productivity&lt;/a&gt; - Free to do list &amp;amp; time tracker for programmers &amp;amp; designers with Jira integration. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/typescript-16.png"&gt;&lt;img src="./icons/typescript-16.png" alt="type_script_icon" title="TypeScript language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/64characters/Telephone"&gt;Telephone&lt;/a&gt; - SIP softphone for macOS. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blockstack/blockstack-browser"&gt;The Blockstack Browser&lt;/a&gt; - Blockstack is an internet for decentralized apps where users own their data. The Blockstack Browser allows you to explore the Blockstack internet.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/kosovan/theunarchiver/src" rel="nofollow"&gt;The Unarchiver&lt;/a&gt; - The Unarchiver is an Objective-C application for uncompressing archive files.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/ToTheTop"&gt;ToTheTop&lt;/a&gt; - Small macOS application to help you scroll to the top.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kovidgoyal/calibre"&gt;calibre&lt;/a&gt; - cross platform e-book manager. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jhspetersson/fselect"&gt;fselect&lt;/a&gt; - Command-line tool to search files with SQL syntax. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/rust-16.png"&gt;&lt;img src="./icons/rust-16.png" alt="rust_icon" title="Rust language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Homebrew/homebrew-cask"&gt;homebrew-cask&lt;/a&gt; - A CLI workflow for the administration of macOS applications distributed as binaries &lt;a target="_blank" rel="noopener noreferrer" href="./icons/ruby-16.png"&gt;&lt;img src="./icons/ruby-16.png" alt="ruby_icon" title="Ruby language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alessiomaffeis/iOScanX"&gt;iOScanX&lt;/a&gt; - Cocoa application for semi-automated iOS app analysis and evaluation. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dragstor/mac-sound-fix"&gt;mac-sound-fix&lt;/a&gt; - Mac Sound Re-Enabler.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/friedrichweise/wechsel"&gt;wechsel&lt;/a&gt; - manage bluetooth connections with your keyboard. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/felixhageloh/uebersicht"&gt;Übersicht&lt;/a&gt; - Keep an eye on what's happening on your machine and in the world.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vpn--proxy" class="anchor" aria-hidden="true" href="#vpn--proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VPN &amp;amp; Proxy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shadowsocks/ShadowsocksX-NG"&gt;ShadowsocksX-NG&lt;/a&gt; - Next Generation of ShadowsocksX.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zhuhaow/Specht"&gt;Specht&lt;/a&gt; - Rule-based proxy app built with Network Extension for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zhuhaow/SpechtLite"&gt;SpechtLite&lt;/a&gt; - Rule-based proxy app for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tunnelblick/Tunnelblick"&gt;Tunnelblick&lt;/a&gt; - Tunnelblick is a graphic user interface for OpenVPN on macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yichengchen/clashX"&gt;clashX&lt;/a&gt; - A rule based custom proxy with GUI for Mac base on clash.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/riboseinc/cryptode-mac"&gt;rvc-mac&lt;/a&gt; - Ribose VPN Client macOS Menu App.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-video" class="anchor" aria-hidden="true" href="#video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Video&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lostjared/Acid.Cam.v2.OSX"&gt;Acid.Cam.v2.OSX&lt;/a&gt; - Acid Cam v2 for macOS distorts video to create art.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/insidegui/AppleEvents"&gt;AppleEvents&lt;/a&gt; - Unofficial Apple Events app for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zagahr/Conferences.digital"&gt;Conferences.digital&lt;/a&gt; - Best way to watch the latest and greatest videos from your favourite developer conferences for free on your Mac. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maelswarm/Datamosh"&gt;Datamosh&lt;/a&gt; - Datamosh your videos on macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xiaohk/FaceData"&gt;Face Data&lt;/a&gt; - macOS application used to auto-annotate landmarks from a video.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/willamowius/gnugk"&gt;GNU Gatekeeper&lt;/a&gt; - Video conferencing server for H.323 terminals.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vdel26/gifted"&gt;Gifted&lt;/a&gt; - Turn any short video into an animated GIF quickly and easily.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HandBrake/HandBrake"&gt;HandBrake&lt;/a&gt; - HandBrake is a video transcoder available for Linux, Mac, and Windows.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edanchenkov/MenuTube"&gt;MenuTube&lt;/a&gt; - Catch YouTube into your macOS menu bar!  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenShot/openshot-qt"&gt;OpenShot&lt;/a&gt; - Easy to use, quick to learn, and surprisingly powerful video editor.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LumingYin/Caption"&gt;Quick Caption&lt;/a&gt; - Transcribe and generate caption files (SRT, ASS and FCPXML) without manually entering time codes. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Marginal/QLVideo"&gt;QuickLook Video&lt;/a&gt; - This package allows macOS Finder to display thumbnails, static QuickLook previews, cover art and metadata for most types of video files.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/galad87/subler/src" rel="nofollow"&gt;Subler&lt;/a&gt; - Subler is an macOS app created to mux and tag mp4 files.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/videolan/vlc"&gt;VLC&lt;/a&gt; -  VLC is a free and open source cross-platform multimedia player &lt;a target="_blank" rel="noopener noreferrer" href="./icons/c-16.png"&gt;&lt;img src="./icons/c-16.png" alt="c_icon" title="C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sahil-a/vidquizcreator"&gt;Vid Quiz Creator&lt;/a&gt; - macOS application to insert quizzes within video playback and play those videos to receiving devices using the LISNR API.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/webtorrent/webtorrent-desktop"&gt;WebTorrent Desktop&lt;/a&gt; - Streaming torrent app. For Mac, Windows, and Linux.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whoisandy/yoda"&gt;Yoda&lt;/a&gt; - Nifty macOS application which enables you to browse and download videos from YouTube.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-wallpaper" class="anchor" aria-hidden="true" href="#wallpaper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wallpaper&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cuddlecheek/500-mac-wallpaper"&gt;500-mac-wallpaper&lt;/a&gt; - Simple macOS app for the status bar to automatically download photos from 500px.com to a local folder that can be set as a source of wallpapers.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JustinFincher/ASWP-for-macOS"&gt;ArtWall&lt;/a&gt; - ArtStation set as wallpapers from &lt;a href="https://www.artstation.com" rel="nofollow"&gt;artwork.rss&lt;/a&gt;.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NghiaTranUIT/artify-macos"&gt;Artify&lt;/a&gt; - A macOS application for bringing dedicatedly 18th century Arts to everyone  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pengsrc/BingPaper"&gt;BingPaper&lt;/a&gt; - Use Bing daily photo as your wallpaper on macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VioletGiraffe/desktop-wallpaper-switcher"&gt;Desktop Wallpaper Switcher&lt;/a&gt; - Win / Linux / macOS tool for managing and cycling desktop wallpapers.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naman14/Muzei-macOS"&gt;Muzei&lt;/a&gt; - Muzei wallpaper app for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomtaylor/satellite-eyes"&gt;Satellite Eyes&lt;/a&gt; - macOS app to automatically set your desktop wallpaper to the satellite view overhead.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davidcelis/Sunscreen"&gt;Sunscreen&lt;/a&gt; - Sunscreen is a fun, lightweight application that changes your desktop wallpaper based on sunrise and sunset.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/diogosantos/WallpaperMenu"&gt;WallpaperMenu&lt;/a&gt; - macOS menubar application for navigation through beautiful pictures on the web and set them up as your desktop image.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/ruby-16.png"&gt;&lt;img src="./icons/ruby-16.png" alt="ruby_icon" title="Ruby language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/viatsko/earth-wallpapers"&gt;earth-wallpapers&lt;/a&gt; - Simple macOS menubar app which fetches latest photos from a subreddit.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/javascript-16.png"&gt;&lt;img src="./icons/javascript-16.png" alt="javascript_icon" title="JavaScript language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IngoHeimbach/pyDailyChanger"&gt;pyDailyChanger&lt;/a&gt; - pyDailyChanger is a program that changes your wallpaper daily.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/python-16.png"&gt;&lt;img src="./icons/python-16.png" alt="python_icon" title="Python language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-window-management" class="anchor" aria-hidden="true" href="#window-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Window Management&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ianyh/Amethyst"&gt;Amethyst&lt;/a&gt; - Automatic tiling window manager for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mjolnirapp/AppGrid"&gt;AppGrid&lt;/a&gt; - Grid-based keyboard window manager for macOS.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mamiksik/Desktop-Profiles"&gt;Desktop Profiles&lt;/a&gt; - An innovative desktop/window manager for macOS &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Hammerspoon/hammerspoon"&gt;Hammerspoon&lt;/a&gt; - Staggeringly powerful macOS desktop automation with Lua. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/Lua-16.png"&gt;&lt;img src="./icons/Lua-16.png" alt="lua_icon" title="Lua language." style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kasper/phoenix"&gt;Phoenix&lt;/a&gt; - Lightweight macOS window and app manager scriptable with JavaScript.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rxhanson/Rectangle"&gt;Rectangle&lt;/a&gt; - Rectangle is a window manager heavily based on Spectacle, written in Swift. &lt;a target="_blank" rel="noopener noreferrer" href="./icons/swift-16.png"&gt;&lt;img src="./icons/swift-16.png" alt="swift_icon" title="Swift language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fikovnik/ShiftIt"&gt;ShiftIt&lt;/a&gt; - Managing windows size and position.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jigish/slate"&gt;Slate&lt;/a&gt; - Window management application (replacement for Divvy/SizeUp/ShiftIt).  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eczarny/spectacle"&gt;Spectacle&lt;/a&gt; - Spectacle allows you to organize your windows without using a mouse.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/objective-c-16.png"&gt;&lt;img src="./icons/objective-c-16.png" alt="objective_c_icon" title="Objective-C language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/koekeishiya/chunkwm"&gt;chunkwm&lt;/a&gt; - Tiling window manager for macOS that uses a plugin architecture.  &lt;a target="_blank" rel="noopener noreferrer" href="./icons/cpp-16.png"&gt;&lt;img src="./icons/cpp-16.png" alt="cpp_icon" title="C++ language." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;Thanks to all the people who contribute:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/serhii-londar/open-source-mac-os-apps/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/7fa89c15d7ca3a554b412799468cbe6a0fe8d17b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6f70656e2d736f757263652d6d61632d6f732d617070732f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/open-source-mac-os-apps/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>serhii-londar</author><guid isPermaLink="false">https://github.com/serhii-londar/open-source-mac-os-apps</guid><pubDate>Mon, 10 Feb 2020 00:08:00 GMT</pubDate></item><item><title>raywenderlich/swift-algorithm-club #9 in Swift, Today</title><link>https://github.com/raywenderlich/swift-algorithm-club</link><description>&lt;p&gt;&lt;i&gt;Algorithms and data structures in Swift, with explanations!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Images/SwiftAlgorithm-410-transp.png"&gt;&lt;img src="Images/SwiftAlgorithm-410-transp.png" alt="Swift Algorithm Club" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-welcome-to-the-swift-algorithm-club" class="anchor" aria-hidden="true" href="#welcome-to-the-swift-algorithm-club"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to the Swift Algorithm Club!&lt;/h1&gt;
&lt;p&gt;Here you'll find implementations of popular algorithms and data structures in everyone's favorite new language Swift, with detailed explanations of how they work.&lt;/p&gt;
&lt;p&gt;If you're a computer science student who needs to learn this stuff for exams -- or if you're a self-taught programmer who wants to brush up on the theory behind your craft -- you've come to the right place!&lt;/p&gt;
&lt;p&gt;The goal of this project is to &lt;strong&gt;explain how algorithms work&lt;/strong&gt;. The focus is on clarity and readability of the code, not on making a reusable library that you can drop into your own projects. That said, most of the code should be ready for production use but you may need to tweak it to fit into your own codebase.&lt;/p&gt;
&lt;p&gt;Code is compatible with &lt;strong&gt;Xcode 10&lt;/strong&gt; and &lt;strong&gt;Swift 4.2&lt;/strong&gt;. We'll keep this updated with the latest version of Swift. If you're interested in a GitHub pages version of the repo, check out &lt;a href="https://aquarchitect.github.io/swift-algorithm-club/" rel="nofollow"&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart_eyes" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png"&gt;😍&lt;/g-emoji&gt; &lt;strong&gt;Suggestions and contributions are welcome!&lt;/strong&gt; &lt;g-emoji class="g-emoji" alias="heart_eyes" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png"&gt;😍&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-links" class="anchor" aria-hidden="true" href="#important-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important links&lt;/h2&gt;
&lt;p&gt;&lt;a href="What%20are%20Algorithms.markdown"&gt;What are algorithms and data structures?&lt;/a&gt; Pancakes!&lt;/p&gt;
&lt;p&gt;&lt;a href="Why%20Algorithms.markdown"&gt;Why learn algorithms?&lt;/a&gt; Worried this isn't your cup of tea? Then read this.&lt;/p&gt;
&lt;p&gt;&lt;a href="Big-O%20Notation.markdown"&gt;Big-O notation&lt;/a&gt;. We often say things like, "This algorithm is &lt;strong&gt;O(n)&lt;/strong&gt;." If you don't know what that means, read this first.&lt;/p&gt;
&lt;p&gt;&lt;a href="Algorithm%20Design.markdown"&gt;Algorithm design techniques&lt;/a&gt;. How do you create your own algorithms?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/raywenderlich/swift-algorithm-club/blob/master/.github/CONTRIBUTING.md"&gt;How to contribute&lt;/a&gt;. Report an issue to leave feedback, or submit a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-where-to-start" class="anchor" aria-hidden="true" href="#where-to-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to start?&lt;/h2&gt;
&lt;p&gt;If you're new to algorithms and data structures, here are a few good ones to start out with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Stack/"&gt;Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Queue/"&gt;Queue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Insertion%20Sort/"&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Search/"&gt;Binary Search&lt;/a&gt; and &lt;a href="Binary%20Search%20Tree/"&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Merge%20Sort/"&gt;Merge Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Boyer-Moore-Horspool/"&gt;Boyer-Moore string search&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-the-algorithms" class="anchor" aria-hidden="true" href="#the-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The algorithms&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-searching" class="anchor" aria-hidden="true" href="#searching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Searching&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Linear%20Search/"&gt;Linear Search&lt;/a&gt;. Find an element in an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Search/"&gt;Binary Search&lt;/a&gt;. Quickly find elements in a sorted array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Count%20Occurrences/"&gt;Count Occurrences&lt;/a&gt;. Count how often a value appears in an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Select%20Minimum%20Maximum"&gt;Select Minimum / Maximum&lt;/a&gt;. Find the minimum/maximum value in an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Kth%20Largest%20Element/"&gt;k-th Largest Element&lt;/a&gt;. Find the &lt;em&gt;k&lt;/em&gt;-th largest element in an array, such as the median.&lt;/li&gt;
&lt;li&gt;&lt;a href="Selection%20Sampling/"&gt;Selection Sampling&lt;/a&gt;. Randomly choose a bunch of items from a collection.&lt;/li&gt;
&lt;li&gt;&lt;a href="Union-Find/"&gt;Union-Find&lt;/a&gt;. Keeps track of disjoint sets and lets you quickly merge them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-string-search" class="anchor" aria-hidden="true" href="#string-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String Search&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Brute-Force%20String%20Search/"&gt;Brute-Force String Search&lt;/a&gt;. A naive method.&lt;/li&gt;
&lt;li&gt;&lt;a href="Boyer-Moore-Horspool/"&gt;Boyer-Moore&lt;/a&gt;. A fast method to search for substrings. It skips ahead based on a look-up table, to avoid looking at every character in the text.&lt;/li&gt;
&lt;li&gt;&lt;a href="Knuth-Morris-Pratt/"&gt;Knuth-Morris-Pratt&lt;/a&gt;. A linear-time string algorithm that returns indexes of all occurrencies of a given pattern.&lt;/li&gt;
&lt;li&gt;&lt;a href="Rabin-Karp/"&gt;Rabin-Karp&lt;/a&gt;  Faster search by using hashing.&lt;/li&gt;
&lt;li&gt;&lt;a href="Longest%20Common%20Subsequence/"&gt;Longest Common Subsequence&lt;/a&gt;. Find the longest sequence of characters that appear in the same order in both strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="Z-Algorithm/"&gt;Z-Algorithm&lt;/a&gt;. Finds all instances of a pattern in a String, and returns the indexes of where the pattern starts within the String.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sorting" class="anchor" aria-hidden="true" href="#sorting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sorting&lt;/h3&gt;
&lt;p&gt;It's fun to see how sorting algorithms work, but in practice you'll almost never have to provide your own sorting routines. Swift's own &lt;code&gt;sort()&lt;/code&gt; is more than up to the job. But if you're curious, read on...&lt;/p&gt;
&lt;p&gt;Basic sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Insertion%20Sort/"&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Selection%20Sort/"&gt;Selection Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Shell%20Sort/"&gt;Shell Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fast sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Quicksort/"&gt;Quicksort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Merge%20Sort/"&gt;Merge Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Heap%20Sort/"&gt;Heap Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hybrid sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Introsort/"&gt;Introsort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Special-purpose sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Counting%20Sort/"&gt;Counting Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Radix%20Sort/"&gt;Radix Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Topological%20Sort/"&gt;Topological Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bad sorting algorithms (don't use these!):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Bubble%20Sort/"&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Slow%20Sort/"&gt;Slow Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-compression" class="anchor" aria-hidden="true" href="#compression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compression&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Run-Length%20Encoding/"&gt;Run-Length Encoding (RLE)&lt;/a&gt;. Store repeated values as a single byte and a count.&lt;/li&gt;
&lt;li&gt;&lt;a href="Huffman%20Coding/"&gt;Huffman Coding&lt;/a&gt;. Store more common elements using a smaller number of bits.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-miscellaneous" class="anchor" aria-hidden="true" href="#miscellaneous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Shuffle/"&gt;Shuffle&lt;/a&gt;. Randomly rearranges the contents of an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Comb%20Sort/"&gt;Comb Sort&lt;/a&gt;. An improve upon the Bubble Sort algorithm.&lt;/li&gt;
&lt;li&gt;&lt;a href="Convex%20Hull/"&gt;Convex Hull&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="Miller-Rabin%20Primality%20Test/"&gt;Miller-Rabin Primality Test&lt;/a&gt;. Is the number a prime number?&lt;/li&gt;
&lt;li&gt;&lt;a href="MinimumCoinChange/"&gt;MinimumCoinChange&lt;/a&gt;. A showcase for dynamic programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="Genetic/"&gt;Genetic&lt;/a&gt;. A simple example on how to slowly mutate a value to its ideal form, in the context of biological evolution.&lt;/li&gt;
&lt;li&gt;&lt;a href="Myers%20Difference%20Algorithm/"&gt;Myers Difference Algorithm&lt;/a&gt;. Finding the longest common subsequence of two sequences.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-mathematics" class="anchor" aria-hidden="true" href="#mathematics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mathematics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="GCD/"&gt;Greatest Common Divisor (GCD)&lt;/a&gt;. Special bonus: the least common multiple.&lt;/li&gt;
&lt;li&gt;&lt;a href="Combinatorics/"&gt;Permutations and Combinations&lt;/a&gt;. Get your combinatorics on!&lt;/li&gt;
&lt;li&gt;&lt;a href="Shunting%20Yard/"&gt;Shunting Yard Algorithm&lt;/a&gt;. Convert infix expressions to postfix.&lt;/li&gt;
&lt;li&gt;&lt;a href="Karatsuba%20Multiplication/"&gt;Karatsuba Multiplication&lt;/a&gt;. Another take on elementary multiplication.&lt;/li&gt;
&lt;li&gt;&lt;a href="HaversineDistance/"&gt;Haversine Distance&lt;/a&gt;. Calculating the distance between 2 points from a sphere.&lt;/li&gt;
&lt;li&gt;&lt;a href="Strassen%20Matrix%20Multiplication/"&gt;Strassen's Multiplication Matrix&lt;/a&gt;. Efficient way to handle matrix multiplication.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-machine-learning" class="anchor" aria-hidden="true" href="#machine-learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="K-Means/"&gt;k-Means Clustering&lt;/a&gt;. Unsupervised classifier that partitions data into &lt;em&gt;k&lt;/em&gt; clusters.&lt;/li&gt;
&lt;li&gt;k-Nearest Neighbors&lt;/li&gt;
&lt;li&gt;&lt;a href="Linear%20Regression/"&gt;Linear Regression&lt;/a&gt;. A technique for creating a model of the relationship between two (or more) variable quantities.&lt;/li&gt;
&lt;li&gt;Logistic Regression&lt;/li&gt;
&lt;li&gt;Neural Networks&lt;/li&gt;
&lt;li&gt;PageRank&lt;/li&gt;
&lt;li&gt;&lt;a href="Naive%20Bayes%20Classifier/"&gt;Naive Bayes Classifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Simulated%20annealing/"&gt;Simulated annealing&lt;/a&gt;. Probabilistic technique for approximating the global maxima in a (often discrete) large search space.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-data-structures" class="anchor" aria-hidden="true" href="#data-structures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data structures&lt;/h2&gt;
&lt;p&gt;The choice of data structure for a particular task depends on a few things.&lt;/p&gt;
&lt;p&gt;First, there is the shape of your data and the kinds of operations that you'll need to perform on it. If you want to look up objects by a key you need some kind of dictionary; if your data is hierarchical in nature you want a tree structure of some sort; if your data is sequential you want a stack or queue.&lt;/p&gt;
&lt;p&gt;Second, it matters what particular operations you'll be performing most, as certain data structures are optimized for certain actions. For example, if you often need to find the most important object in a collection, then a heap or priority queue is more optimal than a plain array.&lt;/p&gt;
&lt;p&gt;Most of the time using just the built-in &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Dictionary&lt;/code&gt;, and &lt;code&gt;Set&lt;/code&gt; types is sufficient, but sometimes you may want something more fancy...&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-variations-on-arrays" class="anchor" aria-hidden="true" href="#variations-on-arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variations on arrays&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Array2D/"&gt;Array2D&lt;/a&gt;. A two-dimensional array with fixed dimensions. Useful for board games.&lt;/li&gt;
&lt;li&gt;&lt;a href="Bit%20Set/"&gt;Bit Set&lt;/a&gt;. A fixed-size sequence of &lt;em&gt;n&lt;/em&gt; bits.&lt;/li&gt;
&lt;li&gt;&lt;a href="Fixed%20Size%20Array/"&gt;Fixed Size Array&lt;/a&gt;. When you know beforehand how large your data will be, it might be more efficient to use an old-fashioned array with a fixed size.&lt;/li&gt;
&lt;li&gt;&lt;a href="Ordered%20Array/"&gt;Ordered Array&lt;/a&gt;. An array that is always sorted.&lt;/li&gt;
&lt;li&gt;&lt;a href="Rootish%20Array%20Stack/"&gt;Rootish Array Stack&lt;/a&gt;. A space and time efficient variation on Swift arrays.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-queues" class="anchor" aria-hidden="true" href="#queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Queues&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Stack/"&gt;Stack&lt;/a&gt;. Last-in, first-out!&lt;/li&gt;
&lt;li&gt;&lt;a href="Queue/"&gt;Queue&lt;/a&gt;. First-in, first-out!&lt;/li&gt;
&lt;li&gt;&lt;a href="Deque/"&gt;Deque&lt;/a&gt;. A double-ended queue.&lt;/li&gt;
&lt;li&gt;&lt;a href="Priority%20Queue"&gt;Priority Queue&lt;/a&gt;. A queue where the most important element is always at the front.&lt;/li&gt;
&lt;li&gt;&lt;a href="Ring%20Buffer/"&gt;Ring Buffer&lt;/a&gt;. Also known as a circular buffer. An array of a certain size that conceptually wraps around back to the beginning.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-lists" class="anchor" aria-hidden="true" href="#lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lists&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Linked%20List/"&gt;Linked List&lt;/a&gt;. A sequence of data items connected through links. Covers both singly and doubly linked lists.&lt;/li&gt;
&lt;li&gt;&lt;a href="Skip-List/"&gt;Skip-List&lt;/a&gt;. Skip List is a probabilistic data-structure with same logarithmic time bound and efficiency as AVL/ or Red-Black tree and provides a clever compromise to efficiently support search and update operations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-trees" class="anchor" aria-hidden="true" href="#trees"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Trees&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Tree/"&gt;Tree&lt;/a&gt;. A general-purpose tree structure.&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Tree/"&gt;Binary Tree&lt;/a&gt;. A tree where each node has at most two children.&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Search%20Tree/"&gt;Binary Search Tree (BST)&lt;/a&gt;. A binary tree that orders its nodes in a way that allows for fast queries.&lt;/li&gt;
&lt;li&gt;&lt;a href="Red-Black%20Tree/"&gt;Red-Black Tree&lt;/a&gt;. A self balancing binary search tree.&lt;/li&gt;
&lt;li&gt;&lt;a href="Splay%20Tree/"&gt;Splay Tree&lt;/a&gt;. A self balancing binary search tree that enables fast retrieval of recently updated elements.&lt;/li&gt;
&lt;li&gt;&lt;a href="Threaded%20Binary%20Tree/"&gt;Threaded Binary Tree&lt;/a&gt;. A binary tree that maintains a few extra variables for cheap and fast in-order traversals.&lt;/li&gt;
&lt;li&gt;&lt;a href="Segment%20Tree/"&gt;Segment Tree&lt;/a&gt;. Can quickly compute a function over a portion of an array.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/swift-algorithm-club/tree/master/Segment%20Tree/LazyPropagation"&gt;Lazy Propagation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;kd-Tree&lt;/li&gt;
&lt;li&gt;&lt;a href="Sparse%20Table/"&gt;Sparse Table&lt;/a&gt;. Another take on quickly computing a function over a portion of an array, but this time we'll make it even quicker!.&lt;/li&gt;
&lt;li&gt;&lt;a href="Heap/"&gt;Heap&lt;/a&gt;. A binary tree stored in an array, so it doesn't use pointers. Makes a great priority queue.&lt;/li&gt;
&lt;li&gt;Fibonacci Heap&lt;/li&gt;
&lt;li&gt;&lt;a href="Trie/"&gt;Trie&lt;/a&gt;. A special type of tree used to store associative data structures.&lt;/li&gt;
&lt;li&gt;&lt;a href="B-Tree/"&gt;B-Tree&lt;/a&gt;. A self-balancing search tree, in which nodes can have more than two children.&lt;/li&gt;
&lt;li&gt;&lt;a href="QuadTree/"&gt;QuadTree&lt;/a&gt;. A tree with 4 children.&lt;/li&gt;
&lt;li&gt;&lt;a href="Octree/"&gt;Octree&lt;/a&gt;. A tree with 8 children.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-hashing" class="anchor" aria-hidden="true" href="#hashing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hashing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Hash%20Table/"&gt;Hash Table&lt;/a&gt;. Allows you to store and retrieve objects by a key. This is how the dictionary type is usually implemented.&lt;/li&gt;
&lt;li&gt;Hash Functions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sets" class="anchor" aria-hidden="true" href="#sets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Bloom%20Filter/"&gt;Bloom Filter&lt;/a&gt;. A constant-memory data structure that probabilistically tests whether an element is in a set.&lt;/li&gt;
&lt;li&gt;&lt;a href="Hash%20Set/"&gt;Hash Set&lt;/a&gt;. A set implemented using a hash table.&lt;/li&gt;
&lt;li&gt;&lt;a href="Multiset/"&gt;Multiset&lt;/a&gt;. A set where the number of times an element is added matters. (Also known as a bag.)&lt;/li&gt;
&lt;li&gt;&lt;a href="Ordered%20Set/"&gt;Ordered Set&lt;/a&gt;. A set where the order of items matters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-graphs" class="anchor" aria-hidden="true" href="#graphs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graphs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Graph/"&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Breadth-First%20Search/"&gt;Breadth-First Search (BFS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Depth-First%20Search/"&gt;Depth-First Search (DFS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Shortest%20Path%20%28Unweighted%29/"&gt;Shortest Path&lt;/a&gt; on an unweighted tree&lt;/li&gt;
&lt;li&gt;&lt;a href="Single-Source%20Shortest%20Paths%20(Weighted)/"&gt;Single-Source Shortest Paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Minimum%20Spanning%20Tree%20%28Unweighted%29/"&gt;Minimum Spanning Tree&lt;/a&gt; on an unweighted tree&lt;/li&gt;
&lt;li&gt;&lt;a href="Minimum%20Spanning%20Tree/"&gt;Minimum Spanning Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="All-Pairs%20Shortest%20Paths/"&gt;All-Pairs Shortest Paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Dijkstra%20Algorithm/"&gt;Dijkstra's shortest path algorithm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-puzzles" class="anchor" aria-hidden="true" href="#puzzles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Puzzles&lt;/h2&gt;
&lt;p&gt;A lot of software developer interview questions consist of algorithmic puzzles. Here is a small selection of fun ones. For more puzzles (with answers), see &lt;a href="http://elementsofprogramminginterviews.com/" rel="nofollow"&gt;here&lt;/a&gt; and &lt;a href="http://www.crackingthecodinginterview.com" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Two-Sum%20Problem/"&gt;Two-Sum Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="3Sum%20and%204Sum/"&gt;Three-Sum/Four-Sum Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Fizz%20Buzz/"&gt;Fizz Buzz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Monty%20Hall%20Problem/"&gt;Monty Hall Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Palindromes/"&gt;Finding Palindromes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="DiningPhilosophers/"&gt;Dining Philosophers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Egg%20Drop%20Problem/"&gt;Egg Drop Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Encode%20and%20Decode%20Tree/"&gt;Encoding and Decoding Binary Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Closest%20Pair/"&gt;Closest Pair&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn more!&lt;/h2&gt;
&lt;p&gt;Like what you see? Check out &lt;a href="https://store.raywenderlich.com/products/data-structures-and-algorithms-in-swift" rel="nofollow"&gt;Data Structures &amp;amp; Algorithms in Swift&lt;/a&gt;, the official book by the Swift Algorithm Club team!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Images/DataStructuresAndAlgorithmsInSwiftBook.png"&gt;&lt;img src="Images/DataStructuresAndAlgorithmsInSwiftBook.png" alt="Data Structures &amp;amp; Algorithms in Swift Book" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You’ll start with the fundamental structures of linked lists, queues and stacks, and see how to implement them in a highly Swift-like way. Move on to working with various types of trees, including general purpose trees, binary trees, AVL trees, binary search trees, and tries.&lt;/p&gt;
&lt;p&gt;Go beyond bubble and insertion sort with better-performing algorithms, including mergesort, radix sort, heap sort, and quicksort. Learn how to construct directed, non-directed and weighted graphs to represent many real-world models, and traverse graphs and trees efficiently with breadth-first, depth-first, Dijkstra’s and Prim’s algorithms to solve problems such as finding the shortest path or lowest cost in a network.&lt;/p&gt;
&lt;p&gt;By the end of this book, you’ll have hands-on experience solving common issues with data structures and algorithms — and you’ll be well on your way to developing your own efficient and useful implementations!&lt;/p&gt;
&lt;p&gt;You can find the book on the &lt;a href="https://store.raywenderlich.com/products/data-structures-and-algorithms-in-swift" rel="nofollow"&gt;raywenderlich.com store&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;The Swift Algorithm Club was originally created by &lt;a href="https://github.com/hollance"&gt;Matthijs Hollemans&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is now maintained by &lt;a href="https://www.raywenderlich.com/u/jomoka" rel="nofollow"&gt;Vincent Ngo&lt;/a&gt;, &lt;a href="https://github.com/kelvinlauKL"&gt;Kelvin Lau&lt;/a&gt;, and &lt;a href="https://github.com/richard-ash"&gt;Richard Ash&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Swift Algorithm Club is a collaborative effort from the &lt;a href="https://github.com/raywenderlich/swift-algorithm-club/graphs/contributors"&gt;most algorithmic members&lt;/a&gt; of the &lt;a href="https://www.raywenderlich.com" rel="nofollow"&gt;raywenderlich.com&lt;/a&gt; community. We're always looking for help - why not &lt;a href=".github/CONTRIBUTING.md"&gt;join the club&lt;/a&gt;? :]&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;All content is licensed under the terms of the MIT open source license.&lt;/p&gt;
&lt;p&gt;By posting here, or by submitting any pull request through this forum, you agree that all content you submit or create, both code and text, is subject to this license.  Razeware, LLC, and others will have all the rights described in the license regarding this content.  The precise terms of this license may be found &lt;a href="https://github.com/raywenderlich/swift-algorithm-club/blob/master/LICENSE.txt"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/raywenderlich/swift-algorithm-club" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d686248464ea87440457e93704b5f54191acc804/68747470733a2f2f7472617669732d63692e6f72672f72617977656e6465726c6963682f73776966742d616c676f726974686d2d636c75622e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/raywenderlich/swift-algorithm-club.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>raywenderlich</author><guid isPermaLink="false">https://github.com/raywenderlich/swift-algorithm-club</guid><pubDate>Mon, 10 Feb 2020 00:09:00 GMT</pubDate></item><item><title>AppPear/ChartView #10 in Swift, Today</title><link>https://github.com/AppPear/ChartView</link><description>&lt;p&gt;&lt;i&gt;ChartView made in SwiftUI&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftuicharts" class="anchor" aria-hidden="true" href="#swiftuicharts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftUICharts&lt;/h1&gt;
&lt;p&gt;Swift package for displaying charts effortlessly.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./Resources/showcase1.gif"&gt;&lt;img src="./Resources/showcase1.gif" alt="SwiftUI Charts" title="SwiftUI Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It supports:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Line charts&lt;/li&gt;
&lt;li&gt;Bar charts&lt;/li&gt;
&lt;li&gt;Pie charts&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation:&lt;/h3&gt;
&lt;p&gt;It requires iOS 13 and Xcode 11!&lt;/p&gt;
&lt;p&gt;In Xcode got to &lt;code&gt;File -&amp;gt; Swift Packages -&amp;gt; Add Package Dependency&lt;/code&gt; and paste inthe repo's url: &lt;code&gt;https://github.com/AppPear/ChartView&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage:&lt;/h3&gt;
&lt;p&gt;import the package in the file you would like to use it: &lt;code&gt;import SwiftUICharts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can display a Chart by adding a chart view to your parent view:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h3&gt;
&lt;p&gt;Added an example project, with &lt;strong&gt;iOS, watchOS&lt;/strong&gt; target: &lt;a href="https://github.com/AppPear/ChartViewDemo"&gt;https://github.com/AppPear/ChartViewDemo&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-line-charts" class="anchor" aria-hidden="true" href="#line-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Line charts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;New full screen view called LineView!!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./Resources/fullscreen2.gif"&gt;&lt;img src="./Resources/fullscreen2.gif" alt="Line Charts" title="Line Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;LineView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Line chart&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;legend&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Full screen&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; legend is optional, use optional .padding()&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adopts to dark mode automatically&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./Resources/showcase3.gif"&gt;&lt;img src="./Resources/showcase3.gif" alt="Line Charts" title="Line Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Line chart is interactive, so you can drag across to reveal the data points&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can add a line chart with the following code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;LineChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;legend&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Legendary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; legend is optional&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Turn drop shadow off by adding to the Initialiser: &lt;code&gt;dropShadow: false&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bar-charts" class="anchor" aria-hidden="true" href="#bar-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bar charts&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./Resources/showcase2.gif"&gt;&lt;img src="./Resources/showcase2.gif" alt="Bar Charts" title="Bar Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[New feature] you can display labels also along values and points for each bar to descirbe your data better!&lt;/strong&gt;
&lt;strong&gt;Bar chart is interactive, so you can drag across to reveal the data points&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can add a bar chart with the following code:&lt;/p&gt;
&lt;p&gt;Labels and points:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-c1"&gt;ChartData&lt;/span&gt;(&lt;span class="pl-c1"&gt;values&lt;/span&gt;: [(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2018 Q4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;63150&lt;/span&gt;), (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2019 Q1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;50900&lt;/span&gt;), (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2019 Q2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;77550&lt;/span&gt;), (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2019 Q3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;79600&lt;/span&gt;), (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2019 Q4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;92550&lt;/span&gt;)]), &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sales&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;legend&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Quarterly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; legend is optional&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Only points:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-c1"&gt;ChartData&lt;/span&gt;(&lt;span class="pl-c1"&gt;points&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;]), &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;legend&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Legendary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; legend is optional&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;ChartData&lt;/strong&gt; structure
Stores values in data pairs (actually tuple): &lt;code&gt;(String,Double)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can have duplicate values&lt;/li&gt;
&lt;li&gt;keeps the data order&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can initialise ChartData multiple ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For integer values: &lt;code&gt;ChartData(points: [8,23,54,32,12,37,7,23,43])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For floating point values: &lt;code&gt;ChartData(points: [2.34,3.14,4.56])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For label,value pairs: &lt;code&gt;ChartData(values: [("2018 Q4",63150), ("2019 Q1",50900)])&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can add different formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Small &lt;code&gt;ChartForm.small&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Medium  &lt;code&gt;ChartForm.medium&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Large &lt;code&gt;ChartForm.large&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-c1"&gt;ChartData&lt;/span&gt;(&lt;span class="pl-c1"&gt;points&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;]), &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;form&lt;/span&gt;: ChartForm.&lt;span class="pl-smi"&gt;small&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For floating point numbers, you can set a custom specifier:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-c1"&gt;ChartData&lt;/span&gt;(&lt;span class="pl-c1"&gt;points&lt;/span&gt;:[&lt;span class="pl-c1"&gt;1.23&lt;/span&gt;,&lt;span class="pl-c1"&gt;2.43&lt;/span&gt;,&lt;span class="pl-c1"&gt;3.37&lt;/span&gt;]) ,&lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;valueSpecifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%.2f&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For integers you can disable by passing: &lt;code&gt;valueSpecifier: "%.0f"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can set your custom image in the upper right corner by passing in the initialiser: &lt;code&gt;cornerImage:Image(systemName: "waveform.path.ecg")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Turn drop shadow off by adding to the Initialiser: &lt;code&gt;dropShadow: false&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-you-can-customize-styling-of-the-chart-with-a-chartstyle-object" class="anchor" aria-hidden="true" href="#you-can-customize-styling-of-the-chart-with-a-chartstyle-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;You can customize styling of the chart with a ChartStyle object:&lt;/h3&gt;
&lt;p&gt;Customizable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;background color&lt;/li&gt;
&lt;li&gt;accent color&lt;/li&gt;
&lt;li&gt;second gradient color&lt;/li&gt;
&lt;li&gt;text color&lt;/li&gt;
&lt;li&gt;legend text color&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; chartStyle &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ChartStyle&lt;/span&gt;(&lt;span class="pl-c1"&gt;backgroundColor&lt;/span&gt;: Color.&lt;span class="pl-smi"&gt;black&lt;/span&gt;, &lt;span class="pl-c1"&gt;accentColor&lt;/span&gt;: Colors.&lt;span class="pl-smi"&gt;OrangeStart&lt;/span&gt;, &lt;span class="pl-c1"&gt;secondGradientColor&lt;/span&gt;: Colors.&lt;span class="pl-smi"&gt;OrangeEnd&lt;/span&gt;, &lt;span class="pl-c1"&gt;chartFormSize&lt;/span&gt;: ChartForm.&lt;span class="pl-smi"&gt;medium&lt;/span&gt;, &lt;span class="pl-c1"&gt;textColor&lt;/span&gt;: Color.&lt;span class="pl-smi"&gt;white&lt;/span&gt;, &lt;span class="pl-c1"&gt;legendTextColor&lt;/span&gt;: Color.&lt;span class="pl-smi"&gt;white&lt;/span&gt; )
 &lt;span class="pl-k"&gt;...&lt;/span&gt;
 &lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: chartStyle)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can access built-in styles:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: Styles.&lt;span class="pl-smi"&gt;barChartMidnightGreen&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-all-styles-available-as-a-preset" class="anchor" aria-hidden="true" href="#all-styles-available-as-a-preset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;All styles available as a preset:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;barChartStyleOrangeLight&lt;/li&gt;
&lt;li&gt;barChartStyleOrangeDark&lt;/li&gt;
&lt;li&gt;barChartStyleNeonBlueLight&lt;/li&gt;
&lt;li&gt;barChartStyleNeonBlueDark&lt;/li&gt;
&lt;li&gt;barChartMidnightGreenLight&lt;/li&gt;
&lt;li&gt;barChartMidnightGreenDark&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./Resources/midnightgreen.gif"&gt;&lt;img src="./Resources/midnightgreen.gif" alt="Midnightgreen" title="Midnightgreen" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./Resources/showcase5.png"&gt;&lt;img src="./Resources/showcase5.png" alt="Custom Charts" title="Custom Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-you-can-customize-the-size-of-the-chart-with-a-chartform-object" class="anchor" aria-hidden="true" href="#you-can-customize-the-size-of-the-chart-with-a-chartform-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;You can customize the size of the chart with a ChartForm object:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;ChartForm&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.small&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.medium&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.large&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.detail&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;BarChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;37&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;43&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;form&lt;/span&gt;: ChartForm.&lt;span class="pl-smi"&gt;small&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-watchos-support-for-bar-charts" class="anchor" aria-hidden="true" href="#watchos-support-for-bar-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WatchOS support for Bar charts:&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./Resources/watchos1.png"&gt;&lt;img src="./Resources/watchos1.png" alt="Pie Charts" title="Pie Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pie-charts" class="anchor" aria-hidden="true" href="#pie-charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pie charts&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./Resources/showcase4.png"&gt;&lt;img src="./Resources/showcase4.png" alt="Pie Charts" title="Pie Charts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can add a pie chart with the following code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;PieChartView&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: [&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;,&lt;span class="pl-c1"&gt;54&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;], &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;legend&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Legendary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; legend is optional&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Turn drop shadow off by adding to the Initialiser: &lt;code&gt;dropShadow: false&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>AppPear</author><guid isPermaLink="false">https://github.com/AppPear/ChartView</guid><pubDate>Mon, 10 Feb 2020 00:10:00 GMT</pubDate></item><item><title>misyobun/MSBBarChart #11 in Swift, Today</title><link>https://github.com/misyobun/MSBBarChart</link><description>&lt;p&gt;&lt;i&gt;MSBBarChart is an easy to use bar chart library for iOS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-msbbarchart" class="anchor" aria-hidden="true" href="#msbbarchart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MSBBarChart&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0a20791b459718bd10518162eac6d70bc5391420/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d694f532d6c69676874677265792e737667"&gt;&lt;img src="https://camo.githubusercontent.com/0a20791b459718bd10518162eac6d70bc5391420/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d694f532d6c69676874677265792e737667" alt="Platform" data-canonical-src="https://img.shields.io/badge/platform-iOS-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/MSBBarChart" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b797a052c49db41d5bf497b0efdb00862759a7c/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4d534242617243686172742e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/MSBBarChart.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/813e8345d5ca6f5cc9bea569be60d3899e712268/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e737667" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/komaji/GradientAnimationView/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MSBBarChart is an easy to use bar chart library for iOS.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/509448/73722607-38024600-476a-11ea-8806-cc4a9245ffd8.gif"&gt;&lt;img width="280" src="https://user-images.githubusercontent.com/509448/73722607-38024600-476a-11ea-8806-cc4a9245ffd8.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/509448/73723618-caa3e480-476c-11ea-8eb2-4e0424d6820f.png"&gt;&lt;img src="https://user-images.githubusercontent.com/509448/73723618-caa3e480-476c-11ea-8eb2-4e0424d6820f.png" alt="スクリーンショット 2020-02-04 16 38 16" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;MSBBarChart is available through CocoaPods. To install it, simply add the following line to your Podfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod 'MSBBarChart'
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager for Cocoa application.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate MSBBarChart into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "misyobun/MSBBarChart"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, run the following command to build the MetaRod framework:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ carthage update --platform iOS&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will then have to drag MSBBarChart.framework yourself into your project from the Carthage/Build folder.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>misyobun</author><guid isPermaLink="false">https://github.com/misyobun/MSBBarChart</guid><pubDate>Mon, 10 Feb 2020 00:11:00 GMT</pubDate></item><item><title>twostraws/whats-new-in-swift-5-2 #12 in Swift, Today</title><link>https://github.com/twostraws/whats-new-in-swift-5-2</link><description>&lt;p&gt;&lt;i&gt;An Xcode playground that demonstrates the new features introduced in Swift 5.2.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-whats-new-in-swift-52" class="anchor" aria-hidden="true" href="#whats-new-in-swift-52"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What’s new in Swift 5.2?&lt;/h1&gt;
&lt;p&gt;This is an Xcode playground that demonstrates the new features introduced in Swift 5.2:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Key Path Expressions as Functions&lt;/li&gt;
&lt;li&gt;Callable values of user-defined nominal types&lt;/li&gt;
&lt;li&gt;Subscripts can now declare default arguments&lt;/li&gt;
&lt;li&gt;New and improved diagnostics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is designed to complement my existing article &lt;a href="https://www.hackingwithswift.com/articles/212/whats-new-in-swift-5-2" rel="nofollow"&gt;What’s New in Swift 5.2&lt;/a&gt;. You might also want to read &lt;a href="https://www.hackingwithswift.com/articles/182/whats-new-in-swift-5-1" rel="nofollow"&gt;What’s New in Swift 5.1&lt;/a&gt; and &lt;a href="https://www.hackingwithswift.com/articles/126/whats-new-in-swift-5.0" rel="nofollow"&gt;What’s New in Swift 5.0&lt;/a&gt; . Alternatively, I have a whole website dedicated to tracking &lt;a href="https://www.whatsnewinswift.com" rel="nofollow"&gt;what's new in Swift&lt;/a&gt; – you should check it out at &lt;a href="https://www.whatsnewinswift.com" rel="nofollow"&gt;https://www.whatsnewinswift.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you hit problems or have questions, you're welcome to tweet me &lt;a href="https://twitter.com/twostraws" rel="nofollow"&gt;@twostraws&lt;/a&gt; or email &lt;a href="mailto:paul@hackingwithswift.com"&gt;paul@hackingwithswift.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="playground-screenshot.png"&gt;&lt;img src="playground-screenshot.png" alt="Screenshot of Xcode 11.4 running this playground." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>twostraws</author><guid isPermaLink="false">https://github.com/twostraws/whats-new-in-swift-5-2</guid><pubDate>Mon, 10 Feb 2020 00:12:00 GMT</pubDate></item><item><title>gonzalezreal/DefaultCodable #13 in Swift, Today</title><link>https://github.com/gonzalezreal/DefaultCodable</link><description>&lt;p&gt;&lt;i&gt;A convenient way to handle default values with Swift Codable types&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-defaultcodable" class="anchor" aria-hidden="true" href="#defaultcodable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DefaultCodable&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ab29f34b72a97a1dee84cf993b101dcf0ca4f36b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352e312d6f72616e67652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/ab29f34b72a97a1dee84cf993b101dcf0ca4f36b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352e312d6f72616e67652e737667" alt="Swift 5.1" data-canonical-src="https://img.shields.io/badge/Swift-5.1-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/package-manager" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57aa80b42087a088cdf607fb98c0224bccf1b441/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73706d2d636f6d70617469626c652d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Swift Package Manager" data-canonical-src="https://img.shields.io/badge/spm-compatible-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/gonzalezreal" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c95ea7cc007822fa19afcee7e06ff86479246958/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d40676f6e7a616c657a7265616c2d626c75652e7376673f7374796c653d666c6174" alt="Twitter: @gonzalezreal" data-canonical-src="https://img.shields.io/badge/twitter-@gonzalezreal-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DefaultCodable&lt;/strong&gt; is a Swift µpackage that provides a convenient way to define default values in &lt;code&gt;Codable&lt;/code&gt; types for properties that are &lt;strong&gt;not present or have a &lt;code&gt;nil&lt;/code&gt; value&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Consider a hypothetical model for Apple products., in which only the property &lt;code&gt;name&lt;/code&gt; is &lt;em&gt;required&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;ProductType&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;Codable&lt;/span&gt;, &lt;span class="pl-e"&gt;CaseIterable &lt;/span&gt;{
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;phone&lt;/span&gt;, &lt;span class="pl-c1"&gt;pad&lt;/span&gt;, &lt;span class="pl-c1"&gt;mac&lt;/span&gt;, &lt;span class="pl-c1"&gt;accesory&lt;/span&gt;
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
  &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; description&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; isAvailable&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; type&lt;span class="pl-k"&gt;:&lt;/span&gt; ProductType&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the &lt;code&gt;@Default&lt;/code&gt; property wrapper, we can provide default values for the properties not required and thus get rid of the optionals in our model.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Product&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
  &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  
  &lt;span class="pl-k"&gt;@Default&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Empty&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; description&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  
  &lt;span class="pl-k"&gt;@Default&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;True&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; isAvailable&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
  
  &lt;span class="pl-k"&gt;@Default&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;FirstCase&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; type&lt;span class="pl-k"&gt;:&lt;/span&gt; ProductType
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With that in place, we can safely decode the following JSON into a &lt;code&gt;Product&lt;/code&gt; type.&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;iPhone 11 Pro&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resulting &lt;code&gt;Product&lt;/code&gt; instance is using the default values for those properties not present in the JSON.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;▿ Product
- name : "iPhone 11 Pro"
- description : ""
- isAvailable : true
- type : ProductType.phone
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you encode the result back, the resulting JSON will be the same as the one we started with. The &lt;code&gt;@Default&lt;/code&gt; property wrapper will not encode the value if it is equal to the default value.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;@Default&lt;/code&gt; property wrapper takes a &lt;code&gt;DefaultValueProvider&lt;/code&gt; as a parameter. This type provides the default value when a value is not present or is &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;DefaultValueProvider&lt;/span&gt; {
  &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt; &lt;/span&gt;&amp;amp; &lt;span class="pl-e"&gt;Codable&lt;/span&gt;
  
  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; `&lt;span class="pl-k"&gt;default&lt;/span&gt;`&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;DefaultCodable&lt;/strong&gt; provides the following implementations for your convenience:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-empty" class="anchor" aria-hidden="true" href="#empty"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Empty&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;It provides an empty instance of a &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt; or any type that implements &lt;code&gt;RangeReplaceableCollection&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-true-and-false" class="anchor" aria-hidden="true" href="#true-and-false"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Provide &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; respectively for &lt;code&gt;Bool&lt;/code&gt; properties.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-zero-and-one" class="anchor" aria-hidden="true" href="#zero-and-one"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Zero&lt;/code&gt; and &lt;code&gt;One&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Provide &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; respectively for &lt;code&gt;Int&lt;/code&gt; properties.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-firstcase" class="anchor" aria-hidden="true" href="#firstcase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;FirstCase&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;It provides the first case of an &lt;code&gt;enum&lt;/code&gt; type as the default value. The &lt;code&gt;enum&lt;/code&gt; must implement the &lt;code&gt;CaseIterable&lt;/code&gt; protocol.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-default-values-for-custom-types" class="anchor" aria-hidden="true" href="#default-values-for-custom-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default values for custom types&lt;/h2&gt;
&lt;p&gt;Your custom type must implement the &lt;code&gt;DefaultValueProvider&lt;/code&gt; protocol to be compatible with the &lt;code&gt;@Default&lt;/code&gt; property wrapper.&lt;/p&gt;
&lt;p&gt;Consider the following type that models a role in a conversation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Role&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable&lt;/span&gt;, &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Hashable&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;RawRepresentable&lt;/span&gt; &lt;/span&gt;{
  &lt;span class="pl-k"&gt;let&lt;/span&gt; rawValue&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;

  &lt;span class="pl-k"&gt;init?&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;rawValue&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rawValue
  }

  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Role&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; bot &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Role&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bot&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we want the default role to be &lt;code&gt;user&lt;/code&gt;, we can implement &lt;code&gt;DefaultValueProvider&lt;/code&gt; as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Role&lt;/span&gt;: &lt;span class="pl-e"&gt;DefaultValueProvider &lt;/span&gt;{
  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; `&lt;span class="pl-k"&gt;default&lt;/span&gt;` &lt;span class="pl-k"&gt;=&lt;/span&gt; user
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With that in place, we can use the &lt;code&gt;@Default&lt;/code&gt; property wrapper in any type that has a property of type &lt;code&gt;Role&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;ChannelAccount&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
  &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  
  &lt;span class="pl-k"&gt;@Default&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Role&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; role&lt;span class="pl-k"&gt;:&lt;/span&gt; Role
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Using the Swift Package Manager&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Add &lt;strong&gt;DefaultCodable&lt;/strong&gt; as a dependency to your &lt;code&gt;Package.swift&lt;/code&gt; file. For more information, see the &lt;a href="https://github.com/apple/swift-package-manager/tree/master/Documentation"&gt;Swift Package Manager documentation&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.package(url: "https://github.com/gonzalezreal/DefaultCodable", from: "1.0.0")
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-help--feedback" class="anchor" aria-hidden="true" href="#help--feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help &amp;amp; Feedback&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gonzalezreal/DefaultCodable/issues/new"&gt;Open an issue&lt;/a&gt; if you need help, if you found a bug, or if you want to discuss a feature request.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gonzalezreal/DefaultCodable/pull/new/master"&gt;Open a PR&lt;/a&gt; if you want to make some change to &lt;code&gt;DefaultCodable&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Contact &lt;a href="https://twitter.com/gonzalezreal" rel="nofollow"&gt;@gonzalezreal&lt;/a&gt; on Twitter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gonzalezreal</author><guid isPermaLink="false">https://github.com/gonzalezreal/DefaultCodable</guid><pubDate>Mon, 10 Feb 2020 00:13:00 GMT</pubDate></item><item><title>amirdew/CollectionViewPagingLayout #14 in Swift, Today</title><link>https://github.com/amirdew/CollectionViewPagingLayout</link><description>&lt;p&gt;&lt;i&gt;Simple layout for make paging with UICollectionView.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-collectionviewpaginglayout" class="anchor" aria-hidden="true" href="#collectionviewpaginglayout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CollectionViewPagingLayout&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org/pods/CollectionViewPagingLayout" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/13af63e5f8046176a4480cc62f288dcc18ca248c/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f436f6c6c656374696f6e56696577506167696e674c61796f75742e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/CollectionViewPagingLayout.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/CollectionViewPagingLayout" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d32188b8add6b4c718f1c705aef8975a6a8ada8/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f436f6c6c656374696f6e56696577506167696e674c61796f75742e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/CollectionViewPagingLayout.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/CollectionViewPagingLayout" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2fc454e95703c2e0f3c975fa6688ee470f929705/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f436f6c6c656374696f6e56696577506167696e674c61796f75742e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/CollectionViewPagingLayout.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-preview" class="anchor" aria-hidden="true" href="#preview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preview&lt;/h2&gt;
&lt;p&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3038e7f82b0a067af6c2d0419d1e92c9a9ebf5b4/68747470733a2f2f616d69722e6170702f6769742f666c6f776c61796f75745f707265766965772e676966"&gt;&lt;img width="375" src="https://camo.githubusercontent.com/3038e7f82b0a067af6c2d0419d1e92c9a9ebf5b4/68747470733a2f2f616d69722e6170702f6769742f666c6f776c61796f75745f707265766965772e676966" data-canonical-src="https://amir.app/git/flowlayout_preview.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c295b857580354a492085d6906f628c606e739c7/68747470733a2f2f616d69722e6170702f6769742f67616c6c6572795f707265766965772e676966"&gt;&lt;img width="375" src="https://camo.githubusercontent.com/c295b857580354a492085d6906f628c606e739c7/68747470733a2f2f616d69722e6170702f6769742f67616c6c6572795f707265766965772e676966" data-canonical-src="https://amir.app/git/gallery_preview.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/386fb5787a74fa1afdaa8ccfd2e2d7207543abd8/68747470733a2f2f616d69722e6170702f6769742f636172645f737461636b5f707265766965772e676966"&gt;&lt;img width="800" src="https://camo.githubusercontent.com/386fb5787a74fa1afdaa8ccfd2e2d7207543abd8/68747470733a2f2f616d69722e6170702f6769742f636172645f737461636b5f707265766965772e676966" data-canonical-src="https://amir.app/git/card_stack_preview.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;A custom &lt;code&gt;UICollectionViewLayout&lt;/code&gt; that gives you the ability to apply transforms easily on the cells&lt;br&gt;
by conforming your cell class to &lt;code&gt;TransformableView&lt;/code&gt; protocol you will get a &lt;code&gt;progress&lt;/code&gt; value and you can use it to change the cell view.&lt;br&gt;
You can see the usage by looking into the example source code.&lt;br&gt;
More examples will be added.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-add-to-your-project" class="anchor" aria-hidden="true" href="#add-to-your-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add to your project&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cocoapods&lt;/h4&gt;
&lt;p&gt;CollectionViewPagingLayout is available through &lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;. To install
it, simply add the following line to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CollectionViewPagingLayout&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h4&gt;
&lt;p&gt;Just add all the files under &lt;code&gt;Lib&lt;/code&gt; directory to your project&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;make sure you imported the library if you use cocoapods&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;CollectionViewPagingLayout&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Set the layout for collection view:
(in most cases you want a paging effect so make sure you enable it)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; layout &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CollectionViewPagingLayout&lt;/span&gt;()
collectionView.&lt;span class="pl-smi"&gt;collectionViewLayout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; layout
collectionView.&lt;span class="pl-smi"&gt;isPagingEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; enabling paging effect&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Here you can set &lt;code&gt;numberOfVisibleItems&lt;/code&gt;, by default it's null and that means it will load all of the cells at a time&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;layout.&lt;span class="pl-smi"&gt;numberOfVisibleItems&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Now you just need to conform your &lt;code&gt;UICollectionViewCell&lt;/code&gt; class to &lt;code&gt;TransformableView&lt;/code&gt; and start implementing your custom transforms&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;progress&lt;/code&gt; is a float value that represents current position of the cell.&lt;br&gt;
When it's &lt;code&gt;0&lt;/code&gt; means the current position of the cell is exactly in the center of your collection view.&lt;br&gt;
the value could be negative or positive and that represents the distance to the center of your collection view.&lt;br&gt;
for instance &lt;code&gt;1&lt;/code&gt; means the distance between the center of the cell and the center of your collection view is equal to your collection view width.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;MyCollectionViewCell&lt;/span&gt;: &lt;span class="pl-e"&gt;TransformableView &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;transform&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;progress&lt;/span&gt;&lt;/span&gt;: CGFloat) {
      &lt;span class="pl-k"&gt;...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;you can start with a simple transform like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;MyCollectionViewCell&lt;/span&gt;: &lt;span class="pl-e"&gt;TransformableView &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;transform&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;progress&lt;/span&gt;&lt;/span&gt;: CGFloat) {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; transform &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CGAffineTransform&lt;/span&gt;(&lt;span class="pl-c1"&gt;translationX&lt;/span&gt;: bounds.&lt;span class="pl-smi"&gt;width&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; progress, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
        &lt;span class="pl-k"&gt;let&lt;/span&gt; alpha &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;abs&lt;/span&gt;(progress)

        contentView.&lt;span class="pl-smi"&gt;subviews&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;transform&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; transform }
        contentView.&lt;span class="pl-smi"&gt;alpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; alpha
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations&lt;/h2&gt;
&lt;p&gt;You need to specify the number of visible cells since this layout gives you the flexibility to show the next and previous cells.&lt;br&gt;
By default, the layout loads all of the cells in the collection view frame and that means it keeps all of them in memory.
You can specify the number of cells that you need to show at a time by considering your design.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;CollectionViewPagingLayout is available under the MIT license. See LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>amirdew</author><guid isPermaLink="false">https://github.com/amirdew/CollectionViewPagingLayout</guid><pubDate>Mon, 10 Feb 2020 00:14:00 GMT</pubDate></item><item><title>p0deje/Maccy #15 in Swift, Today</title><link>https://github.com/p0deje/Maccy</link><description>&lt;p&gt;&lt;i&gt;Lightweight clipboard manager for macOS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9f543c337f5efda09b09c75e7011e11e63ec9a52/68747470733a2f2f6d616363792e6170702f696d672f6d616363792f4c6f676f2e737667"&gt;&lt;img width="100px" src="https://camo.githubusercontent.com/9f543c337f5efda09b09c75e7011e11e63ec9a52/68747470733a2f2f6d616363792e6170702f696d672f6d616363792f4c6f676f2e737667" alt="Logo" data-canonical-src="https://maccy.app/img/maccy/Logo.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;h1&gt;&lt;a id="user-content-----maccy--" class="anchor" aria-hidden="true" href="#----maccy--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
    &lt;a href="https://maccy.app/" rel="nofollow"&gt;Maccy&lt;/a&gt;
  &lt;/h1&gt;
&lt;/div&gt;
&lt;p&gt;Maccy is a lightweight clipboard manager for macOS. It keeps the history of what you copy
and lets you quickly navigate, search, and use previous clipboard contents.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install"&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customization"&gt;Customization&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#automatically-start-at-login"&gt;Automatically Start at Login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#change-default-settings"&gt;Change Default Settings&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#popup-hotkey"&gt;Popup Hotkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#history-size"&gt;History Size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#show/hide-icon-in-status-bar"&gt;Show/Hide Icon in Status Bar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#automatically-paste-by-default"&gt;Automatically Paste by Default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enable/disable-fuzzy-search"&gt;Enable/Disable Fuzzy Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ignore-copied-items"&gt;Ignore Copied Items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#show/hide-search"&gt;Show/Hide Search Field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#show/hide-title"&gt;Show/Hide Title&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#update"&gt;Update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-yet-another-clipboard-manager"&gt;Why Yet Another Clipboard Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ci"&gt;CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Lightweight and fast&lt;/li&gt;
&lt;li&gt;Keyboard-first&lt;/li&gt;
&lt;li&gt;Secure and private&lt;/li&gt;
&lt;li&gt;Native UI&lt;/li&gt;
&lt;li&gt;Open source and free&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;Download the latest version from the &lt;a href="https://github.com/p0deje/Maccy/releases/latest"&gt;releases&lt;/a&gt; page, or use &lt;a href="https://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew cask install maccy&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;kbd&gt;COMMAND (⌘)&lt;/kbd&gt; + &lt;kbd&gt;SHIFT (⇧)&lt;/kbd&gt; + &lt;kbd&gt;C&lt;/kbd&gt; to popup Maccy or click on its icon in the menu bar.&lt;/li&gt;
&lt;li&gt;Type what you want to find.&lt;/li&gt;
&lt;li&gt;To select the history item you wish to copy, press &lt;kbd&gt;ENTER&lt;/kbd&gt;, or click the item, or use &lt;kbd&gt;COMMAND (⌘)&lt;/kbd&gt; + &lt;code&gt;n&lt;/code&gt; shortcut.&lt;/li&gt;
&lt;li&gt;To choose the history item and paste, press &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;ENTER&lt;/kbd&gt;, or &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;CLICK&lt;/kbd&gt; the item, or use &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;code&gt;n&lt;/code&gt; shortcut.&lt;/li&gt;
&lt;li&gt;To delete the history item, press &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;DELETE (⌫)&lt;/kbd&gt;.&lt;/li&gt;
&lt;li&gt;To see the full text of the history item, wait a couple of seconds for tooltip.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-automatically-start-at-login" class="anchor" aria-hidden="true" href="#automatically-start-at-login"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatically Start at Login&lt;/h3&gt;
&lt;p&gt;Select the "Launch at login" option or add Maccy to your "Login items".&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-change-default-settings" class="anchor" aria-hidden="true" href="#change-default-settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Default Settings&lt;/h3&gt;
&lt;p&gt;To change default settings, use the following commands in Terminal.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-popup-hotkey" class="anchor" aria-hidden="true" href="#popup-hotkey"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Popup Hotkey&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write org.p0deje.Maccy hotKey control+option+m &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; default is command+shift+c&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-history-size" class="anchor" aria-hidden="true" href="#history-size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;History Size&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write org.p0deje.Maccy historySize 100 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; default is 200&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-showhide-icon-in-status-bar" class="anchor" aria-hidden="true" href="#showhide-icon-in-status-bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Show/Hide Icon in Status Bar&lt;/h4&gt;
&lt;p&gt;To hide you can simply drag the icon away from the status bar with &lt;kbd&gt;COMMAND (⌘)&lt;/kbd&gt; pressed.
To recover the icon, re-open Maccy while it's already running.&lt;/p&gt;
&lt;p&gt;You can also control visibility using configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write org.p0deje.Maccy showInStatusBar &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; default is true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Don't forget to restart Maccy after using &lt;code&gt;defaults&lt;/code&gt; command!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-automatically-paste-by-default" class="anchor" aria-hidden="true" href="#automatically-paste-by-default"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatically Paste by Default&lt;/h4&gt;
&lt;p&gt;Select and paste in one go.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write org.p0deje.Maccy pasteByDefault &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; default is false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-enabledisable-fuzzy-search" class="anchor" aria-hidden="true" href="#enabledisable-fuzzy-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enable/Disable Fuzzy Search&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write org.p0deje.Maccy fuzzySearch &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; default is false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that enabling fuzzy search will slow down when searching through the long history items list (200+).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-ignore-copied-items" class="anchor" aria-hidden="true" href="#ignore-copied-items"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignore Copied Items&lt;/h4&gt;
&lt;p&gt;You can tell Maccy to ignore all copied items:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write org.p0deje.Maccy ignoreEvents &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; default is false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is useful if you have some workflow for copying sensitive data. You can set &lt;code&gt;ignoreEvents&lt;/code&gt; to true, copy the data and set &lt;code&gt;ignoreEvents&lt;/code&gt; back to false.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-showhide-search" class="anchor" aria-hidden="true" href="#showhide-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Show/Hide Search&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write org.p0deje.Maccy hideSearch &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; default is false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-showhide-title" class="anchor" aria-hidden="true" href="#showhide-title"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Show/Hide Title&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;defaults write org.p0deje.Maccy hideTitle &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; default is false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-update" class="anchor" aria-hidden="true" href="#update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update&lt;/h2&gt;
&lt;p&gt;Download and reinstall the latest version from the &lt;a href="https://github.com/p0deje/Maccy/releases/latest"&gt;releases&lt;/a&gt; page, or use &lt;a href="https://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew cask upgrade maccy
open -a Maccy&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-why-yet-another-clipboard-manager" class="anchor" aria-hidden="true" href="#why-yet-another-clipboard-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Yet Another Clipboard Manager&lt;/h2&gt;
&lt;p&gt;There are dozens of similar applications out there, so why build another?
Over the past years since I moved from Linux to macOS, I struggled to find
a clipboard manager that is as free and simple as &lt;a href="http://parcellite.sourceforge.net" rel="nofollow"&gt;Parcellite&lt;/a&gt;,
but I couldn't. So I've decided to build one.&lt;/p&gt;
&lt;p&gt;Also, I wanted to learn Swift and get acquainted with macOS application development.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ci" class="anchor" aria-hidden="true" href="#ci"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CI&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://app.bitrise.io/app/716921b669780314" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/298ff03f09c47dcdc56ab9c88c0b97517c6c32b9/68747470733a2f2f6170702e626974726973652e696f2f6170702f373136393231623636393738303331342f7374617475732e7376673f746f6b656e3d33704d694362356470467a6c4f2d376a5459744f3351266272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://app.bitrise.io/app/716921b669780314/status.svg?token=3pMiCb5dpFzlO-7jTYtO3Q&amp;amp;branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="./LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>p0deje</author><guid isPermaLink="false">https://github.com/p0deje/Maccy</guid><pubDate>Mon, 10 Feb 2020 00:15:00 GMT</pubDate></item><item><title>HeroTransitions/Hero #16 in Swift, Today</title><link>https://github.com/HeroTransitions/Hero</link><description>&lt;p&gt;&lt;i&gt;Elegant transition library for iOS &amp; tvOS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/dff8b6dffa1dd8feac1646f287ad2a84672cdc1c/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f343237643566322f5265736f75726365732f4865726f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/dff8b6dffa1dd8feac1646f287ad2a84672cdc1c/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f343237643566322f5265736f75726365732f4865726f2e737667" width="388" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/427d5f2/Resources/Hero.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hero&lt;/strong&gt; is a library for building iOS view controller transitions. It provides a declarative layer on top of the UIKit's cumbersome transition APIs—making custom transitions an easy task for developers.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/d3b5245fd8c28562b4ed49b00a5260b87c84f63f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d436f6d70617469626c652d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-Compatible-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/e502cdc2b27c1f2b2590f061d37b984ba3957c26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d3041374346352e7376673f7374796c653d666c6174" alt="Accio supported" data-canonical-src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/HeroTransitions/Hero" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/659010d73086f2969103f83e1b145b6179f9a9f8/68747470733a2f2f636f6465636f762e696f2f67682f4865726f5472616e736974696f6e732f4865726f2f6272616e63682f646576656c6f702f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/HeroTransitions/Hero/branch/develop/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/Hero" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf8389447aeff6e5c60eb9e980dc8c797e85dcec/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4865726f2e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/Hero.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lkzhao/Hero/blob/master/LICENSE?raw=true"&gt;&lt;img src="https://camo.githubusercontent.com/17e1f9f731e5bc33f745a0755b2c0f573a621920/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f4865726f2e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/Hero.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2acca656fb46139b261ec013b5dad205172fdcd4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f58636f64652d392e302532422d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/2acca656fb46139b261ec013b5dad205172fdcd4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f58636f64652d392e302532422d626c75652e737667" alt="Xcode 9.0+" data-canonical-src="https://img.shields.io/badge/Xcode-9.0%2B-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1d276aa371242346c77c3a5b8db34beaa2014722/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f694f532d382e302532422d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/1d276aa371242346c77c3a5b8db34beaa2014722/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f694f532d382e302532422d626c75652e737667" alt="iOS 8.0+" data-canonical-src="https://img.shields.io/badge/iOS-8.0%2B-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/988c4fe7435163e2c97239a8c6482771451ffa26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d342e302532422d6f72616e67652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/988c4fe7435163e2c97239a8c6482771451ffa26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d342e302532422d6f72616e67652e737667" alt="Swift 4.0+" data-canonical-src="https://img.shields.io/badge/Swift-4.0%2B-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lkzhao/Hero/blob/master/README.zh-cn.md"&gt;&lt;img src="https://camo.githubusercontent.com/c7bf3c5f6156fa70173bbc7ddee4cfae107e746f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545342542382541442545362539362538372d524541444d452d626c75652e7376673f7374796c653d666c6174" alt="中文 README" data-canonical-src="https://img.shields.io/badge/%E4%B8%AD%E6%96%87-README-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=NT5F7Y2MPV7RE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/abbdd7bf97ae7919db5962b255f40aded5189c4f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d626c75652e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Donate-PayPal-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ad3b44a1f8c9ad51ba120b6281b03335bd78bb22/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f66656174757265732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/ad3b44a1f8c9ad51ba120b6281b03335bd78bb22/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f66656174757265732e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/features.svg" style="max-width:100%;"&gt;&lt;/a&gt;      
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f5211ae92678aa22b6edf2d18e08b0dce63bcaa4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f6665617475726573322e737667"&gt;&lt;img src="https://camo.githubusercontent.com/f5211ae92678aa22b6edf2d18e08b0dce63bcaa4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f6665617475726573322e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/features2.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hero is similar to Keynote's &lt;strong&gt;Magic Move&lt;/strong&gt;. It checks the &lt;code&gt;heroID&lt;/code&gt; property on all source and destination views. Every matched view pair is then automatically transitioned from its old state to its new state.&lt;/p&gt;
&lt;p&gt;Hero can also construct animations for unmatched views. It is easy to define these animations via the &lt;code&gt;heroModifiers&lt;/code&gt; property. Hero will run these animations alongside the &lt;strong&gt;Magic Move&lt;/strong&gt; animations. All of these animations can be &lt;strong&gt;interactively controlled&lt;/strong&gt; by user gestures.&lt;/p&gt;
&lt;p&gt;At view controller level, Hero provides several template transitions that you can set through &lt;code&gt;heroModalAnimationType&lt;/code&gt;, &lt;code&gt;heroNavigationAnimationType&lt;/code&gt;, and &lt;code&gt;heroTabBarAnimationType&lt;/code&gt;. These can be used as the foundation of your custom transitions. Combine with &lt;code&gt;heroID&lt;/code&gt; &amp;amp; &lt;code&gt;heroModifiers&lt;/code&gt; to make your own unique transitions.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/737194a3442f67b2066bd1be40d0ced772c158a1/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/737194a3442f67b2066bd1be40d0ced772c158a1/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e732e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/defaultAnimations.svg" style="max-width:100%;"&gt;&lt;/a&gt;      
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d1829c3cbb5e7c49b109e458ef95ec9079650d69/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e73322e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d1829c3cbb5e7c49b109e458ef95ec9079650d69/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e73322e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/defaultAnimations2.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;By default, Hero provides &lt;strong&gt;dynamic duration&lt;/strong&gt; based on the &lt;a href="https://material.io/guidelines/motion/duration-easing.html" rel="nofollow"&gt;Material Design Motion Guide&lt;/a&gt;. Duration is automatically determined by changes to distance and size—saving you the hassle, while providing consistent and delightful animations.&lt;/p&gt;
&lt;p&gt;Hero doesn't make any assumptions about how the view is built or structured. It won't modify any of your views' states other than hiding them during the animation. This makes it work with &lt;strong&gt;Auto Layout&lt;/strong&gt;, &lt;strong&gt;programmatic layout&lt;/strong&gt;, &lt;strong&gt;UICollectionView&lt;/strong&gt; (without modifying its layout object), &lt;strong&gt;UITableView&lt;/strong&gt;, &lt;strong&gt;UINavigationController&lt;/strong&gt;, &lt;strong&gt;UITabBarController&lt;/strong&gt;, etc...&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example-gallery" class="anchor" aria-hidden="true" href="#example-gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Gallery&lt;/h2&gt;
&lt;p&gt;Checkout the &lt;a href="http://lkzhao.com/2016/12/28/hero.html" rel="nofollow"&gt;Example Gallery Blog Post&lt;/a&gt; for a general idea of what you can achieve with &lt;strong&gt;Hero&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage-example-1" class="anchor" aria-hidden="true" href="#usage-example-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage Example 1&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/22d05ffa3ebcdabc0e46885d905a4958313c7a46/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f73696d706c652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/22d05ffa3ebcdabc0e46885d905a4958313c7a46/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f73696d706c652e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/simple.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-1" class="anchor" aria-hidden="true" href="#view-controller-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 1&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;redView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ironMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
blackView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;batMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-2" class="anchor" aria-hidden="true" href="#view-controller-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 2&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;isEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
redView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ironMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
blackView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;batMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
whiteView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [.&lt;span class="pl-c1"&gt;translate&lt;/span&gt;(&lt;span class="pl-c1"&gt;y&lt;/span&gt;:&lt;span class="pl-c1"&gt;100&lt;/span&gt;)]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage-example-2" class="anchor" aria-hidden="true" href="#usage-example-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage Example 2&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c2589bdfe5341efcf64810cf7f10ac93d2670bd4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f616476616e6365642e737667"&gt;&lt;img src="https://camo.githubusercontent.com/c2589bdfe5341efcf64810cf7f10ac93d2670bd4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f616476616e6365642e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/advanced.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-1-1" class="anchor" aria-hidden="true" href="#view-controller-1-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 1&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;greyView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;skyWalker&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-2-1" class="anchor" aria-hidden="true" href="#view-controller-2-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 2&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;isEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
greyView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;skyWalker&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; collectionView is the parent view of all red cells&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;collectionView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [.&lt;span class="pl-smi"&gt;cascade&lt;/span&gt;]
&lt;span class="pl-k"&gt;for&lt;/span&gt; cell &lt;span class="pl-k"&gt;in&lt;/span&gt; redCells {
    cell.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [.&lt;span class="pl-smi"&gt;fade&lt;/span&gt;, .&lt;span class="pl-c1"&gt;scale&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can do these in the &lt;strong&gt;storyboard&lt;/strong&gt; too!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2d49bd077657da42c4e1fdad85b13817248a6e0b/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f617264566965772e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/2d49bd077657da42c4e1fdad85b13817248a6e0b/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f617264566965772e706e67" width="267px" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/master/Resources/storyboardView.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0851b58271877dc1ef5a8be2f3143e6713c75fa3/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f61726456696577436f6e74726f6c6c65722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0851b58271877dc1ef5a8be2f3143e6713c75fa3/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f61726456696577436f6e74726f6c6c65722e706e67" width="267px" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/master/Resources/storyboardViewController.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Add the following entry to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hero&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Don't forget to &lt;code&gt;import Hero&lt;/code&gt; in every file you'd like to use Hero.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Add the following entry to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="text"&gt;&lt;code&gt;github "HeroTransitions/Hero"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run &lt;code&gt;carthage update&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If this is your first time using Carthage in the project, you'll need to go through some additional steps as explained &lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;over at Carthage&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-accio" class="anchor" aria-hidden="true" href="#accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accio&lt;/h3&gt;
&lt;p&gt;Add the following to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/HeroTransitions/Hero.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.4.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, add &lt;code&gt;Hero&lt;/code&gt; to your App targets dependencies like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;target&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;App&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hero&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    ]
),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;accio update&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;To integrate using Apple's Swift package manager, add the following as a dependency to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/HeroTransitions/Hero.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.3.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then specify &lt;code&gt;"Hero"&lt;/code&gt; as a dependency of the Target in which you wish to use Hero.
Here's an example &lt;code&gt;PackageDescription&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:4.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;products&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;library&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ],
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/HeroTransitions/Hero.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.5.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    ],
    &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hero&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Drag the &lt;strong&gt;Sources&lt;/strong&gt; folder anywhere in your project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentations" class="anchor" aria-hidden="true" href="#documentations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentations&lt;/h2&gt;
&lt;p&gt;Checkout the &lt;strong&gt;&lt;a href="https://github.com/lkzhao/Hero/wiki/Usage-Guide"&gt;WIKI PAGES (Usage Guide)&lt;/a&gt;&lt;/strong&gt; for documentations.&lt;/p&gt;
&lt;p&gt;For more up-to-date ones, please see the header-doc. (use &lt;strong&gt;alt+click&lt;/strong&gt; in Xcode)
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/02c17d97708bc697e2f9ce4d6de9f674df21611f/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f686561646572446f632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/02c17d97708bc697e2f9ce4d6de9f674df21611f/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f686561646572446f632e706e67" width="521px" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/master/Resources/headerDoc.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-interactive-transition-tutorials" class="anchor" aria-hidden="true" href="#interactive-transition-tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interactive Transition Tutorials&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://lkzhao.com/2017/02/05/hero-interactive-transition.html" rel="nofollow"&gt;Interactive transitions with Hero (Part 1)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-not-able-to-use-hero-transition-even-when-selfheroisenabled-is-set-to-true" class="anchor" aria-hidden="true" href="#not-able-to-use-hero-transition-even-when-selfheroisenabled-is-set-to-true"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Not able to use Hero transition even when &lt;code&gt;self.hero.isEnabled&lt;/code&gt; is set to true&lt;/h3&gt;
&lt;p&gt;Make sure that you have also enabled &lt;code&gt;self.hero.isEnabled&lt;/code&gt; on the navigation controller if you are doing a push/pop inside the navigation controller.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-views-being-covered-by-another-matched-view-during-the-transition" class="anchor" aria-hidden="true" href="#views-being-covered-by-another-matched-view-during-the-transition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Views being covered by another matched view during the transition&lt;/h3&gt;
&lt;p&gt;Matched views use global coordinate space while unmatched views use local coordinate space by default. Local coordinate spaced views might be covered by other global coordinate spaced views. To solve this, use the &lt;code&gt;useGlobalCoordinateSpace&lt;/code&gt; modifier on the views being covered. Checkout &lt;a href="https://github.com/lkzhao/Hero/wiki/Coordinate-Space"&gt;Coordinate Space Wiki page&lt;/a&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-push-animation-is-shown-along-side-my-custom-animation" class="anchor" aria-hidden="true" href="#push-animation-is-shown-along-side-my-custom-animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Push animation is shown along side my custom animation&lt;/h3&gt;
&lt;p&gt;This is the default animation for navigation controller provided by Hero. To disable the push animation, set &lt;code&gt;self.hero.navigationAnimationType&lt;/code&gt; to &lt;code&gt;.fade&lt;/code&gt; or &lt;code&gt;.none&lt;/code&gt; on the navigation controller.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-use-a-different-default-animation-when-dismissing" class="anchor" aria-hidden="true" href="#how-do-i-use-a-different-default-animation-when-dismissing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I use a different default animation when dismissing&lt;/h3&gt;
&lt;p&gt;You can use the animation type &lt;code&gt;.selectBy(presenting:dismissing)&lt;/code&gt; to specify a different default animation for dismiss.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modalAnimationType&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;selectBy&lt;/span&gt;(&lt;span class="pl-c1"&gt;presenting&lt;/span&gt;:.&lt;span class="pl-smi"&gt;zoom&lt;/span&gt;, &lt;span class="pl-c1"&gt;dismissing&lt;/span&gt;:.&lt;span class="pl-smi"&gt;zoomOut&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;We welcome any contributions. Please read the &lt;a href="https://github.com/lkzhao/Hero/wiki/Contribution-Guide"&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>HeroTransitions</author><guid isPermaLink="false">https://github.com/HeroTransitions/Hero</guid><pubDate>Mon, 10 Feb 2020 00:16:00 GMT</pubDate></item><item><title>Clipy/Clipy #17 in Swift, Today</title><link>https://github.com/Clipy/Clipy</link><description>&lt;p&gt;&lt;i&gt;Clipboard extension app for macOS.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="./Resources/clipy_logo.png"&gt;&lt;img src="./Resources/clipy_logo.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;&lt;a href="https://app.bitrise.io/app/4660f968baa24514" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/111679a25e1e840ac9c22fb127e963a8bfd8267d/68747470733a2f2f6170702e626974726973652e696f2f6170702f343636306639363862616132343531342f7374617475732e7376673f746f6b656e3d75385845727351737665537537342d50475752726477266272616e63683d646576656c6f70" alt="Build Status" data-canonical-src="https://app.bitrise.io/app/4660f968baa24514/status.svg?token=u8XErsQsveSu74-PGWRrdw&amp;amp;branch=develop" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#backers"&gt;&lt;img src="https://camo.githubusercontent.com/a4758483f9a47123090c021429d8d62ac1d6ba01/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b6572732f62616467652e737667" alt="OpenCollective" data-canonical-src="https://opencollective.com/clipy/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/21ddb107cf47b46668b366272619845199c1d4a5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f72732f62616467652e737667" alt="OpenCollective" data-canonical-src="https://opencollective.com/clipy/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Clipy is a Clipboard extension app for macOS.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Requirement&lt;/strong&gt;: macOS 10.10 Yosemite or higher&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Distribution Site&lt;/strong&gt; : &lt;a href="https://clipy-app.com" rel="nofollow"&gt;https://clipy-app.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5aa7278ded8ce031d3a2f9ac970de040085ecb2e/687474703a2f2f636c6970792d6170702e636f6d2f696d672f73637265656e73686f74312e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/5aa7278ded8ce031d3a2f9ac970de040085ecb2e/687474703a2f2f636c6970792d6170702e636f6d2f696d672f73637265656e73686f74312e706e67" width="400" data-canonical-src="http://clipy-app.com/img/screenshot1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-development-environment" class="anchor" aria-hidden="true" href="#development-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development Environment&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;macOS 10.13 High Sierra&lt;/li&gt;
&lt;li&gt;Xcode 9.3&lt;/li&gt;
&lt;li&gt;Swift 4.1&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-build" class="anchor" aria-hidden="true" href="#how-to-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Build&lt;/h3&gt;
&lt;ol start="0"&gt;
&lt;li&gt;Move to the project root directory&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Clipy.xcworkspace&lt;/code&gt; on Xcode.&lt;/li&gt;
&lt;li&gt;build.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-mavericks-support" class="anchor" aria-hidden="true" href="#mavericks-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mavericks Support&lt;/h3&gt;
&lt;p&gt;v1.1.2 is the final version of Mavericks support.&lt;br&gt;
&lt;a href="https://github.com/Clipy/Clipy/releases/tag/1.1.2"&gt;Download v1.1.2 release&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Fork it ( &lt;a href="https://github.com/Clipy/Clipy/fork"&gt;https://github.com/Clipy/Clipy/fork&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Commit your changes (&lt;code&gt;git commit -am 'Add some feature'&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Create a new Pull Request&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-localization-contributors" class="anchor" aria-hidden="true" href="#localization-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Localization Contributors&lt;/h3&gt;
&lt;p&gt;Clipy is looking for localization contributors.&lt;br&gt;
If you can cooperate, please see &lt;a href="https://github.com/Clipy/Clipy/blob/master/.github/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-distribution" class="anchor" aria-hidden="true" href="#distribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distribution&lt;/h3&gt;
&lt;p&gt;If you distribute derived work, especially in the Mac App Store, I ask you to follow two rules:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Don't use &lt;code&gt;Clipy&lt;/code&gt; and &lt;code&gt;ClipMenu&lt;/code&gt; as your product name.&lt;/li&gt;
&lt;li&gt;Follow the MIT license terms.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Thank you for your cooperation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h3&gt;
&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href="https://opencollective.com/clipy#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/clipy/backer/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/48df1bd8f4540cde2d1c4f1a0612a659807c9f75/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80b71b3643d1a21386d3a073ecd2457ec558893b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ca4f4584f3857911a6abfbc03b05da356884c01/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7276d726c965b293bf5dd58c97c411d654ea0198/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0360a54e6bdf552a95971ec825ee77396baa4702/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c5c960bbfc8121b996304f5eebe892342fcfeb0/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e4b35f94139ce354877305cdf7b295673578e84d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bcc7233b986de530e8b9ca7cbd819601a8b12132/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e66fc9b2a4b8cb5ef7c12c2f430645047223b3f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0835ad8790949bf3201e48a3db840162f058a222/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/10/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c62c11b5943de5bdc3e017e783939edb8d30f8b9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f31302f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/10/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/11/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2700155ab1fc8a85d4db0eb1fae742b97e62382a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f31312f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/11/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/12/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24cb543c3afeae248301826e3eef0ac75f3ed61a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f31322f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/12/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/13/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9574e608605d4aaa04c635a7b019e5e1def6b02e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f31332f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/13/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/14/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d0b84f016cc95ad311d5df41edd495eca6d46deb/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f31342f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/14/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/15/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2237638ec461a6f9c52e3b47cc730b931191d8d6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f31352f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/15/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/16/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/826082062ce24c91b5f79ab79b0d95c6eca9e11e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f31362f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/16/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/17/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/618ecfaca460c120a998e510d0c761727435735c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f31372f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/17/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/18/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e9f4080b1ba20ad4ec482c6e72207aaf3d73b5c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f31382f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/18/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/19/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/283aec571bf33102e36ecaf41e085b400dfee1c2/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f31392f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/19/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/20/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4de47274fd48e378b2167c6199c1fbfdd61b380/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f32302f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/20/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/21/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f76c221d994bf3c57d1a0dfda8bbe1a741e3808b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f32312f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/21/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/22/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d8329f0860d7f259c99defc4c672e6f92ca47c0d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f32322f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/22/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/23/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a2a067d52469aa03575792f64b4c57a3d8a622c8/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f32332f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/23/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/24/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52ba8d1616b1a3f907a6c433fbd56fa7e6491c05/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f32342f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/24/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/25/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/45f2b73f804a25c0feb9cb58a1ecedb099bf9848/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f32352f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/25/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/26/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e570e1ad984d7c2e32d57b33dcb6508a2fc44337/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f32362f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/26/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/27/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c174cb4c8630ea7a312ac5c70663085374ac78e9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f32372f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/27/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/28/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4554b1ad8a13f276b4467d16e56f60cc5d9e20b6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f32382f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/28/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/backer/29/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e64f3b4a69c3e5e699631fe5e1f92e29b7503d4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f6261636b65722f32392f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/backer/29/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h3&gt;
&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href="https://opencollective.com/clipy#sponsor" rel="nofollow"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/clipy/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3443c7efe889baa0ddd6bb122495042f970aed5f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/31e3d6fc9247e9ea85abcca8e471a43fccbc3e47/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/143c848f0d21a6f2fa96cd28fa918b55b534d0b3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3714ceb905de3a42e2057af8b188b40fe0b72fac/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aaf1960967fdf9f1d7da3ce89d8d87d9549f8eb3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3aff28662a354fe958fe09a438b8791ad5b5d113/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c3904cc7828f16f0641fdf561202beb77a09e1f1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d75a9eba98cd889feb411654406785feba25b185/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ba5bb8f000d63c99a35190d1e479acec23cd861c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7dea9ffb203502595d7c4a95d00e30f84894d415/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/10/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/61eb8a0290c0426e38feb4352a575d996a5114a6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f31302f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/10/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/11/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c42789f539d02208eb5dad550e3dbf3edd59b768/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f31312f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/11/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/12/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c6850347677d195d5b7c89143da387c04889e13/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f31322f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/12/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/13/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/015fb144da94b05c28557a6c1b1f4949378d01fe/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f31332f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/13/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/14/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0da5eadd6cff0bdf3d41e5480f82c814dd782094/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f31342f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/14/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/15/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99969d1e177ed132ab9428b30458e33e23088a42/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f31352f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/15/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/16/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6044198b7aa4fef6f023bffb58453dabba460340/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f31362f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/16/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/17/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/de263a8b3086a6f0d31c252a5a8e02d34d69585b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f31372f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/17/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/18/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7ae12f7453877a16deb1fb6d1087b614a47d820e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f31382f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/18/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/19/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7761232f44559f0a16d24d6794598b00672dae02/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f31392f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/19/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/20/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52e2a21beaad281cc3bd730ddc7da9d5a36837d4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f32302f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/20/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/21/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e652f4d211f7a7e9c838db9d2c0cc525ff252c3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f32312f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/21/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/22/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3f3ed23c008f99535d86bf731a07196038e6e90/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f32322f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/22/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/23/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/652e3dda7de9a938f5d262b9146acfeddea10d96/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f32332f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/23/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/24/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e2b5865b1f4e9e5d18732b934b1bde35445fd4e2/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f32342f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/24/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/25/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a894a803a77a474db8c552f6ae53b5e93e0e681d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f32352f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/25/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/26/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/69ed3606a2938328b818e8767f0753b31d8d0e87/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f32362f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/26/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/27/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/912d16b4ec178b4dc69bf8a1864652638f30fedf/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f32372f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/27/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/28/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/991e57926ecb7819e974cc2e738266b91dc5d300/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f32382f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/28/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/clipy/sponsor/29/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6ac04eeb6d4ad60b3206c7ecfb1d3e1e407dc045/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f636c6970792f73706f6e736f722f32392f6176617461722e737667" data-canonical-src="https://opencollective.com/clipy/sponsor/29/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-licence" class="anchor" aria-hidden="true" href="#licence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licence&lt;/h3&gt;
&lt;p&gt;Clipy is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;p&gt;Icons are copyrighted by their respective authors.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-special-thanks" class="anchor" aria-hidden="true" href="#special-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Thanks&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Thank you for &lt;a href="https://github.com/naotaka"&gt;@naotaka&lt;/a&gt; who have published &lt;a href="https://github.com/naotaka/ClipMenu"&gt;ClipMenu&lt;/a&gt; as OSS.&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Clipy</author><guid isPermaLink="false">https://github.com/Clipy/Clipy</guid><pubDate>Mon, 10 Feb 2020 00:17:00 GMT</pubDate></item><item><title>apple/swift-log #18 in Swift, Today</title><link>https://github.com/apple/swift-log</link><description>&lt;p&gt;&lt;i&gt;A Logging API for Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftlog" class="anchor" aria-hidden="true" href="#swiftlog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftLog&lt;/h1&gt;
&lt;p&gt;A Logging API package for Swift. Version &lt;code&gt;1.0.0&lt;/code&gt; requires Swift 5.0 but there is a version &lt;code&gt;0.x.y&lt;/code&gt; series available for Swift 4 to ease your transition towards Swift 5. If you intend to use or support SwiftLog for Swift 4, please check the &lt;a href="#help-i-need-swift-4"&gt;paragraph&lt;/a&gt; at the end of the document.&lt;/p&gt;
&lt;p&gt;First things first: This is the beginning of a community-driven open-source project actively seeking contributions, be it code, documentation, or ideas. Apart from contributing to &lt;code&gt;SwiftLog&lt;/code&gt; itself, there's another huge gap at the moment: &lt;code&gt;SwiftLog&lt;/code&gt; is an &lt;em&gt;API package&lt;/em&gt; which tries to establish a common API the ecosystem can use. To make logging really work for real-world workloads, we need &lt;code&gt;SwiftLog&lt;/code&gt;-compatible &lt;em&gt;logging backends&lt;/em&gt; which then either persist the log messages in files, render them in nicer colors on the terminal, or send them over to Splunk or ELK.&lt;/p&gt;
&lt;p&gt;What &lt;code&gt;SwiftLog&lt;/code&gt; provides today can be found in the &lt;a href="https://apple.github.io/swift-log/docs/current/Logging/Structs/Logger.html" rel="nofollow"&gt;API docs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;If you have a server-side Swift application, or maybe a cross-platform (for example Linux &amp;amp; macOS) app/library, and you would like to log, we think targeting this logging API package is a great idea. Below you'll find all you need to know to get started.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-adding-the-dependency" class="anchor" aria-hidden="true" href="#adding-the-dependency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding the dependency&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;SwiftLog&lt;/code&gt; is designed for Swift 5, the &lt;code&gt;1.0.0&lt;/code&gt; release requires Swift 5 (however we will soon tag a &lt;code&gt;0.x&lt;/code&gt; version that will work with Swift 4 for the transition period). To depend on the logging API package, you need to declare your dependency in your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/apple/swift-log.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and to your application/library target, add &lt;code&gt;"Logging"&lt;/code&gt; to your &lt;code&gt;dependencies&lt;/code&gt;, e.g. like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BestExampleApp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Logging&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-lets-log" class="anchor" aria-hidden="true" href="#lets-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let's log&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1) let's import the logging API package&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Logging&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2) we need to create a logger, the label works similarly to a DispatchQueue label&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; logger &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Logger&lt;/span&gt;(&lt;span class="pl-c1"&gt;label&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.BestExampleApp.main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3) we're now ready to use it&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;logger.&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-output" class="anchor" aria-hidden="true" href="#output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;2019-03-13T15:46:38+0000 info: Hello World!
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-default-logger-behavior" class="anchor" aria-hidden="true" href="#default-logger-behavior"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default &lt;code&gt;Logger&lt;/code&gt; behavior&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;SwiftLog&lt;/code&gt; provides for very basic console logging out-of-the-box by way of &lt;code&gt;StreamLogHandler&lt;/code&gt;. It is possible to switch the default output to &lt;code&gt;stderr&lt;/code&gt; like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;LoggingSystem.&lt;span class="pl-c1"&gt;bootstrap&lt;/span&gt;(StreamLogHandler.&lt;span class="pl-smi"&gt;standardError&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;StreamLogHandler&lt;/code&gt; is primarily a convenience only and does not provide any substantial customization. Library maintainers who aim to build their own logging backends for integration and consumption should implement the &lt;code&gt;LogHandler&lt;/code&gt; protocol directly as laid out in &lt;a href="#on-the-implementation-of-a-logging-backend-a-loghandler"&gt;the "On the implementation of a logging backend" section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For further information, please check the &lt;a href="https://apple.github.io/swift-log/docs/current/Logging/Structs/Logger.html" rel="nofollow"&gt;API documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-selecting-a-logging-backend-implementation-applications-only" class="anchor" aria-hidden="true" href="#selecting-a-logging-backend-implementation-applications-only"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selecting a logging backend implementation (applications only)&lt;/h4&gt;
&lt;p&gt;As the API has just launched, not many implementations exist yet. If you are interested in implementing one see the "Implementation considerations" section below explaining how to do so. List of existing SwiftLog API compatible libraries:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository&lt;/th&gt;
&lt;th&gt;Handler Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/IBM-Swift/HeliumLogger"&gt;IBM-Swift/HeliumLogger&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;a logging backend widely used in the Kitura ecosystem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ianpartridge/swift-log-syslog"&gt;ianpartridge/swift-log-&lt;strong&gt;syslog&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;a &lt;a href="https://en.wikipedia.org/wiki/Syslog" rel="nofollow"&gt;syslog&lt;/a&gt; backend&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Adorkable/swift-log-format-and-pipe"&gt;Adorkable/swift-log-&lt;strong&gt;format-and-pipe&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;a backend that allows customization of the output format and the resulting destination&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chrisaljoudi/swift-log-oslog"&gt;chrisaljoudi/swift-log-&lt;strong&gt;oslog&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;an OSLog &lt;a href="https://developer.apple.com/documentation/os/logging" rel="nofollow"&gt;Unified Logging&lt;/a&gt; backend for use on Apple platforms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Brainfinance/StackdriverLogging"&gt;Brainfinance/StackdriverLogging&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;a structured JSON logging backend for use on Google Cloud Platform with the &lt;a href="https://cloud.google.com/logging/docs/agent" rel="nofollow"&gt;Stackdriver logging agent&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/vapor/console-kit/"&gt;vapor/console-kit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;print log messages to a terminal with stylized (&lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code" rel="nofollow"&gt;ANSI&lt;/a&gt;) output&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/neallester/swift-log-testing"&gt;neallester/swift-log-testing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;provides access to log messages for use in assertions (within test targets)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Your library?&lt;/td&gt;
&lt;td&gt;&lt;a href="https://forums.swift.org/c/server" rel="nofollow"&gt;Get in touch!&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-an-api-package" class="anchor" aria-hidden="true" href="#what-is-an-api-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is an API package?&lt;/h2&gt;
&lt;p&gt;Glad you asked. We believe that for the Swift on Server ecosystem, it's crucial to have a logging API that can be adopted by anybody so a multitude of libraries from different parties can all log to a shared destination. More concretely this means that we believe all the log messages from all libraries end up in the same file, database, Elastic Stack/Splunk instance, or whatever you may choose.&lt;/p&gt;
&lt;p&gt;In the real-world however, there are so many opinions over how exactly a logging system should behave, what a log message should be formatted like, and where/how it should be persisted. We think it's not feasible to wait for one logging package to support everything that a specific deployment needs whilst still being easy enough to use and remain performant. That's why we decided to cut the problem in half:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;a logging API&lt;/li&gt;
&lt;li&gt;a logging backend implementation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This package only provides the logging API itself and therefore &lt;code&gt;SwiftLog&lt;/code&gt; is a 'logging API package'. &lt;code&gt;SwiftLog&lt;/code&gt; (using &lt;code&gt;LoggingSystem.bootstrap&lt;/code&gt;) can be configured to choose any compatible logging backend implementation. This way packages can adopt the API and the &lt;em&gt;application&lt;/em&gt; can choose any compatible logging backend implementation without requiring any changes from any of the libraries.&lt;/p&gt;
&lt;p&gt;Just for completeness sake: This API package does actually include an overly simplistic and non-configurable logging backend implementation which simply writes all log messages to &lt;code&gt;stdout&lt;/code&gt;. The reason to include this overly simplistic logging backend implementation is to improve the first-time usage experience. Let's assume you start a project and try out &lt;code&gt;SwiftLog&lt;/code&gt; for the first time, it's just a whole lot better to see something you logged appear on &lt;code&gt;stdout&lt;/code&gt; in a simplistic format rather than nothing happening at all. For any real-world application, we advise configuring another logging backend implementation that logs in the style you like.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-core-concepts" class="anchor" aria-hidden="true" href="#the-core-concepts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The core concepts&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-loggers" class="anchor" aria-hidden="true" href="#loggers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Loggers&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Logger&lt;/code&gt;s are used to emit log messages and therefore the most important type in &lt;code&gt;SwiftLog&lt;/code&gt;, so their use should be as simple as possible.  Most commonly, they are used to emit log messages in a certain log level. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logging an informational message&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;logger.&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ouch, something went wrong&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;logger.&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Houston, we have a problem: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;problem&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-log-levels" class="anchor" aria-hidden="true" href="#log-levels"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Log levels&lt;/h3&gt;
&lt;p&gt;The following log levels are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;trace&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;info&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;notice&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;warning&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;critical&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The log level of a given logger can be changed, but the change will only affect the specific logger you changed it on. You could say the &lt;code&gt;Logger&lt;/code&gt; is a &lt;em&gt;value type&lt;/em&gt; regarding the log level.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-logging-metadata" class="anchor" aria-hidden="true" href="#logging-metadata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging metadata&lt;/h3&gt;
&lt;p&gt;Logging metadata is metadata that can be attached to loggers to add information that is crucial when debugging a problem. In servers, the usual example is attaching a request UUID to a logger that will then be present on all log messages logged with that logger. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; logger &lt;span class="pl-k"&gt;=&lt;/span&gt; logger
logger[&lt;span class="pl-c1"&gt;metadataKey&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;request-uuid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;UUID&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
logger.&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will print&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2019-03-13T18:30:02+0000 info: request-uuid=F8633013-3DD8-481C-9256-B296E43443ED hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;with the default logging backend implementation that ships with &lt;code&gt;SwiftLog&lt;/code&gt;. Needless to say, the format is fully defined by the logging backend you choose.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-on-the-implementation-of-a-logging-backend-a-loghandler" class="anchor" aria-hidden="true" href="#on-the-implementation-of-a-logging-backend-a-loghandler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;On the implementation of a logging backend (a &lt;code&gt;LogHandler&lt;/code&gt;)&lt;/h2&gt;
&lt;p&gt;Note: If you don't want to implement a custom logging backend, everything in this section is probably not very relevant, so please feel free to skip.&lt;/p&gt;
&lt;p&gt;To become a compatible logging backend that all &lt;code&gt;SwiftLog&lt;/code&gt; consumers can use, you need to do two things: 1) Implement a type (usually a &lt;code&gt;struct&lt;/code&gt;) that implements &lt;code&gt;LogHandler&lt;/code&gt;, a protocol provided by &lt;code&gt;SwiftLog&lt;/code&gt; and 2) instruct &lt;code&gt;SwiftLog&lt;/code&gt; to use your logging backend implementation.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;LogHandler&lt;/code&gt; or logging backend implementation is anything that conforms to the following protocol&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;LogHandler&lt;/span&gt; {
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;log&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;level&lt;/span&gt;&lt;/span&gt;: Logger.Level, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;message&lt;/span&gt;&lt;/span&gt;: Logger.Message, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;metadata&lt;/span&gt;&lt;/span&gt;: Logger.Metadata&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;file&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;function&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;line&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;UInt&lt;/span&gt;)

    &lt;span class="pl-k"&gt;subscript&lt;/span&gt;(metadataKey &lt;span class="pl-c1"&gt;_&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Logger.&lt;span class="pl-smi"&gt;Metadata&lt;/span&gt;.&lt;span class="pl-c1"&gt;Value&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; &lt;span class="pl-k"&gt;set&lt;/span&gt; }

    &lt;span class="pl-k"&gt;var&lt;/span&gt; metadata&lt;span class="pl-k"&gt;:&lt;/span&gt; Logger.&lt;span class="pl-smi"&gt;Metadata&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; &lt;span class="pl-k"&gt;set&lt;/span&gt; }

    &lt;span class="pl-k"&gt;var&lt;/span&gt; logLevel&lt;span class="pl-k"&gt;:&lt;/span&gt; Logger.&lt;span class="pl-smi"&gt;Level&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; &lt;span class="pl-k"&gt;set&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instructing &lt;code&gt;SwiftLog&lt;/code&gt; to use your logging backend as the one the whole application (including all libraries) should use is very simple:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LoggingSystem.bootstrap(MyLogHandler.init)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-implementation-considerations" class="anchor" aria-hidden="true" href="#implementation-considerations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implementation considerations&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;LogHandler&lt;/code&gt;s control most parts of the logging system:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-under-control-of-a-loghandler" class="anchor" aria-hidden="true" href="#under-control-of-a-loghandler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Under control of a &lt;code&gt;LogHandler&lt;/code&gt;&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;LogHandler&lt;/code&gt;s control the two crucial pieces of &lt;code&gt;Logger&lt;/code&gt; configuration, namely:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;log level (&lt;code&gt;logger.logLevel&lt;/code&gt; property)&lt;/li&gt;
&lt;li&gt;logging metadata (&lt;code&gt;logger[metadataKey:]&lt;/code&gt; and &lt;code&gt;logger.metadata&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the system to work, however, it is important that &lt;code&gt;LogHandler&lt;/code&gt; treat the configuration as &lt;em&gt;value types&lt;/em&gt;. This means that &lt;code&gt;LogHandler&lt;/code&gt;s should be &lt;code&gt;struct&lt;/code&gt;s and a change in log level or logging metadata should only affect the very &lt;code&gt;LogHandler&lt;/code&gt; it was changed on.&lt;/p&gt;
&lt;p&gt;However, in special cases, it is acceptable that a &lt;code&gt;LogHandler&lt;/code&gt; provides some global log level override that may affect all &lt;code&gt;LogHandler&lt;/code&gt;s created.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-emitting" class="anchor" aria-hidden="true" href="#emitting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emitting&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;emitting the log message itself&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-not-under-control-of-loghandlers" class="anchor" aria-hidden="true" href="#not-under-control-of-loghandlers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Not under control of &lt;code&gt;LogHandler&lt;/code&gt;s&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;LogHandler&lt;/code&gt;s do not control if a message should be logged or not. &lt;code&gt;Logger&lt;/code&gt; will only invoke the &lt;code&gt;log&lt;/code&gt; function of a &lt;code&gt;LogHandler&lt;/code&gt; if &lt;code&gt;Logger&lt;/code&gt; determines that a log message should be emitted given the configured log level.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-swiftlog-for-swift-4" class="anchor" aria-hidden="true" href="#swiftlog-for-swift-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftLog for Swift 4&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-help-i-need-swift-4"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;First of, SwiftLog 1.0.x and SwiftLog 0.0.x are mostly compatible so don't be afraid. In fact, SwiftLog 0.0.0 is the same source code as SwiftLog 1.0.0 with a few changes made to make it Swift 4 compatible.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-can-i-use-swiftlog-0-library-or-application" class="anchor" aria-hidden="true" href="#how-can-i-use-swiftlog-0-library-or-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can I use SwiftLog 0 library or application?&lt;/h3&gt;
&lt;p&gt;If you have a application or a library that needs to be compatible with both Swift 4 and 5, then we recommend using the following in your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/apple/swift-log.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;Version&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Version&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will instruct SwiftPM to allow any SwiftLog 0 and any SwiftLog 1 version. This is an unusual form because usually packages don't support multiple major versions of a package. Because SwiftLog 0 and 1 are mostly compatible however, this should not be a real issue and will enable everybody to get the best. If compiled with a Swift 4 compiler, this will be a SwiftLog 0 version but if compiled with a Swift 5 compiler everybody will get the best experience and performance delivered by SwiftLog 1.&lt;/p&gt;
&lt;p&gt;In most cases, there is only one thing you need to remember: Always use &lt;em&gt;string literals&lt;/em&gt; and &lt;em&gt;string interpolations&lt;/em&gt; in the log methods and don't rely on the fact that SwiftLog 0 also allows &lt;code&gt;String&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Good:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;logger.&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bad:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; message &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
logger.&lt;span class="pl-c1"&gt;info&lt;/span&gt;(message)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have a &lt;code&gt;String&lt;/code&gt; that you received from elsewhere, please use&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;logger.&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;stringIAlreadyHave&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more details, have a look in the next section.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-what-are-the-differences-between-swiftlog-1-and-0" class="anchor" aria-hidden="true" href="#what-are-the-differences-between-swiftlog-1-and-0"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What are the differences between SwiftLog 1 and 0?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;SwiftLog 0 does not use &lt;code&gt;@inlinable&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Apart from accepting &lt;code&gt;Logger.Message&lt;/code&gt; for the message, SwiftLog 0 has a &lt;code&gt;String&lt;/code&gt; overload.&lt;/li&gt;
&lt;li&gt;In SwiftLog 0, &lt;code&gt;Logger.Message&lt;/code&gt; is not &lt;code&gt;ExpressibleByStringLiteral&lt;/code&gt; or &lt;code&gt;ExpressibleByStringInterpolation&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In SwiftLog 0, &lt;code&gt;Logger.MetadataValue&lt;/code&gt; is not &lt;code&gt;ExpressibleByStringLiteral&lt;/code&gt; or &lt;code&gt;ExpressibleByStringInterpolation&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-why-these-differences" class="anchor" aria-hidden="true" href="#why-these-differences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why these differences?&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-inlinable" class="anchor" aria-hidden="true" href="#inlinable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;@inlinable&lt;/h5&gt;
&lt;p&gt;Swift 4.0 &amp;amp; 4.1 don't support &lt;code&gt;@inlinable&lt;/code&gt;, so SwiftLog 0 can't use them.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-loggermessage" class="anchor" aria-hidden="true" href="#loggermessage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logger.Message&lt;/h5&gt;
&lt;p&gt;Because all Swift 4 versions don't have a (non-deprecated) mechanism for a type to be &lt;code&gt;ExpressibleByStringInterpolation&lt;/code&gt; we couldn't make &lt;code&gt;Logger.Message&lt;/code&gt; expressible by string literals. Unfortunately, the most basic form of our logging API is &lt;code&gt;logger.info("Hello \(world)")&lt;/code&gt;. For this to work however, &lt;code&gt;"Hello \(world)"&lt;/code&gt; needs to be accepted and because we can't make &lt;code&gt;Logger.Message&lt;/code&gt; &lt;code&gt;ExpressibleByStringInterpolation&lt;/code&gt; we added an overload for all the logging methods to also accept &lt;code&gt;String&lt;/code&gt;. In most cases, you won't even notice that with SwiftLog 0 you're creating a &lt;code&gt;String&lt;/code&gt; (which is then transformed to a &lt;code&gt;Logger.Message&lt;/code&gt;) and with SwiftLog 1 you're creating a &lt;code&gt;Logger.Message&lt;/code&gt; directly. That is because both &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;Logger.Message&lt;/code&gt; will accept all forms of string literals and string interpolations.
Unfortunately, there is code that will make this seemingly small difference visible. If you write&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; message &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
logger.&lt;span class="pl-c1"&gt;info&lt;/span&gt;(message)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then this will only work in SwiftLog 0 and not in SwiftLog 1. Why? Because SwiftLog 1 will want a &lt;code&gt;Logger.Message&lt;/code&gt; but &lt;code&gt;let message = "Hello world"&lt;/code&gt; will make &lt;code&gt;message&lt;/code&gt; to be of type &lt;code&gt;String&lt;/code&gt; and in SwiftLog 1, the logging methods don't accept &lt;code&gt;String&lt;/code&gt;s.&lt;/p&gt;
&lt;p&gt;So if you intend to be compatible with SwiftLog 0 and 1 at the same time, please make sure to always use a &lt;em&gt;string literal&lt;/em&gt; or a &lt;em&gt;string interpolation&lt;/em&gt; inside of the logging methods.&lt;/p&gt;
&lt;p&gt;In the case that you already have a &lt;code&gt;String&lt;/code&gt; handy that you want to log, don't worry at all, just use&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; message &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
logger.&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;message&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and again, you will be okay with SwiftLog 0 and 1.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-design" class="anchor" aria-hidden="true" href="#design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design&lt;/h2&gt;
&lt;p&gt;This logging API was designed with the contributors to the Swift on Server community and approved by the &lt;a href="https://swift.org/server/" rel="nofollow"&gt;SSWG (Swift Server Work Group)&lt;/a&gt; to the 'sandbox level' of the SSWG's &lt;a href="https://github.com/swift-server/sswg/blob/master/process/incubation.md"&gt;incubation process&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forums.swift.org/t/logging/16027" rel="nofollow"&gt;pitch&lt;/a&gt;, &lt;a href="https://forums.swift.org/t/discussion-server-logging-api/18834" rel="nofollow"&gt;discussion&lt;/a&gt;, &lt;a href="https://forums.swift.org/t/feedback-server-logging-api-with-revisions/19375" rel="nofollow"&gt;feedback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.swift.org/t/logging-levels-for-swifts-server-side-logging-apis-and-new-os-log-apis/20365" rel="nofollow"&gt;log levels&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift-log</guid><pubDate>Mon, 10 Feb 2020 00:18:00 GMT</pubDate></item><item><title>securing/IOSSecuritySuite #19 in Swift, Today</title><link>https://github.com/securing/IOSSecuritySuite</link><description>&lt;p&gt;&lt;i&gt;iOS platform security &amp; anti-tampering Swift library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./logo.png"&gt;&lt;img src="./logo.png" alt="ISS logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-by-_r3ggi" class="anchor" aria-hidden="true" href="#by-_r3ggi"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;by &lt;a href="https://twitter.com/_r3ggi" rel="nofollow"&gt;@_r3ggi&lt;/a&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-iss-description" class="anchor" aria-hidden="true" href="#iss-description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ISS Description&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="earth_asia" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30f.png"&gt;🌏&lt;/g-emoji&gt; iOS Security Suite is an advanced and easy-to-use platform security &amp;amp; anti-tampering library written in pure Swift! If you are developing for iOS and you want to protect your app according to the OWASP &lt;a href="https://github.com/OWASP/owasp-masvs"&gt;MASVS&lt;/a&gt; standard, chapter v8, then this library could save you a lot of time. &lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;What ISS detects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jailbreak (even the iOS 11+ with brand new indicators! &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt;)&lt;/li&gt;
&lt;li&gt;Attached debugger 👨🏻‍🚀&lt;/li&gt;
&lt;li&gt;If an app was run in emulator &lt;g-emoji class="g-emoji" alias="alien" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f47d.png"&gt;👽&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Common reverse engineering tools running on the device &lt;g-emoji class="g-emoji" alias="telescope" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f52d.png"&gt;🔭&lt;/g-emoji&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;There are 4 ways you can start using IOSSecuritySuite&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-1-add-source" class="anchor" aria-hidden="true" href="#1-add-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Add source&lt;/h3&gt;
&lt;p&gt;Add &lt;code&gt;IOSSecuritySuite/*.swift&lt;/code&gt; files to your project&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2-setup-with-cocoapods" class="anchor" aria-hidden="true" href="#2-setup-with-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Setup with CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pod 'IOSSecuritySuite'&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3-setup-with-carthage" class="anchor" aria-hidden="true" href="#3-setup-with-carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Setup with Carthage&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;github "securing/IOSSecuritySuite"&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-4-setup-with-swift-package-manager" class="anchor" aria-hidden="true" href="#4-setup-with-swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. Setup with Swift Package Manager&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/securing/IOSSecuritySuite.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.5.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-update-infoplist" class="anchor" aria-hidden="true" href="#update-infoplist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update Info.plist&lt;/h3&gt;
&lt;p&gt;After adding ISS to your project, you will also need to update your main Info.plist. There is a check in jailbreak detection module that uses &lt;code&gt;canOpenURL(_:)&lt;/code&gt; method and &lt;a href="https://developer.apple.com/documentation/uikit/uiapplication/1622952-canopenurl" rel="nofollow"&gt;requires&lt;/a&gt; specyfing URLs that will be queried.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;key&lt;/span&gt;&amp;gt;LSApplicationQueriesSchemes&amp;lt;/&lt;span class="pl-ent"&gt;key&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;array&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class="pl-ent"&gt;string&lt;/span&gt;&amp;gt;cydia&amp;lt;/&lt;span class="pl-ent"&gt;string&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class="pl-ent"&gt;string&lt;/span&gt;&amp;gt;undecimus&amp;lt;/&lt;span class="pl-ent"&gt;string&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class="pl-ent"&gt;string&lt;/span&gt;&amp;gt;sileo&amp;lt;/&lt;span class="pl-ent"&gt;string&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;array&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-jailbreak-detector-module" class="anchor" aria-hidden="true" href="#jailbreak-detector-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jailbreak detector module&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The simplest method&lt;/strong&gt; returns True/False if you just want to know if the device is jailbroken or jailed&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; IOSSecuritySuite.&lt;span class="pl-c1"&gt;amIJailbroken&lt;/span&gt;() {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This device is jailbroken&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This device is not jailbroken&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Verbose&lt;/strong&gt;, if you also want to know what indicators were identified&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; jailbreakStatus &lt;span class="pl-k"&gt;=&lt;/span&gt; IOSSecuritySuite.&lt;span class="pl-c1"&gt;amIJailbrokenWithFailMessage&lt;/span&gt;()
&lt;span class="pl-k"&gt;if&lt;/span&gt; jailbreakStatus.&lt;span class="pl-smi"&gt;jailbroken&lt;/span&gt; {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This device is jailbroken&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Because: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;jailbreakStatus.&lt;span class="pl-smi"&gt;failMessage&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This device is not jailbroken&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The failMessage is a String containing comma separated indicators as shown on the example below:
&lt;code&gt;Cydia URL scheme detected, Suspicious file exists: /Library/MobileSubstrate/MobileSubstrate.dylib, Fork was able to create a new process&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Verbose &amp;amp; filterable&lt;/strong&gt;, if you also want to for example identify devices that were jailbroken in the past, but now are jailed&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; jailbreakStatus &lt;span class="pl-k"&gt;=&lt;/span&gt; IOSSecuritySuite.&lt;span class="pl-c1"&gt;amIJailbrokenWithFailedChecks&lt;/span&gt;()
&lt;span class="pl-k"&gt;if&lt;/span&gt; jailbreakStatus.&lt;span class="pl-smi"&gt;jailbroken&lt;/span&gt; {
   &lt;span class="pl-k"&gt;if&lt;/span&gt; (jailbreakStatus.&lt;span class="pl-smi"&gt;failedChecks&lt;/span&gt;.&lt;span class="pl-c1"&gt;contains&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;check&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;existenceOfSuspiciousFiles&lt;/span&gt; }) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; (jailbreakStatus.&lt;span class="pl-smi"&gt;failedChecks&lt;/span&gt;.&lt;span class="pl-c1"&gt;contains&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;check&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;suspiciousFilesCanBeOpened&lt;/span&gt; }) {
         &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This is real jailbroken device&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-debbuger-detector-module" class="anchor" aria-hidden="true" href="#debbuger-detector-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debbuger detector module&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; amIDebugged &lt;span class="pl-k"&gt;=&lt;/span&gt; IOSSecuritySuite.&lt;span class="pl-c1"&gt;amIDebugged&lt;/span&gt;() &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-deny-debugger-at-all" class="anchor" aria-hidden="true" href="#deny-debugger-at-all"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deny debugger at all&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;IOSSecuritySuite.&lt;span class="pl-c1"&gt;denyDebugger&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-emulator-detector-module" class="anchor" aria-hidden="true" href="#emulator-detector-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emulator detector module&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; runInEmulator &lt;span class="pl-k"&gt;=&lt;/span&gt; IOSSecuritySuite.&lt;span class="pl-c1"&gt;amIRunInEmulator&lt;/span&gt;() &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-reverse-engineering-tools-detector-module" class="anchor" aria-hidden="true" href="#reverse-engineering-tools-detector-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reverse engineering tools detector module&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; amIReverseEngineered &lt;span class="pl-k"&gt;=&lt;/span&gt; IOSSecuritySuite.&lt;span class="pl-c1"&gt;amIReverseEngineered&lt;/span&gt;() &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-security-considerations" class="anchor" aria-hidden="true" href="#security-considerations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security considerations&lt;/h2&gt;
&lt;p&gt;Before using this and other platform security checkers you have to understand that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Including this tool in your project is not the only thing you should do in order to improve your app security! You can read a general mobile security whitepaper &lt;a href="https://www.securing.biz/en/mobile-application-security-best-practices/index.html" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Detecting if a device is jailbroken is done locally on the device. It means that every jailbreak detector may be bypassed (even this)!&lt;/li&gt;
&lt;li&gt;Swift code is considered to be harder to manipulate dynamically than Objective-C. Since this library was written in pure Swift, the IOSSecuritySuite methods shouldn't be exposed to Objective-C runtime (which makes it more difficult to bypass &lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;). You have to know that attacker is still able to MSHookFunction/MSFindSymbol Swift symbols and dynamically change Swift code execution flow.&lt;/li&gt;
&lt;li&gt;It's also a good idea to obfuscate the whole project code including this library. See &lt;a href="https://github.com/rockbruno/swiftshield"&gt;Swiftshield&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-️" class="anchor" aria-hidden="true" href="#contribution-️"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;p&gt;Yes, please! If you have a better idea or you just want to improve this project, please text me on &lt;a href="https://twitter.com/_r3ggi" rel="nofollow"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/wojciech-regula/" rel="nofollow"&gt;Linkedin&lt;/a&gt;. Pull requests are more than welcome!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-special-thanks-" class="anchor" aria-hidden="true" href="#special-thanks-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special thanks: 👏🏻&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kubajakowski"&gt;kubajakowski&lt;/a&gt; for pointing out the problem with &lt;code&gt;canOpenURL(_:)&lt;/code&gt; method&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olbartek"&gt;olbartek&lt;/a&gt; for code review and pull request&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benbahrenburg"&gt;benbahrenburg&lt;/a&gt; for various ISS improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fotiDim"&gt;fotiDim&lt;/a&gt; for adding new file paths to check&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gcharita"&gt;gcharita&lt;/a&gt; for adding the Swift Package Manager support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rynaardb"&gt;rynaardb&lt;/a&gt; for creating the &lt;code&gt;amIJailbrokenWithFailedChecks()&lt;/code&gt; method&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; File integrity checks&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Deny debugger&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;See the LICENSE file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;p&gt;While creating this tool I used:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="https://github.com/TheSwiftyCoder/JailBreak-Detection"&gt;https://github.com/TheSwiftyCoder/JailBreak-Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="https://github.com/abhinashjain/jailbreakdetection"&gt;https://github.com/abhinashjain/jailbreakdetection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="https://gist.github.com/ddrccw/8412847"&gt;https://gist.github.com/ddrccw/8412847&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="https://gist.github.com/bugaevc/4307eaf045e4b4264d8e395b5878a63b"&gt;https://gist.github.com/bugaevc/4307eaf045e4b4264d8e395b5878a63b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt; "iOS Application Security" by David Thiel&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>securing</author><guid isPermaLink="false">https://github.com/securing/IOSSecuritySuite</guid><pubDate>Mon, 10 Feb 2020 00:19:00 GMT</pubDate></item><item><title>apple/swift-numerics #20 in Swift, Today</title><link>https://github.com/apple/swift-numerics</link><description>&lt;p&gt;&lt;i&gt;Numerical APIs for Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swift-numerics" class="anchor" aria-hidden="true" href="#swift-numerics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Numerics&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Swift Numerics provides a set of modules that support numerical computing in Swift.
These modules fall broadly into two categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;API that is too specialized to go into the standard library, but which is sufficiently general to be centralized in a single common package.&lt;/li&gt;
&lt;li&gt;API that is under active development toward possible future inclusion in the standard library.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is some overlap between these two categories, and API that begins in the first category may migrate to the second as it matures and new uses are discovered.&lt;/p&gt;
&lt;p&gt;Swift Numerics modules are fine-grained; if you need support for Complex numbers, you can import the Complex module without pulling in everything else in the library as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Complex&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; z &lt;span class="pl-k"&gt;=&lt;/span&gt; Complex&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Double&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, there is also a top-level &lt;code&gt;Numerics&lt;/code&gt; module that simply re-exports the complete public interface of swift-numerics:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Numerics&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All swift-numerics API is now available&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Swift Numerics modules have minimal dependencies on other projects.
The current modules assume only the availability of the Swift and C standard libraries and the runtime support provided by compiler-rt.
Future expansion may assume the availability of other standard interfaces such as &lt;a href="https://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms" rel="nofollow"&gt;BLAS (Basic Linear Algebra Subprograms)&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/LAPACK" rel="nofollow"&gt;LAPACK (Linear Algebra Package)&lt;/a&gt;, but modules with more specialized dependencies (or dependencies that are not available on all platforms supported by Swift) belong in a separate package.&lt;/p&gt;
&lt;p&gt;Because we intend to make it possible to adopt Swift Numerics modules in the standard library at some future point, Swift Numerics uses the same license and contribution guidelines as the Swift project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-process" class="anchor" aria-hidden="true" href="#process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Process&lt;/h2&gt;
&lt;p&gt;Swift Numerics is a standalone library separate from the core Swift project.
In practice, it will act as a staging ground for some APIs that may eventually be incorporated into the Swift Standard Library, and when that happens such changes will be proposed to the Swift Standard Library using the established evolution process of the Swift project.&lt;/p&gt;
&lt;p&gt;Swift Numerics uses GitHub issues to track bugs and features. We use pull requests for development.&lt;/p&gt;
&lt;p&gt;To propose a new module:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Raise an issue with the [new module] tag.&lt;/li&gt;
&lt;li&gt;Raise a PR with an implementation sketch.&lt;/li&gt;
&lt;li&gt;Once you have some consensus, ask an admin to create a feature branch against which PRs can be raised.&lt;/li&gt;
&lt;li&gt;When the design has stabilized and is functional enough to be useful, raise a PR to merge the new module to master.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To propose a new feature for an existing module:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Raise an issue with the [enhancement] tag.&lt;/li&gt;
&lt;li&gt;Raise a PR with your implementation, and discuss the implementation there.&lt;/li&gt;
&lt;li&gt;Once there is a consensus that the new feature is desirable and the design is suitable, it can be merged.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To fix a bug, or make smaller improvements:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Raise a PR with your change. Be sure to add test coverage for whatever changes you are making.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Questions about how to use Swift Numerics modules, or issues that are not clearly bugs can be discussed in the &lt;a href="https://forums.swift.org/c/related-projects/swift-numerics" rel="nofollow"&gt;"Swift Numerics" section of the Swift forums.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="Sources/Real/README.md"&gt;Real&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Sources/Complex/README.md"&gt;Complex&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-future-expansion" class="anchor" aria-hidden="true" href="#future-expansion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Future expansion&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/3"&gt;Approximate Equality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/4"&gt;Large Fixed-Width Integers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/5"&gt;Arbitrary-Precision Integers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/6"&gt;Shaped Arrays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/7"&gt;Decimal Floating-point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/8"&gt;Float16&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift-numerics</guid><pubDate>Mon, 10 Feb 2020 00:20:00 GMT</pubDate></item><item><title>NSHipster/DBSCAN #21 in Swift, Today</title><link>https://github.com/NSHipster/DBSCAN</link><description>&lt;p&gt;&lt;i&gt;Density-based spatial clustering of applications with noise&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dbscan" class="anchor" aria-hidden="true" href="#dbscan"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DBSCAN&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/NSHipster/DBSCAN/workflows/CI/badge.svg"&gt;&lt;img src="https://github.com/NSHipster/DBSCAN/workflows/CI/badge.svg" alt="CI" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt;ensity-&lt;strong&gt;b&lt;/strong&gt;ased &lt;strong&gt;s&lt;/strong&gt;patial &lt;strong&gt;c&lt;/strong&gt;lustering of &lt;strong&gt;a&lt;/strong&gt;pplications with &lt;strong&gt;n&lt;/strong&gt;oise
(&lt;a href="https://en.wikipedia.org/wiki/DBSCAN" rel="nofollow"&gt;DBSCAN&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;DBSCAN&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;simd&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; input&lt;span class="pl-k"&gt;:&lt;/span&gt; [SIMD3&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Double&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [[ &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt; ],
                              [ &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;11&lt;/span&gt;, &lt;span class="pl-c1"&gt;21&lt;/span&gt; ],
                              [ &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt; ],
                              [ &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;33&lt;/span&gt;, &lt;span class="pl-c1"&gt;59&lt;/span&gt; ],
                              [ &lt;span class="pl-c1"&gt;21&lt;/span&gt;, &lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-c1"&gt;56&lt;/span&gt; ],
                              [ &lt;span class="pl-c1"&gt;59&lt;/span&gt;, &lt;span class="pl-c1"&gt;77&lt;/span&gt;, &lt;span class="pl-c1"&gt;101&lt;/span&gt; ],
                              [ &lt;span class="pl-c1"&gt;58&lt;/span&gt;, &lt;span class="pl-c1"&gt;79&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt; ],
                              [ &lt;span class="pl-c1"&gt;58&lt;/span&gt;, &lt;span class="pl-c1"&gt;76&lt;/span&gt;, &lt;span class="pl-c1"&gt;102&lt;/span&gt; ],
                              [ &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-c1"&gt;70&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt; ],
                              [ &lt;span class="pl-c1"&gt;500&lt;/span&gt;, &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-c1"&gt;202&lt;/span&gt;],
                              [ &lt;span class="pl-c1"&gt;500&lt;/span&gt;, &lt;span class="pl-c1"&gt;302&lt;/span&gt;, &lt;span class="pl-c1"&gt;204&lt;/span&gt; ]]

&lt;span class="pl-k"&gt;let&lt;/span&gt; dbscan &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DBSCAN&lt;/span&gt;(input)

#&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;swift&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;5.2&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; (clusters, outliers) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;dbscan&lt;/span&gt;(&lt;span class="pl-c1"&gt;epsilon&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;,
                                  &lt;span class="pl-c1"&gt;minimumNumberOfPoints&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
                                  &lt;span class="pl-c1"&gt;distanceFunction&lt;/span&gt;: simd.&lt;span class="pl-smi"&gt;distance&lt;/span&gt;)
#&lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift &amp;lt;5.2 requires explicit `callAsFunction` method name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; (clusters, outliers) &lt;span class="pl-k"&gt;=&lt;/span&gt; dbscan.&lt;span class="pl-c1"&gt;callAsFunction&lt;/span&gt;(&lt;span class="pl-c1"&gt;epsilon&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;, 
                                                 &lt;span class="pl-c1"&gt;minimumNumberOfPoints&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, 
                                                 &lt;span class="pl-c1"&gt;distanceFunction&lt;/span&gt;: simd.&lt;span class="pl-smi"&gt;distance&lt;/span&gt;)
#&lt;span class="pl-k"&gt;endif&lt;/span&gt;

&lt;span class="pl-c1"&gt;print&lt;/span&gt;(clusters)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ [0, 10, 20], [0, 11, 21], [0, 12, 20] ]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ [20, 33, 59], [21, 32, 56] ],&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ [58, 79, 100], [58, 76, 102], [59, 77, 101] ],&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ [500, 300, 202], [500, 302, 204] ],&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(outliers)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ [ 300, 70, 20 ] ]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Swift 5.1+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;Add the SwiftMarkup package to your target dependencies in &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/NSHipster/DBSCAN&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    ),
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run the &lt;code&gt;swift build&lt;/code&gt; command to build your project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;Mattt (&lt;a href="https://twitter.com/mattt" rel="nofollow"&gt;@mattt&lt;/a&gt;)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NSHipster</author><guid isPermaLink="false">https://github.com/NSHipster/DBSCAN</guid><pubDate>Mon, 10 Feb 2020 00:21:00 GMT</pubDate></item><item><title>apple/swift-package-manager #22 in Swift, Today</title><link>https://github.com/apple/swift-package-manager</link><description>&lt;p&gt;&lt;i&gt;The Package Manager for the Swift Programming Language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swift-package-manager-project" class="anchor" aria-hidden="true" href="#swift-package-manager-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager Project&lt;/h1&gt;
&lt;p&gt;The Swift Package Manager is a tool for managing distribution of source code, aimed at making it easy to share your code and reuse others’ code. The tool directly addresses the challenges of compiling and linking Swift packages, managing dependencies, versioning, and supporting flexible distribution and collaboration models.&lt;/p&gt;
&lt;p&gt;We’ve designed the system to make it easy to share packages on services like GitHub, but packages are also great for private personal development, sharing code within a team, or at any other granularity.&lt;/p&gt;
&lt;p&gt;Swift Package Manager includes a build system that can build for macOS and Linux. Xcode 11 integrates with libSwiftPM to provide support for iOS, watchOS, and tvOS platforms.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/apple/sourcekit-lsp"&gt;SourceKit-LSP&lt;/a&gt; project leverages libSwiftPM and provides Language Server Protocol implementation for editors that support LSP.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-requirements"&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#managing-swift-environments"&gt;Managing Swift Environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#choosing-a-swift-version"&gt;Choosing a Swift Version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#support"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributions"&gt;Contributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Please use &lt;a href="https://swift.org/getting-started/#using-the-package-manager" rel="nofollow"&gt;this guide&lt;/a&gt; for learning package manager basics.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;For Quick Help use the &lt;code&gt;swift package --help &lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;For extensive documentation on using Swift Package Manager, creating packages, and more, see &lt;a href="Documentation"&gt;Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For additional documentation on developing the Swift Package Manager itself, see &lt;a href="Documentation/Development.md"&gt;Documentation/Development&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Requirements&lt;/h2&gt;
&lt;p&gt;The package manager’s system requirements are the same as &lt;a href="https://github.com/apple/swift#system-requirements"&gt;those for Swift&lt;/a&gt; with the caveat that the package manager requires Git at runtime as well as build-time.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;The Swift Package Manager is included in Xcode 8.0 and all subsequent releases.&lt;/p&gt;
&lt;p&gt;The package manager is also available for other platforms as part of all &lt;a href="https://swift.org/download/" rel="nofollow"&gt;Snapshots available at swift.org&lt;/a&gt;, including snapshots for the latest versions built from &lt;code&gt;master&lt;/code&gt;. For installation instructions for downloaded snapshots, please see the &lt;a href="https://swift.org/getting-started/#installing-swift" rel="nofollow"&gt;Getting Started&lt;/a&gt; section of &lt;a href="https://swift.org" rel="nofollow"&gt;swift.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can verify your installation by typing &lt;code&gt;swift package --version&lt;/code&gt; in a terminal:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift package --version
Apple Swift Package Manager - ...&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-managing-swift-environments" class="anchor" aria-hidden="true" href="#managing-swift-environments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing Swift Environments&lt;/h3&gt;
&lt;p&gt;On macOS &lt;code&gt;/usr/bin/swift&lt;/code&gt; is just a stub that forwards invocations to the active
toolchain. Thus when you call &lt;code&gt;swift build&lt;/code&gt; it will use the swift defined by
your &lt;code&gt;TOOLCHAINS&lt;/code&gt; environment variable. This can be used to easily switch
between the default tools, and a development snapshot:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ xcrun --find swift
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift
$ swift --version
Apple Swift version 3.0
$ &lt;span class="pl-k"&gt;export&lt;/span&gt; TOOLCHAINS=swift
$ xcrun --find swift
/Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin/swift
$ swift --version
Swift version 3.0-dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use a specific toolchain you can set &lt;code&gt;TOOLCHAINS&lt;/code&gt; to the &lt;code&gt;CFBundleIdentifier&lt;/code&gt; in an &lt;code&gt;.xctoolchain&lt;/code&gt;’s Info.plist.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-choosing-a-swift-version" class="anchor" aria-hidden="true" href="#choosing-a-swift-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Choosing a Swift Version&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;SWIFT_EXEC&lt;/code&gt; environment variable specifies the &lt;code&gt;swiftc&lt;/code&gt; executable path used by &lt;code&gt;swift package&lt;/code&gt;. If it is not set, the package manager will try to locate it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In &lt;code&gt;swift-package&lt;/code&gt;'s parent directory.&lt;/li&gt;
&lt;li&gt;On macOS, by calling &lt;code&gt;xcrun --find swiftc&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;By searching the PATH.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;If you have any trouble with the package manager, help is available. We recommend:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://forums.swift.org/c/swift-users" rel="nofollow"&gt;Swift Forums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Our &lt;a href="http://bugs.swift.org" rel="nofollow"&gt;bug tracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When adding a bug to the tracker you should follow the bug reporting guidelines, they can be found in &lt;a href="./Documentation/Resources.md#reporting-a-good-swiftpm-bug"&gt;Resources.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you’re not comfortable sharing your question with the list, contact details for the code owners can be found in &lt;a href="CODEOWNERS"&gt;CODEOWNERS&lt;/a&gt;; however, the mailing list is usually the best place to go for help.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;To learn about the policies and best practices that govern contributions to the Swift project, please read the &lt;a href="https://swift.org/contributing/" rel="nofollow"&gt;Contributor Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are interested in contributing, please read the &lt;a href="Documentation/Internals/PackageManagerCommunityProposal.md"&gt;Community Proposal&lt;/a&gt;, which provides some context for decisions made in the current implementation and offers direction for the development of future features.&lt;/p&gt;
&lt;p&gt;Instructions for setting up the development environment are available &lt;a href="Documentation/Development.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Swift package manager uses &lt;a href="https://github.com/apple/swift-llbuild"&gt;llbuild&lt;/a&gt; as the underlying build system for compiling source files.  It is also open source and part of the Swift project.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2015 - 2019 Apple Inc. and the Swift project authors. Licensed under Apache License v2.0 with Runtime Library Exception.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://swift.org/LICENSE.txt" rel="nofollow"&gt;https://swift.org/LICENSE.txt&lt;/a&gt; for license information.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://swift.org/CONTRIBUTORS.txt" rel="nofollow"&gt;https://swift.org/CONTRIBUTORS.txt&lt;/a&gt; for Swift project authors.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift-package-manager</guid><pubDate>Mon, 10 Feb 2020 00:22:00 GMT</pubDate></item><item><title>LambdaSchool/ios-sprint-challenge-movie-list #23 in Swift, Today</title><link>https://github.com/LambdaSchool/ios-sprint-challenge-movie-list</link><description>&lt;p&gt;&lt;i&gt;Sprint challenge for Sprint 1 of Lambda's iOS course&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sprint-challenge-ios-fundamentals-1---movie-list" class="anchor" aria-hidden="true" href="#sprint-challenge-ios-fundamentals-1---movie-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sprint Challenge: iOS Fundamentals 1 - Movie List&lt;/h1&gt;
&lt;p&gt;This challenge allows you to practice the concepts and techniques learned over the past week and apply them in a concrete project. This Sprint explored iOS Basics. During this Sprint, you studied the Xcode IDE, Model-View-Controller, container controllers, and table views. In your challenge this week, you will demonstrate proficiency by creating an application that collects and lists your favorite movies.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-instructions" class="anchor" aria-hidden="true" href="#instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instructions&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Read these instructions carefully. Understand exactly what is expected &lt;em&gt;before&lt;/em&gt; starting this Sprint Challenge.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is an individual assessment. All work must be your own. Your challenge score is a measure of your ability to work independently using the material covered through this sprint. You need to demonstrate proficiency in the concepts and objectives introduced and practiced in preceding days.&lt;/p&gt;
&lt;p&gt;You are not allowed to collaborate during the Sprint Challenge. However, you are encouraged to follow the twenty-minute rule and seek support from your PM and Instructor in your cohort help channel on Slack. Your work reflects your proficiency in iOS and your command of the concepts and techniques in this first unit.&lt;/p&gt;
&lt;p&gt;You have three hours to complete this challenge. Plan your time accordingly.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-commits" class="anchor" aria-hidden="true" href="#commits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commits&lt;/h2&gt;
&lt;p&gt;Commit your code regularly and meaningfully. This helps both you (in case you ever need to return to old code for any number of reasons) and your project manager.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;In this challenge, you build an app that tracks and remembers your favorite movies. Your finished project looks something like this:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/16965587/56839007-c3df5d00-683d-11e9-95d8-b2d4efad47b7.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/16965587/56839007-c3df5d00-683d-11e9-95d8-b2d4efad47b7.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In meeting the minimum viable product (MVP) specifications listed below, your application will be able to add movies to a central model and then present them in a table view in a separate tab.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-set-up" class="anchor" aria-hidden="true" href="#project-set-up"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Set Up&lt;/h2&gt;
&lt;p&gt;This repository contains a basic project that includes art for your tab bars and a stylish launch screen. Use this project as the basis for your work.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-minimum-viable-product" class="anchor" aria-hidden="true" href="#minimum-viable-product"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Minimum Viable Product&lt;/h2&gt;
&lt;p&gt;Your finished project must include all of the following requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;Movie&lt;/code&gt; model object that has properties for:
&lt;ul&gt;
&lt;li&gt;The movie's name as a &lt;code&gt;String&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Whether it has been seen or not as a &lt;code&gt;Bool&lt;/code&gt;. You can set a default value for this property to &lt;code&gt;false&lt;/code&gt; if you want.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A view controller that shows a list of movies that the user has created. This should be a subclass of &lt;code&gt;UIViewController&lt;/code&gt; that has a &lt;code&gt;UITableView&lt;/code&gt; in it.&lt;/li&gt;
&lt;li&gt;The table view should use a custom &lt;code&gt;UITableViewCell&lt;/code&gt; subclass with a "Seen"/"Not Seen" button. Tapping the button toggles whether the user has seen the movie or not. (This should change the &lt;code&gt;Movie&lt;/code&gt;'s &lt;code&gt;Bool&lt;/code&gt; property that represents if it has been seen or not)&lt;/li&gt;
&lt;li&gt;A bar button item that segues to a new view controller. This new view controller allows the user to add new movies. The view controller should have a text field to put in the movie's name, and a button to save the movie.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In your solution, it is essential that you follow best practices and produce clean and professional results. Schedule time to review, refine, and assess your work and perform basic professional polishing including spell-checking and grammar-checking on your work. It is better to submit a challenge that meets MVP than one that attempts to much and does not.&lt;/p&gt;
&lt;p&gt;Validate your work through testing the app on the simulator and ensure that your code operates as designed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-stretch-problems" class="anchor" aria-hidden="true" href="#stretch-problems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stretch Problems&lt;/h2&gt;
&lt;p&gt;After finishing your required elements, you can push your work further. These goals may or may not be things you have learned in this module but they build on the material you just studied. Time allowing, stretch your limits and see if you can deliver on the following optional goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Users can swipe to delete movies in the table view.&lt;/li&gt;
&lt;li&gt;Introduce a way to edit the name of a movie.&lt;/li&gt;
&lt;li&gt;The list of movies is preserved between subsequent runs of your application&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>LambdaSchool</author><guid isPermaLink="false">https://github.com/LambdaSchool/ios-sprint-challenge-movie-list</guid><pubDate>Mon, 10 Feb 2020 00:23:00 GMT</pubDate></item><item><title>ra1028/DifferenceKit #24 in Swift, Today</title><link>https://github.com/ra1028/DifferenceKit</link><description>&lt;p&gt;&lt;i&gt;💻 A fast and flexible O(n) difference algorithm framework for Swift collection.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/ra1028/DifferenceKit/master/assets/sample.gif"&gt;&lt;img src="https://raw.githubusercontent.com/ra1028/DifferenceKit/master/assets/sample.gif" height="310" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/ra1028/DifferenceKit/master/assets/logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/ra1028/DifferenceKit/master/assets/logo.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h4 align="center"&gt;&lt;a id="user-content-a-fast-and-flexible-on-difference-algorithm-framework-for-swift-collectionthe-algorithm-is-optimized-based-on-the-paul-heckels-algorithm" class="anchor" aria-hidden="true" href="#a-fast-and-flexible-on-difference-algorithm-framework-for-swift-collectionthe-algorithm-is-optimized-based-on-the-paul-heckels-algorithm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
A fast and flexible O(n) difference algorithm framework for Swift collection.&lt;br&gt;
The algorithm is optimized based on the Paul Heckel's algorithm.
&lt;/h4&gt;
&lt;p align="center"&gt;
&lt;a href="https://developer.apple.com/swift" rel="nofollow"&gt;&lt;img alt="Swift5" src="https://camo.githubusercontent.com/f934669e08f59add74920d874abc95048395d59a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d5377696674352d6f72616e67652e737667" data-canonical-src="https://img.shields.io/badge/language-Swift5-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ra1028/DifferenceKit/releases/latest"&gt;&lt;img alt="Release" src="https://camo.githubusercontent.com/d5e7d6209e678c792aa43745198cfb5fd8a7a711/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f7261313032382f446966666572656e63654b69742e737667" data-canonical-src="https://img.shields.io/github/release/ra1028/DifferenceKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/DifferenceKit" rel="nofollow"&gt;&lt;img alt="CocoaPods" src="https://camo.githubusercontent.com/eb80273780e393298a986094d70d141805e4c461/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f446966666572656e63654b69742e737667" data-canonical-src="https://img.shields.io/cocoapods/v/DifferenceKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img alt="Carthage" src="https://camo.githubusercontent.com/fe91c4a15eee2ad11f67c09fd4c0bcd8f3178fea/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d79656c6c6f772e737667" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/package-manager" rel="nofollow"&gt;&lt;img alt="Swift Package Manager" src="https://camo.githubusercontent.com/851e8e3de73418997a60e7c0e220e32e0032177b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5377696674504d2d636f6d70617469626c652d79656c6c6f77677265656e2e737667" data-canonical-src="https://img.shields.io/badge/SwiftPM-compatible-yellowgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a href="https://github.com/ra1028/DifferenceKit/actions"&gt;&lt;img alt="CI Status" src="https://github.com/ra1028/DifferenceKit/workflows/GitHub%20Actions/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/" rel="nofollow"&gt;&lt;img alt="Platform" src="https://camo.githubusercontent.com/cb06ff49dc14d41cb813c6d28dd4f1fd4fac913f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d694f532532302537432532306d61634f5325323025374325323074764f5325323025374325323077617463684f532532302537432532304c696e75782d677265656e2e737667" data-canonical-src="https://img.shields.io/badge/platform-iOS%20%7C%20macOS%20%7C%20tvOS%20%7C%20watchOS%20%7C%20Linux-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ra1028/DifferenceKit/blob/master/LICENSE"&gt;&lt;img alt="Lincense" src="https://camo.githubusercontent.com/68bb91d91eb5c3901305c0e1e0b60a5265cdfb9b/687474703a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c61636b2e737667" data-canonical-src="http://img.shields.io/badge/License-Apache%202.0-black.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p align="center"&gt;
Made with &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; by &lt;a href="https://github.com/ra1028"&gt;Ryo Aoyama&lt;/a&gt; and &lt;a href="https://github.com/ra1028/DifferenceKit/graphs/contributors"&gt;Contributors&lt;/a&gt;
&lt;br clear="all"&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; Fastest &lt;strong&gt;O(n)&lt;/strong&gt; diffing algorithm optimized for Swift collection&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; Calculate diffs for batch updates of list UI in &lt;code&gt;UIKit&lt;/code&gt;, &lt;code&gt;AppKit&lt;/code&gt; and &lt;a href="https://github.com/TextureGroup/Texture"&gt;Texture&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; Supports both linear and sectioned collection even if contains duplicates&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; Supports &lt;strong&gt;all kind of diffs&lt;/strong&gt; for animated UI batch updates&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-algorithm" class="anchor" aria-hidden="true" href="#algorithm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Algorithm&lt;/h2&gt;
&lt;p&gt;This is a diffing algorithm developed for &lt;a href="https://github.com/ra1028/Carbon"&gt;Carbon&lt;/a&gt;, works stand alone.&lt;br&gt;
The algorithm optimized based on the Paul Heckel's algorithm.&lt;br&gt;
See also his paper &lt;a href="https://dl.acm.org/citation.cfm?id=359467" rel="nofollow"&gt;"A technique for isolating differences between files"&lt;/a&gt; released in 1978.&lt;br&gt;
It allows all kind of diffs to be calculated in linear time &lt;strong&gt;O(n)&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://github.com/RxSwiftCommunity/RxDataSources"&gt;RxDataSources&lt;/a&gt; and &lt;a href="https://github.com/Instagram/IGListKit"&gt;IGListKit&lt;/a&gt; are also implemented based on his algorithm.&lt;/p&gt;
&lt;p&gt;However, in &lt;code&gt;performBatchUpdates&lt;/code&gt; of &lt;code&gt;UITableView&lt;/code&gt;, &lt;code&gt;UICollectionView&lt;/code&gt;, etc, there are combinations of diffs that cause crash when applied simultaneously.&lt;br&gt;
To solve this problem, &lt;code&gt;DifferenceKit&lt;/code&gt; takes an approach of split the set of diffs at the minimal stages that can be perform batch updates with no crashes.&lt;/p&gt;
&lt;p&gt;Implementation is &lt;a href="https://github.com/ra1028/DifferenceKit/blob/master/Sources/Algorithm.swift"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ra1028.github.io/DifferenceKit" rel="nofollow"&gt;API Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/DifferenceKit/blob/master/Examples"&gt;Example Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/DifferenceKit/blob/master/Benchmark"&gt;Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/DifferenceKit/blob/master/DifferenceKit.playground/Contents.swift"&gt;Playground&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;
&lt;p&gt;The type of the element that to take diffs must be conform to the &lt;code&gt;Differentiable&lt;/code&gt; protocol.&lt;br&gt;
The &lt;code&gt;differenceIdentifier&lt;/code&gt;'s type is generic associated type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;User&lt;/span&gt;: &lt;span class="pl-e"&gt;Differentiable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;

    &lt;span class="pl-k"&gt;var&lt;/span&gt; differenceIdentifier&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; id
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;isContentEqual&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: User) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; name &lt;span class="pl-k"&gt;==&lt;/span&gt; source.&lt;span class="pl-smi"&gt;name&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the case of definition above, &lt;code&gt;id&lt;/code&gt; uniquely identifies the element and get to know the user updated by comparing equality of &lt;code&gt;name&lt;/code&gt; of the elements in source and target.&lt;/p&gt;
&lt;p&gt;There are default implementations of &lt;code&gt;Differentiable&lt;/code&gt; for the types that conforming to &lt;code&gt;Equatable&lt;/code&gt; or &lt;code&gt;Hashable&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If `Self` conforming to `Hashable`.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; differenceIdentifier&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Self&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If `Self` conforming to `Equatable`.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;isContentEqual&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: &lt;span class="pl-c1"&gt;Self&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; source
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Therefore, you can simply:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-e"&gt;Differentiable &lt;/span&gt;{}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Calculate the diffs by creating &lt;code&gt;StagedChangeset&lt;/code&gt; from two collections of elements conforming to &lt;code&gt;Differentiable&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; source &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    &lt;span class="pl-c1"&gt;User&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Vincent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;User&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jules&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]
&lt;span class="pl-k"&gt;let&lt;/span&gt; target &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    &lt;span class="pl-c1"&gt;User&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jules&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;User&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Vincent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;User&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Butch&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]

&lt;span class="pl-k"&gt;let&lt;/span&gt; changeset &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;StagedChangeset&lt;/span&gt;(&lt;span class="pl-c1"&gt;source&lt;/span&gt;: source, &lt;span class="pl-c1"&gt;target&lt;/span&gt;: target)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to include multiple types conforming to &lt;code&gt;Differentiable&lt;/code&gt; in the collection, use &lt;code&gt;AnyDifferentiable&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; source &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    &lt;span class="pl-c1"&gt;AnyDifferentiable&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;AnyDifferentiable&lt;/span&gt;(&lt;span class="pl-c1"&gt;User&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Vincent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the case of sectioned collection, the section itself must have a unique identifier and be able to compare whether there is an update.&lt;br&gt;
So each section must conforming to &lt;code&gt;DifferentiableSection&lt;/code&gt; protocol, but in most cases you can use &lt;code&gt;ArraySection&lt;/code&gt; that general type conforming to it.&lt;br&gt;
&lt;code&gt;ArraySection&lt;/code&gt; requires a model conforming to &lt;code&gt;Differentiable&lt;/code&gt; for diffing from other sections:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Model&lt;/span&gt;: &lt;span class="pl-e"&gt;Differentiable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;a&lt;/span&gt;, &lt;span class="pl-c1"&gt;b&lt;/span&gt;, &lt;span class="pl-c1"&gt;c&lt;/span&gt;
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; source&lt;span class="pl-k"&gt;:&lt;/span&gt; [ArraySection&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Model, &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    &lt;span class="pl-c1"&gt;ArraySection&lt;/span&gt;(&lt;span class="pl-c1"&gt;model&lt;/span&gt;: .&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-c1"&gt;elements&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;B&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    &lt;span class="pl-c1"&gt;ArraySection&lt;/span&gt;(&lt;span class="pl-c1"&gt;model&lt;/span&gt;: .&lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-c1"&gt;elements&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
]
&lt;span class="pl-k"&gt;let&lt;/span&gt; target&lt;span class="pl-k"&gt;:&lt;/span&gt; [ArraySection&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Model, &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    &lt;span class="pl-c1"&gt;ArraySection&lt;/span&gt;(&lt;span class="pl-c1"&gt;model&lt;/span&gt;: .&lt;span class="pl-smi"&gt;c&lt;/span&gt;, &lt;span class="pl-c1"&gt;elements&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;D&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;E&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    &lt;span class="pl-c1"&gt;ArraySection&lt;/span&gt;(&lt;span class="pl-c1"&gt;model&lt;/span&gt;: .&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-c1"&gt;elements&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    &lt;span class="pl-c1"&gt;ArraySection&lt;/span&gt;(&lt;span class="pl-c1"&gt;model&lt;/span&gt;: .&lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-c1"&gt;elements&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;B&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
]

&lt;span class="pl-k"&gt;let&lt;/span&gt; changeset &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;StagedChangeset&lt;/span&gt;(&lt;span class="pl-c1"&gt;source&lt;/span&gt;: source, &lt;span class="pl-c1"&gt;target&lt;/span&gt;: target)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can perform diffing batch updates of &lt;code&gt;UITableView&lt;/code&gt; and &lt;code&gt;UICollectionView&lt;/code&gt; using the created &lt;code&gt;StagedChangeset&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Don't forget&lt;/strong&gt; to &lt;strong&gt;synchronously&lt;/strong&gt; update the data referenced by the data-source, with the data passed in the &lt;code&gt;setData&lt;/code&gt; closure. The diffs are applied in stages, and failing to do so is bound to create a crash:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;tableView.&lt;span class="pl-c1"&gt;reload&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: changeset, &lt;span class="pl-c1"&gt;with&lt;/span&gt;: .&lt;span class="pl-smi"&gt;fade&lt;/span&gt;) { data &lt;span class="pl-k"&gt;in&lt;/span&gt;
    dataSource.&lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; data
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Batch updates using too large amount of diffs may adversely affect to performance.&lt;br&gt;
Returning &lt;code&gt;true&lt;/code&gt; with &lt;code&gt;interrupt&lt;/code&gt; closure then falls back to &lt;code&gt;reloadData&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;collectionView.&lt;span class="pl-c1"&gt;reload&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: changeset, &lt;span class="pl-c1"&gt;interrupt&lt;/span&gt;: { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;changeCount&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt; }) { data &lt;span class="pl-k"&gt;in&lt;/span&gt;
    dataSource.&lt;span class="pl-smi"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; data
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3 align="center"&gt;&lt;a id="user-content-see-more-usage" class="anchor" aria-hidden="true" href="#see-more-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
&lt;a href="https://ra1028.github.io/DifferenceKit" rel="nofollow"&gt;[See More Usage]&lt;/a&gt;
&lt;/h3&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-comparison-with-other-frameworks" class="anchor" aria-hidden="true" href="#comparison-with-other-frameworks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comparison with Other Frameworks&lt;/h2&gt;
&lt;p&gt;Made a fair comparison as much as possible in performance and features with other &lt;strong&gt;popular&lt;/strong&gt; and &lt;strong&gt;awesome&lt;/strong&gt; frameworks.&lt;br&gt;
This does &lt;strong&gt;NOT&lt;/strong&gt; determine superiority or inferiority of the frameworks.&lt;br&gt;
I know that each framework has different benefits.&lt;br&gt;
The frameworks and its version that compared is below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/DifferenceKit"&gt;DifferenceKit&lt;/a&gt; - master&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxDataSources"&gt;RxDataSources&lt;/a&gt; (&lt;a href="https://github.com/RxSwiftCommunity/RxDataSources/tree/master/Sources/Differentiator"&gt;Differentiator&lt;/a&gt;) - 4.0.1&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RACCommunity/FlexibleDiff"&gt;FlexibleDiff&lt;/a&gt; - 0.0.8&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Instagram/IGListKit"&gt;IGListKit&lt;/a&gt; - 3.4.0&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/DeepDiff"&gt;DeepDiff&lt;/a&gt; - 2.2.0&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonyarnold/Differ"&gt;Differ&lt;/a&gt; (&lt;a href="https://github.com/wokalski/Diff.swift"&gt;Diff.swift&lt;/a&gt;) - 1.4.3&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jflinter/Dwifft"&gt;Dwifft&lt;/a&gt; - 0.9&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/documentation/swift/collectiondifference" rel="nofollow"&gt;Swift.CollectionDifference&lt;/a&gt; - Swift 5.1&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-performance-comparison" class="anchor" aria-hidden="true" href="#performance-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Comparison&lt;/h3&gt;
&lt;p&gt;Benchmark project is &lt;a href="https://github.com/ra1028/DifferenceKit/blob/master/Benchmark"&gt;here&lt;/a&gt;.&lt;br&gt;
Performance was mesured by code compiled using &lt;code&gt;Xcode11.1&lt;/code&gt; and &lt;code&gt;Swift 5.1&lt;/code&gt; with &lt;code&gt;-O&lt;/code&gt; optimization and run on &lt;code&gt;iPhone11 Pro simulator&lt;/code&gt;.&lt;br&gt;
Use &lt;code&gt;Foundation.UUID&lt;/code&gt; as an element of collections.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content---from-5000-elements-to-1000-deleted-1000-inserted-and-200-shuffled" class="anchor" aria-hidden="true" href="#--from-5000-elements-to-1000-deleted-1000-inserted-and-200-shuffled"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;- From 5,000 elements to 1,000 deleted, 1,000 inserted and 200 shuffled&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;/th&gt;
&lt;th align="right"&gt;Time(sec)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DifferenceKit&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.0019&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;RxDataSources&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.0074&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;IGListKit&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.0346&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;FlexibleDiff&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.0161&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DeepDiff&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.0373&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Differ&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;1.0581&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dwifft&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.4732&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift.CollectionDifference&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.0620&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content---from-100000-elements-to-10000-deleted-10000-inserted-and-2000-shuffled" class="anchor" aria-hidden="true" href="#--from-100000-elements-to-10000-deleted-10000-inserted-and-2000-shuffled"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;- From 100,000 elements to 10,000 deleted, 10,000 inserted and 2,000 shuffled&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;/th&gt;
&lt;th align="right"&gt;Time(sec)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DifferenceKit&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.0348&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;RxDataSources&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.1024&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;IGListKit&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.7002&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;FlexibleDiff&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.2189&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DeepDiff&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;0.5537&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Differ&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;153.8007&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dwifft&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;187.1341&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift.CollectionDifference&lt;/td&gt;
&lt;td align="right"&gt;&lt;code&gt;5.0281&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-features-comparison" class="anchor" aria-hidden="true" href="#features-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features Comparison&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content---algorithm" class="anchor" aria-hidden="true" href="#--algorithm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;- Algorithm&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;/th&gt;
&lt;th align="right"&gt;Base algorithm&lt;/th&gt;
&lt;th align="right"&gt;Order&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DifferenceKit&lt;/td&gt;
&lt;td align="right"&gt;Heckel&lt;/td&gt;
&lt;td align="right"&gt;O(N)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;RxDataSources&lt;/td&gt;
&lt;td align="right"&gt;Heckel&lt;/td&gt;
&lt;td align="right"&gt;O(N)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;FlexibleDiff&lt;/td&gt;
&lt;td align="right"&gt;Heckel&lt;/td&gt;
&lt;td align="right"&gt;O(N)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;IGListKit&lt;/td&gt;
&lt;td align="right"&gt;Heckel&lt;/td&gt;
&lt;td align="right"&gt;O(N)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DeepDiff&lt;/td&gt;
&lt;td align="right"&gt;Heckel&lt;/td&gt;
&lt;td align="right"&gt;O(N)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Differ&lt;/td&gt;
&lt;td align="right"&gt;Myers&lt;/td&gt;
&lt;td align="right"&gt;O(ND)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dwifft&lt;/td&gt;
&lt;td align="right"&gt;Myers&lt;/td&gt;
&lt;td align="right"&gt;O(ND)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift.CollectionDifference&lt;/td&gt;
&lt;td align="right"&gt;Myers&lt;/td&gt;
&lt;td align="right"&gt;O(ND)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;* &lt;a href="https://dl.acm.org/citation.cfm?id=359467" rel="nofollow"&gt;&lt;strong&gt;Heckel algorithm&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
* &lt;a href="http://www.xmailserver.org/diff2.pdf" rel="nofollow"&gt;&lt;strong&gt;Myers algorithm&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content---supported-collection" class="anchor" aria-hidden="true" href="#--supported-collection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;- Supported Collection&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;/th&gt;
&lt;th align="center"&gt;Linear&lt;/th&gt;
&lt;th align="center"&gt;Sectioned&lt;/th&gt;
&lt;th align="center"&gt;Duplicate element/section&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DifferenceKit&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;RxDataSources&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;FlexibleDiff&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;IGListKit&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DeepDiff&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Differ&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dwifft&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift.CollectionDifference&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;* &lt;strong&gt;Linear&lt;/strong&gt; means 1-dimensional collection&lt;br&gt;
* &lt;strong&gt;Sectioned&lt;/strong&gt; means 2-dimensional collection&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content---supported-element-diff" class="anchor" aria-hidden="true" href="#--supported-element-diff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;- Supported Element Diff&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;/th&gt;
&lt;th align="center"&gt;Delete&lt;/th&gt;
&lt;th align="center"&gt;Insert&lt;/th&gt;
&lt;th align="center"&gt;Move&lt;/th&gt;
&lt;th align="center"&gt;Reload&lt;/th&gt;
&lt;th align="center"&gt;Move across sections&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DifferenceKit&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;RxDataSources&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;FlexibleDiff&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;IGListKit&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DeepDiff&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Differ&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dwifft&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift.CollectionDifference&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content---supported-section-diff" class="anchor" aria-hidden="true" href="#--supported-section-diff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;- Supported Section Diff&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;/th&gt;
&lt;th align="center"&gt;Delete&lt;/th&gt;
&lt;th align="center"&gt;Insert&lt;/th&gt;
&lt;th align="center"&gt;Move&lt;/th&gt;
&lt;th align="center"&gt;Reload&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DifferenceKit&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;RxDataSources&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;FlexibleDiff&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;IGListKit&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;DeepDiff&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Differ&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dwifft&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift.CollectionDifference&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Swift 4.2+&lt;/li&gt;
&lt;li&gt;iOS 9.0+&lt;/li&gt;
&lt;li&gt;tvOS 9.0+&lt;/li&gt;
&lt;li&gt;OS X 10.9+&lt;/li&gt;
&lt;li&gt;watchOS 2.0+ (only algorithm)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To use only algorithm without extensions for UI, add the following to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;DifferenceKit/Core&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-ios--tvos" class="anchor" aria-hidden="true" href="#ios--tvos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS / tvOS&lt;/h4&gt;
&lt;p&gt;To use DifferenceKit with UIKit extension, add the following to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;DifferenceKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;DifferenceKit/UIKitExtension&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h4&gt;
&lt;p&gt;To use DifferenceKit with AppKit extension, add the following to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;DifferenceKit/AppKitExtension&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-watchos" class="anchor" aria-hidden="true" href="#watchos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;watchOS&lt;/h4&gt;
&lt;p&gt;There is no UI extension for watchOS.&lt;br&gt;
To use only algorithm without extensions for UI, add the following to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;DifferenceKit/Core&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Add the following to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ra1028/DifferenceKit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager-for-apple-platforms" class="anchor" aria-hidden="true" href="#swift-package-manager-for-apple-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://developer.apple.com/documentation/xcode/adding_package_dependencies_to_your_app" rel="nofollow"&gt;Swift Package Manager for Apple platforms&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Select Xcode menu &lt;code&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/code&gt; and enter repository URL with GUI.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Repository: https://github.com/ra1028/DifferenceKit
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Add the following to the dependencies of your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/ra1028/DifferenceKit.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;version&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h2&gt;
&lt;p&gt;Pull requests, bug reports and feature requests are welcome &lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt;&lt;br&gt;
Please see the &lt;a href="https://github.com/ra1028/DifferenceKit/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; file for learn how to contribute to DifferenceKit.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-credit" class="anchor" aria-hidden="true" href="#credit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credit&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-bibliography" class="anchor" aria-hidden="true" href="#bibliography"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bibliography&lt;/h4&gt;
&lt;p&gt;DifferenceKit was developed with reference to the following excellent materials and framework.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dl.acm.org/citation.cfm?id=359467" rel="nofollow"&gt;A technique for isolating differences between files&lt;/a&gt; (by &lt;a href="https://dl.acm.org/author_page.cfm?id=81100051772" rel="nofollow"&gt;Paul Heckel&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/horita-yuya/DifferenceAlgorithmComparison"&gt;DifferenceAlgorithmComparison&lt;/a&gt; (by &lt;a href="https://github.com/horita-yuya"&gt;@horita-yuya&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-oss-using-differencekit" class="anchor" aria-hidden="true" href="#oss-using-differencekit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OSS using DifferenceKit&lt;/h4&gt;
&lt;p&gt;The list of the awesome OSS which uses this library. They also help to understanding how to use DifferenceKit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/Carbon"&gt;Carbon&lt;/a&gt; (by &lt;a href="https://github.com/ra1028"&gt;@ra1028&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/DiffableDataSources"&gt;DiffableDataSources&lt;/a&gt; (by &lt;a href="https://github.com/ra1028"&gt;@ra1028&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RocketChat/Rocket.Chat.iOS"&gt;Rocket.Chat.iOS&lt;/a&gt; (by &lt;a href="https://github.com/RocketChat"&gt;RocketChat&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wireapp/wire-ios"&gt;wire-ios&lt;/a&gt; (by &lt;a href="https://github.com/wireapp"&gt;Wire Swiss GmbH&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/plangrid/ReactiveLists"&gt;ReactiveLists&lt;/a&gt; (by &lt;a href="https://github.com/plangrid"&gt;PlanGrid&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cardoso/ReduxMovieDB"&gt;ReduxMovieDB&lt;/a&gt; (by &lt;a href="https://github.com/cardoso"&gt;@cardoso&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skagedal/TetrisDiffingCompetition"&gt;TetrisDiffingCompetition&lt;/a&gt; (by &lt;a href="https://github.com/skagedal"&gt;@skagedal&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-other-diffing-libraries" class="anchor" aria-hidden="true" href="#other-diffing-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other diffing libraries&lt;/h4&gt;
&lt;p&gt;I respect and ️&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; all libraries involved in diffing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxDataSources"&gt;RxDataSources&lt;/a&gt; (by &lt;a href="https://github.com/kzaher"&gt;@kzaher&lt;/a&gt;, &lt;a href="https://github.com/RxSwiftCommunity"&gt;RxSwift Community&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Instagram/IGListKit"&gt;IGListKit&lt;/a&gt; (by &lt;a href="https://github.com/Instagram"&gt;Instagram&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RACCommunity/FlexibleDiff"&gt;FlexibleDiff&lt;/a&gt; (by &lt;a href="https://github.com/andersio"&gt;@andersio&lt;/a&gt;, &lt;a href="https://github.com/RACCommunity"&gt;RACCommunity&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/DeepDiff"&gt;DeepDiff&lt;/a&gt; (by &lt;a href="https://github.com/onmyway133"&gt;@onmyway133&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonyarnold/Differ"&gt;Differ&lt;/a&gt; (by &lt;a href="https://github.com/tonyarnold"&gt;@tonyarnold&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jflinter/Dwifft"&gt;Dwifft&lt;/a&gt; (by &lt;a href="https://github.com/jflinter"&gt;@jflinter&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/osteslag/Changeset"&gt;Changeset&lt;/a&gt; (by &lt;a href="https://github.com/osteslag"&gt;@osteslag&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;DifferenceKit is released under the &lt;a href="https://github.com/ra1028/DifferenceKit/blob/master/LICENSE"&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ra1028</author><guid isPermaLink="false">https://github.com/ra1028/DifferenceKit</guid><pubDate>Mon, 10 Feb 2020 00:24:00 GMT</pubDate></item><item><title>soapyigu/Swift-30-Projects #25 in Swift, Today</title><link>https://github.com/soapyigu/Swift-30-Projects</link><description>&lt;p&gt;&lt;i&gt;30 mini Swift Apps for self-study&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-swift-30-projects" class="anchor" aria-hidden="true" href="#swift-30-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 30 Projects&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./Cover.jpg"&gt;&lt;img src="./Cover.jpg" alt="Cover" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;p&gt;This repo is updated with Swift 5 and compatible with iPhone X:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simple UIKit components&lt;/li&gt;
&lt;li&gt;UIScrollView, UITableView, UICollectionView&lt;/li&gt;
&lt;li&gt;CAAnimations and UIView Animations&lt;/li&gt;
&lt;li&gt;Local Notification in iOS 11&lt;/li&gt;
&lt;li&gt;MapKit, Contact, and Core ML frameworks&lt;/li&gt;
&lt;li&gt;Core Data, Today Extension, and 3D touch&lt;/li&gt;
&lt;li&gt;Popular Open Source Frameworks&lt;/li&gt;
&lt;li&gt;Design Patterns&lt;/li&gt;
&lt;li&gt;Test Driven Development, XCTest&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./Swift30Projects.png"&gt;&lt;img src="./Swift30Projects.png" alt="Swift30Projects" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-by-developers-and-for-developers" class="anchor" aria-hidden="true" href="#by-developers-and-for-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;By developers and for developers&lt;/h2&gt;
&lt;p&gt;I am an iOS developer and currently using Swift.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This repo does not merely follow tutorials, I re-build them with better code style and architecture design.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For code style, I strictly follow &lt;a href="https://github.com/raywenderlich/swift-style-guide"&gt;raywenderlich.com Swift Style Guide&lt;/a&gt;;&lt;/p&gt;
&lt;p&gt;For developers, I have a README file and screenshots for every single app in this repo, all details could be found there.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-whats-next" class="anchor" aria-hidden="true" href="#whats-next"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's next?&lt;/h2&gt;
&lt;p&gt;I will maintain the project with latest syntax and most advanced code style. More code comments are going to be covered as well.&lt;/p&gt;
&lt;p&gt;Also, &lt;strong&gt;unit tests&lt;/strong&gt; will be added to ensure the quality of the codebase.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/ChengLuffy"&gt;chenluffy&lt;/a&gt;, &lt;a href="https://github.com/LargeShrimp"&gt;LargeShrimp&lt;/a&gt; and &lt;a href="https://github.com/azureland"&gt;azureland&lt;/a&gt;, thank you for your assistance in optimizing the repo.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reach-me" class="anchor" aria-hidden="true" href="#reach-me"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reach me&lt;/h2&gt;
&lt;p&gt;Twitter: &lt;a href="https://twitter.com/guyindaozhang" rel="nofollow"&gt;@guyindaozhang&lt;/a&gt;&lt;br&gt;
Weibo: &lt;a href="http://weibo.com/soapyigu" rel="nofollow"&gt;@故胤道长&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>soapyigu</author><guid isPermaLink="false">https://github.com/soapyigu/Swift-30-Projects</guid><pubDate>Mon, 10 Feb 2020 00:25:00 GMT</pubDate></item></channel></rss>