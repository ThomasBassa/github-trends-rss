<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Swift, Today</title><link>https://github.com/trending/swift?since=daily</link><description>The top repositories on GitHub for swift, measured daily</description><pubDate>Fri, 10 Jan 2020 01:12:54 GMT</pubDate><lastBuildDate>Fri, 10 Jan 2020 01:12:54 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>krzyzanowskim/CryptoSwift #1 in Swift, Today</title><link>https://github.com/krzyzanowskim/CryptoSwift</link><description>&lt;p&gt;&lt;i&gt;CryptoSwift is a growing collection of standard and secure cryptographic algorithms implemented in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="#installation"&gt;&lt;img src="https://camo.githubusercontent.com/5d6fd4fa3c2ae6ccd8c57429e19bcdf7eff82c10/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f506c6174666f726d732d694f53253230253743253230416e64726f69642532302537436d61634f5325323025374325323077617463684f5325323025374325323074764f532532302537432532304c696e75782d3445344534452e7376673f636f6c6f72413d323861373435" alt="Platform" data-canonical-src="https://img.shields.io/badge/Platforms-iOS%20%7C%20Android%20%7CmacOS%20%7C%20watchOS%20%7C%20tvOS%20%7C%20Linux-4E4E4E.svg?colorA=28a745" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#swift-versions-support"&gt;&lt;img src="https://camo.githubusercontent.com/4abb73b9576bed1811b4a731d67b02ae0fc40818/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d332e31253230253743253230332e32253230253743253230342e30253230253743253230342e31253230253743253230342e32253230253743253230352e302d6c69676874677265792e7376673f636f6c6f72413d32386137343526636f6c6f72423d344534453445" alt="Swift support" data-canonical-src="https://img.shields.io/badge/Swift-3.1%20%7C%203.2%20%7C%204.0%20%7C%204.1%20%7C%204.2%20%7C%205.0-lightgrey.svg?colorA=28a745&amp;amp;colorB=4E4E4E" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/CryptoSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0013f7c1969f14de2754d7893f29bd758c02f678/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f43727970746f53776966742e7376673f7374796c653d666c6174266c6162656c3d436f636f61506f647326636f6c6f72413d3238613734352626636f6c6f72423d344534453445" alt="CocoaPods Compatible" data-canonical-src="https://img.shields.io/cocoapods/v/CryptoSwift.svg?style=flat&amp;amp;label=CocoaPods&amp;amp;colorA=28a745&amp;amp;&amp;amp;colorB=4E4E4E" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3e04d0d93df1860466bbf1f5f10a4fc468c66ec4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d627269676874677265656e2e7376673f7374796c653d666c617426636f6c6f72413d3238613734352626636f6c6f72423d344534453445" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-brightgreen.svg?style=flat&amp;amp;colorA=28a745&amp;amp;&amp;amp;colorB=4E4E4E" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/469f89a7f13dab2f5c38308ffb6915cd6f8fe1eb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d627269676874677265656e2e7376673f7374796c653d666c617426636f6c6f72413d3238613734352626636f6c6f72423d344534453445" alt="Accio supported" data-canonical-src="https://img.shields.io/badge/Accio-supported-brightgreen.svg?style=flat&amp;amp;colorA=28a745&amp;amp;&amp;amp;colorB=4E4E4E" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/apple/swift-package-manager"&gt;&lt;img src="https://camo.githubusercontent.com/9acb2f9e84086e44b2c133afc03953d0dc00ae38/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53504d2d636f6d70617469626c652d627269676874677265656e2e7376673f7374796c653d666c617426636f6c6f72413d3238613734352626636f6c6f72423d344534453445" alt="Swift Package Manager compatible" data-canonical-src="https://img.shields.io/badge/SPM-compatible-brightgreen.svg?style=flat&amp;amp;colorA=28a745&amp;amp;&amp;amp;colorB=4E4E4E" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://twitter.com/krzyzanowskim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9eae22ec29baf555031d77e5e70cd9243df21dc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f547769747465722d406b727a797a616e6f77736b696d2d626c75652e7376673f7374796c653d666c6174" alt="Twitter" data-canonical-src="https://img.shields.io/badge/Twitter-@krzyzanowskim-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-cryptoswift" class="anchor" aria-hidden="true" href="#cryptoswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CryptoSwift&lt;/h1&gt;
&lt;p&gt;Crypto related functions and helpers for &lt;a href="https://swift.org" rel="nofollow"&gt;Swift&lt;/a&gt; implemented in Swift. (&lt;a href="https://twitter.com/hashtag/pureswift" rel="nofollow"&gt;#PureSwift&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;master&lt;/code&gt; branch follows the latest currently released &lt;strong&gt;version of Swift&lt;/strong&gt;. If you need an earlier version for an older version of Swift, you can specify its version in your &lt;code&gt;Podfile&lt;/code&gt; or use the code on the branch for that version. Older branches are unsupported. Check &lt;a href="#swift-versions-support"&gt;versions&lt;/a&gt; for details.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt; | &lt;a href="#features"&gt;Features&lt;/a&gt; | &lt;a href="#contribution"&gt;Contribution&lt;/a&gt; | &lt;a href="#installation"&gt;Installation&lt;/a&gt; | &lt;a href="#swift-versions-support"&gt;Swift versions&lt;/a&gt; | &lt;a href="#how-to"&gt;How-to&lt;/a&gt; | &lt;a href="#author"&gt;Author&lt;/a&gt; | &lt;a href="#license"&gt;License&lt;/a&gt; | &lt;a href="#changelog"&gt;Changelog&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsorship" class="anchor" aria-hidden="true" href="#sponsorship"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsorship&lt;/h2&gt;
&lt;p&gt;If you (or your Company) use this work, please consider &lt;a href="https://github.com/users/krzyzanowskim/sponsorship"&gt;Sponsorship&lt;/a&gt;. This is the only option to keep the project alive, that is in your own best interrest.&lt;/p&gt;
&lt;p&gt;CryptoSwift isn't backed by a big company and is developer in my spare time that I also use to as a freelancer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Good mood&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Easy to use&lt;/li&gt;
&lt;li&gt;Convenient extensions for String and Data&lt;/li&gt;
&lt;li&gt;Support for incremental updates (stream, ...)&lt;/li&gt;
&lt;li&gt;iOS, Android, macOS, AppleTV, watchOS, Linux support&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-hash-digest" class="anchor" aria-hidden="true" href="#hash-digest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hash (Digest)&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://tools.ietf.org/html/rfc1321" rel="nofollow"&gt;MD5&lt;/a&gt;
| &lt;a href="http://tools.ietf.org/html/rfc3174" rel="nofollow"&gt;SHA1&lt;/a&gt;
| &lt;a href="http://tools.ietf.org/html/rfc6234" rel="nofollow"&gt;SHA224&lt;/a&gt;
| &lt;a href="http://tools.ietf.org/html/rfc6234" rel="nofollow"&gt;SHA256&lt;/a&gt;
| &lt;a href="http://tools.ietf.org/html/rfc6234" rel="nofollow"&gt;SHA384&lt;/a&gt;
| &lt;a href="http://tools.ietf.org/html/rfc6234" rel="nofollow"&gt;SHA512&lt;/a&gt;
| &lt;a href="http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf" rel="nofollow"&gt;SHA3&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cyclic-redundancy-check-crc" class="anchor" aria-hidden="true" href="#cyclic-redundancy-check-crc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cyclic Redundancy Check (CRC)&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Cyclic_redundancy_check" rel="nofollow"&gt;CRC32&lt;/a&gt;
| &lt;a href="http://en.wikipedia.org/wiki/Cyclic_redundancy_check" rel="nofollow"&gt;CRC32C&lt;/a&gt;
| &lt;a href="http://en.wikipedia.org/wiki/Cyclic_redundancy_check" rel="nofollow"&gt;CRC16&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cipher" class="anchor" aria-hidden="true" href="#cipher"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cipher&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf" rel="nofollow"&gt;AES-128, AES-192, AES-256&lt;/a&gt;
| &lt;a href="http://cr.yp.to/chacha/chacha-20080128.pdf" rel="nofollow"&gt;ChaCha20&lt;/a&gt;
| &lt;a href="https://tools.ietf.org/html/rfc4503" rel="nofollow"&gt;Rabbit&lt;/a&gt;
| &lt;a href="https://www.schneier.com/academic/blowfish/" rel="nofollow"&gt;Blowfish&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-message-authenticators" class="anchor" aria-hidden="true" href="#message-authenticators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Message authenticators&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://cr.yp.to/mac/poly1305-20050329.pdf" rel="nofollow"&gt;Poly1305&lt;/a&gt;
| &lt;a href="https://www.ietf.org/rfc/rfc2104.txt" rel="nofollow"&gt;HMAC (MD5, SHA1, SHA256)&lt;/a&gt;
| &lt;a href="https://tools.ietf.org/html/rfc4493" rel="nofollow"&gt;CMAC&lt;/a&gt;
| &lt;a href="https://en.wikipedia.org/wiki/CBC-MAC" rel="nofollow"&gt;CBC-MAC&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cipher-mode-of-operation" class="anchor" aria-hidden="true" href="#cipher-mode-of-operation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cipher mode of operation&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Electronic codebook (&lt;a href="http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Electronic_codebook_.28ECB.29" rel="nofollow"&gt;ECB&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cipher-block chaining (&lt;a href="http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher-block_chaining_.28CBC.29" rel="nofollow"&gt;CBC&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Propagating Cipher Block Chaining (&lt;a href="http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Propagating_Cipher_Block_Chaining_.28PCBC.29" rel="nofollow"&gt;PCBC&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cipher feedback (&lt;a href="http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_feedback_.28CFB.29" rel="nofollow"&gt;CFB&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Output Feedback (&lt;a href="http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Output_Feedback_.28OFB.29" rel="nofollow"&gt;OFB&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Counter Mode (&lt;a href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Counter_.28CTR.29" rel="nofollow"&gt;CTR&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Galois/Counter Mode (&lt;a href="https://csrc.nist.gov/publications/detail/sp/800-38d/final" rel="nofollow"&gt;GCM&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Counter with Cipher Block Chaining-Message Authentication Code (&lt;a href="https://csrc.nist.gov/publications/detail/sp/800-38c/final" rel="nofollow"&gt;CCM&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-password-based-key-derivation-function" class="anchor" aria-hidden="true" href="#password-based-key-derivation-function"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Password-Based Key Derivation Function&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tools.ietf.org/html/rfc2898#section-5.1" rel="nofollow"&gt;PBKDF1&lt;/a&gt; (Password-Based Key Derivation Function 1)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tools.ietf.org/html/rfc2898#section-5.2" rel="nofollow"&gt;PBKDF2&lt;/a&gt; (Password-Based Key Derivation Function 2)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tools.ietf.org/html/rfc5869" rel="nofollow"&gt;HKDF&lt;/a&gt; (HMAC-based Extract-and-Expand Key Derivation Function)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tools.ietf.org/html/rfc7914" rel="nofollow"&gt;Scrypt&lt;/a&gt; (The scrypt Password-Based Key Derivation Function)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-data-padding" class="anchor" aria-hidden="true" href="#data-padding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data padding&lt;/h4&gt;
&lt;p&gt;PKCS#5
| &lt;a href="http://tools.ietf.org/html/rfc5652#section-6.3" rel="nofollow"&gt;PKCS#7&lt;/a&gt;
| &lt;a href="https://en.wikipedia.org/wiki/Padding_(cryptography)#Zero_padding" rel="nofollow"&gt;Zero padding&lt;/a&gt;
| &lt;a href="http://www.embedx.com/pdfs/ISO_STD_7816/info_isoiec7816-4%7Bed21.0%7Den.pdf" rel="nofollow"&gt;ISO78164&lt;/a&gt;
| No padding&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-authenticated-encryption-with-associated-data-aead" class="anchor" aria-hidden="true" href="#authenticated-encryption-with-associated-data-aead"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authenticated Encryption with Associated Data (AEAD)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tools.ietf.org/html/rfc7539#section-2.8" rel="nofollow"&gt;AEAD_CHACHA20_POLY1305&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/krzyzanowskim/CryptoSwift/issues/5"&gt;Why?&lt;/a&gt; &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/issues/5#issuecomment-53379391"&gt;Because I can&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-do-i-get-involved" class="anchor" aria-hidden="true" href="#how-do-i-get-involved"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I get involved?&lt;/h2&gt;
&lt;p&gt;You want to help, great! Go ahead and fork our repo, make your changes and send us a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information on how to help with CryptoSwift.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you found a bug, &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/issues"&gt;open an issue&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you have a feature request, &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/issues"&gt;open an issue&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install CryptoSwift, add it as a submodule to your project (on the top level project directory):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git submodule add https://github.com/krzyzanowskim/CryptoSwift.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is recommended to enable &lt;a href="https://swift.org/blog/whole-module-optimizations/" rel="nofollow"&gt;Whole-Module Optimization&lt;/a&gt; to gain better performance. Non-optimized build results in significantly worse performance.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-embedded-framework" class="anchor" aria-hidden="true" href="#embedded-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded Framework&lt;/h4&gt;
&lt;p&gt;Embedded frameworks require a minimum deployment target of iOS 8 or OS X Mavericks (10.9). Drag the &lt;code&gt;CryptoSwift.xcodeproj&lt;/code&gt; file into your Xcode project, and add appropriate framework as a dependency to your target. Now select your App and choose the General tab for the app target. Find &lt;em&gt;Embedded Binaries&lt;/em&gt; and press "+", then select &lt;code&gt;CryptoSwift.framework&lt;/code&gt; (iOS, OS X, watchOS or tvOS)&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/758033/10834511/25a26852-7e9a-11e5-8c01-6cc8f1838459.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/758033/10834511/25a26852-7e9a-11e5-8c01-6cc8f1838459.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sometimes "embedded framework" option is not available. In that case, you have to add new build phase for the target&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/758033/18415615/d5edabb0-77f8-11e6-8c94-f41d9fc2b8cb.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/758033/18415615/d5edabb0-77f8-11e6-8c94-f41d9fc2b8cb.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-ios-macos-watchos-tvos" class="anchor" aria-hidden="true" href="#ios-macos-watchos-tvos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS, macOS, watchOS, tvOS&lt;/h5&gt;
&lt;p&gt;In the project, you'll find &lt;a href="https://mxcl.dev/PromiseKit/news/2016/08/Multiplatform-Single-Scheme-Xcode-Projects/" rel="nofollow"&gt;single scheme&lt;/a&gt; for all platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CryptoSwift&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-swift-versions-support" class="anchor" aria-hidden="true" href="#swift-versions-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift versions support&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Swift 1.2: branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift12"&gt;swift12&lt;/a&gt; version &amp;lt;= 0.0.13&lt;/li&gt;
&lt;li&gt;Swift 2.1: branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift21"&gt;swift21&lt;/a&gt; version &amp;lt;= 0.2.3&lt;/li&gt;
&lt;li&gt;Swift 2.2, 2.3: branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift2"&gt;swift2&lt;/a&gt; version &amp;lt;= 0.5.2&lt;/li&gt;
&lt;li&gt;Swift 3.1, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift3"&gt;swift3&lt;/a&gt; version &amp;lt;= 0.6.9&lt;/li&gt;
&lt;li&gt;Swift 3.2, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift32"&gt;swift32&lt;/a&gt; version = 0.7.0&lt;/li&gt;
&lt;li&gt;Swift 4.0, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift4"&gt;swift4&lt;/a&gt; version &amp;lt;= 0.12.0&lt;/li&gt;
&lt;li&gt;Swift 4.2, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift42"&gt;swift42&lt;/a&gt; version &amp;lt;= 0.15.0&lt;/li&gt;
&lt;li&gt;Swift 5.0, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift5"&gt;swift5&lt;/a&gt; version &amp;lt;= 1.2.0&lt;/li&gt;
&lt;li&gt;Swift 5.1 and newer, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/master"&gt;master&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h4&gt;
&lt;p&gt;You can use &lt;a href="https://cocoapods.org/pods/CryptoSwift" rel="nofollow"&gt;CocoaPods&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;CryptoSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bear in mind that CocoaPods will build CryptoSwift without &lt;a href="https://swift.org/blog/whole-module-optimizations/" rel="nofollow"&gt;Whole-Module Optimization&lt;/a&gt; that may impact performance. You can change it manually after installation, or use &lt;a href="https://github.com/jedlewison/cocoapods-wholemodule"&gt;cocoapods-wholemodule&lt;/a&gt; plugin.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h4&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;.
Specify in Cartfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;krzyzanowskim/CryptoSwift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;carthage&lt;/code&gt; to build the framework and drag the built CryptoSwift.framework into your Xcode project. Follow &lt;a href="https://github.com/Carthage/Carthage#getting-started"&gt;build instructions&lt;/a&gt;. &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/issues/492#issuecomment-330822874"&gt;Common issues&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h4&gt;
&lt;p&gt;You can use &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; and specify dependency in &lt;code&gt;Package.swift&lt;/code&gt; by adding this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/krzyzanowskim/CryptoSwift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMinor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See: &lt;a href="http://blog.krzyzanowskim.com/2016/08/09/package-swift-manual/" rel="nofollow"&gt;Package.swift - manual&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-accio" class="anchor" aria-hidden="true" href="#accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accio&lt;/h4&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt;. Specify in &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/krzyzanowskim/CryptoSwift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;accio update&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-how-to" class="anchor" aria-hidden="true" href="#how-to"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How-to&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#basics"&gt;Basics (data types, conversion, ...)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calculate-digest"&gt;Digest (MD5, SHA...)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#message-authenticators-1"&gt;Message authenticators (HMAC, CMAC...)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#password-based-key-derivation-functions"&gt;Password-Based Key Derivation Function (PBKDF2, ...)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hmac-based-key-derivation-function"&gt;HMAC-based Key Derivation Function (HKDF)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-padding"&gt;Data Padding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chacha20"&gt;ChaCha20&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rabbit"&gt;Rabbit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#blowfish"&gt;Blowfish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aes"&gt;AES - Advanced Encryption Standard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aes-gcm"&gt;AES-GCM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aead"&gt;Authenticated Encryption with Associated Data (AEAD)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;also check &lt;a href="/CryptoSwift.playground/Contents.swift"&gt;Playground&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-basics" class="anchor" aria-hidden="true" href="#basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basics&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;CryptoSwift&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CryptoSwift uses array of bytes aka &lt;code&gt;Array&amp;lt;UInt8&amp;gt;&lt;/code&gt; as a base type for all operations. Every data may be converted to a stream of bytes. You will find convenience functions that accept &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;Data&lt;/code&gt;, and it will be internally converted to the array of bytes.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-data-types-conversion" class="anchor" aria-hidden="true" href="#data-types-conversion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data types conversion&lt;/h5&gt;
&lt;p&gt;For your convenience, &lt;strong&gt;CryptoSwift&lt;/strong&gt; provides two functions to easily convert an array of bytes to &lt;code&gt;Data&lt;/code&gt; or &lt;code&gt;Data&lt;/code&gt; to an array of bytes:&lt;/p&gt;
&lt;p&gt;Data from bytes:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Data&lt;/span&gt;( [&lt;span class="pl-c1"&gt;0x01&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x02&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x03&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Data&lt;/code&gt; to &lt;code&gt;Array&amp;lt;UInt8&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-smi"&gt;bytes&lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,2,3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Hexadecimal" rel="nofollow"&gt;Hexadecimal&lt;/a&gt; encoding:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;hex&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0x010203&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,2,3]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hex   &lt;span class="pl-k"&gt;=&lt;/span&gt; bytes.&lt;span class="pl-c1"&gt;toHexString&lt;/span&gt;()            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "010203"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build bytes out of &lt;code&gt;String&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bytes&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cipherkey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;bytes&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Array("cipherkey".utf8)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also... check out helpers that work with &lt;strong&gt;Base64&lt;/strong&gt; encoded data:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;aPf/i9th9iX+vf49eR7PYk2q7S5xmm3jkRLejgzHNJs=&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;decryptBase64ToString&lt;/span&gt;(cipher)
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;aPf/i9th9iX+vf49eR7PYk2q7S5xmm3jkRLejgzHNJs=&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;decryptBase64&lt;/span&gt;(cipher)
bytes.&lt;span class="pl-c1"&gt;toBase64&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-calculate-digest" class="anchor" aria-hidden="true" href="#calculate-digest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calculate Digest&lt;/h5&gt;
&lt;p&gt;Hashing a data or array of bytes (aka &lt;code&gt;Array&amp;lt;UInt8&amp;gt;&lt;/code&gt;)&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Hash struct usage &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; bytes&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0x01&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x02&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x03&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; digest &lt;span class="pl-k"&gt;=&lt;/span&gt; input.&lt;span class="pl-c1"&gt;md5&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; digest &lt;span class="pl-k"&gt;=&lt;/span&gt; Digest.&lt;span class="pl-c1"&gt;md5&lt;/span&gt;(bytes)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Data&lt;/span&gt;( [&lt;span class="pl-c1"&gt;0x01&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x02&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x03&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;md5&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;sha1&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;sha224&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;sha256&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;sha384&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;sha512&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; digest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MD5&lt;/span&gt;()
    &lt;span class="pl-k"&gt;let&lt;/span&gt; partial1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; digest.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-c1"&gt;withBytes&lt;/span&gt;: [&lt;span class="pl-c1"&gt;0x31&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x32&lt;/span&gt;])
    &lt;span class="pl-k"&gt;let&lt;/span&gt; partial2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; digest.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-c1"&gt;withBytes&lt;/span&gt;: [&lt;span class="pl-c1"&gt;0x33&lt;/span&gt;])
    &lt;span class="pl-k"&gt;let&lt;/span&gt; result &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; digest.&lt;span class="pl-c1"&gt;finish&lt;/span&gt;()
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; { }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hashing a String and printing result&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;md5&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "123".bytes.md5()&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-calculate-crc" class="anchor" aria-hidden="true" href="#calculate-crc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calculate CRC&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;bytes.&lt;span class="pl-c1"&gt;crc16&lt;/span&gt;()
data.&lt;span class="pl-c1"&gt;crc16&lt;/span&gt;()

bytes.&lt;span class="pl-c1"&gt;crc32&lt;/span&gt;()
data.&lt;span class="pl-c1"&gt;crc32&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-message-authenticators-1" class="anchor" aria-hidden="true" href="#message-authenticators-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Message authenticators&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Calculate Message Authentication Code (MAC) for message&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; key&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;9&lt;/span&gt;,&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-k"&gt;...&lt;/span&gt;]

&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Poly1305&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key).&lt;span class="pl-c1"&gt;authenticate&lt;/span&gt;(bytes)
&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;HMAC&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;variant&lt;/span&gt;: .&lt;span class="pl-smi"&gt;sha256&lt;/span&gt;).&lt;span class="pl-c1"&gt;authenticate&lt;/span&gt;(bytes)
&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;CMAC&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key).&lt;span class="pl-c1"&gt;authenticate&lt;/span&gt;(bytes)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-password-based-key-derivation-functions" class="anchor" aria-hidden="true" href="#password-based-key-derivation-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Password-Based Key Derivation Functions&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; password&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s33krit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; salt&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nacllcan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; PKCS5.&lt;span class="pl-c1"&gt;PBKDF2&lt;/span&gt;(&lt;span class="pl-c1"&gt;password&lt;/span&gt;: password, &lt;span class="pl-c1"&gt;salt&lt;/span&gt;: salt, &lt;span class="pl-c1"&gt;iterations&lt;/span&gt;: &lt;span class="pl-c1"&gt;4096&lt;/span&gt;, &lt;span class="pl-c1"&gt;keyLength&lt;/span&gt;: &lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-c1"&gt;variant&lt;/span&gt;: .&lt;span class="pl-smi"&gt;sha256&lt;/span&gt;).&lt;span class="pl-c1"&gt;calculate&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; password&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s33krit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; salt&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nacllcan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Scrypt implementation does not implement work parallelization, so `p` parameter will&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; increase the work time even in multicore systems&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Scrypt&lt;/span&gt;(&lt;span class="pl-c1"&gt;password&lt;/span&gt;: password, &lt;span class="pl-c1"&gt;salt&lt;/span&gt;: salt, &lt;span class="pl-c1"&gt;dkLen&lt;/span&gt;: &lt;span class="pl-c1"&gt;64&lt;/span&gt;, &lt;span class="pl-c1"&gt;N&lt;/span&gt;: &lt;span class="pl-c1"&gt;16384&lt;/span&gt;, &lt;span class="pl-c1"&gt;r&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;p&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;calculate&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-hmac-based-key-derivation-function" class="anchor" aria-hidden="true" href="#hmac-based-key-derivation-function"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HMAC-based Key Derivation Function&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; password&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s33krit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; salt&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nacllcan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;HKDF&lt;/span&gt;(&lt;span class="pl-c1"&gt;password&lt;/span&gt;: password, &lt;span class="pl-c1"&gt;salt&lt;/span&gt;: salt, &lt;span class="pl-c1"&gt;variant&lt;/span&gt;: .&lt;span class="pl-smi"&gt;sha256&lt;/span&gt;).&lt;span class="pl-c1"&gt;calculate&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-data-padding-1" class="anchor" aria-hidden="true" href="#data-padding-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Padding&lt;/h5&gt;
&lt;p&gt;Some content-encryption algorithms assume the input length is a multiple of &lt;code&gt;k&lt;/code&gt; octets, where &lt;code&gt;k&lt;/code&gt; is greater than one. For such algorithms, the input shall be padded.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Padding.&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: bytes, &lt;span class="pl-c1"&gt;blockSize&lt;/span&gt;: AES.&lt;span class="pl-smi"&gt;blockSize&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-working-with-ciphers" class="anchor" aria-hidden="true" href="#working-with-ciphers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working with Ciphers&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-chacha20" class="anchor" aria-hidden="true" href="#chacha20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ChaCha20&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;ChaCha20&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv).&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(message)
&lt;span class="pl-k"&gt;let&lt;/span&gt; decrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;ChaCha20&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv).&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-rabbit" class="anchor" aria-hidden="true" href="#rabbit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rabbit&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Rabbit&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv).&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(message)
&lt;span class="pl-k"&gt;let&lt;/span&gt; decrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Rabbit&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv).&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-blowfish" class="anchor" aria-hidden="true" href="#blowfish"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blowfish&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Blowfish&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;).&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(message)
&lt;span class="pl-k"&gt;let&lt;/span&gt; decrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Blowfish&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;).&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-aes" class="anchor" aria-hidden="true" href="#aes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AES&lt;/h5&gt;
&lt;p&gt;Notice regarding padding: &lt;em&gt;Manual padding of data is optional, and CryptoSwift is using PKCS7 padding by default. If you need to manually disable/enable padding, you can do this by setting parameter for &lt;strong&gt;AES&lt;/strong&gt; class&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Variant of AES encryption (AES-128, AES-192, AES-256) depends on given key length:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AES-128 = 16 bytes&lt;/li&gt;
&lt;li&gt;AES-192 = 24 bytes&lt;/li&gt;
&lt;li&gt;AES-256 = 32 bytes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AES-256 example&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-k"&gt;...&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;], &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-k"&gt;...&lt;/span&gt;,&lt;span class="pl-c1"&gt;16&lt;/span&gt;]), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-all-at-once" class="anchor" aria-hidden="true" href="#all-at-once"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;All at once&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; aes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;keykeykeykeykeyk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;drowssapdrowssap&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; aes128&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; ciphertext &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; aes.&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(&lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nullam quis risus eget urna mollis ornare vel eu leo.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;))
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; { }&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-incremental-updates" class="anchor" aria-hidden="true" href="#incremental-updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Incremental updates&lt;/h6&gt;
&lt;p&gt;Incremental operations use instance of Cryptor and encrypt/decrypt one part at a time, this way you can save on memory for large files.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; encryptor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;keykeykeykeykeyk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;drowssapdrowssap&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;makeEncryptor&lt;/span&gt;()

    &lt;span class="pl-k"&gt;var&lt;/span&gt; ciphertext &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; aggregate partial results&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    ciphertext &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; encryptor.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-c1"&gt;withBytes&lt;/span&gt;: &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nullam quis risus &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;))
    ciphertext &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; encryptor.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-c1"&gt;withBytes&lt;/span&gt;: &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;eget urna mollis &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;))
    ciphertext &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; encryptor.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-c1"&gt;withBytes&lt;/span&gt;: &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ornare vel eu leo.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;))
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; finish at the end&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    ciphertext &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; encryptor.&lt;span class="pl-c1"&gt;finish&lt;/span&gt;()

    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(ciphertext.&lt;span class="pl-c1"&gt;toHexString&lt;/span&gt;())
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="/CryptoSwift.playground/Contents.swift"&gt;Playground&lt;/a&gt; for sample code that work with stream.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-aes-advanced-usage" class="anchor" aria-hidden="true" href="#aes-advanced-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AES Advanced usage&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; input&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;9&lt;/span&gt;]

&lt;span class="pl-k"&gt;let&lt;/span&gt; key&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; iv&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Random bytes of `AES.blockSize` length&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;).&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(input)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; decrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;).&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AES without data padding&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; input&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;9&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret0key000000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;), &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0123456789012345&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;noPadding&lt;/span&gt;).&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(input)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using convenience extensions&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; plain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Data&lt;/span&gt;( [&lt;span class="pl-c1"&gt;0x01&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x02&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x03&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; plain.&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(&lt;span class="pl-c1"&gt;ChaCha20&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv))
&lt;span class="pl-k"&gt;let&lt;/span&gt; decrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; encrypted.&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(&lt;span class="pl-c1"&gt;ChaCha20&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv))&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-aes-gcm" class="anchor" aria-hidden="true" href="#aes-gcm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AES-GCM&lt;/h5&gt;
&lt;p&gt;The result of Galois/Counter Mode (GCM) encryption is ciphertext and &lt;strong&gt;authentication tag&lt;/strong&gt;, that is later used to decryption.&lt;/p&gt;
&lt;p&gt;encryption&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In combined mode, the authentication tag is directly appended to the encrypted message. This is usually what you want.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; gcm &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;GCM&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv, &lt;span class="pl-c1"&gt;mode&lt;/span&gt;: .&lt;span class="pl-smi"&gt;combined&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; aes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: gcm, &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;noPadding&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; aes.&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(plaintext)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; tag &lt;span class="pl-k"&gt;=&lt;/span&gt; gcm.&lt;span class="pl-smi"&gt;authenticationTag&lt;/span&gt;
&lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;decryption&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In combined mode, the authentication tag is appended to the encrypted message. This is usually what you want.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; gcm &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;GCM&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv, &lt;span class="pl-c1"&gt;mode&lt;/span&gt;: .&lt;span class="pl-smi"&gt;combined&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; aes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: gcm, &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;noPadding&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; aes.&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: GCM instance is not intended to be reused. So you can't use the same &lt;code&gt;GCM&lt;/code&gt; instance from encoding to also perform decoding.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-aes-ccm" class="anchor" aria-hidden="true" href="#aes-ccm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AES-CCM&lt;/h5&gt;
&lt;p&gt;The result of Counter with Cipher Block Chaining-Message Authentication Code encryption is ciphertext and &lt;strong&gt;authentication tag&lt;/strong&gt;, that is later used to decryption.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The authentication tag is appended to the encrypted message.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	&lt;span class="pl-k"&gt;let&lt;/span&gt; tagLength &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;
	&lt;span class="pl-k"&gt;let&lt;/span&gt; ccm &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CCM&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv, &lt;span class="pl-c1"&gt;tagLength&lt;/span&gt;: tagLength, &lt;span class="pl-c1"&gt;messageLength&lt;/span&gt;: ciphertext.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; tagLength, &lt;span class="pl-c1"&gt;additionalAuthenticatedData&lt;/span&gt;: data)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; aes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: ccm, &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;noPadding&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; aes.&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check documentation or CCM specification for valid parameters for CCM.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-aead" class="anchor" aria-hidden="true" href="#aead"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AEAD&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; AEADChaCha20Poly1305.&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(plaintext, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: nonce, &lt;span class="pl-c1"&gt;authenticationHeader&lt;/span&gt;: header)
&lt;span class="pl-k"&gt;let&lt;/span&gt; decrypt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; AEADChaCha20Poly1305.&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(ciphertext, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: nonce, &lt;span class="pl-c1"&gt;authenticationHeader&lt;/span&gt;: header, &lt;span class="pl-c1"&gt;authenticationTag&lt;/span&gt;: tagArr&lt;span class="pl-k"&gt;:&lt;/span&gt; tag)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;CryptoSwift is owned and maintained by &lt;a href="http://www.krzyzanowskim.com" rel="nofollow"&gt;Marcin Krzyżanowski&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can follow me on Twitter at &lt;a href="http://twitter.com/krzyzanowskim" rel="nofollow"&gt;@krzyzanowskim&lt;/a&gt; for project updates and releases.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-cryptography-notice" class="anchor" aria-hidden="true" href="#cryptography-notice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cryptography Notice&lt;/h1&gt;
&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href="http://www.wassenaar.org/" rel="nofollow"&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (C) 2014-2017 Marcin Krzyżanowski &lt;a href="mailto:marcin@krzyzanowskim.com"&gt;marcin@krzyzanowskim.com&lt;/a&gt;
This software is provided 'as-is', without any express or implied warranty.&lt;/p&gt;
&lt;p&gt;In no event will the authors be held liable for any damages arising from the use of this software.&lt;/p&gt;
&lt;p&gt;Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, &lt;strong&gt;an acknowledgment in the product documentation is required&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.&lt;/li&gt;
&lt;li&gt;This notice may not be removed or altered from any source or binary distribution.&lt;/li&gt;
&lt;li&gt;Redistributions of any form whatsoever must retain the following acknowledgment: 'This product includes software developed by the "Marcin Krzyzanowski" (&lt;a href="http://krzyzanowskim.com/" rel="nofollow"&gt;http://krzyzanowskim.com/&lt;/a&gt;).'&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;p&gt;See &lt;a href="./CHANGELOG"&gt;CHANGELOG&lt;/a&gt; file.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>krzyzanowskim</author><guid isPermaLink="false">https://github.com/krzyzanowskim/CryptoSwift</guid><pubDate>Fri, 10 Jan 2020 00:01:00 GMT</pubDate></item><item><title>realm/SwiftLint #2 in Swift, Today</title><link>https://github.com/realm/SwiftLint</link><description>&lt;p&gt;&lt;i&gt;A tool to enforce Swift style and conventions.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftlint" class="anchor" aria-hidden="true" href="#swiftlint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftLint&lt;/h1&gt;
&lt;p&gt;A tool to enforce Swift style and conventions, loosely based on
&lt;a href="https://github.com/github/swift-style-guide"&gt;GitHub's Swift Style Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;SwiftLint hooks into &lt;a href="http://clang.llvm.org" rel="nofollow"&gt;Clang&lt;/a&gt; and
&lt;a href="http://www.jpsim.com/uncovering-sourcekit" rel="nofollow"&gt;SourceKit&lt;/a&gt; to use the
&lt;a href="http://clang.llvm.org/docs/IntroductionToTheClangAST.html" rel="nofollow"&gt;AST&lt;/a&gt; representation
of your source files for more accurate results.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/jpsim/SwiftLint/_build/latest?definitionId=4?branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9a0296a6379b15a4bb08a821efade137d0837d36/68747470733a2f2f6465762e617a7572652e636f6d2f6a7073696d2f53776966744c696e742f5f617069732f6275696c642f7374617475732f7265616c6d2e53776966744c696e743f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/jpsim/SwiftLint/_apis/build/status/realm.SwiftLint?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/realm/SwiftLint?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c86f87b309c2e2ed94c56663ab18ce4096d1cd7f/68747470733a2f2f636f6465636f762e696f2f6769746875622f7265616c6d2f53776966744c696e742f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/realm/SwiftLint/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/screenshot.png"&gt;&lt;img src="assets/screenshot.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project adheres to the &lt;a href="https://realm.io/conduct" rel="nofollow"&gt;Contributor Covenant Code of Conduct&lt;/a&gt;.
By participating, you are expected to uphold this code. Please report
unacceptable behavior to &lt;a href="mailto:info@realm.io"&gt;info@realm.io&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Language Switch: &lt;a href="https://github.com/realm/SwiftLint/blob/master/README_CN.md"&gt;中文&lt;/a&gt;, &lt;a href="https://github.com/realm/SwiftLint/blob/master/README_KR.md"&gt;한국어&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-using-homebrew" class="anchor" aria-hidden="true" href="#using-homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;brew install swiftlint
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-using-cocoapods" class="anchor" aria-hidden="true" href="#using-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;:&lt;/h3&gt;
&lt;p&gt;Simply add the following line to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwiftLint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will download the SwiftLint binaries and dependencies in &lt;code&gt;Pods/&lt;/code&gt; during your next
&lt;code&gt;pod install&lt;/code&gt; execution and will allow you to invoke it via &lt;code&gt;${PODS_ROOT}/SwiftLint/swiftlint&lt;/code&gt;
in your Script Build Phases.&lt;/p&gt;
&lt;p&gt;This is the recommended way to install a specific version of SwiftLint since it supports
installing a pinned version rather than simply the latest (which is the case with Homebrew).&lt;/p&gt;
&lt;p&gt;Note that this will add the SwiftLint binaries, its dependencies' binaries and the Swift binary
library distribution to the &lt;code&gt;Pods/&lt;/code&gt; directory, so checking in this directory to SCM such as
git is discouraged.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-mint" class="anchor" aria-hidden="true" href="#using-mint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://github.com/yonaskolb/mint"&gt;Mint&lt;/a&gt;:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ mint install realm/SwiftLint
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-using-a-pre-built-package" class="anchor" aria-hidden="true" href="#using-a-pre-built-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using a pre-built package:&lt;/h3&gt;
&lt;p&gt;You can also install SwiftLint by downloading &lt;code&gt;SwiftLint.pkg&lt;/code&gt; from the
&lt;a href="https://github.com/realm/SwiftLint/releases/latest"&gt;latest GitHub release&lt;/a&gt; and
running it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compiling-from-source" class="anchor" aria-hidden="true" href="#compiling-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling from source:&lt;/h3&gt;
&lt;p&gt;You can also build from source by cloning this project and running
&lt;code&gt;git submodule update --init --recursive; make install&lt;/code&gt; (Xcode 10.2 or later).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-known-installation-issues-on-macos-before-10144" class="anchor" aria-hidden="true" href="#known-installation-issues-on-macos-before-10144"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Installation Issues On MacOS Before 10.14.4&lt;/h3&gt;
&lt;p&gt;Starting with &lt;a href="https://github.com/realm/SwiftLint/releases/tag/0.32.0"&gt;SwiftLint 0.32.0&lt;/a&gt;, if you get
an error similar to &lt;code&gt;dyld: Symbol not found: _$s11SubSequenceSlTl&lt;/code&gt; when running SwiftLint,
you'll need to install the &lt;a href="https://support.apple.com/kb/DL1998" rel="nofollow"&gt;Swift 5 Runtime Support for Command Line Tools&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update to macOS 10.14.4 or later&lt;/li&gt;
&lt;li&gt;Install Xcode 10.2 or later at &lt;code&gt;/Applications/Xcode.app&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rebuild SwiftLint from source using Xcode 10.2 or later&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-presentation" class="anchor" aria-hidden="true" href="#presentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presentation&lt;/h3&gt;
&lt;p&gt;To get a high-level overview of recommended ways to integrate SwiftLint into your project,
we encourage you to watch this presentation or read the transcript:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://academy.realm.io/posts/slug-jp-simard-swiftlint/" rel="nofollow"&gt;&lt;img src="assets/presentation.svg" alt="Presentation" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h3&gt;
&lt;p&gt;Integrate SwiftLint into an Xcode scheme to get warnings and errors displayed
in the IDE. Just add a new "Run Script Phase" with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; which swiftlint &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;/dev/null&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
  swiftlint
&lt;span class="pl-k"&gt;else&lt;/span&gt;
  &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/runscript.png"&gt;&lt;img src="assets/runscript.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, if you've installed SwiftLint via CocoaPods the script should look like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;${PODS_ROOT}&lt;/span&gt;/SwiftLint/swiftlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-format-on-save-xcode-plugin" class="anchor" aria-hidden="true" href="#format-on-save-xcode-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Format on Save Xcode Plugin&lt;/h4&gt;
&lt;p&gt;To run &lt;code&gt;swiftlint autocorrect&lt;/code&gt; on save in Xcode, install the
&lt;a href="https://github.com/ypresto/SwiftLintXcode"&gt;SwiftLintXcode&lt;/a&gt; plugin from Alcatraz.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;This plugin will not work with Xcode 8 or later without disabling SIP.
This is not recommended.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-appcode" class="anchor" aria-hidden="true" href="#appcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AppCode&lt;/h3&gt;
&lt;p&gt;To integrate SwiftLint with AppCode, install
&lt;a href="https://plugins.jetbrains.com/plugin/9175" rel="nofollow"&gt;this plugin&lt;/a&gt; and configure
SwiftLint's installed path in the plugin's preferences.
The &lt;code&gt;autocorrect&lt;/code&gt; action is available via &lt;code&gt;⌥⏎&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-atom" class="anchor" aria-hidden="true" href="#atom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Atom&lt;/h3&gt;
&lt;p&gt;To integrate SwiftLint with &lt;a href="https://atom.io/" rel="nofollow"&gt;Atom&lt;/a&gt;, install the
&lt;a href="https://atom.io/packages/linter-swiftlint" rel="nofollow"&gt;&lt;code&gt;linter-swiftlint&lt;/code&gt;&lt;/a&gt; package from
APM.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fastlane" class="anchor" aria-hidden="true" href="#fastlane"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fastlane&lt;/h3&gt;
&lt;p&gt;You can use the &lt;a href="https://docs.fastlane.tools/actions/swiftlint" rel="nofollow"&gt;official swiftlint fastlane action&lt;/a&gt; to run SwiftLint as part of your fastlane process.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;swiftlint(
    &lt;span class="pl-c1"&gt;mode:&lt;/span&gt; &lt;span class="pl-c1"&gt;:lint&lt;/span&gt;,                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; SwiftLint mode: :lint (default) or :autocorrect&lt;/span&gt;
    &lt;span class="pl-c1"&gt;executable:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pods/SwiftLint/swiftlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The SwiftLint binary path (optional). Important if you've installed it via CocoaPods&lt;/span&gt;
    &lt;span class="pl-c1"&gt;path:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/lint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Specify path to lint (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;output_file:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;swiftlint.result.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The path of the output file (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;reporter:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The custom reporter to use (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;config_file:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.swiftlint-ci.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The path of the configuration file (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;files:&lt;/span&gt; [                                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; List of files to process (optional)&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AppDelegate.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;path/to/project/Model.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    ],
    &lt;span class="pl-c1"&gt;ignore_exit_status:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Allow fastlane to continue even if SwiftLint returns a non-zero exit status (Default: false)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;quiet:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Don't print status logs like 'Linting ' &amp;amp; 'Done linting' (Default: false)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;strict:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fail on warnings? (Default: false)&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ swiftlint help
Available commands:

   analyze         [Experimental] Run analysis rules
   autocorrect     Automatically correct warnings and errors
   generate-docs   Generates markdown documentation for all rules
   help            Display general or command-specific help
   lint            Print lint warnings and errors (default command)
   rules           Display the list of rules and their identifiers
   version         Display the current version of SwiftLint
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run &lt;code&gt;swiftlint&lt;/code&gt; in the directory containing the Swift files to lint. Directories
will be searched recursively.&lt;/p&gt;
&lt;p&gt;To specify a list of files when using &lt;code&gt;lint&lt;/code&gt;, &lt;code&gt;autocorrect&lt;/code&gt; or &lt;code&gt;analyze&lt;/code&gt;
(like the list of files modified by Xcode specified by the
&lt;a href="https://github.com/norio-nomura/ExtraBuildPhase"&gt;&lt;code&gt;ExtraBuildPhase&lt;/code&gt;&lt;/a&gt; Xcode
plugin, or modified files in the working tree based on &lt;code&gt;git ls-files -m&lt;/code&gt;), you
can do so by passing the option &lt;code&gt;--use-script-input-files&lt;/code&gt; and setting the
following instance variables: &lt;code&gt;SCRIPT_INPUT_FILE_COUNT&lt;/code&gt; and
&lt;code&gt;SCRIPT_INPUT_FILE_0&lt;/code&gt;, &lt;code&gt;SCRIPT_INPUT_FILE_1&lt;/code&gt;...&lt;code&gt;SCRIPT_INPUT_FILE_{SCRIPT_INPUT_FILE_COUNT}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These are same environment variables set for input files to
&lt;a href="http://indiestack.com/2014/12/speeding-up-custom-script-phases/" rel="nofollow"&gt;custom Xcode script phases&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-working-with-multiple-swift-versions" class="anchor" aria-hidden="true" href="#working-with-multiple-swift-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working With Multiple Swift Versions&lt;/h3&gt;
&lt;p&gt;SwiftLint hooks into SourceKit so it continues working even as Swift evolves!&lt;/p&gt;
&lt;p&gt;This also keeps SwiftLint lean, as it doesn't need to ship with a full Swift
compiler, it just communicates with the official one you already have installed
on your machine.&lt;/p&gt;
&lt;p&gt;You should always run SwiftLint with the same toolchain you use to compile your
code.&lt;/p&gt;
&lt;p&gt;You may want to override SwiftLint's default Swift toolchain if you have
multiple toolchains or Xcodes installed.&lt;/p&gt;
&lt;p&gt;Here's the order in which SwiftLint determines which Swift toolchain to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$XCODE_DEFAULT_TOOLCHAIN_OVERRIDE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$TOOLCHAIN_DIR&lt;/code&gt; or &lt;code&gt;$TOOLCHAINS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xcrun -find swift&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;sourcekitd.framework&lt;/code&gt; is expected to be found in the &lt;code&gt;usr/lib/&lt;/code&gt; subdirectory of
the value passed in the paths above.&lt;/p&gt;
&lt;p&gt;You may also set the &lt;code&gt;TOOLCHAINS&lt;/code&gt; environment variable to the reverse-DNS
notation that identifies a Swift toolchain version:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ TOOLCHAINS=com.apple.dt.toolchain.Swift_2_3 swiftlint autocorrect&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Linux, SourceKit is expected to be located in
&lt;code&gt;/usr/lib/libsourcekitdInProc.so&lt;/code&gt; or specified by the &lt;code&gt;LINUX_SOURCEKIT_LIB_PATH&lt;/code&gt;
environment variable.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-version-support" class="anchor" aria-hidden="true" href="#swift-version-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Version Support&lt;/h3&gt;
&lt;p&gt;Here's a reference of which SwiftLint version to use for a given Swift version.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Swift version&lt;/th&gt;
&lt;th align="left"&gt;Last supported SwiftLint release&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 1.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.1.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 2.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.18.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 3.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.25.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 4.0-4.1.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.28.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 4.2.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.35.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 5.x&lt;/td&gt;
&lt;td align="left"&gt;Latest&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-rules" class="anchor" aria-hidden="true" href="#rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules&lt;/h2&gt;
&lt;p&gt;Over 75 rules are included in SwiftLint and the Swift community (that's you!)
continues to contribute more over time.
&lt;a href="CONTRIBUTING.md"&gt;Pull requests&lt;/a&gt; are encouraged.&lt;/p&gt;
&lt;p&gt;You can find an updated list of rules and more information about them
&lt;a href="https://realm.github.io/SwiftLint/rule-directory.html" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also check &lt;a href="Source/SwiftLintFramework/Rules"&gt;Source/SwiftLintFramework/Rules&lt;/a&gt;
directory to see their implementation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-opt-in-rules" class="anchor" aria-hidden="true" href="#opt-in-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Opt-In Rules&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;opt_in_rules&lt;/code&gt; are disabled by default (i.e., you have to explicitly enable them
in your configuration file).&lt;/p&gt;
&lt;p&gt;Guidelines on when to mark a rule as opt-in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A rule that can have many false positives (e.g. &lt;code&gt;empty_count&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;A rule that is too slow&lt;/li&gt;
&lt;li&gt;A rule that is not general consensus or is only useful in some cases
(e.g. &lt;code&gt;force_unwrapping&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disable-rules-in-code" class="anchor" aria-hidden="true" href="#disable-rules-in-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disable rules in code&lt;/h3&gt;
&lt;p&gt;Rules can be disabled with a comment inside a source file with the following
format:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:disable &amp;lt;rule1&amp;gt; [&amp;lt;rule2&amp;gt; &amp;lt;rule3&amp;gt;...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The rules will be disabled until the end of the file or until the linter sees a
matching enable comment:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:enable &amp;lt;rule1&amp;gt; [&amp;lt;rule2&amp;gt; &amp;lt;rule3&amp;gt;...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable colon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No warning about colons immediately after variable names!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:enable colon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about colons immediately after variable names&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Including the &lt;code&gt;all&lt;/code&gt; keyword will disable all rules until the linter sees a matching enable comment:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:disable all&lt;/code&gt;
&lt;code&gt;// swiftlint:enable all&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No warning about colons immediately after variable names!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Also no warning about short identifier names&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:enable all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about colons immediately after variable names&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; y &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about short identifier names&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's also possible to modify a &lt;code&gt;disable&lt;/code&gt; or &lt;code&gt;enable&lt;/code&gt; command by appending
&lt;code&gt;:previous&lt;/code&gt;, &lt;code&gt;:this&lt;/code&gt; or &lt;code&gt;:next&lt;/code&gt; for only applying the command to the previous,
this (current) or next line respectively.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:next force_cast&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:this force_cast&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning3 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:previous force_cast&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;swiftlint rules&lt;/code&gt; to print a list of all available rules and their
identifiers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h3&gt;
&lt;p&gt;Configure SwiftLint by adding a &lt;code&gt;.swiftlint.yml&lt;/code&gt; file from the directory you'll
run SwiftLint from. The following parameters can be configured:&lt;/p&gt;
&lt;p&gt;Rule inclusion:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;disabled_rules&lt;/code&gt;: Disable rules from the default enabled set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opt_in_rules&lt;/code&gt;: Enable rules not from the default set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whitelist_rules&lt;/code&gt;: Acts as a whitelist, only the rules specified in this list
will be enabled. Can not be specified alongside &lt;code&gt;disabled_rules&lt;/code&gt; or
&lt;code&gt;opt_in_rules&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;analyzer_rules&lt;/code&gt;: This is an entirely separate list of rules that are only
run by the &lt;code&gt;analyze&lt;/code&gt; command. All analyzer rules are opt-in, so this is the
only configurable rule list (there is no disabled/whitelist equivalent).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;disabled_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule identifiers to exclude from running&lt;/span&gt;
  - &lt;span class="pl-s"&gt;colon&lt;/span&gt;
  - &lt;span class="pl-s"&gt;comma&lt;/span&gt;
  - &lt;span class="pl-s"&gt;control_statement&lt;/span&gt;
&lt;span class="pl-ent"&gt;opt_in_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; some rules are only opt-in&lt;/span&gt;
  - &lt;span class="pl-s"&gt;empty_count&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Find all the available rules by running:&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; swiftlint rules&lt;/span&gt;
&lt;span class="pl-ent"&gt;included&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; paths to include during linting. `--path` is ignored if present.&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source&lt;/span&gt;
&lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; paths to ignore during linting. Takes precedence over `included`.&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Carthage&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Pods&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/ExcludedFolder&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/ExcludedFile.swift&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/*/ExcludedFile.swift &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Exclude files with a wildcard&lt;/span&gt;
&lt;span class="pl-ent"&gt;analyzer_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Rules run by `swiftlint analyze` (experimental)&lt;/span&gt;
  - &lt;span class="pl-s"&gt;explicit_self&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; configurable rules can be customized from this configuration file&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; binary rules can set their severity level&lt;/span&gt;
&lt;span class="pl-ent"&gt;force_cast&lt;/span&gt;: &lt;span class="pl-s"&gt;warning &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; implicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;force_try&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;severity&lt;/span&gt;: &lt;span class="pl-s"&gt;warning &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; explicitly&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rules that have both warning and error levels, can set just the warning level&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; implicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;line_length&lt;/span&gt;: &lt;span class="pl-c1"&gt;110&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; they can set both implicitly with an array&lt;/span&gt;
&lt;span class="pl-ent"&gt;type_body_length&lt;/span&gt;:
  - &lt;span class="pl-c1"&gt;300&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; warning&lt;/span&gt;
  - &lt;span class="pl-c1"&gt;400&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or they can set both explicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;file_length&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;warning&lt;/span&gt;: &lt;span class="pl-c1"&gt;500&lt;/span&gt;
  &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;1200&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; naming rules can set warnings/errors for min_length and max_length&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; additionally they can set excluded names&lt;/span&gt;
&lt;span class="pl-ent"&gt;type_name&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;min_length&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only warning&lt;/span&gt;
  &lt;span class="pl-ent"&gt;max_length&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; warning and error&lt;/span&gt;
    &lt;span class="pl-ent"&gt;warning&lt;/span&gt;: &lt;span class="pl-c1"&gt;40&lt;/span&gt;
    &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;50&lt;/span&gt;
  &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-s"&gt;iPhone &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; excluded via string&lt;/span&gt;
  &lt;span class="pl-ent"&gt;allowed_symbols&lt;/span&gt;: &lt;span class="pl-s"&gt;["_"] &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; these are allowed in type names&lt;/span&gt;
&lt;span class="pl-ent"&gt;identifier_name&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;min_length&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only min_length&lt;/span&gt;
    &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only error&lt;/span&gt;
  &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; excluded via string array&lt;/span&gt;
    - &lt;span class="pl-s"&gt;id&lt;/span&gt;
    - &lt;span class="pl-s"&gt;URL&lt;/span&gt;
    - &lt;span class="pl-s"&gt;GlobalAPIKey&lt;/span&gt;
&lt;span class="pl-ent"&gt;reporter&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;xcode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use environment variables in your configuration file,
by using &lt;code&gt;${SOME_VARIABLE}&lt;/code&gt; in a string.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-defining-custom-rules" class="anchor" aria-hidden="true" href="#defining-custom-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining Custom Rules&lt;/h4&gt;
&lt;p&gt;You can define custom regex-based rules in your configuration file using the
following syntax:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;custom_rules&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;pirates_beat_ninjas&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule identifier&lt;/span&gt;
    &lt;span class="pl-ent"&gt;included&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.*&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; regex that defines paths to include during linting. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.*Test&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; regex that defines paths to exclude during linting. optional&lt;/span&gt;
    &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pirates Beat Ninjas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule name. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;regex&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([n,N]inja)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; matching pattern&lt;/span&gt;
    &lt;span class="pl-ent"&gt;capture_group&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; number of regex capture group to highlight the rule violation at. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;match_kinds&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; SyntaxKinds to match. optional.&lt;/span&gt;
      - &lt;span class="pl-s"&gt;comment&lt;/span&gt;
      - &lt;span class="pl-s"&gt;identifier&lt;/span&gt;
    &lt;span class="pl-ent"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pirates are better than ninjas.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; violation message. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;severity&lt;/span&gt;: &lt;span class="pl-s"&gt;error &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; violation severity. optional.&lt;/span&gt;
  &lt;span class="pl-ent"&gt;no_hiding_in_strings&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;regex&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([n,N]inja)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-ent"&gt;match_kinds&lt;/span&gt;: &lt;span class="pl-s"&gt;string&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is what the output would look like:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/custom-rule.png"&gt;&lt;img src="assets/custom-rule.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can filter the matches by providing one or more &lt;code&gt;match_kinds&lt;/code&gt;, which will
reject matches that include syntax kinds that are not present in this list. Here
are all the possible syntax kinds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;argument&lt;/li&gt;
&lt;li&gt;attribute.builtin&lt;/li&gt;
&lt;li&gt;attribute.id&lt;/li&gt;
&lt;li&gt;buildconfig.id&lt;/li&gt;
&lt;li&gt;buildconfig.keyword&lt;/li&gt;
&lt;li&gt;comment&lt;/li&gt;
&lt;li&gt;comment.mark&lt;/li&gt;
&lt;li&gt;comment.url&lt;/li&gt;
&lt;li&gt;doccomment&lt;/li&gt;
&lt;li&gt;doccomment.field&lt;/li&gt;
&lt;li&gt;identifier&lt;/li&gt;
&lt;li&gt;keyword&lt;/li&gt;
&lt;li&gt;number&lt;/li&gt;
&lt;li&gt;objectliteral&lt;/li&gt;
&lt;li&gt;parameter&lt;/li&gt;
&lt;li&gt;placeholder&lt;/li&gt;
&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;string_interpolation_anchor&lt;/li&gt;
&lt;li&gt;typeidentifier&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If using custom rules alongside a whitelist, make sure to add &lt;code&gt;custom_rules&lt;/code&gt; as an item under &lt;code&gt;whitelist_rules&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-nested-configurations" class="anchor" aria-hidden="true" href="#nested-configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nested Configurations&lt;/h4&gt;
&lt;p&gt;SwiftLint supports nesting configuration files for more granular control over
the linting process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Include additional &lt;code&gt;.swiftlint.yml&lt;/code&gt; files where necessary in your directory
structure.&lt;/li&gt;
&lt;li&gt;Each file will be linted using the configuration file that is in its
directory or at the deepest level of its parent directories. Otherwise the
root configuration will be used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;included&lt;/code&gt; is ignored for nested configurations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-auto-correct" class="anchor" aria-hidden="true" href="#auto-correct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto-correct&lt;/h3&gt;
&lt;p&gt;SwiftLint can automatically correct certain violations. Files on disk are
overwritten with a corrected version.&lt;/p&gt;
&lt;p&gt;Please make sure to have backups of these files before running
&lt;code&gt;swiftlint autocorrect&lt;/code&gt;, otherwise important data may be lost.&lt;/p&gt;
&lt;p&gt;Standard linting is disabled while correcting because of the high likelihood of
violations (or their offsets) being incorrect after modifying a file while
applying corrections.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-analyze-experimental" class="anchor" aria-hidden="true" href="#analyze-experimental"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Analyze (experimental)&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;experimental&lt;/em&gt; &lt;code&gt;swiftlint analyze&lt;/code&gt; command can lint Swift files using the
full type-checked AST. The compiler log path containing the clean &lt;code&gt;swiftc&lt;/code&gt; build
command invocation (incremental builds will fail) must be passed to &lt;code&gt;analyze&lt;/code&gt;
via the &lt;code&gt;--compiler-log-path&lt;/code&gt; flag.
e.g. &lt;code&gt;--compiler-log-path /path/to/xcodebuild.log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This can be obtained by running
&lt;code&gt;xcodebuild -workspace {WORKSPACE}.xcworkspace -scheme {SCHEME} &amp;gt; xcodebuild.log&lt;/code&gt;
with a clean &lt;code&gt;DerivedData&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;This command and related code in SwiftLint is subject to substantial changes at
any time while this feature is marked as experimental. Analyzer rules also tend
to be considerably slower than lint rules.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;MIT licensed.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/realm.png"&gt;&lt;img src="assets/realm.png" width="184" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SwiftLint is maintained and funded by Realm Inc. The names and logos for
Realm are trademarks of Realm Inc.&lt;/p&gt;
&lt;p&gt;We &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; open source software!
See &lt;a href="https://github.com/realm"&gt;our other open source projects&lt;/a&gt;,
read &lt;a href="https://realm.io/news" rel="nofollow"&gt;our blog&lt;/a&gt;, or say hi on twitter
(&lt;a href="https://twitter.com/realm" rel="nofollow"&gt;@realm&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/macstadium.png"&gt;&lt;img src="assets/macstadium.png" width="184" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our thanks to MacStadium for providing a Mac Mini to run our performance
tests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>realm</author><guid isPermaLink="false">https://github.com/realm/SwiftLint</guid><pubDate>Fri, 10 Jan 2020 00:02:00 GMT</pubDate></item><item><title>Carthage/Carthage #3 in Swift, Today</title><link>https://github.com/Carthage/Carthage</link><description>&lt;p&gt;&lt;i&gt;A simple, decentralized dependency manager for Cocoa&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Logo/PNG/header.png"&gt;&lt;img src="Logo/PNG/header.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-carthage---" class="anchor" aria-hidden="true" href="#carthage---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage &lt;a href="https://raw.githubusercontent.com/Carthage/Carthage/master/LICENSE.md" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c0e54a826d90da52e4ee70c63fef3ee61b3ffbd5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d6c69676874677265792e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-MIT-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage/releases"&gt;&lt;img src="https://camo.githubusercontent.com/3f4c1a081128a7fb77fe7d371e52f0e675090200/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f63617274686167652f63617274686167652e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/carthage/carthage.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://houndci.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c940d021ef775a44e0880bc3ba124a6bee5fefb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657669657765645f62792d486f756e642d3845363442302e737667" alt="Reviewed by Hound" data-canonical-src="https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Carthage is intended to be the simplest way to add frameworks to your Cocoa application.&lt;/p&gt;
&lt;p&gt;Carthage builds your dependencies and provides you with binary frameworks, but you retain full control over your project structure and setup. Carthage does not automatically modify your project files or your build settings.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing-carthage"&gt;Installing Carthage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adding-frameworks-to-an-application"&gt;Adding frameworks to an application&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#if-youre-building-for-macos"&gt;If you're building for macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#if-youre-building-for-ios-tvos-or-watchos"&gt;If you're building for iOS, tvOS, or watchOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#for-both-platforms"&gt;For both platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#optionally-add-build-phase-to-warn-about-outdated-dependencies"&gt;(Optionally) Add build phase to warn about outdated dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-binary-framework-download-compatibility"&gt;Swift binary framework download compatibility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#running-a-project-that-uses-carthage"&gt;Running a project that uses Carthage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adding-frameworks-to-unit-tests-or-a-framework"&gt;Adding frameworks to unit tests or a framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#upgrading-frameworks"&gt;Upgrading frameworks&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#experimental-resolver"&gt;Experimental Resolver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#nested-dependencies"&gt;Nested dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-submodules-for-dependencies"&gt;Using submodules for dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#automatically-rebuilding-dependencies"&gt;Automatically rebuilding dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#caching-builds"&gt;Caching builds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bashzshfish-completion"&gt;Bash/Zsh/Fish completion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#supporting-carthage-for-your-framework"&gt;Supporting Carthage for your framework&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#share-your-xcode-schemes"&gt;Share your Xcode schemes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#resolve-build-failures"&gt;Resolve build failures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tag-stable-releases"&gt;Tag stable releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#archive-prebuilt-frameworks-into-one-zip-file"&gt;Archive prebuilt frameworks into one zip file&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#use-travis-ci-to-upload-your-tagged-prebuilt-frameworks"&gt;Use travis-ci to upload your tagged prebuilt frameworks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-static-frameworks-to-speed-up-your-apps-launch-times"&gt;Build static frameworks to speed up your app’s launch times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#declare-your-compatibility"&gt;Declare your compatibility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#known-issues"&gt;Known issues&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#dwarfs-symbol-problem"&gt;DWARFs symbol problem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#carthagekit"&gt;CarthageKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#differences-between-carthage-and-cocoapods"&gt;Differences between Carthage and CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get Carthage by running &lt;code&gt;brew install carthage&lt;/code&gt; or choose &lt;a href="#installing-carthage"&gt;another installation method&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;a href="Documentation/Artifacts.md#cartfile"&gt;Cartfile&lt;/a&gt; in the same directory where your &lt;code&gt;.xcodeproj&lt;/code&gt; or &lt;code&gt;.xcworkspace&lt;/code&gt; is&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List the desired dependencies in the &lt;a href="Documentation/Artifacts.md#cartfile"&gt;Cartfile&lt;/a&gt;, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "Alamofire/Alamofire" ~&amp;gt; 4.7.2
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;carthage update&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;Cartfile.resolved&lt;/code&gt; file and a &lt;code&gt;Carthage&lt;/code&gt; directory will appear in the same directory where your &lt;code&gt;.xcodeproj&lt;/code&gt; or &lt;code&gt;.xcworkspace&lt;/code&gt; is&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Drag the built &lt;code&gt;.framework&lt;/code&gt; binaries from &lt;code&gt;Carthage/Build/&amp;lt;platform&amp;gt;&lt;/code&gt; into your application’s Xcode project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are using Carthage for an application, follow the remaining steps, otherwise stop here.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On your application targets’ &lt;em&gt;Build Phases&lt;/em&gt; settings tab, click the &lt;em&gt;+&lt;/em&gt; icon and choose &lt;em&gt;New Run Script Phase&lt;/em&gt;. Create a Run Script in which you specify your shell (ex: &lt;code&gt;/bin/sh&lt;/code&gt;), add the following contents to the script area below the shell:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;/usr/local/bin/carthage copy-frameworks&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add the paths to the frameworks you want to use under “Input Files". For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(SRCROOT)/Carthage/Build/iOS/Alamofire.framework
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the paths to the copied frameworks to the “Output Files”. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(BUILT_PRODUCTS_DIR)/$(FRAMEWORKS_FOLDER_PATH)/Alamofire.framework
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another approach when having multiple dependencies is to use &lt;code&gt;.xcfilelist&lt;/code&gt;s. This is covered in &lt;a href="#if-youre-building-for-ios-tvos-or-watchos"&gt;If you´re building for iOS, tvOS ot WatchOS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For an in depth guide, read on from &lt;a href="#adding-frameworks-to-an-application"&gt;Adding frameworks to an application&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-carthage" class="anchor" aria-hidden="true" href="#installing-carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Carthage&lt;/h2&gt;
&lt;p&gt;There are multiple options for installing Carthage:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Installer:&lt;/strong&gt; Download and run the &lt;code&gt;Carthage.pkg&lt;/code&gt; file for the latest &lt;a href="https://github.com/Carthage/Carthage/releases"&gt;release&lt;/a&gt;, then follow the on-screen instructions. If you are installing the pkg via CLI, you might need to run &lt;code&gt;sudo chown -R $(whoami) /usr/local&lt;/code&gt; first.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Homebrew:&lt;/strong&gt; You can use &lt;a href="http://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt; and install the &lt;code&gt;carthage&lt;/code&gt; tool on your system simply by running &lt;code&gt;brew update&lt;/code&gt; and &lt;code&gt;brew install carthage&lt;/code&gt;. (note: if you previously installed the binary version of Carthage, you should delete &lt;code&gt;/Library/Frameworks/CarthageKit.framework&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MacPorts:&lt;/strong&gt; You can use &lt;a href="https://www.macports.org/" rel="nofollow"&gt;MacPorts&lt;/a&gt; and install the &lt;code&gt;carthage&lt;/code&gt; tool on your system simply by running &lt;code&gt;sudo port selfupdate&lt;/code&gt; and &lt;code&gt;sudo port install carthage&lt;/code&gt;. (note: if you previously installed the binary version of Carthage, you should delete &lt;code&gt;/Library/Frameworks/CarthageKit.framework&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;From source:&lt;/strong&gt; If you’d like to run the latest development version (which may be highly unstable or incompatible), simply clone the &lt;code&gt;master&lt;/code&gt; branch of the repository, then run &lt;code&gt;make install&lt;/code&gt;. Requires Xcode 9.4 (Swift 4.1).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-adding-frameworks-to-an-application" class="anchor" aria-hidden="true" href="#adding-frameworks-to-an-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding frameworks to an application&lt;/h2&gt;
&lt;p&gt;Once you have Carthage &lt;a href="#installing-carthage"&gt;installed&lt;/a&gt;, you can begin adding frameworks to your project. Note that Carthage only supports dynamic frameworks, which are &lt;strong&gt;only available on iOS 8 or later&lt;/strong&gt; (or any version of OS X).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h3&gt;
&lt;h5&gt;&lt;a id="user-content-if-youre-building-for-macos" class="anchor" aria-hidden="true" href="#if-youre-building-for-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If you're building for macOS&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;Create a &lt;a href="Documentation/Artifacts.md#cartfile"&gt;Cartfile&lt;/a&gt; that lists the frameworks you’d like to use in your project.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;carthage update --platform macOS&lt;/code&gt;. This will fetch dependencies into a &lt;a href="Documentation/Artifacts.md#carthagecheckouts"&gt;Carthage/Checkouts&lt;/a&gt; folder and build each one or download a pre-compiled framework.&lt;/li&gt;
&lt;li&gt;On your application targets’ &lt;em&gt;General&lt;/em&gt; settings tab, in the &lt;em&gt;Embedded Binaries&lt;/em&gt; section, drag and drop each framework you want to use from the &lt;a href="Documentation/Artifacts.md#carthagebuild"&gt;Carthage/Build&lt;/a&gt; folder on disk.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Additionally, you'll need to copy debug symbols for debugging and crash reporting on OS X.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;On your application target’s &lt;em&gt;Build Phases&lt;/em&gt; settings tab, click the &lt;em&gt;+&lt;/em&gt; icon and choose &lt;em&gt;New Copy Files Phase&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;Destination&lt;/em&gt; drop-down menu and select &lt;em&gt;Products Directory&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;For each framework you’re using, drag and drop its corresponding dSYM file.&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;&lt;a id="user-content-if-youre-building-for-ios-tvos-or-watchos" class="anchor" aria-hidden="true" href="#if-youre-building-for-ios-tvos-or-watchos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If you're building for iOS, tvOS, or watchOS&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;a href="Documentation/Artifacts.md#cartfile"&gt;Cartfile&lt;/a&gt; that lists the frameworks you’d like to use in your project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;carthage update&lt;/code&gt;. This will fetch dependencies into a &lt;a href="Documentation/Artifacts.md#carthagecheckouts"&gt;Carthage/Checkouts&lt;/a&gt; folder, then build each one or download a pre-compiled framework.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On your application targets’ &lt;em&gt;General&lt;/em&gt; settings tab, in the “Linked Frameworks and Libraries” section, drag and drop each framework you want to use from the &lt;a href="Documentation/Artifacts.md#carthagebuild"&gt;Carthage/Build&lt;/a&gt; folder on disk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On your application targets’ &lt;em&gt;Build Phases&lt;/em&gt; settings tab, click the &lt;em&gt;+&lt;/em&gt; icon and choose &lt;em&gt;New Run Script Phase&lt;/em&gt;. Create a Run Script in which you specify your shell (ex: &lt;code&gt;/bin/sh&lt;/code&gt;), add the following contents to the script area below the shell:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;/usr/local/bin/carthage copy-frameworks&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a file named &lt;code&gt;input.xcfilelist&lt;/code&gt; and a file named &lt;code&gt;output.xcfilelist&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the paths to the frameworks you want to use to your &lt;code&gt;input.xcfilelist&lt;/code&gt;. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(SRCROOT)/Carthage/Build/iOS/Result.framework
$(SRCROOT)/Carthage/Build/iOS/ReactiveSwift.framework
$(SRCROOT)/Carthage/Build/iOS/ReactiveCocoa.framework
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the paths to the copied frameworks to the &lt;code&gt;output.xcfilelist&lt;/code&gt;. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(BUILT_PRODUCTS_DIR)/$(FRAMEWORKS_FOLDER_PATH)/Result.framework
$(BUILT_PRODUCTS_DIR)/$(FRAMEWORKS_FOLDER_PATH)/ReactiveSwift.framework
$(BUILT_PRODUCTS_DIR)/$(FRAMEWORKS_FOLDER_PATH)/ReactiveCocoa.framework
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With output files specified alongside the input files, Xcode only needs to run the script when the input files have changed or the output files are missing. This means dirty builds will be faster when you haven't rebuilt frameworks with Carthage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;code&gt;input.xcfilelist&lt;/code&gt; to the "Input File Lists" section of the Carthage run script phase&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;code&gt;output.xcfilelist&lt;/code&gt; to the "Output File Lists" section of the Carthage run script phase&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This script works around an &lt;a href="http://www.openradar.me/radar?id=6409498411401216" rel="nofollow"&gt;App Store submission bug&lt;/a&gt; triggered by universal binaries and ensures that necessary bitcode-related files and dSYMs are copied when archiving.&lt;/p&gt;
&lt;p&gt;With the debug information copied into the built products directory, Xcode will be able to symbolicate the stack trace whenever you stop at a breakpoint. This will also enable you to step through third-party code in the debugger.&lt;/p&gt;
&lt;p&gt;When archiving your application for submission to the App Store or TestFlight, Xcode will also copy these files into the dSYMs subdirectory of your application’s &lt;code&gt;.xcarchive&lt;/code&gt; bundle.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-for-both-platforms" class="anchor" aria-hidden="true" href="#for-both-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For both platforms&lt;/h5&gt;
&lt;p&gt;Along the way, Carthage will have created some &lt;a href="Documentation/Artifacts.md"&gt;build artifacts&lt;/a&gt;. The most important of these is the &lt;a href="Documentation/Artifacts.md#cartfileresolved"&gt;Cartfile.resolved&lt;/a&gt; file, which lists the versions that were actually built for each framework. &lt;strong&gt;Make sure to commit your &lt;a href="Documentation/Artifacts.md#cartfileresolved"&gt;Cartfile.resolved&lt;/a&gt;&lt;/strong&gt;, because anyone else using the project will need that file to build the same framework versions.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-optionally-add-build-phase-to-warn-about-outdated-dependencies" class="anchor" aria-hidden="true" href="#optionally-add-build-phase-to-warn-about-outdated-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(Optionally) Add build phase to warn about outdated dependencies&lt;/h5&gt;
&lt;p&gt;You can add a Run Script phase to automatically warn you when one of your dependencies is out of date.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;On your application targets’ &lt;code&gt;Build Phases&lt;/code&gt; settings tab, click the &lt;code&gt;+&lt;/code&gt; icon and choose &lt;code&gt;New Run Script Phase&lt;/code&gt;. Create a Run Script in which you specify your shell (ex: &lt;code&gt;/bin/sh&lt;/code&gt;), add the following contents to the script area below the shell:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;/usr/local/bin/carthage outdated --xcode-warnings &lt;span class="pl-k"&gt;2&amp;gt;&lt;/span&gt;/dev/null&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-swift-binary-framework-download-compatibility" class="anchor" aria-hidden="true" href="#swift-binary-framework-download-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift binary framework download compatibility&lt;/h5&gt;
&lt;p&gt;Carthage will check to make sure that downloaded Swift (and mixed Objective-C/Swift) frameworks were built with the same version of Swift that is in use locally. If there is a version mismatch, Carthage will proceed to build the framework from source. If the framework cannot be built from source, Carthage will fail.&lt;/p&gt;
&lt;p&gt;Because Carthage uses the output of &lt;code&gt;xcrun swift --version&lt;/code&gt; to determine the local Swift version, make sure to run Carthage commands with the Swift toolchain that you intend to use. For many use cases, nothing additional is needed. However, for example, if you are building a Swift 2.3 project using Xcode 8.x, one approach to specifying your default &lt;code&gt;swift&lt;/code&gt; for &lt;code&gt;carthage bootstrap&lt;/code&gt; is to use the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;TOOLCHAINS=com.apple.dt.toolchain.Swift_2_3 carthage bootstrap
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-running-a-project-that-uses-carthage" class="anchor" aria-hidden="true" href="#running-a-project-that-uses-carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running a project that uses Carthage&lt;/h3&gt;
&lt;p&gt;After you’ve finished the above steps and pushed your changes, other users of the project only need to fetch the repository and run &lt;code&gt;carthage bootstrap&lt;/code&gt; to get started with the frameworks you’ve added.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-adding-frameworks-to-unit-tests-or-a-framework" class="anchor" aria-hidden="true" href="#adding-frameworks-to-unit-tests-or-a-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding frameworks to unit tests or a framework&lt;/h3&gt;
&lt;p&gt;Using Carthage for the dependencies of any arbitrary target is fairly similar to &lt;a href="#adding-frameworks-to-an-application"&gt;using Carthage for an application&lt;/a&gt;. The main difference lies in how the frameworks are actually set up and linked in Xcode.&lt;/p&gt;
&lt;p&gt;Because unit test targets are missing the &lt;em&gt;Linked Frameworks and Libraries&lt;/em&gt; section in their &lt;em&gt;General&lt;/em&gt; settings tab, you must instead drag the &lt;a href="Documentation/Artifacts.md#carthagebuild"&gt;built frameworks&lt;/a&gt; to the &lt;em&gt;Link Binaries With Libraries&lt;/em&gt; build phase.&lt;/p&gt;
&lt;p&gt;In the Test target under the &lt;em&gt;Build Settings&lt;/em&gt; tab, add &lt;code&gt;@loader_path/Frameworks&lt;/code&gt; to the &lt;em&gt;Runpath Search Paths&lt;/em&gt; if it isn't already present.&lt;/p&gt;
&lt;p&gt;In rare cases, you may want to also copy each dependency into the build product (e.g., to embed dependencies within the outer framework, or make sure dependencies are present in a test bundle). To do this, create a new &lt;em&gt;Copy Files&lt;/em&gt; build phase with the &lt;em&gt;Frameworks&lt;/em&gt; destination, then add the framework reference there as well. You shouldn't use the &lt;code&gt;carthage copy-frameworks&lt;/code&gt; command since test bundles don't need frameworks stripped, and running concurrent instances of &lt;code&gt;copy-frameworks&lt;/code&gt; (with parallel builds turn on) is not supported.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-upgrading-frameworks" class="anchor" aria-hidden="true" href="#upgrading-frameworks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrading frameworks&lt;/h3&gt;
&lt;p&gt;If you’ve modified your &lt;a href="Documentation/Artifacts.md#cartfile"&gt;Cartfile&lt;/a&gt;, or you want to update to the newest versions of each framework (subject to the requirements you’ve specified), simply run the &lt;code&gt;carthage update&lt;/code&gt; command again.&lt;/p&gt;
&lt;p&gt;If you only want to update one, or specific, dependencies, pass them as a space-separated list to the &lt;code&gt;update&lt;/code&gt; command. e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;carthage update Box
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;carthage update Box Result
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-experimental-resolver" class="anchor" aria-hidden="true" href="#experimental-resolver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Experimental Resolver&lt;/h5&gt;
&lt;p&gt;A rewrite of the logic for upgrading frameworks was done with the aim of increasing speed and reducing memory usage. It is currently an opt-in feature. It can be used by passing &lt;code&gt;--new-resolver&lt;/code&gt; to the update command, e.g.,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;carthage update --new-resolver Box
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are experiencing performance problems during updates, please give the new resolver a try&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-nested-dependencies" class="anchor" aria-hidden="true" href="#nested-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nested dependencies&lt;/h3&gt;
&lt;p&gt;If the framework you want to add to your project has dependencies explicitly listed in a &lt;a href="Documentation/Artifacts.md#cartfile"&gt;Cartfile&lt;/a&gt;, Carthage will automatically retrieve them for you. You will then have to &lt;strong&gt;drag them yourself into your project&lt;/strong&gt; from the &lt;a href="Documentation/Artifacts.md#carthagebuild"&gt;Carthage/Build&lt;/a&gt; folder.&lt;/p&gt;
&lt;p&gt;If the embedded framework in your project has dependencies to other frameworks you must  &lt;strong&gt;link them to application target&lt;/strong&gt; (even if application target does not have dependency to that frameworks and never uses them).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-submodules-for-dependencies" class="anchor" aria-hidden="true" href="#using-submodules-for-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using submodules for dependencies&lt;/h3&gt;
&lt;p&gt;By default, Carthage will directly &lt;a href="Documentation/Artifacts.md#carthagecheckouts"&gt;check out&lt;/a&gt; dependencies’ source files into your project folder, leaving you to commit or ignore them as you choose. If you’d like to have dependencies available as Git submodules instead (perhaps so you can commit and push changes within them), you can run &lt;code&gt;carthage update&lt;/code&gt; or &lt;code&gt;carthage checkout&lt;/code&gt; with the &lt;code&gt;--use-submodules&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;When run this way, Carthage will write to your repository’s &lt;code&gt;.gitmodules&lt;/code&gt; and &lt;code&gt;.git/config&lt;/code&gt; files, and automatically update the submodules when the dependencies’ versions change.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-automatically-rebuilding-dependencies" class="anchor" aria-hidden="true" href="#automatically-rebuilding-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatically rebuilding dependencies&lt;/h3&gt;
&lt;p&gt;If you want to work on your dependencies during development, and want them to be automatically rebuilt when you build your parent project, you can add a Run Script build phase that invokes Carthage like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;/usr/local/bin/carthage build --platform &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$PLATFORM_NAME&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --project-directory &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$SRCROOT&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that you should be &lt;a href="#using-submodules-for-dependencies"&gt;using submodules&lt;/a&gt; before doing this, because plain checkouts &lt;a href="Documentation/Artifacts.md#carthagecheckouts"&gt;should not be modified&lt;/a&gt; directly.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-caching-builds" class="anchor" aria-hidden="true" href="#caching-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caching builds&lt;/h3&gt;
&lt;p&gt;By default Carthage will rebuild a dependency regardless of whether it's the same resolved version as before. Passing the &lt;code&gt;--cache-builds&lt;/code&gt; will cause carthage to avoid rebuilding a dependency if it can. See information on &lt;a href="Documentation/VersionFile.md"&gt;version files&lt;/a&gt; for details on how Carthage performs this caching.&lt;/p&gt;
&lt;p&gt;Note: At this time &lt;code&gt;--cache-builds&lt;/code&gt; is incompatible with &lt;code&gt;--use-submodules&lt;/code&gt;. Using both will result in working copy and committed changes to your submodule dependency not being correctly rebuilt. See &lt;a href="https://github.com/Carthage/Carthage/issues/1785"&gt;#1785&lt;/a&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bashzshfish-completion" class="anchor" aria-hidden="true" href="#bashzshfish-completion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bash/Zsh/Fish completion&lt;/h3&gt;
&lt;p&gt;Auto completion of Carthage commands and options are available as documented in &lt;a href="Documentation/BashZshFishCompletion.md"&gt;Bash/Zsh/Fish Completion&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supporting-carthage-for-your-framework" class="anchor" aria-hidden="true" href="#supporting-carthage-for-your-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Carthage for your framework&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Carthage only officially supports dynamic frameworks&lt;/strong&gt;. Dynamic frameworks can be used on any version of OS X, but only on &lt;strong&gt;iOS 8 or later&lt;/strong&gt;. Additionally, since version 0.30.0 Carthage supports &lt;strong&gt;static&lt;/strong&gt; frameworks.&lt;/p&gt;
&lt;p&gt;Because Carthage has no centralized package list, and no project specification format, &lt;strong&gt;most frameworks should build automatically&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The specific requirements of any framework project are listed below.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-share-your-xcode-schemes" class="anchor" aria-hidden="true" href="#share-your-xcode-schemes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Share your Xcode schemes&lt;/h3&gt;
&lt;p&gt;Carthage will only build Xcode schemes that are shared from your &lt;code&gt;.xcodeproj&lt;/code&gt;. You can see if all of your intended schemes build successfully by running &lt;code&gt;carthage build --no-skip-current&lt;/code&gt;, then checking the &lt;a href="Documentation/Artifacts.md#carthagebuild"&gt;Carthage/Build&lt;/a&gt; folder.&lt;/p&gt;
&lt;p&gt;If an important scheme is not built when you run that command, open Xcode and make sure that the &lt;a href="https://developer.apple.com/library/content/documentation/IDEs/Conceptual/xcode_guide-continuous_integration/ConfigureBots.html#//apple_ref/doc/uid/TP40013292-CH9-SW3" rel="nofollow"&gt;scheme is marked as &lt;em&gt;Shared&lt;/em&gt;&lt;/a&gt;, so Carthage can discover it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-resolve-build-failures" class="anchor" aria-hidden="true" href="#resolve-build-failures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resolve build failures&lt;/h3&gt;
&lt;p&gt;If you encounter build failures in &lt;code&gt;carthage build --no-skip-current&lt;/code&gt;, try running &lt;code&gt;xcodebuild -scheme SCHEME -workspace WORKSPACE build&lt;/code&gt; or &lt;code&gt;xcodebuild -scheme SCHEME -project PROJECT build&lt;/code&gt; (with the actual values) and see if the same failure occurs there. This should hopefully yield enough information to resolve the problem.&lt;/p&gt;
&lt;p&gt;If you have multiple versions of the Apple developer tools installed (an Xcode beta, for example), use &lt;code&gt;xcode-select&lt;/code&gt; to change which version Carthage uses.&lt;/p&gt;
&lt;p&gt;If you’re still not able to build your framework with Carthage, please &lt;a href="https://github.com/Carthage/Carthage/issues/new"&gt;open an issue&lt;/a&gt; and we’d be happy to help!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tag-stable-releases" class="anchor" aria-hidden="true" href="#tag-stable-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tag stable releases&lt;/h3&gt;
&lt;p&gt;Carthage determines which versions of your framework are available by searching through the tags published on the repository, and trying to interpret each tag name as a &lt;a href="https://semver.org/" rel="nofollow"&gt;semantic version&lt;/a&gt;. For example, in the tag &lt;code&gt;v1.2&lt;/code&gt;, the semantic version is 1.2.0.&lt;/p&gt;
&lt;p&gt;Tags without any version number, or with any characters following the version number (e.g., &lt;code&gt;1.2-alpha-1&lt;/code&gt;) are currently unsupported, and will be ignored.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-archive-prebuilt-frameworks-into-one-zip-file" class="anchor" aria-hidden="true" href="#archive-prebuilt-frameworks-into-one-zip-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Archive prebuilt frameworks into one zip file&lt;/h3&gt;
&lt;p&gt;Carthage can automatically use prebuilt frameworks, instead of building from scratch, if they are attached to a &lt;a href="https://help.github.com/articles/about-releases/"&gt;GitHub Release&lt;/a&gt; on your project’s repository or via a binary project definition file.&lt;/p&gt;
&lt;p&gt;To offer prebuilt frameworks for a specific tag, the binaries for &lt;em&gt;all&lt;/em&gt; supported platforms should be zipped up together into &lt;em&gt;one&lt;/em&gt; archive, and that archive should be attached to a published Release corresponding to that tag. The attachment should include &lt;code&gt;.framework&lt;/code&gt; in its name (e.g., &lt;code&gt;ReactiveCocoa.framework.zip&lt;/code&gt;), to indicate to Carthage that it contains binaries. The directory structure of the acthive is free form but, &lt;strong&gt;frameworks should only appear once in the archive&lt;/strong&gt; as they will be copied
to &lt;code&gt;Carthage/Build/&amp;lt;platform&amp;gt;&lt;/code&gt; based on their name (e.g. &lt;code&gt;ReactiveCocoa.framework&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;You can perform the archiving operation with carthage itself using:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;-carthage build --no-skip-current
-carthage archive YourFrameworkName&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or alternatively&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;carthage build --archive&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Draft Releases will be automatically ignored, even if they correspond to the desired tag.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-use-travis-ci-to-upload-your-tagged-prebuilt-frameworks" class="anchor" aria-hidden="true" href="#use-travis-ci-to-upload-your-tagged-prebuilt-frameworks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use travis-ci to upload your tagged prebuilt frameworks&lt;/h4&gt;
&lt;p&gt;It is possible to use travis-ci in order to build and upload your tagged releases.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/travis-ci/travis.rb#installation"&gt;Install travis CLI&lt;/a&gt; with &lt;code&gt;gem install travis&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.travis-ci.com/user/getting-started/" rel="nofollow"&gt;Setup&lt;/a&gt; travis-ci for your repository (Steps 1 and 2)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create &lt;code&gt;.travis.yml&lt;/code&gt; file at the root of your repository based on that template. Set &lt;code&gt;FRAMEWORK_NAME&lt;/code&gt; to the correct value.&lt;/p&gt;
&lt;p&gt;Replace PROJECT_PLACEHOLDER and SCHEME_PLACEHOLDER&lt;/p&gt;
&lt;p&gt;If you are using a &lt;em&gt;workspace&lt;/em&gt; instead of a &lt;em&gt;project&lt;/em&gt; remove the xcode_project line and uncomment the xcode_workspace line.&lt;/p&gt;
&lt;p&gt;The project should be in the format: MyProject.xcodeproj&lt;/p&gt;
&lt;p&gt;The workspace should be in the format: MyWorkspace.xcworkspace&lt;/p&gt;
&lt;p&gt;Feel free to update the &lt;code&gt;xcode_sdk&lt;/code&gt; value to another SDK, note that testing on iphoneos SDK would require you to upload a code signing identity&lt;/p&gt;
&lt;p&gt;For more informations you can visit &lt;a href="https://docs.travis-ci.com/user/languages/objective-c" rel="nofollow"&gt;travis docs for objective-c projects&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;language&lt;/span&gt;: &lt;span class="pl-s"&gt;objective-c&lt;/span&gt;
&lt;span class="pl-ent"&gt;osx_image&lt;/span&gt;: &lt;span class="pl-s"&gt;xcode7.3&lt;/span&gt;
&lt;span class="pl-ent"&gt;xcode_project&lt;/span&gt;: &lt;span class="pl-s"&gt;&amp;lt;PROJECT_PLACEHOLDER&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; xcode_workspace: &amp;lt;WORKSPACE_PLACEHOLDER&amp;gt;&lt;/span&gt;
&lt;span class="pl-ent"&gt;xcode_scheme&lt;/span&gt;: &lt;span class="pl-s"&gt;&amp;lt;SCHEME_PLACEHOLDER&amp;gt;&lt;/span&gt;
&lt;span class="pl-ent"&gt;xcode_sdk&lt;/span&gt;: &lt;span class="pl-s"&gt;iphonesimulator9.3&lt;/span&gt;
&lt;span class="pl-ent"&gt;env&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;global&lt;/span&gt;:
    - &lt;span class="pl-s"&gt;FRAMEWORK_NAME=&amp;lt;THIS_IS_A_PLACEHOLDER_REPLACE_ME&amp;gt;&lt;/span&gt;
&lt;span class="pl-ent"&gt;before_install&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;brew update&lt;/span&gt;
  - &lt;span class="pl-s"&gt;brew outdated carthage || brew upgrade carthage&lt;/span&gt;
&lt;span class="pl-ent"&gt;before_script&lt;/span&gt;:
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; bootstrap the dependencies for the project&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; you can remove if you don't have dependencies&lt;/span&gt;
  - &lt;span class="pl-s"&gt;carthage bootstrap&lt;/span&gt;
&lt;span class="pl-ent"&gt;before_deploy&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;carthage build --no-skip-current&lt;/span&gt;
  - &lt;span class="pl-s"&gt;carthage archive $FRAMEWORK_NAME&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;travis setup releases&lt;/code&gt;, follow documentation &lt;a href="https://docs.travis-ci.com/user/deployment/releases/" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This command will encode your GitHub credentials into the &lt;code&gt;.travis.yml&lt;/code&gt; file in order to let travis upload the release to GitHub.com
When prompted for the file to upload, enter &lt;code&gt;$FRAMEWORK_NAME.framework.zip&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update the deploy section to run on tags:&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;.travis.yml&lt;/code&gt; locate:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;on&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;repo&lt;/span&gt;: &lt;span class="pl-s"&gt;repo/repo&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And add &lt;code&gt;tags: true&lt;/code&gt; and &lt;code&gt;skip_cleanup: true&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;skip_cleanup&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-ent"&gt;on&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;repo&lt;/span&gt;: &lt;span class="pl-s"&gt;repo/repo&lt;/span&gt;
  &lt;span class="pl-ent"&gt;tags&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That will let travis know to create a deployment when a new tag is pushed and prevent travis to cleanup the generated zip file&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-build-static-frameworks-to-speed-up-your-apps-launch-times" class="anchor" aria-hidden="true" href="#build-static-frameworks-to-speed-up-your-apps-launch-times"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build static frameworks to speed up your app’s launch times&lt;/h3&gt;
&lt;p&gt;If you embed many dynamic frameworks into your app, its pre-main launch times may be quite slow. Carthage is able to help mitigate this by building your dynamic frameworks as static frameworks instead. Static frameworks can be linked directly into your application or merged together into a larger dynamic framework with a few simple modifications to your workflow, which can result in dramatic reductions in pre-main launch times.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-carthage-0300-or-higher" class="anchor" aria-hidden="true" href="#carthage-0300-or-higher"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage 0.30.0 or higher&lt;/h4&gt;
&lt;p&gt;Since version 0.30.0 Carthage project rolls out support for statically linked frameworks written in Swift or Objective-C, support for which has been introduced in Xcode 9.4. Please note however that it specifically says &lt;em&gt;frameworks&lt;/em&gt;, hence Darwin bundles with &lt;strong&gt;.framework&lt;/strong&gt; extension and statically linked object archives inside. Carthage does not currently support static &lt;em&gt;library&lt;/em&gt; schemes, nor are there any plans to introduce their support in the future.&lt;/p&gt;
&lt;p&gt;The workflow differs barely:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You still need to tick your Carthage-compliant project's schemes as &lt;em&gt;shared&lt;/em&gt; in &lt;em&gt;Product &amp;gt; Scheme &amp;gt; Manage Schemes...&lt;/em&gt;, just as with dynamic binaries&lt;/li&gt;
&lt;li&gt;You still need to link against static &lt;strong&gt;.frameworks&lt;/strong&gt; in your project's &lt;em&gt;Build Phases&lt;/em&gt; just as with dynamic binaries&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In your Carthage-compliant project's Cocoa Framework target's &lt;em&gt;Build Settings&lt;/em&gt;, &lt;em&gt;Linking&lt;/em&gt; section, set &lt;strong&gt;Mach-O Type&lt;/strong&gt; to &lt;strong&gt;Static Library&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Your statically linked frameworks will be built at &lt;em&gt;./Carthage/Build/$(PLATFORM_NAME)/Static&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;You should not add any of static frameworks as input/output files in &lt;strong&gt;carthage copy-frameworks&lt;/strong&gt; &lt;em&gt;Build Phase&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-carthage-0290-or-lower" class="anchor" aria-hidden="true" href="#carthage-0290-or-lower"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage 0.29.0 or lower&lt;/h4&gt;
&lt;p&gt;See the &lt;a href="Documentation/StaticFrameworks.md"&gt;StaticFrameworks&lt;/a&gt; doc for details.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Please note that a few caveats apply to this approach:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Swift static frameworks are not officially supported by Apple&lt;/li&gt;
&lt;li&gt;This is an advanced workflow that is not built into Carthage, YMMV&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-declare-your-compatibility" class="anchor" aria-hidden="true" href="#declare-your-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Declare your compatibility&lt;/h3&gt;
&lt;p&gt;Want to advertise that your project can be used with Carthage? You can add a compatibility badge:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;… to your &lt;code&gt;README&lt;/code&gt;, by simply inserting the following Markdown:&lt;/p&gt;
&lt;div class="highlight highlight-source-gfm"&gt;&lt;pre&gt;[![&lt;span class="pl-e"&gt;Carthage compatible&lt;/span&gt;](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known issues&lt;/h2&gt;
&lt;h5&gt;&lt;a id="user-content-dwarfs-symbol-problem" class="anchor" aria-hidden="true" href="#dwarfs-symbol-problem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DWARFs symbol problem&lt;/h5&gt;
&lt;p&gt;Pre-built framework cannot be debugged using step execution on other machine than on which the framework was built. Simply &lt;code&gt;carthage bootstrap/build/update --no-use-binaries&lt;/code&gt; should fix this, but for more automated workaround, see &lt;a href="https://github.com/Carthage/Carthage/issues/924"&gt;#924&lt;/a&gt;. Dupe &lt;a href="http://www.openradar.me/23551273" rel="nofollow"&gt;rdar://23551273&lt;/a&gt; if you want Apple to fix the root cause of this problem.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-carthagekit" class="anchor" aria-hidden="true" href="#carthagekit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CarthageKit&lt;/h2&gt;
&lt;p&gt;Most of the functionality of the &lt;code&gt;carthage&lt;/code&gt; command line tool is actually encapsulated in a framework named CarthageKit.&lt;/p&gt;
&lt;p&gt;If you’re interested in using Carthage as part of another tool, or perhaps extending the functionality of Carthage, take a look at the &lt;a href="Source/CarthageKit"&gt;CarthageKit&lt;/a&gt; source code to see if the API fits your needs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-differences-between-carthage-and-cocoapods" class="anchor" aria-hidden="true" href="#differences-between-carthage-and-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differences between Carthage and CocoaPods&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a long-standing dependency manager for Cocoa. So why was Carthage created?&lt;/p&gt;
&lt;p&gt;Firstly, CocoaPods (by default) automatically creates and updates an Xcode workspace for your application and all dependencies. Carthage builds framework binaries using &lt;code&gt;xcodebuild&lt;/code&gt;, but leaves the responsibility of integrating them up to the user. CocoaPods’ approach is easier to use, while Carthage’s is flexible and unintrusive.&lt;/p&gt;
&lt;p&gt;The goal of CocoaPods is listed in its &lt;a href="https://github.com/CocoaPods/CocoaPods/blob/1703a3464674baecf54bd7e766f4b37ed8fc43f7/README.md"&gt;README&lt;/a&gt; as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;… to improve discoverability of, and engagement in, third party open-source libraries, by creating a more centralized ecosystem.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By contrast, Carthage has been created as a &lt;em&gt;decentralized&lt;/em&gt; dependency manager. There is no central list of projects, which reduces maintenance work and avoids any central point of failure. However, project discovery is more difficult—users must resort to GitHub’s &lt;a href="https://github.com/trending?l=swift"&gt;Trending&lt;/a&gt; pages or similar.&lt;/p&gt;
&lt;p&gt;CocoaPods projects must also have what’s known as a &lt;a href="http://guides.cocoapods.org/syntax/podspec.html" rel="nofollow"&gt;podspec&lt;/a&gt; file, which includes metadata about the project and specifies how it should be built. Carthage uses &lt;code&gt;xcodebuild&lt;/code&gt; to build dependencies, instead of integrating them into a single workspace, it doesn’t have a similar specification file but your dependencies must include their own Xcode project that describes how to build their products.&lt;/p&gt;
&lt;p&gt;Ultimately, we created Carthage because we wanted the simplest tool possible—a dependency manager that gets the job done without taking over the responsibility of Xcode, and without creating extra work for framework authors. CocoaPods offers many amazing features that Carthage will never have, at the expense of additional complexity.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Carthage is released under the &lt;a href="LICENSE.md"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Header backdrop photo is released under the &lt;a href="https://creativecommons.org/licenses/by-nc-sa/2.0/" rel="nofollow"&gt;CC BY-NC-SA 2.0&lt;/a&gt; license. Original photo by &lt;a href="https://www.flickr.com/photos/prof_richard/" rel="nofollow"&gt;Richard Mortel&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Carthage</author><guid isPermaLink="false">https://github.com/Carthage/Carthage</guid><pubDate>Fri, 10 Jan 2020 00:03:00 GMT</pubDate></item><item><title>airbnb/lottie-ios #4 in Swift, Today</title><link>https://github.com/airbnb/lottie-ios</link><description>&lt;p&gt;&lt;i&gt;An iOS library to natively render After Effects vector animations&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lottie-for-ios-macos-and-android-and-react-native" class="anchor" aria-hidden="true" href="#lottie-for-ios-macos-and-android-and-react-native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lottie for iOS, macOS (and &lt;a href="https://github.com/airbnb/lottie-android"&gt;Android&lt;/a&gt; and &lt;a href="https://github.com/airbnb/lottie-react-native"&gt;React Native&lt;/a&gt;)&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec93af3b58853a5ba768cc785ad54a4aca961645/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ff1d88230b9d245f16df6036e058518d051df573/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80aaf7fb5854bde9c64a0aff30cd12ebf1765b36/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-view-documentation-faq-help-examples-and-more-at-airbnbiolottie" class="anchor" aria-hidden="true" href="#view-documentation-faq-help-examples-and-more-at-airbnbiolottie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View documentation, FAQ, help, examples, and more at &lt;a href="http://airbnb.io/lottie/" rel="nofollow"&gt;airbnb.io/lottie&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Lottie is a mobile library for Android and iOS that natively renders vector based animations and art in realtime with minimal code.&lt;/p&gt;
&lt;p&gt;Lottie loads and renders animations and vectors exported in the bodymovin JSON format. Bodymovin JSON can be created and exported from After Effects with &lt;a href="https://github.com/bodymovin/bodymovin"&gt;bodymovin&lt;/a&gt;, Sketch with &lt;a href="https://github.com/buba447/Lottie-Sketch-Export"&gt;Lottie Sketch Export&lt;/a&gt;, and from &lt;a href="https://www.haiku.ai" rel="nofollow"&gt;Haiku&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the first time, designers can create &lt;strong&gt;and ship&lt;/strong&gt; beautiful animations without an engineer painstakingly recreating it by hand.
Since the animation is backed by JSON they are extremely small in size but can be large in complexity!
Animations can be played, resized, looped, sped up, slowed down, reversed, and even interactively scrubbed.
Lottie can play or loop just a portion of the animation as well, the possibilities are endless!
Animations can even be &lt;em&gt;&lt;strong&gt;changed at runtime&lt;/strong&gt;&lt;/em&gt; in various ways! Change the color, position or any keyframable value!
Lottie also supports native UIViewController Transitions out of the box!&lt;/p&gt;
&lt;p&gt;Here is just a small sampling of the power of Lottie&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples1.gif"&gt;&lt;img src="_Gifs/Examples1.gif" alt="Example1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples2.gif"&gt;&lt;img src="_Gifs/Examples2.gif" alt="Example2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Community 2_3.gif"&gt;&lt;img src="_Gifs/Community 2_3.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples3.gif"&gt;&lt;img src="_Gifs/Examples3.gif" alt="Example3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples4.gif"&gt;&lt;img src="_Gifs/Examples4.gif" alt="Abcs" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-lottie" class="anchor" aria-hidden="true" href="#installing-lottie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Lottie&lt;/h2&gt;
&lt;p&gt;Lottie supports &lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; and &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; (Both dynamic and static). Lottie is written in &lt;em&gt;&lt;strong&gt;Swift 4.2&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-github-repo" class="anchor" aria-hidden="true" href="#github-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Github Repo&lt;/h3&gt;
&lt;p&gt;You can pull the &lt;a href="https://github.com/airbnb/lottie-ios/"&gt;Lottie Github Repo&lt;/a&gt; and include the Lottie.xcodeproj to build a dynamic or static library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Add the pod to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lottie-ios&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then run:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After installing the cocoapod into your project import Lottie with&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Lottie&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Add Lottie to your Cartfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "airbnb/lottie-ios" "master"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;carthage update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In your application targets “General” tab under the “Linked Frameworks and Libraries” section, drag and drop lottie-ios.framework from the Carthage/Build/iOS directory that &lt;code&gt;carthage update&lt;/code&gt; produced.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;platforms&lt;/span&gt;: [
       .&lt;span class="pl-c1"&gt;iOS&lt;/span&gt;(.&lt;span class="pl-smi"&gt;v12&lt;/span&gt;),
  ],
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/airbnb/lottie-ios.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.1.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ],
  &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Lottie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then import wherever needed: &lt;code&gt;import Lottie&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-adding-it-to-an-existent-ios-project-via-swift-package-manager" class="anchor" aria-hidden="true" href="#adding-it-to-an-existent-ios-project-via-swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding it to an existent iOS Project via Swift Package Manager&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Using Xcode 11 go to File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/li&gt;
&lt;li&gt;Paste the project URL: &lt;a href="https://github.com/airbnb/lottie-ios"&gt;https://github.com/airbnb/lottie-ios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click on next and select the project target
**NOTE: For MacOS you must set the &lt;code&gt;Branch&lt;/code&gt; field to &lt;code&gt;lottie/macos-spm&lt;/code&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/spm-branch.png"&gt;&lt;img src="_Gifs/spm-branch.png" alt="Example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you have doubts, please, check the following links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2019/408/" rel="nofollow"&gt;How to use&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2019/410/" rel="nofollow"&gt;Creating Swift Packages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After successfully retrieved the package and added it to your project, just import &lt;code&gt;Lottie&lt;/code&gt; and you can get the full benefits of it.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>airbnb</author><guid isPermaLink="false">https://github.com/airbnb/lottie-ios</guid><pubDate>Fri, 10 Jan 2020 00:04:00 GMT</pubDate></item><item><title>ashleymills/Reachability.swift #5 in Swift, Today</title><link>https://github.com/ashleymills/Reachability.swift</link><description>&lt;p&gt;&lt;i&gt;Replacement for Apple's Reachability re-written in Swift with closures&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-reachabilityswift" class="anchor" aria-hidden="true" href="#reachabilityswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reachability.swift&lt;/h1&gt;
&lt;p&gt;Reachability.swift is a replacement for Apple's Reachability sample, re-written in Swift with closures.&lt;/p&gt;
&lt;p&gt;It is compatible with &lt;strong&gt;iOS&lt;/strong&gt; (8.0 - 12.0), &lt;strong&gt;OSX&lt;/strong&gt; (10.9 - 10.14) and &lt;strong&gt;tvOS&lt;/strong&gt; (9.0 - 12.0)&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href="https://github.com/tonymillion/Reachability"&gt;https://github.com/tonymillion/Reachability&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supporting-reachabilityswift" class="anchor" aria-hidden="true" href="#supporting-reachabilityswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting &lt;strong&gt;Reachability.swift&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Keeping &lt;strong&gt;Reachability.swift&lt;/strong&gt; up-to-date is a time consuming task. Making updates, reviewing pull requests, responding to issues and answering emails all take time.&lt;/p&gt;
&lt;p&gt;Please consider sponsoring me &lt;a href="https://github.com/sponsors/ashleymills"&gt;https://github.com/sponsors/ashleymills&lt;/a&gt;, it's a great way to say thanks!&lt;/p&gt;
&lt;p&gt;If you're an iOS developer who's looking for a quick and easy way to create App Store screenshots, please try out my app &lt;a href="https://itunes.apple.com/app/apple-store/id1252374855?pt=215893&amp;amp;ct=reachability&amp;amp;mt=8" rel="nofollow"&gt;Screenshot Producer&lt;/a&gt;…&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Devices &lt;/th&gt;
&lt;th align="center"&gt;Layout&lt;/th&gt;
&lt;th align="center"&gt;Copy&lt;/th&gt;
&lt;th align="center"&gt;Localize&lt;/th&gt;
&lt;th align="center"&gt;Export      &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6338e090ba886f7075929d3a34a50f8a13a3d77c/687474703a2f2f6973322e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f36342f61662f35352f36346166353562632d326566302d363931632d663566332d3439363336383566376636332f736f757263652f3535327834313462622e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/6338e090ba886f7075929d3a34a50f8a13a3d77c/687474703a2f2f6973322e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f36342f61662f35352f36346166353562632d326566302d363931632d663566332d3439363336383566376636332f736f757263652f3535327834313462622e6a7067" alt="" data-canonical-src="http://is2.mzstatic.com/image/thumb/Purple118/v4/64/af/55/64af55bc-2ef0-691c-f5f3-4963685f7f63/source/552x414bb.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/394ed5c9b8587e05df9ce38b479522ffa635ae5f/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653132382f76342f66622f34632f62642f66623463626432662d646430342d323262612d346664662d3561633635323639336662382f736f757263652f3535327834313462622e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/394ed5c9b8587e05df9ce38b479522ffa635ae5f/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653132382f76342f66622f34632f62642f66623463626432662d646430342d323262612d346664662d3561633635323639336662382f736f757263652f3535327834313462622e6a7067" alt="" data-canonical-src="http://is4.mzstatic.com/image/thumb/Purple128/v4/fb/4c/bd/fb4cbd2f-dd04-22ba-4fdf-5ac652693fb8/source/552x414bb.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d5232fdad2134e3cfc2dd6ff2e8235278581f6b1/687474703a2f2f6973312e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f35612f34662f63662f35613466636664662d636130342d303330372d396632652d3833313738653861643930642f736f757263652f3535327834313462622e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/d5232fdad2134e3cfc2dd6ff2e8235278581f6b1/687474703a2f2f6973312e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f35612f34662f63662f35613466636664662d636130342d303330372d396632652d3833313738653861643930642f736f757263652f3535327834313462622e6a7067" alt="" data-canonical-src="http://is1.mzstatic.com/image/thumb/Purple118/v4/5a/4f/cf/5a4fcfdf-ca04-0307-9f2e-83178e8ad90d/source/552x414bb.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/260f075dc9cc648822ea183b569de9df581a2841/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653132382f76342f31372f65612f35362f31376561353632652d653034352d393665372d666361632d6366616166346634393966642f736f757263652f3535327834313462622e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/260f075dc9cc648822ea183b569de9df581a2841/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653132382f76342f31372f65612f35362f31376561353632652d653034352d393665372d666361632d6366616166346634393966642f736f757263652f3535327834313462622e6a7067" alt="" data-canonical-src="http://is4.mzstatic.com/image/thumb/Purple128/v4/17/ea/56/17ea562e-e045-96e7-fcac-cfaaf4f499fd/source/552x414bb.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1c978d4b738ce2e7966a1f626b5011b3327679dd/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f35392f39652f64642f35393965646435302d663035632d663431332d386538382d6536313437333166643832382f736f757263652f3535327834313462622e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/1c978d4b738ce2e7966a1f626b5011b3327679dd/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f35392f39652f64642f35393965646435302d663035632d663431332d386538382d6536313437333166643832382f736f757263652f3535327834313462622e6a7067" alt="" data-canonical-src="http://is4.mzstatic.com/image/thumb/Purple118/v4/59/9e/dd/599edd50-f05c-f413-8e88-e614731fd828/source/552x414bb.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;And don't forget to &lt;strong&gt;★&lt;/strong&gt; the repo. This increases its visibility and encourages others to contribute.&lt;/p&gt;
&lt;p&gt;Thanks
Ash&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-got-a-problem" class="anchor" aria-hidden="true" href="#got-a-problem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Got a problem?&lt;/h2&gt;
&lt;p&gt;Please read &lt;a href="https://github.com/ashleymills/Reachability.swift/blob/master/CONTRIBUTING.md"&gt;https://github.com/ashleymills/Reachability.swift/blob/master/CONTRIBUTING.md&lt;/a&gt; before raising an issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;Just drop the &lt;strong&gt;Reachability.swift&lt;/strong&gt; file into your project. That's it!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. To install Reachability.swift with CocoaPods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure CocoaPods is &lt;a href="https://guides.cocoapods.org/using/getting-started.html#getting-started" rel="nofollow"&gt;installed&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update your Podfile to include the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ReachabilitySwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start="4"&gt;
&lt;li&gt;In your code import Reachability like so:
&lt;code&gt;import Reachability&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.
To install Reachability.swift with Carthage:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install Carthage via &lt;a href="http://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;github "ashleymills/Reachability.swift"&lt;/code&gt; to your Cartfile.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;carthage update&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Drag &lt;code&gt;Reachability.framework&lt;/code&gt; from the &lt;code&gt;Carthage/Build/iOS/&lt;/code&gt; directory to the &lt;code&gt;Linked Frameworks and Libraries&lt;/code&gt; section of your Xcode project’s &lt;code&gt;General&lt;/code&gt; settings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;$(SRCROOT)/Carthage/Build/iOS/Reachability.framework&lt;/code&gt; to &lt;code&gt;Input Files&lt;/code&gt; of Run Script Phase for Carthage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your code import Reachability like so:
&lt;code&gt;import Reachability&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-example---closures" class="anchor" aria-hidden="true" href="#example---closures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example - closures&lt;/h2&gt;
&lt;p&gt;NOTE: All closures are run on the &lt;strong&gt;main queue&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;declare this property where it won't go out of scope relative to your listener&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; reachability &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;Reachability&lt;/span&gt;()

reachability.&lt;span class="pl-smi"&gt;whenReachable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { reachability &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; reachability.&lt;span class="pl-smi"&gt;connection&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;wifi&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Reachable via WiFi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Reachable via Cellular&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}
reachability.&lt;span class="pl-smi"&gt;whenUnreachable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not reachable&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; reachability.&lt;span class="pl-c1"&gt;startNotifier&lt;/span&gt;()
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Unable to start notifier&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and for stopping notifications&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;reachability.&lt;span class="pl-c1"&gt;stopNotifier&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example---notifications" class="anchor" aria-hidden="true" href="#example---notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example - notifications&lt;/h2&gt;
&lt;p&gt;NOTE: All notifications are delivered on the &lt;strong&gt;main queue&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;declare this property where it won't go out of scope relative to your listener&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; reachability &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;Reachability&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;declare this inside of viewWillAppear&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
     NotificationCenter.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-c1"&gt;addObserver&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;selector&lt;/span&gt;: &lt;span class="pl-c1"&gt;#selector&lt;/span&gt;(&lt;span class="pl-en"&gt;reachabilityChanged&lt;/span&gt;(&lt;span class="pl-en"&gt;note:&lt;/span&gt;)), &lt;span class="pl-c1"&gt;name&lt;/span&gt;: .&lt;span class="pl-smi"&gt;reachabilityChanged&lt;/span&gt;, &lt;span class="pl-c1"&gt;object&lt;/span&gt;: reachability)
    &lt;span class="pl-k"&gt;do&lt;/span&gt;{
      &lt;span class="pl-k"&gt;try&lt;/span&gt; reachability.&lt;span class="pl-c1"&gt;startNotifier&lt;/span&gt;()
    }&lt;span class="pl-k"&gt;catch&lt;/span&gt;{
      &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;could not start reachability notifier&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@objc&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;reachabilityChanged&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;note&lt;/span&gt;&lt;/span&gt;: Notification) {

  &lt;span class="pl-k"&gt;let&lt;/span&gt; reachability &lt;span class="pl-k"&gt;=&lt;/span&gt; note.&lt;span class="pl-smi"&gt;object&lt;/span&gt; &lt;span class="pl-k"&gt;as!&lt;/span&gt; Reachability

  &lt;span class="pl-k"&gt;switch&lt;/span&gt; reachability.&lt;span class="pl-smi"&gt;connection&lt;/span&gt; {
  &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;wifi&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
      &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Reachable via WiFi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cellular&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
      &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Reachable via Cellular&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;unavailable&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Network not reachable&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and for stopping notifications&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;reachability.&lt;span class="pl-c1"&gt;stopNotifier&lt;/span&gt;()
NotificationCenter.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-c1"&gt;removeObserver&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: .&lt;span class="pl-smi"&gt;reachabilityChanged&lt;/span&gt;, &lt;span class="pl-c1"&gt;object&lt;/span&gt;: reachability)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-want-to-help" class="anchor" aria-hidden="true" href="#want-to-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to help?&lt;/h2&gt;
&lt;p&gt;Got a bug fix, or a new feature? Create a pull request and go for it!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-let-me-know" class="anchor" aria-hidden="true" href="#let-me-know"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let me know!&lt;/h2&gt;
&lt;p&gt;If you use &lt;strong&gt;Reachability.swift&lt;/strong&gt;, please let me know about your app and I'll put a link &lt;a href="https://github.com/ashleymills/Reachability.swift/wiki/Apps-using-Reachability.swift"&gt;here…&lt;/a&gt; and tell your friends!&lt;/p&gt;
&lt;p&gt;Cheers,
Ash&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ashleymills</author><guid isPermaLink="false">https://github.com/ashleymills/Reachability.swift</guid><pubDate>Fri, 10 Jan 2020 00:05:00 GMT</pubDate></item><item><title>Alamofire/Alamofire #6 in Swift, Today</title><link>https://github.com/Alamofire/Alamofire</link><description>&lt;p&gt;&lt;i&gt;Elegant HTTP Networking in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/Alamofire/Alamofire/master/alamofire.png"&gt;&lt;img src="https://raw.githubusercontent.com/Alamofire/Alamofire/master/alamofire.png" alt="Alamofire: Elegant Networking in Swift" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Alamofire/Alamofire/actions"&gt;&lt;img src="https://github.com/Alamofire/Alamofire/workflows/Alamofire%20CI/badge.svg?branch=master" alt="Build Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://img.shields.io/cocoapods/v/Alamofire.svg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9bd6769e4a8458272a249358bec5e4e511ce6888/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f416c616d6f666972652e737667" alt="CocoaPods Compatible" data-canonical-src="https://img.shields.io/cocoapods/v/Alamofire.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage Compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://alamofire.github.io/Alamofire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7bbc7493c87f5447d92c2394201eec2f79ecbe1d/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f416c616d6f666972652e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/Alamofire.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/AlamofireSF" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/778c845778219b6c8b8160fc1b8c2ac4b21b7aab/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d40416c616d6f6669726553462d626c75652e7376673f7374796c653d666c6174" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-@AlamofireSF-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Alamofire/Alamofire?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f34d662fe4592df9b54859f624c089c5386a3ab/68747470733a2f2f6261646765732e6769747465722e696d2f416c616d6f666972652f416c616d6f666972652e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Alamofire/Alamofire.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codetriage.com/alamofire/alamofire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08b7810b0eb2f6121f6cc2417ffcfee1c7608acf/68747470733a2f2f7777772e636f64657472696167652e636f6d2f616c616d6f666972652f616c616d6f666972652f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/alamofire/alamofire/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alamofire is an HTTP networking library written in Swift.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; WARNING &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;/strong&gt; This documentation is out of date during the Alamofire 5 beta process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#component-libraries"&gt;Component Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#migration-guides"&gt;Migration Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#communication"&gt;Communication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#using-alamofire"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#introduction"&gt;&lt;strong&gt;Introduction -&lt;/strong&gt;&lt;/a&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#making-requests"&gt;Making Requests&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-handling"&gt;Response Handling&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-validation"&gt;Response Validation&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-caching"&gt;Response Caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#http-methods"&gt;HTTP Methods&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md##request-parameters-and-parameter-encoders"&gt;Parameters and Parameter Encoder&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#http-headers"&gt;HTTP Headers&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Large Data -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#downloading-data-to-a-file"&gt;Downloading Data to a File&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#uploading-data-to-a-server"&gt;Uploading Data to a Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tools -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#statistical-metrics"&gt;Statistical Metrics&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#curl-command-output"&gt;cURL Command Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md"&gt;Advanced Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;URL Session -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#session-manager"&gt;Session Manager&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#session-delegate"&gt;Session Delegate&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#request"&gt;Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Routing -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#routing-requests"&gt;Routing Requests&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#adapting-and-retrying-requests"&gt;Adapting and Retrying Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model Objects -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#custom-response-serialization"&gt;Custom Response Serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connection -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#security"&gt;Security&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#network-reachability"&gt;Network Reachability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#open-radars"&gt;Open Radars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#donations"&gt;Donations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Chainable Request / Response Methods&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; URL / JSON / plist Parameter Encoding&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Upload File / Data / Stream / MultipartFormData&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Download File using Request or Resume Data&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Authentication with URLCredential&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; HTTP Response Validation&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Upload and Download Progress Closures with Progress&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; cURL Command Output&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Dynamically Adapt and Retry Requests&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; TLS Certificate and Public Key Pinning&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Network Reachability&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Comprehensive Unit and Integration Test Coverage&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="https://alamofire.github.io/Alamofire" rel="nofollow"&gt;Complete Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-component-libraries" class="anchor" aria-hidden="true" href="#component-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Component Libraries&lt;/h2&gt;
&lt;p&gt;In order to keep Alamofire focused specifically on core networking implementations, additional component libraries have been created by the &lt;a href="https://github.com/Alamofire/Foundation"&gt;Alamofire Software Foundation&lt;/a&gt; to bring additional functionality to the Alamofire ecosystem.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireImage"&gt;AlamofireImage&lt;/a&gt; - An image library including image response serializers, &lt;code&gt;UIImage&lt;/code&gt; and &lt;code&gt;UIImageView&lt;/code&gt; extensions, custom image filters, an auto-purging in-memory cache and a priority-based image downloading system.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireNetworkActivityIndicator"&gt;AlamofireNetworkActivityIndicator&lt;/a&gt; - Controls the visibility of the network activity indicator on iOS using Alamofire. It contains configurable delay timers to help mitigate flicker and can support &lt;code&gt;URLSession&lt;/code&gt; instances not managed by Alamofire.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+&lt;/li&gt;
&lt;li&gt;Xcode 10.2+&lt;/li&gt;
&lt;li&gt;Swift 5+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-migration-guides" class="anchor" aria-hidden="true" href="#migration-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migration Guides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Alamofire 5.0 Migration Guide: To be written!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%204.0%20Migration%20Guide.md"&gt;Alamofire 4.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%203.0%20Migration%20Guide.md"&gt;Alamofire 3.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%202.0%20Migration%20Guide.md"&gt;Alamofire 2.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you &lt;strong&gt;need help with making network requests&lt;/strong&gt; using Alamofire, use &lt;a href="https://stackoverflow.com/questions/tagged/alamofire" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; and tag &lt;code&gt;alamofire&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you need to &lt;strong&gt;find or understand an API&lt;/strong&gt;, check &lt;a href="http://alamofire.github.io/Alamofire/" rel="nofollow"&gt;our documentation&lt;/a&gt; or &lt;a href="https://developer.apple.com/documentation/foundation/url_loading_system" rel="nofollow"&gt;Apple's documentation for &lt;code&gt;URLSession&lt;/code&gt;&lt;/a&gt;, on top of which Alamofire is built.&lt;/li&gt;
&lt;li&gt;If you need &lt;strong&gt;help with an Alamofire feature&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you'd like to &lt;strong&gt;discuss Alamofire best practices&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you'd like to &lt;strong&gt;discuss a feature request&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an issue here on GitHub and follow the guide. The more detail the better!&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt;, submit a pull request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate Alamofire into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Alamofire&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5.0.0-rc.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate Alamofire into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "Alamofire/Alamofire" "5.0.0-rc.3"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler. It is in early development, but Alamofire does support its use on supported platforms.&lt;/p&gt;
&lt;p&gt;Once you have your Swift package set up, adding Alamofire as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Alamofire/Alamofire.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5.0.0-rc.3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;p&gt;If you prefer not to use any of the aforementioned dependency managers, you can integrate Alamofire into your project manually.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-embedded-framework" class="anchor" aria-hidden="true" href="#embedded-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded Framework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open up Terminal, &lt;code&gt;cd&lt;/code&gt; into your top-level project directory, and run the following command "if" your project is not initialized as a git repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git init&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add Alamofire as a git &lt;a href="https://git-scm.com/docs/git-submodule" rel="nofollow"&gt;submodule&lt;/a&gt; by running the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git submodule add https://github.com/Alamofire/Alamofire.git&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the new &lt;code&gt;Alamofire&lt;/code&gt; folder, and drag the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; into the Project Navigator of your application's Xcode project.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It should appear nested underneath your application's blue project icon. Whether it is above or below all the other Xcode groups does not matter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; in the Project Navigator and verify the deployment target matches that of your application target.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "Targets" heading in the sidebar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the tab bar at the top of that window, open the "General" panel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;code&gt;+&lt;/code&gt; button under the "Embedded Binaries" section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will see two different &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; folders each with two different versions of the &lt;code&gt;Alamofire.framework&lt;/code&gt; nested inside a &lt;code&gt;Products&lt;/code&gt; folder.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It does not matter which &lt;code&gt;Products&lt;/code&gt; folder you choose from, but it does matter whether you choose the top or bottom &lt;code&gt;Alamofire.framework&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the top &lt;code&gt;Alamofire.framework&lt;/code&gt; for iOS and the bottom one for macOS.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can verify which one you selected by inspecting the build log for your project. The build target for &lt;code&gt;Alamofire&lt;/code&gt; will be listed as either &lt;code&gt;Alamofire iOS&lt;/code&gt;, &lt;code&gt;Alamofire macOS&lt;/code&gt;, &lt;code&gt;Alamofire tvOS&lt;/code&gt; or &lt;code&gt;Alamofire watchOS&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And that's it!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;Alamofire.framework&lt;/code&gt; is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-open-radars" class="anchor" aria-hidden="true" href="#open-radars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open Radars&lt;/h2&gt;
&lt;p&gt;The following radars have some effect on the current implementation of Alamofire.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openradar.me/radar?id=5517037090635776" rel="nofollow"&gt;&lt;code&gt;rdar://21349340&lt;/code&gt;&lt;/a&gt; - Compiler throwing warning due to toll-free bridging issue in test case&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rdar://26870455&lt;/code&gt; - Background URL Session Configurations do not work in the simulator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rdar://26849668&lt;/code&gt; - Some URLProtocol APIs do not properly handle &lt;code&gt;URLRequest&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-resolved-radars" class="anchor" aria-hidden="true" href="#resolved-radars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resolved Radars&lt;/h2&gt;
&lt;p&gt;The following radars have been resolved over time after being filed against the Alamofire project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openradar.me/radar?id=5010235949318144" rel="nofollow"&gt;&lt;code&gt;rdar://26761490&lt;/code&gt;&lt;/a&gt; - Swift string interpolation causing memory leak with common usage.
&lt;ul&gt;
&lt;li&gt;(Resolved): 9/1/17 in Xcode 9 beta 6.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openradar.appspot.com/radar?id=4942308441063424" rel="nofollow"&gt;&lt;code&gt;rdar://36082113&lt;/code&gt;&lt;/a&gt; - &lt;code&gt;URLSessionTaskMetrics&lt;/code&gt; failing to link on watchOS 3.0+
&lt;ul&gt;
&lt;li&gt;(Resolved): Just add &lt;code&gt;CFNetwork&lt;/code&gt; to your linked frameworks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-whats-the-origin-of-the-name-alamofire" class="anchor" aria-hidden="true" href="#whats-the-origin-of-the-name-alamofire"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the origin of the name Alamofire?&lt;/h3&gt;
&lt;p&gt;Alamofire is named after the &lt;a href="https://aggie-horticulture.tamu.edu/wildseed/alamofire.html" rel="nofollow"&gt;Alamo Fire flower&lt;/a&gt;, a hybrid variant of the Bluebonnet, the official state flower of Texas.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Alamofire is owned and maintained by the &lt;a href="http://alamofire.org" rel="nofollow"&gt;Alamofire Software Foundation&lt;/a&gt;. You can follow them on Twitter at &lt;a href="https://twitter.com/AlamofireSF" rel="nofollow"&gt;@AlamofireSF&lt;/a&gt; for project updates and releases.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-security-disclosure" class="anchor" aria-hidden="true" href="#security-disclosure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security Disclosure&lt;/h3&gt;
&lt;p&gt;If you believe you have identified a security vulnerability with Alamofire, you should report it as soon as possible via email to &lt;a href="mailto:security@alamofire.org"&gt;security@alamofire.org&lt;/a&gt;. Please do not post it to a public issue tracker.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/Alamofire/Foundation#members"&gt;ASF&lt;/a&gt; is looking to raise money to officially stay registered as a federal non-profit organization.
Registering will allow us members to gain some legal protections and also allow us to put donations to use, tax free.
Donating to the ASF will enable us to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pay our yearly legal fees to keep the non-profit in good status&lt;/li&gt;
&lt;li&gt;Pay for our mail servers to help us stay on top of all questions and security issues&lt;/li&gt;
&lt;li&gt;Potentially fund test servers to make it easier for us to test the edge cases&lt;/li&gt;
&lt;li&gt;Potentially fund developers to work on one of our projects full-time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The community adoption of the ASF libraries has been amazing.
We are greatly humbled by your enthusiasm around the projects, and want to continue to do everything we can to move the needle forward.
With your continued support, the ASF will be able to improve its reach and also provide better legal safety for the core members.
If you use any of our libraries for work, see if your employers would be interested in donating.
Any amount you can donate today to help us reach our goal would be greatly appreciated.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=W34WPEE74APJQ" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f896f7d176663a1559376bb56aac4bdbbbe85ed1/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e61746543435f4c472e676966" alt="paypal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Alamofire is released under the MIT license. &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/LICENSE"&gt;See LICENSE&lt;/a&gt; for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Alamofire</author><guid isPermaLink="false">https://github.com/Alamofire/Alamofire</guid><pubDate>Fri, 10 Jan 2020 00:06:00 GMT</pubDate></item><item><title>ReactiveX/RxSwift #7 in Swift, Today</title><link>https://github.com/ReactiveX/RxSwift</link><description>&lt;p&gt;&lt;i&gt;Reactive Programming in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--rxswift-reactivex-for-swift" class="anchor" aria-hidden="true" href="#-rxswift-reactivex-for-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/ReactiveX/RxSwift/master/assets/Rx_Logo_M.png"&gt;&lt;img src="https://raw.githubusercontent.com/ReactiveX/RxSwift/master/assets/Rx_Logo_M.png" alt="Miss Electric Eel 2016" width="36" height="36" style="max-width:100%;"&gt;&lt;/a&gt; RxSwift: ReactiveX for Swift&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ReactiveX/RxSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d6899870ec82f2a13bcbdc55834ee9718be7678a/68747470733a2f2f7472617669732d63692e6f72672f5265616374697665582f527853776966742e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://travis-ci.org/ReactiveX/RxSwift.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cad98e8f98045360e4b82f574b86b45952b3feb1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d694f532532302537432532306d61634f5325323025374325323074764f5325323025374325323077617463684f532532302537432532304c696e75782d3333333333332e737667"&gt;&lt;img src="https://camo.githubusercontent.com/cad98e8f98045360e4b82f574b86b45952b3feb1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d694f532532302537432532306d61634f5325323025374325323074764f5325323025374325323077617463684f532532302537432532304c696e75782d3333333333332e737667" alt="platforms" data-canonical-src="https://img.shields.io/badge/platforms-iOS%20%7C%20macOS%20%7C%20tvOS%20%7C%20watchOS%20%7C%20Linux-333333.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://cocoapods.org/pods/RxSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/91ac251cd8e6775af6ec6807fc0c354827c6878f/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f527853776966742e737667" alt="pod" data-canonical-src="https://img.shields.io/cocoapods/v/RxSwift.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/apple/swift-package-manager"&gt;&lt;img src="https://camo.githubusercontent.com/ad744674ba25cccb6e683eb78b7c485e1b63b2d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742532305061636b6167652532304d616e616765722d636f6d70617469626c652d627269676874677265656e2e737667" alt="Swift Package Manager compatible" data-canonical-src="https://img.shields.io/badge/Swift%20Package%20Manager-compatible-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rx is a &lt;a href="https://youtu.be/looJcaeboBY" rel="nofollow"&gt;generic abstraction of computation&lt;/a&gt; expressed through &lt;code&gt;Observable&amp;lt;Element&amp;gt;&lt;/code&gt; interface.&lt;/p&gt;
&lt;p&gt;This is a Swift version of &lt;a href="https://github.com/Reactive-Extensions/Rx.NET"&gt;Rx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It tries to port as many concepts from the original version as possible, but some concepts were adapted for more pleasant and performant integration with iOS/macOS environment.&lt;/p&gt;
&lt;p&gt;Cross platform documentation can be found on &lt;a href="http://reactivex.io/" rel="nofollow"&gt;ReactiveX.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Like the original Rx, its intention is to enable easy composition of asynchronous operations and event/data streams.&lt;/p&gt;
&lt;p&gt;KVO observing, async operations and streams are all unified under &lt;a href="Documentation/GettingStarted.md#observables-aka-sequences"&gt;abstraction of sequence&lt;/a&gt;. This is the reason why Rx is so simple, elegant and powerful.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-i-came-here-because-i-want-to-" class="anchor" aria-hidden="true" href="#i-came-here-because-i-want-to-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I came here because I want to ...&lt;/h2&gt;
&lt;h6&gt;&lt;a id="user-content--understand" class="anchor" aria-hidden="true" href="#-understand"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... understand&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/Why.md"&gt;why use rx?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/GettingStarted.md"&gt;the basics, getting started with RxSwift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Traits.md"&gt;traits&lt;/a&gt; - what are &lt;code&gt;Single&lt;/code&gt;, &lt;code&gt;Completable&lt;/code&gt;, &lt;code&gt;Maybe&lt;/code&gt;, &lt;code&gt;Driver&lt;/code&gt;, and &lt;code&gt;ControlProperty&lt;/code&gt; ... and why do they exist?&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/UnitTests.md"&gt;testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Tips.md"&gt;tips and common errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/GettingStarted.md#debugging"&gt;debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/MathBehindRx.md"&gt;the math behind Rx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/HotAndColdObservables.md"&gt;what are hot and cold observable sequences?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--install" class="anchor" aria-hidden="true" href="#-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... install&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Integrate RxSwift/RxCocoa with my app. &lt;a href="#installation"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--hack-around" class="anchor" aria-hidden="true" href="#-hack-around"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... hack around&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;with the example app. &lt;a href="Documentation/ExampleApp.md"&gt;Running Example App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;with operators in playgrounds. &lt;a href="Documentation/Playgrounds.md"&gt;Playgrounds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--interact" class="anchor" aria-hidden="true" href="#-interact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... interact&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;All of this is great, but it would be nice to talk with other people using RxSwift and exchange experiences. &lt;br&gt;&lt;a href="http://slack.rxswift.org" rel="nofollow"&gt;Join Slack Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Report a problem using the library. &lt;a href=".github/ISSUE_TEMPLATE.md"&gt;Open an Issue With Bug Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Request a new feature. &lt;a href="Documentation/NewFeatureRequestTemplate.md"&gt;Open an Issue With Feature Request Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Help out &lt;a href="CONTRIBUTING.md"&gt;Check out contribution guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--compare" class="anchor" aria-hidden="true" href="#-compare"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... compare&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/ComparisonWithOtherLibraries.md"&gt;with other libraries&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--understand-the-structure" class="anchor" aria-hidden="true" href="#-understand-the-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... understand the structure&lt;/h6&gt;
&lt;p&gt;RxSwift comprises five separate components depending on eachother in the following way:&lt;/p&gt;
&lt;pre lang="none"&gt;&lt;code&gt;┌──────────────┐    ┌──────────────┐
│   RxCocoa    ├────▶   RxRelay    │
└───────┬──────┘    └──────┬───────┘
        │                  │        
┌───────▼──────────────────▼───────┐
│             RxSwift              │
└───────▲──────────────────▲───────┘
        │                  │        
┌───────┴──────┐    ┌──────┴───────┐
│    RxTest    │    │  RxBlocking  │
└──────────────┘    └──────────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RxSwift&lt;/strong&gt;: The core of RxSwift, providing the Rx standard as (mostly) defined by &lt;a href="https://reactivex.io" rel="nofollow"&gt;ReactiveX&lt;/a&gt;. It has no other dependencies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxCocoa&lt;/strong&gt;: Provides Cocoa-specific capabilities for general iOS/macOS/watchOS &amp;amp; tvOS app development, such as Binders, Traits, and much more. It depends on both &lt;code&gt;RxSwift&lt;/code&gt; and &lt;code&gt;RxRelay&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxRelay&lt;/strong&gt;: Provides &lt;code&gt;PublishRelay&lt;/code&gt; and &lt;code&gt;BehaviorRelay&lt;/code&gt;, two &lt;a href="https://github.com/ReactiveX/RxSwift/blob/master/Documentation/Subjects.md#relays"&gt;simple wrappers around Subjects&lt;/a&gt;. It depends on &lt;code&gt;RxSwift&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxTest&lt;/strong&gt; and &lt;strong&gt;RxBlocking&lt;/strong&gt;: Provides testing capabilities for Rx-based systems. It depends on &lt;code&gt;RxSwift&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--find-compatible" class="anchor" aria-hidden="true" href="#-find-compatible"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... find compatible&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;libraries from &lt;a href="https://github.com/RxSwiftCommunity"&gt;RxSwiftCommunity&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cocoapods.org/?q=uses%3Arxswift" rel="nofollow"&gt;Pods using RxSwift&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--see-the-broader-vision" class="anchor" aria-hidden="true" href="#-see-the-broader-vision"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... see the broader vision&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Does this exist for Android? &lt;a href="https://github.com/ReactiveX/RxJava"&gt;RxJava&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Where is all of this going, what is the future, what about reactive architectures, how do you design entire apps this way? &lt;a href="https://github.com/cyclejs/cycle-core"&gt;Cycle.js&lt;/a&gt; - this is javascript, but &lt;a href="https://github.com/Reactive-Extensions/RxJS"&gt;RxJS&lt;/a&gt; is javascript version of Rx.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;th width="30%"&gt;Here's an example&lt;/th&gt;
    &lt;th width="30%"&gt;In Action&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Define search for GitHub repositories ...&lt;/td&gt;
    &lt;th rowspan="9"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kzaher/rxswiftcontent/master/GithubSearch.gif"&gt;&lt;img src="https://raw.githubusercontent.com/kzaher/rxswiftcontent/master/GithubSearch.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;div&gt;&lt;pre&gt;let searchResults = searchBar.rx.text.orEmpty
    .throttle(.milliseconds(300), scheduler: MainScheduler.instance)
    .distinctUntilChanged()
    .flatMapLatest { query -&amp;gt; Observable&amp;lt;[Repository]&amp;gt; in
        if query.isEmpty {
            return .just([])
        }
        return searchGitHub(query)
            .catchErrorJustReturn([])
    }
    .observeOn(MainScheduler.instance)&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;... then bind the results to your tableview&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td width="30%"&gt;&lt;div&gt;&lt;pre&gt;searchResults
    .bind(to: tableView.rx.items(cellIdentifier: "Cell")) {
        (index, repository: Repository, cell) in
        cell.textLabel?.text = repository.name
        cell.detailTextLabel?.text = repository.url
    }
    .disposed(by: disposeBag)&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 10.2&lt;/li&gt;
&lt;li&gt;Swift 5.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Xcode 10.1 and below, &lt;a href="https://github.com/ReactiveX/RxSwift/releases/tag/4.5.0"&gt;use RxSwift 4.5&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Rx doesn't contain any external dependencies.&lt;/p&gt;
&lt;p&gt;These are currently the supported options:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;Open Rx.xcworkspace, choose &lt;code&gt;RxExample&lt;/code&gt; and hit run. This method will build everything and run the sample app&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://guides.cocoapods.org/using/using-cocoapods.html" rel="nofollow"&gt;CocoaPods&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Podfile&lt;/span&gt;
use_frameworks!

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YOUR_TARGET_NAME&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxCocoa&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; RxTest and RxBlocking make the most sense in the context of unit/integration tests&lt;/span&gt;
target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YOUR_TESTING_TARGET&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxBlocking&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxTest&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Replace &lt;code&gt;YOUR_TARGET_NAME&lt;/code&gt; and then, in the &lt;code&gt;Podfile&lt;/code&gt; directory, type:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Officially supported: Carthage 0.33 and up.&lt;/p&gt;
&lt;p&gt;Add this to &lt;code&gt;Cartfile&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "ReactiveX/RxSwift" ~&amp;gt; 5.0
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ carthage update&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-carthage-as-a-static-library" class="anchor" aria-hidden="true" href="#carthage-as-a-static-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage as a Static Library&lt;/h4&gt;
&lt;p&gt;Carthage defaults to building RxSwift as a Dynamic Library.&lt;/p&gt;
&lt;p&gt;If you wish to build RxSwift as a Static Library using Carthage you may use the script below to manually modify the framework type before building with Carthage:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;carthage update RxSwift --platform iOS --no-build
sed -i -e &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; Carthage/Checkouts/RxSwift/Rx.xcodeproj/project.pbxproj
carthage build RxSwift --platform iOS&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/apple/swift-package-manager"&gt;Swift Package Manager&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Create a &lt;code&gt;Package.swift&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/ReactiveX/RxSwift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ],
  &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxSwift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxCocoa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build or test a module with RxTest dependency, set &lt;code&gt;TEST=1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ TEST=1 swift &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually-using-git-submodules" class="anchor" aria-hidden="true" href="#manually-using-git-submodules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually using git submodules&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Add RxSwift as a submodule&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git submodule add git@github.com:ReactiveX/RxSwift.git&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Drag &lt;code&gt;Rx.xcodeproj&lt;/code&gt; into Project Navigator&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;Project &amp;gt; Targets &amp;gt; Build Phases &amp;gt; Link Binary With Libraries&lt;/code&gt;, click &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;RxSwift-[Platform]&lt;/code&gt; and &lt;code&gt;RxCocoa-[Platform]&lt;/code&gt; targets&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reactivex.io/" rel="nofollow"&gt;http://reactivex.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Reactive-Extensions"&gt;Reactive Extensions GitHub (GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://store.raywenderlich.com/products/rxswift-reactive-programming-with-swift" rel="nofollow"&gt;RxSwift RayWenderlich.com Book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boxueio.com/series/rxswift-101" rel="nofollow"&gt;Boxue.io RxSwift Online Course&lt;/a&gt; (Chinese &lt;g-emoji class="g-emoji" alias="cn" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png"&gt;🇨🇳&lt;/g-emoji&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Erik_Meijer_%28computer_scientist%29" rel="nofollow"&gt;Erik Meijer (Wikipedia)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/looJcaeboBY" rel="nofollow"&gt;Expert to Expert: Brian Beckman and Erik Meijer - Inside the .NET Reactive Framework (Rx) (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dwP1TNXE6fc" rel="nofollow"&gt;Reactive Programming Overview (Jafar Husain from Netflix)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://csl.stanford.edu/~christos/pldi2010.fit/meijer.duality.pdf" rel="nofollow"&gt;Subject/Observer is Dual to Iterator (paper)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rxmarbles.com/" rel="nofollow"&gt;Rx standard sequence operators visualized (visualization tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.haskell.org/" rel="nofollow"&gt;Haskell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ReactiveX</author><guid isPermaLink="false">https://github.com/ReactiveX/RxSwift</guid><pubDate>Fri, 10 Jan 2020 00:07:00 GMT</pubDate></item><item><title>iina/iina #8 in Swift, Today</title><link>https://github.com/iina/iina</link><description>&lt;p&gt;&lt;i&gt;The modern video player for macOS.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/iina/iina/raw/master/iina/Assets.xcassets/AppIcon.appiconset/256-1.png"&gt;&lt;img src="https://github.com/iina/iina/raw/master/iina/Assets.xcassets/AppIcon.appiconset/256-1.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a id="user-content-iina" class="anchor" aria-hidden="true" href="#iina"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IINA&lt;/h1&gt;
&lt;p align="center"&gt;IINA is the &lt;b&gt;modern&lt;/b&gt; video player for macOS.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="https://iina.io" rel="nofollow"&gt;Website&lt;/a&gt; ·
&lt;a href="https://github.com/iina/iina/releases"&gt;Releases&lt;/a&gt; ·
&lt;a href="https://t.me/IINAUsers" rel="nofollow"&gt;Telegram Group&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Based on &lt;a href="https://github.com/mpv-player/mpv"&gt;mpv&lt;/a&gt;, which provides the best decoding capacity on macOS&lt;/li&gt;
&lt;li&gt;Designed with modern versions of macOS (10.11+) in mind&lt;/li&gt;
&lt;li&gt;All the features you need for video and music: subtitles, playlists, chapters…and much, much more!&lt;/li&gt;
&lt;li&gt;Force Touch, picture-in-picture and advanced Touch Bar support&lt;/li&gt;
&lt;li&gt;Customizable user interface including multiple color schemes and on screen controller (OSC) layout positioning&lt;/li&gt;
&lt;li&gt;Standalone Music Mode designed for audio files&lt;/li&gt;
&lt;li&gt;Video thumbnails&lt;/li&gt;
&lt;li&gt;Online subtitle searching and intelligent local subtitle matching&lt;/li&gt;
&lt;li&gt;Unlimited playback history&lt;/li&gt;
&lt;li&gt;Convenient and interactive settings for video/audio filters&lt;/li&gt;
&lt;li&gt;Fully customizable keyboard, mouse, trackpad, and gesture controls&lt;/li&gt;
&lt;li&gt;mpv configuration files and script system for advanced users&lt;/li&gt;
&lt;li&gt;Command line tool and browser extensions provided&lt;/li&gt;
&lt;li&gt;In active development&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;IINA uses &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; for managing the installation of third-party libraries. If you don't already have it installed, here's how you can do so:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-rubygems" class="anchor" aria-hidden="true" href="#using-rubygems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using RubyGems&lt;/h4&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;sudo gem install cocoapods&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-using-homebrew" class="anchor" aria-hidden="true" href="#using-homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Homebrew&lt;/h4&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;brew install cocoapods&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;pod install&lt;/code&gt; in project's root directory.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;IINA ships with pre-compiled dynamic libraries for convenience reasons. If you aren't planning on modifying these libraries, you can follow the instructions below to build IINA; otherwise, skip down to &lt;a href="#building-mpv-manually"&gt;Building mpv manually&lt;/a&gt;:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-pre-compiled-libraries" class="anchor" aria-hidden="true" href="#using-the-pre-compiled-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the pre-compiled libraries&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open iina.xcworkspace in the &lt;a href="https://itunes.apple.com/us/app/xcode/id497799835" rel="nofollow"&gt;latest public version of Xcode&lt;/a&gt;. &lt;em&gt;IINA may not build if you use any other version.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build the project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-building-mpv-manually" class="anchor" aria-hidden="true" href="#building-mpv-manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building mpv manually&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Build your own copy of mpv. If you're using a package manager to manage dependencies, the steps below outline the process.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-homebrew" class="anchor" aria-hidden="true" href="#homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homebrew&lt;/h4&gt;
&lt;p&gt;Use our tap as it passes in the correct flags to mpv's configure script:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;brew tap iina/homebrew-mpv-iina&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;brew install mpv-iina&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-macports" class="anchor" aria-hidden="true" href="#macports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MacPorts&lt;/h4&gt;
&lt;p&gt;Pass in these flags when installing:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;# &lt;span class="pl-s1"&gt;port install mpv +uchardet -bundle -rubberband configure.args=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--enable-libmpv-shared --enable-lua --enable-libarchive --enable-libbluray --disable-swift --disable-rubberband&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy the latest &lt;a href="https://github.com/mpv-player/mpv/tree/master/libmpv"&gt;header files from mpv&lt;/a&gt; (*.h) into &lt;code&gt;deps/include/mpv/&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;other/parse_doc.rb&lt;/code&gt;. This script will fetch the latest mpv documentation and generate &lt;code&gt;MPVOption.swift&lt;/code&gt;, &lt;code&gt;MPVCommand.swift&lt;/code&gt; and &lt;code&gt;MPVProperty.swift&lt;/code&gt;. This is only needed when updating libmpv. Note that if the API changes, the player source code may also need to be changed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;other/change_lib_dependencies.rb&lt;/code&gt;. This script will deploy the dependent libraries into &lt;code&gt;deps/lib&lt;/code&gt;. If you're using a package manager to manage dependencies, invoke it like so:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-homebrew-1" class="anchor" aria-hidden="true" href="#homebrew-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homebrew&lt;/h4&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;other/change_lib_dependencies.rb &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;brew --prefix&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;brew --prefix mpv-iina&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;/lib/libmpv.dylib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-macports-1" class="anchor" aria-hidden="true" href="#macports-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MacPorts&lt;/h4&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;port contents mpv &lt;span class="pl-k"&gt;|&lt;/span&gt; grep &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\.dylib$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; xargs other/change_lib_dependencies.rb /opt/local&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open iina.xcworkspace in the &lt;a href="https://itunes.apple.com/us/app/xcode/id497799835" rel="nofollow"&gt;latest public version of Xcode&lt;/a&gt;. &lt;em&gt;IINA may not build if you use any other version.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove all of references to .dylib files from the Frameworks group in the sidebar and drag all the .dylib files in &lt;code&gt;deps/lib&lt;/code&gt; to that group.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Drag all the .dylib files in &lt;code&gt;deps/lib&lt;/code&gt; into the "Embedded Binaries" section of the iina target.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build the project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;IINA is always looking for contributions, whether it's through bug reports, code, or new translations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you find a bug in IINA, or would like to suggest a new feature or enhancement, it'd be nice if you could &lt;a href="https://github.com/iina/iina/issues"&gt;search your problem first&lt;/a&gt;; while we don't mind duplicates, keeping issues unique helps us save time and considates effort. If you can't find your issue, feel free to &lt;a href="https://github.com/iina/iina/issues/new"&gt;file a new one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're looking to contribute code, please read &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;–it has information on IINA's process for handling contributions, and tips on how the code is structured to make your work easier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you'd like to translate IINA to your language, please visit &lt;a href="https://translate.iina.io" rel="nofollow"&gt;IINA's instance of Crowdin&lt;/a&gt;. You can create an account for free and start translating and/or approving. Please do not send pull request to this repo directly, Crowdin will automatically sync new translations with our repo. If you want to translate IINA into a new language that is currently not in the list, feel free to open an issue.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>iina</author><guid isPermaLink="false">https://github.com/iina/iina</guid><pubDate>Fri, 10 Jan 2020 00:08:00 GMT</pubDate></item><item><title>daltoniam/Starscream #9 in Swift, Today</title><link>https://github.com/daltoniam/Starscream</link><description>&lt;p&gt;&lt;i&gt;Websockets in swift for iOS and OSX&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/daltoniam/starscream/assets/starscream.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/daltoniam/starscream/assets/starscream.jpg" alt="starscream" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Starscream is a conforming WebSocket (&lt;a href="http://tools.ietf.org/html/rfc6455" rel="nofollow"&gt;RFC 6455&lt;/a&gt;) library in Swift.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Conforms to all of the base &lt;a href="http://autobahn.ws/testsuite/" rel="nofollow"&gt;Autobahn test suite&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Nonblocking. Everything happens in the background, thanks to GCD.&lt;/li&gt;
&lt;li&gt;TLS/WSS support.&lt;/li&gt;
&lt;li&gt;Compression Extensions support (&lt;a href="https://tools.ietf.org/html/rfc7692" rel="nofollow"&gt;RFC 7692&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-import-the-framework" class="anchor" aria-hidden="true" href="#import-the-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Import the framework&lt;/h3&gt;
&lt;p&gt;First thing is to import the framework. See the Installation instructions on how to add the framework to your project.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Starscream&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-connect-to-the-websocket-server" class="anchor" aria-hidden="true" href="#connect-to-the-websocket-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connect to the WebSocket Server&lt;/h3&gt;
&lt;p&gt;Once imported, you can open a connection to your WebSocket server. Note that &lt;code&gt;socket&lt;/code&gt; is probably best as a property, so it doesn't get deallocated right after being setup.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
socket.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
socket.&lt;span class="pl-c1"&gt;connect&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you are connected, there is either a delegate or closure you can use for process WebSocket events.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-receiving-data-from-a-websocket" class="anchor" aria-hidden="true" href="#receiving-data-from-a-websocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Receiving data from a WebSocket&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;didReceive&lt;/code&gt; receives all the WebSocket events in a single easy to handle enum.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didReceive&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;event&lt;/span&gt;&lt;/span&gt;: WebSocketEvent, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;client&lt;/span&gt;&lt;/span&gt;: WebSocket) {
	&lt;span class="pl-k"&gt;switch&lt;/span&gt; event {
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;connected&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; headers)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		isConnected &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
		&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;websocket is connected: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;headers&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;disconnected&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; reason, &lt;span class="pl-k"&gt;let&lt;/span&gt; code)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		isConnected &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
		&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;websocket is disconnected: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;reason&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; with code: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;code&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;text&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; string)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Received text: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;string&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;binary&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; data)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Received data: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;data.&lt;span class="pl-c1"&gt;count&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;ping&lt;/span&gt;(&lt;span class="pl-c1"&gt;_&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-k"&gt;break&lt;/span&gt;
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;pong&lt;/span&gt;(&lt;span class="pl-c1"&gt;_&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-k"&gt;break&lt;/span&gt;
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;viablityChanged&lt;/span&gt;(&lt;span class="pl-c1"&gt;_&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-k"&gt;break&lt;/span&gt;
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;reconnectSuggested&lt;/span&gt;(&lt;span class="pl-c1"&gt;_&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-k"&gt;break&lt;/span&gt;
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cancelled&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
		isConnected &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		isConnected &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
		&lt;span class="pl-c1"&gt;handleError&lt;/span&gt;(error)
	}
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The closure of this would be:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-smi"&gt;onEvent&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { event &lt;span class="pl-k"&gt;in&lt;/span&gt;
	&lt;span class="pl-k"&gt;switch&lt;/span&gt; event {
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle events just like above...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	}
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-writing-to-a-websocket" class="anchor" aria-hidden="true" href="#writing-to-a-websocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing to a WebSocket&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-binary-frame" class="anchor" aria-hidden="true" href="#write-a-binary-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a binary frame&lt;/h3&gt;
&lt;p&gt;The writeData method gives you a simple way to send &lt;code&gt;Data&lt;/code&gt; (binary) data to the server.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: data) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;write some Data over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-string-frame" class="anchor" aria-hidden="true" href="#write-a-string-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a string frame&lt;/h3&gt;
&lt;p&gt;The writeString method is the same as writeData, but sends text/string.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hi Server!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;example on how to write text over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-ping-frame" class="anchor" aria-hidden="true" href="#write-a-ping-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a ping frame&lt;/h3&gt;
&lt;p&gt;The writePing method is the same as write, but sends a ping control frame.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;ping&lt;/span&gt;: &lt;span class="pl-c1"&gt;Data&lt;/span&gt;()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;example on how to write a ping control frame over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-pong-frame" class="anchor" aria-hidden="true" href="#write-a-pong-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a pong frame&lt;/h3&gt;
&lt;p&gt;the writePong method is the same as writePing, but sends a pong control frame.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;pong&lt;/span&gt;: &lt;span class="pl-c1"&gt;Data&lt;/span&gt;()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;example on how to write a pong control frame over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Starscream will automatically respond to incoming &lt;code&gt;ping&lt;/code&gt; control frames so you do not need to manually send &lt;code&gt;pong&lt;/code&gt;s.&lt;/p&gt;
&lt;p&gt;However if for some reason you need to control this process you can turn off the automatic &lt;code&gt;ping&lt;/code&gt; response by disabling &lt;code&gt;respondToPingWithPong&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-smi"&gt;respondToPingWithPong&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Do not automaticaly respond to incoming pings with pongs.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In most cases you will not need to do this.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disconnect" class="anchor" aria-hidden="true" href="#disconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;disconnect&lt;/h3&gt;
&lt;p&gt;The disconnect method does what you would expect and closes the socket.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;disconnect&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The disconnect method can also send a custom close code if desired.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;disconnect&lt;/span&gt;(&lt;span class="pl-c1"&gt;closeCode&lt;/span&gt;: CloseCode.&lt;span class="pl-smi"&gt;normal&lt;/span&gt;.&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-headers-protocols-and-timeout" class="anchor" aria-hidden="true" href="#custom-headers-protocols-and-timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Headers, Protocols and Timeout&lt;/h3&gt;
&lt;p&gt;You can override the default websocket headers, add your own custom ones and set a timeout:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
request.&lt;span class="pl-smi"&gt;timeoutInterval&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Sets the timeout for the connection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;request.&lt;span class="pl-c1"&gt;setValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someother protocols&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sec-WebSocket-Protocol&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
request.&lt;span class="pl-c1"&gt;setValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;14&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sec-WebSocket-Version&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
request.&lt;span class="pl-c1"&gt;setValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chat,superchat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sec-WebSocket-Protocol&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
request.&lt;span class="pl-c1"&gt;setValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Everything is Awesome!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My-Awesome-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;request&lt;/span&gt;: request)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-ssl-pinning" class="anchor" aria-hidden="true" href="#ssl-pinning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSL Pinning&lt;/h3&gt;
&lt;p&gt;SSL Pinning is also supported in Starscream.&lt;/p&gt;
&lt;p&gt;TODO: Update docs on how to load certificates and public keys into an app bundle, use the builtin pinner and TrustKit.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compression-extensions" class="anchor" aria-hidden="true" href="#compression-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compression Extensions&lt;/h3&gt;
&lt;p&gt;Compression Extensions (&lt;a href="https://tools.ietf.org/html/rfc7692" rel="nofollow"&gt;RFC 7692&lt;/a&gt;) is supported in Starscream.  Compression is enabled by default, however compression will only be used if it is supported by the server as well.  You may enable or disable compression via the &lt;code&gt;.enableCompression&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
socket.&lt;span class="pl-smi"&gt;enableCompression&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compression should be disabled if your application is transmitting already-compressed, random, or other uncompressable data.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-custom-queue" class="anchor" aria-hidden="true" href="#custom-queue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Queue&lt;/h3&gt;
&lt;p&gt;A custom queue can be specified when delegate methods are called. By default &lt;code&gt;DispatchQueue.main&lt;/code&gt; is used, thus making all delegate methods calls run on the main thread. It is important to note that all WebSocket processing is done on a background thread, only the delegate method calls are changed when modifying the queue. The actual processing is always on a background thread and will not pause your app.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocols&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;superchat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;create a custom queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket.&lt;span class="pl-smi"&gt;callbackQueue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DispatchQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;label&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.vluxe.starscream.myapp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example-project" class="anchor" aria-hidden="true" href="#example-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Project&lt;/h2&gt;
&lt;p&gt;Check out the SimpleTest project in the examples directory to see how to setup a simple connection to a WebSocket server.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Starscream works with iOS 8/10.10 or above for CocoaPods/framework support. To use Starscream with a project targeting iOS 7, you must include all Swift files directly in your project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Check out &lt;a href="http://cocoapods.org/" rel="nofollow"&gt;Get Started&lt;/a&gt; tab on &lt;a href="http://cocoapods.org/" rel="nofollow"&gt;cocoapods.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To use Starscream in your project add the following 'Podfile' to your project&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source 'https://github.com/CocoaPods/Specs.git'
platform :ios, '9.0'
use_frameworks!

pod 'Starscream', '~&amp;gt; 4.0.0'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod install
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; docs on how to add a install. The &lt;code&gt;Starscream&lt;/code&gt; framework is already setup with shared schemes.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;Carthage Install&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can install Carthage with &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate Starscream into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "daltoniam/Starscream" &amp;gt;= 4.0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-accio" class="anchor" aria-hidden="true" href="#accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accio&lt;/h3&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt; docs on how to add a install.&lt;/p&gt;
&lt;p&gt;Add the following to your Package.swift:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/daltoniam/Starscream.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, add &lt;code&gt;Starscream&lt;/code&gt; to your App targets dependencies like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;target&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;App&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Starscream&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    ]
),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;accio update&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rogue" class="anchor" aria-hidden="true" href="#rogue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rogue&lt;/h3&gt;
&lt;p&gt;First see the &lt;a href="https://github.com/acmacalister/Rogue"&gt;installation docs&lt;/a&gt; for how to install Rogue.&lt;/p&gt;
&lt;p&gt;To install Starscream run the command below in the directory you created the rogue file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rogue add https://github.com/daltoniam/Starscream
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next open the &lt;code&gt;libs&lt;/code&gt; folder and add the &lt;code&gt;Starscream.xcodeproj&lt;/code&gt; to your Xcode project. Once that is complete, in your "Build Phases" add the &lt;code&gt;Starscream.framework&lt;/code&gt; to your "Link Binary with Libraries" phase. Make sure to add the &lt;code&gt;libs&lt;/code&gt; folder to your &lt;code&gt;.gitignore&lt;/code&gt; file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler.&lt;/p&gt;
&lt;p&gt;Once you have your Swift package set up, adding Starscream as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;Package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/daltoniam/Starscream.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;majorVersion&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h3&gt;
&lt;p&gt;Simply grab the framework (either via git submodule or another package manager).&lt;/p&gt;
&lt;p&gt;Add the &lt;code&gt;Starscream.xcodeproj&lt;/code&gt; to your Xcode project. Once that is complete, in your "Build Phases" add the &lt;code&gt;Starscream.framework&lt;/code&gt; to your "Link Binary with Libraries" phase.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-add-copy-frameworks-phase" class="anchor" aria-hidden="true" href="#add-copy-frameworks-phase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add Copy Frameworks Phase&lt;/h3&gt;
&lt;p&gt;If you are running this in an OSX app or on a physical iOS device you will need to make sure you add the &lt;code&gt;Starscream.framework&lt;/code&gt; to be included in your app bundle. To do this, in Xcode, navigate to the target configuration window by clicking on the blue project icon, and selecting the application target under the "Targets" heading in the sidebar. In the tab bar at the top of that window, open the "Build Phases" panel. Expand the "Link Binary with Libraries" group, and add &lt;code&gt;Starscream.framework&lt;/code&gt;. Click on the + button at the top left of the panel and select "New Copy Files Phase". Rename this new phase to "Copy Frameworks", set the "Destination" to "Frameworks", and add &lt;code&gt;Starscream.framework&lt;/code&gt; respectively.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-todos" class="anchor" aria-hidden="true" href="#todos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODOs&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Proxy support&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Starscream is licensed under the Apache v2 License.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-dalton-cherry" class="anchor" aria-hidden="true" href="#dalton-cherry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dalton Cherry&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam"&gt;https://github.com/daltoniam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://twitter.com/daltoniam" rel="nofollow"&gt;http://twitter.com/daltoniam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://daltoniam.com" rel="nofollow"&gt;http://daltoniam.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-austin-cherry" class="anchor" aria-hidden="true" href="#austin-cherry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Austin Cherry&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/acmacalister"&gt;https://github.com/acmacalister&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://twitter.com/acmacalister" rel="nofollow"&gt;http://twitter.com/acmacalister&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://austincherry.me" rel="nofollow"&gt;http://austincherry.me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>daltoniam</author><guid isPermaLink="false">https://github.com/daltoniam/Starscream</guid><pubDate>Fri, 10 Jan 2020 00:09:00 GMT</pubDate></item><item><title>onevcat/Kingfisher #10 in Swift, Today</title><link>https://github.com/onevcat/Kingfisher</link><description>&lt;p&gt;&lt;i&gt;A lightweight, pure-Swift library for downloading and caching images from the web.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/onevcat/Kingfisher/master/images/logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/onevcat/Kingfisher/master/images/logo.png" alt="Kingfisher" title="Kingfisher" width="557" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="https://github.com/onevcat/Kingfisher/actions?query=workflow%3Abuild"&gt;&lt;img src="https://github.com/onevcat/kingfisher/workflows/build/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://onevcat.github.io/Kingfisher/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0f5426bc074b33d5a330b98e1dce5bf3d87e5f94/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4b696e676669736865722e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/cocoapods/v/Kingfisher.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage/"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/378b1808fd201a4bb4c9a2e8f78ac6322bca15f2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53504d2d737570706f727465642d4445354334332e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/SPM-supported-DE5C43.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/e502cdc2b27c1f2b2590f061d37b984ba3957c26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d3041374346352e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/onevcat/Kingfisher/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7813112d6e92298f067080fa7f1039037de6809e/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f4b696e676669736865722e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/cocoapods/l/Kingfisher.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://onevcat.github.io/Kingfisher/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/770175f6c01d89c84a020706126a9e6399ff76c4/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4b696e676669736865722e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/cocoapods/p/Kingfisher.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#backers" alt="sponsors on Open Collective"&gt;&lt;img src="https://camo.githubusercontent.com/e71884fe161a4e78c2519d99a629add57501a45d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4b696e676669736865722f6261636b6572732f62616467652e737667" data-canonical-src="https://opencollective.com/Kingfisher/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#sponsors" alt="Sponsors on Open Collective"&gt;&lt;img src="https://camo.githubusercontent.com/3545542879b4432fd8748e3d007d642226b334ce/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4b696e676669736865722f73706f6e736f72732f62616467652e737667" data-canonical-src="https://opencollective.com/Kingfisher/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Kingfisher is a powerful, pure-Swift library for downloading and caching images from the web. It provides you a chance to use a pure-Swift way to work with remote images in your next app.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Asynchronous image downloading and caching.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Loading image from either &lt;code&gt;URLSession&lt;/code&gt;-based networking or local provided data.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Useful image processors and filters provided.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Multiple-layer hybrid cache for both memory and disk.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Fine control on cache behavior. Customizable expiration date and size limit.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Cancelable downloading and auto-reusing previous downloaded content to improve performance.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Independent components. Use the downloader, caching system and image processors separately as you need.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Prefetching images and showing them from cache to boost your app.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; View extensions for &lt;code&gt;UIImageView&lt;/code&gt;, &lt;code&gt;NSImageView&lt;/code&gt;, &lt;code&gt;NSButton&lt;/code&gt; and &lt;code&gt;UIButton&lt;/code&gt; to directly set an image from a URL.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Built-in transition animation when setting images.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Customizable placeholder and indicator while loading images.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Extensible image processing and image format easily.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; SwiftUI support.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-kingfisher-101" class="anchor" aria-hidden="true" href="#kingfisher-101"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kingfisher 101&lt;/h3&gt;
&lt;p&gt;The simplest use-case is setting an image to an image view with the &lt;code&gt;UIImageView&lt;/code&gt; extension:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com/image.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
imageView.&lt;span class="pl-smi"&gt;kf&lt;/span&gt;.&lt;span class="pl-c1"&gt;setImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: url)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kingfisher will download the image from &lt;code&gt;url&lt;/code&gt;, send it to both memory cache and disk cache, and display it in &lt;code&gt;imageView&lt;/code&gt;. When you set with the same URL later, the image will be retrieved from cache and shown immediately.&lt;/p&gt;
&lt;p&gt;It also works if you use SwiftUI:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;KingfisherSwiftUI&lt;/span&gt;

&lt;span class="pl-k"&gt;var&lt;/span&gt; body&lt;span class="pl-k"&gt;:&lt;/span&gt; some View {
    &lt;span class="pl-c1"&gt;KFImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com/image.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-a-more-advanced-example" class="anchor" aria-hidden="true" href="#a-more-advanced-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A More Advanced Example&lt;/h3&gt;
&lt;p&gt;With the powerful options, you can do hard tasks with Kingfisher in a simple way. For example, the code below:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Downloads a high-resolution image.&lt;/li&gt;
&lt;li&gt;Downsamples it to match the image view size.&lt;/li&gt;
&lt;li&gt;Makes it round cornered with a given radius.&lt;/li&gt;
&lt;li&gt;Shows a system indicator and a placeholder image while downloading.&lt;/li&gt;
&lt;li&gt;When prepared, it animates the small thumbnail image with a "fade in" effect.&lt;/li&gt;
&lt;li&gt;The original large image is also cached to disk for later use, to get rid of downloading it again in a detail view.&lt;/li&gt;
&lt;li&gt;A console log is printed when the task finishes, either for success or failure.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com/high_resolution_image.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; processor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DownsamplingImageProcessor&lt;/span&gt;(&lt;span class="pl-c1"&gt;size&lt;/span&gt;: imageView.&lt;span class="pl-c1"&gt;size&lt;/span&gt;)
             &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;RoundCornerImageProcessor&lt;/span&gt;(&lt;span class="pl-c1"&gt;cornerRadius&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;)
imageView.&lt;span class="pl-smi"&gt;kf&lt;/span&gt;.&lt;span class="pl-smi"&gt;indicatorType&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;activity&lt;/span&gt;
imageView.&lt;span class="pl-smi"&gt;kf&lt;/span&gt;.&lt;span class="pl-c1"&gt;setImage&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;with&lt;/span&gt;: url,
    &lt;span class="pl-c1"&gt;placeholder&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;placeholderImage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;options&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;processor&lt;/span&gt;(processor),
        .&lt;span class="pl-c1"&gt;scaleFactor&lt;/span&gt;(UIScreen.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;scale&lt;/span&gt;),
        .&lt;span class="pl-c1"&gt;transition&lt;/span&gt;(.&lt;span class="pl-c1"&gt;fade&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)),
        .&lt;span class="pl-smi"&gt;cacheOriginalImage&lt;/span&gt;
    ])
{
    result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; value)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Task done for: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value.&lt;span class="pl-smi"&gt;source&lt;/span&gt;.&lt;span class="pl-c1"&gt;url&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;absoluteString&lt;/span&gt; &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Job failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error.&lt;span class="pl-smi"&gt;localizedDescription&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is really a very common situation I can meet in my daily work. Think about how many lines you need to write without Kingfisher. You will fall in love with it if you give it a try!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn More&lt;/h3&gt;
&lt;p&gt;To learn the using of Kingfisher by more examples, take a look at the &lt;a href="https://github.com/onevcat/Kingfisher/wiki/Cheat-Sheet"&gt;Cheat Sheet&lt;/a&gt;. There we summarized most common tasks in Kingfisher, you can get a better idea on what this framework can do. There are also some tips for performance in the same page, remember to check them too.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+&lt;/li&gt;
&lt;li&gt;Swift 4.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/onevcat/Kingfisher/wiki/Kingfisher-5.0-Migration-Guide"&gt;Kingfisher 5.0 Migration&lt;/a&gt; - Kingfisher 5.x is NOT fully compatible with version 4.x. However, the migration is not difficult. Depending on your use cases, it may take no effect or several minutes to modify your existing code for the new version. Please follow the &lt;a href="https://github.com/onevcat/Kingfisher/wiki/Kingfisher-5.0-Migration-Guide"&gt;migration guide&lt;/a&gt; when you prepare to upgrade Kingfisher in your project.&lt;/p&gt;
&lt;p&gt;If you are using an even earlier version, see the guides below to know the steps for migrating.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Kingfisher 4.0 Migration - Kingfisher 3.x should be source compatible to Kingfisher 4. The reason for a major update is that we need to specify the Swift version explicitly for Xcode. All deprecated methods in Kingfisher 3 has been removed, so please ensure you have no warning left before you migrate from Kingfisher 3 to Kingfisher 4. If you have any trouble in migrating, please open an issue to discuss.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Kingfisher/wiki/Kingfisher-3.0-Migration-Guide"&gt;Kingfisher 3.0 Migration&lt;/a&gt; - If you are upgrading to Kingfisher 3.x from an earlier version, please read this for more information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-next-steps" class="anchor" aria-hidden="true" href="#next-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;We prepared a &lt;a href="https://github.com/onevcat/Kingfisher/wiki"&gt;wiki page&lt;/a&gt;. You can find tons of useful things there.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Kingfisher/wiki/Installation-Guide"&gt;Installation Guide&lt;/a&gt; - Follow it to integrate Kingfisher into your project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Kingfisher/wiki/Cheat-Sheet"&gt;Cheat Sheet&lt;/a&gt;- Curious about what Kingfisher could do and how would it look like when used in your project? See this page for useful code snippets. If you are already familiar with Kingfisher, you could also learn new tricks to improve the way you use Kingfisher!&lt;/li&gt;
&lt;li&gt;&lt;a href="http://onevcat.github.io/Kingfisher/" rel="nofollow"&gt;API Reference&lt;/a&gt; - Lastly, please remember to read the full whenever you may need a more detailed reference.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-future-of-kingfisher" class="anchor" aria-hidden="true" href="#future-of-kingfisher"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Future of Kingfisher&lt;/h3&gt;
&lt;p&gt;I want to keep Kingfisher lightweight. This framework will focus on providing a simple solution for downloading and caching images. This doesn’t mean the framework can’t be improved. Kingfisher is far from perfect, so necessary and useful updates will be made to make it better.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-developments-and-tests" class="anchor" aria-hidden="true" href="#developments-and-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developments and Tests&lt;/h3&gt;
&lt;p&gt;Any contributing and pull requests are warmly welcome. However, before you plan to implement some features or try to fix an uncertain issue, it is recommended to open a discussion first. It would be appreciated if your pull requests could build and with all tests green. :)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-about-the-logo" class="anchor" aria-hidden="true" href="#about-the-logo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About the logo&lt;/h3&gt;
&lt;p&gt;The logo of Kingfisher is inspired by &lt;a href="http://en.wikipedia.org/wiki/Tangram" rel="nofollow"&gt;Tangram (七巧板)&lt;/a&gt;, a dissection puzzle consisting of seven flat shapes from China. I believe she's a kingfisher bird instead of a swift, but someone insists that she is a pigeon. I guess I should give her a name. Hi, guys, do you have any suggestions?&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h3&gt;
&lt;p&gt;Follow and contact me on &lt;a href="http://twitter.com/onevcat" rel="nofollow"&gt;Twitter&lt;/a&gt; or &lt;a href="http://weibo.com/onevcat" rel="nofollow"&gt;Sina Weibo&lt;/a&gt;. If you find an issue, just &lt;a href="https://github.com/onevcat/Kingfisher/issues/new"&gt;open a ticket&lt;/a&gt;. Pull requests are warmly welcome as well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href="https://github.com/onevcat/Kingfisher/blob/master/CONTRIBUTING.md"&gt;[Contribute]&lt;/a&gt;.
&lt;a href="https://opencollective.com/kingfisher#backer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22cc36c7a90c6c32d8699076d341051dc2884508/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f636f6e7472696275746f72732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/kingfisher/contributors.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h2&gt;
&lt;p&gt;Thank you to all our backers! Your support is really important for the project and encourages us to continue. &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; [&lt;a href="https://opencollective.com/kingfisher#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/kingfisher#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52ce3d5e2601e5e98842aef1a393677fc5baca9a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/kingfisher/backers.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/kingfisher#sponsor" rel="nofollow"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/kingfisher/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29f631c84bf7ef3b91920939f068daf61b731dc3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/98e3049fb9dd378e709dbe634b0dd4215d16a0ed/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab53edfb00b9619d7715f24b40cdc0afd15ad807/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a73b9b27386238fb79b153254b3cd12880f0b06/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c8f68602f268e2e561cc0762ae3bda4a0f0eddbd/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d36be979bf4a1a52d6ada492ded2e7d2c5e870ec/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2976cc566e20343f507af2305c6c9265a6bbb876/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/041d09519b90b022d698d686ab7de6233a67c6e9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/996a9cb4dc04a2c201adeaa7cef7928b0128d063/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f4dc13b033ee37727b920cb4d9e973a1de2aa17b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;Kingfisher is released under the MIT license. See LICENSE for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>onevcat</author><guid isPermaLink="false">https://github.com/onevcat/Kingfisher</guid><pubDate>Fri, 10 Jan 2020 00:10:00 GMT</pubDate></item><item><title>apple/swift-package-manager #11 in Swift, Today</title><link>https://github.com/apple/swift-package-manager</link><description>&lt;p&gt;&lt;i&gt;The Package Manager for the Swift Programming Language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swift-package-manager-project" class="anchor" aria-hidden="true" href="#swift-package-manager-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager Project&lt;/h1&gt;
&lt;p&gt;The Swift Package Manager is a tool for managing distribution of source code, aimed at making it easy to share your code and reuse others’ code. The tool directly addresses the challenges of compiling and linking Swift packages, managing dependencies, versioning, and supporting flexible distribution and collaboration models.&lt;/p&gt;
&lt;p&gt;We’ve designed the system to make it easy to share packages on services like GitHub, but packages are also great for private personal development, sharing code within a team, or at any other granularity.&lt;/p&gt;
&lt;p&gt;Swift Package Manager includes a build system that can build for macOS and Linux. Xcode 11 integrates with libSwiftPM to provide support for iOS, watchOS, and tvOS platforms.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/apple/sourcekit-lsp"&gt;SourceKit-LSP&lt;/a&gt; project leverages libSwiftPM and provides Language Server Protocol implementation for editors that support LSP.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-requirements"&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#managing-swift-environments"&gt;Managing Swift Environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#choosing-a-swift-version"&gt;Choosing a Swift Version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#support"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributions"&gt;Contributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Please use &lt;a href="https://swift.org/getting-started/#using-the-package-manager" rel="nofollow"&gt;this guide&lt;/a&gt; for learning package manager basics.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;For Quick Help use the &lt;code&gt;swift package --help &lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;For extensive documentation on using Swift Package Manager, creating packages, and more, see &lt;a href="Documentation"&gt;Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For additional documentation on developing the Swift Package Manager itself, see &lt;a href="Documentation/Development.md"&gt;Documentation/Development&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Requirements&lt;/h2&gt;
&lt;p&gt;The package manager’s system requirements are the same as &lt;a href="https://github.com/apple/swift#system-requirements"&gt;those for Swift&lt;/a&gt; with the caveat that the package manager requires Git at runtime as well as build-time.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;The Swift Package Manager is included in Xcode 8.0 and all subsequent releases.&lt;/p&gt;
&lt;p&gt;The package manager is also available for other platforms as part of all &lt;a href="https://swift.org/download/" rel="nofollow"&gt;Snapshots available at swift.org&lt;/a&gt;, including snapshots for the latest versions built from &lt;code&gt;master&lt;/code&gt;. For installation instructions for downloaded snapshots, please see the &lt;a href="https://swift.org/getting-started/#installing-swift" rel="nofollow"&gt;Getting Started&lt;/a&gt; section of &lt;a href="https://swift.org" rel="nofollow"&gt;swift.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can verify your installation by typing &lt;code&gt;swift package --version&lt;/code&gt; in a terminal:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift package --version
Apple Swift Package Manager - ...&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-managing-swift-environments" class="anchor" aria-hidden="true" href="#managing-swift-environments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing Swift Environments&lt;/h3&gt;
&lt;p&gt;On macOS &lt;code&gt;/usr/bin/swift&lt;/code&gt; is just a stub that forwards invocations to the active
toolchain. Thus when you call &lt;code&gt;swift build&lt;/code&gt; it will use the swift defined by
your &lt;code&gt;TOOLCHAINS&lt;/code&gt; environment variable. This can be used to easily switch
between the default tools, and a development snapshot:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ xcrun --find swift
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift
$ swift --version
Apple Swift version 3.0
$ &lt;span class="pl-k"&gt;export&lt;/span&gt; TOOLCHAINS=swift
$ xcrun --find swift
/Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin/swift
$ swift --version
Swift version 3.0-dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use a specific toolchain you can set &lt;code&gt;TOOLCHAINS&lt;/code&gt; to the &lt;code&gt;CFBundleIdentifier&lt;/code&gt; in an &lt;code&gt;.xctoolchain&lt;/code&gt;’s Info.plist.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-choosing-a-swift-version" class="anchor" aria-hidden="true" href="#choosing-a-swift-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Choosing a Swift Version&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;SWIFT_EXEC&lt;/code&gt; environment variable specifies the &lt;code&gt;swiftc&lt;/code&gt; executable path used by &lt;code&gt;swift package&lt;/code&gt;. If it is not set, the package manager will try to locate it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In &lt;code&gt;swift-package&lt;/code&gt;'s parent directory.&lt;/li&gt;
&lt;li&gt;On macOS, by calling &lt;code&gt;xcrun --find swiftc&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;By searching the PATH.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;If you have any trouble with the package manager, help is available. We recommend:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://forums.swift.org/c/swift-users" rel="nofollow"&gt;Swift Forums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Our &lt;a href="http://bugs.swift.org" rel="nofollow"&gt;bug tracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When adding a bug to the tracker you should follow the bug reporting guidelines, they can be found in &lt;a href="./Documentation/Resources.md#reporting-a-good-swiftpm-bug"&gt;Resources.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you’re not comfortable sharing your question with the list, contact details for the code owners can be found in &lt;a href="CODEOWNERS"&gt;CODEOWNERS&lt;/a&gt;; however, the mailing list is usually the best place to go for help.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;To learn about the policies and best practices that govern contributions to the Swift project, please read the &lt;a href="https://swift.org/contributing/" rel="nofollow"&gt;Contributor Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are interested in contributing, please read the &lt;a href="Documentation/Internals/PackageManagerCommunityProposal.md"&gt;Community Proposal&lt;/a&gt;, which provides some context for decisions made in the current implementation and offers direction for the development of future features.&lt;/p&gt;
&lt;p&gt;Instructions for setting up the development environment are available &lt;a href="Documentation/Development.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Swift package manager uses &lt;a href="https://github.com/apple/swift-llbuild"&gt;llbuild&lt;/a&gt; as the underlying build system for compiling source files.  It is also open source and part of the Swift project.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2015 - 2019 Apple Inc. and the Swift project authors. Licensed under Apache License v2.0 with Runtime Library Exception.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://swift.org/LICENSE.txt" rel="nofollow"&gt;https://swift.org/LICENSE.txt&lt;/a&gt; for license information.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://swift.org/CONTRIBUTORS.txt" rel="nofollow"&gt;https://swift.org/CONTRIBUTORS.txt&lt;/a&gt; for Swift project authors.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift-package-manager</guid><pubDate>Fri, 10 Jan 2020 00:11:00 GMT</pubDate></item><item><title>kishikawakatsumi/KeychainAccess #12 in Swift, Today</title><link>https://github.com/kishikawakatsumi/KeychainAccess</link><description>&lt;p&gt;&lt;i&gt;Simple Swift wrapper for Keychain that works on iOS, watchOS, tvOS and macOS.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-keychainaccess" class="anchor" aria-hidden="true" href="#keychainaccess"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KeychainAccess&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/kishikawakatsumi/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/afdbd44171d9bfa54b62c676cb0eb3950338fe39/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6b697368696b6177616b617473756d692f4b6579636861696e4163636573732e737667" alt="CI Status" data-canonical-src="http://img.shields.io/travis/kishikawakatsumi/KeychainAccess.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/kishikawakatsumi/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/97a6fd2a7940f2bb66a4ab96e5dd915937af5127/68747470733a2f2f636f6465636f762e696f2f67682f6b697368696b6177616b617473756d692f4b6579636861696e4163636573732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/kishikawakatsumi/KeychainAccess/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/package-manager" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/378b1808fd201a4bb4c9a2e8f78ac6322bca15f2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53504d2d737570706f727465642d4445354334332e7376673f7374796c653d666c6174" alt="SPM supported" data-canonical-src="https://img.shields.io/badge/SPM-supported-DE5C43.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoadocs.org/docsets/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f820d6fc06ee07b623567703e759f2a050efe2db/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4b6579636861696e4163636573732e737667" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/KeychainAccess.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoadocs.org/docsets/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/059116fbd9f38b9b7deb2a0ab0d98b3dd2c80e14/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4b6579636861696e4163636573732e737667" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/KeychainAccess.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;KeychainAccess is a simple Swift wrapper for Keychain that works on iOS and OS X. Makes using Keychain APIs extremely easy and much more palatable to use in Swift.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/01.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/01.png" width="320px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/02.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/02.png" width="320px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/03.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/03.png" width="320px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bulb-features" class="anchor" aria-hidden="true" href="#bulb-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Simple interface&lt;/li&gt;
&lt;li&gt;Support access group&lt;/li&gt;
&lt;li&gt;&lt;a href="#accessibility"&gt;Support accessibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#icloud_sharing"&gt;Support iCloud sharing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#touch_id_integration"&gt;Support TouchID and Keychain integration (iOS 8+)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#shared_web_credentials"&gt;Support Shared Web Credentials (iOS 8+)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Works on both iOS &amp;amp; macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;watchOS and tvOS are supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#requirements"&gt;Mac Catalyst is supported&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#requirements"&gt;Swift 3, 4 and 5 compatible&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-book-usage" class="anchor" aria-hidden="true" href="#book-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; Usage&lt;/h2&gt;
&lt;h5&gt;&lt;a id="user-content-eyes-see-also" class="anchor" aria-hidden="true" href="#eyes-see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="eyes" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f440.png"&gt;👀&lt;/g-emoji&gt; See also:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kishikawakatsumi/KeychainAccess/tree/master/Examples/Example-iOS"&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; iOS Example Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-key-basics" class="anchor" aria-hidden="true" href="#key-basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Basics&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-saving-application-password" class="anchor" aria-hidden="true" href="#saving-application-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Saving Application Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-saving-internet-password" class="anchor" aria-hidden="true" href="#saving-internet-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Saving Internet Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)
keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-instantiation" class="anchor" aria-hidden="true" href="#key-instantiation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Instantiation&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-create-keychain-for-application-password" class="anchor" aria-hidden="true" href="#create-keychain-for-application-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Keychain for Application Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;accessGroup&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12ABCD3E4F.shared&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-create-keychain-for-internet-password" class="anchor" aria-hidden="true" href="#create-keychain-for-internet-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Keychain for Internet Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;, &lt;span class="pl-c1"&gt;authenticationType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;htmlForm&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-adding-an-item" class="anchor" aria-hidden="true" href="#key-adding-an-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Adding an item&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-subscripting" class="anchor" aria-hidden="true" href="#subscripting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-for-string" class="anchor" aria-hidden="true" href="#for-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for String&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-nsdata" class="anchor" aria-hidden="true" href="#for-nsdata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for NSData&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSData&lt;/span&gt;(&lt;span class="pl-c1"&gt;contentsOfFile&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret.bin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-set-method" class="anchor" aria-hidden="true" href="#set-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set method&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;error handling&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-obtaining-an-item" class="anchor" aria-hidden="true" href="#key-obtaining-an-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Obtaining an item&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-subscripting-1" class="anchor" aria-hidden="true" href="#subscripting-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-for-string-if-the-value-is-nsdata-attempt-to-convert-to-string" class="anchor" aria-hidden="true" href="#for-string-if-the-value-is-nsdata-attempt-to-convert-to-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for String (If the value is NSData, attempt to convert to String)&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-nsdata-1" class="anchor" aria-hidden="true" href="#for-nsdata-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for NSData&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; secretData &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-get-methods" class="anchor" aria-hidden="true" href="#get-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;get methods&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-as-string" class="anchor" aria-hidden="true" href="#as-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;as String&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;getString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-as-nsdata" class="anchor" aria-hidden="true" href="#as-nsdata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;as NSData&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;getData&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-removing-an-item" class="anchor" aria-hidden="true" href="#key-removing-an-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Removing an item&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-subscripting-2" class="anchor" aria-hidden="true" href="#subscripting-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-remove-method" class="anchor" aria-hidden="true" href="#remove-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;remove method&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-set-label-and-comment" class="anchor" aria-hidden="true" href="#key-set-label-and-comment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Set Label and Comment&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)
&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;label&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com (kishikawakatsumi)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;comment&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github access token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-obtaining-other-attributes" class="anchor" aria-hidden="true" href="#key-obtaining-other-attributes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Obtaining Other Attributes&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-persistentref" class="anchor" aria-hidden="true" href="#persistentref"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PersistentRef&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; persistentRef &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;attributes&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;persistentRef&lt;/span&gt;
&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-creation-date" class="anchor" aria-hidden="true" href="#creation-date"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creation Date&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; creationDate &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;attributes&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;creationDate&lt;/span&gt;
&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-all-attributes" class="anchor" aria-hidden="true" href="#all-attributes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;All Attributes&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; attributes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-c1"&gt;$0&lt;/span&gt; }
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;comment&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;label&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;creator&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-subscripting-3" class="anchor" aria-hidden="true" href="#subscripting-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; attributes &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;attributes&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes.&lt;span class="pl-smi"&gt;comment&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes.&lt;span class="pl-smi"&gt;label&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes.&lt;span class="pl-smi"&gt;creator&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-configuration-accessibility-sharing-icloud-sync" class="anchor" aria-hidden="true" href="#key-configuration-accessibility-sharing-icloud-sync"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Configuration (Accessibility, Sharing, iCloud Sync)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Provides fluent interfaces&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;label&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com (kishikawakatsumi)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;synchronizable&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;afterFirstUnlock&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content--accessibility" class="anchor" aria-hidden="true" href="#-accessibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-accessibility"&gt; Accessibility&lt;/a&gt;&lt;/h4&gt;&lt;a name="user-content-accessibility"&gt;
&lt;h5&gt;&lt;a id="user-content-default-accessibility-matches-background-application-ksecattraccessibleafterfirstunlock" class="anchor" aria-hidden="true" href="#default-accessibility-matches-background-application-ksecattraccessibleafterfirstunlock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default accessibility matches background application (=kSecAttrAccessibleAfterFirstUnlock)&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-background-application" class="anchor" aria-hidden="true" href="#for-background-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For background application&lt;/h5&gt;
&lt;h6&gt;&lt;a id="user-content-creating-instance" class="anchor" aria-hidden="true" href="#creating-instance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating instance&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;afterFirstUnlock&lt;/span&gt;)

keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-one-shot" class="anchor" aria-hidden="true" href="#one-shot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-shot&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;afterFirstUnlock&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-foreground-application" class="anchor" aria-hidden="true" href="#for-foreground-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For foreground application&lt;/h5&gt;
&lt;h6&gt;&lt;a id="user-content-creating-instance-1" class="anchor" aria-hidden="true" href="#creating-instance-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating instance&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenUnlocked&lt;/span&gt;)

keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-one-shot-1" class="anchor" aria-hidden="true" href="#one-shot-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-shot&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenUnlocked&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-couple-sharing-keychain-items" class="anchor" aria-hidden="true" href="#couple-sharing-keychain-items"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="couple" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f46b.png"&gt;👫&lt;/g-emoji&gt; Sharing Keychain items&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;accessGroup&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12ABCD3E4F.shared&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;h4&gt;&lt;a id="user-content--arrows_counterclockwise-synchronizing-keychain-items-with-icloud" class="anchor" aria-hidden="true" href="#-arrows_counterclockwise-synchronizing-keychain-items-with-icloud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-accessibility"&gt;&lt;/a&gt;&lt;a name="user-content-icloud_sharing"&gt; &lt;g-emoji class="g-emoji" alias="arrows_counterclockwise" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f504.png"&gt;🔄&lt;/g-emoji&gt; Synchronizing Keychain items with iCloud&lt;/a&gt;&lt;/h4&gt;&lt;a name="user-content-icloud_sharing"&gt;
&lt;h6&gt;&lt;a id="user-content-creating-instance-2" class="anchor" aria-hidden="true" href="#creating-instance-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating instance&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;synchronizable&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)

keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-one-shot-2" class="anchor" aria-hidden="true" href="#one-shot-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-shot&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;synchronizable&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;h3&gt;&lt;a id="user-content--fu-touch-id-face-id-integration" class="anchor" aria-hidden="true" href="#-fu-touch-id-face-id-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-icloud_sharing"&gt;&lt;/a&gt;&lt;a name="user-content-touch_id_integration"&gt; &lt;g-emoji class="g-emoji" alias="middle_finger" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f595.png"&gt;🖕&lt;/g-emoji&gt; Touch ID (Face ID) integration&lt;/a&gt;&lt;/h3&gt;&lt;a name="user-content-touch_id_integration"&gt;
&lt;p&gt;&lt;strong&gt;Any Operation that require authentication must be run in the background thread.&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;If you run in the main thread, UI thread will lock for the system to try to display the authentication dialog.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To use Face ID, add &lt;code&gt;NSFaceIDUsageDescription&lt;/code&gt; key to your &lt;code&gt;Info.plist&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-adding-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-adding-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Adding a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;If you want to store the Touch ID protected Keychain item, specify &lt;code&gt;accessibility&lt;/code&gt; and &lt;code&gt;authenticationPolicy&lt;/code&gt; attributes.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Should be the secret invalidated when passcode is removed? If not then use `.WhenUnlocked`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
            .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenPasscodeSetThisDeviceOnly&lt;/span&gt;, &lt;span class="pl-c1"&gt;authenticationPolicy&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userPresence&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-updating-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-updating-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Updating a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;The same way as when adding.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Do not run in the main thread if there is a possibility that the item you are trying to add already exists, and protected.&lt;/strong&gt;
&lt;strong&gt;Because updating protected items requires authentication.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Additionally, you want to show custom authentication prompt message when updating, specify an &lt;code&gt;authenticationPrompt&lt;/code&gt; attribute.
If the item not protected, the &lt;code&gt;authenticationPrompt&lt;/code&gt; parameter just be ignored.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Should be the secret invalidated when passcode is removed? If not then use `.WhenUnlocked`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
            .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenPasscodeSetThisDeviceOnly&lt;/span&gt;, &lt;span class="pl-c1"&gt;authenticationPolicy&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userPresence&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;authenticationPrompt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Authenticate to update your access token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-obtaining-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-obtaining-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Obtaining a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;The same way as when you get a normal item. It will be displayed automatically Touch ID or passcode authentication If the item you try to get is protected.&lt;br&gt;
If you want to show custom authentication prompt message, specify an &lt;code&gt;authenticationPrompt&lt;/code&gt; attribute.
If the item not protected, the &lt;code&gt;authenticationPrompt&lt;/code&gt; parameter just be ignored.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
            .&lt;span class="pl-c1"&gt;authenticationPrompt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Authenticate to login to server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;password: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;password&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-removing-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-removing-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Removing a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;The same way as when you remove a normal item.
There is no way to show Touch ID or passcode authentication when removing Keychain items.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;h3&gt;&lt;a id="user-content--key-shared-web-credentials" class="anchor" aria-hidden="true" href="#-key-shared-web-credentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-touch_id_integration"&gt;&lt;/a&gt;&lt;a name="user-content-shared_web_credentials"&gt; &lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Shared Web Credentials&lt;/a&gt;&lt;/h3&gt;&lt;a name="user-content-shared_web_credentials"&gt;
&lt;/a&gt;&lt;blockquote&gt;&lt;a name="user-content-shared_web_credentials"&gt;
&lt;/a&gt;&lt;p&gt;&lt;a name="user-content-shared_web_credentials"&gt;Shared web credentials is a programming interface that enables native iOS apps to share credentials with their website counterparts. For example, a user may log in to a website in Safari, entering a user name and password, and save those credentials using the iCloud Keychain. Later, the user may run a native app from the same developer, and instead of the app requiring the user to reenter a user name and password, shared web credentials gives it access to the credentials that were entered earlier in Safari. The user can also create new accounts, update passwords, or delete her account from within the app. These changes are then saved and used by Safari.&lt;br&gt;
&lt;/a&gt;&lt;a href="https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/" rel="nofollow"&gt;https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://www.kishikawakatsumi.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;HTTPS&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; username &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi@mac.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; First, check the credential in the app's Keychain&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(username) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If found password in the Keychain,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; then log into the server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If not found password in the Keychain,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; try to read from Shared Web Credentials&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    keychain.&lt;span class="pl-c1"&gt;getSharedPassword&lt;/span&gt;(username) { (password, error) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; () &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; password &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If found password in the Shared Web Credentials,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; then log into the server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and save the password to the Keychain&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            keychain[username] &lt;span class="pl-k"&gt;=&lt;/span&gt; password
        } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If not found password either in the Keychain also Shared Web Credentials,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prompt for username and password&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Log into server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If the login is successful,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; save the credentials to both the Keychain and the Shared Web Credentials.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            keychain[username] &lt;span class="pl-k"&gt;=&lt;/span&gt; inputPassword
            keychain.&lt;span class="pl-c1"&gt;setSharedPassword&lt;/span&gt;(inputPassword, &lt;span class="pl-c1"&gt;account&lt;/span&gt;: username)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-request-all-associated-domains-credentials" class="anchor" aria-hidden="true" href="#request-all-associated-domains-credentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Request all associated domain's credentials&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Keychain.&lt;span class="pl-smi"&gt;requestSharedWebCredential&lt;/span&gt; { (credentials, error) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; () &lt;span class="pl-k"&gt;in&lt;/span&gt;

}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-generate-strong-random-password" class="anchor" aria-hidden="true" href="#generate-strong-random-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate strong random password&lt;/h4&gt;
&lt;p&gt;Generate strong random password that is in the same format used by Safari autofill (xxx-xxx-xxx-xxx).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; password &lt;span class="pl-k"&gt;=&lt;/span&gt; Keychain.&lt;span class="pl-c1"&gt;generatePassword&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; =&amp;gt; Nhu-GKm-s3n-pMx&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-how-to-set-up-shared-web-credentials" class="anchor" aria-hidden="true" href="#how-to-set-up-shared-web-credentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to set up Shared Web Credentials&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add a com.apple.developer.associated-domains entitlement to your app. This entitlement must include all the domains with which you want to share credentials.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add an apple-app-site-association file to your website. This file must include application identifiers for all the apps with which the site wants to share credentials, and it must be properly signed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When the app is installed, the system downloads and verifies the site association file for each of its associated domains. If the verification is successful, the app is associated with the domain.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;More details:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/" rel="nofollow"&gt;https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-key-debugging" class="anchor" aria-hidden="true" href="#key-debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Debugging&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-display-all-stored-items-if-print-keychain-object" class="anchor" aria-hidden="true" href="#display-all-stored-items-if-print-keychain-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Display all stored items if print keychain object&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;keychain&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;=&amp;gt;
[
  [authenticationType: default, key: kishikawakatsumi, server: github.com, class: internetPassword, protocol: https]
  [authenticationType: default, key: hirohamada, server: github.com, class: internetPassword, protocol: https]
  [authenticationType: default, key: honeylemon, server: github.com, class: internetPassword, protocol: https]
]
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-obtaining-all-stored-keys" class="anchor" aria-hidden="true" href="#obtaining-all-stored-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obtaining all stored keys&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; keys &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;allKeys&lt;/span&gt;()
&lt;span class="pl-k"&gt;for&lt;/span&gt; key &lt;span class="pl-k"&gt;in&lt;/span&gt; keys {
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;key: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;key&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;=&amp;gt;
key: kishikawakatsumi
key: hirohamada
key: honeylemon
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-obtaining-all-stored-items" class="anchor" aria-hidden="true" href="#obtaining-all-stored-items"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obtaining all stored items&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; items &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;allItems&lt;/span&gt;()
&lt;span class="pl-k"&gt;for&lt;/span&gt; item &lt;span class="pl-k"&gt;in&lt;/span&gt; items {
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;item: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;=&amp;gt;
item: [authenticationType: Default, key: kishikawakatsumi, server: github.com, class: InternetPassword, protocol: https]
item: [authenticationType: Default, key: hirohamada, server: github.com, class: InternetPassword, protocol: https]
item: [authenticationType: Default, key: honeylemon, server: github.com, class: InternetPassword, protocol: https]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-keychain-sharing-capability" class="anchor" aria-hidden="true" href="#keychain-sharing-capability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keychain sharing capability&lt;/h2&gt;
&lt;p&gt;If you encounter the error below, you need to add an &lt;code&gt;Keychain.entitlements&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;OSStatus error:[-34018] Internal error when a required entitlement isn't present, client has neither application-identifier nor keychain-access-groups entitlements.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/40610/67627108-1a7f2f80-f891-11e9-97bc-7f7313cb63d1.png"&gt;&lt;img alt="Screen Shot 2019-10-27 at 8 08 50" src="https://user-images.githubusercontent.com/40610/67627108-1a7f2f80-f891-11e9-97bc-7f7313cb63d1.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/40610/67627072-333b1580-f890-11e9-9feb-bf507abc2724.png"&gt;&lt;img src="https://user-images.githubusercontent.com/40610/67627072-333b1580-f890-11e9-9feb-bf507abc2724.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;OS&lt;/th&gt;
&lt;th&gt;Swift&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v1.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+&lt;/td&gt;
&lt;td&gt;1.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v1.2.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+&lt;/td&gt;
&lt;td&gt;1.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.0.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+, watchOS 2+&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+, watchOS 2+&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.2.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;2.0, 2.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.3.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;2.0, 2.1, 2.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.4.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;2.2, 2.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v3.0.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;3.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v3.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v3.2.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2, 5.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v4.0.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2, 5.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v4.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 3+, tvOS 9+, Mac Catalyst 13+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2, 5.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;KeychainAccess is available through &lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;. To install
it, simply add the following lines to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;KeychainAccess&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;KeychainAccess is available through &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;. To install
it, simply add the following line to your Cartfile:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;github "kishikawakatsumi/KeychainAccess"&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;KeychainAccess is also available through &lt;a href="https://github.com/apple/swift-package-manager/"&gt;Swift Package Manager&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h4&gt;
&lt;p&gt;Select &lt;code&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency...&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/40610/67627000-2833b580-f88f-11e9-89ef-18819b1a6c67.png"&gt;&lt;img src="https://user-images.githubusercontent.com/40610/67627000-2833b580-f88f-11e9-89ef-18819b1a6c67.png" width="800px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cli" class="anchor" aria-hidden="true" href="#cli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CLI&lt;/h4&gt;
&lt;p&gt;First, create &lt;code&gt;Package.swift&lt;/code&gt; that its package declaration includes:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;products&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;library&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ],
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/kishikawakatsumi/KeychainAccess.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    ],
    &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;KeychainAccess&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, type&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-to-manually-add-to-your-project" class="anchor" aria-hidden="true" href="#to-manually-add-to-your-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To manually add to your project&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;Lib/KeychainAccess.xcodeproj&lt;/code&gt; to your project&lt;/li&gt;
&lt;li&gt;Link &lt;code&gt;KeychainAccess.framework&lt;/code&gt; with your target&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;Copy Files Build Phase&lt;/code&gt; to include the framework to your application bundle&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href="https://github.com/kishikawakatsumi/KeychainAccess/tree/master/Examples/Example-iOS"&gt;iOS Example Project&lt;/a&gt; as reference.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/Installation.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/Installation.png" width="800px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;kishikawa katsumi, &lt;a href="mailto:kishikawakatsumi@mac.com"&gt;kishikawakatsumi@mac.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;KeychainAccess is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kishikawakatsumi</author><guid isPermaLink="false">https://github.com/kishikawakatsumi/KeychainAccess</guid><pubDate>Fri, 10 Jan 2020 00:12:00 GMT</pubDate></item><item><title>HeroTransitions/Hero #13 in Swift, Today</title><link>https://github.com/HeroTransitions/Hero</link><description>&lt;p&gt;&lt;i&gt;Elegant transition library for iOS &amp; tvOS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/dff8b6dffa1dd8feac1646f287ad2a84672cdc1c/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f343237643566322f5265736f75726365732f4865726f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/dff8b6dffa1dd8feac1646f287ad2a84672cdc1c/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f343237643566322f5265736f75726365732f4865726f2e737667" width="388" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/427d5f2/Resources/Hero.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hero&lt;/strong&gt; is a library for building iOS view controller transitions. It provides a declarative layer on top of the UIKit's cumbersome transition APIs—making custom transitions an easy task for developers.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/d3b5245fd8c28562b4ed49b00a5260b87c84f63f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d436f6d70617469626c652d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-Compatible-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/HeroTransitions/Hero" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/659010d73086f2969103f83e1b145b6179f9a9f8/68747470733a2f2f636f6465636f762e696f2f67682f4865726f5472616e736974696f6e732f4865726f2f6272616e63682f646576656c6f702f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/HeroTransitions/Hero/branch/develop/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/Hero" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf8389447aeff6e5c60eb9e980dc8c797e85dcec/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4865726f2e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/Hero.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lkzhao/Hero/blob/master/LICENSE?raw=true"&gt;&lt;img src="https://camo.githubusercontent.com/17e1f9f731e5bc33f745a0755b2c0f573a621920/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f4865726f2e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/Hero.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2acca656fb46139b261ec013b5dad205172fdcd4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f58636f64652d392e302532422d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/2acca656fb46139b261ec013b5dad205172fdcd4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f58636f64652d392e302532422d626c75652e737667" alt="Xcode 9.0+" data-canonical-src="https://img.shields.io/badge/Xcode-9.0%2B-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1d276aa371242346c77c3a5b8db34beaa2014722/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f694f532d382e302532422d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/1d276aa371242346c77c3a5b8db34beaa2014722/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f694f532d382e302532422d626c75652e737667" alt="iOS 8.0+" data-canonical-src="https://img.shields.io/badge/iOS-8.0%2B-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/988c4fe7435163e2c97239a8c6482771451ffa26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d342e302532422d6f72616e67652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/988c4fe7435163e2c97239a8c6482771451ffa26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d342e302532422d6f72616e67652e737667" alt="Swift 4.0+" data-canonical-src="https://img.shields.io/badge/Swift-4.0%2B-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lkzhao/Hero/blob/master/README.zh-cn.md"&gt;&lt;img src="https://camo.githubusercontent.com/c7bf3c5f6156fa70173bbc7ddee4cfae107e746f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545342542382541442545362539362538372d524541444d452d626c75652e7376673f7374796c653d666c6174" alt="中文 README" data-canonical-src="https://img.shields.io/badge/%E4%B8%AD%E6%96%87-README-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=NT5F7Y2MPV7RE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/abbdd7bf97ae7919db5962b255f40aded5189c4f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d626c75652e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Donate-PayPal-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ad3b44a1f8c9ad51ba120b6281b03335bd78bb22/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f66656174757265732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/ad3b44a1f8c9ad51ba120b6281b03335bd78bb22/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f66656174757265732e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/features.svg" style="max-width:100%;"&gt;&lt;/a&gt;      
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f5211ae92678aa22b6edf2d18e08b0dce63bcaa4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f6665617475726573322e737667"&gt;&lt;img src="https://camo.githubusercontent.com/f5211ae92678aa22b6edf2d18e08b0dce63bcaa4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f6665617475726573322e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/features2.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hero is similar to Keynote's &lt;strong&gt;Magic Move&lt;/strong&gt;. It checks the &lt;code&gt;heroID&lt;/code&gt; property on all source and destination views. Every matched view pair is then automatically transitioned from its old state to its new state.&lt;/p&gt;
&lt;p&gt;Hero can also construct animations for unmatched views. It is easy to define these animations via the &lt;code&gt;heroModifiers&lt;/code&gt; property. Hero will run these animations alongside the &lt;strong&gt;Magic Move&lt;/strong&gt; animations. All of these animations can be &lt;strong&gt;interactively controlled&lt;/strong&gt; by user gestures.&lt;/p&gt;
&lt;p&gt;At view controller level, Hero provides several template transitions that you can set through &lt;code&gt;heroModalAnimationType&lt;/code&gt;, &lt;code&gt;heroNavigationAnimationType&lt;/code&gt;, and &lt;code&gt;heroTabBarAnimationType&lt;/code&gt;. These can be used as the foundation of your custom transitions. Combine with &lt;code&gt;heroID&lt;/code&gt; &amp;amp; &lt;code&gt;heroModifiers&lt;/code&gt; to make your own unique transitions.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/737194a3442f67b2066bd1be40d0ced772c158a1/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/737194a3442f67b2066bd1be40d0ced772c158a1/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e732e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/defaultAnimations.svg" style="max-width:100%;"&gt;&lt;/a&gt;      
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d1829c3cbb5e7c49b109e458ef95ec9079650d69/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e73322e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d1829c3cbb5e7c49b109e458ef95ec9079650d69/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e73322e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/defaultAnimations2.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;By default, Hero provides &lt;strong&gt;dynamic duration&lt;/strong&gt; based on the &lt;a href="https://material.io/guidelines/motion/duration-easing.html" rel="nofollow"&gt;Material Design Motion Guide&lt;/a&gt;. Duration is automatically determined by changes to distance and size—saving you the hassle, while providing consistent and delightful animations.&lt;/p&gt;
&lt;p&gt;Hero doesn't make any assumptions about how the view is built or structured. It won't modify any of your views' states other than hiding them during the animation. This makes it work with &lt;strong&gt;Auto Layout&lt;/strong&gt;, &lt;strong&gt;programmatic layout&lt;/strong&gt;, &lt;strong&gt;UICollectionView&lt;/strong&gt; (without modifying its layout object), &lt;strong&gt;UITableView&lt;/strong&gt;, &lt;strong&gt;UINavigationController&lt;/strong&gt;, &lt;strong&gt;UITabBarController&lt;/strong&gt;, etc...&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example-gallery" class="anchor" aria-hidden="true" href="#example-gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Gallery&lt;/h2&gt;
&lt;p&gt;Checkout the &lt;a href="http://lkzhao.com/2016/12/28/hero.html" rel="nofollow"&gt;Example Gallery Blog Post&lt;/a&gt; for a general idea of what you can achieve with &lt;strong&gt;Hero&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage-example-1" class="anchor" aria-hidden="true" href="#usage-example-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage Example 1&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/22d05ffa3ebcdabc0e46885d905a4958313c7a46/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f73696d706c652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/22d05ffa3ebcdabc0e46885d905a4958313c7a46/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f73696d706c652e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/simple.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-1" class="anchor" aria-hidden="true" href="#view-controller-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 1&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;redView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ironMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
blackView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;batMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-2" class="anchor" aria-hidden="true" href="#view-controller-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 2&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;isEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
redView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ironMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
blackView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;batMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
whiteView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [.&lt;span class="pl-c1"&gt;translate&lt;/span&gt;(&lt;span class="pl-c1"&gt;y&lt;/span&gt;:&lt;span class="pl-c1"&gt;100&lt;/span&gt;)]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage-example-2" class="anchor" aria-hidden="true" href="#usage-example-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage Example 2&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c2589bdfe5341efcf64810cf7f10ac93d2670bd4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f616476616e6365642e737667"&gt;&lt;img src="https://camo.githubusercontent.com/c2589bdfe5341efcf64810cf7f10ac93d2670bd4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f616476616e6365642e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/advanced.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-1-1" class="anchor" aria-hidden="true" href="#view-controller-1-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 1&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;greyView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;skyWalker&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-2-1" class="anchor" aria-hidden="true" href="#view-controller-2-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 2&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;isEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
greyView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;skyWalker&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; collectionView is the parent view of all red cells&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;collectionView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [.&lt;span class="pl-smi"&gt;cascade&lt;/span&gt;]
&lt;span class="pl-k"&gt;for&lt;/span&gt; cell &lt;span class="pl-k"&gt;in&lt;/span&gt; redCells {
    cell.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [.&lt;span class="pl-smi"&gt;fade&lt;/span&gt;, .&lt;span class="pl-c1"&gt;scale&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can do these in the &lt;strong&gt;storyboard&lt;/strong&gt; too!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2d49bd077657da42c4e1fdad85b13817248a6e0b/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f617264566965772e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/2d49bd077657da42c4e1fdad85b13817248a6e0b/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f617264566965772e706e67" width="267px" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/master/Resources/storyboardView.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0851b58271877dc1ef5a8be2f3143e6713c75fa3/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f61726456696577436f6e74726f6c6c65722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0851b58271877dc1ef5a8be2f3143e6713c75fa3/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f61726456696577436f6e74726f6c6c65722e706e67" width="267px" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/master/Resources/storyboardViewController.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Add the following entry to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hero&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Don't forget to &lt;code&gt;import Hero&lt;/code&gt; in every file you'd like to use Hero.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Add the following entry to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="text"&gt;&lt;code&gt;github "HeroTransitions/Hero"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run &lt;code&gt;carthage update&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If this is your first time using Carthage in the project, you'll need to go through some additional steps as explained &lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;over at Carthage&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;To integrate using Apple's Swift package manager, add the following as a dependency to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/HeroTransitions/Hero.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.3.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then specify &lt;code&gt;"Hero"&lt;/code&gt; as a dependency of the Target in which you wish to use Hero.
Here's an example &lt;code&gt;PackageDescription&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:4.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;products&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;library&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ],
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/HeroTransitions/Hero.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.5.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    ],
    &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hero&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Drag the &lt;strong&gt;Sources&lt;/strong&gt; folder anywhere in your project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentations" class="anchor" aria-hidden="true" href="#documentations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentations&lt;/h2&gt;
&lt;p&gt;Checkout the &lt;strong&gt;&lt;a href="https://github.com/lkzhao/Hero/wiki/Usage-Guide"&gt;WIKI PAGES (Usage Guide)&lt;/a&gt;&lt;/strong&gt; for documentations.&lt;/p&gt;
&lt;p&gt;For more up-to-date ones, please see the header-doc. (use &lt;strong&gt;alt+click&lt;/strong&gt; in Xcode)
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/02c17d97708bc697e2f9ce4d6de9f674df21611f/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f686561646572446f632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/02c17d97708bc697e2f9ce4d6de9f674df21611f/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f686561646572446f632e706e67" width="521px" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/master/Resources/headerDoc.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-interactive-transition-tutorials" class="anchor" aria-hidden="true" href="#interactive-transition-tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interactive Transition Tutorials&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://lkzhao.com/2017/02/05/hero-interactive-transition.html" rel="nofollow"&gt;Interactive transitions with Hero (Part 1)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-not-able-to-use-hero-transition-even-when-selfheroisenabled-is-set-to-true" class="anchor" aria-hidden="true" href="#not-able-to-use-hero-transition-even-when-selfheroisenabled-is-set-to-true"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Not able to use Hero transition even when &lt;code&gt;self.hero.isEnabled&lt;/code&gt; is set to true&lt;/h3&gt;
&lt;p&gt;Make sure that you have also enabled &lt;code&gt;self.hero.isEnabled&lt;/code&gt; on the navigation controller if you are doing a push/pop inside the navigation controller.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-views-being-covered-by-another-matched-view-during-the-transition" class="anchor" aria-hidden="true" href="#views-being-covered-by-another-matched-view-during-the-transition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Views being covered by another matched view during the transition&lt;/h3&gt;
&lt;p&gt;Matched views use global coordinate space while unmatched views use local coordinate space by default. Local coordinate spaced views might be covered by other global coordinate spaced views. To solve this, use the &lt;code&gt;useGlobalCoordinateSpace&lt;/code&gt; modifier on the views being covered. Checkout &lt;a href="https://github.com/lkzhao/Hero/wiki/Coordinate-Space"&gt;Coordinate Space Wiki page&lt;/a&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-push-animation-is-shown-along-side-my-custom-animation" class="anchor" aria-hidden="true" href="#push-animation-is-shown-along-side-my-custom-animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Push animation is shown along side my custom animation&lt;/h3&gt;
&lt;p&gt;This is the default animation for navigation controller provided by Hero. To disable the push animation, set &lt;code&gt;self.hero.navigationAnimationType&lt;/code&gt; to &lt;code&gt;.fade&lt;/code&gt; or &lt;code&gt;.none&lt;/code&gt; on the navigation controller.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-use-a-different-default-animation-when-dismissing" class="anchor" aria-hidden="true" href="#how-do-i-use-a-different-default-animation-when-dismissing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I use a different default animation when dismissing&lt;/h3&gt;
&lt;p&gt;You can use the animation type &lt;code&gt;.selectBy(presenting:dismissing)&lt;/code&gt; to specify a different default animation for dismiss.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modalAnimationType&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;selectBy&lt;/span&gt;(&lt;span class="pl-c1"&gt;presenting&lt;/span&gt;:.&lt;span class="pl-smi"&gt;zoom&lt;/span&gt;, &lt;span class="pl-c1"&gt;dismissing&lt;/span&gt;:.&lt;span class="pl-smi"&gt;zoomOut&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;We welcome any contributions. Please read the &lt;a href="https://github.com/lkzhao/Hero/wiki/Contribution-Guide"&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>HeroTransitions</author><guid isPermaLink="false">https://github.com/HeroTransitions/Hero</guid><pubDate>Fri, 10 Jan 2020 00:13:00 GMT</pubDate></item><item><title>malcommac/SwiftDate #14 in Swift, Today</title><link>https://github.com/malcommac/SwiftDate</link><description>&lt;p&gt;&lt;i&gt;Parse, validate, manipulate, and display dates, time and timezones in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/SwiftDateArt.png"&gt;&lt;img src="Documentation/SwiftDateArt.png" width="476px" alt="SwiftDate" title="SwiftDate" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ba5989d6ecc75e5e78a5f0c0663c8ff0271356c1/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f5377696674446174652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/ba5989d6ecc75e5e78a5f0c0663c8ff0271356c1/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f5377696674446174652e737667" alt="" data-canonical-src="https://img.shields.io/cocoapods/v/SwiftDate.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4fc014c91ddc827055a42d243ca3a006fa3d3d73/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f5377696674446174652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/4fc014c91ddc827055a42d243ca3a006fa3d3d73/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f5377696674446174652e737667" alt="" data-canonical-src="https://img.shields.io/cocoapods/p/SwiftDate.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/339ebdb7c41df8a80b2ea1bbad5ff37363ba78c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f7665726167652d39302532352d677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/339ebdb7c41df8a80b2ea1bbad5ff37363ba78c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f7665726167652d39302532352d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/coverage-90%25-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/614097fce62d090b629f8a41358aa89551e72c87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f63617274686167652d636f6d70617469626c652d627269676874677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/614097fce62d090b629f8a41358aa89551e72c87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f63617274686167652d636f6d70617469626c652d627269676874677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/carthage-compatible-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://img.shields.io/travis/malcommac/SwiftDate.svg" rel="nofollow"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/malcommac/SwiftDate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/20f4cee44130a644482c0c0373f1f094733c5250/68747470733a2f2f7472617669732d63692e6f72672f6d616c636f6d6d61632f5377696674446174652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/malcommac/SwiftDate.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;★★ &lt;b&gt;Star me to follow the project! &lt;/b&gt; ★★&lt;br&gt;
Created and maintaned by &lt;b&gt;Daniele Margutti&lt;/b&gt; - &lt;a href="http://www.danielemargutti.com" rel="nofollow"&gt;www.danielemargutti.com&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;SwiftDate is the &lt;strong&gt;definitive toolchain to manipulate and display dates and time zones&lt;/strong&gt; on all Apple platform and even on Linux and Swift Server Side frameworks like Vapor or Kitura.&lt;/p&gt;
&lt;p&gt;Over &lt;a href="https://cocoapods.org/pods/SwiftDate" rel="nofollow"&gt;3M of downloads&lt;/a&gt; on CocoaPods&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features-highlights" class="anchor" aria-hidden="true" href="#features-highlights"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features Highlights&lt;/h3&gt;
&lt;p&gt;From simple date manipulation to complex business logic SwiftDate maybe the right choice for your next project.&lt;/p&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;Easy Date Parsing&lt;/strong&gt; (custom formats, iso8601, rss &amp;amp; many more)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;Easy Date Formatting&lt;/strong&gt; even with colloquial formatter and 140+ supported languages&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;Easy math operations with time units&lt;/strong&gt; (&lt;code&gt;2.hours + 5.minutes&lt;/code&gt;...)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;Intuitive components extraction&lt;/strong&gt; (&lt;code&gt;day, hour, nearestHour, weekdayNameShort&lt;/code&gt; etc.)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;Derivated dates generation&lt;/strong&gt; (&lt;code&gt;nextWeek, nextMonth, nextWeekday, tomorrow&lt;/code&gt;...)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Over &lt;strong&gt;20+ fine grained date comparison&lt;/strong&gt; functions (&lt;code&gt;isToday, isTomorrow, isSameWeek, isNextYear&lt;/code&gt;...)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Swift 4's &lt;strong&gt;Codable Support&lt;/strong&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;Random dates&lt;/strong&gt; generation&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;Fine grained date enumeration&lt;/strong&gt; functions&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;Time period&lt;/strong&gt; support&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;Convert TimeIntervals&lt;/strong&gt; to other units (&lt;code&gt;2.hours.toUnits(.minutes)&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and of course...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;IT'S TESTED!&lt;/strong&gt;. As 5.x the project has 90% of code coverage (want help us? write some unit tests and make a PR)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IT'S FULLY DOCUMENTED!&lt;/strong&gt;, &lt;a href="/Documentation/Index.md"&gt;both with a complete guide&lt;/a&gt; and with Jazzy!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WE LOVE PLAYGROUND!&lt;/strong&gt; &lt;a href="/Playgrounds/SwiftDate.playground"&gt;Check out&lt;/a&gt; our interative playground!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-start-with-swiftdate" class="anchor" aria-hidden="true" href="#start-with-swiftdate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start with SwiftDate&lt;/h2&gt;
&lt;p&gt;The entire library is fully documented both via XCode method inspector and a complete markdown documentation you can found below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;→ &lt;strong&gt;&lt;a href="/Documentation/Index.md"&gt;Full Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;→ &lt;strong&gt;&lt;a href="/Documentation/0.Informations.md"&gt;Requirements, Install, License &amp;amp; More&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;→ &lt;strong&gt;&lt;a href="/Documentation/10.Upgrading_SwiftDate4.md"&gt;Upgrading from SwiftDate 4&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-explore-swiftdate" class="anchor" aria-hidden="true" href="#explore-swiftdate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Explore SwiftDate&lt;/h3&gt;
&lt;p&gt;From simple date manipulation to complex business logic SwiftDate maybe the right choice for your next project.&lt;/p&gt;
&lt;p&gt;Let me show to you the main features of the library:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#1"&gt;Date Parsing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2"&gt;Date Manipulation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3"&gt;Date Comparsion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4"&gt;Date Creation with Region (Timezone, Calendar &amp;amp; Locale)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5"&gt;Derivated Dates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6"&gt;Components Extraction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#7"&gt;Switch between timezones/locale and calendars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#8"&gt;Date Formatting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#9"&gt;Relative Date Formatting (fully customizable!)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#10"&gt;Codable Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#11"&gt;Time Periods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a name="user-content-1"&gt;
&lt;h3&gt;&lt;a id="user-content-1-date-parsing" class="anchor" aria-hidden="true" href="#1-date-parsing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Date Parsing&lt;/h3&gt;
&lt;p&gt;SwiftDate can recognize all the major datetime formats  automatically (ISO8601, RSS, Alt RSS, .NET, SQL, HTTP...) and you can also provide your own formats.
Creating a new date has never been so easy!&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All default datetime formats (15+) are recognized automatically&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2010-05-20 15:30:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;toDate&lt;/span&gt;()
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can also provide your own format!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2010-05-20 15:30&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;toDate&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yyyy-MM-dd HH:mm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All ISO8601 variants are supported too with timezone parsing!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2017-09-17T11:59:29+02:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;toISODate&lt;/span&gt;()
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; RSS, Extended, HTTP, SQL, .NET and all the major variants are supported!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;19 Nov 2015 22:20:40 +0100&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;toRSS&lt;/span&gt;(&lt;span class="pl-c1"&gt;alt&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-2"&gt;
&lt;h3&gt;&lt;a id="user-content-2-date-manipulation" class="anchor" aria-hidden="true" href="#2-date-manipulation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Date Manipulation&lt;/h3&gt;
&lt;p&gt;Date can be manipulated by adding or removing time components using a natural language; time unit extraction is also easy and includes the support for timezone, calendar and locales!&lt;/p&gt;
&lt;p&gt;Manipulation can be done with standard math operators and between dates, time intervals, date components and relevant time units!&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Math operations support time units&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2010-05-20 15:30:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;toDate&lt;/span&gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;.&lt;span class="pl-smi"&gt;months&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;.&lt;span class="pl-smi"&gt;days&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Date&lt;/span&gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;.&lt;span class="pl-smi"&gt;hours&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date1 &lt;span class="pl-k"&gt;+&lt;/span&gt; [.&lt;span class="pl-smi"&gt;year&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, .&lt;span class="pl-smi"&gt;month&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;, .&lt;span class="pl-smi"&gt;hour&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date1 &lt;span class="pl-k"&gt;+&lt;/span&gt; date2
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; extract single time unit components from date manipulation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; over1Year &lt;span class="pl-k"&gt;=&lt;/span&gt; (date3 &lt;span class="pl-k"&gt;-&lt;/span&gt; date2).&lt;span class="pl-smi"&gt;year&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-3"&gt;
&lt;h3&gt;&lt;a id="user-content-3-date-comparison" class="anchor" aria-hidden="true" href="#3-date-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Date Comparison&lt;/h3&gt;
&lt;p&gt;SwiftDate include an extensive set of comparison functions; you can compare two dates by granularity, check if a date is an particular day, range and pratically any other comparison you ever need.&lt;/p&gt;
&lt;p&gt;Comparison is also available via standard math operators like (&lt;code&gt;&amp;gt;, &amp;gt;=, &amp;lt;, &amp;lt;=&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Standard math comparison is allowed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; dateB &lt;span class="pl-k"&gt;||&lt;/span&gt; dateC &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; dateB

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Complex comparisons includes granularity support&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;compare&lt;/span&gt;(&lt;span class="pl-c1"&gt;toDate&lt;/span&gt;: dateB, &lt;span class="pl-c1"&gt;granularity&lt;/span&gt;: .&lt;span class="pl-smi"&gt;hour&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;orderedSame&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;isAfterDate&lt;/span&gt;(dateB, &lt;span class="pl-c1"&gt;orEqual&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;granularity&lt;/span&gt;: .&lt;span class="pl-smi"&gt;month&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;gt; until month granularity&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateC.&lt;span class="pl-c1"&gt;isInRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;date&lt;/span&gt;: dateA, &lt;span class="pl-c1"&gt;and&lt;/span&gt;: dateB, &lt;span class="pl-c1"&gt;orEqual&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;granularity&lt;/span&gt;: .&lt;span class="pl-smi"&gt;day&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;gt; until day granularity&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;earlierDate&lt;/span&gt;(dateB) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; earlier date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;laterDate&lt;/span&gt;(dateB) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; later date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Check if date is close to another with a given precision&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;compareCloseTo&lt;/span&gt;(dateB, &lt;span class="pl-c1"&gt;precision&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-smi"&gt;hours&lt;/span&gt;.&lt;span class="pl-smi"&gt;timeInterval&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Compare for relevant events:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; .isToday, .isYesterday, .isTomorrow, .isWeekend, isNextWeek&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; .isSameDay, .isMorning, .isWeekday ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-c1"&gt;compare&lt;/span&gt;(.&lt;span class="pl-smi"&gt;isToday&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-c1"&gt;compare&lt;/span&gt;(.&lt;span class="pl-smi"&gt;isNight&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-c1"&gt;compare&lt;/span&gt;(.&lt;span class="pl-smi"&gt;isNextWeek&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-c1"&gt;compare&lt;/span&gt;(.&lt;span class="pl-smi"&gt;isThisMonth&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-c1"&gt;compare&lt;/span&gt;(.&lt;span class="pl-smi"&gt;startOfWeek&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-c1"&gt;compare&lt;/span&gt;(.&lt;span class="pl-smi"&gt;isNextYear&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...and MORE THAN 30 OTHER COMPARISONS BUILT IN&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Operation in arrays (oldestIn, newestIn, sortedByNewest, sortedByOldest...)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; DateInRegion.&lt;span class="pl-c1"&gt;oldestIn&lt;/span&gt;(&lt;span class="pl-c1"&gt;list&lt;/span&gt;: datesArray)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; DateInRegion.&lt;span class="pl-c1"&gt;sortedByNewest&lt;/span&gt;(&lt;span class="pl-c1"&gt;list&lt;/span&gt;: datesArray)&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-4"&gt;
&lt;h3&gt;&lt;a id="user-content-4-date-creation-with-region-timezone-calendar--locale" class="anchor" aria-hidden="true" href="#4-date-creation-with-region-timezone-calendar--locale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. Date Creation with Region (Timezone, Calendar &amp;amp; Locale)&lt;/h3&gt;
&lt;p&gt;You can create new dates from a string, time intervals or using date components. SwiftDate offers a wide set of functions to create and derivate your dates even with random generation!&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All dates includes timezone, calendar and locales!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create from string&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rome &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Region&lt;/span&gt;(&lt;span class="pl-c1"&gt;calendar&lt;/span&gt;: Calendars.&lt;span class="pl-smi"&gt;gregorian&lt;/span&gt;, &lt;span class="pl-c1"&gt;zone&lt;/span&gt;: Zones.&lt;span class="pl-smi"&gt;europeRome&lt;/span&gt;, &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: Locales.&lt;span class="pl-smi"&gt;italian&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; date1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateInRegion&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2010-01-01 00:00:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;region&lt;/span&gt;: rome)&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create date from intervals&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateInRegion&lt;/span&gt;(&lt;span class="pl-c1"&gt;seconds&lt;/span&gt;: &lt;span class="pl-c1"&gt;39940&lt;/span&gt;, &lt;span class="pl-c1"&gt;region&lt;/span&gt;: rome)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateInRegion&lt;/span&gt;(&lt;span class="pl-c1"&gt;milliseconds&lt;/span&gt;: &lt;span class="pl-c1"&gt;5000&lt;/span&gt;, &lt;span class="pl-c1"&gt;region&lt;/span&gt;: rome)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Date from components&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateInRegion&lt;/span&gt;(&lt;span class="pl-c1"&gt;components&lt;/span&gt;: {
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;year&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2001&lt;/span&gt;
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;month&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;9&lt;/span&gt;
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt;
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;hour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt;
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;minute&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
}, &lt;span class="pl-c1"&gt;region&lt;/span&gt;: rome)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateInRegion&lt;/span&gt;(&lt;span class="pl-c1"&gt;year&lt;/span&gt;: &lt;span class="pl-c1"&gt;2001&lt;/span&gt;, &lt;span class="pl-c1"&gt;month&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;day&lt;/span&gt;: &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;hour&lt;/span&gt;: &lt;span class="pl-c1"&gt;23&lt;/span&gt;, &lt;span class="pl-c1"&gt;minute&lt;/span&gt;: &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;second&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;region&lt;/span&gt;: rome)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Random date generation with/without bounds&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; DateInRegion.&lt;span class="pl-c1"&gt;randomDate&lt;/span&gt;(&lt;span class="pl-c1"&gt;region&lt;/span&gt;: rome)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; DateInRegion.&lt;span class="pl-c1"&gt;randomDate&lt;/span&gt;(&lt;span class="pl-c1"&gt;withinDaysBeforeToday&lt;/span&gt;: &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; DateInRegion.&lt;span class="pl-c1"&gt;randomDates&lt;/span&gt;(&lt;span class="pl-c1"&gt;count&lt;/span&gt;: &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;between&lt;/span&gt;: lowerLimitDate, &lt;span class="pl-c1"&gt;and&lt;/span&gt;: upperLimitDate, &lt;span class="pl-c1"&gt;region&lt;/span&gt;: rome)&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-5"&gt;
&lt;h3&gt;&lt;a id="user-content-5-derivated-dates" class="anchor" aria-hidden="true" href="#5-derivated-dates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. Derivated Dates&lt;/h3&gt;
&lt;p&gt;Date can be also generated starting from other dates; SwiftDate includes an extensive set of functions to generate.
Over 20 different derivated dates can be created easily using &lt;code&gt;dateAt()&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateInRegion&lt;/span&gt;().&lt;span class="pl-c1"&gt;dateAt&lt;/span&gt;(.&lt;span class="pl-smi"&gt;endOfDay&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; today at the end of the day&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Over 20 different relevant dates including .startOfDay,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; .endOfDay, .startOfWeek, .tomorrow, .nextWeekday, .nextMonth, .prevYear, .nearestMinute and many others!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;nextWeekday&lt;/span&gt;(.&lt;span class="pl-smi"&gt;friday&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the next friday after dateA&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (date.&lt;span class="pl-c1"&gt;dateAt&lt;/span&gt;(.&lt;span class="pl-smi"&gt;startOfMonth&lt;/span&gt;) &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;.&lt;span class="pl-smi"&gt;days&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;compare&lt;/span&gt;(.&lt;span class="pl-smi"&gt;endOfWeek&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Enumerate dates in range by providing your own custom&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; increment expressed in date components&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; from &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateInRegion&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2015-01-01 10:00:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;region&lt;/span&gt;: rome)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; to &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateInRegion&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2015-01-02 03:00:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;region&lt;/span&gt;: rome)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; increment2 &lt;span class="pl-k"&gt;=&lt;/span&gt; DateComponents.&lt;span class="pl-smi"&gt;create&lt;/span&gt; {
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;hour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;minute&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;second&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; generate dates in range by incrementing +1h,30m,10s each new date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dates &lt;span class="pl-k"&gt;=&lt;/span&gt; DateInRegion.&lt;span class="pl-c1"&gt;enumerateDates&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: fromDate2, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: toDate2, &lt;span class="pl-c1"&gt;increment&lt;/span&gt;: increment2)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Get all mondays in Jan 2019&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; mondaysInJan2019 &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;datesForWeekday&lt;/span&gt;(.&lt;span class="pl-smi"&gt;monday&lt;/span&gt;, &lt;span class="pl-c1"&gt;inMonth&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;ofYear&lt;/span&gt;: &lt;span class="pl-c1"&gt;2019&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Altering time components&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;dateBySet&lt;/span&gt;(&lt;span class="pl-c1"&gt;hour&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;min&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;secs&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Truncating a date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;dateTruncated&lt;/span&gt;(&lt;span class="pl-c1"&gt;at&lt;/span&gt;: [.&lt;span class="pl-smi"&gt;year&lt;/span&gt;,.&lt;span class="pl-smi"&gt;month&lt;/span&gt;,.&lt;span class="pl-smi"&gt;day&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; reset all time components keeping only date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Rounding a date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;dateRoundedAt&lt;/span&gt;(.&lt;span class="pl-c1"&gt;toMins&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;))
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;dateRoundedAt&lt;/span&gt;(.&lt;span class="pl-smi"&gt;toFloor30Mins&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Adding components&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;dateByAdding&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;,.&lt;span class="pl-smi"&gt;year&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Date at the start/end of any time component&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;dateAtEndOf&lt;/span&gt;(.&lt;span class="pl-smi"&gt;year&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 31 of Dec at 23:59:59&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;dateAtStartOf&lt;/span&gt;(.&lt;span class="pl-smi"&gt;day&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; at 00:00:00 of the same day&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dateA.&lt;span class="pl-c1"&gt;dateAtStartOf&lt;/span&gt;(.&lt;span class="pl-smi"&gt;month&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; at 00:00:00 of the first day of the month&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-6"&gt;
&lt;h3&gt;&lt;a id="user-content-6-components-extraction" class="anchor" aria-hidden="true" href="#6-components-extraction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6. Components Extraction&lt;/h3&gt;
&lt;p&gt;You can extract components directly from dates and it includes the right value expressed in date's region (the right timezone and set locale!).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create a date in a region, London but with the lcoale set to IT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; london &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Region&lt;/span&gt;(&lt;span class="pl-c1"&gt;calendar&lt;/span&gt;: .&lt;span class="pl-smi"&gt;gregorian&lt;/span&gt;, &lt;span class="pl-c1"&gt;zone&lt;/span&gt;: .&lt;span class="pl-smi"&gt;europeLondon&lt;/span&gt;, &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: .&lt;span class="pl-smi"&gt;italian&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateInRegion&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2018-02-05 23:14:45&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;format&lt;/span&gt;: dateFormat, &lt;span class="pl-c1"&gt;region&lt;/span&gt;: london)&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can extract any of the all available time units.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; VALUES ARE EXPRESSED IN THE REGION OF THE DATE (THE RIGHT TIMEZONE).&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (you can still get the UTC/absolute value by getting the inner's absoluteDate).&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-smi"&gt;year&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2018&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-smi"&gt;month&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-smi"&gt;monthNameDefault&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Febbraio' as the locale is the to IT!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-smi"&gt;firstDayOfWeek&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-smi"&gt;weekdayNameShort&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 'Lun' as locale is the to IT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... all components are supported: .year, .month, .day, .hour, .minute, .second,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; .monthName, .weekday, .nearestHour, .firstDayOfWeek. .quarter and so on...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-7"&gt;
&lt;h3&gt;&lt;a id="user-content-7-switch-between-timezoneslocale-and-calendars" class="anchor" aria-hidden="true" href="#7-switch-between-timezoneslocale-and-calendars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7. Switch between timezones/locale and calendars&lt;/h3&gt;
&lt;p&gt;You can easily convert any date to another region (aka another calendar, locale or timezone) easily!
New date contains all values expressed into the destination reason&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Conversion between timezones is easy using convertTo(region:) function&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rNY &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Region&lt;/span&gt;(&lt;span class="pl-c1"&gt;calendar&lt;/span&gt;: Calendars.&lt;span class="pl-smi"&gt;gregorian&lt;/span&gt;, &lt;span class="pl-c1"&gt;zone&lt;/span&gt;: Zones.&lt;span class="pl-smi"&gt;americaNewYork&lt;/span&gt;, &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: Locales.&lt;span class="pl-smi"&gt;english&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; rRome &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Region&lt;/span&gt;(&lt;span class="pl-c1"&gt;calendar&lt;/span&gt;: Calendars.&lt;span class="pl-smi"&gt;gregorian&lt;/span&gt;, &lt;span class="pl-c1"&gt;zone&lt;/span&gt;: Zones.&lt;span class="pl-smi"&gt;europeRome&lt;/span&gt;, &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: Locales.&lt;span class="pl-smi"&gt;italian&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; dateInNY &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2017-01-01 00:00:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;toDate&lt;/span&gt;(&lt;span class="pl-c1"&gt;region&lt;/span&gt;: rNY)
&lt;span class="pl-k"&gt;let&lt;/span&gt; dateInRome &lt;span class="pl-k"&gt;=&lt;/span&gt; dateInNY&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;convertTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;region&lt;/span&gt;: rRome)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(dateInRome.&lt;span class="pl-c1"&gt;toString&lt;/span&gt;()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "dom gen 01 06:00:00 +0100 2017\n"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can also convert single region's attributes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dateInIndia &lt;span class="pl-k"&gt;=&lt;/span&gt; dateInNY&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;convertTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;timezone&lt;/span&gt;: Zones.&lt;span class="pl-smi"&gt;indianChristmas&lt;/span&gt;, &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: Locales.&lt;span class="pl-smi"&gt;nepaliIndia&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;dateInIndia&lt;span class="pl-k"&gt;!&lt;/span&gt;.&lt;span class="pl-c1"&gt;toString&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "आइत जनवरी ०१ १२:००:०० +0700 २०१७\n"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-8"&gt;
&lt;h3&gt;&lt;a id="user-content-8-date-formatting" class="anchor" aria-hidden="true" href="#8-date-formatting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8. Date Formatting&lt;/h3&gt;
&lt;p&gt;Date formatting is easy, you can specify your own format, locale or use any of the provided ones.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Date Formatting&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; london &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Region&lt;/span&gt;(&lt;span class="pl-c1"&gt;calendar&lt;/span&gt;: .&lt;span class="pl-smi"&gt;gregorian&lt;/span&gt;, &lt;span class="pl-c1"&gt;zone&lt;/span&gt;: .&lt;span class="pl-smi"&gt;europeLondon&lt;/span&gt;, &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: .&lt;span class="pl-smi"&gt;english&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2017-07-22T18:27:02+02:00 in london region&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-c1"&gt;toDotNET&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; /Date(1500740822000+0200)/&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-c1"&gt;toISODate&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2017-07-22T18:27:02+02:00&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-c1"&gt;toFormat&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dd MMM yyyy 'at' HH:mm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "22 July 2017 at 18:27"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can also easily change locale when formatting a region&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; date.&lt;span class="pl-c1"&gt;toFormat&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dd MMM&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: .&lt;span class="pl-smi"&gt;italian&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "22 Luglio"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Time Interval Formatting as Countdown&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; interval&lt;span class="pl-k"&gt;:&lt;/span&gt; TimeInterval &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;2&lt;/span&gt;.&lt;span class="pl-smi"&gt;hours&lt;/span&gt;.&lt;span class="pl-smi"&gt;timeInterval&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (&lt;span class="pl-c1"&gt;34&lt;/span&gt;.&lt;span class="pl-smi"&gt;minutes&lt;/span&gt;.&lt;span class="pl-smi"&gt;timeInterval&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; (&lt;span class="pl-c1"&gt;5&lt;/span&gt;.&lt;span class="pl-smi"&gt;seconds&lt;/span&gt;.&lt;span class="pl-smi"&gt;timeInterval&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; interval.&lt;span class="pl-c1"&gt;toClock&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "2:34:05"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Time Interval Formatting by Components&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; interval.&lt;span class="pl-smi"&gt;toString&lt;/span&gt; {
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;maximumUnitCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;allowedUnits&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [.&lt;span class="pl-smi"&gt;day&lt;/span&gt;, .&lt;span class="pl-smi"&gt;hour&lt;/span&gt;, .&lt;span class="pl-smi"&gt;minute&lt;/span&gt;]
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;collapsesLargestUnit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
	&lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;unitsStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;abbreviated&lt;/span&gt;
} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "2h 34m"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-9"&gt;
&lt;h3&gt;&lt;a id="user-content-9-relative-date-formatting-fully-customizable" class="anchor" aria-hidden="true" href="#9-relative-date-formatting-fully-customizable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9. Relative Date Formatting (fully customizable!)&lt;/h3&gt;
&lt;p&gt;Relative formatting is all new in SwiftDate; it supports 120+ languages with two different styles (&lt;code&gt;.default, .twitter&lt;/code&gt;), 9 flavours (&lt;code&gt;.long, .longTime, .longConvenient, .short, .shortTime, .shortConvenient, .narrow, .tiny, .quantify&lt;/code&gt;) and all of them are customizable as you need.
The extensible format allows you to provide your own translations and rules to override the default behaviour.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Twitter Style&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;Date&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;.&lt;span class="pl-smi"&gt;minutes&lt;/span&gt;).&lt;span class="pl-c1"&gt;toRelative&lt;/span&gt;(&lt;span class="pl-c1"&gt;style&lt;/span&gt;: RelativeFormatter.&lt;span class="pl-c1"&gt;twitterStyle&lt;/span&gt;(), &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: Locales.&lt;span class="pl-smi"&gt;english&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "3m"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;Date&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt;.&lt;span class="pl-smi"&gt;minutes&lt;/span&gt;).&lt;span class="pl-c1"&gt;toRelative&lt;/span&gt;(&lt;span class="pl-c1"&gt;style&lt;/span&gt;: RelativeFormatter.&lt;span class="pl-c1"&gt;twitterStyle&lt;/span&gt;(), &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: Locales.&lt;span class="pl-smi"&gt;italian&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "6 min fa"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default Style&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (now2 &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;.&lt;span class="pl-smi"&gt;hours&lt;/span&gt;).&lt;span class="pl-c1"&gt;toRelative&lt;/span&gt;(&lt;span class="pl-c1"&gt;style&lt;/span&gt;: RelativeFormatter.&lt;span class="pl-c1"&gt;defaultStyle&lt;/span&gt;(), &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: Locales.&lt;span class="pl-smi"&gt;english&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "5 hours ago"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; y &lt;span class="pl-k"&gt;=&lt;/span&gt; (now2 &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;40&lt;/span&gt;.&lt;span class="pl-smi"&gt;minutes&lt;/span&gt;).&lt;span class="pl-c1"&gt;toRelative&lt;/span&gt;(&lt;span class="pl-c1"&gt;style&lt;/span&gt;: RelativeFormatter.&lt;span class="pl-c1"&gt;defaultStyle&lt;/span&gt;(), &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: Locales.&lt;span class="pl-smi"&gt;italian&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "45 minuti fa"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-10"&gt;
&lt;h3&gt;&lt;a id="user-content-10-codable-support" class="anchor" aria-hidden="true" href="#10-codable-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10. Codable Support&lt;/h3&gt;
&lt;p&gt;Both &lt;code&gt;DateInRegion&lt;/code&gt; and &lt;code&gt;Region&lt;/code&gt; fully support the new Swift's &lt;code&gt;Codable&lt;/code&gt; protocol. This mean you can safely encode/decode them:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Encoding/Decoding a Region&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; region &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Region&lt;/span&gt;(&lt;span class="pl-c1"&gt;calendar&lt;/span&gt;: Calendars.&lt;span class="pl-smi"&gt;gregorian&lt;/span&gt;, &lt;span class="pl-c1"&gt;zone&lt;/span&gt;: Zones.&lt;span class="pl-smi"&gt;europeOslo&lt;/span&gt;, &lt;span class="pl-c1"&gt;locale&lt;/span&gt;: Locales.&lt;span class="pl-smi"&gt;english&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; encodedJSON &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONEncoder&lt;/span&gt;().&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(region)
&lt;span class="pl-k"&gt;let&lt;/span&gt; decodedRegion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONDecoder&lt;/span&gt;().&lt;span class="pl-c1"&gt;decode&lt;/span&gt;(Region.&lt;span class="pl-k"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: encodedJSON)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Encoding/Decoding a DateInRegion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateInRegion&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2015-09-24T13:20:55&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;region&lt;/span&gt;: region)
&lt;span class="pl-k"&gt;let&lt;/span&gt; encodedDate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONEncoder&lt;/span&gt;().&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(date)
&lt;span class="pl-k"&gt;let&lt;/span&gt; decodedDate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONDecoder&lt;/span&gt;().&lt;span class="pl-c1"&gt;decode&lt;/span&gt;(DateInRegion.&lt;span class="pl-k"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: encodedDate)&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;a name="user-content-11"&gt;
&lt;h3&gt;&lt;a id="user-content-11-time-periods" class="anchor" aria-hidden="true" href="#11-time-periods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11. Time Periods&lt;/h3&gt;
&lt;/a&gt;&lt;p&gt;&lt;a name="user-content-11"&gt;SwiftDate integrates the great Matthew York's &lt;/a&gt;&lt;a href="https://github.com/MatthewYork/DateTools"&gt;DateTools&lt;/a&gt; module in order to support Time Periods.&lt;/p&gt;
&lt;p&gt;See &lt;a href="/Documentation/12.Timer_Periods.md"&gt;Time Periods&lt;/a&gt; section of the documentation.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>malcommac</author><guid isPermaLink="false">https://github.com/malcommac/SwiftDate</guid><pubDate>Fri, 10 Jan 2020 00:14:00 GMT</pubDate></item><item><title>socketio/socket.io-client-swift #15 in Swift, Today</title><link>https://github.com/socketio/socket.io-client-swift</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/socketio/socket.io-client-swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b398ff47842318df29866aefec31d8c1846ddf6f/68747470733a2f2f7472617669732d63692e6f72672f736f636b6574696f2f736f636b65742e696f2d636c69656e742d73776966742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/socketio/socket.io-client-swift.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-socketio-client-swift" class="anchor" aria-hidden="true" href="#socketio-client-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Socket.IO-Client-Swift&lt;/h1&gt;
&lt;p&gt;Socket.IO-client for iOS/OS X.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SocketIO&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; manager &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SocketManager&lt;/span&gt;(&lt;span class="pl-c1"&gt;socketURL&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://localhost:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;, &lt;span class="pl-c1"&gt;config&lt;/span&gt;: [.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;), .&lt;span class="pl-smi"&gt;compress&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; socket &lt;span class="pl-k"&gt;=&lt;/span&gt; manager.&lt;span class="pl-smi"&gt;defaultSocket&lt;/span&gt;

socket.&lt;span class="pl-c1"&gt;on&lt;/span&gt;(&lt;span class="pl-c1"&gt;clientEvent&lt;/span&gt;: .&lt;span class="pl-smi"&gt;connect&lt;/span&gt;) {data, ack &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;socket connected&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

socket.&lt;span class="pl-c1"&gt;on&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;currentAmount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {data, ack &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; cur &lt;span class="pl-k"&gt;=&lt;/span&gt; data[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as?&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; }
    
    socket.&lt;span class="pl-c1"&gt;emitWithAck&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;canUpdate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cur).&lt;span class="pl-c1"&gt;timingOut&lt;/span&gt;(&lt;span class="pl-c1"&gt;after&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {data &lt;span class="pl-k"&gt;in&lt;/span&gt;
        socket.&lt;span class="pl-c1"&gt;emit&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;update&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;amount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; cur &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;2.50&lt;/span&gt;])
    }

    ack.&lt;span class="pl-c1"&gt;with&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Got your currentAmount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

socket.&lt;span class="pl-c1"&gt;connect&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-objective-c-example" class="anchor" aria-hidden="true" href="#objective-c-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C Example&lt;/h2&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;@import SocketIO;

&lt;span class="pl-c1"&gt;NSURL&lt;/span&gt;* url = [[&lt;span class="pl-c1"&gt;NSURL&lt;/span&gt; &lt;span class="pl-c1"&gt;alloc&lt;/span&gt;] &lt;span class="pl-c1"&gt;initWithString:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;http://localhost:8080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
SocketManager* manager = [[SocketManager &lt;span class="pl-c1"&gt;alloc&lt;/span&gt;] &lt;span class="pl-c1"&gt;initWithSocketURL:&lt;/span&gt;url &lt;span class="pl-c1"&gt;config:&lt;/span&gt;@{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;log&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: @&lt;span class="pl-c1"&gt;YES&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;compress&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: @&lt;span class="pl-c1"&gt;YES&lt;/span&gt;}];
SocketIOClient* socket = manager.defaultSocket;

[socket &lt;span class="pl-c1"&gt;on:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;connect&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;callback:&lt;/span&gt;^(&lt;span class="pl-c1"&gt;NSArray&lt;/span&gt;* data, SocketAckEmitter* ack) {
    &lt;span class="pl-c1"&gt;NSLog&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;socket connected&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}];

[socket &lt;span class="pl-c1"&gt;on:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;currentAmount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;callback:&lt;/span&gt;^(&lt;span class="pl-c1"&gt;NSArray&lt;/span&gt;* data, SocketAckEmitter* ack) {
    &lt;span class="pl-k"&gt;double&lt;/span&gt; cur = [[data &lt;span class="pl-c1"&gt;objectAtIndex:&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-c1"&gt;floatValue&lt;/span&gt;];

    [[socket &lt;span class="pl-c1"&gt;emitWithAck:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;canUpdate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;with:&lt;/span&gt;@[@(cur)]] &lt;span class="pl-c1"&gt;timingOutAfter:&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;callback:&lt;/span&gt;^(&lt;span class="pl-c1"&gt;NSArray&lt;/span&gt;* data) {
        [socket &lt;span class="pl-c1"&gt;emit:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;update&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;with:&lt;/span&gt;@[@{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;amount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: @(cur + &lt;span class="pl-c1"&gt;2.50&lt;/span&gt;)}]];
    }];

    [ack &lt;span class="pl-c1"&gt;with:&lt;/span&gt;@[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Got your currentAmount, &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;dude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]];
}];

[socket &lt;span class="pl-c1"&gt;connect&lt;/span&gt;];
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Supports socket.io 2.0+ (For socket.io 1.0 use v9.x)&lt;/li&gt;
&lt;li&gt;Supports binary&lt;/li&gt;
&lt;li&gt;Supports Polling and WebSockets&lt;/li&gt;
&lt;li&gt;Supports TLS/SSL&lt;/li&gt;
&lt;li&gt;Can be used from Objective-C&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-faqs" class="anchor" aria-hidden="true" href="#faqs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQS&lt;/h2&gt;
&lt;p&gt;Checkout the &lt;a href="https://nuclearace.github.io/Socket.IO-Client-Swift/faq.html" rel="nofollow"&gt;FAQs&lt;/a&gt; for commonly asked questions.&lt;/p&gt;
&lt;p&gt;Checkout the &lt;a href="https://nuclearace.github.io/Socket.IO-Client-Swift/12to13.html" rel="nofollow"&gt;12to13&lt;/a&gt; guide for migrating to v13+ from v12 below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Requires Swift 4/5 and Xcode 10.x&lt;/p&gt;
&lt;p&gt;If you need Swift 2.3 use the &lt;a href="https://github.com/socketio/socket.io-client-swift/releases/tag/swift2.3"&gt;swift2.3 tag&lt;/a&gt; (Pre-Swift 4 support is no longer maintained)&lt;/p&gt;
&lt;p&gt;If you need Swift 3.x use v11.1.3.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;Add the project as a dependency to your Package.swift:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:4.2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;socket.io-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;products&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;executable&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;socket.io-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTargetName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    ],
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/socketio/socket.io-client-swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMinor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;15.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    ],
    &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTargetName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SocketIO&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./Path/To/Your/Sources&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then import &lt;code&gt;import SocketIO&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Add this line to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "socketio/socket.io-client-swift" ~&amp;gt; 15.2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run &lt;code&gt;carthage update --platform ios,macosx&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add the &lt;code&gt;Starscream&lt;/code&gt; and &lt;code&gt;SocketIO&lt;/code&gt; frameworks to your projects and follow the usual Carthage process.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods-100-or-later" class="anchor" aria-hidden="true" href="#cocoapods-100-or-later"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods 1.0.0 or later&lt;/h3&gt;
&lt;p&gt;Create &lt;code&gt;Podfile&lt;/code&gt; and add &lt;code&gt;pod 'Socket.IO-Client-Swift'&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YourApp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Socket.IO-Client-Swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 15.2.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install pods:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pod install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Import the module:&lt;/p&gt;
&lt;p&gt;Swift:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SocketIO&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Objective-C:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;@import SocketIO;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-docs" class="anchor" aria-hidden="true" href="#docs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://nuclearace.github.io/Socket.IO-Client-Swift/index.html" rel="nofollow"&gt;Docs&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nuclearace.github.io/Socket.IO-Client-Swift/Classes/SocketIOClient.html" rel="nofollow"&gt;Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nuclearace.github.io/Socket.IO-Client-Swift/Classes/SocketManager.html" rel="nofollow"&gt;Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nuclearace.github.io/Socket.IO-Client-Swift/Classes/SocketEngine.html" rel="nofollow"&gt;Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nuclearace.github.io/Socket.IO-Client-Swift/Enums/SocketIOClientOption.html" rel="nofollow"&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-detailed-example" class="anchor" aria-hidden="true" href="#detailed-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Detailed Example&lt;/h2&gt;
&lt;p&gt;A more detailed example can be found &lt;a href="https://github.com/nuclearace/socket.io-client-swift-example"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An example using the Swift Package Manager can be found &lt;a href="https://github.com/nuclearace/socket.io-client-swift-spm-example"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>socketio</author><guid isPermaLink="false">https://github.com/socketio/socket.io-client-swift</guid><pubDate>Fri, 10 Jan 2020 00:15:00 GMT</pubDate></item><item><title>nicklockwood/SwiftFormat #16 in Swift, Today</title><link>https://github.com/nicklockwood/SwiftFormat</link><description>&lt;p&gt;&lt;i&gt;A code library and command-line formatting tool for reformatting Swift code&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/nicklockwood/SwiftFormat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/56ef899b2093b42b4b65c3111907745f6728f0f7/68747470733a2f2f6170692e7472617669732d63692e6f72672f6e69636b6c6f636b776f6f642f5377696674466f726d61742e7376673f6272616e63683d6d6173746572" alt="Travis" data-canonical-src="https://api.travis-ci.org/nicklockwood/SwiftFormat.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/nicklockwood/SwiftFormat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd509d38c739b8db79bd616bec02a5a4dfed56a4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6e69636b6c6f636b776f6f642f5377696674466f726d61742f62616467652e737667" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/nicklockwood/SwiftFormat/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2445de343b7f6ef7aecab974c00333e05deaf42f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d342e322d7265642e7376673f7374796c653d666c6174" alt="Swift 4.2" data-canonical-src="https://img.shields.io/badge/swift-4.2-red.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c0e54a826d90da52e4ee70c63fef3ee61b3ffbd5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d6c69676874677265792e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-MIT-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://twitter.com/nicklockwood" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/67b1993f79fd1248818638921acef6800b606f8b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d406e69636b6c6f636b776f6f642d626c75652e737667" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-@nicklockwood-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-this"&gt;What?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-would-i-want-to-do-that"&gt;Why?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-install-it"&gt;How?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#command-line-tool"&gt;Command-line tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xcode-source-editor-extension"&gt;Xcode source editor extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xcode-build-phase"&gt;Xcode build phase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#via-applescript"&gt;Via Applescript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vscode-plugin"&gt;VSCode plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#git-pre-commit-hook"&gt;Git pre-commit hook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#on-ci-using-danger"&gt;On CI using Danger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#options"&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rules"&gt;Rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-version"&gt;Swift version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#config-file"&gt;Config file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#globs"&gt;Globs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linting"&gt;Linting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cache"&gt;Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#file-headers"&gt;File headers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#known-issues"&gt;Known issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-this" class="anchor" aria-hidden="true" href="#what-is-this"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is this?&lt;/h2&gt;
&lt;p&gt;SwiftFormat is a code library and command-line tool for reformatting swift code on macOS or Linux.&lt;/p&gt;
&lt;p&gt;SwiftFormat goes above and beyond what you might expect from a code formatter. In addition to adjusting white space it can insert or remove implicit &lt;code&gt;self&lt;/code&gt;, remove redundant parentheses, and correct many other deviations from the standard Swift idioms.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-would-i-want-to-do-that" class="anchor" aria-hidden="true" href="#why-would-i-want-to-do-that"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why would I want to do that?&lt;/h2&gt;
&lt;p&gt;Many programmers have a preferred style for formatting their code, and others seem entirely blind to the existing formatting conventions of a project (to the enragement of their colleagues).&lt;/p&gt;
&lt;p&gt;When collaborating on a project, it can be helpful to agree on a common coding style, but enforcing that manually is tedious and error-prone, and can lead to arguments if some participants take it more seriously than others.&lt;/p&gt;
&lt;p&gt;Having a tool to automatically enforce a common style eliminates those issues, and lets you focus on the behavior of the code, not its presentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-do-i-install-it" class="anchor" aria-hidden="true" href="#how-do-i-install-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I install it?&lt;/h2&gt;
&lt;p&gt;That depends - There are several ways you can use SwiftFormat:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;As a command-line tool that you run manually, or as part of some other toolchain&lt;/li&gt;
&lt;li&gt;As a Source Editor Extension that you can invoke via the Editor &amp;gt; SwiftFormat menu within Xcode&lt;/li&gt;
&lt;li&gt;As a build phase in your Xcode project, so that it runs every time you press Cmd-R or Cmd-B, or&lt;/li&gt;
&lt;li&gt;As a Git pre-commit hook, so that it runs on any files you've changed before you check them in&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-command-line-tool" class="anchor" aria-hidden="true" href="#command-line-tool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command-line tool&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; if you are using any of the following methods to install SwiftFormat on macOS 10.14.3 or earlier and are experiencing a crash on launch, you may need to install the &lt;a href="https://support.apple.com/kb/DL1998" rel="nofollow"&gt;Swift 5 Runtime Support for Command Line Tools&lt;/a&gt;. See &lt;a href="#known-issues"&gt;known issues&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installation:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can install the &lt;code&gt;swiftformat&lt;/code&gt; command-line tool on macOS using &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;. Assuming you already have Homebrew installed, just type:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew install swiftformat&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To update to the latest version once installed:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew upgrade swiftformat&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, you can install the tool on macOS or Linux by using &lt;a href="https://github.com/yonaskolb/Mint"&gt;Mint&lt;/a&gt; as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mint install nicklockwood/SwiftFormat&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then run it using:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mint run swiftformat&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or if you prefer, you can check out and build SwiftFormat manually on macOS or Linux as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://github.com/nicklockwood/SwiftFormat
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; SwiftFormat
$ swift build -c release&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are installing SwiftFormat into your project directory, you can use &lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; on macOS to automatically install the swiftformat binary along with your other pods - see the Xcode build phase instructions below for details.&lt;/p&gt;
&lt;p&gt;If you would prefer not to use a package manager, you can build the command-line app manually:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;open &lt;code&gt;SwiftFormat.xcodeproj&lt;/code&gt; and build the &lt;code&gt;SwiftFormat (Application)&lt;/code&gt; scheme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Drag the &lt;code&gt;swiftformat&lt;/code&gt; binary into &lt;code&gt;/usr/local/bin/&lt;/code&gt; (this is a hidden folder, but you can use the Finder's &lt;code&gt;Go &amp;gt; Go to Folder...&lt;/code&gt; menu to open it).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;code&gt;~/.bash_profile&lt;/code&gt; in your favorite text editor (this is a hidden file, but you can type &lt;code&gt;open ~/.bash_profile&lt;/code&gt; in the terminal to open it).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the following line to the file: &lt;code&gt;alias swiftformat="/usr/local/bin/swiftformat --indent 4"&lt;/code&gt; (you can omit the &lt;code&gt;--indent 4&lt;/code&gt;, or replace it with something else. Run &lt;code&gt;swiftformat --help&lt;/code&gt; to see the available options).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save the &lt;code&gt;.bash_profile&lt;/code&gt; file and run the command &lt;code&gt;source ~/.bash_profile&lt;/code&gt; for the changes to take effect.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you followed the installation instructions above, you can now just type&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swiftformat &lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(that's a space and then a period after the command) in the terminal to format any Swift files in the current directory. In place of the &lt;code&gt;.&lt;/code&gt;, you can instead type an absolute or relative path to the file or directory that you want to format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; &lt;code&gt;swiftformat .&lt;/code&gt; will overwrite any Swift files it finds in the current directory, and any subfolders therein. If you run it in your home directory, it will probably reformat every Swift file on your hard drive.&lt;/p&gt;
&lt;p&gt;To use it safely, do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Choose a file or directory that you want to apply the changes to.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure that you have committed all your changes to that code safely in git (or whatever source control system you use).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) In Terminal, type &lt;code&gt;swiftformat --inferoptions "/path/to/your/code/"&lt;/code&gt;. This will suggest a set of formatting options to use that match your existing project style (but you are free to ignore these and use the defaults, or your own settings if you prefer).&lt;/p&gt;
&lt;p&gt;The path can point to either a single Swift file or a directory of files. It can be either be absolute, or relative to the current directory. The &lt;code&gt;""&lt;/code&gt; quotes around the path are optional, but if the path contains spaces then you either need to use quotes, or escape each space with &lt;code&gt;\&lt;/code&gt;. You may include multiple paths separated by spaces.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Terminal, type &lt;code&gt;swiftformat "/path/to/your/code/"&lt;/code&gt;. The same rules apply as above with respect to paths, and multiple space-delimited paths are allowed.&lt;/p&gt;
&lt;p&gt;If you used &lt;code&gt;--inferoptions&lt;/code&gt; to generate a suggested set of options in step 3, you should copy and paste them into the command, either before or after the path(s) to your source files.&lt;/p&gt;
&lt;p&gt;If you have created a &lt;a href="#config-file"&gt;config file&lt;/a&gt;, you can specify its path using &lt;code&gt;--config "/path/to/your/config-file/"&lt;/code&gt;. Alternatively, if you name the file &lt;code&gt;.swiftformat&lt;/code&gt; and place it inside the project you are formatting, it will be picked up automatically.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Press enter to begin formatting. Once the formatting is complete, use your source control system to check the changes, and verify that no undesirable changes have been introduced. If they have, revert the changes, tweak the options and try again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) commit the changes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Following these instructions &lt;em&gt;should&lt;/em&gt; ensure that you avoid catastrophic data loss, but in the unlikely event that it wipes your hard drive, &lt;strong&gt;please note that I accept no responsibility&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using Standard Input/Output:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you prefer, you can use unix pipes to include SwiftFormat as part of a command chain. For example, this is an alternative way to format a file:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ cat /path/to/file.swift &lt;span class="pl-k"&gt;|&lt;/span&gt; swiftformat --output /path/to/file.swift&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Omitting the &lt;code&gt;--output /path/to/file.swift&lt;/code&gt; will print the formatted file to Standard Output (stdout). You can also use &lt;code&gt;&amp;gt;&lt;/code&gt; to specify the output path as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ cat /path/to/file.swift &lt;span class="pl-k"&gt;|&lt;/span&gt; swiftformat &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; /path/to/file.swift&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do not supply an input file, SwiftFormat will automatically take its input from Standard Input (stdin), but will time-out if no input is received immediately and display the help screen. To make it explicit, pass "stdin" as the input path:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ cat /path/to/file.swift &lt;span class="pl-k"&gt;|&lt;/span&gt; swiftformat stdin&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-xcode-source-editor-extension" class="anchor" aria-hidden="true" href="#xcode-source-editor-extension"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode source editor extension&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Installation:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Like the command-line tool, you can install the SwiftFormat for Xcode extension application via &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;. Assuming you already have Homebrew installed, type:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew cask install swiftformat-for-xcode&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will install SwiftFormat for Xcode in your Applications folder. Double-click the app to launch it, and then follow the on-screen instructions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The app should be correctly signed, but if you get a Gatekeeper warning when trying to open it you can bypass this by right-clicking (or control-clicking) the app and selecting &lt;code&gt;Open&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To update to the latest version once installed use:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew cask upgrade swiftformat-for-xcode&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, if you prefer not to use Homebrew, you'll find the latest version of the SwiftFormat for Xcode application inside the EditorExtension folder included in the SwiftFormat repository. Download and unpack the zip archive, then drag &lt;code&gt;SwiftFormat for Xcode.app&lt;/code&gt; into your &lt;code&gt;Applications&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Once you have launched the app and restarted Xcode, you'll find a SwiftFormat option under Xcode's Editor menu. You can use this to format either the current selection or the whole file.&lt;/p&gt;
&lt;p&gt;You can configure the formatting &lt;a href="#rules"&gt;rules&lt;/a&gt; and &lt;a href="#options"&gt;options&lt;/a&gt; using the SwiftFormat for Xcode host application. There is currently no way to override these per-project, however you can import and export different configurations using the File menu. You will need to do this again each time you switch projects.&lt;/p&gt;
&lt;p&gt;The format of the configuration file is described in the &lt;a href="#config-file"&gt;Config section&lt;/a&gt; below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; SwiftFormat for Xcode cannot automatically detect changes to an imported configuration file. If you update the &lt;code&gt;.swiftformat&lt;/code&gt; file for your project, you will need to manually re-import that file into SwiftFormat for Xcode in order for the Xcode source editor extension to use the new configuration.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-xcode-build-phase" class="anchor" aria-hidden="true" href="#xcode-build-phase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode build phase&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Adding this script will overwrite your source files as you work on them, which has the annoying side-effect of clearing the undo history. You may wish to add the script to your test target rather than your main target, so that it is invoked only when you run the unit tests, and not every time you build the app.&lt;/p&gt;
&lt;p&gt;Alternatively, you might want to consider running SwiftFormat in &lt;a href="#linting"&gt;lint&lt;/a&gt; mode as part of your normal build, and then running a formatting pass manually, or as part of a less-frequent build target (such as the tests).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-swift-package-manager" class="anchor" aria-hidden="true" href="#using-swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Swift Package Manager&lt;/h3&gt;
&lt;p&gt;To set up SwiftFormat as an Xcode build phase, do the following:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-1-create-a-buildtools-folder--packageswift" class="anchor" aria-hidden="true" href="#1-create-a-buildtools-folder--packageswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1) Create a BuildTools folder &amp;amp; Package.swift&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Create a folder called &lt;code&gt;BuildTools&lt;/code&gt; in the same folder as your xcodeproj file&lt;/li&gt;
&lt;li&gt;In this folder, create a file called &lt;code&gt;Package.swift&lt;/code&gt;, with the following contents:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BuildTools&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
	&lt;span class="pl-c1"&gt;platforms&lt;/span&gt;: [.&lt;span class="pl-c1"&gt;macOS&lt;/span&gt;(.&lt;span class="pl-smi"&gt;v10_11&lt;/span&gt;)],
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/nicklockwood/SwiftFormat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.41.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-2-add-a-build-phases-to-your-app-target" class="anchor" aria-hidden="true" href="#2-add-a-build-phases-to-your-app-target"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2) Add a Build phases to your app target&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Click on your project in the file list, choose your target under &lt;code&gt;TARGETS&lt;/code&gt;, click the &lt;code&gt;Build Phases&lt;/code&gt; tab&lt;/li&gt;
&lt;li&gt;Add a &lt;code&gt;New Run Script Phase&lt;/code&gt; by clicking the little plus icon in the top left&lt;/li&gt;
&lt;li&gt;Drag the new &lt;code&gt;Run Script&lt;/code&gt; phase &lt;strong&gt;above&lt;/strong&gt; the &lt;code&gt;Compile Sources&lt;/code&gt; phase, expand it and paste the following script:
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; BuildTools
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;swift package update #Uncomment this line temporarily to update the version used to the latest matching your BuildTools/Package.swift file&lt;/span&gt;
swift run -c release swiftformat &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$SRCROOT&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You may wish to check BuildTools/Package.swift into your source control so that the version used by your run-script phase is kept in version control. It is recommended to add the following to your .gitignore file: &lt;code&gt;BuildTools/.build&lt;/code&gt; and &lt;code&gt;BuildTools/.swiftpm&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-cocoapods" class="anchor" aria-hidden="true" href="#using-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Cocoapods&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-1-add-the-switfformat-cli-to-your-podfile" class="anchor" aria-hidden="true" href="#1-add-the-switfformat-cli-to-your-podfile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1) Add the SwitfFormat CLI to your Podfile&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;code&gt;swiftformat&lt;/code&gt; binary to your project directory via &lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt;, by adding the following line to your Podfile then running &lt;code&gt;pod install&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwiftFormat/CLI&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This will only install the pre-built command-line app, not the source code for the SwiftFormat framework.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-2-add-a-build-phase-to-your-app-target" class="anchor" aria-hidden="true" href="#2-add-a-build-phase-to-your-app-target"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2) Add a Build phase to your app target&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Click on your project in the file list, choose your target under &lt;code&gt;TARGETS&lt;/code&gt;, click the &lt;code&gt;Build Phases&lt;/code&gt; tab&lt;/li&gt;
&lt;li&gt;Add a &lt;code&gt;New Run Script Phase&lt;/code&gt; by clicking the little plus icon in the top left&lt;/li&gt;
&lt;li&gt;Drag the new &lt;code&gt;Run Script&lt;/code&gt; phase &lt;strong&gt;above&lt;/strong&gt; the &lt;code&gt;Compile Sources&lt;/code&gt; phase, expand it and paste the following script:
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;${PODS_ROOT}&lt;/span&gt;/SwiftFormat/CommandLineTool/swiftformat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$SRCROOT&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-alternative-locally-installed-swiftformat" class="anchor" aria-hidden="true" href="#alternative-locally-installed-swiftformat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternative: Locally installed swiftformat&lt;/h3&gt;
&lt;p&gt;Alternatively, you could use a locally installed swiftformat command-line tool instead by putting the following in your Run Script build phase:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; which swiftformat &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;/dev/null&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
  swiftformat &lt;span class="pl-c1"&gt;.&lt;/span&gt;
&lt;span class="pl-k"&gt;else&lt;/span&gt;
  &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;warning: SwiftFormat not installed, download from https://github.com/nicklockwood/SwiftFormat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is not recommended for shared projects however, as different team members using different versions of SwiftFormat may result in noise in the commit history as code gets reformatted inconsistently.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-via-applescript" class="anchor" aria-hidden="true" href="#via-applescript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Via AppleScript&lt;/h2&gt;
&lt;p&gt;To run SwiftFormat on the frontmost Xcode document (project or workspace) you can use the following AppleScript:&lt;/p&gt;
&lt;div class="highlight highlight-source-applescript"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;tell&lt;/span&gt; &lt;span class="pl-c1"&gt;application&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Xcode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;frontWindow&lt;/span&gt; &lt;span class="pl-k"&gt;to&lt;/span&gt; &lt;span class="pl-k"&gt;the&lt;/span&gt; &lt;span class="pl-k"&gt;first&lt;/span&gt; window
	&lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;myPath&lt;/span&gt; &lt;span class="pl-k"&gt;to&lt;/span&gt; path &lt;span class="pl-k"&gt;of&lt;/span&gt; document &lt;span class="pl-k"&gt;of&lt;/span&gt; frontWindow
	&lt;span class="pl-c1"&gt;do shell script&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cd &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; myPath &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;;cd ..; /usr/local/bin/swiftformat .&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end tell&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some Apps you can trigger this from are &lt;a href="https://folivora.ai" rel="nofollow"&gt;BetterTouchTool&lt;/a&gt;, &lt;a href="https://www.alfredapp.com" rel="nofollow"&gt;Alfred&lt;/a&gt; or &lt;a href="https://www.keyboardmaestro.com/main/" rel="nofollow"&gt;Keyboard Maestro&lt;/a&gt;. Another option is to define a QuickAction for Xcode via Automator and then assign a keyboard shortcut for it in the System Preferences.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-vscode-plugin" class="anchor" aria-hidden="true" href="#vscode-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VSCode plugin&lt;/h2&gt;
&lt;p&gt;If you prefer to use Microsoft's &lt;a href="https://code.visualstudio.com" rel="nofollow"&gt;VSCode&lt;/a&gt; editor for writing Swift, &lt;a href="https://github.com/vknabel"&gt;Valentin Knabel&lt;/a&gt; has created a &lt;a href="https://marketplace.visualstudio.com/items?itemName=vknabel.vscode-swiftformat" rel="nofollow"&gt;VSCode plugin&lt;/a&gt; for SwiftFormat.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-git-pre-commit-hook" class="anchor" aria-hidden="true" href="#git-pre-commit-hook"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git pre-commit hook&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Follow the instructions for installing the SwiftFormat command-line tool.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit or create a &lt;code&gt;.git/hooks/pre-commit&lt;/code&gt; file in your project folder. The .git folder is hidden but should already exist if you are using Git with your project, so open in with the terminal, or the Finder's &lt;code&gt;Go &amp;gt; Go to Folder...&lt;/code&gt; menu.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the following line in the pre-commit file (unlike the Xcode build phase approach, this uses your locally installed version of SwiftFormat, not a separate copy in your project repository)&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#!&lt;/span&gt;/bin/bash&lt;/span&gt;
git diff --diff-filter=d --staged --name-only &lt;span class="pl-k"&gt;|&lt;/span&gt; grep -e &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\(.*\).swift$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;read&lt;/span&gt; line&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  swiftformat &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;${line}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt;
  git add &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$line&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;done&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;enable the hook by typing &lt;code&gt;chmod +x .git/hooks/pre-commit&lt;/code&gt; in the terminal&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The pre-commit hook will now run whenever you run &lt;code&gt;git commit&lt;/code&gt;. Running &lt;code&gt;git commit --no-verify&lt;/code&gt; will skip the pre-commit hook.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you are using Git via a GUI client such as &lt;a href="https://www.git-tower.com" rel="nofollow"&gt;Tower&lt;/a&gt;, &lt;a href="https://www.git-tower.com/help/mac/faq-and-tips/faq/hook-scripts" rel="nofollow"&gt;additional steps&lt;/a&gt; may be needed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE (2):&lt;/strong&gt; Unlike the Xcode build phase approach, git pre-commit hook won't be checked in to source control, and there's no way to guarantee that all users of the project are using the same version of SwiftFormat. For a collaborative project, you might want to consider a &lt;em&gt;post&lt;/em&gt;-commit hook instead, which would run on your continuous integration server.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-on-ci-using-danger" class="anchor" aria-hidden="true" href="#on-ci-using-danger"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;On CI using Danger&lt;/h2&gt;
&lt;p&gt;To setup SwiftFormat to be used by your continuous integration system using &lt;a href="http://danger.systems/ruby/" rel="nofollow"&gt;Danger&lt;/a&gt;, do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Follow the &lt;a href="http://danger.systems/guides/getting_started.html" rel="nofollow"&gt;&lt;code&gt;instructions&lt;/code&gt;&lt;/a&gt; to setup Danger.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;a href="https://github.com/garriguv/danger-ruby-swiftformat"&gt;&lt;code&gt;danger-swiftformat&lt;/code&gt;&lt;/a&gt; plugin to your &lt;code&gt;Gemfile&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the following to your &lt;code&gt;Dangerfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;swiftformat.binary_path &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/swiftformat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; optional&lt;/span&gt;
swiftformat.additional_args &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--indent tab --self insert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; optional&lt;/span&gt;
swiftformat.check_format(&lt;span class="pl-c1"&gt;fail_on_error:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; It is recommended to add the &lt;code&gt;swiftformat&lt;/code&gt; binary to your project directory to ensure the same version is used each time (see the &lt;a href="#xcode-build-phase"&gt;Xcode build phase&lt;/a&gt; instructions above).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;SwiftFormat's configuration is split between &lt;strong&gt;rules&lt;/strong&gt; and &lt;strong&gt;options&lt;/strong&gt;. Rules are functions in the SwiftFormat library that apply changes to the code. Options are settings that control the behavior of the rules.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-options" class="anchor" aria-hidden="true" href="#options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Options&lt;/h2&gt;
&lt;p&gt;The options available in SwiftFormat can be displayed using the &lt;code&gt;--options&lt;/code&gt; command-line argument. The default value for each option is indicated in the help text.&lt;/p&gt;
&lt;p&gt;Rules are configured by adding &lt;code&gt;--[option_name] [value]&lt;/code&gt; to your command-line arguments, or by creating a &lt;code&gt;.swiftformat&lt;/code&gt; &lt;a href="#config-file"&gt;config file&lt;/a&gt; and placing it in your project directory.&lt;/p&gt;
&lt;p&gt;A given option may affect multiple rules. Use &lt;code&gt;--ruleinfo [rule_name]&lt;/code&gt; command for details about which options affect a given rule, or see the &lt;a href="https://github.com/nicklockwood/SwiftFormat/blob/master/Rules.md"&gt;Rules.md&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rules" class="anchor" aria-hidden="true" href="#rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules&lt;/h2&gt;
&lt;p&gt;SwiftFormat includes over 50 rules, and new ones are added all the time. An up-to-date list can be found in &lt;a href="https://github.com/nicklockwood/SwiftFormat/blob/master/Rules.md"&gt;Rules.md&lt;/a&gt; along with documentation for how they are used.&lt;/p&gt;
&lt;p&gt;The list of available rules can be displayed within the command-line app using the &lt;code&gt;--rules&lt;/code&gt; argument. Rules can be either enabled or disabled. Most are enabled by default. Disabled rules are marked with "(disabled)" when displayed using &lt;code&gt;--rules&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can use the &lt;code&gt;--ruleinfo [rule_name]&lt;/code&gt; command to get information about a specific rule. Pass a comma-delimited list of rule names to get information for multiple rules at once, or use &lt;code&gt;--ruleinfo&lt;/code&gt; with no argument for info on all rules.&lt;/p&gt;
&lt;p&gt;You can disable rules individually using &lt;code&gt;--disable&lt;/code&gt; followed by a list of one or more comma-delimited rule names, or enable opt-in rules using &lt;code&gt;--enable&lt;/code&gt; followed by the rule names:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;--disable redundantSelf,trailingClosures
--enable isEmpty&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you prefer, you can place your enabled/disabled rules on separate lines instead of using commas:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;--disable indent
--disable linebreaks
--disable redundantSelf&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid automatically opting-in to new rules when SwiftFormat is updated, you can use the&lt;code&gt;--rules&lt;/code&gt; argument to &lt;em&gt;only&lt;/em&gt; enable the rules you specify:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;--rules indent,linebreaks&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To see exactly which rules were applied to a given file, you can use the &lt;code&gt;--verbose&lt;/code&gt; command-line option to force SwiftFormat to print a more detailed log as it applies the formatting. &lt;strong&gt;NOTE:&lt;/strong&gt; running in verbose mode is slower than the default mode.&lt;/p&gt;
&lt;p&gt;You can disable rules for specific files or code ranges by using &lt;code&gt;swiftformat:&lt;/code&gt; directives in comments inside your Swift files. To temporarily disable one or more rules inside a source file, use:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftformat:disable &amp;lt;rule1&amp;gt; [&amp;lt;rule2&amp;gt; [rule&amp;lt;3&amp;gt; ...]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To enable the rule(s) again, use:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftformat:enable &amp;lt;rule1&amp;gt; [&amp;lt;rule2&amp;gt; [rule&amp;lt;3&amp;gt; ...]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To disable all rules use:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftformat:disable all&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And to enable them all again, use:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftformat:enable all&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To temporarily prevent one or more rules being applied to just the next line, use:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftformat:disable:next &amp;lt;rule1&amp;gt; [&amp;lt;rule2&amp;gt; [rule&amp;lt;3&amp;gt; ...]]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; bar &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; rule(s) will be disabled for this line&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bar &lt;span class="pl-k"&gt;=&lt;/span&gt; baz &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; rule(s) will be re-enabled for this line&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is no need to manually re-enable a rule after using the &lt;code&gt;next&lt;/code&gt; directive.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;code&gt;swiftformat:enable&lt;/code&gt; directives only serves to counter a previous &lt;code&gt;swiftformat:disable&lt;/code&gt; directive in the same file. It is not possible to use &lt;code&gt;swiftformat:enable&lt;/code&gt; to enable a rule that was not already enabled when formatting started.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-swift-version" class="anchor" aria-hidden="true" href="#swift-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift version&lt;/h2&gt;
&lt;p&gt;Most SwiftFormat rules are version-agnostic, but some are applicable only to newer Swift versions. These rules will be disabled automatically if the Swift version is not specified, so to make sure that the full functionality is available you should specify the version of Swift that is used by your project.&lt;/p&gt;
&lt;p&gt;You can specify the Swift version in one of two ways:&lt;/p&gt;
&lt;p&gt;The preferred option is to add a &lt;code&gt;.swift-version&lt;/code&gt; file to your project directory. This is a text file that should contain the minimum Swift version supported by your project, and is a standard already used by other tools.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;.swift-version&lt;/code&gt; file applies hierarchically; If you have submodules in your project that use a different Swift version, you can add separate &lt;code&gt;.swift-version&lt;/code&gt; files to those directories.&lt;/p&gt;
&lt;p&gt;The other option to specify the Swift version using the &lt;code&gt;--swiftversion&lt;/code&gt; command line argument. Note that this will be overridden by any &lt;code&gt;.swift-version&lt;/code&gt; files encountered while processing.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-config-file" class="anchor" aria-hidden="true" href="#config-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Config file&lt;/h2&gt;
&lt;p&gt;Although it is possible to configure SwiftFormat directly by using the command-line &lt;a href="#options"&gt;options&lt;/a&gt; and &lt;a href="#rules"&gt;rules&lt;/a&gt; detailed above, it is sometimes more convenient to create a configuration file, which can be added to your project and shared with other developers.&lt;/p&gt;
&lt;p&gt;A SwiftFormat configuration file consists of one or more command-line options, split onto separate lines, e.g:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--allman true
--indent tabs
--disable elseOnSameLine,semicolons
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While formatting, SwiftFormat will automatically check inside each subdirectory for the presence of a &lt;code&gt;.swiftformat&lt;/code&gt; file and will apply any options that it finds there to the files in that directory.&lt;/p&gt;
&lt;p&gt;This allows you to override certain rules or formatting options just for a particular directory of files. You can also specify excluded files relative to that directory using &lt;code&gt;--exclude&lt;/code&gt;, which may be more convenient than specifying them at the top-level:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--exclude Pods,Generated
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;--exclude&lt;/code&gt; option takes a comma-delimited list of file or directory paths to exclude from formatting. Excluded paths are relative to the config file containing the &lt;code&gt;--exclude&lt;/code&gt; command. The excluded paths can include wildcards, specified using Unix "Glob" syntax, as &lt;a href="#globs"&gt;documented below&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Config files named ".swiftformat" will be processed automatically, however you can select an additional configuration file to use for formatting using the &lt;code&gt;--config "path/to/config/file"&lt;/code&gt; command-line argument. A configuration file selected using &lt;code&gt;--config&lt;/code&gt; does not need to be named ".swiftformat", and can be located outside of the project directory.&lt;/p&gt;
&lt;p&gt;The config file format is designed to be edited by hand. You may include blank lines for readability, and can also add comments using a hash prefix (#), e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# format options
--allman true
--indent tabs # tabs FTW!

# file options
--exclude Pods

# rules
--disable elseOnSameLine,semicolons
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you would prefer not to edit the configuration file by hand, you can use the &lt;a href="#xcode-source-editor-extension"&gt;SwiftFormat for Xcode&lt;/a&gt; app to edit the configuration and export a configuration file. You can also use the swiftformat command-line-tool's &lt;code&gt;--inferoptions&lt;/code&gt; command to generate a config file from your existing project, like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; /path/to/project
$ swiftformat --inferoptions &lt;span class="pl-c1"&gt;.&lt;/span&gt; --output .swiftformat&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-globs" class="anchor" aria-hidden="true" href="#globs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Globs&lt;/h2&gt;
&lt;p&gt;When excluding files from formatting using the &lt;code&gt;--exclude&lt;/code&gt; option, you may wish to make use of wildcard paths (aka "Globs") to match all files that match a particular naming convention without having to manually list them all.&lt;/p&gt;
&lt;p&gt;SwiftFormat's glob syntax is based on Ruby's implementation, which varies slightly from the Unix standard. The following patterns are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt; - A single star matches zero or more characters in a filename, but &lt;em&gt;not&lt;/em&gt; a &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;**&lt;/code&gt; - A double star will match anything, including one or more &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;?&lt;/code&gt; - A question mark will match any single character except &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[abc]&lt;/code&gt; - Matches any single character inside the brackets.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[a-z]&lt;/code&gt; - Matches a single character in the specified range in the brackets.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{foo,bar}&lt;/code&gt; - Matches any one of the comma-delimited strings inside the braces.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;foo.swift&lt;/code&gt; - Matches the file "foo.swift" in the same directory as the config file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;*.swift&lt;/code&gt; - Matches any swift file in the same directory as the config file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;foo/bar.swift&lt;/code&gt; - Matches the file "bar.swift" in the directory "foo".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;**/foo.swift&lt;/code&gt; - Matches any file named "foo.swift" in the project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;**/*.swift&lt;/code&gt; - Matches any swift file in the project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;**/Generated&lt;/code&gt; - Matches any folder called &lt;code&gt;Generated&lt;/code&gt; in the project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;**/*_generated.swift&lt;/code&gt; - Matches any Swift file with the suffix "_generated" in the project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-linting" class="anchor" aria-hidden="true" href="#linting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linting&lt;/h2&gt;
&lt;p&gt;SwiftFormat is primarily designed as a formatter rather than a linter, i.e. it is designed to fix your code rather than tell you what's wrong with it. However, sometimes it can be useful to verify that code has been formatted in a context where it is not desirable to actually change it.&lt;/p&gt;
&lt;p&gt;A typical example would be as part of a CI (Continuous Integration) process, where you may wish to have an automated script that checks committed code for style violations. While you can use a separate tool such as &lt;a href="https://github.com/realm/SwiftLint"&gt;SwiftLint&lt;/a&gt; for this, it makes sense to be able to validate the formatting against the exact same rules as you are using to apply it.&lt;/p&gt;
&lt;p&gt;In order to run SwiftFormat as a linter, you can use the &lt;code&gt;--lint&lt;/code&gt; command-line option:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swiftformat --lint path/to/project&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This runs the same rules as format mode, and all the same configuration options apply, however no files will be modified. Instead, SwiftFormat will format each file in memory and then compare the result against the input and report the lines that required changes.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;--lint&lt;/code&gt; option is similar to &lt;code&gt;--dryrun&lt;/code&gt;, but &lt;code&gt;--lint&lt;/code&gt; returns warnings for every line that required changes, and will return a nonzero error code if any changes are detected, which is useful if you want it to fail a build step on your CI server.&lt;/p&gt;
&lt;p&gt;If you would prefer &lt;code&gt;--lint&lt;/code&gt; not to fail your build, you can use the &lt;code&gt;--lenient&lt;/code&gt; option to force SwiftFormat to return success in &lt;code&gt;--lint&lt;/code&gt; mode even when formatting issues were detected.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swiftformat --lint --lenient path/to/project&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, &lt;code&gt;--lint&lt;/code&gt; will only report lines that require formatting, but you can use the additional &lt;code&gt;--verbose&lt;/code&gt; flag to display additional info about which files were checked, even if there were no changes needed.&lt;/p&gt;
&lt;p&gt;If you would prefer not to see a warning for each and every formatting change, you can use the &lt;code&gt;--quiet&lt;/code&gt; flag to suppress all output except errors.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cache" class="anchor" aria-hidden="true" href="#cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cache&lt;/h2&gt;
&lt;p&gt;SwiftFormat uses a cache file to avoid reformatting files that haven't changed. For a large project, this can significantly reduce processing time.&lt;/p&gt;
&lt;p&gt;By default, the cache is stored in &lt;code&gt;~/Library/Caches/com.charcoaldesign.swiftformat&lt;/code&gt; on macOS, or &lt;code&gt;/var/tmp/com.charcoaldesign.swiftformat&lt;/code&gt; on Linux. Use the command-line option &lt;code&gt;--cache ignore&lt;/code&gt; to ignore the cached version and re-apply formatting to all files. Alternatively, you can use &lt;code&gt;--cache clear&lt;/code&gt; to delete the cache (or you can just manually delete the cache file).&lt;/p&gt;
&lt;p&gt;The cache is shared between all projects. The file is fairly small, as it only stores the path and size for each file, not the contents. If you do start experiencing slowdown due to the cache growing too large, you might want to consider using a separate cache file for each project.&lt;/p&gt;
&lt;p&gt;You can specify a custom cache file location by passing a path as the &lt;code&gt;--cache&lt;/code&gt; option value. For example, you might want to store the cache file inside your project directory. It is fine to check in the cache file if you want to share it between different users of your project, as the paths stored in the cache are relative to the location of the formatted files.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-file-headers" class="anchor" aria-hidden="true" href="#file-headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;File headers&lt;/h2&gt;
&lt;p&gt;SwiftFormat can be configured to strip or replace the header comments in every file with a template. The "header comment" is defined as a comment block that begins on the first nonblank line in the file, and is followed by at least one blank line. This may consist of a single comment body, or multiple comments on consecutive lines:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This is a header comment&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This is a regular comment&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;bar&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The header template is a string that you provide using the &lt;code&gt;--header&lt;/code&gt; command-line option. Passing a value of &lt;code&gt;ignore&lt;/code&gt; (the default) will leave the header comments unmodified. Passing &lt;code&gt;strip&lt;/code&gt; or an empty string &lt;code&gt;""&lt;/code&gt; will remove them. If you wish to provide a custom header template, the format is as follows:&lt;/p&gt;
&lt;p&gt;For a single-line template: &lt;code&gt;--header "Copyright (c) 2017 Foobar Industries"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For a multiline comment, mark linebreaks with &lt;code&gt;\n&lt;/code&gt;: &lt;code&gt;--header "First line\nSecond line"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can optionally include Swift comment markup in the template if you wish: &lt;code&gt;--header "/*--- Header comment ---*/"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you do not include comment markup, each line in the template will be prepended with &lt;code&gt;//&lt;/code&gt; and a single space.&lt;/p&gt;
&lt;p&gt;It is common practice to include the file name, creation date and/or the current year in a comment header copyright notice. To do that, you can use the following placeholders:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{file}&lt;/code&gt; - the name of the file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{year}&lt;/code&gt; - the current year&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{created}&lt;/code&gt; - the date on which the file was created&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{created.year}&lt;/code&gt; - the year in which the file was created&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, a header template of:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;--header &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{file}\nCopyright (c) {year} Foobar Industries\nCreated by John Smith on {created}.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Will be formatted as:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SomeFile.swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Copyright (c) 2019 Foobar Industries&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Created by John Smith on 01/02/2016.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; the &lt;code&gt;{year}&lt;/code&gt; value and &lt;code&gt;{created}&lt;/code&gt; date format are determined from the current locale and timezone of the machine running the script.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Q. How is this different from SwiftLint?&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. SwiftLint is primarily designed to find and report code smells and style violations in your code. SwiftFormat is designed to fix them. While SwiftLint can autocorrect some issues, and SwiftFormat has some support for &lt;a href="#linting"&gt;linting&lt;/a&gt;, their primary functions are different.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Q. Can SwiftFormat and SwiftLint be used together?&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. Absolutely! The style rules encouraged by both tools are quite similar, and SwiftFormat even fixes some style violations that SwiftLint warns about but can't currently autocorrect.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Q. What platforms does SwiftFormat support?&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. SwiftFormat works on macOS 10.12 (Sierra) and above, and also runs on Ubuntu Linux.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Q. What versions of Swift are supported?&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. The SwiftFormat framework and command-line tool can be compiled using Swift 4.0 and above, and can format programs written in Swift 3.x, 4.x or 5. Swift 2.x is no longer actively supported. If you are still using Swift 2.x, and find that SwiftFormat breaks your code, the best solution is probably to revert to an earlier SwiftFormat release, or enable only a small subset of rules.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Q. SwiftFormat made changes I didn't want it to. How can I find out which rules to disable?&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. If you run SwiftFormat using the &lt;code&gt;--verbose&lt;/code&gt; option, it will tell you which rules were applied to each file. You can then selectively disable certain rules using the &lt;code&gt;--disable&lt;/code&gt; argument (see below).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Q. How can I modify the formatting rules?&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. Many configuration options are exposed in the command-line interface or &lt;code&gt;.swiftformat&lt;/code&gt; configuration file. You can either set these manually, or use the &lt;code&gt;--inferoptions&lt;/code&gt; argument to automatically generate the configuration from your existing project.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If there is a rule that you don't like, and which cannot be configured to your liking via the command-line options, you can disable one or more rules by using the &lt;code&gt;--disable&lt;/code&gt; argument, followed by the name of the rules, separated by commas. You can display a list of all supported rules using the &lt;code&gt;--rules&lt;/code&gt; argument, and their behaviors are documented above this section in the README.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are using the Xcode source editor extension, rules and options can be configured using the &lt;a href="#xcode-source-editor-extension"&gt;SwiftFormat for Xcode&lt;/a&gt; host application. Unfortunately, due to limitation of the Extensions API, there is no way to configure these on a per-project basis.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If the options you want aren't exposed, and disabling the rule doesn't solve the problem, the rules are implemented in the file &lt;code&gt;Rules.swift&lt;/code&gt;, so you can modify them and build a new version of the command-line tool. If you think your changes might be generally useful, make a pull request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Q. I don't want to be surprised by new rules added when I upgrade SwiftFormat. How can I prevent this?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. You can use the &lt;code&gt;--rules&lt;/code&gt; argument to specify an exclusive list of rules to run. If new rules are added, they won't be enabled if you have specified a &lt;code&gt;--rules&lt;/code&gt; list in your SwiftFormat configuration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Q. Why can't I set the indent width or choose between tabs/spaces in the &lt;a href="#xcode-source-editor-extension"&gt;SwiftFormat for Xcode&lt;/a&gt; options?&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Indent width and tabs/spaces can be configured in Xcode on a per project-basis. You'll find the option under "Text Settings" in the right-hand sidebar.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Q. After applying SwiftFormat, my code won't compile. Is that a bug?&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. SwiftFormat should ideally never break your code. Check the &lt;a href="#known-issues"&gt;known issues&lt;/a&gt;, and if it's not already listed there, or the suggested workaround doesn't solve your problem, please &lt;a href="https://github.com/nicklockwood/SwiftFormat/issues"&gt;open an issue on Github&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Q. Can I use SwiftFormat to lint my code without changing it?&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. Yes, see the &lt;a href="#linting"&gt;linting&lt;/a&gt; section above for details.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Q. Can I use the &lt;code&gt;SwiftFormat.framework&lt;/code&gt; inside another app?&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. Yes, the SwiftFormat framework can be included in an app or test target, and used for many kinds of parsing and processing of Swift source code besides formatting. The SwiftFormat framework is available as a &lt;a href="https://cocoapods.org/pods/SwiftFormat" rel="nofollow"&gt;CocoaPod&lt;/a&gt; for easy integration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known issues&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When running a version of SwiftFormat built using Xcode 10.2 on macOS 10.14.3 or earlier, you may experience a crash with the error "dyld: Library not loaded: @rpath/libswiftCore.dylib". To fix this, you need to install the &lt;a href="https://support.apple.com/kb/DL1998" rel="nofollow"&gt;Swift 5 Runtime Support for Command Line Tools&lt;/a&gt;. These tools are included by default in macOS 10.14.4 and later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When using the &lt;code&gt;--self remove&lt;/code&gt; option, the &lt;code&gt;redundantSelf&lt;/code&gt; rule will remove references to &lt;code&gt;self&lt;/code&gt; in autoclosure arguments, which may change the meaning of the code, or cause it not to compile. To work around this issue, use the &lt;code&gt;--selfrequired&lt;/code&gt; option to provide a comma-delimited list of methods to be excluded from the rule. The &lt;code&gt;expect()&lt;/code&gt; function from the popular &lt;a href="https://github.com/Quick/Nimble"&gt;Nimble&lt;/a&gt; unit testing framework is already excluded by default. If you are using the &lt;code&gt;--self insert&lt;/code&gt; option then this is not an issue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you assign &lt;code&gt;SomeClass.self&lt;/code&gt; to a variable and then instantiate an instance of the class using that variable, Swift requires that you use an explicit &lt;code&gt;.init()&lt;/code&gt;, however the   &lt;code&gt;redundantInit&lt;/code&gt; rule is not currently capable of detecting this situation and will remove the &lt;code&gt;.init&lt;/code&gt;. To work around this issue, use the &lt;code&gt;// swiftformat:disable:next redundantInit&lt;/code&gt; comment directive to disable the rule for any affected lines of code (or just disable the &lt;code&gt;redundantInit&lt;/code&gt; rule completely).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;--self insert&lt;/code&gt; option can only recognize locally declared member variables, not ones inherited from superclasses or extensions in other files, so it cannot insert missing &lt;code&gt;self&lt;/code&gt; references for those. Note that the reverse is not true: &lt;code&gt;--self remove&lt;/code&gt; should remove &lt;em&gt;all&lt;/em&gt; redundant &lt;code&gt;self&lt;/code&gt; references.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;trailingClosures&lt;/code&gt; rule can generate ambiguous code if a function has multiple optional closure arguments, or if multiple functions have signatures differing only by the name of the closure argument. For this reason, the rule is limited to anonymous closure arguments by default, with a whitelist for exceptions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;isEmpty&lt;/code&gt; rule will convert &lt;code&gt;count == 0&lt;/code&gt; to &lt;code&gt;isEmpty&lt;/code&gt; even for types that do not have an &lt;code&gt;isEmpty&lt;/code&gt; method, such as &lt;code&gt;NSArray&lt;/code&gt;/&lt;code&gt;NSDictionary&lt;/code&gt;/etc. Use of Foundation collections in Swift code is pretty rare, but just in case, the rule is disabled by default.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a file begins with a comment, the &lt;code&gt;stripHeaders&lt;/code&gt; rule will remove it if it is followed by a blank line. To avoid this, make sure that the first comment is directly followed by a line of code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The formatted file cache is based on a hash of the file contents, so it's possible (though unlikely) that an edited file will have the exact same hash as the previously formatted version, causing SwiftFormat to incorrectly identify it as not having changed, and fail to update it.&lt;/p&gt;
&lt;p&gt;To fix this, you can use the command-line option &lt;code&gt;--cache ignore&lt;/code&gt; to force SwiftFormat to ignore the cache for this run, or just type an extra space in the file (which SwiftFormat will then remove again when it applies the correct formatting).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When running on Linux, the &lt;code&gt;--symlinks&lt;/code&gt; option has no effect, and some of the &lt;code&gt;fileHeader&lt;/code&gt; placeholders are not supported.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tonyarnold"&gt;Tony Arnold&lt;/a&gt; - Xcode source editor extension&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vinceburn"&gt;Vincent Bernier&lt;/a&gt; - Xcode extension settings UI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bourvill"&gt;Maxime Marinel&lt;/a&gt; - Git pre-commit hook script&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/palleas"&gt;Romain Pouclet&lt;/a&gt; - Homebrew formula&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aerobounce"&gt;Aerobounce&lt;/a&gt; - Homebrew cask for source editor extension&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aliak00"&gt;Ali Akhtarzada&lt;/a&gt; - Several path-related CLI enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb"&gt;Yonas Kolb&lt;/a&gt; - Swift Package Manager integration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lutzifer"&gt;Wolfgang Lutz&lt;/a&gt; - AppleScript integration instructions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/balitm"&gt;Balázs Kilvády&lt;/a&gt; - Xcode lint warning integration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood"&gt;Nick Lockwood&lt;/a&gt; - Everything else&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;a href="https://github.com/nicklockwood/SwiftFormat/graphs/contributors"&gt;Full list of contributors&lt;/a&gt;)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nicklockwood</author><guid isPermaLink="false">https://github.com/nicklockwood/SwiftFormat</guid><pubDate>Fri, 10 Jan 2020 00:16:00 GMT</pubDate></item><item><title>pointfreeco/swift-snapshot-testing #17 in Swift, Today</title><link>https://github.com/pointfreeco/swift-snapshot-testing</link><description>&lt;p&gt;&lt;i&gt;📸 Delightful Swift snapshot testing.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--snapshottesting" class="anchor" aria-hidden="true" href="#-snapshottesting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="camera_flash" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f8.png"&gt;📸&lt;/g-emoji&gt; SnapshotTesting&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://swift.org/download/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/74b4a7d976f65b4235f7a92eab2de8fbb267cb4c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352e312d4544353233462e7376673f7374796c653d666c6174" alt="Swift 5.1" data-canonical-src="https://img.shields.io/badge/swift-5.1-ED523F.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/pointfreeco/swift-snapshot-testing" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7c49b68e2e98ebdbcee040272a2596e46b65b1a/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f706f696e7466726565636f2f73776966742d736e617073686f742d74657374696e672f6d61737465722e7376673f6c6162656c3d696f732f6d61636f732f74766f73" alt="iOS/macOS/tvOS CI" data-canonical-src="https://img.shields.io/circleci/project/github/pointfreeco/swift-snapshot-testing/master.svg?label=ios/macos/tvos" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/pointfreeco/swift-snapshot-testing" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c346fdb5f6cc9031f7519a02b83164b11bf4aed/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f706f696e7466726565636f2f73776966742d736e617073686f742d74657374696e672f6d61737465722e7376673f6c6162656c3d6c696e7578" alt="Linux CI" data-canonical-src="https://img.shields.io/travis/pointfreeco/swift-snapshot-testing/master.svg?label=linux" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/pointfreeco" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4e0faffb48f81cbd4c19abb6b588d14eda9d68b8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e746163742d40706f696e7466726565636f2d3541413945372e7376673f7374796c653d666c6174" alt="@pointfreeco" data-canonical-src="https://img.shields.io/badge/contact-@pointfreeco-5AA9E7.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Delightful Swift snapshot testing.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Once &lt;a href="#installation"&gt;installed&lt;/a&gt;, &lt;em&gt;no additional configuration is required&lt;/em&gt;. You can import the &lt;code&gt;SnapshotTesting&lt;/code&gt; module and call the &lt;code&gt;assertSnapshot&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SnapshotTesting&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;XCTest&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyViewControllerTests&lt;/span&gt;: &lt;span class="pl-e"&gt;XCTestCase &lt;/span&gt;{
  &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;testMyViewController&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; vc &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyViewController&lt;/span&gt;()

    &lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;image&lt;/span&gt;)
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When an assertion first runs, a snapshot is automatically recorded to disk and the test will fail, printing out the file path of any newly-recorded reference.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="stop_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6d1.png"&gt;🛑&lt;/g-emoji&gt; failed - No reference was found on disk. Automatically recorded snapshot: …&lt;/p&gt;
&lt;p&gt;open "…/MyAppTests/__Snapshots__/MyViewControllerTests/testMyViewController.png"&lt;/p&gt;
&lt;p&gt;Re-run "testMyViewController" to test against the newly-recorded snapshot.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Repeat test runs will load this reference and compare it with the runtime value. If they don't match, the test will fail and describe the difference.&lt;/p&gt;
&lt;p&gt;You can record a new reference by setting the &lt;code&gt;record&lt;/code&gt; mode to &lt;code&gt;true&lt;/code&gt; on the assertion or globally.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;image&lt;/span&gt;, &lt;span class="pl-c1"&gt;record&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or globally&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
record &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;image&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-snapshot-anything" class="anchor" aria-hidden="true" href="#snapshot-anything"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Snapshot Anything&lt;/h2&gt;
&lt;p&gt;While most snapshot testing libraries in the Swift community are limited to &lt;code&gt;UIImage&lt;/code&gt;s of &lt;code&gt;UIView&lt;/code&gt;s, SnapshotTesting can work with &lt;em&gt;any&lt;/em&gt; format of &lt;em&gt;any&lt;/em&gt; value on &lt;em&gt;any&lt;/em&gt; Swift platform!&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;assertSnapshot&lt;/code&gt; function accepts a value and any snapshot strategy that value supports. This means that a &lt;a href="Documentation/Available-Snapshot-Strategies.md#uiview"&gt;view&lt;/a&gt; or &lt;a href="Documentation/Available-Snapshot-Strategies.md#uiviewcontroller"&gt;view controller&lt;/a&gt; can be tested against an image representation &lt;em&gt;and&lt;/em&gt; against a textual representation of its properties and subview hierarchy.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;image&lt;/span&gt;)
&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-smi"&gt;recursiveDescription&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;View testing is &lt;a href="Documentation/Available-Snapshot-Strategies.md#uiviewcontroller"&gt;highly configurable&lt;/a&gt;. You can override trait collections (for specific size classes and content size categories) and generate device-agnostic snapshots, all from a single simulator.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;image&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: .&lt;span class="pl-smi"&gt;iPhoneSe&lt;/span&gt;))
&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;recursiveDescription&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: .&lt;span class="pl-smi"&gt;iPhoneSe&lt;/span&gt;))

&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;image&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: .&lt;span class="pl-c1"&gt;iPhoneSe&lt;/span&gt;(.&lt;span class="pl-smi"&gt;landscape&lt;/span&gt;)))
&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;recursiveDescription&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: .&lt;span class="pl-c1"&gt;iPhoneSe&lt;/span&gt;(.&lt;span class="pl-smi"&gt;landscape&lt;/span&gt;)))

&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;image&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: .&lt;span class="pl-smi"&gt;iPhoneX&lt;/span&gt;))
&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;recursiveDescription&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: .&lt;span class="pl-smi"&gt;iPhoneX&lt;/span&gt;))

&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;image&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: .&lt;span class="pl-c1"&gt;iPadMini&lt;/span&gt;(.&lt;span class="pl-smi"&gt;portrait&lt;/span&gt;)))
&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: vc, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-c1"&gt;recursiveDescription&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: .&lt;span class="pl-c1"&gt;iPadMini&lt;/span&gt;(.&lt;span class="pl-smi"&gt;portrait&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; Warning: Snapshots must be compared using a simulator with the same OS, device gamut, and scale as the simulator that originally took the reference to avoid discrepancies between images.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Better yet, SnapshotTesting isn't limited to views and view controllers! There are &lt;a href="Documentation/Available-Snapshot-Strategies.md"&gt;a number of available snapshot strategies&lt;/a&gt; to choose from.&lt;/p&gt;
&lt;p&gt;For example, you can snapshot test URL requests (&lt;em&gt;e.g.&lt;/em&gt;, those that your API client prepares).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: urlRequest, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-smi"&gt;raw&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; POST http://localhost:8080/account&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Cookie: pf_session={"userId":"1"}&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; email=blob%40pointfree.co&amp;amp;name=Blob&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And you can snapshot test &lt;code&gt;Encodable&lt;/code&gt; values against their JSON &lt;em&gt;and&lt;/em&gt; property list representations.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: user, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-smi"&gt;json&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   "bio" : "Blobbed around the world.",&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   "id" : 1,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   "name" : "Blobby"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; }&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: user, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-smi"&gt;plist&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;plist version="1.0"&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   &amp;lt;key&amp;gt;bio&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   &amp;lt;string&amp;gt;Blobbed around the world.&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   &amp;lt;key&amp;gt;id&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   &amp;lt;integer&amp;gt;1&amp;lt;/integer&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   &amp;lt;key&amp;gt;name&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   &amp;lt;string&amp;gt;Blobby&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;/plist&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In fact, &lt;em&gt;&lt;a href="Documentation/Available-Snapshot-Strategies.md#any"&gt;any&lt;/a&gt;&lt;/em&gt; value can be snapshot-tested by default using its &lt;a href="https://developer.apple.com/documentation/swift/mirror" rel="nofollow"&gt;mirror&lt;/a&gt;!&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;assertSnapshot&lt;/span&gt;(&lt;span class="pl-c1"&gt;matching&lt;/span&gt;: user, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: .&lt;span class="pl-smi"&gt;dump&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ▿ User&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   - bio: "Blobbed around the world."&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   - id: 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   - name: "Blobby"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your data can be represented as an image, text, or data, you can write a snapshot test for it! Check out &lt;a href="Documentation/Available-Snapshot-Strategies.md"&gt;all of the snapshot strategies&lt;/a&gt; that ship with SnapshotTesting and &lt;a href="Documentation/Defining-Custom-Snapshot-Strategies.md"&gt;learn how to define your own custom strategies&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-xcode-11" class="anchor" aria-hidden="true" href="#xcode-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode 11&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; Warning: By default, Xcode will try to add the SnapshotTesting package to your project's targets. Please &lt;em&gt;uncheck&lt;/em&gt; SnapshotTesting in the final step of adding a Swift package to your target, as documented below.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;From the &lt;strong&gt;File&lt;/strong&gt; menu, navigate through &lt;strong&gt;Swift Packages&lt;/strong&gt; and select &lt;strong&gt;Add Package Dependency…&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Enter package respository URL: &lt;code&gt;https://github.com/pointfreeco/swift-snapshot-testing.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Confirm the version and let Xcode resolve the package&lt;/li&gt;
&lt;li&gt;On the final dialog, &lt;em&gt;uncheck&lt;/em&gt; any box that adds the SnapshotTesting package to any target&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;If you want to use SnapshotTesting in any other project that uses &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;SwiftPM&lt;/a&gt;, add the package as a dependency in &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
  .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/pointfreeco/swift-snapshot-testing.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.7.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, add &lt;code&gt;SnapshotTesting&lt;/code&gt; as a dependency of your test target:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;targets&lt;span class="pl-k"&gt;:&lt;/span&gt; [
  .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyApp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [], &lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sources&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
  .&lt;span class="pl-c1"&gt;testTarget&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppTests&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyApp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SnapshotTesting&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;If you use &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;, you can add the following dependency to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pointfreeco/swift-snapshot-testing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1.6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; Warning: Carthage instructs you to drag frameworks into your Xcode project. Xcode may automatically attempt to link these frameworks to your app target. &lt;code&gt;SnapshotTesting.framework&lt;/code&gt; is only compatible with test targets, so when you first add it to your project:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Remove &lt;code&gt;SnapshotTesting.framework&lt;/code&gt; from any non-test target it may have been added to.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;SnapshotTesting.framework&lt;/code&gt; to any applicable test targets.&lt;/li&gt;
&lt;li&gt;Add a &lt;strong&gt;New Copy Build Phase&lt;/strong&gt; to any applicable test targets with &lt;strong&gt;Destination&lt;/strong&gt; set to "Frameworks", and add &lt;code&gt;SnapshotTesting.framework&lt;/code&gt; as an item to this phase.&lt;/li&gt;
&lt;li&gt;Do &lt;em&gt;not&lt;/em&gt; add &lt;code&gt;SnapshotTesting.framework&lt;/code&gt; to the "Input Files" or "Output Files" of your app target's Carthage &lt;code&gt;copy-frameworks&lt;/code&gt; &lt;strong&gt;Run Script Phase&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;See Carthage's "&lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-unit-tests-or-a-framework"&gt;Adding frameworks to unit tests or a framework&lt;/a&gt;" documentation for more.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;If your project uses &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;, add the pod to any applicable test targets in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;MyAppTests&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SnapshotTesting&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.7&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/Available-Snapshot-Strategies.md"&gt;&lt;strong&gt;Dozens of snapshot strategies&lt;/strong&gt;&lt;/a&gt;. Snapshot testing isn't just for &lt;code&gt;UIView&lt;/code&gt;s and &lt;code&gt;CALayer&lt;/code&gt;s. Write snapshots against &lt;em&gt;any&lt;/em&gt; value.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Defining-Custom-Snapshot-Strategies.md"&gt;&lt;strong&gt;Write your own snapshot strategies&lt;/strong&gt;&lt;/a&gt;. If you can convert it to an image, string, data, or your own diffable format, you can snapshot test it! Build your own snapshot strategies from scratch or transform existing ones.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No configuration required.&lt;/strong&gt; Don't fuss with scheme settings and environment variables. Snapshots are automatically saved alongside your tests.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;More hands-off.&lt;/strong&gt; New snapshots are recorded whether &lt;code&gt;record&lt;/code&gt; mode is &lt;code&gt;true&lt;/code&gt; or not.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Subclass-free.&lt;/strong&gt; Assert from any XCTest case or Quick spec.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Device-agnostic snapshots.&lt;/strong&gt; Render views and view controllers for specific devices and trait collections from a single simulator.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;First-class Xcode support.&lt;/strong&gt; Image differences are captured as XCTest attachments. Text differences are rendered in inline error messages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Supports any platform that supports Swift.&lt;/strong&gt; Write snapshot tests for iOS, Linux, macOS, and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SceneKit, SpriteKit, and WebKit support.&lt;/strong&gt; Most snapshot testing libraries don't support these view subclasses.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Codable&lt;/code&gt; support&lt;/strong&gt;. Snapshot encodable data structures into their &lt;a href="Documentation/Available-Snapshot-Strategies.md#json"&gt;JSON&lt;/a&gt; and &lt;a href="Documentation/Available-Snapshot-Strategies.md#plist"&gt;property list&lt;/a&gt; representations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Custom diff tool integration&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-plug-ins" class="anchor" aria-hidden="true" href="#plug-ins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plug-ins&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/Killectro/swift-snapshot-testing-nimble"&gt;swift-snapshot-testing-nimble&lt;/a&gt; adds &lt;a href="https://github.com/Quick/Nimble"&gt;Nimble&lt;/a&gt; matchers for SnapshotTesting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/pointfreeco/swift-html"&gt;swift-html&lt;/a&gt; is a Swift DSL for type-safe, extensible, and transformable HTML documents and includes an &lt;code&gt;HtmlSnapshotTesting&lt;/code&gt; module to snapshot test its HTML documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/SebastianOsinski/GRDBSnapshotTesting"&gt;GRDBSnapshotTesting&lt;/a&gt; adds snapshot strategy for testing SQLite database migrations made with &lt;a href="https://github.com/groue/GRDB.swift"&gt;GRDB&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you written your own SnapshotTesting plug-in? &lt;a href="https://github.com/pointfreeco/swift-snapshot-testing/edit/master/README.md"&gt;Add it here&lt;/a&gt; and submit a pull request!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-tools" class="anchor" aria-hidden="true" href="#related-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/uber/ios-snapshot-test-case/"&gt;&lt;code&gt;iOSSnapshotTestCase&lt;/code&gt;&lt;/a&gt; helped introduce screen shot testing to a broad audience in the iOS community. Experience with it inspired the creation of this library.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://jestjs.io" rel="nofollow"&gt;Jest&lt;/a&gt; brought generalized snapshot testing to the JavaScript community with a polished user experience. Several features of this library (diffing, automatically capturing new snapshots) were directly influenced.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn More&lt;/h2&gt;
&lt;p&gt;SnapshotTesting was designed with &lt;a href="https://www.pointfree.co/episodes/ep39-witness-oriented-library-design" rel="nofollow"&gt;witness-oriented programming&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This concept (and more) are explored thoroughly in a series of episodes on &lt;a href="https://www.pointfree.co" rel="nofollow"&gt;Point-Free&lt;/a&gt;, a video series exploring functional programming and Swift hosted by &lt;a href="https://github.com/mbrandonw"&gt;Brandon Williams&lt;/a&gt; and &lt;a href="https://github.com/stephencelis"&gt;Stephen Celis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Witness-oriented programming and the design of this library was explored in the following &lt;a href="https://www.pointfree.co" rel="nofollow"&gt;Point-Free&lt;/a&gt; episodes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.pointfree.co/episodes/ep33-protocol-witnesses-part-1" rel="nofollow"&gt;Episode 33&lt;/a&gt;: Protocol Witnesses: Part 1&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pointfree.co/episodes/ep34-protocol-witnesses-part-1" rel="nofollow"&gt;Episode 34&lt;/a&gt;: Protocol Witnesses: Part 2&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pointfree.co/episodes/ep35-advanced-protocol-witnesses-part-1" rel="nofollow"&gt;Episode 35&lt;/a&gt;: Advanced Protocol Witnesses: Part 1&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pointfree.co/episodes/ep36-advanced-protocol-witnesses-part-2" rel="nofollow"&gt;Episode 36&lt;/a&gt;: Advanced Protocol Witnesses: Part 2&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pointfree.co/episodes/ep37-protocol-oriented-library-design-part-1" rel="nofollow"&gt;Episode 37&lt;/a&gt;: Protocol-Oriented Library Design: Part 1&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pointfree.co/episodes/ep38-protocol-oriented-library-design-part-2" rel="nofollow"&gt;Episode 38&lt;/a&gt;: Protocol-Oriented Library Design: Part 2&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pointfree.co/episodes/ep39-witness-oriented-library-design" rel="nofollow"&gt;Episode 39&lt;/a&gt;: Witness-Oriented Library Design&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pointfree.co/episodes/ep40-async-functional-refactoring" rel="nofollow"&gt;Episode 40&lt;/a&gt;: Async Functional Refactoring&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pointfree.co/episodes/ep41-a-tour-of-snapshot-testing" rel="nofollow"&gt;Episode 41&lt;/a&gt;: A Tour of Snapshot Testing &lt;g-emoji class="g-emoji" alias="free" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f193.png"&gt;🆓&lt;/g-emoji&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a href="https://www.pointfree.co/episodes/ep41-a-tour-of-snapshot-testing" rel="nofollow"&gt;
  &lt;img alt="video poster image" src="https://camo.githubusercontent.com/3a2a67d8e7e1508eff63a0f3f9f52cb83a974bc5/68747470733a2f2f6431686631736f79756d786367762e636c6f756466726f6e742e6e65742f303034312d746f75722d6f662d736e617073686f742d74657374696e672f303034312d706f737465722e6a7067" width="480" data-canonical-src="https://d1hf1soyumxcgv.cloudfront.net/0041-tour-of-snapshot-testing/0041-poster.jpg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This library is released under the MIT license. See &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pointfreeco</author><guid isPermaLink="false">https://github.com/pointfreeco/swift-snapshot-testing</guid><pubDate>Fri, 10 Jan 2020 00:17:00 GMT</pubDate></item><item><title>Swinject/Swinject #18 in Swift, Today</title><link>https://github.com/Swinject/Swinject</link><description>&lt;p&gt;&lt;i&gt;Dependency injection framework for Swift with iOS/macOS/Linux&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/13637225?v=3&amp;amp;s=600"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/13637225?v=3&amp;amp;s=600" width="33%" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-swinject" class="anchor" aria-hidden="true" href="#swinject"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swinject&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Swinject/Swinject" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/512c6743bb3271ad6cdceddc4ed3f7037cd53e4c/68747470733a2f2f7472617669732d63692e6f72672f5377696e6a6563742f5377696e6a6563742e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://travis-ci.org/Swinject/Swinject.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/Swinject" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c9c67f6e25e6835b794740820745c2418123bc78/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f5377696e6a6563742e7376673f7374796c653d666c6174" alt="CocoaPods Version" data-canonical-src="https://img.shields.io/cocoapods/v/Swinject.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/Swinject" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/847343d0e310495086b026780886fd4d3a7ecdeb/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f5377696e6a6563742e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/Swinject.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/Swinject" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f8c4d75a9e97488d6b39cce08bdaeefd8b24d661/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d694f532532302537432532306d61634f5325323025374325323074764f5325323025374325323077617463684f532532302537432532304c696e75782d6c69676874677265792e737667" alt="Platforms" data-canonical-src="https://img.shields.io/badge/platform-iOS%20%7C%20macOS%20%7C%20tvOS%20%7C%20watchOS%20%7C%20Linux-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1b9a7a494e815f0f0f9a96013d4b91b40afdd25c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d322e322d2d332e312e782d4631364433392e7376673f7374796c653d666c6174" alt="Swift Version" data-canonical-src="https://img.shields.io/badge/Swift-2.2--3.1.x-F16D39.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://houndci.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c940d021ef775a44e0880bc3ba124a6bee5fefb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657669657765645f62792d486f756e642d3845363442302e737667" alt="Reviewed by Hound" data-canonical-src="https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swinject is a lightweight &lt;a href="https://en.wikipedia.org/wiki/Dependency_injection" rel="nofollow"&gt;dependency injection&lt;/a&gt; framework for Swift.&lt;/p&gt;
&lt;p&gt;Dependency injection (DI) is a software design pattern that implements Inversion of Control (IoC) for resolving dependencies. In the pattern, Swinject helps your app split into loosely-coupled components, which can be developed, tested and maintained more easily. Swinject is powered by the Swift generic type system and first class functions to define dependencies of your app simply and fluently.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/README.md#user-content-pure-swift-type-support"&gt;Pure Swift Type Support&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/DIContainer.md#registration-with-arguments-to-di-container"&gt;Injection with Arguments&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/InjectionPatterns.md"&gt;Initializer/Property/Method Injections&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/InjectionPatterns.md#user-content-initialization-callback"&gt;Initialization Callback&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/CircularDependencies.md"&gt;Circular Dependency Injection&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/ObjectScopes.md"&gt;Object Scopes as None (Transient), Graph, Container (Singleton) and Hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Support of both Reference and &lt;a href="./Documentation/Misc.md#value-types"&gt;Value Types&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/Misc.md#self-registration-self-binding"&gt;Self-registration (Self-binding)&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/ContainerHierarchy.md"&gt;Container Hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/ThreadSafety.md"&gt;Thread Safety&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/Assembler.md"&gt;Modular Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Swinject/SwinjectPropertyLoader"&gt;SwinjectPropertyLoader&lt;/a&gt;&lt;/strong&gt;: Loading property values from resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Swinject/SwinjectStoryboard"&gt;SwinjectStoryboard&lt;/a&gt;&lt;/strong&gt;: Automatic dependency injection via Storyboard.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Swinject/Swinject-CodeGen"&gt;Swinject-CodeGen&lt;/a&gt;&lt;/strong&gt;: Type-safe code generation of &lt;code&gt;Container&lt;/code&gt; from a CSV/YAML file defining dependencies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Swinject/SwinjectAutoregistration"&gt;SwinjectAutoregistration&lt;/a&gt;&lt;/strong&gt;: Automatic registration of services by leveraging the Swift Generics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 8.0+ / Mac OS X 10.10+ / watchOS 2.0+ / tvOS 9.0+&lt;/li&gt;
&lt;li&gt;Swift 2.2 or 2.3
&lt;ul&gt;
&lt;li&gt;Xcode 7.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Swift 3
&lt;ul&gt;
&lt;li&gt;Xcode 8.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Swift 3.2, 4.x
&lt;ul&gt;
&lt;li&gt;Xcode 9.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Carthage 0.18+ (if you use)&lt;/li&gt;
&lt;li&gt;CocoaPods 1.1.1+ (if you use)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Swinject is available through &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; or &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;To install Swinject with Carthage, add the following line to your &lt;code&gt;Cartfile&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swift-22-or-23" class="anchor" aria-hidden="true" href="#swift-22-or-23"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 2.2 or 2.3&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;github "Swinject/Swinject" ~&amp;gt; 1.1.4
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-swift-3x-or-4x" class="anchor" aria-hidden="true" href="#swift-3x-or-4x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 3.x or 4.x&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;github "Swinject/Swinject"

# Uncomment if you use SwinjectStoryboard
# github "Swinject/SwinjectStoryboard"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run &lt;code&gt;carthage update --no-use-binaries&lt;/code&gt; command or just &lt;code&gt;carthage update&lt;/code&gt;. For details of the installation and usage of Carthage, visit &lt;a href="https://github.com/Carthage/Carthage"&gt;its project page&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;To install Swinject with CocoaPods, add the following lines to your &lt;code&gt;Podfile&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swift-22-or-23-1" class="anchor" aria-hidden="true" href="#swift-22-or-23-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 2.2 or 2.3&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or platform :osx, '10.10' if your target is OS X.&lt;/span&gt;
use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Swinject&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.1.4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-3x" class="anchor" aria-hidden="true" href="#swift-3x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 3.x&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or platform :osx, '10.10' if your target is OS X.&lt;/span&gt;
use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Swinject&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Uncomment if you use SwinjectStoryboard&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; pod 'SwinjectStoryboard'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;pod install&lt;/code&gt; command. For details of the installation and usage of CocoaPods, visit &lt;a href="https://cocoapods.org" rel="nofollow"&gt;its official website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./Documentation"&gt;Technical documents&lt;/a&gt; including patterns of dependency injection and examples.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cocoadocs.org/docsets/Swinject/" rel="nofollow"&gt;API reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;
&lt;p&gt;First, register a service and component pair to a &lt;code&gt;Container&lt;/code&gt;, where the component is created by the registered closure as a factory. In this example, &lt;code&gt;Cat&lt;/code&gt; and &lt;code&gt;PetOwner&lt;/code&gt; are component classes implementing &lt;code&gt;Animal&lt;/code&gt; and &lt;code&gt;Person&lt;/code&gt; service protocols, respectively.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; container &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Container&lt;/span&gt;()
container.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;Cat&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Mimi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
container.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { r &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;PetOwner&lt;/span&gt;(&lt;span class="pl-c1"&gt;pet&lt;/span&gt;: r.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then get an instance of a service from the container. The person is resolved to a pet owner, and playing with the cat named Mimi!&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; person &lt;span class="pl-k"&gt;=&lt;/span&gt; container.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
person.&lt;span class="pl-c1"&gt;play&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "I'm playing with Mimi."&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where definitions of the protocols and classes are&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;Animal&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Cat&lt;/span&gt;: &lt;span class="pl-e"&gt;Animal &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;

    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;name&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; name
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt; {
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;play&lt;/span&gt;()
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PetOwner&lt;/span&gt;: &lt;span class="pl-e"&gt;Person &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; pet&lt;span class="pl-k"&gt;:&lt;/span&gt; Animal

    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;pet&lt;/span&gt;&lt;/span&gt;: Animal) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;pet&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; pet
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;play&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; pet.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I'm playing with &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that the &lt;code&gt;pet&lt;/code&gt; of &lt;code&gt;PetOwner&lt;/code&gt; is automatically set as the instance of &lt;code&gt;Cat&lt;/code&gt; when &lt;code&gt;Person&lt;/code&gt; is resolved to the instance of &lt;code&gt;PetOwner&lt;/code&gt;. If a container already set up is given, you do not have to care what are the actual types of the services and how they are created with their dependency.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-where-to-register-services" class="anchor" aria-hidden="true" href="#where-to-register-services"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to Register Services&lt;/h2&gt;
&lt;p&gt;Services must be registered to a container before they are used. The typical registration approach will differ depending upon whether you are using &lt;code&gt;SwinjectStoryboard&lt;/code&gt; or not.&lt;/p&gt;
&lt;p&gt;The following view controller class is used in addition to the protocols and classes above in the examples below.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PersonViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; person&lt;span class="pl-k"&gt;:&lt;/span&gt; Person&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-with-swinjectstoryboard" class="anchor" aria-hidden="true" href="#with-swinjectstoryboard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With SwinjectStoryboard&lt;/h3&gt;
&lt;p&gt;Import SwinjectStoryboard at the top of your swift source file if you use Swinject v2 in Swift 3.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only Swinject v2 in Swift 3.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SwinjectStoryboard&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Services should be registered in an extension of &lt;code&gt;SwinjectStoryboard&lt;/code&gt; if you use &lt;code&gt;SwinjectStoryboard&lt;/code&gt;. Refer to &lt;a href="https://github.com/Swinject/SwinjectStoryboard"&gt;the project page of SwinjectStoryboard&lt;/a&gt; for further details.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;SwinjectStoryboard&lt;/span&gt; {
    &lt;span class="pl-k"&gt;@objc&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;setup&lt;/span&gt;() {
        defaultContainer.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;Cat&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Mimi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
        defaultContainer.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { r &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c1"&gt;PetOwner&lt;/span&gt;(&lt;span class="pl-c1"&gt;pet&lt;/span&gt;: r.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
        }
        defaultContainer.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(PersonViewController.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { r &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; controller &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PersonViewController&lt;/span&gt;()
            controller.&lt;span class="pl-smi"&gt;person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; r.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;)
            &lt;span class="pl-k"&gt;return&lt;/span&gt; controller
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-without-swinjectstoryboard" class="anchor" aria-hidden="true" href="#without-swinjectstoryboard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Without SwinjectStoryboard&lt;/h3&gt;
&lt;p&gt;If you do not use &lt;code&gt;SwinjectStoryboard&lt;/code&gt; to instantiate view controllers, services should be registered to a container in your application's &lt;code&gt;AppDelegate&lt;/code&gt;. Registering before exiting &lt;code&gt;application:didFinishLaunchingWithOptions:&lt;/code&gt; will ensure that the services are setup appropriately before they are used.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AppDelegate&lt;/span&gt;: &lt;span class="pl-e"&gt;UIResponder&lt;/span&gt;, &lt;span class="pl-e"&gt;UIApplicationDelegate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; window&lt;span class="pl-k"&gt;:&lt;/span&gt; UIWindow&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; container&lt;span class="pl-k"&gt;:&lt;/span&gt; Container &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; container &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Container&lt;/span&gt;()
        container.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;Cat&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Mimi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
        container.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { r &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c1"&gt;PetOwner&lt;/span&gt;(&lt;span class="pl-c1"&gt;pet&lt;/span&gt;: r.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
        }
        container.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(PersonViewController.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { r &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; controller &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PersonViewController&lt;/span&gt;()
            controller.&lt;span class="pl-smi"&gt;person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; r.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;)
            &lt;span class="pl-k"&gt;return&lt;/span&gt; controller
        }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; container
    }()

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;application&lt;/span&gt;(
        &lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;application&lt;/span&gt;: UIApplication,
        &lt;span class="pl-en"&gt;didFinishLaunchingWithOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;launchOptions&lt;/span&gt;: [UIApplicationLaunchOptionsKey : &lt;span class="pl-c1"&gt;Any&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Instantiate a window.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; window &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIWindow&lt;/span&gt;(&lt;span class="pl-c1"&gt;frame&lt;/span&gt;: UIScreen.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;bounds&lt;/span&gt;)
        window.&lt;span class="pl-c1"&gt;makeKeyAndVisible&lt;/span&gt;()
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;window&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; window

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Instantiate the root view controller with dependencies injected by the container.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        window.&lt;span class="pl-smi"&gt;rootViewController&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; container.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(PersonViewController.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that the example uses a convenience initializer taking a closure to register services to the new instance of &lt;code&gt;Container&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-play-in-playground" class="anchor" aria-hidden="true" href="#play-in-playground"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Play in Playground!&lt;/h2&gt;
&lt;p&gt;The project contains &lt;code&gt;Sample-iOS.playground&lt;/code&gt; to demonstrate the features of Swinject. Download or clone the project, run the playground, modify it, and play with it to learn Swinject.&lt;/p&gt;
&lt;p&gt;To run the playground in the project, first build the project, then select &lt;code&gt;Editor &amp;gt; Execute Playground&lt;/code&gt; menu in Xcode.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example-apps" class="anchor" aria-hidden="true" href="#example-apps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Apps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Swinject/SwinjectSimpleExample"&gt;SwinjectSimpleExample&lt;/a&gt; demonstrates dependency injection and Swinject in a simple weather app that lists current weather information at some locations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Swinject/SwinjectMVVMExample"&gt;SwinjectMVVMExample&lt;/a&gt; demonstrates dependency injection with Swift and reactive programming with &lt;a href="https://github.com/ReactiveCocoa/ReactiveCocoa"&gt;ReactiveCocoa&lt;/a&gt; in MVVM architecture.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-blog-posts" class="anchor" aria-hidden="true" href="#blog-posts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blog Posts&lt;/h2&gt;
&lt;p&gt;The following blog posts introduce Swinject and the concept of dependency injection.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yoichitgy.github.io/post/dependency-injection-framework-for-swift-introduction-to-swinject/" rel="nofollow"&gt;Dependency Injection Framework for Swift - Introduction to Swinject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yoichitgy.github.io/post/dependency-injection-framework-for-swift-simple-weather-app-example-with-swinject-part-1/" rel="nofollow"&gt;Dependency Injection Framework for Swift - Simple Weather App Example with Swinject Part 1/2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yoichitgy.github.io/post/dependency-injection-framework-for-swift-simple-weather-app-example-with-swinject-part-2/" rel="nofollow"&gt;Dependency Injection Framework for Swift - Simple Weather App Example with Swinject Part 2/2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guide" class="anchor" aria-hidden="true" href="#contribution-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution Guide&lt;/h2&gt;
&lt;p&gt;A guide to &lt;a href="https://github.com/Swinject/Swinject/issues"&gt;submit issues&lt;/a&gt;, to ask general questions, or to &lt;a href="https://github.com/Swinject/Swinject/pulls"&gt;open pull requests&lt;/a&gt; is &lt;a href="CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-question" class="anchor" aria-hidden="true" href="#question"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Question?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://join.slack.com/t/swinject/shared_invite/enQtNjk0NjE0NjMzOTIyLTI5NWJiNDU5NGI1MTUwZDI3MDU2ZTM2YTMwMWRhMjI0ZmFlODk4MDI5OWUwNzY1YjlhOTRjYWM2NjZmOTVhNTU" rel="nofollow"&gt;Slack&lt;/a&gt; feel free to discuss anything Swinject related.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/swinject" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; we are trying to monitor questions tagged &lt;code&gt;swinject&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;The DI container features of Swinject are inspired by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ninject.org" rel="nofollow"&gt;Ninject&lt;/a&gt; - &lt;a href="https://github.com/enkari"&gt;Enkari, Ltd&lt;/a&gt; and &lt;a href="https://github.com/ninject/Ninject/graphs/contributors"&gt;the Ninject project contributors&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://autofac.org" rel="nofollow"&gt;Autofac&lt;/a&gt; - &lt;a href="https://github.com/autofac/Autofac"&gt;Autofac Project&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and highly inspired by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://funq.codeplex.com" rel="nofollow"&gt;Funq&lt;/a&gt; - &lt;a href="http://www.codeplex.com/site/users/view/dcazzulino" rel="nofollow"&gt;Daniel Cazzulino&lt;/a&gt; and &lt;a href="http://funq.codeplex.com/team/view" rel="nofollow"&gt;the project team&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT license. See the &lt;a href="LICENSE.txt"&gt;LICENSE file&lt;/a&gt; for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Swinject</author><guid isPermaLink="false">https://github.com/Swinject/Swinject</guid><pubDate>Fri, 10 Jan 2020 00:18:00 GMT</pubDate></item><item><title>Juanpe/SkeletonView #19 in Swift, Today</title><link>https://github.com/Juanpe/SkeletonView</link><description>&lt;p&gt;&lt;i&gt;☠️ An elegant way to show users that something is happening and also prepare them to which contents he is waiting&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/header2.jpg"&gt;&lt;img src="Assets/header2.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;a href="https://app.bitrise.io/app/6d289a17e22c8323" rel="nofollow"&gt;
      &lt;img src="https://camo.githubusercontent.com/5d4589cf532b4476b9062b9e364c44e3ea7e6833/68747470733a2f2f6170702e626974726973652e696f2f6170702f366432383961313765323263383332332f7374617475732e7376673f746f6b656e3d664937674b4334315844392d615258445363434b4277266272616e63683d6d6173746572" data-canonical-src="https://app.bitrise.io/app/6d289a17e22c8323/status.svg?token=fI7gKC41XD9-aRXDScCKBw&amp;amp;branch=master" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://codebeat.co/projects/github-com-juanpe-skeletonview-master" rel="nofollow"&gt;&lt;img alt="codebeat badge" src="https://camo.githubusercontent.com/838dbce061c3d4b0bb7ef98b7f9296dcc6955f71/68747470733a2f2f636f6465626561742e636f2f6261646765732f66383534666466642d333165352d343638392d626130342d303735643833363533653630" data-canonical-src="https://codebeat.co/badges/f854fdfd-31e5-4689-ba04-075d83653e60" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/Juanpe/SkeletonView"&gt;
        &lt;img src="https://camo.githubusercontent.com/029e97f027f4ec6479733cbd455c31ccd361d5be/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f536b656c65746f6e566965772e737667" alt="Platforms" data-canonical-src="https://img.shields.io/cocoapods/p/SkeletonView.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bea9b06ee2118619a5968c9b685bf4df22e6808c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352d6f72616e67652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/bea9b06ee2118619a5968c9b685bf4df22e6808c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352d6f72616e67652e737667" data-canonical-src="https://img.shields.io/badge/Swift-5-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://cocoapods.org/pods/SkeletonView" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/305665ef6fb70895b3bc51b598f152698f547e6d/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f536b656c65746f6e566965772e737667" alt="CocoaPods" data-canonical-src="https://img.shields.io/cocoapods/v/SkeletonView.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://github.com/Carthage/Carthage"&gt;
        &lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://github.com/apple/swift-package-manager"&gt;
        &lt;img src="https://camo.githubusercontent.com/49fd7cc52e2274ce9c356e5bb09300009a8a4a6c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53504d2d636f6d70617469626c652d627269676874677265656e2e737667" alt="SPM" data-canonical-src="https://img.shields.io/badge/SPM-compatible-brightgreen.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://twitter.com/JuanpeCatalan" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/834ae52e5303018c39fc89b1c7d9f9b507e68989/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e746163742d404a75616e7065436174616c616e2d626c75652e7376673f7374796c653d666c6174" alt="Twitter: @JuanpeCatalan" data-canonical-src="https://img.shields.io/badge/contact-@JuanpeCatalan-blue.svg?style=flat" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;br&gt;
    &lt;a href="https://gitter.im/SkeletonView/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/c17fc997e77acbd8b8177dfebff33a5dc899bfbf/68747470733a2f2f6261646765732e6769747465722e696d2f536b656c65746f6e566965772f636f6d6d756e6974792e7376673f7374796c653d666c6174" data-canonical-src="https://badges.gitter.im/SkeletonView/community.svg?style=flat" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://twitter.com/intent/tweet?text=Wow%20This%20library%20is%20awesome:&amp;amp;url=https%3A%2F%2Fgithub.com%2FJuanpe%2FSkeletonView" rel="nofollow"&gt;
      &lt;img src="https://camo.githubusercontent.com/aca99d94b3a2ae1409fdff2a2034c7f4dd073989/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f6769746875622e636f6d2f4a75616e70652f536b656c65746f6e566965772e7376673f7374796c653d736f6369616c" alt="License" data-canonical-src="https://img.shields.io/twitter/url/https/github.com/Juanpe/SkeletonView.svg?style=social" style="max-width:100%;"&gt;
    &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="earth_americas" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30e.png"&gt;🌎&lt;/g-emoji&gt;  Translations: &lt;br&gt;
&lt;a href="https://github.com/Juanpe/SkeletonView/blob/master/README_zh.md"&gt;&lt;g-emoji class="g-emoji" alias="cn" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png"&gt;🇨🇳&lt;/g-emoji&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/WhatsXie" rel="nofollow"&gt;@WhatsXie&lt;/a&gt; &lt;br&gt;
&lt;a href="https://github.com/Juanpe/SkeletonView/blob/master/README_pt-br.md"&gt;&lt;g-emoji class="g-emoji" alias="brazil" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f7.png"&gt;🇧🇷&lt;/g-emoji&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/brunomuniz_af" rel="nofollow"&gt;@brunomunizaf&lt;/a&gt; &lt;br&gt;
&lt;a href="https://github.com/Juanpe/SkeletonView/blob/master/README_ko.md"&gt;&lt;g-emoji class="g-emoji" alias="kr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f7.png"&gt;🇰🇷&lt;/g-emoji&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/techinpark" rel="nofollow"&gt;@techinpark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Today almost all apps have async processes, such as Api requests, long running processes, etc. And while the processes are working, usually developers place a loading view to show users that something is going on.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SkeletonView&lt;/code&gt; has been conceived to address this need, an elegant way to show users that something is happening and also prepare them to which contents he is waiting.&lt;/p&gt;
&lt;p&gt;Enjoy it! &lt;g-emoji class="g-emoji" alias="slightly_smiling_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f642.png"&gt;🙂&lt;/g-emoji&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#-features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-guides"&gt;Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#using-cocoapods"&gt;Cocoapods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-carthage"&gt;Carthage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-swift-package-manager"&gt;SPM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#-how-to-use"&gt;How to use&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#-collections"&gt;Collections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-multiline-text"&gt;Multiline text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-custom-colors"&gt;Custom colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-appearance"&gt;Appearance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-custom-animations"&gt;Custom animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-transitions"&gt;Transitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-hierarchy"&gt;Hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-debug"&gt;Debug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#-documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-supported-os--sdk-versions"&gt;Supported OS &amp;amp; SDK Versions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-next-steps"&gt;Next steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-mentions"&gt;Mentions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-author"&gt;Author&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--features" class="anchor" aria-hidden="true" href="#-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png"&gt;🌟&lt;/g-emoji&gt; Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Easy to use&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; All UIViews are skeletonables&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Fully customizable&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Universal (iPhone &amp;amp; iPad)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Interface Builder friendly&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Simple Swift syntax&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Lightweight readable codebase&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--guides" class="anchor" aria-hidden="true" href="#-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clapper" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3ac.png"&gt;🎬&lt;/g-emoji&gt; Guides&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://youtu.be/75kgOhWsPNA" rel="nofollow"&gt;&lt;img src="Assets/thumb_getting_started.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--installation" class="anchor" aria-hidden="true" href="#-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="calling" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f2.png"&gt;📲&lt;/g-emoji&gt; Installation&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-using-cocoapods" class="anchor" aria-hidden="true" href="#using-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Edit your &lt;code&gt;Podfile&lt;/code&gt; and specify the dependency:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SkeletonView&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-using-carthage" class="anchor" aria-hidden="true" href="#using-carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://github.com/carthage"&gt;Carthage&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Edit your &lt;code&gt;Cartfile&lt;/code&gt; and specify the dependency:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Juanpe/SkeletonView&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-using-swift-package-manager" class="anchor" aria-hidden="true" href="#using-swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://github.com/apple/swift-package-manager"&gt;Swift Package Manager&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Once you have your Swift package set up, adding &lt;code&gt;SkeletonView&lt;/code&gt; as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;  dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Juanpe/SkeletonView.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.7.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content--how-to-use" class="anchor" aria-hidden="true" href="#-how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="monkey" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f412.png"&gt;🐒&lt;/g-emoji&gt; How to use&lt;/h2&gt;
&lt;p&gt;Only &lt;strong&gt;3&lt;/strong&gt; steps needed to use &lt;code&gt;SkeletonView&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Import SkeletonView in proper place.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SkeletonView&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Now, set which views will be &lt;code&gt;skeletonables&lt;/code&gt;. You achieve this in two ways:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;avatarImageView.&lt;span class="pl-smi"&gt;isSkeletonable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Using IB/Storyboards:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/storyboard.png"&gt;&lt;img src="Assets/storyboard.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Once you've set the views, you can show the &lt;strong&gt;skeleton&lt;/strong&gt;. To do so, you have &lt;strong&gt;4&lt;/strong&gt; choices:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;showSkeleton&lt;/span&gt;()                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Solid&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;showGradientSkeleton&lt;/span&gt;()         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Gradient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;showAnimatedSkeleton&lt;/span&gt;()         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Solid animated&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;showAnimatedGradientSkeleton&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Gradient animated&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Preview&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td width="25%"&gt;
Solid
&lt;/td&gt;
&lt;td width="25%"&gt;
Gradient
&lt;/td&gt;
&lt;td width="25%"&gt;
Solid Animated
&lt;/td&gt;
&lt;td width="25%"&gt;
Gradient Animated
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="25%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/solid.png"&gt;&lt;img src="Assets/solid.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td width="25%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/gradient.png"&gt;&lt;img src="Assets/gradient.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td width="25%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/solid_animated.gif"&gt;&lt;img src="Assets/solid_animated.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td width="25%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/gradient_animated.gif"&gt;&lt;img src="Assets/gradient_animated.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT!&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;SkeletonView&lt;/code&gt; is recursive, so if you want show the skeleton in all skeletonable views, you only need to call the show method in the main container view. For example, with UIViewControllers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-extra" class="anchor" aria-hidden="true" href="#extra"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extra&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-skeleton-views-layout" class="anchor" aria-hidden="true" href="#skeleton-views-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Skeleton views layout&lt;/h4&gt;
&lt;p&gt;Sometimes skeleton layout may not fit your layout because the parent view bounds have changed. &lt;del&gt;For example, rotating the device.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;You can relayout the skeleton views like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLayoutSubviews&lt;/span&gt;() {
    view.&lt;span class="pl-c1"&gt;layoutSkeletonIfNeeded&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; You shouldn't call this method. From &lt;em&gt;version 1.8.1&lt;/em&gt; you don't need to call this method, the library does automatically. So, you can use this method &lt;em&gt;ONLY&lt;/em&gt; in the cases when you need to update the layout of the skeleton manually.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-update-skeleton-configuration" class="anchor" aria-hidden="true" href="#update-skeleton-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update skeleton configuration&lt;/h4&gt;
&lt;p&gt;You can change the skeleton configuration at any time like its colour, animation, etc. with the following methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;updateSkeleton&lt;/span&gt;()                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Solid&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;updateGradientSkeleton&lt;/span&gt;()         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Gradient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;updateAnimatedSkeleton&lt;/span&gt;()         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Solid animated&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;updateAnimatedGradientSkeleton&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Gradient animated&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content--collections" class="anchor" aria-hidden="true" href="#-collections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="herb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f33f.png"&gt;🌿&lt;/g-emoji&gt; Collections&lt;/h3&gt;
&lt;p&gt;Now, &lt;code&gt;SkeletonView&lt;/code&gt; is compatible with &lt;code&gt;UITableView&lt;/code&gt; and &lt;code&gt;UICollectionView&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-uitableview" class="anchor" aria-hidden="true" href="#uitableview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UITableView&lt;/h4&gt;
&lt;p&gt;If you want to show the skeleton in a &lt;code&gt;UITableView&lt;/code&gt;, you need to conform to &lt;code&gt;SkeletonTableViewDataSource&lt;/code&gt; protocol.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;SkeletonTableViewDataSource&lt;/span&gt;: &lt;span class="pl-e"&gt;UITableViewDataSource &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;numSections&lt;/span&gt;(&lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionSkeletonView&lt;/span&gt;: UITableView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;numberOfRowsInSection&lt;/span&gt; &lt;span class="pl-smi"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;cellIdentifierForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableCellIdentifier
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;identifierForHeaderInSection&lt;/span&gt; &lt;span class="pl-smi"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableHeaderFooterIdentifier&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;identifierForFooterInSection&lt;/span&gt; &lt;span class="pl-smi"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableHeaderFooterIdentifier&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, this protocol inherits from &lt;code&gt;UITableViewDataSource&lt;/code&gt;, so you can replace this protocol with the skeleton protocol.&lt;/p&gt;
&lt;p&gt;This protocol has a default implementation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;numSections&lt;/span&gt;(&lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionSkeletonView&lt;/span&gt;: UITableView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default: 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;numberOfRowsInSection&lt;/span&gt; &lt;span class="pl-smi"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; It calculates how many cells need to populate whole tableview&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;identifierForHeaderInSection&lt;/span&gt; &lt;span class="pl-smi"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableHeaderFooterIdentifier&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default: nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;identifierForFooterInSection&lt;/span&gt; &lt;span class="pl-smi"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableHeaderFooterIdentifier&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default: nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is only one method you need to implement to let Skeleton know the cell identifier. This method doesn't have default implementation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;cellIdentifierForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableCellIdentifier&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;cellIdentifierForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableCellIdentifier {
   &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CellIdentifier&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT!&lt;/strong&gt;
If you are using resizable cells (&lt;code&gt;tableView.rowHeight = UITableViewAutomaticDimension&lt;/code&gt; ), it's mandatory define the &lt;code&gt;estimatedRowHeight&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;👩🏼‍🏫  &lt;strong&gt;How specify which elements are skeletonables?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is an illustration that shows how you should specify which elements are skeletonables when you are using an &lt;code&gt;UITableView&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/tableview_scheme.png"&gt;&lt;img src="Assets/tableview_scheme.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As you can see, we have to make skeletonable the tableview, the cell and the UI elements, but we don't need to set as skeletonable the &lt;code&gt;contentView&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-uicollectionview" class="anchor" aria-hidden="true" href="#uicollectionview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UICollectionView&lt;/h4&gt;
&lt;p&gt;For &lt;code&gt;UICollectionView&lt;/code&gt;, you need to conform to &lt;code&gt;SkeletonCollectionViewDataSource&lt;/code&gt; protocol.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;SkeletonCollectionViewDataSource&lt;/span&gt;: &lt;span class="pl-e"&gt;UICollectionViewDataSource &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;numSections&lt;/span&gt;(&lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionSkeletonView&lt;/span&gt;: UICollectionView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UICollectionView, &lt;span class="pl-en"&gt;numberOfItemsInSection&lt;/span&gt; &lt;span class="pl-smi"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UICollectionView, &lt;span class="pl-en"&gt;cellIdentifierForItemAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableCellIdentifier
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The rest of the process is the same as &lt;code&gt;UITableView&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--multiline-text" class="anchor" aria-hidden="true" href="#-multiline-text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="newspaper" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f0.png"&gt;📰&lt;/g-emoji&gt; Multiline text&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/multilines2.png"&gt;&lt;img src="Assets/multilines2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When using elements with text, &lt;code&gt;SkeletonView&lt;/code&gt; draws lines to simulate text.
Besides, you can decide how many lines you want. If  &lt;code&gt;numberOfLines&lt;/code&gt; is set to zero, it will calculate how many lines needed to populate the whole skeleton and it will be drawn. Instead, if you set it to one, two or any number greater than zero, it will only draw this number of lines.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content--customize" class="anchor" aria-hidden="true" href="#-customize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="control_knobs" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f39b.png"&gt;🎛&lt;/g-emoji&gt; Customize&lt;/h5&gt;
&lt;p&gt;You can set some properties for multilines elements.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Values&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Preview&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Filling percent&lt;/strong&gt; of the last line.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0...100&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;70%&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/multiline_lastline.png"&gt;&lt;img src="Assets/multiline_lastline.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Corner radius&lt;/strong&gt; of lines. (&lt;strong&gt;NEW&lt;/strong&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0...10&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/multiline_corner.png"&gt;&lt;img src="Assets/multiline_corner.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To modify the percent or radius &lt;strong&gt;using code&lt;/strong&gt;, set the properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;descriptionTextView.&lt;span class="pl-smi"&gt;lastLineFillPercent&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;
descriptionTextView.&lt;span class="pl-smi"&gt;linesCornerRadius&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, if you prefer use &lt;strong&gt;IB/Storyboard&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/multiline_customize.png"&gt;&lt;img src="Assets/multiline_customize.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--custom-colors" class="anchor" aria-hidden="true" href="#-custom-colors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;🎨&lt;/g-emoji&gt; Custom colors&lt;/h3&gt;
&lt;p&gt;You can decide which color the skeleton is tinted with. You only need to pass as a parameter the color or gradient you want.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using solid colors&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;view.&lt;span class="pl-c1"&gt;showSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;usingColor&lt;/span&gt;: UIColor.&lt;span class="pl-smi"&gt;gray&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Solid&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;view.&lt;span class="pl-c1"&gt;showSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;usingColor&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIColor&lt;/span&gt;(&lt;span class="pl-c1"&gt;red&lt;/span&gt;: &lt;span class="pl-c1"&gt;25.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;green&lt;/span&gt;: &lt;span class="pl-c1"&gt;30.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;blue&lt;/span&gt;: &lt;span class="pl-c1"&gt;255.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;alpha&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Using gradients&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; gradient &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SkeletonGradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;baseColor&lt;/span&gt;: UIColor.&lt;span class="pl-smi"&gt;midnightBlue&lt;/span&gt;)
view.&lt;span class="pl-c1"&gt;showGradientSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;usingGradient&lt;/span&gt;: gradient) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Gradient&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Besides, &lt;code&gt;SkeletonView&lt;/code&gt; features 20 flat colors 🤙🏼&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UIColor.turquoise, UIColor.greenSea, UIColor.sunFlower, UIColor.flatOrange  ...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/flatcolors.png"&gt;&lt;img src="Assets/flatcolors.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-image-captured-from-website-httpsflatuicolorscom" class="anchor" aria-hidden="true" href="#image-captured-from-website-httpsflatuicolorscom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Image captured from website &lt;a href="https://flatuicolors.com" rel="nofollow"&gt;https://flatuicolors.com&lt;/a&gt;&lt;/h6&gt;
&lt;h3&gt;&lt;a id="user-content--appearance" class="anchor" aria-hidden="true" href="#-appearance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="butterfly" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f98b.png"&gt;🦋&lt;/g-emoji&gt; Appearance&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt; The skeletons have a default appearance. So, when you don't specify the color, gradient or multilines properties, &lt;code&gt;SkeletonView&lt;/code&gt; uses the default values.&lt;/p&gt;
&lt;p&gt;Default values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tintColor&lt;/strong&gt;: UIColor
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: &lt;code&gt;.skeletonDefault&lt;/code&gt; (same as &lt;code&gt;.clouds&lt;/code&gt; but adaptive to dark mode)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gradient&lt;/strong&gt;: SkeletonGradient
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: &lt;code&gt;SkeletonGradient(baseColor: .skeletonDefault)&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;multilineHeight&lt;/strong&gt;: CGFloat
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: 15&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;multilineSpacing&lt;/strong&gt;: CGFloat
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: 10&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;multilineLastLineFillPercent&lt;/strong&gt;: Int
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: 70&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;multilineCornerRadius&lt;/strong&gt;: Int
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: 0&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get these default values you can use &lt;code&gt;SkeletonAppearance.default&lt;/code&gt;. Using this property you can set the values as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SkeletonAppearance.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-smi"&gt;multilineHeight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;
SkeletonAppearance.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-smi"&gt;tintColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;green&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also specifiy these line appearance properties on a per-label basis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lastLineFillPercent&lt;/strong&gt;: Int&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;linesCornerRadius&lt;/strong&gt;: Int&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;skeletonLineSpacing&lt;/strong&gt;: CGFloat&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;skeletonPaddingInsets&lt;/strong&gt;: UIEdgeInsets&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--custom-animations" class="anchor" aria-hidden="true" href="#-custom-animations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="nerd_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f913.png"&gt;🤓&lt;/g-emoji&gt; Custom animations&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SkeletonView&lt;/code&gt; has two built-in animations, &lt;em&gt;pulse&lt;/em&gt; for solid skeletons and &lt;em&gt;sliding&lt;/em&gt; for gradients.&lt;/p&gt;
&lt;p&gt;Besides, if you want to do your own skeleton animation, it's really easy.&lt;/p&gt;
&lt;p&gt;Skeleton provides the &lt;code&gt;showAnimatedSkeleton&lt;/code&gt; function which has a &lt;code&gt;SkeletonLayerAnimation&lt;/code&gt; closure where you can define your custom animation.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;SkeletonLayerAnimation&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (CALayer) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; CAAnimation&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can call the function like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;view.&lt;span class="pl-smi"&gt;showAnimatedSkeleton&lt;/span&gt; { (layer) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; CAAnimation &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; animation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CAAnimation&lt;/span&gt;()
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Customize here your animation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; animation
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's available &lt;code&gt;SkeletonAnimationBuilder&lt;/code&gt;. It's a builder to make &lt;code&gt;SkeletonLayerAnimation&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Today, you can create &lt;strong&gt;sliding animations&lt;/strong&gt; for gradients, deciding the &lt;strong&gt;direction&lt;/strong&gt; and setting the &lt;strong&gt;duration&lt;/strong&gt; of the animation (default = 1.5s).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; func makeSlidingAnimation(withDirection direction: GradientDirection, duration: CFTimeInterval = 1.5) -&amp;gt; SkeletonLayerAnimation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; animation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SkeletonAnimationBuilder&lt;/span&gt;().&lt;span class="pl-c1"&gt;makeSlidingAnimation&lt;/span&gt;(&lt;span class="pl-c1"&gt;withDirection&lt;/span&gt;: .&lt;span class="pl-smi"&gt;leftToRight&lt;/span&gt;)
view.&lt;span class="pl-c1"&gt;showAnimatedGradientSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;usingGradient&lt;/span&gt;: gradient, &lt;span class="pl-c1"&gt;animation&lt;/span&gt;: animation)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;GradientDirection&lt;/code&gt; is an enum, with this cases:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Direction&lt;/th&gt;
&lt;th&gt;Preview&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;.leftRight&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_left_to_right.gif"&gt;&lt;img src="Assets/sliding_left_to_right.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.rightLeft&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_right_to_left.gif"&gt;&lt;img src="Assets/sliding_right_to_left.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.topBottom&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_top_to_bottom.gif"&gt;&lt;img src="Assets/sliding_top_to_bottom.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.bottomTop&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_bottom_to_top.gif"&gt;&lt;img src="Assets/sliding_bottom_to_top.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.topLeftBottomRight&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_topLeft_to_bottomRight.gif"&gt;&lt;img src="Assets/sliding_topLeft_to_bottomRight.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.bottomRightTopLeft&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_bottomRight_to_topLeft.gif"&gt;&lt;img src="Assets/sliding_bottomRight_to_topLeft.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="wink" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png"&gt;😉&lt;/g-emoji&gt; TRICK!&lt;/strong&gt;
Exist another way to create sliding animations, just using this shortcut:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;let animation = GradientDirection.leftToRight.slidingAnimation()&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content--transitions" class="anchor" aria-hidden="true" href="#-transitions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="surfing_man" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c4.png"&gt;🏄&lt;/g-emoji&gt; Transitions&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SkeletonView&lt;/code&gt; has build-in transitions to &lt;strong&gt;show&lt;/strong&gt; or &lt;strong&gt;hide&lt;/strong&gt; the skeletons in a &lt;em&gt;smoother&lt;/em&gt; way &lt;g-emoji class="g-emoji" alias="call_me_hand" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f919.png"&gt;🤙&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;To use the transition, simply add the &lt;code&gt;transition&lt;/code&gt; parameter to your &lt;code&gt;showSkeleton()&lt;/code&gt; or &lt;code&gt;hideSkeleton()&lt;/code&gt; function with the transition time, like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;view.&lt;span class="pl-c1"&gt;showSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;transition&lt;/span&gt;: .&lt;span class="pl-c1"&gt;crossDissolve&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.25&lt;/span&gt;))     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Show skeleton cross dissolve transition with 0.25 seconds fade time&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;view.&lt;span class="pl-c1"&gt;hideSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;transition&lt;/span&gt;: .&lt;span class="pl-c1"&gt;crossDissolve&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.25&lt;/span&gt;))     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Hide skeleton cross dissolve transition with 0.25 seconds fade time&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Preview&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td width="50%"&gt;
None
&lt;/td&gt;
&lt;td width="50%"&gt;
Cross dissolve
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="50%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/skeleton_transition_nofade.gif"&gt;&lt;img src="Assets/skeleton_transition_nofade.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td width="50%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/skeleton_transition_fade.gif"&gt;&lt;img src="Assets/skeleton_transition_fade.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content--hierarchy" class="anchor" aria-hidden="true" href="#-hierarchy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="family_man_girl_boy" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f467-1f466.png"&gt;👨‍👧‍👦&lt;/g-emoji&gt; Hierarchy&lt;/h3&gt;
&lt;p&gt;Since &lt;code&gt;SkeletonView&lt;/code&gt; is recursive, and we want skeleton to be very efficient, we want to stop recursion as soon as possible. For this reason, you must set the container view as &lt;code&gt;Skeletonable&lt;/code&gt;, because Skeleton will stop looking for &lt;code&gt;skeletonable&lt;/code&gt; subviews as soon as a view is not Skeletonable, breaking then the recursion.&lt;/p&gt;
&lt;p&gt;Because an image is worth a thousand words:&lt;/p&gt;
&lt;p&gt;In this example we have a &lt;code&gt;UIViewController&lt;/code&gt; with a &lt;code&gt;ContainerView&lt;/code&gt; and a &lt;code&gt;UITableView&lt;/code&gt;. When the view is ready, we show the skeleton using this method:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;view.showSkeleton()
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ìsSkeletonable&lt;/code&gt;= &lt;g-emoji class="g-emoji" alias="skull_and_crossbones" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2620.png"&gt;☠️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Configuration&lt;/th&gt;
&lt;th align="center"&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/no_skeletonable.jpg"&gt;&lt;img src="Assets/no_skeletonable.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/no_skeletonables_result.png"&gt;&lt;img src="Assets/no_skeletonables_result.png" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/container_no_skeletonable.jpg"&gt;&lt;img src="Assets/container_no_skeletonable.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/no_skeletonables_result.png"&gt;&lt;img src="Assets/no_skeletonables_result.png" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/container_skeletonable.jpg"&gt;&lt;img src="Assets/container_skeletonable.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/container_skeletonable_result.png"&gt;&lt;img src="Assets/container_skeletonable_result.png" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/all_skeletonables.jpg"&gt;&lt;img src="Assets/all_skeletonables.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/all_skeletonables_result.png"&gt;&lt;img src="Assets/all_skeletonables_result.png" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/tableview_no_skeletonable.jpg"&gt;&lt;img src="Assets/tableview_no_skeletonable.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/tableview_no_skeletonable_result.png"&gt;&lt;img src="Assets/tableview_no_skeletonable_result.png" height="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/tableview_skeletonable.jpg"&gt;&lt;img src="Assets/tableview_skeletonable.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/tableview_skeletonable_result.png"&gt;&lt;img src="Assets/tableview_skeletonable_result.png" height="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content--debug" class="anchor" aria-hidden="true" href="#-debug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="microscope" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f52c.png"&gt;🔬&lt;/g-emoji&gt; Debug&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt; In order to facilitate the debug tasks when something is not working fine. &lt;code&gt;SkeletonView&lt;/code&gt; has some new tools.&lt;/p&gt;
&lt;p&gt;First, &lt;code&gt;UIView&lt;/code&gt; has available a new property with his skeleton info:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; skeletonDescription&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The skeleton representation looks like this:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/debug_description.png"&gt;&lt;img src="Assets/debug_description.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Besides, you can activate the new &lt;strong&gt;debug mode&lt;/strong&gt;. You just add the environment variable &lt;code&gt;SKELETON_DEBUG&lt;/code&gt; and activate it.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/debug_mode.png"&gt;&lt;img src="Assets/debug_mode.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then, when the skeleton appears, you can see the view hierarchy in the Xcode console.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Open to see an output example &lt;/summary&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/hierarchy_output.png"&gt;&lt;img src="Assets/hierarchy_output.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content--documentation" class="anchor" aria-hidden="true" href="#-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt; Documentation&lt;/h3&gt;
&lt;p&gt;Coming soon...&lt;g-emoji class="g-emoji" alias="sweat_smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png"&gt;😅&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--supported-os--sdk-versions" class="anchor" aria-hidden="true" href="#-supported-os--sdk-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clipboard" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cb.png"&gt;📋&lt;/g-emoji&gt; Supported OS &amp;amp; SDK Versions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;iOS 9.0+&lt;/li&gt;
&lt;li&gt;tvOS 9.0+&lt;/li&gt;
&lt;li&gt;Swift 5&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--next-steps" class="anchor" aria-hidden="true" href="#-next-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="mailbox_with_mail" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ec.png"&gt;📬&lt;/g-emoji&gt; Next steps&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Set the filling percent of the last line in multiline elements&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Add more gradient animations&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supported resizable cells&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; CollectionView compatible&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; tvOS compatible&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Add recovery state&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Custom default appearance&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Debug mode&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Add animations when it shows/hides the skeletons&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Custom collections compatible&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; MacOS and WatchOS compatible&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-️-contributing" class="anchor" aria-hidden="true" href="#️-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; Contributing&lt;/h2&gt;
&lt;p&gt;This is an open source project, so feel free to contribute. How?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open an &lt;a href="https://github.com/Juanpe/SkeletonView/issues/new"&gt;issue&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Send feedback via &lt;a href="mailto://juanpecatalan.com" rel="nofollow"&gt;email&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Propose your own fixes, suggestions and open a pull request with the changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://github.com/Juanpe/SkeletonView/graphs/contributors"&gt;all contributors&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-project-generated-with-swiftplate" class="anchor" aria-hidden="true" href="#project-generated-with-swiftplate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project generated with &lt;a href="https://github.com/JohnSundell/SwiftPlate"&gt;SwiftPlate&lt;/a&gt;&lt;/h6&gt;
&lt;h2&gt;&lt;a id="user-content--mentions" class="anchor" aria-hidden="true" href="#-mentions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="loudspeaker" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e2.png"&gt;📢&lt;/g-emoji&gt; Mentions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://iosdevweekly.com/issues/327#start" rel="nofollow"&gt;iOS Dev Weekly #327&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/articles/40/skeletonview-makes-loading-content-beautiful" rel="nofollow"&gt;Hacking with Swift Articles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.mybridge.co/swift-top-10-articles-for-the-past-month-v-nov-2017-dfed7861cd65" rel="nofollow"&gt;Top 10 Swift Articles November&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.mybridge.co/30-amazing-ios-swift-libraries-for-the-past-year-v-2018-7cf15027eee9" rel="nofollow"&gt;30 Amazing iOS Swift Libraries (v2018)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://digest.appcoda.com/issues/appcoda-weekly-issue-44-81899" rel="nofollow"&gt;AppCoda Weekly #44&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://us11.campaign-archive.com/?u=cd1f3ed33c6527331d82107ba&amp;amp;id=48131a516d" rel="nofollow"&gt;iOS Cookies Newsletter #103&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://andybargh.com/swiftdevelopments-113/" rel="nofollow"&gt;Swift Developments Newsletter #113&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ios-goodies.com/post/167557280951/week-204" rel="nofollow"&gt;iOS Goodies #204&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://digest.swiftweekly.com/issues/swift-weekly-issue-96-81759" rel="nofollow"&gt;Swift Weekly #96&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cocoacontrols.com/controls/skeletonview" rel="nofollow"&gt;CocoaControls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ios.libhunt.com/newsletter/74" rel="nofollow"&gt;Awesome iOS Newsletter #74&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mAGpsQiy6so" rel="nofollow"&gt;Swift News #36&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/flawless-app-stories/best-ios-articles-new-tools-more-fcbe673e10d" rel="nofollow"&gt;Best iOS articles, new tools &amp;amp; more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--author" class="anchor" aria-hidden="true" href="#-author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;👨🏻‍💻 Author&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Juanpe Catalán &lt;a href="http://www.twitter.com/JuanpeCatalan" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7cf10772eb6ccebe92d678c452a971e6e2778653/687474703a2f2f692e696d6775722e636f6d2f7458536f5468462e706e67" alt="alt text" data-canonical-src="http://i.imgur.com/tXSoThF.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CDou4xtIK" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/031fc5a134cdca5ae3460822aba371e63f794233/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67" alt="Buy me a coffee" data-canonical-src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" style="max-width:100%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--license" class="anchor" aria-hidden="true" href="#-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;👮🏻 License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;MIT License

Copyright (c) 2017 Juanpe Catalán

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Juanpe</author><guid isPermaLink="false">https://github.com/Juanpe/SkeletonView</guid><pubDate>Fri, 10 Jan 2020 00:19:00 GMT</pubDate></item><item><title>Quick/Nimble #20 in Swift, Today</title><link>https://github.com/Quick/Nimble</link><description>&lt;p&gt;&lt;i&gt;A Matcher Framework for Swift and Objective-C&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nimble" class="anchor" aria-hidden="true" href="#nimble"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nimble&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Quick/Nimble" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33e652a42c0be3c96797217d05c7b5e5f33a38ef/68747470733a2f2f7472617669732d63692e6f72672f517569636b2f4e696d626c652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Quick/Nimble.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/Nimble" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d38b35e502bc6c1a59fc266bb6ce52291237514/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4e696d626c652e737667" alt="CocoaPods" data-canonical-src="https://img.shields.io/cocoapods/v/Nimble.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage Compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/e502cdc2b27c1f2b2590f061d37b984ba3957c26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d3041374346352e7376673f7374796c653d666c6174" alt="Accio supported" data-canonical-src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/Nimble" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/260d11f464288550b03bddaaa292b713804a9ce1/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4e696d626c652e737667" alt="Platforms" data-canonical-src="https://img.shields.io/cocoapods/p/Nimble.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://houndci.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c940d021ef775a44e0880bc3ba124a6bee5fefb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657669657765645f62792d486f756e642d3845363442302e737667" alt="Reviewed by Hound" data-canonical-src="https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use Nimble to express the expected outcomes of Swift
or Objective-C expressions. Inspired by
&lt;a href="https://github.com/pivotal/cedar"&gt;Cedar&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1.2&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beCloseTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;1.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;within&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;seahorse&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sea&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Atlantic&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pacific&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Mississippi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(ocean.&lt;span class="pl-smi"&gt;isClean&lt;/span&gt;).&lt;span class="pl-c1"&gt;toEventually&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTruthy&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-use-nimble" class="anchor" aria-hidden="true" href="#how-to-use-nimble"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Use Nimble&lt;/h1&gt;


&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;  &lt;em&gt;generated with &lt;a href="https://github.com/thlorenz/doctoc"&gt;DocToc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#some-background-expressing-outcomes-using-assertions-in-xctest"&gt;Some Background: Expressing Outcomes Using Assertions in XCTest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nimble-expectations-using-expectto"&gt;Nimble: Expectations Using &lt;code&gt;expect(...).to&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#custom-failure-messages"&gt;Custom Failure Messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#type-safety"&gt;Type Safety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#operator-overloads"&gt;Operator Overloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lazily-computed-values"&gt;Lazily Computed Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c-primitives"&gt;C Primitives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asynchronous-expectations"&gt;Asynchronous Expectations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#objective-c-support"&gt;Objective-C Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#disabling-objective-c-shorthand"&gt;Disabling Objective-C Shorthand&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#built-in-matcher-functions"&gt;Built-in Matcher Functions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#type-checking"&gt;Type Checking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#equivalence"&gt;Equivalence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#identity"&gt;Identity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#comparisons"&gt;Comparisons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#typesclasses"&gt;Types/Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#truthiness"&gt;Truthiness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-assertions"&gt;Swift Assertions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-error-handling"&gt;Swift Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exceptions"&gt;Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collection-membership"&gt;Collection Membership&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#strings"&gt;Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collection-elements"&gt;Collection Elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collection-count"&gt;Collection Count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#notifications"&gt;Notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#matching-a-value-to-any-of-a-group-of-matchers"&gt;Matching a value to any of a group of matchers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-validation"&gt;Custom Validation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#writing-your-own-matchers"&gt;Writing Your Own Matchers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#predicateresult"&gt;PredicateResult&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lazy-evaluation"&gt;Lazy Evaluation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#type-checking-via-swift-generics"&gt;Type Checking via Swift Generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customizing-failure-messages"&gt;Customizing Failure Messages&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#basic-customization"&gt;Basic Customization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#full-customization"&gt;Full Customization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#supporting-objective-c"&gt;Supporting Objective-C&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#properly-handling-nil-in-objective-c-matchers"&gt;Properly Handling &lt;code&gt;nil&lt;/code&gt; in Objective-C Matchers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#migrating-from-the-old-matcher-api"&gt;Migrating from the Old Matcher API&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#minimal-step---use-predicate"&gt;Minimal Step - Use &lt;code&gt;.predicate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#convert-to-use-predicate-type-with-old-matcher-constructor"&gt;Convert to use &lt;code&gt;Predicate&lt;/code&gt; Type with Old Matcher Constructor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#convert-to-predicate-type-with-preferred-constructor"&gt;Convert to &lt;code&gt;Predicate&lt;/code&gt; Type with Preferred Constructor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deprecation-roadmap"&gt;Deprecation Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing-nimble"&gt;Installing Nimble&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installing-nimble-as-a-submodule"&gt;Installing Nimble as a Submodule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing-nimble-via-cocoapods"&gt;Installing Nimble via CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing-nimble-via-accio"&gt;Installing Nimble via Accio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-nimble-without-xctest"&gt;Using Nimble without XCTest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a id="user-content-some-background-expressing-outcomes-using-assertions-in-xctest" class="anchor" aria-hidden="true" href="#some-background-expressing-outcomes-using-assertions-in-xctest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some Background: Expressing Outcomes Using Assertions in XCTest&lt;/h1&gt;
&lt;p&gt;Apple's Xcode includes the XCTest framework, which provides
assertion macros to test whether code behaves properly.
For example, to assert that &lt;code&gt;1 + 1 = 2&lt;/code&gt;, XCTest has you write:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;XCTAssertEqual&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;expected one plus one to equal two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, in Objective-C:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;XCTAssertEqual&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; + &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;expected one plus one to equal two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;XCTest assertions have a couple of drawbacks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Not enough macros.&lt;/strong&gt; There's no easy way to assert that a string
contains a particular substring, or that a number is less than or
equal to another.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It's hard to write asynchronous tests.&lt;/strong&gt; XCTest forces you to write
a lot of boilerplate code.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Nimble addresses these concerns.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-nimble-expectations-using-expectto" class="anchor" aria-hidden="true" href="#nimble-expectations-using-expectto"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nimble: Expectations Using &lt;code&gt;expect(...).to&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Nimble allows you to express expectations using a natural,
easily understood language:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Nimble&lt;/span&gt;

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(seagull.&lt;span class="pl-smi"&gt;squawk&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Squee!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

@import Nimble;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(seagull.squawk).to(equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Squee!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;expect&lt;/code&gt; function autocompletes to include &lt;code&gt;file:&lt;/code&gt; and &lt;code&gt;line:&lt;/code&gt;,
but these parameters are optional. Use the default values to have
Xcode highlight the correct line when an expectation is not met.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To perform the opposite expectation--to assert something is &lt;em&gt;not&lt;/em&gt;
equal--use &lt;code&gt;toNot&lt;/code&gt; or &lt;code&gt;notTo&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Nimble&lt;/span&gt;

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(seagull.&lt;span class="pl-smi"&gt;squawk&lt;/span&gt;).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Oh, hello there!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(seagull.&lt;span class="pl-smi"&gt;squawk&lt;/span&gt;).&lt;span class="pl-c1"&gt;notTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Oh, hello there!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

@import Nimble;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(seagull.squawk).toNot(equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Oh, hello there!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(seagull.squawk).notTo(equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Oh, hello there!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-custom-failure-messages" class="anchor" aria-hidden="true" href="#custom-failure-messages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Failure Messages&lt;/h2&gt;
&lt;p&gt;Would you like to add more information to the test's failure messages? Use the &lt;code&gt;description&lt;/code&gt; optional argument to add your own text:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed - expected to equal &amp;lt;3&amp;gt;, got &amp;lt;2&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;description&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Make sure libKindergartenMath is loaded&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed - Make sure libKindergartenMath is loaded&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; expected to equal &amp;lt;3&amp;gt;, got &amp;lt;2&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or the *WithDescription version in Objective-C:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

@import Nimble;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@(&lt;span class="pl-c1"&gt;1&lt;/span&gt;+&lt;span class="pl-c1"&gt;1&lt;/span&gt;)).to(equal(@&lt;span class="pl-c1"&gt;3&lt;/span&gt;));
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed - expected to equal &amp;lt;3.0000&amp;gt;, got &amp;lt;2.0000&amp;gt;&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@(&lt;span class="pl-c1"&gt;1&lt;/span&gt;+&lt;span class="pl-c1"&gt;1&lt;/span&gt;)).toWithDescription(equal(@&lt;span class="pl-c1"&gt;3&lt;/span&gt;), @"Make sure libKindergartenMath is loaded");
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed - Make sure libKindergartenMath is loaded&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; expected to equal &amp;lt;3.0000&amp;gt;, got &amp;lt;2.0000&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-type-safety" class="anchor" aria-hidden="true" href="#type-safety"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Safety&lt;/h2&gt;
&lt;p&gt;Nimble makes sure you don't compare two types that don't match:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Does not compile:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Squee!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Nimble uses generics--only available in Swift--to ensure
type correctness. That means type checking is
not available when using Nimble in Objective-C. &lt;g-emoji class="g-emoji" alias="sob" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png"&gt;😭&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-operator-overloads" class="anchor" aria-hidden="true" href="#operator-overloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Operator Overloads&lt;/h2&gt;
&lt;p&gt;Tired of so much typing? With Nimble, you can use overloaded operators
like &lt;code&gt;==&lt;/code&gt; for equivalence, or &lt;code&gt;&amp;gt;&lt;/code&gt; for comparisons:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if squawk does not equal "Hi!":&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(seagull.&lt;span class="pl-smi"&gt;squawk&lt;/span&gt;) &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hi!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 10 is greater than 2:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Operator overloads are only available in Swift, so you won't be able
to use this syntax in Objective-C. &lt;g-emoji class="g-emoji" alias="broken_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f494.png"&gt;💔&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-lazily-computed-values" class="anchor" aria-hidden="true" href="#lazily-computed-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lazily Computed Values&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;expect&lt;/code&gt; function doesn't evaluate the value it's given until it's
time to match. So Nimble can test whether an expression raises an
exception once evaluated:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note: Swift currently doesn't have exceptions.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;       Only Objective-C code can raise exceptions&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;       that Nimble will catch.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;       (see https://github.com/Quick/Nimble/issues/220#issuecomment-172667064)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; exception &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSException&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: NSInternalInconsistencyException,
    &lt;span class="pl-c1"&gt;reason&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not enough fish in the sea.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;userInfo&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;something&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;is fishy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
expect { exception.&lt;span class="pl-c1"&gt;raise&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Also, you can customize raiseException to be more specific&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { exception.&lt;span class="pl-c1"&gt;raise&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: NSInternalInconsistencyException))
expect { exception.&lt;span class="pl-c1"&gt;raise&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;named&lt;/span&gt;: NSInternalInconsistencyException,
    &lt;span class="pl-c1"&gt;reason&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not enough fish in the sea&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
expect { exception.&lt;span class="pl-c1"&gt;raise&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;named&lt;/span&gt;: NSInternalInconsistencyException,
    &lt;span class="pl-c1"&gt;reason&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not enough fish in the sea&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;userInfo&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;something&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;is fishy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Objective-C works the same way, but you must use the &lt;code&gt;expectAction&lt;/code&gt;
macro when making an expectation on an expression that has no return
value:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c1"&gt;NSException&lt;/span&gt; *exception = [&lt;span class="pl-c1"&gt;NSException&lt;/span&gt; &lt;span class="pl-c1"&gt;exceptionWithName:&lt;/span&gt;&lt;span class="pl-c1"&gt;NSInternalInconsistencyException&lt;/span&gt;
                                                 &lt;span class="pl-c1"&gt;reason:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Not enough fish in the sea.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                               &lt;span class="pl-c1"&gt;userInfo:&lt;/span&gt;&lt;span class="pl-c1"&gt;nil&lt;/span&gt;];
&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(^{ [exception &lt;span class="pl-c1"&gt;raise&lt;/span&gt;]; }).to(raiseException());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use the property-block syntax to be more specific.&lt;/span&gt;
&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(^{ [exception &lt;span class="pl-c1"&gt;raise&lt;/span&gt;]; }).to(raiseException().named(&lt;span class="pl-c1"&gt;NSInternalInconsistencyException&lt;/span&gt;));
&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(^{ [exception &lt;span class="pl-c1"&gt;raise&lt;/span&gt;]; }).to(raiseException().
    named(&lt;span class="pl-c1"&gt;NSInternalInconsistencyException&lt;/span&gt;).
    reason(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not enough fish in the sea&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(^{ [exception &lt;span class="pl-c1"&gt;raise&lt;/span&gt;]; }).to(raiseException().
    named(&lt;span class="pl-c1"&gt;NSInternalInconsistencyException&lt;/span&gt;).
    reason(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not enough fish in the sea&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).
    userInfo(@{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;something&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;is fishy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can also pass a block for custom matching of the raised exception&lt;/span&gt;
&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(exception.raise()).to(raiseException().satisfyingBlock(^(&lt;span class="pl-c1"&gt;NSException&lt;/span&gt; *exception) {
    &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(exception.&lt;span class="pl-smi"&gt;name&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(&lt;span class="pl-c1"&gt;NSInternalInconsistencyException&lt;/span&gt;));
}));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-c-primitives" class="anchor" aria-hidden="true" href="#c-primitives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C Primitives&lt;/h2&gt;
&lt;p&gt;Some testing frameworks make it hard to test primitive C values.
In Nimble, it just works:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; actual&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;CInt&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; expectedValue&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;CInt&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(expectedValue))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In fact, Nimble uses type inference, so you can write the above
without explicitly specifying both types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;CInt&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;In Objective-C, Nimble only supports Objective-C objects. To
make expectations on primitive C values, wrap then in an object
literal:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@(&lt;span class="pl-c1"&gt;1&lt;/span&gt; + &lt;span class="pl-c1"&gt;1&lt;/span&gt;)).to(equal(@&lt;span class="pl-c1"&gt;2&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-asynchronous-expectations" class="anchor" aria-hidden="true" href="#asynchronous-expectations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous Expectations&lt;/h2&gt;
&lt;p&gt;In Nimble, it's easy to make expectations on values that are updated
asynchronously. Just use &lt;code&gt;toEventually&lt;/code&gt; or &lt;code&gt;toEventuallyNot&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;DispatchQueue.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
    ocean.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dolphins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    ocean.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;whales&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(ocean).&lt;span class="pl-c1"&gt;toEventually&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dolphins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;whales&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;dispatch_async&lt;/span&gt;(dispatch_get_main_queue(), ^{
    [ocean &lt;span class="pl-c1"&gt;add:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;dolphins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
    [ocean &lt;span class="pl-c1"&gt;add:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;whales&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
});
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(ocean).toEventually(contain(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;dolphins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;whales&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: toEventually triggers its polls on the main thread. Blocking the main
thread will cause Nimble to stop the run loop. This can cause test pollution
for whatever incomplete code that was running on the main thread.  Blocking the
main thread can be caused by blocking IO, calls to sleep(), deadlocks, and
synchronous IPC.&lt;/p&gt;
&lt;p&gt;In the above example, &lt;code&gt;ocean&lt;/code&gt; is constantly re-evaluated. If it ever
contains dolphins and whales, the expectation passes. If &lt;code&gt;ocean&lt;/code&gt; still
doesn't contain them, even after being continuously re-evaluated for one
whole second, the expectation fails.&lt;/p&gt;
&lt;p&gt;Sometimes it takes more than a second for a value to update. In those
cases, use the &lt;code&gt;timeout&lt;/code&gt; parameter:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Waits three seconds for ocean to contain "starfish":&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(ocean).&lt;span class="pl-c1"&gt;toEventually&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;timeout&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Evaluate someValue every 0.2 seconds repeatedly until it equals 100, or fails if it timeouts after 5.5 seconds.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(someValue).&lt;span class="pl-c1"&gt;toEventually&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;), &lt;span class="pl-c1"&gt;timeout&lt;/span&gt;: &lt;span class="pl-c1"&gt;5.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;pollInterval&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Waits three seconds for ocean to contain "starfish":&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(ocean).withTimeout(&lt;span class="pl-c1"&gt;3&lt;/span&gt;).toEventually(contain(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also provide a callback by using the &lt;code&gt;waitUntil&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
waitUntil { done &lt;span class="pl-k"&gt;in&lt;/span&gt;
    ocean.&lt;span class="pl-smi"&gt;goFish&lt;/span&gt; { success &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(success).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTrue&lt;/span&gt;())
        &lt;span class="pl-c1"&gt;done&lt;/span&gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;waitUntil&lt;/span&gt;(^(&lt;span class="pl-k"&gt;void&lt;/span&gt; (^done)(&lt;span class="pl-k"&gt;void&lt;/span&gt;)){
    [ocean &lt;span class="pl-c1"&gt;goFishWithHandler:&lt;/span&gt;^(&lt;span class="pl-c1"&gt;BOOL&lt;/span&gt; success){
        &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(success).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTrue&lt;/span&gt;());
        &lt;span class="pl-c1"&gt;done&lt;/span&gt;();
    }];
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;waitUntil&lt;/code&gt; also optionally takes a timeout parameter:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;waitUntil&lt;/span&gt;(&lt;span class="pl-c1"&gt;timeout&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;) { done &lt;span class="pl-k"&gt;in&lt;/span&gt;
    ocean.&lt;span class="pl-smi"&gt;goFish&lt;/span&gt; { success &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(success).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTrue&lt;/span&gt;())
        &lt;span class="pl-c1"&gt;done&lt;/span&gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;waitUntilTimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, ^(&lt;span class="pl-k"&gt;void&lt;/span&gt; (^done)(&lt;span class="pl-k"&gt;void&lt;/span&gt;)){
    [ocean &lt;span class="pl-c1"&gt;goFishWithHandler:&lt;/span&gt;^(&lt;span class="pl-c1"&gt;BOOL&lt;/span&gt; success){
        &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(success).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTrue&lt;/span&gt;());
        &lt;span class="pl-c1"&gt;done&lt;/span&gt;();
    }];
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: &lt;code&gt;waitUntil&lt;/code&gt; triggers its timeout code on the main thread. Blocking the main
thread will cause Nimble to stop the run loop to continue. This can cause test
pollution for whatever incomplete code that was running on the main thread.
Blocking the main thread can be caused by blocking IO, calls to sleep(),
deadlocks, and synchronous IPC.&lt;/p&gt;
&lt;p&gt;In some cases (e.g. when running on slower machines) it can be useful to modify
the default timeout and poll interval values. This can be done as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Increase the global timeout to 5 seconds:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Nimble.&lt;span class="pl-smi"&gt;AsyncDefaults&lt;/span&gt;.&lt;span class="pl-smi"&gt;Timeout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Slow the polling interval to 0.1 seconds:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Nimble.&lt;span class="pl-smi"&gt;AsyncDefaults&lt;/span&gt;.&lt;span class="pl-smi"&gt;PollInterval&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-objective-c-support" class="anchor" aria-hidden="true" href="#objective-c-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C Support&lt;/h2&gt;
&lt;p&gt;Nimble has full support for Objective-C. However, there are two things
to keep in mind when using Nimble in Objective-C:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;All parameters passed to the &lt;code&gt;expect&lt;/code&gt; function, as well as matcher
functions like &lt;code&gt;equal&lt;/code&gt;, must be Objective-C objects or can be converted into
an &lt;code&gt;NSObject&lt;/code&gt; equivalent:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

@import Nimble;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@(&lt;span class="pl-c1"&gt;1&lt;/span&gt; + &lt;span class="pl-c1"&gt;1&lt;/span&gt;)).to(equal(@&lt;span class="pl-c1"&gt;2&lt;/span&gt;));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).to(contain(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Boxed as NSNumber *&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;).to(equal(&lt;span class="pl-c1"&gt;2&lt;/span&gt;));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1.2&lt;/span&gt;).to(beLessThan(&lt;span class="pl-c1"&gt;2.0&lt;/span&gt;));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;).to(beTruthy());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Boxed as NSString *&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).to(equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Boxed as NSRange&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;NSMakeRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)).to(equal(&lt;span class="pl-c1"&gt;NSMakeRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)));&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To make an expectation on an expression that does not return a value,
such as &lt;code&gt;-[NSException raise]&lt;/code&gt;, use &lt;code&gt;expectAction&lt;/code&gt; instead of
&lt;code&gt;expect&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(^{ [exception &lt;span class="pl-c1"&gt;raise&lt;/span&gt;]; }).to(raiseException());&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following types are currently converted to an &lt;code&gt;NSObject&lt;/code&gt; type:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C Numeric types&lt;/strong&gt; are converted to &lt;code&gt;NSNumber *&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSRange&lt;/code&gt; is converted to &lt;code&gt;NSValue *&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;char *&lt;/code&gt; is converted to &lt;code&gt;NSString *&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the following matchers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;equal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beGreaterThan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beGreaterThanOrEqual&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beLessThan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beLessThanOrEqual&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beCloseTo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beTrue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beFalse&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beTruthy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beFalsy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;haveCount&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you would like to see more, &lt;a href="https://github.com/Quick/Nimble/issues"&gt;file an issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disabling-objective-c-shorthand" class="anchor" aria-hidden="true" href="#disabling-objective-c-shorthand"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disabling Objective-C Shorthand&lt;/h2&gt;
&lt;p&gt;Nimble provides a shorthand for expressing expectations using the
&lt;code&gt;expect&lt;/code&gt; function. To disable this shorthand in Objective-C, define the
&lt;code&gt;NIMBLE_DISABLE_SHORT_SYNTAX&lt;/code&gt; macro somewhere in your code before
importing Nimble:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;NIMBLE_DISABLE_SHORT_SYNTAX&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;

@import Nimble;

&lt;span class="pl-en"&gt;NMB_expect&lt;/span&gt;(^{ &lt;span class="pl-k"&gt;return&lt;/span&gt; seagull.&lt;span class="pl-smi"&gt;squawk&lt;/span&gt;; }, __FILE__, __LINE__).to(NMB_equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Squee!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Disabling the shorthand is useful if you're testing functions with
names that conflict with Nimble functions, such as &lt;code&gt;expect&lt;/code&gt; or
&lt;code&gt;equal&lt;/code&gt;. If that's not the case, there's no point in disabling the
shorthand.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-built-in-matcher-functions" class="anchor" aria-hidden="true" href="#built-in-matcher-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built-in Matcher Functions&lt;/h1&gt;
&lt;p&gt;Nimble includes a wide variety of matcher functions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-type-checking" class="anchor" aria-hidden="true" href="#type-checking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Checking&lt;/h2&gt;
&lt;p&gt;Nimble supports checking the type membership of any kind of object, whether
Objective-C conformant or not:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;SomeProtocol&lt;/span&gt;{}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SomeClassConformingToProtocol&lt;/span&gt;: &lt;span class="pl-e"&gt;SomeProtocol&lt;/span&gt;{}
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;SomeStructConformingToProtocol&lt;/span&gt;: &lt;span class="pl-e"&gt;SomeProtocol&lt;/span&gt;{}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The following tests pass&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;turtle&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;))

&lt;span class="pl-k"&gt;let&lt;/span&gt; classObject &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeClassConformingToProtocol&lt;/span&gt;()
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeClassConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeStructConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))

&lt;span class="pl-k"&gt;let&lt;/span&gt; structObject &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeStructConformingToProtocol&lt;/span&gt;()
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeStructConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeClassConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The following tests pass&lt;/span&gt;
&lt;span class="pl-c1"&gt;NSMutableArray&lt;/span&gt; *array = [&lt;span class="pl-c1"&gt;NSMutableArray&lt;/span&gt; &lt;span class="pl-c1"&gt;array&lt;/span&gt;];
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(array).to(beAKindOf([&lt;span class="pl-c1"&gt;NSArray&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;]));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@&lt;span class="pl-c1"&gt;1&lt;/span&gt;).toNot(beAKindOf([&lt;span class="pl-c1"&gt;NSNull&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;]));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Objects can be tested for their exact types using the &lt;code&gt;beAnInstanceOf&lt;/code&gt; matcher:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;SomeProtocol&lt;/span&gt;{}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SomeClassConformingToProtocol&lt;/span&gt;: &lt;span class="pl-e"&gt;SomeProtocol&lt;/span&gt;{}
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;SomeStructConformingToProtocol&lt;/span&gt;: &lt;span class="pl-e"&gt;SomeProtocol&lt;/span&gt;{}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Unlike the 'beKindOf' matcher, the 'beAnInstanceOf' matcher only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if the object is the EXACT type requested. The following&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; tests pass -- note its behavior when working in an inheritance hierarchy.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;turtle&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;))

&lt;span class="pl-k"&gt;let&lt;/span&gt; classObject &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeClassConformingToProtocol&lt;/span&gt;()
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeClassConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeStructConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))

&lt;span class="pl-k"&gt;let&lt;/span&gt; structObject &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeStructConformingToProtocol&lt;/span&gt;()
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeStructConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeClassConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-equivalence" class="anchor" aria-hidden="true" href="#equivalence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Equivalence&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is equivalent to 'expected':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;==&lt;/span&gt; expected

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is not equivalent to 'expected':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;!=&lt;/span&gt; expected&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is equivalent to 'expected':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(equal(expected))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is not equivalent to 'expected':&lt;/span&gt;
expect(actual).toNot(equal(expected))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Values must be &lt;code&gt;Equatable&lt;/code&gt;, &lt;code&gt;Comparable&lt;/code&gt;, or subclasses of &lt;code&gt;NSObject&lt;/code&gt;.
&lt;code&gt;equal&lt;/code&gt; will always fail when used to compare one or more &lt;code&gt;nil&lt;/code&gt; values.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-identity" class="anchor" aria-hidden="true" href="#identity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Identity&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' has the same pointer address as 'expected':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beIdenticalTo&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;===&lt;/span&gt; expected

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' does not have the same pointer address as 'expected':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beIdenticalTo&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;!==&lt;/span&gt; expected&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important to remember that &lt;code&gt;beIdenticalTo&lt;/code&gt; only makes sense when comparing
types with reference semantics, which have a notion of identity. In Swift,
that means types that are defined as a &lt;code&gt;class&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This matcher will not work when comparing types with value semantics such as
those defined as a &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;enum&lt;/code&gt;. If you need to compare two value types,
consider what it means for instances of your type to be identical. This may mean
comparing individual properties or, if it makes sense to do so, conforming your type
to &lt;code&gt;Equatable&lt;/code&gt; and using Nimble's equivalence matchers instead.&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' has the same pointer address as 'expected':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beIdenticalTo(expected));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' does not have the same pointer address as 'expected':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).toNot(beIdenticalTo(expected));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-comparisons" class="anchor" aria-hidden="true" href="#comparisons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comparisons&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beLessThan&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; expected

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beLessThanOrEqualTo&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; expected

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beGreaterThan&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; expected

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beGreaterThanOrEqualTo&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; expected&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beLessThan(expected));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beLessThanOrEqualTo(expected));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beGreaterThan(expected));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beGreaterThanOrEqualTo(expected));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Values given to the comparison matchers above must implement
&lt;code&gt;Comparable&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Because of how computers represent floating point numbers, assertions
that two floating point numbers be equal will sometimes fail. To express
that two numbers should be close to one another within a certain margin
of error, use &lt;code&gt;beCloseTo&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beCloseTo&lt;/span&gt;(expected, &lt;span class="pl-c1"&gt;within&lt;/span&gt;: delta))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beCloseTo(expected).within(delta));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, to assert that &lt;code&gt;10.01&lt;/code&gt; is close to &lt;code&gt;10&lt;/code&gt;, you can write:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;10.01&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beCloseTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;within&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@(&lt;span class="pl-c1"&gt;10.01&lt;/span&gt;)).to(beCloseTo(@&lt;span class="pl-c1"&gt;10&lt;/span&gt;).within(&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is also an operator shortcut available in Swift:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;≈&lt;/span&gt; expected
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;≈&lt;/span&gt; (expected, delta)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Type &lt;kbd&gt;option&lt;/kbd&gt;+&lt;kbd&gt;x&lt;/kbd&gt; to get &lt;code&gt;≈&lt;/code&gt; on a U.S. keyboard)&lt;/p&gt;
&lt;p&gt;The former version uses the default delta of 0.0001. Here is yet another way to do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;≈&lt;/span&gt; expected &lt;span class="pl-k"&gt;±&lt;/span&gt; delta
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;==&lt;/span&gt; expected &lt;span class="pl-k"&gt;±&lt;/span&gt; delta
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Type &lt;kbd&gt;option&lt;/kbd&gt;+&lt;kbd&gt;shift&lt;/kbd&gt;+&lt;kbd&gt;=&lt;/kbd&gt; to get &lt;code&gt;±&lt;/code&gt; on a U.S. keyboard)&lt;/p&gt;
&lt;p&gt;If you are comparing arrays of floating point numbers, you'll find the following useful:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-c1"&gt;0.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;]) &lt;span class="pl-k"&gt;≈&lt;/span&gt; [&lt;span class="pl-c1"&gt;0.0001&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.0001&lt;/span&gt;]
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-c1"&gt;0.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;]).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beCloseTo&lt;/span&gt;([&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.1&lt;/span&gt;], &lt;span class="pl-c1"&gt;within&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;))
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Values given to the &lt;code&gt;beCloseTo&lt;/code&gt; matcher must be coercable into a
&lt;code&gt;Double&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-typesclasses" class="anchor" aria-hidden="true" href="#typesclasses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Types/Classes&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'instance' is an instance of 'aClass':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(instance).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(aClass))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'instance' is an instance of 'aClass' or any of its subclasses:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(instance).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(aClass))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'instance' is an instance of 'aClass':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(instance).to(beAnInstanceOf(aClass));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'instance' is an instance of 'aClass' or any of its subclasses:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(instance).to(beAKindOf(aClass));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Instances must be Objective-C objects: subclasses of &lt;code&gt;NSObject&lt;/code&gt;,
or Swift objects bridged to Objective-C with the &lt;code&gt;@objc&lt;/code&gt; prefix.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example, to assert that &lt;code&gt;dolphin&lt;/code&gt; is a kind of &lt;code&gt;Mammal&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(dolphin).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(Mammal))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(dolphin).to(beAKindOf([Mammal &lt;span class="pl-c1"&gt;class&lt;/span&gt;]));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;beAnInstanceOf&lt;/code&gt; uses the &lt;code&gt;-[NSObject isMemberOfClass:]&lt;/code&gt; method to
test membership. &lt;code&gt;beAKindOf&lt;/code&gt; uses &lt;code&gt;-[NSObject isKindOfClass:]&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-truthiness" class="anchor" aria-hidden="true" href="#truthiness"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Truthiness&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is not nil, true, or an object with a boolean value of true:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTruthy&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is only true (not nil or an object conforming to Boolean true):&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTrue&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is nil, false, or an object with a boolean value of false:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beFalsy&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is only false (not nil or an object conforming to Boolean false):&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beFalse&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is nil:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beNil&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is not nil, true, or an object with a boolean value of true:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beTruthy());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is only true (not nil or an object conforming to Boolean true):&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beTrue());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is nil, false, or an object with a boolean value of false:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beFalsy());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is only false (not nil or an object conforming to Boolean false):&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beFalse());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is nil:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beNil());&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-swift-assertions" class="anchor" aria-hidden="true" href="#swift-assertions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Assertions&lt;/h2&gt;
&lt;p&gt;If you're using Swift, you can use the &lt;code&gt;throwAssertion&lt;/code&gt; matcher to check if an assertion is thrown (e.g. &lt;code&gt;fatalError()&lt;/code&gt;). This is made possible by &lt;a href="https://github.com/mattgallagher"&gt;@mattgallagher&lt;/a&gt;'s &lt;a href="https://github.com/mattgallagher/CwlPreconditionTesting"&gt;CwlPreconditionTesting&lt;/a&gt; library.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'somethingThatThrows()' throws an assertion, &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; such as by calling 'fatalError()' or if a precondition fails:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;somethingThatThrows&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwAssertion&lt;/span&gt;())
expect { () &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;fatalError&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwAssertion&lt;/span&gt;())
expect { &lt;span class="pl-c1"&gt;precondition&lt;/span&gt;(&lt;span class="pl-c1"&gt;false&lt;/span&gt;) }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwAssertion&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if throwing an NSError is not equal to throwing an assertion:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;NSError&lt;/span&gt;(&lt;span class="pl-c1"&gt;domain&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;code&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;userInfo&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) }.&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwAssertion&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if the code after the precondition check is not run:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; reachedPoint1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; reachedPoint2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
expect {
    reachedPoint1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    &lt;span class="pl-c1"&gt;precondition&lt;/span&gt;(&lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;condition message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    reachedPoint2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwAssertion&lt;/span&gt;())

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(reachedPoint1) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(reachedPoint2) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This feature is only available in Swift.&lt;/li&gt;
&lt;li&gt;It is only supported for &lt;code&gt;x86_64&lt;/code&gt; binaries, meaning &lt;em&gt;you cannot run this matcher on iOS devices, only simulators&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;The tvOS simulator is supported, but using a different mechanism, requiring you to turn off the &lt;code&gt;Debug executable&lt;/code&gt; scheme setting for your tvOS scheme's Test configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-swift-error-handling" class="anchor" aria-hidden="true" href="#swift-error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Error Handling&lt;/h2&gt;
&lt;p&gt;You can use the &lt;code&gt;throwError&lt;/code&gt; matcher to check if an error is thrown.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'somethingThatThrows()' throws an 'Error':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;somethingThatThrows&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwError&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'somethingThatThrows()' throws an error within a particular domain:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;somethingThatThrows&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(throwError { (&lt;span class="pl-c1"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;Error&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(error.&lt;span class="pl-smi"&gt;_domain&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(NSCocoaErrorDomain))
})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'somethingThatThrows()' throws a particular error enum case:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;somethingThatThrows&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwError&lt;/span&gt;(NSCocoaError.&lt;span class="pl-smi"&gt;PropertyListReadCorruptError&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'somethingThatThrows()' throws an error of a particular type:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;somethingThatThrows&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwError&lt;/span&gt;(&lt;span class="pl-c1"&gt;errorType&lt;/span&gt;: NimbleError.&lt;span class="pl-k"&gt;self&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When working directly with &lt;code&gt;Error&lt;/code&gt; values, using the &lt;code&gt;matchError&lt;/code&gt; matcher
allows you to perform certain checks on the error itself without having to
explicitly cast the error.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;matchError&lt;/code&gt; matcher allows you to check whether or not the error:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;is the same &lt;em&gt;type&lt;/em&gt; of error you are expecting.&lt;/li&gt;
&lt;li&gt;represents a particular error value that you are expecting.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This can be useful when using &lt;code&gt;Result&lt;/code&gt; or &lt;code&gt;Promise&lt;/code&gt; types, for example.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; actual&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Error&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' represents any error value from the NimbleErrorEnum type:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchError&lt;/span&gt;(NimbleErrorEnum.&lt;span class="pl-k"&gt;self&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' represents the case 'timeout' from the NimbleErrorEnum type:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchError&lt;/span&gt;(NimbleErrorEnum.&lt;span class="pl-smi"&gt;timeout&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' contains an NSError equal to the one provided:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchError&lt;/span&gt;(&lt;span class="pl-c1"&gt;NSError&lt;/span&gt;(&lt;span class="pl-c1"&gt;domain&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;err&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;code&lt;/span&gt;: &lt;span class="pl-c1"&gt;123&lt;/span&gt;, &lt;span class="pl-c1"&gt;userInfo&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: This feature is only available in Swift.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-exceptions" class="anchor" aria-hidden="true" href="#exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exceptions&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual', when evaluated, raises an exception:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception with the given name:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: name))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception with the given name and reason:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: name, &lt;span class="pl-c1"&gt;reason&lt;/span&gt;: reason))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception which passes expectations defined in the given closure:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (in this case, if the exception's name begins with "a r")&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { exception.&lt;span class="pl-c1"&gt;raise&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(raiseException { (&lt;span class="pl-c1"&gt;exception&lt;/span&gt;: NSException) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(exception.&lt;span class="pl-smi"&gt;name&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
})&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual', when evaluated, raises an exception:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(raiseException())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception with the given name&lt;/span&gt;
expect(actual).to(raiseException().named(name))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception with the given name and reason:&lt;/span&gt;
expect(actual).to(raiseException().named(name).reason(reason))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception and it passes expectations defined in the given block:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (in this case, if name begins with "a r")&lt;/span&gt;
expect(actual).to(raiseException().satisfyingBlock(^(&lt;span class="pl-c1"&gt;NSException&lt;/span&gt; *exception) {
    &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(exception.&lt;span class="pl-smi"&gt;name&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;a r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
}));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: Swift currently doesn't have exceptions (see &lt;a href="https://github.com/Quick/Nimble/issues/220#issuecomment-172667064"&gt;#220&lt;/a&gt;).
Only Objective-C code can raise exceptions that Nimble will catch.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-collection-membership" class="anchor" aria-hidden="true" href="#collection-membership"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection Membership&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if all of the expected values are members of 'actual':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(expected&lt;span class="pl-k"&gt;...&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is empty (i.e. it contains no elements):&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beEmpty&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if expected is a member of 'actual':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(contain(expected));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is empty (i.e. it contains no elements):&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beEmpty());&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;In Swift &lt;code&gt;contain&lt;/code&gt; takes any number of arguments. The expectation
passes if all of them are members of the collection. In Objective-C,
&lt;code&gt;contain&lt;/code&gt; only takes one argument &lt;a href="https://github.com/Quick/Nimble/issues/27"&gt;for now&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example, to assert that a list of sea creature names contains
"dolphin" and "starfish":&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;whale&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dolphin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dolphin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;whale&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;dolphin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]).to(contain(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;dolphin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;whale&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;dolphin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]).to(contain(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;contain&lt;/code&gt; and &lt;code&gt;beEmpty&lt;/code&gt; expect collections to be instances of
&lt;code&gt;NSArray&lt;/code&gt;, &lt;code&gt;NSSet&lt;/code&gt;, or a Swift collection composed of &lt;code&gt;Equatable&lt;/code&gt; elements.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To test whether a set of elements is present at the beginning or end of
an ordered collection, use &lt;code&gt;beginWith&lt;/code&gt; and &lt;code&gt;endWith&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if the elements in expected appear at the beginning of 'actual':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(expected&lt;span class="pl-k"&gt;...&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if the the elements in expected come at the end of 'actual':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;endWith&lt;/span&gt;(expected&lt;span class="pl-k"&gt;...&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if the elements in expected appear at the beginning of 'actual':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beginWith(expected));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if the the elements in expected come at the end of 'actual':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(endWith(expected));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;beginWith&lt;/code&gt; and &lt;code&gt;endWith&lt;/code&gt; expect collections to be instances of
&lt;code&gt;NSArray&lt;/code&gt;, or ordered Swift collections composed of &lt;code&gt;Equatable&lt;/code&gt;
elements.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Like &lt;code&gt;contain&lt;/code&gt;, in Objective-C &lt;code&gt;beginWith&lt;/code&gt; and &lt;code&gt;endWith&lt;/code&gt; only support
a single argument &lt;a href="https://github.com/Quick/Nimble/issues/27"&gt;for now&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For code that returns collections of complex objects without a strict
ordering, there is the &lt;code&gt;containElementSatisfying&lt;/code&gt; matcher:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Turtle&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; turtles&lt;span class="pl-k"&gt;:&lt;/span&gt; [Turtle] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;functionThatReturnsSomeTurtlesInAnyOrder&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This set of matchers passes regardless of whether the array is &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{color: "blue"}, {color: "green"}] or [{color: "green"}, {color: "blue"}]:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(turtles).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;containElementSatisfying&lt;/span&gt;({ turtle &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; turtle.&lt;span class="pl-c1"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;green&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(turtles).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;containElementSatisfying&lt;/span&gt;({ turtle &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; turtle.&lt;span class="pl-c1"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;blue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;that is a turtle with color 'blue'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The second matcher will incorporate the provided string in the error message&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; should it fail&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-k"&gt;@interface&lt;/span&gt; &lt;span class="pl-en"&gt;Turtle&lt;/span&gt; : &lt;span class="pl-e"&gt;NSObject&lt;/span&gt;
&lt;span class="pl-k"&gt;@property&lt;/span&gt; (&lt;span class="pl-k"&gt;nonatomic&lt;/span&gt;, &lt;span class="pl-k"&gt;readonly&lt;/span&gt;, &lt;span class="pl-k"&gt;nonnull&lt;/span&gt;) &lt;span class="pl-c1"&gt;NSString&lt;/span&gt; *color;
&lt;span class="pl-k"&gt;@end&lt;/span&gt;

&lt;span class="pl-k"&gt;@implementation&lt;/span&gt; &lt;span class="pl-en"&gt;Turtle&lt;/span&gt; 
&lt;span class="pl-k"&gt;@end&lt;/span&gt;

&lt;span class="pl-c1"&gt;NSArray&lt;/span&gt;&amp;lt;Turtle *&amp;gt; * __nonnull turtles = functionThatReturnsSomeTurtlesInAnyOrder();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This set of matchers passes regardless of whether the array is &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{color: "blue"}, {color: "green"}] or [{color: "green"}, {color: "blue"}]:&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(turtles).to(containElementSatisfying(^&lt;span class="pl-c1"&gt;BOOL&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt; __nonnull object) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [[turtle &lt;span class="pl-c1"&gt;color&lt;/span&gt;] &lt;span class="pl-c1"&gt;isEqualToString:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;green&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
}));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(turtles).to(containElementSatisfying(^&lt;span class="pl-c1"&gt;BOOL&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt; __nonnull object) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [[turtle &lt;span class="pl-c1"&gt;color&lt;/span&gt;] &lt;span class="pl-c1"&gt;isEqualToString:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;blue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
}));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-strings" class="anchor" aria-hidden="true" href="#strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strings&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' contains 'substring':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(substring))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' begins with 'prefix':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(&lt;span class="pl-k"&gt;prefix&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' ends with 'suffix':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;endWith&lt;/span&gt;(suffix))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' represents the empty string, "":&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beEmpty&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' matches the regular expression defined in 'expected':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;match&lt;/span&gt;(expected))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' contains 'substring':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(contain(expected));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' begins with 'prefix':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beginWith(prefix));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' ends with 'suffix':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(endWith(suffix));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' represents the empty string, "":&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beEmpty());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' matches the regular expression defined in 'expected':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(match(expected))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-collection-elements" class="anchor" aria-hidden="true" href="#collection-elements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection Elements&lt;/h2&gt;
&lt;p&gt;Nimble provides a means to check that all elements of a collection pass a given expectation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift" class="anchor" aria-hidden="true" href="#swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h3&gt;
&lt;p&gt;In Swift, the collection must be an instance of a type conforming to
&lt;code&gt;Sequence&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Providing a custom function:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(allPass { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; })

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Composing the expectation with another matcher:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;allPass&lt;/span&gt;(&lt;span class="pl-c1"&gt;beLessThan&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-objective-c" class="anchor" aria-hidden="true" href="#objective-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h3&gt;
&lt;p&gt;In Objective-C, the collection must be an instance of a type which implements
the &lt;code&gt;NSFastEnumeration&lt;/code&gt; protocol, and whose elements are instances of a type
which subclasses &lt;code&gt;NSObject&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Additionally, unlike in Swift, there is no override to specify a custom
matcher function.&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@[@&lt;span class="pl-c1"&gt;1&lt;/span&gt;, @&lt;span class="pl-c1"&gt;2&lt;/span&gt;, @&lt;span class="pl-c1"&gt;3&lt;/span&gt;, @&lt;span class="pl-c1"&gt;4&lt;/span&gt;]).to(allPass(beLessThan(@&lt;span class="pl-c1"&gt;5&lt;/span&gt;)));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-collection-count" class="anchor" aria-hidden="true" href="#collection-count"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection Count&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' contains the 'expected' number of elements:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;haveCount&lt;/span&gt;(expected))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' does _not_ contain the 'expected' number of elements:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;notTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;haveCount&lt;/span&gt;(expected))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' contains the 'expected' number of elements:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(haveCount(expected))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' does _not_ contain the 'expected' number of elements:&lt;/span&gt;
expect(actual).notTo(haveCount(expected))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Swift, the actual value must be an instance of a type conforming to &lt;code&gt;Collection&lt;/code&gt;.
For example, instances of &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Dictionary&lt;/code&gt;, or &lt;code&gt;Set&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For Objective-C, the actual value must be one of the following classes, or their subclasses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NSArray&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSDictionary&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSSet&lt;/code&gt;, or&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSHashTable&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-notifications" class="anchor" aria-hidden="true" href="#notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notifications&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; testNotification &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Notification&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;object&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if the closure in expect { ... } posts a notification to the default&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; notification center.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect {
    NotificationCenter.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-c1"&gt;postNotification&lt;/span&gt;(testNotification)
}.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;postNotifications&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;([testNotification]))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if the closure in expect { ... } posts a notification to a given&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; notification center&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; notificationCenter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NotificationCenter&lt;/span&gt;()
expect {
    notificationCenter.&lt;span class="pl-c1"&gt;postNotification&lt;/span&gt;(testNotification)
}.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;postNotifications&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;([testNotification]), &lt;span class="pl-c1"&gt;fromNotificationCenter&lt;/span&gt;: notificationCenter))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This matcher is only available in Swift.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-matching-a-value-to-any-of-a-group-of-matchers" class="anchor" aria-hidden="true" href="#matching-a-value-to-any-of-a-group-of-matchers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Matching a value to any of a group of matchers&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if actual is either less than 10 or greater than 20&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;satisfyAnyOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;beLessThan&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;), &lt;span class="pl-c1"&gt;beGreaterThan&lt;/span&gt;(&lt;span class="pl-c1"&gt;20&lt;/span&gt;)))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; can include any number of matchers -- the following will pass&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; **be careful** -- too many matchers can be the sign of an unfocused test&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;satisfyAnyOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;), &lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;), &lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;), &lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;), &lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;7&lt;/span&gt;)))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; in Swift you also have the option to use the || operator to achieve a similar function&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;82&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beLessThan&lt;/span&gt;(&lt;span class="pl-c1"&gt;50&lt;/span&gt;) &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-c1"&gt;beGreaterThan&lt;/span&gt;(&lt;span class="pl-c1"&gt;80&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if actual is either less than 10 or greater than 20&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(satisfyAnyOf(beLessThan(@&lt;span class="pl-c1"&gt;10&lt;/span&gt;), beGreaterThan(@&lt;span class="pl-c1"&gt;20&lt;/span&gt;)))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; can include any number of matchers -- the following will pass&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; **be careful** -- too many matchers can be the sign of an unfocused test&lt;/span&gt;
expect(@&lt;span class="pl-c1"&gt;6&lt;/span&gt;).to(satisfyAnyOf(equal(@&lt;span class="pl-c1"&gt;2&lt;/span&gt;), equal(@&lt;span class="pl-c1"&gt;3&lt;/span&gt;), equal(@&lt;span class="pl-c1"&gt;4&lt;/span&gt;), equal(@&lt;span class="pl-c1"&gt;5&lt;/span&gt;), equal(@&lt;span class="pl-c1"&gt;6&lt;/span&gt;), equal(@&lt;span class="pl-c1"&gt;7&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: This matcher allows you to chain any number of matchers together. This provides flexibility,
but if you find yourself chaining many matchers together in one test, consider whether you
could instead refactor that single test into multiple, more precisely focused tests for
better coverage.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-custom-validation" class="anchor" aria-hidden="true" href="#custom-validation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Validation&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if .succeeded is returned from the closure&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;({
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;enumCaseWithAssociatedValueThatIDontCareAbout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; actual &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-c1"&gt;failed&lt;/span&gt;(&lt;span class="pl-c1"&gt;reason&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wrong enum case&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;succeeded&lt;/span&gt;
}).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;succeed&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if .failed is returned from the closure&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;({
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;enumCaseWithAssociatedValueThatIDontCareAbout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; actual &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-c1"&gt;failed&lt;/span&gt;(&lt;span class="pl-c1"&gt;reason&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wrong enum case&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;succeeded&lt;/span&gt;
}).&lt;span class="pl-c1"&gt;notTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;succeed&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;String&lt;/code&gt; provided with &lt;code&gt;.failed()&lt;/code&gt; is shown when the test fails.&lt;/p&gt;
&lt;p&gt;When using &lt;code&gt;toEventually()&lt;/code&gt; be careful not to make state changes or run process intensive code since this closure will be ran many times.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-writing-your-own-matchers" class="anchor" aria-hidden="true" href="#writing-your-own-matchers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing Your Own Matchers&lt;/h1&gt;
&lt;p&gt;In Nimble, matchers are Swift functions that take an expected
value and return a &lt;code&gt;Predicate&lt;/code&gt; closure. Take &lt;code&gt;equal&lt;/code&gt;, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;equal&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt;&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;expectedValue&lt;/span&gt;&lt;/span&gt;: T&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;T&amp;gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Can be shortened to:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   Predicate { actual in  ... }&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; But shown with types here for clarity.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; Predicate { (&lt;span class="pl-c1"&gt;actualExpression&lt;/span&gt;: Expression&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;T&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; PredicateResult &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; msg &lt;span class="pl-k"&gt;=&lt;/span&gt; ExpectationMessage.&lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;equal &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expectedValue&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;() {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateResult&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;bool&lt;/span&gt;: actualValue &lt;span class="pl-k"&gt;==&lt;/span&gt; expectedValue&lt;span class="pl-k"&gt;!&lt;/span&gt;,
                &lt;span class="pl-c1"&gt;message&lt;/span&gt;: msg
            )
        } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateResult&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;status&lt;/span&gt;: .&lt;span class="pl-smi"&gt;fail&lt;/span&gt;,
                &lt;span class="pl-c1"&gt;message&lt;/span&gt;: msg.&lt;span class="pl-c1"&gt;appendedBeNilHint&lt;/span&gt;()
            )
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The return value of a &lt;code&gt;Predicate&lt;/code&gt; closure is a &lt;code&gt;PredicateResult&lt;/code&gt; that indicates
whether the actual value matches the expectation and what error message to
display on failure.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The actual &lt;code&gt;equal&lt;/code&gt; matcher function does not match when
&lt;code&gt;expected&lt;/code&gt; are nil; the example above has been edited for brevity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since matchers are just Swift functions, you can define them anywhere:
at the top of your test file, in a file shared by all of your tests, or
in an Xcode project you distribute to others.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you write a matcher you think everyone can use, consider adding it
to Nimble's built-in set of matchers by sending a pull request! Or
distribute it yourself via GitHub.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For examples of how to write your own matchers, just check out the
&lt;a href="https://github.com/Quick/Nimble/tree/master/Sources/Nimble/Matchers"&gt;&lt;code&gt;Matchers&lt;/code&gt; directory&lt;/a&gt;
to see how Nimble's built-in set of matchers are implemented. You can
also check out the tips below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-predicateresult" class="anchor" aria-hidden="true" href="#predicateresult"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PredicateResult&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;PredicateResult&lt;/code&gt; is the return struct that &lt;code&gt;Predicate&lt;/code&gt; return to indicate
success and failure. A &lt;code&gt;PredicateResult&lt;/code&gt; is made up of two values:
&lt;code&gt;PredicateStatus&lt;/code&gt; and &lt;code&gt;ExpectationMessage&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Instead of a boolean, &lt;code&gt;PredicateStatus&lt;/code&gt; captures a trinary set of values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PredicateStatus&lt;/span&gt; {
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The predicate "passes" with the given expression&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - expect(1).to(equal(1))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;matches&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The predicate "fails" with the given expression&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - expect(1).toNot(equal(1))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;doesNotMatch&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The predicate never "passes" with the given expression, even if negated&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - expect(nil as Int?).toNot(equal(1))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;fail&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Meanwhile, &lt;code&gt;ExpectationMessage&lt;/code&gt; provides messaging semantics for error reporting.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;indirect&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;ExpectationMessage&lt;/span&gt; {
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emits standard error message:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "expected to &amp;lt;string&amp;gt;, got &amp;lt;actual&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allows any free-form message&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "&amp;lt;string&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;fail&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Predicates should usually depend on either &lt;code&gt;.expectedActualValueTo(..)&lt;/code&gt; or
&lt;code&gt;.fail(..)&lt;/code&gt; when reporting errors. Special cases can be used for the other enum
cases.&lt;/p&gt;
&lt;p&gt;Finally, if your Predicate utilizes other Predicates, you can utilize
&lt;code&gt;.appended(details:)&lt;/code&gt; and &lt;code&gt;.appended(message:)&lt;/code&gt; methods to annotate an existing
error with more details.&lt;/p&gt;
&lt;p&gt;A common message to append is failing on nils. For that, &lt;code&gt;.appendedBeNilHint()&lt;/code&gt;
can be used.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lazy-evaluation" class="anchor" aria-hidden="true" href="#lazy-evaluation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lazy Evaluation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;actualExpression&lt;/code&gt; is a lazy, memoized closure around the value provided to the
&lt;code&gt;expect&lt;/code&gt; function. The expression can either be a closure or a value directly
passed to &lt;code&gt;expect(...)&lt;/code&gt;. In order to determine whether that value matches,
custom matchers should call &lt;code&gt;actualExpression.evaluate()&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beNil&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;T&amp;gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Predicate.simpleNilable(..) automatically generates ExpectationMessage for&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; us based on the string we provide to it. Also, the 'Nilable' postfix indicates&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; that this Predicate supports matching against nil actualExpressions, instead of&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; always resulting in a PredicateStatus.fail result -- which is true for&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Predicate.simple(..)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; Predicate.&lt;span class="pl-c1"&gt;simpleNilable&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;be nil&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { actualExpression &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;()
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateStatus&lt;/span&gt;(&lt;span class="pl-c1"&gt;bool&lt;/span&gt;: actualValue &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the above example, &lt;code&gt;actualExpression&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt; -- it is a closure
that returns a value. The value it returns, which is accessed via the
&lt;code&gt;evaluate()&lt;/code&gt; method, may be &lt;code&gt;nil&lt;/code&gt;. If that value is &lt;code&gt;nil&lt;/code&gt;, the &lt;code&gt;beNil&lt;/code&gt;
matcher function returns &lt;code&gt;true&lt;/code&gt;, indicating that the expectation passed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-type-checking-via-swift-generics" class="anchor" aria-hidden="true" href="#type-checking-via-swift-generics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Checking via Swift Generics&lt;/h2&gt;
&lt;p&gt;Using Swift's generics, matchers can constrain the type of the actual value
passed to the &lt;code&gt;expect&lt;/code&gt; function by modifying the return type.&lt;/p&gt;
&lt;p&gt;For example, the following matcher, &lt;code&gt;haveDescription&lt;/code&gt;, only accepts actual
values that implement the &lt;code&gt;Printable&lt;/code&gt; protocol. It checks their &lt;code&gt;description&lt;/code&gt;
against the one provided to the matcher function, and passes if they are the same:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;haveDescription&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;description&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;Printable&lt;span class="pl-k"&gt;?&lt;/span&gt;&amp;gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; Predicate.&lt;span class="pl-c1"&gt;simple&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;have description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { actual &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateStatus&lt;/span&gt;(&lt;span class="pl-c1"&gt;bool&lt;/span&gt;: actual.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;().&lt;span class="pl-c1"&gt;description&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; description)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-customizing-failure-messages" class="anchor" aria-hidden="true" href="#customizing-failure-messages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing Failure Messages&lt;/h2&gt;
&lt;p&gt;When using &lt;code&gt;Predicate.simple(..)&lt;/code&gt; or &lt;code&gt;Predicate.simpleNilable(..)&lt;/code&gt;, Nimble
outputs the following failure message when an expectation fails:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; where `message` is the first string argument and&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; `actual` is the actual value received in `expect(..)`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;expected to &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;message&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, got &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;actual&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can customize this message by modifying the way you create a &lt;code&gt;Predicate&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-basic-customization" class="anchor" aria-hidden="true" href="#basic-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Customization&lt;/h3&gt;
&lt;p&gt;For slightly more complex error messaging, receive the created failure message
with &lt;code&gt;Predicate.define(..)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;equal&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt;&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;expectedValue&lt;/span&gt;: T&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;T&amp;gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; Predicate.&lt;span class="pl-c1"&gt;define&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;equal &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;(expectedValue)&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { actualExpression, msg &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;()
        &lt;span class="pl-k"&gt;let&lt;/span&gt; matches &lt;span class="pl-k"&gt;=&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;==&lt;/span&gt; expectedValue &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; expectedValue &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; expectedValue &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; expectedValue &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateResult&lt;/span&gt;(
                    &lt;span class="pl-c1"&gt;status&lt;/span&gt;: .&lt;span class="pl-smi"&gt;fail&lt;/span&gt;,
                    &lt;span class="pl-c1"&gt;message&lt;/span&gt;: msg.&lt;span class="pl-c1"&gt;appendedBeNilHint&lt;/span&gt;()
                )
            }
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateResult&lt;/span&gt;(&lt;span class="pl-c1"&gt;status&lt;/span&gt;: .&lt;span class="pl-smi"&gt;fail&lt;/span&gt;, &lt;span class="pl-c1"&gt;message&lt;/span&gt;: msg)
        }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateResult&lt;/span&gt;(&lt;span class="pl-c1"&gt;bool&lt;/span&gt;: matches, &lt;span class="pl-c1"&gt;message&lt;/span&gt;: msg)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above, &lt;code&gt;msg&lt;/code&gt; is defined based on the string given to
&lt;code&gt;Predicate.define&lt;/code&gt;. The code looks akin to:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; msg &lt;span class="pl-k"&gt;=&lt;/span&gt; ExpectationMessage.&lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;equal &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;(expectedValue)&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-full-customization" class="anchor" aria-hidden="true" href="#full-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full Customization&lt;/h3&gt;
&lt;p&gt;To fully customize the behavior of the Predicate, use the overload that expects
a &lt;code&gt;PredicateResult&lt;/code&gt; to be returned.&lt;/p&gt;
&lt;p&gt;Along with &lt;code&gt;PredicateResult&lt;/code&gt;, there are other &lt;code&gt;ExpectationMessage&lt;/code&gt; enum values you can use:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;indirect&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;ExpectationMessage&lt;/span&gt; {
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emits standard error message:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "expected to &amp;lt;message&amp;gt;, got &amp;lt;actual&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allows any free-form message&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "&amp;lt;message&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;fail&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emits standard error message with a custom actual value instead of the default.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "expected to &amp;lt;message&amp;gt;, got &amp;lt;actual&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;expectedCustomValueTo&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; actual: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emits standard error message without mentioning the actual value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "expected to &amp;lt;message&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;expectedTo&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For matchers that compose other matchers, there are a handful of helper
functions to annotate messages.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;appended(message: String)&lt;/code&gt; is used to append to the original failure message:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; produces "expected to be true, got &amp;lt;actual&amp;gt; (use beFalse() for inverse)"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; appended message do show up inline in Xcode.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;be true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;appended&lt;/span&gt;(&lt;span class="pl-c1"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; (use beFalse() for inverse)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a more comprehensive message that spans multiple lines, use
&lt;code&gt;appended(details: String)&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; produces "expected to be true, got &amp;lt;actual&amp;gt;\n\nuse beFalse() for inverse\nor use beNil()"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; details do not show inline in Xcode, but do show up in test logs.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;be true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;appended&lt;/span&gt;(&lt;span class="pl-c1"&gt;details&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;use beFalse() for inverse&lt;span class="pl-cce"&gt;\n&lt;/span&gt;or use beNil()&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-supporting-objective-c" class="anchor" aria-hidden="true" href="#supporting-objective-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Objective-C&lt;/h2&gt;
&lt;p&gt;To use a custom matcher written in Swift from Objective-C, you'll have
to extend the &lt;code&gt;NMBObjCMatcher&lt;/code&gt; class, adding a new class method for your
custom matcher. The example below defines the class method
&lt;code&gt;+[NMBObjCMatcher beNilMatcher]&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;NMBObjCMatcher&lt;/span&gt; {
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beNilMatcher&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; NMBObjCMatcher {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; NMBObjCMatcher { actualBlock, failureMessage, location &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; block &lt;span class="pl-k"&gt;=&lt;/span&gt; ({ &lt;span class="pl-c1"&gt;actualBlock&lt;/span&gt;() &lt;span class="pl-k"&gt;as&lt;/span&gt; NSObject&lt;span class="pl-k"&gt;?&lt;/span&gt; })
            &lt;span class="pl-k"&gt;let&lt;/span&gt; expr &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Expression&lt;/span&gt;(&lt;span class="pl-c1"&gt;expression&lt;/span&gt;: block, &lt;span class="pl-c1"&gt;location&lt;/span&gt;: location)
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;beNil&lt;/span&gt;().&lt;span class="pl-c1"&gt;matches&lt;/span&gt;(expr, &lt;span class="pl-c1"&gt;failureMessage&lt;/span&gt;: failureMessage)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above allows you to use the matcher from Objective-C:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to([NMBObjCMatcher &lt;span class="pl-c1"&gt;beNilMatcher&lt;/span&gt;]());&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To make the syntax easier to use, define a C function that calls the
class method:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

FOUNDATION_EXPORT &lt;span class="pl-k"&gt;id&lt;/span&gt;&amp;lt;NMBMatcher&amp;gt; &lt;span class="pl-en"&gt;beNil&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [NMBObjCMatcher &lt;span class="pl-c1"&gt;beNilMatcher&lt;/span&gt;];
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-properly-handling-nil-in-objective-c-matchers" class="anchor" aria-hidden="true" href="#properly-handling-nil-in-objective-c-matchers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Properly Handling &lt;code&gt;nil&lt;/code&gt; in Objective-C Matchers&lt;/h3&gt;
&lt;p&gt;When supporting Objective-C, make sure you handle &lt;code&gt;nil&lt;/code&gt; appropriately.
Like &lt;a href="https://github.com/pivotal/cedar/issues/100"&gt;Cedar&lt;/a&gt;,
&lt;strong&gt;most matchers do not match with nil&lt;/strong&gt;. This is to bring prevent test
writers from being surprised by &lt;code&gt;nil&lt;/code&gt; values where they did not expect
them.&lt;/p&gt;
&lt;p&gt;Nimble provides the &lt;code&gt;beNil&lt;/code&gt; matcher function for test writer that want
to make expectations on &lt;code&gt;nil&lt;/code&gt; objects:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;nil&lt;/span&gt;).to(equal(&lt;span class="pl-c1"&gt;nil&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fails&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;nil&lt;/span&gt;).to(beNil());    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your matcher does not want to match with nil, you use &lt;code&gt;NonNilMatcherFunc&lt;/code&gt;
and the &lt;code&gt;canMatchNil&lt;/code&gt; constructor on &lt;code&gt;NMBObjCMatcher&lt;/code&gt;. Using both types will
automatically generate expected value failure messages when they're nil.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beginWith&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;S&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Sequence&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;T&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt; &lt;/span&gt;&lt;span class="pl-k"&gt;where&lt;/span&gt; S.&lt;span class="pl-c1"&gt;Iterator&lt;/span&gt;.&lt;span class="pl-c1"&gt;Element&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; T&amp;gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;startingElement&lt;/span&gt;&lt;/span&gt;: T) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; NonNilMatcherFunc&amp;lt;S&amp;gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; NonNilMatcherFunc { actualExpression, failureMessage &lt;span class="pl-k"&gt;in&lt;/span&gt;
        failureMessage.&lt;span class="pl-smi"&gt;postfixMessage&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;begin with &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;startingElement&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;() {
            &lt;span class="pl-k"&gt;var&lt;/span&gt; actualGenerator &lt;span class="pl-k"&gt;=&lt;/span&gt; actualValue.&lt;span class="pl-c1"&gt;makeIterator&lt;/span&gt;()
            &lt;span class="pl-k"&gt;return&lt;/span&gt; actualGenerator.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; startingElement
        }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;NMBObjCMatcher&lt;/span&gt; {
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beginWithMatcher&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;expected&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;AnyObject&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; NMBObjCMatcher {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;NMBObjCMatcher&lt;/span&gt;(&lt;span class="pl-c1"&gt;canMatchNil&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;) { actualExpression, failureMessage &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; actual &lt;span class="pl-k"&gt;=&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;()
            &lt;span class="pl-k"&gt;let&lt;/span&gt; expr &lt;span class="pl-k"&gt;=&lt;/span&gt; actualExpression.&lt;span class="pl-smi"&gt;cast&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt; &lt;span class="pl-k"&gt;as?&lt;/span&gt; NMBOrderedCollection }
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(expected).&lt;span class="pl-c1"&gt;matches&lt;/span&gt;(expr, &lt;span class="pl-c1"&gt;failureMessage&lt;/span&gt;: failureMessage)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-migrating-from-the-old-matcher-api" class="anchor" aria-hidden="true" href="#migrating-from-the-old-matcher-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrating from the Old Matcher API&lt;/h2&gt;
&lt;p&gt;Previously (&lt;code&gt;&amp;lt;7.0.0&lt;/code&gt;), Nimble supported matchers via the following types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Matcher&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NonNilMatcherFunc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MatcherFunc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of those types have been replaced by &lt;code&gt;Predicate&lt;/code&gt;. While migrating can be a
lot of work, Nimble currently provides several steps to aid migration of your
custom matchers:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-minimal-step---use-predicate" class="anchor" aria-hidden="true" href="#minimal-step---use-predicate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Minimal Step - Use &lt;code&gt;.predicate&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Nimble provides an extension to the old types that automatically naively
converts those types to the newer &lt;code&gt;Predicate&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beginWith&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;S&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Sequence&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;T&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt; &lt;/span&gt;&lt;span class="pl-k"&gt;where&lt;/span&gt; S.&lt;span class="pl-c1"&gt;Iterator&lt;/span&gt;.&lt;span class="pl-c1"&gt;Element&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; T&amp;gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;startingElement&lt;/span&gt;&lt;/span&gt;: T) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;S&amp;gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; NonNilMatcherFunc { actualExpression, failureMessage &lt;span class="pl-k"&gt;in&lt;/span&gt;
        failureMessage.&lt;span class="pl-smi"&gt;postfixMessage&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;begin with &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;startingElement&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;() {
            &lt;span class="pl-k"&gt;var&lt;/span&gt; actualGenerator &lt;span class="pl-k"&gt;=&lt;/span&gt; actualValue.&lt;span class="pl-c1"&gt;makeIterator&lt;/span&gt;()
            &lt;span class="pl-k"&gt;return&lt;/span&gt; actualGenerator.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; startingElement
        }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    }.&lt;span class="pl-smi"&gt;predicate&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is the simpliest way to externally support &lt;code&gt;Predicate&lt;/code&gt; which allows easier
composition than the old Nimble matcher interface, with minimal effort to change.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-convert-to-use-predicate-type-with-old-matcher-constructor" class="anchor" aria-hidden="true" href="#convert-to-use-predicate-type-with-old-matcher-constructor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Convert to use &lt;code&gt;Predicate&lt;/code&gt; Type with Old Matcher Constructor&lt;/h3&gt;
&lt;p&gt;The second most convenient step is to utilize special constructors that
&lt;code&gt;Predicate&lt;/code&gt; supports that closely align to the constructors of the old Nimble
matcher types.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beginWith&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;S&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Sequence&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;T&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt; &lt;/span&gt;&lt;span class="pl-k"&gt;where&lt;/span&gt; S.&lt;span class="pl-c1"&gt;Iterator&lt;/span&gt;.&lt;span class="pl-c1"&gt;Element&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; T&amp;gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;startingElement&lt;/span&gt;&lt;/span&gt;: T) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;S&amp;gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; Predicate.&lt;span class="pl-smi"&gt;fromDeprecatedClosure&lt;/span&gt; { actualExpression, failureMessage &lt;span class="pl-k"&gt;in&lt;/span&gt;
        failureMessage.&lt;span class="pl-smi"&gt;postfixMessage&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;begin with &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;startingElement&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;() {
            &lt;span class="pl-k"&gt;var&lt;/span&gt; actualGenerator &lt;span class="pl-k"&gt;=&lt;/span&gt; actualValue.&lt;span class="pl-c1"&gt;makeIterator&lt;/span&gt;()
            &lt;span class="pl-k"&gt;return&lt;/span&gt; actualGenerator.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; startingElement
        }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allows you to completely drop the old types from your code, although the
intended behavior may alter slightly to what is desired.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-convert-to-predicate-type-with-preferred-constructor" class="anchor" aria-hidden="true" href="#convert-to-predicate-type-with-preferred-constructor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Convert to &lt;code&gt;Predicate&lt;/code&gt; Type with Preferred Constructor&lt;/h3&gt;
&lt;p&gt;Finally, you can convert to the native &lt;code&gt;Predicate&lt;/code&gt; format using one of the
constructors not used to assist in the migration.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deprecation-roadmap" class="anchor" aria-hidden="true" href="#deprecation-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deprecation Roadmap&lt;/h3&gt;
&lt;p&gt;Nimble 7 introduces &lt;code&gt;Predicate&lt;/code&gt; but will support the old types with warning
deprecations. A couple major releases of Nimble will remain backwards
compatible with the old matcher api, although new features may not be
backported.&lt;/p&gt;
&lt;p&gt;The deprecating plan is a 3 major versions removal. Which is as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Introduce new &lt;code&gt;Predicate&lt;/code&gt; API, deprecation warning for old matcher APIs.
(Nimble &lt;code&gt;v7.x.x&lt;/code&gt;, &lt;code&gt;v8.x.x&lt;/code&gt; and &lt;code&gt;v9.x.x&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Introduce warnings on migration-path features (&lt;code&gt;.predicate&lt;/code&gt;,
&lt;code&gt;Predicate&lt;/code&gt;-constructors with similar arguments to old API). (Nimble
&lt;code&gt;v10.x.x&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Remove old API. (Nimble &lt;code&gt;v11.x.x&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-installing-nimble" class="anchor" aria-hidden="true" href="#installing-nimble"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Nimble&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Nimble can be used on its own, or in conjunction with its sister
project, &lt;a href="https://github.com/Quick/Quick"&gt;Quick&lt;/a&gt;. To install both
Quick and Nimble, follow &lt;a href="https://github.com/Quick/Quick/blob/master/Documentation/en-us/InstallingQuick.md"&gt;the installation instructions in the Quick
Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nimble can currently be installed in one of two ways: using CocoaPods, or with
git submodules.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-nimble-as-a-submodule" class="anchor" aria-hidden="true" href="#installing-nimble-as-a-submodule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Nimble as a Submodule&lt;/h2&gt;
&lt;p&gt;To use Nimble as a submodule to test your macOS, iOS or tvOS applications, follow
these 4 easy steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone the Nimble repository&lt;/li&gt;
&lt;li&gt;Add Nimble.xcodeproj to the Xcode workspace for your project&lt;/li&gt;
&lt;li&gt;Link Nimble.framework to your test target&lt;/li&gt;
&lt;li&gt;Start writing expectations!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For more detailed instructions on each of these steps,
read &lt;a href="https://github.com/Quick/Quick#how-to-install-quick"&gt;How to Install Quick&lt;/a&gt;.
Ignore the steps involving adding Quick to your project in order to
install just Nimble.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-nimble-via-cocoapods" class="anchor" aria-hidden="true" href="#installing-nimble-via-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Nimble via CocoaPods&lt;/h2&gt;
&lt;p&gt;To use Nimble in CocoaPods to test your macOS, iOS or tvOS applications, add
Nimble to your podfile and add the &lt;code&gt;use_frameworks!&lt;/code&gt; line to enable Swift
support for CocoaPods.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Whatever pods you need for your app go here&lt;/span&gt;

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YOUR_APP_NAME_HERE_Tests&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:exclusive&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  use_frameworks!
  pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Nimble&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 6.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-nimble-via-accio" class="anchor" aria-hidden="true" href="#installing-nimble-via-accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Nimble via Accio&lt;/h2&gt;
&lt;p&gt;Add the following to your Package.swift:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Quick/Nimble.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;8.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, add &lt;code&gt;Nimble&lt;/code&gt; to your App targets dependencies like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;testTarget&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AppTests&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nimble&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    ]
),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;accio update&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-nimble-without-xctest" class="anchor" aria-hidden="true" href="#using-nimble-without-xctest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Nimble without XCTest&lt;/h2&gt;
&lt;p&gt;Nimble is integrated with XCTest to allow it work well when used in Xcode test
bundles, however it can also be used in a standalone app. After installing
Nimble using one of the above methods, there are two additional steps required
to make this work.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a custom assertion handler and assign an instance of it to the
global &lt;code&gt;NimbleAssertionHandler&lt;/code&gt; variable. For example:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyAssertionHandler&lt;/span&gt; : &lt;span class="pl-e"&gt;AssertionHandler &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;assert&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;assertion&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;message&lt;/span&gt;&lt;/span&gt;: FailureMessage, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;location&lt;/span&gt;&lt;/span&gt;: SourceLocation) {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;assertion) {
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Expectation failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;message.&lt;span class="pl-c1"&gt;stringValue&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Somewhere before you use any assertions&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;NimbleAssertionHandler &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyAssertionHandler&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Add a post-build action to fix an issue with the Swift XCTest support
library being unnecessarily copied into your app&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Edit your scheme in Xcode, and navigate to Build -&amp;gt; Post-actions&lt;/li&gt;
&lt;li&gt;Click the "+" icon and select "New Run Script Action"&lt;/li&gt;
&lt;li&gt;Open the "Provide build settings from" dropdown and select your target&lt;/li&gt;
&lt;li&gt;Enter the following script contents:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;rm "${SWIFT_STDLIB_TOOL_DESTINATION_DIR}/libswiftXCTest.dylib"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can now use Nimble assertions in your code and handle failures as you see
fit.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Quick</author><guid isPermaLink="false">https://github.com/Quick/Nimble</guid><pubDate>Fri, 10 Jan 2020 00:20:00 GMT</pubDate></item><item><title>jonkykong/SideMenu #21 in Swift, Today</title><link>https://github.com/jonkykong/SideMenu</link><description>&lt;p&gt;&lt;i&gt;Simple side/slide menu control for iOS, no code necessary! Lots of customization. Add it to your project in 5 minutes or less.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--sidemenu" class="anchor" aria-hidden="true" href="#-sidemenu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;▤ SideMenu&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/jonkykong/SideMenu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ff6527970f9858d2e0c9225002cef4291310e41e/68747470733a2f2f636972636c6563692e636f6d2f67682f6a6f6e6b796b6f6e672f536964654d656e752e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/jonkykong/SideMenu.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/SideMenu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/76995976b159deaff5183d7a0b00ee4a762e55f3/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f536964654d656e752e7376673f7374796c653d666c61742d737175617265" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/SideMenu.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3192219757eff6dc3d9b5670d4afd942df1f9b65/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c61742d737175617265" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/SideMenu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e671bbe068c251af33647f7386bd3504483858c/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f536964654d656e752e7376673f7374796c653d666c61742d737175617265" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/SideMenu.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/SideMenu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a2f3bfbb817de6cc8c07ff50d09c86e6c1bbf9dd/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f536964654d656e752e7376673f7374796c653d666c61742d737175617265" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/SideMenu.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-if-you-like-sidemenu-give-it-a--at-the-top-right-of-this-page" class="anchor" aria-hidden="true" href="#if-you-like-sidemenu-give-it-a--at-the-top-right-of-this-page"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If you like SideMenu, give it a ★ at the top right of this page.&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sidemenu-needs-your-help-if-youre-a-skilled-ios-developer-and-want-to-help-maintain-this-repository-and-answer-issues-asked-by-the-community-please-send-me-an-email" class="anchor" aria-hidden="true" href="#sidemenu-needs-your-help-if-youre-a-skilled-ios-developer-and-want-to-help-maintain-this-repository-and-answer-issues-asked-by-the-community-please-send-me-an-email"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenu needs your help! If you're a skilled iOS developer and want to help maintain this repository and answer issues asked by the community, please &lt;a href="mailto:yo@massappeal.co?subject=I%20Want%20To%20Help!"&gt;send me an email&lt;/a&gt;.&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi, I'm Jon Kent and I am an iOS designer, developer, and mobile strategist. I love coffee and play the drums.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="mailto:yo@massappeal.co?subject=Let's%20build%20something%20amazing"&gt;&lt;strong&gt;Hire me&lt;/strong&gt;&lt;/a&gt; to help you make cool stuff. &lt;em&gt;Note: If you're having a problem with SideMenu, please open an &lt;a href="https://github.com/jonkykong/SideMenu/issues/new"&gt;issue&lt;/a&gt; and do not email me.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Check out my &lt;a href="http://massappeal.co" rel="nofollow"&gt;website&lt;/a&gt; to see some of my other projects.&lt;/li&gt;
&lt;li&gt;Building and maintaining this &lt;strong&gt;free&lt;/strong&gt; library takes a lot of my time and &lt;strong&gt;saves you time&lt;/strong&gt;. Please consider paying it forward by supporting me with a small amount to my &lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=contact%40jonkent%2eme&amp;amp;lc=US&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted" rel="nofollow"&gt;PayPal&lt;/a&gt;. (only &lt;strong&gt;13&lt;/strong&gt; people have donated since 12/23/15 but &lt;strong&gt;thank you&lt;/strong&gt; to those who have!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#preview-samples"&gt;Preview Samples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cocoapods"&gt;CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#carthage"&gt;Carthage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-package-manager"&gt;Swift Package Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#code-less-storyboard-implementation"&gt;Code-less Storyboard Implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-implementation"&gt;Code Implementation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#customization"&gt;Customization&lt;/a&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sidemenumanager"&gt;SideMenuManager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sidemenunavigationcontroller"&gt;SideMenuNavigationController&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sidemenunavigationcontrollerdelegate"&gt;SideMenuNavigationControllerDelegate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced"&gt;Advanced&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#known-issues"&gt;Known Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thank-you"&gt;Thank You&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;SideMenu is a simple and versatile side menu control written in Swift.&lt;/p&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;It can be implemented in storyboard without a single line of &lt;a href="#code-less-storyboard-implementation"&gt;code&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Eight standard animation styles to choose from (there's even a parallax effect if you want to get weird).&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Highly customizable without needing to write tons of custom code.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports continuous swiping between side menus on boths sides in a single gesture.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Global menu configuration. Set-up once and be done for all screens.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Menus can be presented and dismissed the same as any other view controller since this control uses &lt;a href="https://developer.apple.com/library/content/featuredarticles/ViewControllerPGforiPhoneOS/CustomizingtheTransitionAnimations.html" rel="nofollow"&gt;custom transitions&lt;/a&gt;.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Animations use your view controllers, not snapshots.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Properly handles screen rotation and in-call status bar height changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check out the example project to see it in action!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-preview-samples" class="anchor" aria-hidden="true" href="#preview-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preview Samples&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Slide Out&lt;/th&gt;
&lt;th&gt;Slide In&lt;/th&gt;
&lt;th&gt;Dissolve&lt;/th&gt;
&lt;th&gt;Slide In + Out&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/SlideOut.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/SlideOut.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/SlideIn.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/SlideIn.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Dissolve.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Dissolve.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/InOut.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/InOut.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Xcode 11.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Swift 5.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; iOS 10 or higher.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. You can install it with the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gem install cocoapods&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate SideMenu into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;10.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SideMenu&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For Swift 5 use:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; pod 'SideMenu', '~&amp;gt; 6.0'&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For Swift 4.2 (no longer maintained) use:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; pod 'SideMenu', '~&amp;gt; 5.0'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.&lt;/p&gt;
&lt;p&gt;You can install Carthage with &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate SideMenu into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "jonkykong/SideMenu" "master"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler. It is in early development, but SideMenu does support its use on supported platforms.&lt;/p&gt;
&lt;p&gt;Once you have your Swift package set up, adding SideMenu as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/jonkykong/SideMenu.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;6.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-code-less-storyboard-implementation" class="anchor" aria-hidden="true" href="#code-less-storyboard-implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code-less Storyboard Implementation&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a Navigation Controller for a side menu. Set the &lt;code&gt;Custom Class&lt;/code&gt; of the Navigation Controller to be &lt;code&gt;SideMenuNavigationController&lt;/code&gt; in the &lt;strong&gt;Identity Inspector&lt;/strong&gt;. Set the &lt;code&gt;Module&lt;/code&gt; to &lt;code&gt;SideMenu&lt;/code&gt; (ignore this step if you've manually added SideMenu to your project). Create a Root View Controller for the Navigation Controller (shown as a UITableViewController below). Set up any Triggered Segues you want in that view controller.
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot1.png"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the &lt;code&gt;Left Side&lt;/code&gt; property of the &lt;code&gt;SideMenuNavigationController&lt;/code&gt; to On if you want it to appear from the left side of the screen, or Off/Default if you want it to appear from the right side.
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot2.png"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add a UIButton or UIBarButton to a view controller that you want to display the menu from. Set that button's Triggered Segues action to modally present the Navigation Controller from step 1.
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot3.png"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot3.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's it. &lt;em&gt;Note: you can only enable gestures in code.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-code-implementation" class="anchor" aria-hidden="true" href="#code-implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Implementation&lt;/h3&gt;
&lt;p&gt;First:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SideMenu&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From a button, do something like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define the menu&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; menu &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SideMenuNavigationController&lt;/span&gt;(&lt;span class="pl-c1"&gt;rootViewController&lt;/span&gt;: YourViewController)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SideMenuNavigationController is a subclass of UINavigationController, so do any additional configuration &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; of it here like setting its viewControllers. If you're using storyboards, you'll want to do something like:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; let menu = storyboard!.instantiateViewController(withIdentifier: "RightMenu") as! SideMenuNavigationController&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;present&lt;/span&gt;(menu, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To dismiss a menu programmatically, do something like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;dismiss&lt;/span&gt;(&lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use gestures you have to use the &lt;code&gt;SideMenuManager&lt;/code&gt;. In your &lt;code&gt;AppDelegate&lt;/code&gt; do something like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define the menus&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; leftMenuNavigationController &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SideMenuNavigationController&lt;/span&gt;(&lt;span class="pl-c1"&gt;rootViewController&lt;/span&gt;: YourViewController)
SideMenuManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-smi"&gt;leftMenuNavigationController&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; leftMenuNavigationController

&lt;span class="pl-k"&gt;let&lt;/span&gt; rightMenuNavigationController &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SideMenuNavigationController&lt;/span&gt;(&lt;span class="pl-c1"&gt;rootViewController&lt;/span&gt;: YourViewController)
SideMenuManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-smi"&gt;rightMenuNavigationController&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rightMenuNavigationController

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Setup gestures: the left and/or right menus must be set up (above) for these to work.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note that these continue to work on the Navigation Controller independent of the view controller it displays!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;SideMenuManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-c1"&gt;addPanGestureToPresent&lt;/span&gt;(&lt;span class="pl-c1"&gt;toView&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;navigationController&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;.&lt;span class="pl-smi"&gt;navigationBar&lt;/span&gt;)
SideMenuManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-c1"&gt;addScreenEdgePanGesturesToPresent&lt;/span&gt;(&lt;span class="pl-c1"&gt;toView&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;navigationController&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;.&lt;span class="pl-c1"&gt;view&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (Optional) Prevent status bar area from turning black when menu appears:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;leftMenuNavigationController.&lt;span class="pl-smi"&gt;statusBarEndAlpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Copy all settings to the other menu&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;rightMenuNavigationController.&lt;span class="pl-smi"&gt;settings&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; leftMenuNavigationController.&lt;span class="pl-smi"&gt;settings&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sidemenumanager" class="anchor" aria-hidden="true" href="#sidemenumanager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenuManager&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;SideMenuManager&lt;/code&gt; supports the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The left menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;open&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; leftMenuNavigationController&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuNavigationController&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The right menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; rightMenuNavigationController&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuNavigationController&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; Adds screen edge gestures for both left and right sides to a view to present a menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Parameter toView: The view to add gestures to.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Returns: The array of screen edge gestures added to `toView`.&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;@discardableResult&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;addScreenEdgePanGesturesToPresent&lt;/span&gt;(&lt;span class="pl-en"&gt;toView&lt;/span&gt; &lt;span class="pl-smi"&gt;view&lt;/span&gt;: UIView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [UIScreenEdgePanGestureRecognizer]
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; Adds screen edge gestures to a view to present a menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Parameter toView: The view to add gestures to.&lt;/span&gt;
&lt;span class="pl-c"&gt; - Parameter forMenu: The menu (left or right) you want to add a gesture for.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Returns: The screen edge gestures added to `toView`.&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;@discardableResult&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;addScreenEdgePanGesturesToPresent&lt;/span&gt;(&lt;span class="pl-en"&gt;toView&lt;/span&gt; &lt;span class="pl-smi"&gt;view&lt;/span&gt;: UIView, &lt;span class="pl-en"&gt;forMenu&lt;/span&gt; &lt;span class="pl-smi"&gt;side&lt;/span&gt;: PresentDirection) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UIScreenEdgePanGestureRecognizer
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; Adds a pan edge gesture to a view to present menus.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Parameter toView: The view to add a pan gesture to.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Returns: The pan gesture added to `toView`.&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;@discardableResult&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;addPanGestureToPresent&lt;/span&gt;(&lt;span class="pl-en"&gt;toView&lt;/span&gt; &lt;span class="pl-smi"&gt;view&lt;/span&gt;: UIView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UIPanGestureRecognizer&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-sidemenunavigationcontroller" class="anchor" aria-hidden="true" href="#sidemenunavigationcontroller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenuNavigationController&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;SideMenuNavigationController&lt;/code&gt; supports the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Prevents the same view controller (or a view controller of the same class) from being pushed more than once. Defaults to true.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; allowPushOfSameClassTwice&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Forces menus to always animate when appearing or disappearing, regardless of a pushed view controller's animation.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; alwaysAnimate&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The animation options when a menu is displayed. Ignored when displayed with a gesture.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; animationOptions&lt;span class="pl-k"&gt;:&lt;/span&gt; UIView.&lt;span class="pl-smi"&gt;AnimationOptions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;curveEaseInOut&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; The blur effect style of the menu if the menu's root view controller is a UITableViewController or UICollectionViewController.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Note: If you want cells in a UITableViewController menu to show vibrancy, make them a subclass of UITableViewVibrantCell.&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; blurEffectStyle&lt;span class="pl-k"&gt;:&lt;/span&gt; UIBlurEffect.&lt;span class="pl-smi"&gt;Style&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Duration of the remaining animation when the menu is partially dismissed with gestures. Default is 0.35 seconds.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; completeGestureDuration&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.35&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Animation curve of the remaining animation when the menu is partially dismissed with gestures. Default is .easeIn.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; completionCurve&lt;span class="pl-k"&gt;:&lt;/span&gt; UIView.&lt;span class="pl-smi"&gt;AnimationCurve&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;curveEaseInOut&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Duration of the animation when the menu is dismissed without gestures. Default is 0.35 seconds.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; dismissDuration&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.35&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Automatically dismisses the menu when another view is presented from it.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; dismissOnPresent&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Automatically dismisses the menu when another view controller is pushed from it.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; dismissOnPush&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Automatically dismisses the menu when the screen is rotated.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; dismissOnRotation&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Automatically dismisses the menu when app goes to the background.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; dismissWhenBackgrounded&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Enable or disable a swipe gesture that dismisses the menu. Will not be triggered when `presentingViewControllerUserInteractionEnabled` is set to true. Default is true.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; enableSwipeToDismissGesture&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Enable or disable a tap gesture that dismisses the menu. Will not be triggered when `presentingViewControllerUserInteractionEnabled` is set to true. Default is true.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; enableTapToDismissGesture&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The animation initial spring velocity when a menu is displayed. Ignored when displayed with a gesture.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; initialSpringVelocity&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Whether the menu appears on the right or left side of the screen. Right is the default. This property cannot be changed after the menu has loaded.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; leftSide&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Width of the menu when presented on screen, showing the existing view controller in the remaining space. Default is zero.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; menuWidth&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;240&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Duration of the animation when the menu is presented without gestures. Default is 0.35 seconds.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; presentDuration&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.35&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Enable or disable interaction with the presenting view controller while the menu is displayed. Enabling may make it difficult to dismiss the menu or cause exceptions if the user tries to present and already presented menu. `presentingViewControllerUseSnapshot` must also set to false. Default is false.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; presentingViewControllerUserInteractionEnabled&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Use a snapshot for the presenting vierw controller while the menu is displayed. Useful when layout changes occur during transitions. Not recommended for apps that support rotation. Default is false.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; presentingViewControllerUseSnapshot&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The presentation style of the menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; presentationStyle&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;viewSlideOut&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; The push style of the menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; There are six modes in MenuPushStyle:&lt;/span&gt;
&lt;span class="pl-c"&gt; - defaultBehavior: The view controller is pushed onto the stack.&lt;/span&gt;
&lt;span class="pl-c"&gt; - popWhenPossible: If a view controller already in the stack is of the same class as the pushed view controller, the stack is instead popped back to the existing view controller. This behavior can help users from getting lost in a deep navigation stack.&lt;/span&gt;
&lt;span class="pl-c"&gt; - preserve: If a view controller already in the stack is of the same class as the pushed view controller, the existing view controller is pushed to the end of the stack. This behavior is similar to a UITabBarController.&lt;/span&gt;
&lt;span class="pl-c"&gt; - preserveAndHideBackButton: Same as .preserve and back buttons are automatically hidden.&lt;/span&gt;
&lt;span class="pl-c"&gt; - replace: Any existing view controllers are released from the stack and replaced with the pushed view controller. Back buttons are automatically hidden. This behavior is ideal if view controllers require a lot of memory or their state doesn't need to be preserved..&lt;/span&gt;
&lt;span class="pl-c"&gt; - subMenu: Unlike all other behaviors that push using the menu's presentingViewController, this behavior pushes view controllers within the menu.  Use this behavior if you want to display a sub menu.&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; pushStyle&lt;span class="pl-k"&gt;:&lt;/span&gt; MenuPushStyle &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;default&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Draws `presentationStyle.backgroundColor` behind the status bar. Default is 1.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; statusBarEndAlpha&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The animation spring damping when a menu is displayed. Ignored when displayed with a gesture.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; usingSpringWithDamping&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Indicates if the menu is anywhere in the view hierarchy, even if covered by another view controller.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; isHidden&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-sidemenupresentstyle" class="anchor" aria-hidden="true" href="#sidemenupresentstyle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenuPresentStyle&lt;/h4&gt;
&lt;p&gt;There are 8 pre-defined &lt;code&gt;SideMenuPresentStyle&lt;/code&gt; options:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Menu slides in over the existing view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; menuSlideIn&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out to reveal the menu underneath.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOut&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out while the menu slides in.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOutMenuIn&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The menu dissolves in over the existing view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; menuDissolveIn&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out while the menu partially slides in.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOutMenuPartialIn&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out while the menu slides out from under it.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOutMenuOut&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out while the menu partially slides out from under it.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOutMenuPartialOut&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out and shrinks to reveal the menu underneath.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOutMenuZoom&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-sidemenunavigationcontrollerdelegate" class="anchor" aria-hidden="true" href="#sidemenunavigationcontrollerdelegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenuNavigationControllerDelegate&lt;/h4&gt;
&lt;p&gt;To receive notifications when a menu is displayed from a view controller, have it adhere to the  &lt;code&gt;SideMenuNavigationControllerDelegate&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;MyViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;SideMenuNavigationControllerDelegate &lt;/span&gt;{

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;sideMenuWillAppear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;menu&lt;/span&gt;&lt;/span&gt;: SideMenuNavigationController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SideMenu Appearing! (animated: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;animated&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;sideMenuDidAppear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;menu&lt;/span&gt;&lt;/span&gt;: SideMenuNavigationController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SideMenu Appeared! (animated: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;animated&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;sideMenuWillDisappear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;menu&lt;/span&gt;&lt;/span&gt;: SideMenuNavigationController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SideMenu Disappearing! (animated: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;animated&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;sideMenuDidDisappear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;menu&lt;/span&gt;&lt;/span&gt;: SideMenuNavigationController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SideMenu Disappeared! (animated: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;animated&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note: setting the  &lt;code&gt;sideMenuDelegate&lt;/code&gt; property on &lt;code&gt;SideMenuNavigationController&lt;/code&gt; is optional. If your view controller adheres to the protocol then the methods will be called automatically.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced" class="anchor" aria-hidden="true" href="#advanced"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;Click for Details&lt;/summary&gt;
&lt;h4&gt;&lt;a id="user-content-multiple-sidemenumanagers" class="anchor" aria-hidden="true" href="#multiple-sidemenumanagers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple SideMenuManagers&lt;/h4&gt;
&lt;p&gt;For simplicity, &lt;code&gt;SideMenuManager.default&lt;/code&gt; serves as the primary instance as most projects will only need one menu across all screens. If you need to show a different SideMenu using gestures, such as from a modal view controller presented from a previous SideMenu, do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Declare a variable containing your custom &lt;code&gt;SideMenuManager&lt;/code&gt; instance. You may want it to define it globally and configure it in your app delegate if menus will be used on multiple screens.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; customSideMenuManager &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SideMenuManager&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Setup and display menus with your custom instance the same as you would with the  &lt;code&gt;SideMenuManager.default&lt;/code&gt; instance.&lt;/li&gt;
&lt;li&gt;If using Storyboards, subclass your instance of &lt;code&gt;SideMenuNavigationController&lt;/code&gt; and set its &lt;code&gt;sideMenuManager&lt;/code&gt; property to your custom instance. This must be done before &lt;code&gt;viewDidLoad&lt;/code&gt; is called:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MySideMenuNavigationController&lt;/span&gt;: &lt;span class="pl-e"&gt;SideMenuNavigationController &lt;/span&gt;{

    &lt;span class="pl-k"&gt;let&lt;/span&gt; customSideMenuManager &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SideMenuManager&lt;/span&gt;()

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;awakeFromNib&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;awakeFromNib&lt;/span&gt;()

        sideMenuManager &lt;span class="pl-k"&gt;=&lt;/span&gt; customSideMenuManager
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, you can set  &lt;code&gt;sideMenuManager&lt;/code&gt; from the view controller that segues to your SideMenuNavigationController:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;prepare&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;segue&lt;/span&gt;: UIStoryboardSegue, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;sender&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Any&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; sideMenuNavigationController &lt;span class="pl-k"&gt;=&lt;/span&gt; segue.&lt;span class="pl-smi"&gt;destination&lt;/span&gt; &lt;span class="pl-k"&gt;as?&lt;/span&gt; SideMenuNavigationController {
        sideMenuNavigationController.&lt;span class="pl-smi"&gt;sideMenuManager&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; customSideMenuManager
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Important: displaying SideMenu instances directly over each other is not supported. Use &lt;code&gt;menuPushStyle = .subMenu&lt;/code&gt; to display multi-level menus instead.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sidemenupresentationstyle" class="anchor" aria-hidden="true" href="#sidemenupresentationstyle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenuPresentationStyle&lt;/h3&gt;
&lt;p&gt;If you want to create your own custom presentation style, create a subclass of &lt;code&gt;SideMenuPresentationStyle&lt;/code&gt; and set your menu's &lt;code&gt;presentationStyle&lt;/code&gt; to it:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyPresentStyle&lt;/span&gt;: &lt;span class="pl-e"&gt;SideMenuPresentationStyle &lt;/span&gt;{

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;()
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Background color behind the views and status bar color&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        backgroundColor &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;black&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The starting alpha value of the menu before it appears&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        menuStartAlpha &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Whether or not the menu is on top. If false, the presenting view is on top. Shadows are applied to the view on top.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        menuOnTop &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The amount the menu is translated along the x-axis. Zero is stationary, negative values are off-screen, positive values are on screen.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        menuTranslateFactor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The amount the menu is scaled. Less than one shrinks the view, larger than one grows the view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        menuScaleFactor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The color of the shadow applied to the top most view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        onTopShadowColor &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;black&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The radius of the shadow applied to the top most view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        onTopShadowRadius &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The opacity of the shadow applied to the top most view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        onTopShadowOpacity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The offset of the shadow applied to the top most view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        onTopShadowOffset &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;zero&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The ending alpha of the presenting view when the menu is fully displayed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        presentingEndAlpha &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The amount the presenting view is translated along the x-axis. Zero is stationary, negative values are off-screen, positive values are on screen.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        presentingTranslateFactor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The amount the presenting view is scaled. Less than one shrinks the view, larger than one grows the view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        presentingScaleFactor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The strength of the parallax effect on the presenting view once the menu is displayed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        presentingParallaxStrength &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;zero&lt;/span&gt;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called just before the presentation transition begins. Use this to setup any animations. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;presentationTransitionWillBegin&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController) {}
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called during the presentation animation. Use this to animate anything alongside the menu animation. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;presentationTransition&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController) {}
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called when the presentation transition ends. Use this to finish any animations. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;presentationTransitionDidEnd&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;completed&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {}
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called just before the dismissal transition begins. Use this to setup any animations. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;dismissalTransitionWillBegin&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController) {}
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called during the dismissal animation. Use this to animate anything alongside the menu animation. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;dismissalTransition&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController) {}
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called when the dismissal transition ends. Use this to finish any animations. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;dismissalTransitionDidEnd&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;completed&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {}
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Issues&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Issue &lt;a href="https://github.com/jonkykong/SideMenu/issues/258"&gt;#258&lt;/a&gt;. Using &lt;code&gt;presentingViewControllerUseSnapshot&lt;/code&gt; can help preserve the experience.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-thank-you" class="anchor" aria-hidden="true" href="#thank-you"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thank You&lt;/h2&gt;
&lt;p&gt;A special thank you to everyone that has &lt;a href="https://github.com/jonkykong/SideMenu/graphs/contributors"&gt;contributed&lt;/a&gt; to this library to make it better. Your support is appreciated!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;SideMenu is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jonkykong</author><guid isPermaLink="false">https://github.com/jonkykong/SideMenu</guid><pubDate>Fri, 10 Jan 2020 00:21:00 GMT</pubDate></item><item><title>RxSwiftCommunity/RxDataSources #22 in Swift, Today</title><link>https://github.com/RxSwiftCommunity/RxDataSources</link><description>&lt;p&gt;&lt;i&gt;UITableView and UICollectionView Data Sources for RxSwift (sections, animated updates, editing ...)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/RxSwiftCommunity/RxDataSources" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a429cbc2966f3bdacdf4b729207539869488220f/68747470733a2f2f7472617669732d63692e6f72672f52785377696674436f6d6d756e6974792f527844617461536f75726365732e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://travis-ci.org/RxSwiftCommunity/RxDataSources.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-and-collection-view-data-sources" class="anchor" aria-hidden="true" href="#table-and-collection-view-data-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table and Collection view data sources&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;O(N)&lt;/strong&gt; algorithm for calculating differences
&lt;ul&gt;
&lt;li&gt;the algorithm has the assumption that all sections and items are unique so there is no ambiguity&lt;/li&gt;
&lt;li&gt;in case there is ambiguity, fallbacks automagically on non animated refresh&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; it applies additional heuristics to send the least number of commands to sectioned view
&lt;ul&gt;
&lt;li&gt;even though the running time is linear, preferred number of sent commands is usually a lot less than linear&lt;/li&gt;
&lt;li&gt;it is preferred (and possible) to cap the number of changes to some small number, and in case the number of changes grows towards linear, just do normal reload&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports &lt;strong&gt;extending your item and section structures&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;just extend your item with &lt;code&gt;IdentifiableType&lt;/code&gt; and &lt;code&gt;Equatable&lt;/code&gt;, and your section with &lt;code&gt;AnimatableSectionModelType&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports all combinations of two level hierarchical animations for &lt;strong&gt;both sections and items&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Section animations: Insert, Delete, Move&lt;/li&gt;
&lt;li&gt;Item animations: Insert, Delete, Move, Reload (if old value is not equal to new value)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Configurable animation types for &lt;code&gt;Insert&lt;/code&gt;, &lt;code&gt;Reload&lt;/code&gt; and &lt;code&gt;Delete&lt;/code&gt; (Automatic, Fade, ...)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Example app&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Randomized stress tests (example app)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports editing out of the box (example app)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Works with &lt;code&gt;UITableView&lt;/code&gt; and &lt;code&gt;UICollectionView&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why&lt;/h2&gt;
&lt;p&gt;Writing table and collection view data sources is tedious. There is a large number of delegate methods that need to be implemented for the simplest case possible.&lt;/p&gt;
&lt;p&gt;RxSwift helps alleviate some of the burden with a simple data binding mechanism:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Turn your data into an Observable sequence&lt;/li&gt;
&lt;li&gt;Bind the data to the tableView/collectionView using one of:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rx.items(dataSource:protocol&amp;lt;RxTableViewDataSourceType, UITableViewDataSource&amp;gt;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rx.items(cellIdentifier:String)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rx.items(cellIdentifier:String:Cell.Type:_:)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rx.items(_:_:)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; Observable&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;[&lt;span class="pl-c1"&gt;String&lt;/span&gt;]&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;just&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first element&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;second element&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;third element&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

data.&lt;span class="pl-c1"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: tableView.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;items&lt;/span&gt;(&lt;span class="pl-c1"&gt;cellIdentifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) { index, model, cell &lt;span class="pl-k"&gt;in&lt;/span&gt;
  cell.&lt;span class="pl-smi"&gt;textLabel&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; model
}
.&lt;span class="pl-c1"&gt;disposed&lt;/span&gt;(&lt;span class="pl-c1"&gt;by&lt;/span&gt;: disposeBag)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This works well with simple data sets but does not handle cases where you need to bind complex data sets with multiples sections, or when you need to perform animations when adding/modifying/deleting items.&lt;/p&gt;
&lt;p&gt;These are precisely the use cases that RxDataSources helps solve.&lt;/p&gt;
&lt;p&gt;With RxDataSources, it is super easy to just write&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataSource &lt;span class="pl-k"&gt;=&lt;/span&gt; RxTableViewSectionedReloadDataSource&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;SectionModel&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;configureCell&lt;/span&gt;: configureCell)
Observable.&lt;span class="pl-c1"&gt;just&lt;/span&gt;([&lt;span class="pl-c1"&gt;SectionModel&lt;/span&gt;(&lt;span class="pl-c1"&gt;model&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;items&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])])
    .&lt;span class="pl-c1"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: tableView.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;items&lt;/span&gt;(&lt;span class="pl-c1"&gt;dataSource&lt;/span&gt;: dataSource))
    .&lt;span class="pl-c1"&gt;disposed&lt;/span&gt;(&lt;span class="pl-c1"&gt;by&lt;/span&gt;: disposeBag)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kzaher/rxswiftcontent/rxdatasources/RxDataSources.gif"&gt;&lt;img src="https://raw.githubusercontent.com/kzaher/rxswiftcontent/rxdatasources/RxDataSources.gif" alt="RxDataSources example app" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how" class="anchor" aria-hidden="true" href="#how"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How&lt;/h2&gt;
&lt;p&gt;Given the following custom data structure:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;CustomData&lt;/span&gt; {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; anInt&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; aString&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; aCGPoint&lt;span class="pl-k"&gt;:&lt;/span&gt; CGPoint
}&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Start by defining your sections with a struct that conforms to the &lt;code&gt;SectionModelType&lt;/code&gt; protocol:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;define the &lt;code&gt;Item&lt;/code&gt; typealias: equal to the type of items that the section will contain&lt;/li&gt;
&lt;li&gt;declare an &lt;code&gt;items&lt;/code&gt; property: of type array of &lt;code&gt;Item&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;SectionOfCustomData&lt;/span&gt; {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; header&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;    
  &lt;span class="pl-k"&gt;var&lt;/span&gt; items&lt;span class="pl-k"&gt;:&lt;/span&gt; [Item]
}
&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;SectionOfCustomData&lt;/span&gt;: &lt;span class="pl-e"&gt;SectionModelType &lt;/span&gt;{
  &lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;Item&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; CustomData

   &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;original&lt;/span&gt;&lt;/span&gt;: SectionOfCustomData, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;items&lt;/span&gt;&lt;/span&gt;: [Item]) {
    &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; original
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;items&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; items
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Create a dataSource object and pass it your &lt;code&gt;SectionOfCustomData&lt;/code&gt; type:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataSource &lt;span class="pl-k"&gt;=&lt;/span&gt; RxTableViewSectionedReloadDataSource&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;SectionOfCustomData&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;configureCell&lt;/span&gt;: { dataSource, tableView, indexPath, item &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; cell &lt;span class="pl-k"&gt;=&lt;/span&gt; tableView.&lt;span class="pl-c1"&gt;dequeueReusableCell&lt;/span&gt;(&lt;span class="pl-c1"&gt;withIdentifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;for&lt;/span&gt;: indexPath)
    cell.&lt;span class="pl-smi"&gt;textLabel&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Item &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;anInt&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;aString&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; - &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;aCGPoint&lt;/span&gt;.&lt;span class="pl-smi"&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;aCGPoint&lt;/span&gt;.&lt;span class="pl-smi"&gt;y&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; cell
})&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Customize closures on the dataSource as needed:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;titleForHeaderInSection&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;titleForFooterInSection&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataSource.&lt;span class="pl-smi"&gt;titleForHeaderInSection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, index &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; dataSource.&lt;span class="pl-smi"&gt;sectionModels&lt;/span&gt;[index].&lt;span class="pl-c1"&gt;header&lt;/span&gt;
}

dataSource.&lt;span class="pl-smi"&gt;titleForFooterInSection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; dataSource.&lt;span class="pl-smi"&gt;sectionModels&lt;/span&gt;[index].&lt;span class="pl-smi"&gt;footer&lt;/span&gt;
}

dataSource.&lt;span class="pl-smi"&gt;canEditRowAtIndexPath&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}

dataSource.&lt;span class="pl-smi"&gt;canMoveRowAtIndexPath&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Define the actual data as an Observable sequence of CustomData objects and bind it to the tableView&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sections &lt;span class="pl-k"&gt;=&lt;/span&gt; [
  &lt;span class="pl-c1"&gt;SectionOfCustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;header&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;First section&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;items&lt;/span&gt;: [&lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zero&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: CGPoint.&lt;span class="pl-smi"&gt;zero&lt;/span&gt;), &lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGPoint&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)) ]),
  &lt;span class="pl-c1"&gt;SectionOfCustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;header&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Second section&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;items&lt;/span&gt;: [&lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGPoint&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;)), &lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGPoint&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;)) ])
]

Observable.&lt;span class="pl-c1"&gt;just&lt;/span&gt;(sections)
  .&lt;span class="pl-c1"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: tableView.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;items&lt;/span&gt;(&lt;span class="pl-c1"&gt;dataSource&lt;/span&gt;: dataSource))
  .&lt;span class="pl-c1"&gt;disposed&lt;/span&gt;(&lt;span class="pl-c1"&gt;by&lt;/span&gt;: disposeBag)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-animated-data-sources" class="anchor" aria-hidden="true" href="#animated-data-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animated Data Sources&lt;/h3&gt;
&lt;p&gt;RxDataSources provides two special data source types that automatically take care of animating changes in the bound data source: &lt;code&gt;RxTableViewSectionedAnimatedDataSource&lt;/code&gt; and &lt;code&gt;RxCollectionViewSectionedAnimatedDataSource&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To use one of the two animated data sources, you must take a few extra steps on top of those outlined above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SectionOfCustomData needs to conform to &lt;code&gt;AnimatableSectionModelType&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Your data model must conform to
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IdentifiableType&lt;/code&gt;: The &lt;code&gt;identity&lt;/code&gt; provided by the &lt;code&gt;IdentifiableType&lt;/code&gt; protocol must be an &lt;strong&gt;immutable identifier representing an instance of the model&lt;/strong&gt;. For example, in case of a &lt;code&gt;Car&lt;/code&gt; model, you might want to use the car's &lt;code&gt;plateNumber&lt;/code&gt; as its identity.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Equatable&lt;/code&gt;: Conforming to &lt;code&gt;Equatable&lt;/code&gt; helps &lt;code&gt;RxDataSources&lt;/code&gt; determine which cells have changed so it can animate only these specific cells. Meaning, changing &lt;strong&gt;any&lt;/strong&gt; of the &lt;code&gt;Car&lt;/code&gt; model's properties will trigger an animated reload of that cell.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Xcode 10.2&lt;/p&gt;
&lt;p&gt;Swift 5.0&lt;/p&gt;
&lt;p&gt;For Swift 4.x version please use versions &lt;code&gt;3.0.0 ... 3.1.0&lt;/code&gt;
For Swift 3.x version please use versions &lt;code&gt;1.0 ... 2.0.2&lt;/code&gt;
For Swift 2.3 version please use versions &lt;code&gt;0.1 ... 0.9&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;We'll try to keep the API as stable as possible, but breaking API changes can occur.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Podfile&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod 'RxDataSources', '~&amp;gt; 4.0'
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Cartfile&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "RxSwiftCommunity/RxDataSources" ~&amp;gt; 4.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>RxSwiftCommunity</author><guid isPermaLink="false">https://github.com/RxSwiftCommunity/RxDataSources</guid><pubDate>Fri, 10 Jan 2020 00:22:00 GMT</pubDate></item><item><title>apollographql/apollo-ios #23 in Swift, Today</title><link>https://github.com/apollographql/apollo-ios</link><description>&lt;p&gt;&lt;i&gt;📱 A strongly-typed, caching GraphQL client for iOS, written in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-apollo-ios" class="anchor" aria-hidden="true" href="#apollo-ios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apollo iOS&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/apollographql/apollo-ios/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f64413cde91a910418532c9d43ce147f4236ea02/68747470733a2f2f636972636c6563692e636f6d2f67682f61706f6c6c6f6772617068716c2f61706f6c6c6f2d696f732f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/apollographql/apollo-ios/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/apollographql/apollo-ios/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9d0cfb410ee7842eb181e2c5029a76a1c9b1ade2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d6c69676874677265792e7376673f6d61784167653d32353932303030" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-MIT-lightgrey.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/apple/swift"&gt;&lt;img src="https://camo.githubusercontent.com/ee0daa6ce485b12e85b3878732b203bcdbd8ebba/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352e302d6f72616e67652e737667" alt="Swift 5 Supported" data-canonical-src="https://img.shields.io/badge/Swift-5.0-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;   &lt;a href="https://cocoapods.org/pods/Apollo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/574074466415acd464d71c6f4494bff2c2d1b9fd/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f41706f6c6c6f2e737667" alt="CocoaPods" data-canonical-src="https://img.shields.io/cocoapods/v/Apollo.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://spectrum.chat/apollo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3cc3d27f23a2c3948de24fc02c58bc576655d621/68747470733a2f2f77697468737065637472756d2e6769746875622e696f2f62616467652f62616467652e737667" alt="Join the community on Spectrum" data-canonical-src="https://withspectrum.github.io/badge/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apollo iOS is a strongly-typed, caching GraphQL client for iOS, written in Swift.&lt;/p&gt;
&lt;p&gt;It allows you to execute queries and mutations against a GraphQL server, and returns results as query-specific Swift types. This means you don’t have to deal with parsing JSON, or passing around dictionaries and making clients cast values to the right type manually. You also don't have to write model types yourself, because these are generated from the GraphQL definitions your UI uses.&lt;/p&gt;
&lt;p&gt;As the generated types are query-specific, you're only able to access data you actually specify as part of a query. If you don't ask for a field, you won't be able to access the corresponding property. In effect, this means you can now rely on the Swift type checker to make sure errors in data access show up at compile time. With our Xcode integration, you can conveniently work with your UI code and corresponding GraphQL definitions side by side, and it will even validate your query documents, and show errors inline.&lt;/p&gt;
&lt;p&gt;Apollo iOS does more than simply run your queries against a GraphQL server: It normalizes query results to construct a client-side cache of your data, which is kept up to date as further queries and mutations are run. This means your UI is always internally consistent, and can be kept fully up-to-date with the state on the server with the minimum number of queries required.&lt;/p&gt;
&lt;p&gt;This combination of models with value semantics, one way data flow, and automatic consistency management, leads to a very powerful and elegant programming model that allows you to eliminate common glue code and greatly simplifies app development.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.apollographql.com/docs/ios/" rel="nofollow"&gt;Read the full docs at apollographql.com/docs/ios/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/apollographql/apollo-ios/blob/master/CHANGELOG.md"&gt;Read about the latest changes to the library&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;This project is being developed using Xcode 11 and Swift 5.0.&lt;/p&gt;
&lt;p&gt;If you open &lt;code&gt;Apollo.xcworkspace&lt;/code&gt;, you should be able to run the tests of the Apollo, ApolloSQLite, and ApolloWebSocket frameworks on your Mac or an iOS Simulator.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Due to a change in behavior in Xcode 11's git integration, if you check this repo out using Xcode, please close the window Xcode automatically opens using the Swift Package manager structure, and open the &lt;code&gt;Apollo.xcworkspace&lt;/code&gt; file instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some of the tests run against &lt;a href="https://github.com/apollographql/starwars-server"&gt;a simple GraphQL server serving the Star Wars example schema&lt;/a&gt; (see installation instructions there).&lt;/p&gt;
&lt;p&gt;If you'd like to contribute, please refer to the &lt;a href="https://github.com/apollographql/apollo-ios/blob/master/CONTRIBUTING.md"&gt;Apollo Contributor Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apollographql</author><guid isPermaLink="false">https://github.com/apollographql/apollo-ios</guid><pubDate>Fri, 10 Jan 2020 00:23:00 GMT</pubDate></item><item><title>Moya/Moya #24 in Swift, Today</title><link>https://github.com/Moya/Moya</link><description>&lt;p&gt;&lt;i&gt;Network abstraction layer written in Swift.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="Readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="web/logo_github.png"&gt;&lt;img height="160" src="web/logo_github.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-moya" class="anchor" aria-hidden="true" href="#moya"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Moya&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/Moya/Moya/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e0dc66afdf3870b6b12a9e8fcc9a15365d08eed/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f4d6f79612f4d6f79612f6d61737465722e737667" alt="CircleCI" data-canonical-src="https://img.shields.io/circleci/project/github/Moya/Moya/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/Moya/Moya?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/268e1e6bf9a95f7cce2e14ec13e49380e244d21f/68747470733a2f2f636f6465636f762e696f2f6769746875622f4d6f79612f4d6f79612f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/Moya/Moya/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/e502cdc2b27c1f2b2590f061d37b984ba3957c26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d3041374346352e7376673f7374796c653d666c6174" alt="Accio supported" data-canonical-src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/Moya" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b0f0f8c67e89bb954ebbf89c5cc7167d8c68f4f9/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4d6f79612e737667" alt="CocoaPods compatible" data-canonical-src="https://img.shields.io/cocoapods/v/Moya.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/apple/swift-package-manager"&gt;&lt;img src="https://camo.githubusercontent.com/ad744674ba25cccb6e683eb78b7c485e1b63b2d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742532305061636b6167652532304d616e616765722d636f6d70617469626c652d627269676874677265656e2e737667" alt="Swift Package Manager compatible" data-canonical-src="https://img.shields.io/badge/Swift%20Package%20Manager-compatible-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A Chinese version of this document can be found &lt;a href="https://github.com/Moya/Moya/blob/master/Readme_CN.md"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You're a smart developer. You probably use &lt;a href="https://github.com/Alamofire/Alamofire"&gt;Alamofire&lt;/a&gt; to abstract away access to
&lt;code&gt;URLSession&lt;/code&gt; and all those nasty details you don't really care about. But then,
like lots of smart developers, you write ad hoc network abstraction layers. They
are probably called "APIManager" or "NetworkModel", and they always end in tears.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="web/diagram.png"&gt;&lt;img src="web/diagram.png" alt="Moya Overview" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ad hoc network layers are common in iOS apps. They're bad for a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Makes it hard to write new apps ("where do I begin?")&lt;/li&gt;
&lt;li&gt;Makes it hard to maintain existing apps ("oh my god, this mess...")&lt;/li&gt;
&lt;li&gt;Makes it hard to write unit tests ("how do I do this again?")&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So the basic idea of Moya is that we want some network abstraction layer that
sufficiently encapsulates actually calling Alamofire directly. It should be simple
enough that common things are easy, but comprehensive enough that complicated things
are also easy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you use Alamofire to abstract away &lt;code&gt;URLSession&lt;/code&gt;, why not use something
to abstract away the nitty gritty of URLs, parameters, etc?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some awesome features of Moya:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compile-time checking for correct API endpoint accesses.&lt;/li&gt;
&lt;li&gt;Lets you define a clear usage of different endpoints with associated enum values.&lt;/li&gt;
&lt;li&gt;Treats test stubs as first-class citizens so unit testing is super-easy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can check out more about the project direction in the &lt;a href="https://github.com/Moya/Moya/blob/master/Vision.md"&gt;vision document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sample-projects" class="anchor" aria-hidden="true" href="#sample-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample Projects&lt;/h2&gt;
&lt;p&gt;We have provided two sample projects in the repository. To use it download the repo, run &lt;code&gt;carthage update&lt;/code&gt; to download the required libraries and  open &lt;a href="https://github.com/Moya/Moya/tree/master/Moya.xcodeproj"&gt;Moya.xcodeproj&lt;/a&gt;. You'll see two schemes: &lt;code&gt;Basic&lt;/code&gt; and &lt;code&gt;Multi-Target&lt;/code&gt; - select one and then build &amp;amp; run! Source files for these are in the &lt;code&gt;Examples&lt;/code&gt; directory in project navigator. Have fun!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-status" class="anchor" aria-hidden="true" href="#project-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Status&lt;/h2&gt;
&lt;p&gt;This project is actively under development, and is being used in &lt;a href="https://github.com/Artsy/eidolon"&gt;Artsy's
new auction app&lt;/a&gt;. We consider it
ready for production use.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-moya-version-vs-swift-version" class="anchor" aria-hidden="true" href="#moya-version-vs-swift-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Moya version vs Swift version.&lt;/h3&gt;
&lt;p&gt;Below is a table that shows which version of Moya you should use for
your Swift version.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Swift&lt;/th&gt;
&lt;th&gt;Moya&lt;/th&gt;
&lt;th&gt;RxMoya&lt;/th&gt;
&lt;th&gt;ReactiveMoya&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5.X&lt;/td&gt;
&lt;td&gt;&amp;gt;= 13.0.0&lt;/td&gt;
&lt;td&gt;&amp;gt;= 13.0.0&lt;/td&gt;
&lt;td&gt;&amp;gt;= 13.0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.X&lt;/td&gt;
&lt;td&gt;9.0.0 - 12.0.1&lt;/td&gt;
&lt;td&gt;10.0.0 - 12.0.1&lt;/td&gt;
&lt;td&gt;9.0.0 - 12.0.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.X&lt;/td&gt;
&lt;td&gt;8.0.0 - 8.0.5&lt;/td&gt;
&lt;td&gt;8.0.0 - 8.0.5&lt;/td&gt;
&lt;td&gt;8.0.0 - 8.0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.3&lt;/td&gt;
&lt;td&gt;7.0.2 - 7.0.4&lt;/td&gt;
&lt;td&gt;7.0.2 - 7.0.4&lt;/td&gt;
&lt;td&gt;7.0.2 - 7.0.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;td&gt;&amp;lt;= 7.0.1&lt;/td&gt;
&lt;td&gt;&amp;lt;= 7.0.1&lt;/td&gt;
&lt;td&gt;&amp;lt;= 7.0.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;Note: If you are using Swift 4.2 in your project, but you are using Xcode 10.2, Moya 13 should work correctly even though we use Swift 5.0.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Upgrading to a new major version of Moya? Check out our &lt;a href="https://github.com/Moya/Moya/blob/master/docs/MigrationGuides"&gt;migration guides&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;To integrate using Apple's Swift package manager, add the following as a dependency to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Moya/Moya.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;13.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then specify &lt;code&gt;"Moya"&lt;/code&gt; as a dependency of the Target in which you wish to use Moya.
If you want to use reactive extensions, add also &lt;code&gt;"ReactiveMoya"&lt;/code&gt; or &lt;code&gt;"RxMoya"&lt;/code&gt; as your Target dependency respectively.
Here's an example &lt;code&gt;PackageDescription&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;products&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;library&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ],
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Moya/Moya.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;13.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    ],
    &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ReactiveMoya&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that as of Moya 10, SPM only works with Swift 4 toolchain and greater.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-accio" class="anchor" aria-hidden="true" href="#accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accio&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt; is a dependency manager based on SwiftPM which can build frameworks for iOS/macOS/tvOS/watchOS. Therefore the integration steps of Moya are exactly the same as described above. Once your &lt;code&gt;Package.swift&lt;/code&gt; file is configured, run &lt;code&gt;accio update&lt;/code&gt; instead of &lt;code&gt;swift package update&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;For Moya, use the following entry in your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Moya&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 13.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or &lt;/span&gt;

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Moya/RxSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 13.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Moya/ReactiveSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 13.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In any file you'd like to use Moya in, don't forget to
import the framework with &lt;code&gt;import Moya&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Carthage users can point to this repository and use whichever
generated framework they'd like, &lt;code&gt;Moya&lt;/code&gt;, &lt;code&gt;RxMoya&lt;/code&gt;, or &lt;code&gt;ReactiveMoya&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Make the following entry in your Cartfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "Moya/Moya" ~&amp;gt; 13.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run &lt;code&gt;carthage update&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If this is your first time using Carthage in the project, you'll need to go through some additional steps as explained &lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;over at Carthage&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: At this time, Carthage does not provide a way to build only specific repository submodules. All submodules and their dependencies will be built with the above command. However, you don't need to copy frameworks you aren't using into your project. For instance, if you aren't using &lt;code&gt;ReactiveSwift&lt;/code&gt;, feel free to delete that framework along with &lt;code&gt;ReactiveMoya&lt;/code&gt; from the Carthage Build directory after &lt;code&gt;carthage update&lt;/code&gt; completes. Or if you are using &lt;code&gt;ReactiveSwift&lt;/code&gt; but not &lt;code&gt;RxSwift&lt;/code&gt;, then &lt;code&gt;RxMoya&lt;/code&gt;, &lt;code&gt;RxTest&lt;/code&gt;, &lt;code&gt;RxCocoa&lt;/code&gt;, etc. can safely be deleted.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Open up Terminal, &lt;code&gt;cd&lt;/code&gt; into your top-level project directory, and run the following command &lt;em&gt;if&lt;/em&gt; your project is not initialized as a git repository:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git init&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Add Alamofire, Result &amp;amp; Moya as a git &lt;a href="http://git-scm.com/docs/git-submodule" rel="nofollow"&gt;submodule&lt;/a&gt; by running the following commands:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git submodule add https://github.com/Alamofire/Alamofire.git
$ git submodule add https://github.com/antitypical/Result.git
$ git submodule add https://github.com/Moya/Moya.git&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Open the new &lt;code&gt;Alamofire&lt;/code&gt; folder, and drag the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; into the Project Navigator of your application's Xcode project. Do the same with the &lt;code&gt;Result.xcodeproj&lt;/code&gt; in the &lt;code&gt;Result&lt;/code&gt; folder and &lt;code&gt;Moya.xcodeproj&lt;/code&gt; in the &lt;code&gt;Moya&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;They should appear nested underneath your application's blue project icon. Whether it is above or below all the other Xcode groups does not matter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Verify that the deployment targets of the &lt;code&gt;xcodeproj&lt;/code&gt;s match that of your application target in the Project Navigator.&lt;/li&gt;
&lt;li&gt;Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "Targets" heading in the sidebar.&lt;/li&gt;
&lt;li&gt;In the tab bar at the top of that window, open the "General" panel.&lt;/li&gt;
&lt;li&gt;Click on the &lt;code&gt;+&lt;/code&gt; button under the "Embedded Binaries" section.&lt;/li&gt;
&lt;li&gt;You will see two different &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; folders each with two different versions of the &lt;code&gt;Alamofire.framework&lt;/code&gt; nested inside a &lt;code&gt;Products&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;It does not matter which &lt;code&gt;Products&lt;/code&gt; folder you choose from, but it does matter whether you choose the top or bottom &lt;code&gt;Alamofire.framework&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Select the top &lt;code&gt;Alamofire.framework&lt;/code&gt; for iOS and the bottom one for macOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;You can verify which one you selected by inspecting the build log for your project. The build target for &lt;code&gt;Alamofire&lt;/code&gt; will be listed as either &lt;code&gt;Alamofire iOS&lt;/code&gt;, &lt;code&gt;Alamofire macOS&lt;/code&gt;, &lt;code&gt;Alamofire tvOS&lt;/code&gt; or &lt;code&gt;Alamofire watchOS&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;code&gt;+&lt;/code&gt; button under "Embedded Binaries" again and add the build target you need for &lt;code&gt;Result&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;code&gt;+&lt;/code&gt; button again and add the correct build target for &lt;code&gt;Moya&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And that's it!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The three frameworks are automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;After &lt;a href="https://github.com/Moya/Moya/blob/master/docs/Examples/Basic.md"&gt;some setup&lt;/a&gt;, using Moya is really simple. You can access an API like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;provider &lt;span class="pl-k"&gt;=&lt;/span&gt; MoyaProvider&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;GitHub&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
provider.&lt;span class="pl-c1"&gt;request&lt;/span&gt;(.&lt;span class="pl-smi"&gt;zen&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(moyaResponse)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; moyaResponse.&lt;span class="pl-smi"&gt;data&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; statusCode &lt;span class="pl-k"&gt;=&lt;/span&gt; moyaResponse.&lt;span class="pl-smi"&gt;statusCode&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do something with the response data or statusCode&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this means there was a network failure - either the request&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; wasn't sent (connectivity), or no response was received (server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; timed out).  If the server responds with a 4xx or 5xx error, that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will be sent as a ".success"-ful response.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's a basic example. Many API requests need parameters. Moya encodes these
into the enum you use to access the endpoint, like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;provider &lt;span class="pl-k"&gt;=&lt;/span&gt; MoyaProvider&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;GitHub&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
provider.&lt;span class="pl-c1"&gt;request&lt;/span&gt;(.&lt;span class="pl-c1"&gt;userProfile&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ashfurrow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do something with the result&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No more typos in URLs. No more missing parameter values. No more messing with
parameter encoding.&lt;/p&gt;
&lt;p&gt;For more examples, see the &lt;a href="https://github.com/Moya/Moya/blob/master/docs/Examples"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reactive-extensions" class="anchor" aria-hidden="true" href="#reactive-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reactive Extensions&lt;/h2&gt;
&lt;p&gt;Even cooler are the reactive extensions. Moya provides reactive extensions for
&lt;a href="https://github.com/ReactiveCocoa/ReactiveSwift"&gt;ReactiveSwift&lt;/a&gt; and
&lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reactiveswift" class="anchor" aria-hidden="true" href="#reactiveswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ReactiveSwift&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Moya/Moya/blob/master/docs/ReactiveSwift.md"&gt;&lt;code&gt;ReactiveSwift&lt;/code&gt; extension&lt;/a&gt; provides both &lt;code&gt;reactive.request(:callbackQueue:)&lt;/code&gt; and
&lt;code&gt;reactive.requestWithProgress(:callbackQueue:)&lt;/code&gt; methods that immediately return
&lt;code&gt;SignalProducer&lt;/code&gt;s that you can start, bind, map, or whatever you want to do.
To handle errors, for instance, we could do the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;provider &lt;span class="pl-k"&gt;=&lt;/span&gt; MoyaProvider&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;GitHub&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
provider.&lt;span class="pl-smi"&gt;reactive&lt;/span&gt;.&lt;span class="pl-c1"&gt;request&lt;/span&gt;(.&lt;span class="pl-c1"&gt;userProfile&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ashfurrow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-c1"&gt;start&lt;/span&gt; { event &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; event {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;value&lt;/span&gt;(response)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        image &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: response.&lt;span class="pl-smi"&gt;data&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;failed&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
    &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;break&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-rxswift" class="anchor" aria-hidden="true" href="#rxswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RxSwift&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Moya/Moya/blob/master/docs/RxSwift.md"&gt;&lt;code&gt;RxSwift&lt;/code&gt; extension&lt;/a&gt; also provide both &lt;code&gt;rx.request(:callbackQueue:)&lt;/code&gt; and
&lt;code&gt;rx.requestWithProgress(:callbackQueue:)&lt;/code&gt; methods, but return type is
different for both. In case of a normal &lt;code&gt;rx.request(:callbackQueue)&lt;/code&gt;, the
return type is &lt;code&gt;Single&amp;lt;Response&amp;gt;&lt;/code&gt; which emits either single element or an
error. In case of a &lt;code&gt;rx.requestWithProgress(:callbackQueue:)&lt;/code&gt;, the return
type is &lt;code&gt;Observable&amp;lt;ProgressResponse&amp;gt;&lt;/code&gt;, since we may get multiple events
from progress and one last event which is a response.&lt;/p&gt;
&lt;p&gt;To handle errors, for instance, we could do the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;provider &lt;span class="pl-k"&gt;=&lt;/span&gt; MoyaProvider&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;GitHub&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
provider.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;request&lt;/span&gt;(.&lt;span class="pl-c1"&gt;userProfile&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ashfurrow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-smi"&gt;subscribe&lt;/span&gt; { event &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; event {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(response)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        image &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: response.&lt;span class="pl-smi"&gt;data&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In addition to the option of using signals instead of callback blocks, there are
also a series of signal operators for RxSwift and ReactiveSwift that will attempt
to map the data received from the network response into either an image, some JSON,
or a string, with &lt;code&gt;mapImage()&lt;/code&gt;, &lt;code&gt;mapJSON()&lt;/code&gt;, and &lt;code&gt;mapString()&lt;/code&gt;, respectively. If the mapping is unsuccessful, you'll get an error on the signal. You also get handy methods
for filtering out certain status codes. This means that you can place your code for
handling API errors like 400's in the same places as code for handling invalid
responses.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-projects" class="anchor" aria-hidden="true" href="#community-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Projects&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Moya/Moya/blob/master/docs/CommunityProjects.md"&gt;Moya has a great community around it and some people have created some very helpful extensions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Hey! Do you like Moya? Awesome! We could actually really use your help!&lt;/p&gt;
&lt;p&gt;Open source isn't just writing code. Moya could use your help with any of the
following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Finding (and reporting!) bugs.&lt;/li&gt;
&lt;li&gt;New feature suggestions.&lt;/li&gt;
&lt;li&gt;Answering questions on issues.&lt;/li&gt;
&lt;li&gt;Documentation improvements.&lt;/li&gt;
&lt;li&gt;Reviewing pull requests.&lt;/li&gt;
&lt;li&gt;Helping to manage issue priorities.&lt;/li&gt;
&lt;li&gt;Fixing bugs/new features.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If any of that sounds cool to you, send a pull request! After your first
contribution, we will add you as a member to the repo so you can merge pull
requests and help steer the ship &lt;g-emoji class="g-emoji" alias="ship" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a2.png"&gt;🚢&lt;/g-emoji&gt; You can read more details about that &lt;a href="https://github.com/Moya/Moya/blob/master/Contributing.md"&gt;in our contributor guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Moya's community has a tremendous positive energy, and the maintainers are committed to keeping things awesome. Like &lt;a href="https://github.com/CocoaPods/CocoaPods/wiki/Communication-&amp;amp;-Design-Rules"&gt;in the CocoaPods community&lt;/a&gt;, always assume positive intent; even if a comment sounds mean-spirited, give the person the benefit of the doubt.&lt;/p&gt;
&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by &lt;a href="https://github.com/Moya/Moya/blob/master/Code%20of%20Conduct.md"&gt;its terms&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-adding-new-source-files" class="anchor" aria-hidden="true" href="#adding-new-source-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding new source files&lt;/h3&gt;
&lt;p&gt;If you add or remove a source file from Moya, a corresponding change needs to be made to the &lt;code&gt;Moya.xcodeproj&lt;/code&gt; project at the root of this repository. This project is used for Carthage. Don't worry, you'll get an automated warning when submitting a pull request if you forget.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-help-us-improve-moya-documentation" class="anchor" aria-hidden="true" href="#help-us-improve-moya-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help us improve Moya documentation&lt;/h3&gt;
&lt;p&gt;Whether you’re a core member or a user trying it out for the first time, you can make a valuable contribution to Moya by improving the documentation. Help us by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sending us feedback about something you thought was confusing or simply missing&lt;/li&gt;
&lt;li&gt;suggesting better wording or ways of explaining certain topics&lt;/li&gt;
&lt;li&gt;sending us a pull request via GitHub&lt;/li&gt;
&lt;li&gt;improving the &lt;a href="https://github.com/Moya/Moya/blob/master/Readme_CN.md"&gt;Chinese documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Moya is released under an MIT license. See &lt;a href="https://github.com/Moya/Moya/blob/master/License.md"&gt;License.md&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Moya</author><guid isPermaLink="false">https://github.com/Moya/Moya</guid><pubDate>Fri, 10 Jan 2020 00:24:00 GMT</pubDate></item><item><title>yonaskolb/XcodeGen #25 in Swift, Today</title><link>https://github.com/yonaskolb/XcodeGen</link><description>&lt;p&gt;&lt;i&gt;A Swift command line tool for generating your Xcode project&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a href="https://github.com/yonaskolb/XcodeGen"&gt;
&lt;img src="Assets/Logo_animated.gif" alt="XcodeGen" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://swift.org/package-manager" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/6da72e15649e210131bd77310c4789539301a101/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73706d2d636f6d70617469626c652d627269676874677265656e2e7376673f7374796c653d666f722d7468652d6261646765" alt="Swift Package Manager" data-canonical-src="https://img.shields.io/badge/spm-compatible-brightgreen.svg?style=for-the-badge" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/yonaskolb/XcodeGen/releases"&gt;
    &lt;img src="https://camo.githubusercontent.com/fb2e4308c38f433deead4c1893c637dc318650e4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f796f6e61736b6f6c622f78636f646567656e2e7376673f7374796c653d666f722d7468652d6261646765" data-canonical-src="https://img.shields.io/github/release/yonaskolb/xcodegen.svg?style=for-the-badge" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/yonaskolb/XcodeGen/blob/master/LICENSE"&gt;
    &lt;img src="https://camo.githubusercontent.com/ef15689f8b6f20f4a2db810df9f278ccf99f8815/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f796f6e61736b6f6c622f58636f646547656e2e7376673f7374796c653d666f722d7468652d6261646765" data-canonical-src="https://img.shields.io/github/license/yonaskolb/XcodeGen.svg?style=for-the-badge" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-xcodegen" class="anchor" aria-hidden="true" href="#xcodegen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XcodeGen&lt;/h1&gt;
&lt;p&gt;XcodeGen is a command line tool written in Swift that generates your Xcode project using your folder structure and a project spec.&lt;/p&gt;
&lt;p&gt;The project spec is a YAML or JSON file that defines your targets, configurations, schemes, custom build settings and many other options. All your source directories are automatically parsed and referenced appropriately while preserving your folder structure. Sensible defaults are used in many places, so you only need to customize what is needed. Very complex projects can also be defined using more advanced features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Generate projects on demand and remove your &lt;code&gt;.xcodeproj&lt;/code&gt; from git, which means &lt;strong&gt;no more merge conflicts&lt;/strong&gt;!&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Groups and files in Xcode are always &lt;strong&gt;synced&lt;/strong&gt; to your directories on disk&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Easy &lt;strong&gt;configuration&lt;/strong&gt; of projects which is human readable and git friendly&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Easily copy and paste &lt;strong&gt;files and directories&lt;/strong&gt; without having to edit anything in Xcode&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Share build settings across multiple targets with &lt;strong&gt;build setting groups&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Automatically generate Schemes for &lt;strong&gt;different environments&lt;/strong&gt; like test and production&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Easily &lt;strong&gt;create new projects&lt;/strong&gt; with complicated setups on demand without messing around with Xcode&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Generate from anywhere including on &lt;strong&gt;CI&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Distribute your spec amongst multiple files for easy &lt;strong&gt;sharing&lt;/strong&gt; and overriding&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Easily create &lt;strong&gt;multi-platform&lt;/strong&gt; frameworks&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Integrate &lt;strong&gt;Carthage&lt;/strong&gt; frameworks without any work&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given a very simple project spec file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;MyProject&lt;/span&gt;
&lt;span class="pl-ent"&gt;options&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;bundleIdPrefix&lt;/span&gt;: &lt;span class="pl-s"&gt;com.myapp&lt;/span&gt;
&lt;span class="pl-ent"&gt;packages&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;Yams&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;https://github.com/jpsim/Yams&lt;/span&gt;
    &lt;span class="pl-ent"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;2.0.0&lt;/span&gt;
&lt;span class="pl-ent"&gt;targets&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;MyApp&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;type&lt;/span&gt;: &lt;span class="pl-s"&gt;application&lt;/span&gt;
    &lt;span class="pl-ent"&gt;platform&lt;/span&gt;: &lt;span class="pl-s"&gt;iOS&lt;/span&gt;
    &lt;span class="pl-ent"&gt;deploymentTarget&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;10.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-ent"&gt;sources&lt;/span&gt;: &lt;span class="pl-s"&gt;[MyApp]&lt;/span&gt;
    &lt;span class="pl-ent"&gt;settings&lt;/span&gt;:
      &lt;span class="pl-ent"&gt;configs&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;debug&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;CUSTOM_BUILD_SETTING&lt;/span&gt;: &lt;span class="pl-s"&gt;my_debug_value&lt;/span&gt;
        &lt;span class="pl-ent"&gt;release&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;CUSTOM_BUILD_SETTING&lt;/span&gt;: &lt;span class="pl-s"&gt;my_release_value&lt;/span&gt;
    &lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;:
      - &lt;span class="pl-ent"&gt;target&lt;/span&gt;: &lt;span class="pl-s"&gt;MyFramework&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;carthage&lt;/span&gt;: &lt;span class="pl-s"&gt;Alamofire&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;framework&lt;/span&gt;: &lt;span class="pl-s"&gt;Vendor/MyFramework.framework&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;sdk&lt;/span&gt;: &lt;span class="pl-s"&gt;Contacts.framework&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;sdk&lt;/span&gt;: &lt;span class="pl-s"&gt;libc++.tbd&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;package&lt;/span&gt;: &lt;span class="pl-s"&gt;Yams&lt;/span&gt;
  &lt;span class="pl-ent"&gt;MyFramework&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;type&lt;/span&gt;: &lt;span class="pl-s"&gt;framework&lt;/span&gt;
    &lt;span class="pl-ent"&gt;platform&lt;/span&gt;: &lt;span class="pl-s"&gt;iOS&lt;/span&gt;
    &lt;span class="pl-ent"&gt;sources&lt;/span&gt;: &lt;span class="pl-s"&gt;[MyFramework]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A project would be created with 2 connected targets, with all the required configurations and build settings. See the &lt;a href="Docs/ProjectSpec.md"&gt;Project Spec&lt;/a&gt; documentation for all the options you can specify, and &lt;a href="Docs/Usage.md"&gt;Usage&lt;/a&gt; for more general documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;Make sure Xcode 11 is installed first.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mint" class="anchor" aria-hidden="true" href="#mint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/yonaskolb/mint"&gt;Mint&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mint install yonaskolb/xcodegen&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-make" class="anchor" aria-hidden="true" href="#make"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Make&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/yonaskolb/XcodeGen.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; XcodeGen
make install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-homebrew" class="anchor" aria-hidden="true" href="#homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homebrew&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install xcodegen&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Use as CLI&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/yonaskolb/XcodeGen.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; XcodeGen
swift run xcodegen&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Use as dependency&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Add the following to your Package.swift file's dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/yonaskolb/XcodeGen.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.11.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then import wherever needed: &lt;code&gt;import XcodeGenKit&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Simply run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;xcodegen generate&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will look for a project spec in the current directory called &lt;code&gt;project.yml&lt;/code&gt; and generate an Xcode project with the name defined in the spec.&lt;/p&gt;
&lt;p&gt;Options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;--spec&lt;/strong&gt;: An optional path to a &lt;code&gt;.yml&lt;/code&gt; or &lt;code&gt;.json&lt;/code&gt; project spec. Defaults to &lt;code&gt;project.yml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;--project&lt;/strong&gt;: An optional path to a directory where the project will be generated. By default this is the directory the spec lives in.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;--quiet&lt;/strong&gt;: Suppress informational and success messages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;--use-cache&lt;/strong&gt;: Used to prevent unnecessarily generating the project. If this is set, then a cache file will be written to when a project is generated. If &lt;code&gt;xcodegen&lt;/code&gt; is later run but the spec and all the files it contains are the same, the project won't be generated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;--cache-path&lt;/strong&gt;: A custom path to use for your cache file. This defaults to &lt;code&gt;~/.xcodegen/cache/{PROJECT_SPEC_PATH_HASH}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are other commands as well. Use &lt;code&gt;xcodegen help&lt;/code&gt; to see more detailed usage information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-editing" class="anchor" aria-hidden="true" href="#editing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editing&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/yonaskolb/XcodeGen.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; XcodeGen
swift package generate-xcodeproj&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This use Swift Project Manager to create an &lt;code&gt;xcodeproj&lt;/code&gt; file that you can open, edit and run in Xcode, which makes editing any code easier.&lt;/p&gt;
&lt;p&gt;If you want to pass any required arguments when running in Xcode, you can edit the scheme to include launch arguments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;See &lt;a href="Docs/ProjectSpec.md"&gt;Project Spec&lt;/a&gt; documentation for all the various properties and options that can be set&lt;/li&gt;
&lt;li&gt;See &lt;a href="Docs/Usage.md"&gt;Usage&lt;/a&gt; for more specific usage and use case documentation&lt;/li&gt;
&lt;li&gt;See &lt;a href="Docs/FAQ.md"&gt;FAQ&lt;/a&gt; for a list of some frequently asked questions&lt;/li&gt;
&lt;li&gt;See &lt;a href="Docs/Examples.md"&gt;Examples&lt;/a&gt; for some real world XcodeGen project specs out in the wild&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-attributions" class="anchor" aria-hidden="true" href="#attributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Attributions&lt;/h2&gt;
&lt;p&gt;This tool is powered by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/carambalabs/xcodeproj"&gt;xcodeproj&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/JSONUtilities"&gt;JSONUtilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/Spectre"&gt;Spectre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/PathKit"&gt;PathKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/Commander"&gt;Commander&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpsim/Yams"&gt;Yams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inspiration for this tool came from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/workshop/struct"&gt;struct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jcampbell05/xcake"&gt;xcake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CocoaPods/Xcodeproj"&gt;CocoaPods Xcodeproj&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Pull requests and issues are always welcome. Please open any issues and PRs for bugs, features, or documentation.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8c921e80eccceb652e97f3e3681a06fa684cf23/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f30" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/0" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b8d80e519bde0d2130dcb2b6a066929f9ee09fb8/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f31" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a2d02142a2d35f782cf3915ad92b7ab0115a0eb6/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f32" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/351562780d4b0a1b7a1dbcfba6fb0ee583ad9c86/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f33" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/4" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8869bf5b6acfb64ede5c694257c6924acb852aa1/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f34" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/94b53c088e75969ca41606c9da34ba3b6187baa3/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f35" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/5" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/6" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0a6638c6a0b289b20b7d703dc2860a1c5753ae2c/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f36" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/6" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/7" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5607cdc82657e829a12654a85a7670cfdff5e6fc/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f37" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/7" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;XcodeGen is licensed under the MIT license. See &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>yonaskolb</author><guid isPermaLink="false">https://github.com/yonaskolb/XcodeGen</guid><pubDate>Fri, 10 Jan 2020 00:25:00 GMT</pubDate></item></channel></rss>