<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Swift, Today</title><link>https://github.com/trending/swift?since=daily</link><description>The top repositories on GitHub for swift, measured daily</description><pubDate>Sat, 21 Dec 2019 01:04:52 GMT</pubDate><lastBuildDate>Sat, 21 Dec 2019 01:04:52 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>vapor/vapor #1 in Swift, Today</title><link>https://github.com/vapor/vapor</link><description>&lt;p&gt;&lt;i&gt;💧 A server-side Swift web framework.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://vapor.team" rel="nofollow"&gt;&lt;img src="https://user-images.githubusercontent.com/1742140/43014701-5ad8f7de-8c4d-11e8-86d2-4db3d71581aa.png" alt="Vapor" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
	&lt;a href="https://docs.vapor.codes/3.0/" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/6a6cc818201160b182a9c54f1c2ccadbb38fc145/687474703a2f2f696d672e736869656c64732e696f2f62616467652f726561645f7468652d646f63732d3231393666332e737667" alt="Documentation" data-canonical-src="http://img.shields.io/badge/read_the-docs-2196f3.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://discord.gg/vapor" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/651a76f52dcbc729802f1f307eff776dbd5ddc52/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3433313931373939383130323637353438352e737667" alt="Team Chat" data-canonical-src="https://img.shields.io/discord/431917998102675485.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="LICENSE"&gt;
        &lt;img src="https://camo.githubusercontent.com/e7302c620b3589a361fc5503732f3505347205d4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e737667" alt="MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-brightgreen.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://circleci.com/gh/vapor/vapor" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/474a2feaf657f12a6d2f1109a07886ba92fe3d31/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6275696c642d70617373696e672d627269676874677265656e2e737667" alt="Continuous Integration" data-canonical-src="https://img.shields.io/badge/build-passing-brightgreen.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://swift.org" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/ebaea1fcb74274e8ee55fe117217b6cbac9c6acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352e312d627269676874677265656e2e737667" alt="Swift 5.1" data-canonical-src="https://img.shields.io/badge/swift-5.1-brightgreen.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://twitter.com/codevapor" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/acdbe20bcc4e88471c294d2d02cfd9ef12b997c1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d636f64657661706f722d3541413945372e737667" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-codevapor-5AA9E7.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Vapor is a web framework for Swift. It provides a beautifully expressive and easy to use foundation for your next website, API, or cloud project.&lt;/p&gt;
&lt;p&gt;Take a look at some of the &lt;a href="https://github.com/Cellane/awesome-vapor"&gt;awesome stuff&lt;/a&gt; created with Vapor.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--community" class="anchor" aria-hidden="true" href="#-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="droplet" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a7.png"&gt;💧&lt;/g-emoji&gt; Community&lt;/h3&gt;
&lt;p&gt;Join the welcoming community of fellow Vapor developers on &lt;a href="http://vapor.team" rel="nofollow"&gt;Discord&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--contributing" class="anchor" aria-hidden="true" href="#-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt; Contributing&lt;/h3&gt;
&lt;p&gt;To contribute a &lt;strong&gt;feature or idea&lt;/strong&gt; to Vapor, &lt;a href="https://github.com/vapor/vapor/issues/new"&gt;create an issue&lt;/a&gt; explaining your idea or bring it up on &lt;a href="http://vapor.team" rel="nofollow"&gt;Discord&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you find a &lt;strong&gt;bug&lt;/strong&gt;, please &lt;a href="https://github.com/vapor/vapor/issues/new"&gt;create an issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you find a &lt;strong&gt;security vulnerability&lt;/strong&gt;, please contact &lt;a href="mailto:security@vapor.codes"&gt;security@vapor.codes&lt;/a&gt; as soon as possible.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--sponsors" class="anchor" aria-hidden="true" href="#-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="yellow_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49b.png"&gt;💛&lt;/g-emoji&gt; Sponsors&lt;/h3&gt;
&lt;p&gt;Support Vapor's development by &lt;a href="https://github.com/users/tanner0101/sponsorship"&gt;becoming a sponsor&lt;/a&gt;.&lt;/p&gt;
&lt;a href="http://nodesagency.com" rel="nofollow"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/66773716-a787b900-ee8d-11e9-83c2-54b3d8fce528.png" height="100px" alt="Nodes" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://www.skelpo.com" rel="nofollow"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/66773734-b2dae480-ee8d-11e9-81ca-2f20f4b0f55e.png" height="100px" alt="Skelpo" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/gwynne"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/70094097-c6820c00-15ef-11ea-899d-f4010ad65875.png" height="100px" alt="Gwynne Raskind" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/autimatisering"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/71133923-8ad36e80-21b9-11ea-836c-efa05b36a661.png" height="100px" alt="Autimatisering" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/kylebrowning"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/67107440-7ca5a980-f19a-11e9-8619-b029c96399f7.png" height="100px" alt="Kyle Browning" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content--backers" class="anchor" aria-hidden="true" href="#-backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="green_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49a.png"&gt;💚&lt;/g-emoji&gt; Backers&lt;/h3&gt;
&lt;p&gt;Support Vapor's development by &lt;a href="https://github.com/users/tanner0101/sponsorship"&gt;becoming a backer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/MrLotU"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/18392003?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Yasumoto"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/48383?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/tkrajacic"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/873717?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/slashmo"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/16192401?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/ScottRobbins"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/6894359?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/ksmandersen"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/178181?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/twof"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/5561501?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/mikkelu"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/17051694?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/grundoon"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/876321?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/tylermrolfe"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/1797243?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/maartene"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/5150271?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/steve-h"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/1298089?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/SpencerCurtis"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/16965587?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/ezfe"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/1449259?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Mordil"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/3506776?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/danielinoa"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/972877?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/patrykwas"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/39051168?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/MaherKSantina"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/24646608?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/shpakovski"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/163410?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/jordanebelanger"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/1856085?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/vapor/backer/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d424a7f2f19a9b0439ede63e08af0a4c6b6649e6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15912aa6152688f4c1ff0e6b05bfe651a4741b7f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2500f286a04a7dfba0b4b552fe4639711576d473/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6de8b2140b2912a98efefa15ba3abf564b4df8c9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b162fd72ed19d45c2523c8d58298dfab930b681e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c3131fae93ed02f95ead5d943f5088e6ac9dae64/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e17b3f188e9cb3fea567ef4e3df6c990f65cb9a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dfcf5cd7f59ea8cd677741126fa74fa87dfe171/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/17fca50e3b5becda8de0063a19d073a6455cda96/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3de7442449b259b680a269818e0cbf817fc32b67/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/10/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e29bd462b035277f33359d2a2e0275062a2812cc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/10/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/11/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/687e722908af10e2583807ed3fc99fa5cdc1ddda/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/11/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/12/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dcf5b433b68d9027454f0a9de577f1829922a1ec/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/12/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/13/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/17810b06e2dd424876e2354a79c82b1f95722ca3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/13/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/14/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2aff6c356802ca72c23a4b69f1f2ec047d6b1b3f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/14/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/15/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/07b50a033c5c2bf980fbc121ae6a752b8871d4be/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/15/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/16/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c03bbd9af3d0f68f46e9d3178f698c0951ccbf40/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/16/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/17/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57061f407311fe8f76b802855b90bf243cd99ae3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/17/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/18/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3cd3f77dbbde76617c030bb896fef7b19e4cccab/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/18/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/19/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e248ccbd8b613e2841ec8d9da75fafbbe42451c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/19/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/20/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bbfa795bdcb58fc0d1c2449a668b5b38df134d6b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/20/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/21/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ee2fea042dc49239179424ed7a606b95526af23/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/21/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/22/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b42f5411ce0a2bb4e93dade5c64b832d12bd0c21/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/22/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/23/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8226a7853b506ccf7394a6bf5fc1a043861d75d6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/23/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/24/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/96004bf1255e05315022cf23423f2cd18f7839fc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/24/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/25/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9529958c6fd0614eb83f64199c66f56552351108/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/25/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/26/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ec855aae96446f1a7d1949c1b6858d1593b3b2a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/26/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/27/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b16e16d73cbd20f910577e797a5ff2da189212c9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/27/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/28/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d84722e438e0bd74977f573aae549a3284e939ed/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/28/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/29/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6a26cb36f3eb994a23912cfe489cc163b0e52cfd/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/29/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/30/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5a5f9080ccf0e4271301b896149d57ecd51c6615/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/30/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/31/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ddadddaaa1391bf76d64bd046a6adfad8e2b9875/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/31/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/32/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6b495e618c7145afcf93810484b77bf761a7bad9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/32/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/33/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34336a047f14b8b9b38d3d22803a1183855aa3b6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/33/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/34/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e44afaceb402cd24d5093e2b013e3406382205fe/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/34/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/35/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c9fdc1c60818a1b354cbc6cfb9ac3011e9661a4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/35/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/36/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60543a3882efad5e2188580665dab9f8631bbeb9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/36/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/37/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/67eb7a7bead0beb645701ef9eccd8542d7f86a8d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/37/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/38/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/81e72d49489f2e02ccdd5d029361b38d76971487/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/38/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/39/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ea13dfa580deb6b02e88056c7290cdcf682cd108/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/39/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/40/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6730f3bb2641ce96f193c46a8fe2066691b712e1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/40/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/41/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d80b02d2afaeb8139911ea1ec7899da5569bdda/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/41/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/42/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3e05a1e207553a716b581c51c758ad59707397f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/42/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/43/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/249a37ac33e1cfab9d27c60891132d4a808abcd8/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/43/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/44/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/974ec7686ddce13fe409145f744178873f05d361/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/44/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/45/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab82907859d6b6c6eab5ff21f47c2396f1ad1e29/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/45/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/46/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c0a67f161c883ef32d54578c5c85b82a71fb1af/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/46/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/47/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dda24ceed218774fbf3e48f45283bfff0e40f57c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/47/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/48/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed9fd11eee4928c2e970b47de7333f22e2b2f7b5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/48/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href=""&gt;&lt;img src="https://camo.githubusercontent.com/8447f36967ea3d5dd28344d33b0f53a5f6629b57/687474703a2f2f7777772e676f6f676c652d616e616c79746963732e636f6d2f636f6c6c6563743f763d3126743d7061676576696577265f733d3126646c3d68747470732533412532462532466769746875622e636f6d2532467661706f722532467661706f72265f753d4d41437e266369643d313735373031343335342e31333933393634303435267469643d55412d37363137373335382d36" alt="analytics" data-canonical-src="http://www.google-analytics.com/collect?v=1&amp;amp;t=pageview&amp;amp;_s=1&amp;amp;dl=https%3A%2F%2Fgithub.com%2Fvapor%2Fvapor&amp;amp;_u=MAC~&amp;amp;cid=1757014354.1393964045&amp;amp;tid=UA-76177358-6" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vapor</author><guid isPermaLink="false">https://github.com/vapor/vapor</guid><pubDate>Sat, 21 Dec 2019 00:01:00 GMT</pubDate></item><item><title>ReactiveX/RxSwift #2 in Swift, Today</title><link>https://github.com/ReactiveX/RxSwift</link><description>&lt;p&gt;&lt;i&gt;Reactive Programming in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--rxswift-reactivex-for-swift" class="anchor" aria-hidden="true" href="#-rxswift-reactivex-for-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/ReactiveX/RxSwift/master/assets/Rx_Logo_M.png"&gt;&lt;img src="https://raw.githubusercontent.com/ReactiveX/RxSwift/master/assets/Rx_Logo_M.png" alt="Miss Electric Eel 2016" width="36" height="36" style="max-width:100%;"&gt;&lt;/a&gt; RxSwift: ReactiveX for Swift&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ReactiveX/RxSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d6899870ec82f2a13bcbdc55834ee9718be7678a/68747470733a2f2f7472617669732d63692e6f72672f5265616374697665582f527853776966742e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://travis-ci.org/ReactiveX/RxSwift.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cad98e8f98045360e4b82f574b86b45952b3feb1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d694f532532302537432532306d61634f5325323025374325323074764f5325323025374325323077617463684f532532302537432532304c696e75782d3333333333332e737667"&gt;&lt;img src="https://camo.githubusercontent.com/cad98e8f98045360e4b82f574b86b45952b3feb1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d694f532532302537432532306d61634f5325323025374325323074764f5325323025374325323077617463684f532532302537432532304c696e75782d3333333333332e737667" alt="platforms" data-canonical-src="https://img.shields.io/badge/platforms-iOS%20%7C%20macOS%20%7C%20tvOS%20%7C%20watchOS%20%7C%20Linux-333333.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://cocoapods.org/pods/RxSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/91ac251cd8e6775af6ec6807fc0c354827c6878f/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f527853776966742e737667" alt="pod" data-canonical-src="https://img.shields.io/cocoapods/v/RxSwift.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/apple/swift-package-manager"&gt;&lt;img src="https://camo.githubusercontent.com/ad744674ba25cccb6e683eb78b7c485e1b63b2d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742532305061636b6167652532304d616e616765722d636f6d70617469626c652d627269676874677265656e2e737667" alt="Swift Package Manager compatible" data-canonical-src="https://img.shields.io/badge/Swift%20Package%20Manager-compatible-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rx is a &lt;a href="https://youtu.be/looJcaeboBY" rel="nofollow"&gt;generic abstraction of computation&lt;/a&gt; expressed through &lt;code&gt;Observable&amp;lt;Element&amp;gt;&lt;/code&gt; interface.&lt;/p&gt;
&lt;p&gt;This is a Swift version of &lt;a href="https://github.com/Reactive-Extensions/Rx.NET"&gt;Rx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It tries to port as many concepts from the original version as possible, but some concepts were adapted for more pleasant and performant integration with iOS/macOS environment.&lt;/p&gt;
&lt;p&gt;Cross platform documentation can be found on &lt;a href="http://reactivex.io/" rel="nofollow"&gt;ReactiveX.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Like the original Rx, its intention is to enable easy composition of asynchronous operations and event/data streams.&lt;/p&gt;
&lt;p&gt;KVO observing, async operations and streams are all unified under &lt;a href="Documentation/GettingStarted.md#observables-aka-sequences"&gt;abstraction of sequence&lt;/a&gt;. This is the reason why Rx is so simple, elegant and powerful.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-i-came-here-because-i-want-to-" class="anchor" aria-hidden="true" href="#i-came-here-because-i-want-to-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I came here because I want to ...&lt;/h2&gt;
&lt;h6&gt;&lt;a id="user-content--understand" class="anchor" aria-hidden="true" href="#-understand"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... understand&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/Why.md"&gt;why use rx?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/GettingStarted.md"&gt;the basics, getting started with RxSwift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Traits.md"&gt;traits&lt;/a&gt; - what are &lt;code&gt;Single&lt;/code&gt;, &lt;code&gt;Completable&lt;/code&gt;, &lt;code&gt;Maybe&lt;/code&gt;, &lt;code&gt;Driver&lt;/code&gt;, and &lt;code&gt;ControlProperty&lt;/code&gt; ... and why do they exist?&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/UnitTests.md"&gt;testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Tips.md"&gt;tips and common errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/GettingStarted.md#debugging"&gt;debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/MathBehindRx.md"&gt;the math behind Rx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/HotAndColdObservables.md"&gt;what are hot and cold observable sequences?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--install" class="anchor" aria-hidden="true" href="#-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... install&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Integrate RxSwift/RxCocoa with my app. &lt;a href="#installation"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--hack-around" class="anchor" aria-hidden="true" href="#-hack-around"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... hack around&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;with the example app. &lt;a href="Documentation/ExampleApp.md"&gt;Running Example App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;with operators in playgrounds. &lt;a href="Documentation/Playgrounds.md"&gt;Playgrounds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--interact" class="anchor" aria-hidden="true" href="#-interact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... interact&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;All of this is great, but it would be nice to talk with other people using RxSwift and exchange experiences. &lt;br&gt;&lt;a href="http://slack.rxswift.org" rel="nofollow"&gt;Join Slack Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Report a problem using the library. &lt;a href=".github/ISSUE_TEMPLATE.md"&gt;Open an Issue With Bug Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Request a new feature. &lt;a href="Documentation/NewFeatureRequestTemplate.md"&gt;Open an Issue With Feature Request Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Help out &lt;a href="CONTRIBUTING.md"&gt;Check out contribution guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--compare" class="anchor" aria-hidden="true" href="#-compare"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... compare&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/ComparisonWithOtherLibraries.md"&gt;with other libraries&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--understand-the-structure" class="anchor" aria-hidden="true" href="#-understand-the-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... understand the structure&lt;/h6&gt;
&lt;p&gt;RxSwift comprises five separate components depending on eachother in the following way:&lt;/p&gt;
&lt;pre lang="none"&gt;&lt;code&gt;┌──────────────┐    ┌──────────────┐
│   RxCocoa    ├────▶   RxRelay    │
└───────┬──────┘    └──────┬───────┘
        │                  │        
┌───────▼──────────────────▼───────┐
│             RxSwift              │
└───────▲──────────────────▲───────┘
        │                  │        
┌───────┴──────┐    ┌──────┴───────┐
│    RxTest    │    │  RxBlocking  │
└──────────────┘    └──────────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RxSwift&lt;/strong&gt;: The core of RxSwift, providing the Rx standard as (mostly) defined by &lt;a href="https://reactivex.io" rel="nofollow"&gt;ReactiveX&lt;/a&gt;. It has no other dependencies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxCocoa&lt;/strong&gt;: Provides Cocoa-specific capabilities for general iOS/macOS/watchOS &amp;amp; tvOS app development, such as Binders, Traits, and much more. It depends on both &lt;code&gt;RxSwift&lt;/code&gt; and &lt;code&gt;RxRelay&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxRelay&lt;/strong&gt;: Provides &lt;code&gt;PublishRelay&lt;/code&gt; and &lt;code&gt;BehaviorRelay&lt;/code&gt;, two &lt;a href="https://github.com/ReactiveX/RxSwift/blob/master/Documentation/Subjects.md#relays"&gt;simple wrappers around Subjects&lt;/a&gt;. It depends on &lt;code&gt;RxSwift&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxTest&lt;/strong&gt; and &lt;strong&gt;RxBlocking&lt;/strong&gt;: Provides testing capabilities for Rx-based systems. It depends on &lt;code&gt;RxSwift&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--find-compatible" class="anchor" aria-hidden="true" href="#-find-compatible"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... find compatible&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;libraries from &lt;a href="https://github.com/RxSwiftCommunity"&gt;RxSwiftCommunity&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cocoapods.org/?q=uses%3Arxswift" rel="nofollow"&gt;Pods using RxSwift&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--see-the-broader-vision" class="anchor" aria-hidden="true" href="#-see-the-broader-vision"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... see the broader vision&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Does this exist for Android? &lt;a href="https://github.com/ReactiveX/RxJava"&gt;RxJava&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Where is all of this going, what is the future, what about reactive architectures, how do you design entire apps this way? &lt;a href="https://github.com/cyclejs/cycle-core"&gt;Cycle.js&lt;/a&gt; - this is javascript, but &lt;a href="https://github.com/Reactive-Extensions/RxJS"&gt;RxJS&lt;/a&gt; is javascript version of Rx.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;th width="30%"&gt;Here's an example&lt;/th&gt;
    &lt;th width="30%"&gt;In Action&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Define search for GitHub repositories ...&lt;/td&gt;
    &lt;th rowspan="9"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kzaher/rxswiftcontent/master/GithubSearch.gif"&gt;&lt;img src="https://raw.githubusercontent.com/kzaher/rxswiftcontent/master/GithubSearch.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;div&gt;&lt;pre&gt;let searchResults = searchBar.rx.text.orEmpty
    .throttle(.milliseconds(300), scheduler: MainScheduler.instance)
    .distinctUntilChanged()
    .flatMapLatest { query -&amp;gt; Observable&amp;lt;[Repository]&amp;gt; in
        if query.isEmpty {
            return .just([])
        }
        return searchGitHub(query)
            .catchErrorJustReturn([])
    }
    .observeOn(MainScheduler.instance)&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;... then bind the results to your tableview&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td width="30%"&gt;&lt;div&gt;&lt;pre&gt;searchResults
    .bind(to: tableView.rx.items(cellIdentifier: "Cell")) {
        (index, repository: Repository, cell) in
        cell.textLabel?.text = repository.name
        cell.detailTextLabel?.text = repository.url
    }
    .disposed(by: disposeBag)&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 10.2&lt;/li&gt;
&lt;li&gt;Swift 5.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Xcode 10.1 and below, &lt;a href="https://github.com/ReactiveX/RxSwift/releases/tag/4.5.0"&gt;use RxSwift 4.5&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Rx doesn't contain any external dependencies.&lt;/p&gt;
&lt;p&gt;These are currently the supported options:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;Open Rx.xcworkspace, choose &lt;code&gt;RxExample&lt;/code&gt; and hit run. This method will build everything and run the sample app&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://guides.cocoapods.org/using/using-cocoapods.html" rel="nofollow"&gt;CocoaPods&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Podfile&lt;/span&gt;
use_frameworks!

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YOUR_TARGET_NAME&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxCocoa&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; RxTest and RxBlocking make the most sense in the context of unit/integration tests&lt;/span&gt;
target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YOUR_TESTING_TARGET&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxBlocking&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxTest&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Replace &lt;code&gt;YOUR_TARGET_NAME&lt;/code&gt; and then, in the &lt;code&gt;Podfile&lt;/code&gt; directory, type:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Officially supported: Carthage 0.33 and up.&lt;/p&gt;
&lt;p&gt;Add this to &lt;code&gt;Cartfile&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "ReactiveX/RxSwift" ~&amp;gt; 5.0
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ carthage update&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-carthage-as-a-static-library" class="anchor" aria-hidden="true" href="#carthage-as-a-static-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage as a Static Library&lt;/h4&gt;
&lt;p&gt;Carthage defaults to building RxSwift as a Dynamic Library.&lt;/p&gt;
&lt;p&gt;If you wish to build RxSwift as a Static Library using Carthage you may use the script below to manually modify the framework type before building with Carthage:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;carthage update RxSwift --platform iOS --no-build
sed -i -e &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; Carthage/Checkouts/RxSwift/Rx.xcodeproj/project.pbxproj
carthage build RxSwift --platform iOS&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/apple/swift-package-manager"&gt;Swift Package Manager&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Create a &lt;code&gt;Package.swift&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/ReactiveX/RxSwift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ],
  &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxSwift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxCocoa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build or test a module with RxTest dependency, set &lt;code&gt;TEST=1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ TEST=1 swift &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually-using-git-submodules" class="anchor" aria-hidden="true" href="#manually-using-git-submodules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually using git submodules&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Add RxSwift as a submodule&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git submodule add git@github.com:ReactiveX/RxSwift.git&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Drag &lt;code&gt;Rx.xcodeproj&lt;/code&gt; into Project Navigator&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;Project &amp;gt; Targets &amp;gt; Build Phases &amp;gt; Link Binary With Libraries&lt;/code&gt;, click &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;RxSwift-[Platform]&lt;/code&gt; and &lt;code&gt;RxCocoa-[Platform]&lt;/code&gt; targets&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reactivex.io/" rel="nofollow"&gt;http://reactivex.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Reactive-Extensions"&gt;Reactive Extensions GitHub (GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://store.raywenderlich.com/products/rxswift-reactive-programming-with-swift" rel="nofollow"&gt;RxSwift RayWenderlich.com Book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boxueio.com/series/rxswift-101" rel="nofollow"&gt;Boxue.io RxSwift Online Course&lt;/a&gt; (Chinese &lt;g-emoji class="g-emoji" alias="cn" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png"&gt;🇨🇳&lt;/g-emoji&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Erik_Meijer_%28computer_scientist%29" rel="nofollow"&gt;Erik Meijer (Wikipedia)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/looJcaeboBY" rel="nofollow"&gt;Expert to Expert: Brian Beckman and Erik Meijer - Inside the .NET Reactive Framework (Rx) (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dwP1TNXE6fc" rel="nofollow"&gt;Reactive Programming Overview (Jafar Husain from Netflix)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://csl.stanford.edu/~christos/pldi2010.fit/meijer.duality.pdf" rel="nofollow"&gt;Subject/Observer is Dual to Iterator (paper)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rxmarbles.com/" rel="nofollow"&gt;Rx standard sequence operators visualized (visualization tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.haskell.org/" rel="nofollow"&gt;Haskell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ReactiveX</author><guid isPermaLink="false">https://github.com/ReactiveX/RxSwift</guid><pubDate>Sat, 21 Dec 2019 00:02:00 GMT</pubDate></item><item><title>SCENEE/FloatingPanel #3 in Swift, Today</title><link>https://github.com/SCENEE/FloatingPanel</link><description>&lt;p&gt;&lt;i&gt;A clean and easy-to-use floating panel UI component for iOS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/SCENEE/FloatingPanel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5785c0b6aafe28062009db0494e3cb3565c7d2fa/68747470733a2f2f7472617669732d63692e6f72672f5343454e45452f466c6f6174696e6750616e656c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/SCENEE/FloatingPanel.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/FloatingPanel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c692d42a767bfe52fa440f3ec7b3010ee3f4021/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f466c6f6174696e6750616e656c2e737667" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/FloatingPanel.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/FloatingPanel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/28c389aca4ce2f95522f8cfc29bad94f513149d8/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f466c6f6174696e6750616e656c2e737667" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/FloatingPanel.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c10a9f743bfb7e0a70b21ddd7f9a903547919453/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d342e312d6f72616e67652e7376673f7374796c653d666c6174" alt="Swift 4.1" data-canonical-src="https://img.shields.io/badge/Swift-4.1-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cc157628e33009bbb18f6e476955a0f641f407d9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d342e322d6f72616e67652e7376673f7374796c653d666c6174" alt="Swift 4.2" data-canonical-src="https://img.shields.io/badge/Swift-4.2-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c44447970d8ab760d39e09c8b3837dff55f74fd1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352e302d6f72616e67652e7376673f7374796c653d666c6174" alt="Swift 5.0" data-canonical-src="https://img.shields.io/badge/Swift-5.0-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d2c1f41fcc076cea3518afc3f09b6af0a58a6244/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352e312d6f72616e67652e7376673f7374796c653d666c6174" alt="Swift 5.1" data-canonical-src="https://img.shields.io/badge/Swift-5.1-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-floatingpanel" class="anchor" aria-hidden="true" href="#floatingpanel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FloatingPanel&lt;/h1&gt;
&lt;p&gt;FloatingPanel is a simple and easy-to-use UI component for a new interface introduced in Apple Maps, Shortcuts and Stocks app.
The new interface displays the related contents and utilities in parallel as a user wants.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/SCENEE/FloatingPanel/blob/master/assets/maps.gif"&gt;&lt;img src="https://github.com/SCENEE/FloatingPanel/raw/master/assets/maps.gif" alt="Maps" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/SCENEE/FloatingPanel/blob/master/assets/stocks.gif"&gt;&lt;img src="https://github.com/SCENEE/FloatingPanel/raw/master/assets/stocks.gif" alt="Stocks" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/SCENEE/FloatingPanel/blob/master/assets/maps-landscape.gif"&gt;&lt;img src="https://github.com/SCENEE/FloatingPanel/raw/master/assets/maps-landscape.gif" alt="Maps(Landscape)" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cocoapods"&gt;CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#carthage"&gt;Carthage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-package-manager-with-xcode-11"&gt;Swift Package Manager with Xcode 11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#add-a-floating-panel-as-a-child-view-controller"&gt;Add a floating panel as a child view controller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#present-a-floating-panel-as-a-modality"&gt;Present a floating panel as a modality&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#view-hierarchy"&gt;View hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#showhide-a-floating-panel-in-a-view-with-your-view-hierarchy"&gt;Show/Hide a floating panel in a view with your view hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scale-the-content-view-when-the-surface-position-changes"&gt;Scale the content view when the surface position changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customize-the-layout-with-floatingpanellayout-protocol"&gt;Customize the layout with &lt;code&gt;FloatingPanelLayout&lt;/code&gt; protocol&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#change-the-initial-position-and-height"&gt;Change the initial position and height&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#support-your-landscape-layout"&gt;Support your landscape layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#use-intrinsic-height-layout"&gt;Use Intrinsic height layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#specify-position-insets-from-the-frame-of-floatingpanelcontrllerview-not-the-safearea"&gt;Specify position insets from the frame of &lt;code&gt;FloatingPanelContrller.view&lt;/code&gt;, not the SafeArea&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#customize-the-behavior-with-floatingpanelbehavior-protocol"&gt;Customize the behavior with &lt;code&gt;FloatingPanelBehavior&lt;/code&gt; protocol&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#modify-your-floating-panels-interaction"&gt;Modify your floating panel's interaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#activate-the-rubber-band-effect-on-the-topbottom-edges"&gt;Activate the rubber-band effect on the top/bottom edges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manage-the-projection-of-a-pan-gesture-momentum"&gt;Manage the projection of a pan gesture momentum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#customize-the-surface-design"&gt;Customize the surface design&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#use-a-custom-grabber-handle"&gt;Use a custom grabber handle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customize-layout-of-the-grabber-handle"&gt;Customize layout of the grabber handle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customize-content-padding-from-surface-edges"&gt;Customize content padding from surface edges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customize-margins-of-the-surface-edges"&gt;Customize margins of the surface edges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#customize-gestures"&gt;Customize gestures&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#suppress-the-panel-interaction"&gt;Suppress the panel interaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add-tap-gestures-to-the-surface-or-backdrop-views"&gt;Add tap gestures to the surface or backdrop views&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-an-additional-floating-panel-for-a-detail"&gt;Create an additional floating panel for a detail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#move-a-position-with-an-animation"&gt;Move a position with an animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#work-your-contents-together-with-a-floating-panel-behavior"&gt;Work your contents together with a floating panel behavior&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#notes"&gt;Notes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#show-or-show-detail-segues-from-floatingpanelcontrollers-content-view-controller"&gt;'Show' or 'Show Detail' Segues from &lt;code&gt;FloatingPanelController&lt;/code&gt;'s content view controller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uisearchcontroller-issue"&gt;UISearchController issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#floatingpanelsurfaceviews-issue-on-ios-10"&gt;FloatingPanelSurfaceView's issue on iOS 10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#author"&gt;Author&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Simple container view controller&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Fluid animation and gesture handling&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Scroll view tracking&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Common UI elements: Grabber handle, Backdrop and Surface rounding corners&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; 1~3 anchor positions(full, half, tip)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Layout customization for all trait environments(i.e. Landscape orientation support)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Behavior customization&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Free from common issues of Auto Layout and gesture handling&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Modal presentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Examples are here.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SCENEE/FloatingPanel/tree/master/Examples/Maps"&gt;Examples/Maps&lt;/a&gt; like Apple Maps.app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SCENEE/FloatingPanel/tree/master/Examples/Stocks"&gt;Examples/Stocks&lt;/a&gt; like Apple Stocks.app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;FloatingPanel is written in Swift 4.0+. It can be built by Xcode 9.4.1 or later. Compatible with iOS 10.0+.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="pencil2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/270f.png"&gt;✏️&lt;/g-emoji&gt; The default Swift version is 4.0 because it avoids build errors with Carthage on each Xcode version from the source compatibility between Swift 4.0, 4.2 and 5.0.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;FloatingPanel is available through &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;. To install
it, simply add the following line to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;FloatingPanel&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="pencil2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/270f.png"&gt;✏️&lt;/g-emoji&gt;FloatingPanel v1.7.0 or later requires CocoaPods v1.7.0+ for &lt;code&gt;swift_versions&lt;/code&gt; support.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;For &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;, add the following to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "scenee/FloatingPanel"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager-with-xcode-11" class="anchor" aria-hidden="true" href="#swift-package-manager-with-xcode-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager with Xcode 11&lt;/h3&gt;
&lt;p&gt;Follow &lt;a href="https://developer.apple.com/documentation/swift_packages/adding_package_dependencies_to_your_app" rel="nofollow"&gt;this doc&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-add-a-floating-panel-as-a-child-view-controller" class="anchor" aria-hidden="true" href="#add-a-floating-panel-as-a-child-view-controller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add a floating panel as a child view controller&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;UIKit&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;FloatingPanel&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;FloatingPanelControllerDelegate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; fpc&lt;span class="pl-k"&gt;:&lt;/span&gt; FloatingPanelController&lt;span class="pl-k"&gt;!&lt;/span&gt;

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLoad&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewDidLoad&lt;/span&gt;()
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Initialize a `FloatingPanelController` object.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        fpc &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingPanelController&lt;/span&gt;()

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assign self as the delegate of the controller.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        fpc.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Optional&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set a content view controller.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; contentVC &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ContentViewController&lt;/span&gt;()
        fpc.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-c1"&gt;contentViewController&lt;/span&gt;: contentVC)

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track a scroll view(or the siblings) in the content view controller.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        fpc.&lt;span class="pl-c1"&gt;track&lt;/span&gt;(&lt;span class="pl-c1"&gt;scrollView&lt;/span&gt;: contentVC.&lt;span class="pl-smi"&gt;tableView&lt;/span&gt;)

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add and show the views managed by the `FloatingPanelController` object to self.view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        fpc.&lt;span class="pl-c1"&gt;addPanel&lt;/span&gt;(&lt;span class="pl-c1"&gt;toParent&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillDisappear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillDisappear&lt;/span&gt;(animated)

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Remove the views managed by the `FloatingPanelController` object from self.view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        fpc.&lt;span class="pl-c1"&gt;removePanelFromParent&lt;/span&gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-present-a-floating-panel-as-a-modality" class="anchor" aria-hidden="true" href="#present-a-floating-panel-as-a-modality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Present a floating panel as a modality&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; fpc &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingPanelController&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; contentVC &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
fpc.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-c1"&gt;contentViewController&lt;/span&gt;: contentVC)

fpc.&lt;span class="pl-smi"&gt;isRemovalInteractionEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Optional: Let it removable by a swipe-down&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;present&lt;/span&gt;(fpc, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can show a floating panel over UINavigationController from the container view controllers as a modality of &lt;code&gt;.overCurrentContext&lt;/code&gt; style.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="pencil2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/270f.png"&gt;✏️&lt;/g-emoji&gt; FloatingPanelController has the custom presentation controller. If you would like to customize the presentation/dismissal, please see &lt;a href="https://github.com/SCENEE/FloatingPanel/blob/master/Framework/Sources/FloatingPanelTransitioning.swift"&gt;FloatingPanelTransitioning&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-view-hierarchy" class="anchor" aria-hidden="true" href="#view-hierarchy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View hierarchy&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;FloatingPanelController&lt;/code&gt; manages the views as the following view hierarchy.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FloatingPanelController.view (FloatingPanelPassThroughView)
 ├─ .backdropView (FloatingPanelBackdropView)
 └─ .surfaceView (FloatingPanelSurfaceView)
    ├─ .containerView (UIView)
    │  └─ .contentView (FloatingPanelController.contentViewController.view)
    └─ .grabberHandle (GrabberHandleView)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-showhide-a-floating-panel-in-a-view-with-your-view-hierarchy" class="anchor" aria-hidden="true" href="#showhide-a-floating-panel-in-a-view-with-your-view-hierarchy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Show/Hide a floating panel in a view with your view hierarchy&lt;/h3&gt;
&lt;p&gt;If you need more control over showing and hiding the floating panel, you can forgo the &lt;code&gt;addPanel&lt;/code&gt; and &lt;code&gt;removePanelFromParent&lt;/code&gt; methods. These methods are a convenience wrapper for &lt;strong&gt;FloatingPanel&lt;/strong&gt;'s &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;hide&lt;/code&gt; methods along with some required setup.&lt;/p&gt;
&lt;p&gt;There are two ways to work with the &lt;code&gt;FloatingPanelController&lt;/code&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add it to the hierarchy once and then call &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;hide&lt;/code&gt; methods to make it appear/disappear.&lt;/li&gt;
&lt;li&gt;Add it to the hierarchy when needed and remove afterwards.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following example shows how to add the controller to your &lt;code&gt;UIViewController&lt;/code&gt; and how to remove it. Make sure that you never add the same &lt;code&gt;FloatingPanelController&lt;/code&gt; to the hierarchy before removing it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;self.&lt;/code&gt; prefix is not required, nor recommended. It's used here to make it clearer where do the functions used come from. &lt;code&gt;self&lt;/code&gt; is an instance of a custom UIViewController in your code.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add the floating panel view to the controller's view on top of other views.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-c1"&gt;addSubview&lt;/span&gt;(fpc.&lt;span class="pl-c1"&gt;view&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; REQUIRED. It makes the floating panel view have the same size as the controller's view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;fpc.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;frame&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;bounds&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In addition, Auto Layout constraints are highly recommended.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Constraint the fpc.view to all four edges of your controller's view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; It makes the layout more robust on trait collection change.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;fpc.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;translatesAutoresizingMaskIntoConstraints&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
NSLayoutConstraint.&lt;span class="pl-c1"&gt;activate&lt;/span&gt;([
  fpc.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;topAnchor&lt;/span&gt;.&lt;span class="pl-c1"&gt;constraint&lt;/span&gt;(&lt;span class="pl-c1"&gt;equalTo&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;topAnchor&lt;/span&gt;, &lt;span class="pl-c1"&gt;constant&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.0&lt;/span&gt;),
  fpc.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;leftAnchor&lt;/span&gt;.&lt;span class="pl-c1"&gt;constraint&lt;/span&gt;(&lt;span class="pl-c1"&gt;equalTo&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;leftAnchor&lt;/span&gt;, &lt;span class="pl-c1"&gt;constant&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.0&lt;/span&gt;),
  fpc.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;rightAnchor&lt;/span&gt;.&lt;span class="pl-c1"&gt;constraint&lt;/span&gt;(&lt;span class="pl-c1"&gt;equalTo&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;rightAnchor&lt;/span&gt;, &lt;span class="pl-c1"&gt;constant&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.0&lt;/span&gt;),
  fpc.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;bottomAnchor&lt;/span&gt;.&lt;span class="pl-c1"&gt;constraint&lt;/span&gt;(&lt;span class="pl-c1"&gt;equalTo&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-smi"&gt;bottomAnchor&lt;/span&gt;, &lt;span class="pl-c1"&gt;constant&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.0&lt;/span&gt;),
])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add the floating panel controller to the controller hierarchy.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;addChild&lt;/span&gt;(fpc)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Show the floating panel at the initial position defined in your `FloatingPanelLayout` object.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;fpc.&lt;span class="pl-c1"&gt;show&lt;/span&gt;(&lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Inform the floating panel controller that the transition to the controller hierarchy has completed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    fpc.&lt;span class="pl-c1"&gt;didMove&lt;/span&gt;(&lt;span class="pl-c1"&gt;toParent&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you add the &lt;code&gt;FloatingPanelController&lt;/code&gt; as seen above, you can call &lt;code&gt;fpc.show(animated: true) { }&lt;/code&gt; to show the panel and &lt;code&gt;fpc.hide(animated: true) { }&lt;/code&gt; to hide it.&lt;/p&gt;
&lt;p&gt;To remove the &lt;code&gt;FloatingPanelController&lt;/code&gt; from the hierarchy, follow the example below.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Inform the panel controller that it will be removed from the hierarchy.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;fpc.&lt;span class="pl-c1"&gt;willMove&lt;/span&gt;(&lt;span class="pl-c1"&gt;toParent&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
    
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Hide the floating panel.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;fpc.&lt;span class="pl-c1"&gt;hide&lt;/span&gt;(&lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Remove the floating panel view from your controller's view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    fpc.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-c1"&gt;removeFromSuperview&lt;/span&gt;()
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Remove the floating panel controller from the controller hierarchy.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    fpc.&lt;span class="pl-c1"&gt;removeFromParent&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-scale-the-content-view-when-the-surface-position-changes" class="anchor" aria-hidden="true" href="#scale-the-content-view-when-the-surface-position-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scale the content view when the surface position changes&lt;/h3&gt;
&lt;p&gt;Specify the &lt;code&gt;contentMode&lt;/code&gt; to &lt;code&gt;.fitToBounds&lt;/code&gt; if the surface height fits the bounds of &lt;code&gt;FloatingPanelController.view&lt;/code&gt; when the surface position changes&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;fpc.&lt;span class="pl-smi"&gt;contentMode&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;fitToBounds&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Otherwise, &lt;code&gt;FloatingPanelController&lt;/code&gt; fixes the content by the height of the top most position.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="pencil2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/270f.png"&gt;✏️&lt;/g-emoji&gt; In &lt;code&gt;.fitToBounds&lt;/code&gt; mode, the surface height changes as following a user interaction so that you have a responsibility to configure Auto Layout constrains not to break the layout of a content view by the elastic surface height.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-customize-the-layout-with-floatingpanellayout-protocol" class="anchor" aria-hidden="true" href="#customize-the-layout-with-floatingpanellayout-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize the layout with &lt;code&gt;FloatingPanelLayout&lt;/code&gt; protocol&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-change-the-initial-position-and-height" class="anchor" aria-hidden="true" href="#change-the-initial-position-and-height"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change the initial position and height&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;FloatingPanelControllerDelegate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;floatingPanel&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;vc&lt;/span&gt;: FloatingPanelController, &lt;span class="pl-en"&gt;layoutFor&lt;/span&gt; &lt;span class="pl-smi"&gt;newCollection&lt;/span&gt;: UITraitCollection) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; FloatingPanelLayout&lt;span class="pl-k"&gt;?&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;MyFloatingPanelLayout&lt;/span&gt;()
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyFloatingPanelLayout&lt;/span&gt;: &lt;span class="pl-e"&gt;FloatingPanelLayout &lt;/span&gt;{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; initialPosition&lt;span class="pl-k"&gt;:&lt;/span&gt; FloatingPanelPosition {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;tip&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;insetFor&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;position&lt;/span&gt;&lt;/span&gt;: FloatingPanelPosition) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt; {
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; position {
            &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;full&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;16.0&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A top inset from safe area&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;half&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;216.0&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A bottom inset from the safe area&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;tip&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;44.0&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A bottom inset from the safe area&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Or `case .hidden: return nil`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-support-your-landscape-layout" class="anchor" aria-hidden="true" href="#support-your-landscape-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support your landscape layout&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;FloatingPanelControllerDelegate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;floatingPanel&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;vc&lt;/span&gt;: FloatingPanelController, &lt;span class="pl-en"&gt;layoutFor&lt;/span&gt; &lt;span class="pl-smi"&gt;newCollection&lt;/span&gt;: UITraitCollection) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; FloatingPanelLayout&lt;span class="pl-k"&gt;?&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; (newCollection.&lt;span class="pl-smi"&gt;verticalSizeClass&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;compact&lt;/span&gt;) &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingPanelLandscapeLayout&lt;/span&gt;() &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Returning nil indicates to use the default layout&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;FloatingPanelLandscapeLayout&lt;/span&gt;: &lt;span class="pl-e"&gt;FloatingPanelLayout &lt;/span&gt;{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; initialPosition&lt;span class="pl-k"&gt;:&lt;/span&gt; FloatingPanelPosition {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;tip&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; supportedPositions&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Set&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;FloatingPanelPosition&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; [.&lt;span class="pl-smi"&gt;full&lt;/span&gt;, .&lt;span class="pl-smi"&gt;tip&lt;/span&gt;]
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;insetFor&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;position&lt;/span&gt;&lt;/span&gt;: FloatingPanelPosition) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt; {
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; position {
            &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;full&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;16.0&lt;/span&gt;
            &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;tip&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;69.0&lt;/span&gt;
            &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
        }
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;prepareLayout&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;surfaceView&lt;/span&gt;&lt;/span&gt;: UIView, &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;view&lt;/span&gt;: UIView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [NSLayoutConstraint] {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; [
            surfaceView.&lt;span class="pl-smi"&gt;leftAnchor&lt;/span&gt;.&lt;span class="pl-c1"&gt;constraint&lt;/span&gt;(&lt;span class="pl-c1"&gt;equalTo&lt;/span&gt;: view.&lt;span class="pl-smi"&gt;safeAreaLayoutGuide&lt;/span&gt;.&lt;span class="pl-smi"&gt;leftAnchor&lt;/span&gt;, &lt;span class="pl-c1"&gt;constant&lt;/span&gt;: &lt;span class="pl-c1"&gt;8.0&lt;/span&gt;),
            surfaceView.&lt;span class="pl-smi"&gt;widthAnchor&lt;/span&gt;.&lt;span class="pl-c1"&gt;constraint&lt;/span&gt;(&lt;span class="pl-c1"&gt;equalToConstant&lt;/span&gt;: &lt;span class="pl-c1"&gt;291&lt;/span&gt;),
        ]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-use-intrinsic-height-layout" class="anchor" aria-hidden="true" href="#use-intrinsic-height-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use Intrinsic height layout&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Lay out your content View with the intrinsic height size. For example, see "Detail View Controller scene"/"Intrinsic View Controller scene" of &lt;a href="https://github.com/SCENEE/FloatingPanel/blob/master/Examples/Samples/Sources/Base.lproj/Main.storyboard"&gt;Main.storyboard&lt;/a&gt;. The 'Stack View.bottom' constraint determines the intrinsic height.&lt;/li&gt;
&lt;li&gt;Create a layout that adopts and conforms to &lt;code&gt;FloatingPanelIntrinsicLayout&lt;/code&gt; and use it.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;FloatingPanelControllerDelegate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;floatingPanel&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;vc&lt;/span&gt;: FloatingPanelController, &lt;span class="pl-en"&gt;layoutFor&lt;/span&gt; &lt;span class="pl-smi"&gt;newCollection&lt;/span&gt;: UITraitCollection) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; FloatingPanelLayout&lt;span class="pl-k"&gt;?&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;RemovablePanelLayout&lt;/span&gt;()
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;RemovablePanelLayout&lt;/span&gt;: &lt;span class="pl-e"&gt;FloatingPanelIntrinsicLayout &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; supportedPositions&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Set&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;FloatingPanelPosition&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; [.&lt;span class="pl-smi"&gt;full&lt;/span&gt;, .&lt;span class="pl-smi"&gt;half&lt;/span&gt;]
    }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;insetFor&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;position&lt;/span&gt;&lt;/span&gt;: FloatingPanelPosition) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt; {
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; position {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;half&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;130.0&lt;/span&gt;
        &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Must return nil for .full&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        }
    }
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-specify-position-insets-from-the-frame-of-floatingpanelcontrllerview-not-the-safearea" class="anchor" aria-hidden="true" href="#specify-position-insets-from-the-frame-of-floatingpanelcontrllerview-not-the-safearea"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Specify position insets from the frame of &lt;code&gt;FloatingPanelContrller.view&lt;/code&gt;, not the SafeArea&lt;/h4&gt;
&lt;p&gt;There are 2 ways. One is returning &lt;code&gt;.fromSuperview&lt;/code&gt; for &lt;code&gt;FloatingPanelLayout.positionReference&lt;/code&gt; in your layout.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyFullScreenLayout&lt;/span&gt;: &lt;span class="pl-e"&gt;FloatingPanelLayout &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; positionReference&lt;span class="pl-k"&gt;:&lt;/span&gt; FloatingPanelLayoutReference {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;fromSuperview&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another is using &lt;code&gt;FloatingPanelFullScreenLayout&lt;/code&gt; protocol.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyFullScreenLayout&lt;/span&gt;: &lt;span class="pl-e"&gt;FloatingPanelFullScreenLayout &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-customize-the-behavior-with-floatingpanelbehavior-protocol" class="anchor" aria-hidden="true" href="#customize-the-behavior-with-floatingpanelbehavior-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize the behavior with &lt;code&gt;FloatingPanelBehavior&lt;/code&gt; protocol&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-modify-your-floating-panels-interaction" class="anchor" aria-hidden="true" href="#modify-your-floating-panels-interaction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modify your floating panel's interaction&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;FloatingPanelControllerDelegate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;floatingPanel&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;vc&lt;/span&gt;: FloatingPanelController, &lt;span class="pl-en"&gt;behaviorFor&lt;/span&gt; &lt;span class="pl-smi"&gt;newCollection&lt;/span&gt;: UITraitCollection) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; FloatingPanelBehavior&lt;span class="pl-k"&gt;?&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingPanelStocksBehavior&lt;/span&gt;()
    }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;FloatingPanelStocksBehavior&lt;/span&gt;: &lt;span class="pl-e"&gt;FloatingPanelBehavior &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;interactionAnimator&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;fpc&lt;/span&gt;: FloatingPanelController, &lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;targetPosition&lt;/span&gt;: FloatingPanelPosition, &lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;velocity&lt;/span&gt;: CGVector) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UIViewPropertyAnimator {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; damping &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;damping&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: velocity)
        &lt;span class="pl-k"&gt;let&lt;/span&gt; springTiming &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UISpringTimingParameters&lt;/span&gt;(&lt;span class="pl-c1"&gt;dampingRatio&lt;/span&gt;: damping, &lt;span class="pl-c1"&gt;initialVelocity&lt;/span&gt;: velocity)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;UIViewPropertyAnimator&lt;/span&gt;(&lt;span class="pl-c1"&gt;duration&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;timingParameters&lt;/span&gt;: springTiming)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-activate-the-rubber-band-effect-on-the-topbottom-edges" class="anchor" aria-hidden="true" href="#activate-the-rubber-band-effect-on-the-topbottom-edges"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Activate the rubber-band effect on the top/bottom edges&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;FloatingPanelBehavior&lt;/span&gt;: &lt;span class="pl-e"&gt;FloatingPanelBehavior &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;allowsRubberBanding&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;edge&lt;/span&gt;: UIRectEdge) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-manage-the-projection-of-a-pan-gesture-momentum" class="anchor" aria-hidden="true" href="#manage-the-projection-of-a-pan-gesture-momentum"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manage the projection of a pan gesture momentum&lt;/h4&gt;
&lt;p&gt;This allows full projectional panel behavior. For example, a user can swipe up a panel from tip to full nearby the tip position.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;FloatingPanelBehavior&lt;/span&gt;: &lt;span class="pl-e"&gt;FloatingPanelBehavior &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;shouldProjectMomentum&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;fpc&lt;/span&gt;: FloatingPanelController, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;proposedTargetPosition&lt;/span&gt;: FloatingPanelPosition) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-customize-the-surface-design" class="anchor" aria-hidden="true" href="#customize-the-surface-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize the surface design&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-use-a-custom-grabber-handle" class="anchor" aria-hidden="true" href="#use-a-custom-grabber-handle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use a custom grabber handle&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; myGrabberHandleView &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyGrabberHandleView&lt;/span&gt;()
fpc.&lt;span class="pl-smi"&gt;surfaceView&lt;/span&gt;.&lt;span class="pl-smi"&gt;grabberHandle&lt;/span&gt;.&lt;span class="pl-smi"&gt;isHidden&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
fpc.&lt;span class="pl-smi"&gt;surfaceView&lt;/span&gt;.&lt;span class="pl-c1"&gt;addSubview&lt;/span&gt;(myGrabberHandleView)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-customize-layout-of-the-grabber-handle" class="anchor" aria-hidden="true" href="#customize-layout-of-the-grabber-handle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize layout of the grabber handle&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;fpc.&lt;span class="pl-smi"&gt;surfaceView&lt;/span&gt;.&lt;span class="pl-smi"&gt;grabberTopPadding&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10.0&lt;/span&gt;
fpc.&lt;span class="pl-smi"&gt;surfaceView&lt;/span&gt;.&lt;span class="pl-smi"&gt;grabberHandleWidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;44.0&lt;/span&gt;
fpc.&lt;span class="pl-smi"&gt;surfaceView&lt;/span&gt;.&lt;span class="pl-smi"&gt;grabberHandleHeight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;12.0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-customize-content-padding-from-surface-edges" class="anchor" aria-hidden="true" href="#customize-content-padding-from-surface-edges"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize content padding from surface edges&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;fpc.&lt;span class="pl-smi"&gt;surfaceView&lt;/span&gt;.&lt;span class="pl-smi"&gt;contentInsets&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;top&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;left&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;bottom&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;right&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-customize-margins-of-the-surface-edges" class="anchor" aria-hidden="true" href="#customize-margins-of-the-surface-edges"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize margins of the surface edges&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;fpc.&lt;span class="pl-smi"&gt;surfaceView&lt;/span&gt;.&lt;span class="pl-smi"&gt;containerMargins&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;top&lt;/span&gt;: &lt;span class="pl-c1"&gt;20.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;left&lt;/span&gt;: &lt;span class="pl-c1"&gt;16.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;bottom&lt;/span&gt;: &lt;span class="pl-c1"&gt;16.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;right&lt;/span&gt;: &lt;span class="pl-c1"&gt;16.0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The feature can be used for these 2 kind panels&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Facebook/Slack-like panel whose surface top edge is separated from the grabber handle.&lt;/li&gt;
&lt;li&gt;iOS native panel to display AirPods information, for example.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-customize-gestures" class="anchor" aria-hidden="true" href="#customize-gestures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize gestures&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-suppress-the-panel-interaction" class="anchor" aria-hidden="true" href="#suppress-the-panel-interaction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Suppress the panel interaction&lt;/h4&gt;
&lt;p&gt;You can disable the pan gesture recognizer directly&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;fpc.&lt;span class="pl-smi"&gt;panGestureRecognizer&lt;/span&gt;.&lt;span class="pl-smi"&gt;isEnable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or use this &lt;code&gt;FloatingPanelControllerDelegate&lt;/code&gt; method.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;floatingPanelShouldBeginDragging&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;vc&lt;/span&gt;: FloatingPanelController) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; aCondition &lt;span class="pl-k"&gt;?&lt;/span&gt;  &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-add-tap-gestures-to-the-surface-or-backdrop-views" class="anchor" aria-hidden="true" href="#add-tap-gestures-to-the-surface-or-backdrop-views"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add tap gestures to the surface or backdrop views&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLoad&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    surfaceTapGesture &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UITapGestureRecognizer&lt;/span&gt;(&lt;span class="pl-c1"&gt;target&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;action&lt;/span&gt;: &lt;span class="pl-c1"&gt;#selector&lt;/span&gt;(&lt;span class="pl-en"&gt;handleSurface&lt;/span&gt;(&lt;span class="pl-en"&gt;tapGesture:&lt;/span&gt;)))
    fpc.&lt;span class="pl-smi"&gt;surfaceView&lt;/span&gt;.&lt;span class="pl-c1"&gt;addGestureRecognizer&lt;/span&gt;(surfaceTapGesture)

    backdropTapGesture &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UITapGestureRecognizer&lt;/span&gt;(&lt;span class="pl-c1"&gt;target&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;action&lt;/span&gt;: &lt;span class="pl-c1"&gt;#selector&lt;/span&gt;(&lt;span class="pl-en"&gt;handleBackdrop&lt;/span&gt;(&lt;span class="pl-en"&gt;tapGesture:&lt;/span&gt;)))
    fpc.&lt;span class="pl-smi"&gt;backdropView&lt;/span&gt;.&lt;span class="pl-c1"&gt;addGestureRecognizer&lt;/span&gt;(backdropTapGesture)

    surfaceTapGesture.&lt;span class="pl-smi"&gt;isEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (fpc.&lt;span class="pl-smi"&gt;position&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;tip&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Enable `surfaceTapGesture` only at `tip` position&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;floatingPanelDidChangePosition&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;vc&lt;/span&gt;: FloatingPanelController) {
    surfaceTapGesture.&lt;span class="pl-smi"&gt;isEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (vc.&lt;span class="pl-smi"&gt;position&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;tip&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-create-an-additional-floating-panel-for-a-detail" class="anchor" aria-hidden="true" href="#create-an-additional-floating-panel-for-a-detail"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create an additional floating panel for a detail&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLoad&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Setup Search panel&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;searchPanelVC&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingPanelController&lt;/span&gt;()

    &lt;span class="pl-k"&gt;let&lt;/span&gt; searchVC &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SearchViewController&lt;/span&gt;()
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;searchPanelVC&lt;/span&gt;.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-c1"&gt;contentViewController&lt;/span&gt;: searchVC)
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;searchPanelVC&lt;/span&gt;.&lt;span class="pl-c1"&gt;track&lt;/span&gt;(&lt;span class="pl-c1"&gt;scrollView&lt;/span&gt;: contentVC.&lt;span class="pl-smi"&gt;tableView&lt;/span&gt;)

    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;searchPanelVC&lt;/span&gt;.&lt;span class="pl-c1"&gt;addPanel&lt;/span&gt;(&lt;span class="pl-c1"&gt;toParent&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Setup Detail panel&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;detailPanelVC&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingPanelController&lt;/span&gt;()

    &lt;span class="pl-k"&gt;let&lt;/span&gt; contentVC &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ContentViewController&lt;/span&gt;()
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;detailPanelVC&lt;/span&gt;.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-c1"&gt;contentViewController&lt;/span&gt;: contentVC)
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;detailPanelVC&lt;/span&gt;.&lt;span class="pl-c1"&gt;track&lt;/span&gt;(&lt;span class="pl-c1"&gt;scrollView&lt;/span&gt;: contentVC.&lt;span class="pl-smi"&gt;scrollView&lt;/span&gt;)

    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;detailPanelVC&lt;/span&gt;.&lt;span class="pl-c1"&gt;addPanel&lt;/span&gt;(&lt;span class="pl-c1"&gt;toParent&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-move-a-position-with-an-animation" class="anchor" aria-hidden="true" href="#move-a-position-with-an-animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Move a position with an animation&lt;/h3&gt;
&lt;p&gt;In the following example, I move a floating panel to full or half position while opening or closing a search bar like Apple Maps.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;searchBarCancelButtonClicked&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;searchBar&lt;/span&gt;: UISearchBar) {
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    fpc.&lt;span class="pl-c1"&gt;move&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: .&lt;span class="pl-smi"&gt;half&lt;/span&gt;, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;searchBarTextDidBeginEditing&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;searchBar&lt;/span&gt;: UISearchBar) {
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    fpc.&lt;span class="pl-c1"&gt;move&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: .&lt;span class="pl-smi"&gt;full&lt;/span&gt;, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-work-your-contents-together-with-a-floating-panel-behavior" class="anchor" aria-hidden="true" href="#work-your-contents-together-with-a-floating-panel-behavior"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Work your contents together with a floating panel behavior&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;FloatingPanelControllerDelegate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;floatingPanelWillBeginDragging&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;vc&lt;/span&gt;: FloatingPanelController) {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; vc.&lt;span class="pl-smi"&gt;position&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;full&lt;/span&gt; {
            searchVC.&lt;span class="pl-smi"&gt;searchBar&lt;/span&gt;.&lt;span class="pl-smi"&gt;showsCancelButton&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
            searchVC.&lt;span class="pl-smi"&gt;searchBar&lt;/span&gt;.&lt;span class="pl-c1"&gt;resignFirstResponder&lt;/span&gt;()
        }
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;floatingPanelDidEndDragging&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;vc&lt;/span&gt;: FloatingPanelController, &lt;span class="pl-en"&gt;withVelocity&lt;/span&gt; &lt;span class="pl-smi"&gt;velocity&lt;/span&gt;: CGPoint, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;targetPosition&lt;/span&gt;&lt;/span&gt;: FloatingPanelPosition) {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; targetPosition &lt;span class="pl-k"&gt;!=&lt;/span&gt; .&lt;span class="pl-smi"&gt;full&lt;/span&gt; {
            searchVC.&lt;span class="pl-c1"&gt;hideHeader&lt;/span&gt;()
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-show-or-show-detail-segues-from-floatingpanelcontrollers-content-view-controller" class="anchor" aria-hidden="true" href="#show-or-show-detail-segues-from-floatingpanelcontrollers-content-view-controller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;'Show' or 'Show Detail' Segues from &lt;code&gt;FloatingPanelController&lt;/code&gt;'s content view controller&lt;/h3&gt;
&lt;p&gt;'Show' or 'Show Detail' segues from a content view controller will be managed by a view controller(hereinafter called 'master VC') adding a floating panel. Because a floating panel is just a subview of the master VC(except for modality).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;FloatingPanelController&lt;/code&gt; has no way to manage a stack of view controllers like &lt;code&gt;UINavigationController&lt;/code&gt;. If so, it would be so complicated and the interface will become &lt;code&gt;UINavigationController&lt;/code&gt;. This component should not have the responsibility to manage the stack.&lt;/p&gt;
&lt;p&gt;By the way, a content view controller can present a view controller modally with &lt;code&gt;present(_:animated:completion:)&lt;/code&gt; or 'Present Modally' segue.&lt;/p&gt;
&lt;p&gt;However, sometimes you want to show a destination view controller of 'Show' or 'Show Detail' segue with another floating panel. It's possible to override &lt;code&gt;show(_:sender)&lt;/code&gt; of the master VC!&lt;/p&gt;
&lt;p&gt;Here is an example.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; fpc&lt;span class="pl-k"&gt;:&lt;/span&gt; FloatingPanelController&lt;span class="pl-k"&gt;!&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; secondFpc&lt;span class="pl-k"&gt;:&lt;/span&gt; FloatingPanelController&lt;span class="pl-k"&gt;!&lt;/span&gt;

    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;show&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;vc&lt;/span&gt;: UIViewController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;sender&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Any&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        secondFpc &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingPanelController&lt;/span&gt;()

        secondFpc.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-c1"&gt;contentViewController&lt;/span&gt;: vc)

        secondFpc.&lt;span class="pl-c1"&gt;addPanel&lt;/span&gt;(&lt;span class="pl-c1"&gt;toParent&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A &lt;code&gt;FloatingPanelController&lt;/code&gt; object proxies an action for &lt;code&gt;show(_:sender)&lt;/code&gt; to the master VC. That's why the master VC can handle a destination view controller of a 'Show' or 'Show Detail' segue and you can hook &lt;code&gt;show(_:sender)&lt;/code&gt; to show a secondary floating panel set the destination view controller to the content.&lt;/p&gt;
&lt;p&gt;It's a great way to decouple between a floating panel and the content VC.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uisearchcontroller-issue" class="anchor" aria-hidden="true" href="#uisearchcontroller-issue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UISearchController issue&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;UISearchController&lt;/code&gt; isn't able to be used with &lt;code&gt;FloatingPanelController&lt;/code&gt; by the system design.&lt;/p&gt;
&lt;p&gt;Because &lt;code&gt;UISearchController&lt;/code&gt; automatically presents itself modally when a user interacts with the search bar, and then it swaps the superview of the search bar to the view managed by itself while it displays. As a result, &lt;code&gt;FloatingPanelController&lt;/code&gt; can't control the search bar when it's active, as you can see from &lt;a href="https://github.com/SCENEE/FloatingPanel/issues/248#issuecomment-521263831"&gt;the screen shot&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-floatingpanelsurfaceviews-issue-on-ios-10" class="anchor" aria-hidden="true" href="#floatingpanelsurfaceviews-issue-on-ios-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FloatingPanelSurfaceView's issue on iOS 10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;On iOS 10, &lt;code&gt;FloatingPanelSurfaceView.cornerRadius&lt;/code&gt; isn't not automatically masked with the top rounded corners  because of &lt;code&gt;UIVisualEffectView&lt;/code&gt; issue. See &lt;a href="https://forums.developer.apple.com/thread/50854" rel="nofollow"&gt;https://forums.developer.apple.com/thread/50854&lt;/a&gt;.
So you need to draw top rounding corners of your content.  Here is an example in Examples/Maps.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLayoutSubviews&lt;/span&gt;() {
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewDidLayoutSubviews&lt;/span&gt;()
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;#available&lt;/span&gt;(&lt;span class="pl-k"&gt;iOS&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;) {
        visualEffectView.&lt;span class="pl-smi"&gt;layer&lt;/span&gt;.&lt;span class="pl-smi"&gt;cornerRadius&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;9.0&lt;/span&gt;
        visualEffectView.&lt;span class="pl-smi"&gt;clipsToBounds&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;If you sets clear color to &lt;code&gt;FloatingPanelSurfaceView.backgroundColor&lt;/code&gt;, please note the bottom overflow of your content on bouncing at full position. To prevent it, you need to expand your content. For example, See Example/Maps App's Auto Layout settings of &lt;code&gt;UIVisualEffectView&lt;/code&gt; in Main.storyboard.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;Shin Yamamoto &lt;a href="mailto:shin@scenee.com"&gt;shin@scenee.com&lt;/a&gt; | &lt;a href="https://twitter.com/scenee" rel="nofollow"&gt;@scenee&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;FloatingPanel is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SCENEE</author><guid isPermaLink="false">https://github.com/SCENEE/FloatingPanel</guid><pubDate>Sat, 21 Dec 2019 00:03:00 GMT</pubDate></item><item><title>apple/swift-nio #4 in Swift, Today</title><link>https://github.com/apple/swift-nio</link><description>&lt;p&gt;&lt;i&gt;Event-driven network application framework for high performance protocol servers &amp; clients, non-blocking.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftnio" class="anchor" aria-hidden="true" href="#swiftnio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftNIO&lt;/h1&gt;
&lt;p&gt;SwiftNIO is a cross-platform asynchronous event-driven network application framework
for rapid development of maintainable high performance protocol servers &amp;amp; clients.&lt;/p&gt;
&lt;p&gt;It's like &lt;a href="https://netty.io" rel="nofollow"&gt;Netty&lt;/a&gt;, but written for Swift.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-repository-organization" class="anchor" aria-hidden="true" href="#repository-organization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repository organization&lt;/h3&gt;
&lt;p&gt;The SwiftNIO project is split across multiple repositories:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository&lt;/th&gt;
&lt;th&gt;NIO 2 (Swift 5+)&lt;/th&gt;
&lt;th&gt;NIO 1 (Swift 4+)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio"&gt;https://github.com/apple/swift-nio&lt;/a&gt; &lt;br&gt; SwiftNIO core&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "2.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-ssl"&gt;https://github.com/apple/swift-nio-ssl&lt;/a&gt; &lt;br&gt; TLS (SSL) support&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "2.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-http2"&gt;https://github.com/apple/swift-nio-http2&lt;/a&gt;&lt;br&gt; HTTP/2 support&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "0.1.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-extras"&gt;https://github.com/apple/swift-nio-extras&lt;/a&gt; &lt;br&gt;useful additions around SwiftNIO&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "0.1.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-transport-services"&gt;https://github.com/apple/swift-nio-transport-services&lt;/a&gt; &lt;br&gt; first-class support for macOS, iOS, and tvOS&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "0.1.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-protocol-implementations" class="anchor" aria-hidden="true" href="#protocol-implementations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protocol Implementations&lt;/h3&gt;
&lt;p&gt;Below you can find a list of a few protocol implementations that are done with SwiftNIO. This is a non-exhaustive list of protocols that are either part of the SwiftNIO project or are accepted into the &lt;a href="https://swift.org/server" rel="nofollow"&gt;SSWG&lt;/a&gt;'s incubation process. All of the libraries listed below do all of their I/O in a non-blocking fashion using SwiftNIO.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-low-level-protocol-implementations" class="anchor" aria-hidden="true" href="#low-level-protocol-implementations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Low-level protocol implementations&lt;/h4&gt;
&lt;p&gt;Low-level protocol implementations are often a collection of &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s that implement a protocol but still require the user to have a good understanding of SwiftNIO. Often, low-level protocol implementations will then be wrapped in high-level libraries with a nicer, more user-friendly API.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Protocol&lt;/th&gt;
&lt;th&gt;Client&lt;/th&gt;
&lt;th&gt;Server&lt;/th&gt;
&lt;th&gt;Repository&lt;/th&gt;
&lt;th&gt;Module&lt;/th&gt;
&lt;th&gt;Comment&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HTTP/1&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio"&gt;apple/swift-nio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIOHTTP1/index.html" rel="nofollow"&gt;&lt;code&gt;NIOHTTP1&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;official NIO project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HTTP/2&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-http2"&gt;apple/swift-nio-http2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://apple.github.io/swift-nio-http2/docs/current/NIOHTTP2/index.html" rel="nofollow"&gt;&lt;code&gt;NIOHTTP2&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;official NIO project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WebSocket&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio"&gt;apple/swift-nio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIOWebSocket/index.html" rel="nofollow"&gt;&lt;code&gt;NIOWebSocket&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;official NIO project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TLS&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-ssl"&gt;apple/swift-nio-ssl&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://apple.github.io/swift-nio-ssl/docs/current/NIOSSL/index.html" rel="nofollow"&gt;&lt;code&gt;NIOSSL&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;official NIO project&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-high-level-implementations" class="anchor" aria-hidden="true" href="#high-level-implementations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;High-level implementations&lt;/h4&gt;
&lt;p&gt;High-level implementations are usually libraries that come with an API that doesn't expose SwiftNIO's &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; and can therefore be used with very little (or no) SwiftNIO-specific knowledge. The implementations listed below do still do all of their I/O in SwiftNIO and integrate really well with the SwiftNIO ecosystem.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Protocol&lt;/th&gt;
&lt;th&gt;Client&lt;/th&gt;
&lt;th&gt;Server&lt;/th&gt;
&lt;th&gt;Repository&lt;/th&gt;
&lt;th&gt;Module&lt;/th&gt;
&lt;th&gt;Comment&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HTTP&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/swift-server/async-http-client"&gt;swift-server/async-http-client&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;AsyncHTTPClient&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;SSWG community project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gRPC&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-swift"&gt;grpc/grpc-swift&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GRPC&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;also offers a low-level API; community project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;APNS&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kylebrowning/APNSwift"&gt;kylebrowning/APNSwift&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;APNSwift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;SSWG community project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PostgreSQL&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vapor/postgres-nio"&gt;vapor/postgres-nio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PostgresNIO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;SSWG community project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Redis&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://gitlab.com/Mordil/swift-redi-stack" rel="nofollow"&gt;mordil/swift-redi-stack&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RediStack&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;SSWG community project&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-supported-platforms" class="anchor" aria-hidden="true" href="#supported-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Platforms&lt;/h3&gt;
&lt;p&gt;SwiftNIO aims to support all of the platforms where Swift is supported. Currently, it is developed and tested on macOS and Linux, and is known to support the following operating system versions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 14.04+&lt;/li&gt;
&lt;li&gt;macOS 10.12+; (macOS 10.14+, iOS 12+, or tvOS 12+ with &lt;a href="https://github.com/apple/swift-nio-transport-services"&gt;swift-nio-transport-services&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-swift-versions" class="anchor" aria-hidden="true" href="#swift-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift versions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-swiftnio-1" class="anchor" aria-hidden="true" href="#swiftnio-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftNIO 1&lt;/h4&gt;
&lt;p&gt;The latest released SwiftNIO 1 version supports Swift 4.0, 4.1, 4.2, and 5.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swiftnio-2" class="anchor" aria-hidden="true" href="#swiftnio-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftNIO 2&lt;/h4&gt;
&lt;p&gt;The latest released SwiftNIO 2 version supports only Swift 5.0 &amp;amp; 5.1. If you have a SwiftNIO 1 application or library that you would like to migrate to SwiftNIO 2, please check out the &lt;a href="docs/migration-guide-NIO1-to-NIO2.md"&gt;migration guide&lt;/a&gt; we prepared for you.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h3&gt;
&lt;p&gt;SwiftNIO follows &lt;a href="https://semver.org/#semantic-versioning-200" rel="nofollow"&gt;SemVer 2.0.0&lt;/a&gt; with a separate document declaring &lt;a href="docs/public-api.md"&gt;SwiftNIO's Public API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What this means for you is that you should depend on SwiftNIO with a version range that covers everything from the minimum SwiftNIO version you require up to the next major version.
In SwiftPM that can be easily done specifying for example &lt;code&gt;from: "2.0.0"&lt;/code&gt; meaning that you support SwiftNIO in every version starting from 2.0.0 up to (excluding) 3.0.0.
SemVer and SwiftNIO's Public API guarantees should result in a working program without having to worry about testing every single version for compatibility.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-conceptual-overview" class="anchor" aria-hidden="true" href="#conceptual-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conceptual Overview&lt;/h2&gt;
&lt;p&gt;SwiftNIO is fundamentally a low-level tool for building high-performance networking applications in Swift. It particularly targets those use-cases where using a "thread-per-connection" model of concurrency is inefficient or untenable. This is a common limitation when building servers that use a large number of relatively low-utilization connections, such as HTTP servers.&lt;/p&gt;
&lt;p&gt;To achieve its goals SwiftNIO extensively uses "non-blocking I/O": hence the name! Non-blocking I/O differs from the more common blocking I/O model because the application does not wait for data to be sent to or received from the network: instead, SwiftNIO asks for the kernel to notify it when I/O operations can be performed without waiting.&lt;/p&gt;
&lt;p&gt;SwiftNIO does not aim to provide high-level solutions like, for example, web frameworks do. Instead, SwiftNIO is focused on providing the low-level building blocks for these higher-level applications. When it comes to building a web application, most users will not want to use SwiftNIO directly: instead, they'll want to use one of the many great web frameworks available in the Swift ecosystem. Those web frameworks, however, may choose to use SwiftNIO under the covers to provide their networking support.&lt;/p&gt;
&lt;p&gt;The following sections will describe the low-level tools that SwiftNIO provides, and provide a quick overview of how to work with them. If you feel comfortable with these concepts, then you can skip right ahead to the other sections of this README.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-basic-architecture" class="anchor" aria-hidden="true" href="#basic-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Architecture&lt;/h3&gt;
&lt;p&gt;The basic building blocks of SwiftNIO are the following 8 types of objects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bootstrap&lt;/code&gt;, several related structures&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, a struct&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&lt;/code&gt;&lt;/a&gt;, a generic class&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&lt;/code&gt;&lt;/a&gt;, a generic struct.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All SwiftNIO applications are ultimately constructed of these various components.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-eventloops-and-eventloopgroups" class="anchor" aria-hidden="true" href="#eventloops-and-eventloopgroups"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EventLoops and EventLoopGroups&lt;/h4&gt;
&lt;p&gt;The basic I/O primitive of SwiftNIO is the event loop. The event loop is an object that waits for events (usually I/O related events, such as "data received") to happen and then fires some kind of callback when they do. In almost all SwiftNIO applications there will be relatively few event loops: usually only one or two per CPU core the application wants to use. Generally speaking event loops run for the entire lifetime of your application, spinning in an endless loop dispatching events.&lt;/p&gt;
&lt;p&gt;Event loops are gathered together into event loop &lt;em&gt;groups&lt;/em&gt;. These groups provide a mechanism to distribute work around the event loops. For example, when listening for inbound connections the listening socket will be registered on one event loop. However, we don't want all connections that are accepted on that listening socket to be registered with the same event loop, as that would potentially overload one event loop while leaving the others empty. For that reason, the event loop group provides the ability to spread load across multiple event loops.&lt;/p&gt;
&lt;p&gt;In SwiftNIO today there is one &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt; implementation, and two &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; implementations. For production applications there is the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/MultiThreadedEventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;MultiThreadedEventLoopGroup&lt;/code&gt;&lt;/a&gt;, an &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt; that creates a number of threads (using the POSIX &lt;a href="https://en.wikipedia.org/wiki/POSIX_Threads" rel="nofollow"&gt;&lt;code&gt;pthreads&lt;/code&gt;&lt;/a&gt; library) and places one &lt;code&gt;SelectableEventLoop&lt;/code&gt; on each one. The &lt;code&gt;SelectableEventLoop&lt;/code&gt; is an event loop that uses a selector (either &lt;a href="https://en.wikipedia.org/wiki/Kqueue" rel="nofollow"&gt;&lt;code&gt;kqueue&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Epoll" rel="nofollow"&gt;&lt;code&gt;epoll&lt;/code&gt;&lt;/a&gt; depending on the target system) to manage I/O events from file descriptors and to dispatch work. Additionally, there is the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EmbeddedEventLoop.html" rel="nofollow"&gt;&lt;code&gt;EmbeddedEventLoop&lt;/code&gt;&lt;/a&gt;, which is a dummy event loop that is used primarily for testing purposes.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s have a number of important properties. Most vitally, they are the way all work gets done in SwiftNIO applications. In order to ensure thread-safety, any work that wants to be done on almost any of the other objects in SwiftNIO must be dispatched via an &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;. &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; objects own almost all the other objects in a SwiftNIO application, and understanding their execution model is critical for building high-performance SwiftNIO applications.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-channels-channel-handlers-channel-pipelines-and-channel-contexts" class="anchor" aria-hidden="true" href="#channels-channel-handlers-channel-pipelines-and-channel-contexts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Channels, Channel Handlers, Channel Pipelines, and Channel Contexts&lt;/h4&gt;
&lt;p&gt;While &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s are critical to the way SwiftNIO works, most users will not interact with them substantially beyond asking them to create &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&lt;/code&gt;&lt;/a&gt;s and to schedule work. The parts of a SwiftNIO application most users will spend the most time interacting with are &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s.&lt;/p&gt;
&lt;p&gt;Almost every file descriptor that a user interacts with in a SwiftNIO program is associated with a single &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. The &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; owns this file descriptor, and is responsible for managing its lifetime. It is also responsible for processing inbound and outbound events on that file descriptor: whenever the event loop has an event that corresponds to a file descriptor, it will notify the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; that owns that file descriptor.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s by themselves, however, are not useful. After all, it is a rare application that doesn't want to do anything with the data it sends or receives on a socket! So the other important part of the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; is the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; is a sequence of objects, called &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s, that process events on a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. The &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s process these events one after another, in order, mutating and transforming events as they go. This can be thought of as a data processing pipeline; hence the name &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are either Inbound or Outbound handlers, or both. Inbound handlers process "inbound" events: events like reading data from a socket, reading socket close, or other kinds of events initiated by remote peers. Outbound handlers process "outbound" events, such as writes, connection attempts, and local socket closes.&lt;/p&gt;
&lt;p&gt;Each handler processes the events in order. For example, read events are passed from the front of the pipeline to the back, one handler at a time, while write events are passed from the back of the pipeline to the front. Each handler may, at any time, generate either inbound or outbound events that will be sent to the next handler in whichever direction is appropriate. This allows handlers to split up reads, coalesce writes, delay connection attempts, and generally perform arbitrary transformations of events.&lt;/p&gt;
&lt;p&gt;In general, &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are designed to be highly re-usable components. This means they tend to be designed to be as small as possible, performing one specific data transformation. This allows handlers to be composed together in novel and flexible ways, which helps with code reuse and encapsulation.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are able to keep track of where they are in a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; by using a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelHandlerContext.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandlerContext&lt;/code&gt;&lt;/a&gt;. These objects contain references to the previous and next channel handler in the pipeline, ensuring that it is always possible for a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt; to emit events while it remains in a pipeline.&lt;/p&gt;
&lt;p&gt;SwiftNIO ships with many &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s built in that provide useful functionality, such as HTTP parsing. In addition, high-performance applications will want to provide as much of their logic as possible in &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s, as it helps avoid problems with context switching.&lt;/p&gt;
&lt;p&gt;Additionally, SwiftNIO ships with a few &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; implementations. In particular, it ships with &lt;code&gt;ServerSocketChannel&lt;/code&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for sockets that accept inbound connections; &lt;code&gt;SocketChannel&lt;/code&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for TCP connections; &lt;code&gt;DatagramChannel&lt;/code&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for UDP sockets; and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EmbeddedChannel.html" rel="nofollow"&gt;&lt;code&gt;EmbeddedChannel&lt;/code&gt;&lt;/a&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; primarily used for testing.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-a-note-on-blocking" class="anchor" aria-hidden="true" href="#a-note-on-blocking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Note on Blocking&lt;/h5&gt;
&lt;p&gt;One of the important notes about &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;s is that they are thread-safe. This is very important for writing SwiftNIO applications, as it allows you to write much simpler &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s in the knowledge that they will not require synchronization.&lt;/p&gt;
&lt;p&gt;However, this is achieved by dispatching all code on the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; on the same thread as the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;. This means that, as a general rule, &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s &lt;strong&gt;must not&lt;/strong&gt; call blocking code without dispatching it to a background thread. If a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt; blocks for any reason, all &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s attached to the parent &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; will be unable to progress until the blocking call completes.&lt;/p&gt;
&lt;p&gt;This is a common concern while writing SwiftNIO applications. If it is useful to write code in a blocking style, it is highly recommended that you dispatch work to a different thread when you're done with it in your pipeline.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-bootstrap" class="anchor" aria-hidden="true" href="#bootstrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bootstrap&lt;/h4&gt;
&lt;p&gt;While it is possible to configure and register &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s with &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s directly, it is generally more useful to have a higher-level abstraction to handle this work.&lt;/p&gt;
&lt;p&gt;For this reason, SwiftNIO ships a number of &lt;code&gt;Bootstrap&lt;/code&gt; objects whose purpose is to streamline the creation of channels. Some &lt;code&gt;Bootstrap&lt;/code&gt; objects also provide other functionality, such as support for Happy Eyeballs for making TCP connection attempts.&lt;/p&gt;
&lt;p&gt;Currently SwiftNIO ships with three &lt;code&gt;Bootstrap&lt;/code&gt; objects: &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ServerBootstrap.html" rel="nofollow"&gt;&lt;code&gt;ServerBootstrap&lt;/code&gt;&lt;/a&gt;, for bootstrapping listening channels; &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ClientBootstrap.html" rel="nofollow"&gt;&lt;code&gt;ClientBootstrap&lt;/code&gt;&lt;/a&gt;, for bootstrapping client TCP channels; and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/DatagramBootstrap.html" rel="nofollow"&gt;&lt;code&gt;DatagramBootstrap&lt;/code&gt;&lt;/a&gt; for bootstrapping UDP channels.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-bytebuffer" class="anchor" aria-hidden="true" href="#bytebuffer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ByteBuffer&lt;/h4&gt;
&lt;p&gt;The majority of the work in a SwiftNIO application involves shuffling buffers of bytes around. At the very least, data is sent and received to and from the network in the form of buffers of bytes. For this reason it's very important to have a high-performance data structure that is optimized for the kind of work SwiftNIO applications perform.&lt;/p&gt;
&lt;p&gt;For this reason, SwiftNIO provides &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, a fast copy-on-write byte buffer that forms a key building block of most SwiftNIO applications.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; provides a number of useful features, and in addition provides a number of hooks to use it in an "unsafe" mode. This turns off bounds checking for improved performance, at the cost of potentially opening your application up to memory correctness problems.&lt;/p&gt;
&lt;p&gt;In general, it is highly recommended that you use the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; in its safe mode at all times.&lt;/p&gt;
&lt;p&gt;For more details on the API of &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, please see our API documentation, linked below.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-promises-and-futures" class="anchor" aria-hidden="true" href="#promises-and-futures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Promises and Futures&lt;/h4&gt;
&lt;p&gt;One major difference between writing concurrent code and writing synchronous code is that not all actions will complete immediately. For example, when you write data on a channel, it is possible that the event loop will not be able to immediately flush that write out to the network. For this reason, SwiftNIO provides &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; to manage operations that complete &lt;em&gt;asynchronously&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;An &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is essentially a container for the return value of a function that will be populated &lt;em&gt;at some time in the future&lt;/em&gt;. Each &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; has a corresponding &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, which is the object that the result will be put into. When the promise is succeeded, the future will be fulfilled.&lt;/p&gt;
&lt;p&gt;If you had to poll the future to detect when it completed that would be quite inefficient, so &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is designed to have managed callbacks. Essentially, you can hang callbacks off the future that will be executed when a result is available. The &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; will even carefully arrange the scheduling to ensure that these callbacks always execute on the event loop that initially created the promise, which helps ensure that you don't need too much synchronization around &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; callbacks.&lt;/p&gt;
&lt;p&gt;Another important topic for consideration is the difference between how the promise passed to &lt;code&gt;close&lt;/code&gt; works as opposed to &lt;code&gt;closeFuture&lt;/code&gt; on a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. For example, the promise passed into &lt;code&gt;close&lt;/code&gt; will succeed after the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; is closed down but before the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; is completely cleared out. This will allow you to take action on the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; before it is completely cleared out, if needed. If it is desired to wait for the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; to close down and the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; to be cleared out without any further action, then the better option would be to wait for the &lt;code&gt;closeFuture&lt;/code&gt; to succeed.&lt;/p&gt;
&lt;p&gt;There are several functions for applying callbacks to &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, depending on how and when you want them to execute. Details of these functions is left to the API documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-philosophy" class="anchor" aria-hidden="true" href="#design-philosophy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Philosophy&lt;/h3&gt;
&lt;p&gt;SwiftNIO is designed to be a powerful tool for building networked applications and frameworks, but it is not intended to be the perfect solution for all levels of abstraction. SwiftNIO is tightly focused on providing the basic I/O primitives and protocol implementations at low levels of abstraction, leaving more expressive but slower abstractions to the wider community to build. The intention is that SwiftNIO will be a building block for server-side applications, not necessarily the framework those applications will use directly.&lt;/p&gt;
&lt;p&gt;Applications that need extremely high performance from their networking stack may choose to use SwiftNIO directly in order to reduce the overhead of their abstractions. These applications should be able to maintain extremely high performance with relatively little maintenance cost. SwiftNIO also focuses on providing useful abstractions for this use-case, such that extremely high performance network servers can be built directly.&lt;/p&gt;
&lt;p&gt;The core SwiftNIO repository will contain a few extremely important protocol implementations, such as HTTP, directly in tree. However, we believe that most protocol implementations should be decoupled from the release cycle of the underlying networking stack, as the release cadence is likely to be very different (either much faster or much slower). For this reason, we actively encourage the community to develop and maintain their protocol implementations out-of-tree. Indeed, some first-party SwiftNIO protocol implementations, including our TLS and HTTP/2 bindings, are developed out-of-tree!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/index.html" rel="nofollow"&gt;API documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Usage&lt;/h2&gt;
&lt;p&gt;There are currently several example projects that demonstrate how to use SwiftNIO.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;chat client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOChatClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOChatClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;chat server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOChatServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOChatServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;echo client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;echo server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP echo client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP echo server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Client"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Server"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketServer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To build &amp;amp; run them, run following command, replace TARGET_NAME with the folder name under &lt;code&gt;./Sources&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;swift run TARGET_NAME&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, to run NIOHTTP1Server, run following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;swift run NIOHTTP1Server&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;SwiftNIO primarily uses &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;SwiftPM&lt;/a&gt; as its build tool, so we recommend using that as well. If you want to depend on SwiftNIO in your own project, it's as simple as adding a &lt;code&gt;dependencies&lt;/code&gt; clause to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/apple/swift-nio.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then adding the appropriate SwiftNIO module(s) to your target dependencies.&lt;/p&gt;
&lt;p&gt;If your project is set up as an Xcode project and you're using Xcode 11+, you can add SwiftNIO as a dependency to your
Xcode project by clicking File -&amp;gt; Swift Packages -&amp;gt; Add Package Dependency. In the upcoming dialog, please enter
&lt;code&gt;https://github.com/apple/swift-nio.git&lt;/code&gt; and click Next twice. Finally, select the targets you are planning to use (for
example &lt;code&gt;NIO&lt;/code&gt;, &lt;code&gt;NIOHTTP1&lt;/code&gt;, and &lt;code&gt;NIOFoundationCompat&lt;/code&gt;) and click finish. Now will be able to &lt;code&gt;import NIO&lt;/code&gt; (as well as all
the other targets you have selected) in your project.&lt;/p&gt;
&lt;p&gt;To work on SwiftNIO itself, or to investigate some of the demonstration applications, you can clone the repository directly and use SwiftPM to help build it. For example, you can run the following commands to compile and run the example echo server:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;swift build
swift &lt;span class="pl-c1"&gt;test&lt;/span&gt;
swift run NIOEchoServer&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To verify that it is working, you can use another shell to attempt to connect to it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello SwiftNIO&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; nc localhost 9999&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If all goes well, you'll see the message echoed back to you.&lt;/p&gt;
&lt;p&gt;To work on SwiftNIO in Xcode 11+, you can just open the &lt;code&gt;Package.swift&lt;/code&gt;
file in Xcode and use Xcode's support for SwiftPM Packages.&lt;/p&gt;
&lt;p&gt;If you want to develop SwiftNIO with Xcode 10, you have to generate an Xcode project:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;swift package generate-xcodeproj&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-an-alternative-using-docker-compose" class="anchor" aria-hidden="true" href="#an-alternative-using-docker-compose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;An alternative: using &lt;code&gt;docker-compose&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Alternatively, you may want to develop or test with &lt;code&gt;docker-compose&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;First make sure you have &lt;a href="https://www.docker.com/community-edition" rel="nofollow"&gt;Docker&lt;/a&gt; installed, next run the following commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker-compose -f docker/docker-compose.yaml run test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Will create a base image with Swift runtime and other build and test dependencies, compile SwiftNIO and run the unit and integration tests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker-compose -f docker/docker-compose.yaml up echo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Will create a base image, compile SwiftNIO, and run a sample &lt;code&gt;NIOEchoServer&lt;/code&gt; on
&lt;code&gt;localhost:9999&lt;/code&gt;. Test it by &lt;code&gt;echo Hello SwiftNIO | nc localhost 9999&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker-compose -f docker/docker-compose.yaml up http&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Will create a base image, compile SwiftNIO, and run a sample &lt;code&gt;NIOHTTP1Server&lt;/code&gt; on
&lt;code&gt;localhost:8888&lt;/code&gt;. Test it by &lt;code&gt;curl http://localhost:8888&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-developing-swiftnio" class="anchor" aria-hidden="true" href="#developing-swiftnio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing SwiftNIO&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This section is only relevant if you would like to develop SwiftNIO yourself. You can ignore the information here if you just want to use SwiftNIO as a SwiftPM package.&lt;/p&gt;
&lt;p&gt;For the most part, SwiftNIO development is as straightforward as any other SwiftPM project. With that said, we do have a few processes that are worth understanding before you contribute. For details, please see &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; in this repository.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;SwiftNIO's &lt;code&gt;master&lt;/code&gt; branch is the development branch for the next releases of SwiftNIO 2, it's Swift 5-only.&lt;/p&gt;
&lt;p&gt;To be able to compile and run SwiftNIO and the integration tests, you need to
have a few prerequisites installed on your system.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 10.2 or newer, Xcode 11 recommended.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Swift 5.0 or 5.1 (recommended) from &lt;a href="https://swift.org/download/#releases" rel="nofollow"&gt;swift.org/download&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;netcat (for integration tests only)&lt;/li&gt;
&lt;li&gt;lsof (for integration tests only)&lt;/li&gt;
&lt;li&gt;shasum (for integration tests only)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-ubuntu-1804" class="anchor" aria-hidden="true" href="#ubuntu-1804"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu 18.04&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# install swift tarball from https://swift.org/downloads
apt-get install -y git curl libatomic1 libxml2 netcat-openbsd lsof perl
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-fedora-28" class="anchor" aria-hidden="true" href="#fedora-28"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fedora 28+&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;dnf install swift-lang /usr/bin/nc /usr/bin/lsof /usr/bin/shasum
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift-nio</guid><pubDate>Sat, 21 Dec 2019 00:04:00 GMT</pubDate></item><item><title>Swinject/Swinject #5 in Swift, Today</title><link>https://github.com/Swinject/Swinject</link><description>&lt;p&gt;&lt;i&gt;Dependency injection framework for Swift with iOS/macOS/Linux&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/13637225?v=3&amp;amp;s=600"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/13637225?v=3&amp;amp;s=600" width="33%" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-swinject" class="anchor" aria-hidden="true" href="#swinject"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swinject&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Swinject/Swinject" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/512c6743bb3271ad6cdceddc4ed3f7037cd53e4c/68747470733a2f2f7472617669732d63692e6f72672f5377696e6a6563742f5377696e6a6563742e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://travis-ci.org/Swinject/Swinject.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/Swinject" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c9c67f6e25e6835b794740820745c2418123bc78/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f5377696e6a6563742e7376673f7374796c653d666c6174" alt="CocoaPods Version" data-canonical-src="https://img.shields.io/cocoapods/v/Swinject.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/Swinject" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/847343d0e310495086b026780886fd4d3a7ecdeb/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f5377696e6a6563742e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/Swinject.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/Swinject" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f8c4d75a9e97488d6b39cce08bdaeefd8b24d661/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d694f532532302537432532306d61634f5325323025374325323074764f5325323025374325323077617463684f532532302537432532304c696e75782d6c69676874677265792e737667" alt="Platforms" data-canonical-src="https://img.shields.io/badge/platform-iOS%20%7C%20macOS%20%7C%20tvOS%20%7C%20watchOS%20%7C%20Linux-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1b9a7a494e815f0f0f9a96013d4b91b40afdd25c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d322e322d2d332e312e782d4631364433392e7376673f7374796c653d666c6174" alt="Swift Version" data-canonical-src="https://img.shields.io/badge/Swift-2.2--3.1.x-F16D39.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://houndci.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c940d021ef775a44e0880bc3ba124a6bee5fefb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657669657765645f62792d486f756e642d3845363442302e737667" alt="Reviewed by Hound" data-canonical-src="https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swinject is a lightweight &lt;a href="https://en.wikipedia.org/wiki/Dependency_injection" rel="nofollow"&gt;dependency injection&lt;/a&gt; framework for Swift.&lt;/p&gt;
&lt;p&gt;Dependency injection (DI) is a software design pattern that implements Inversion of Control (IoC) for resolving dependencies. In the pattern, Swinject helps your app split into loosely-coupled components, which can be developed, tested and maintained more easily. Swinject is powered by the Swift generic type system and first class functions to define dependencies of your app simply and fluently.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/README.md#user-content-pure-swift-type-support"&gt;Pure Swift Type Support&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/DIContainer.md#registration-with-arguments-to-di-container"&gt;Injection with Arguments&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/InjectionPatterns.md"&gt;Initializer/Property/Method Injections&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/InjectionPatterns.md#user-content-initialization-callback"&gt;Initialization Callback&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/CircularDependencies.md"&gt;Circular Dependency Injection&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/ObjectScopes.md"&gt;Object Scopes as None (Transient), Graph, Container (Singleton) and Hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Support of both Reference and &lt;a href="./Documentation/Misc.md#value-types"&gt;Value Types&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/Misc.md#self-registration-self-binding"&gt;Self-registration (Self-binding)&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/ContainerHierarchy.md"&gt;Container Hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/ThreadSafety.md"&gt;Thread Safety&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./Documentation/Assembler.md"&gt;Modular Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Swinject/SwinjectPropertyLoader"&gt;SwinjectPropertyLoader&lt;/a&gt;&lt;/strong&gt;: Loading property values from resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Swinject/SwinjectStoryboard"&gt;SwinjectStoryboard&lt;/a&gt;&lt;/strong&gt;: Automatic dependency injection via Storyboard.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Swinject/Swinject-CodeGen"&gt;Swinject-CodeGen&lt;/a&gt;&lt;/strong&gt;: Type-safe code generation of &lt;code&gt;Container&lt;/code&gt; from a CSV/YAML file defining dependencies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Swinject/SwinjectAutoregistration"&gt;SwinjectAutoregistration&lt;/a&gt;&lt;/strong&gt;: Automatic registration of services by leveraging the Swift Generics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 8.0+ / Mac OS X 10.10+ / watchOS 2.0+ / tvOS 9.0+&lt;/li&gt;
&lt;li&gt;Swift 2.2 or 2.3
&lt;ul&gt;
&lt;li&gt;Xcode 7.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Swift 3
&lt;ul&gt;
&lt;li&gt;Xcode 8.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Swift 3.2, 4.x
&lt;ul&gt;
&lt;li&gt;Xcode 9.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Carthage 0.18+ (if you use)&lt;/li&gt;
&lt;li&gt;CocoaPods 1.1.1+ (if you use)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Swinject is available through &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; or &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;To install Swinject with Carthage, add the following line to your &lt;code&gt;Cartfile&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swift-22-or-23" class="anchor" aria-hidden="true" href="#swift-22-or-23"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 2.2 or 2.3&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;github "Swinject/Swinject" ~&amp;gt; 1.1.4
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-swift-3x-or-4x" class="anchor" aria-hidden="true" href="#swift-3x-or-4x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 3.x or 4.x&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;github "Swinject/Swinject"

# Uncomment if you use SwinjectStoryboard
# github "Swinject/SwinjectStoryboard"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run &lt;code&gt;carthage update --no-use-binaries&lt;/code&gt; command or just &lt;code&gt;carthage update&lt;/code&gt;. For details of the installation and usage of Carthage, visit &lt;a href="https://github.com/Carthage/Carthage"&gt;its project page&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;To install Swinject with CocoaPods, add the following lines to your &lt;code&gt;Podfile&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swift-22-or-23-1" class="anchor" aria-hidden="true" href="#swift-22-or-23-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 2.2 or 2.3&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or platform :osx, '10.10' if your target is OS X.&lt;/span&gt;
use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Swinject&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.1.4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-3x" class="anchor" aria-hidden="true" href="#swift-3x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 3.x&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or platform :osx, '10.10' if your target is OS X.&lt;/span&gt;
use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Swinject&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Uncomment if you use SwinjectStoryboard&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; pod 'SwinjectStoryboard'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;pod install&lt;/code&gt; command. For details of the installation and usage of CocoaPods, visit &lt;a href="https://cocoapods.org" rel="nofollow"&gt;its official website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./Documentation"&gt;Technical documents&lt;/a&gt; including patterns of dependency injection and examples.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cocoadocs.org/docsets/Swinject/" rel="nofollow"&gt;API reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;
&lt;p&gt;First, register a service and component pair to a &lt;code&gt;Container&lt;/code&gt;, where the component is created by the registered closure as a factory. In this example, &lt;code&gt;Cat&lt;/code&gt; and &lt;code&gt;PetOwner&lt;/code&gt; are component classes implementing &lt;code&gt;Animal&lt;/code&gt; and &lt;code&gt;Person&lt;/code&gt; service protocols, respectively.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; container &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Container&lt;/span&gt;()
container.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;Cat&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Mimi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
container.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { r &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;PetOwner&lt;/span&gt;(&lt;span class="pl-c1"&gt;pet&lt;/span&gt;: r.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then get an instance of a service from the container. The person is resolved to a pet owner, and playing with the cat named Mimi!&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; person &lt;span class="pl-k"&gt;=&lt;/span&gt; container.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
person.&lt;span class="pl-c1"&gt;play&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "I'm playing with Mimi."&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where definitions of the protocols and classes are&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;Animal&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Cat&lt;/span&gt;: &lt;span class="pl-e"&gt;Animal &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;

    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;name&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; name
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt; {
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;play&lt;/span&gt;()
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PetOwner&lt;/span&gt;: &lt;span class="pl-e"&gt;Person &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; pet&lt;span class="pl-k"&gt;:&lt;/span&gt; Animal

    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;pet&lt;/span&gt;&lt;/span&gt;: Animal) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;pet&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; pet
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;play&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; pet.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I'm playing with &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that the &lt;code&gt;pet&lt;/code&gt; of &lt;code&gt;PetOwner&lt;/code&gt; is automatically set as the instance of &lt;code&gt;Cat&lt;/code&gt; when &lt;code&gt;Person&lt;/code&gt; is resolved to the instance of &lt;code&gt;PetOwner&lt;/code&gt;. If a container already set up is given, you do not have to care what are the actual types of the services and how they are created with their dependency.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-where-to-register-services" class="anchor" aria-hidden="true" href="#where-to-register-services"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to Register Services&lt;/h2&gt;
&lt;p&gt;Services must be registered to a container before they are used. The typical registration approach will differ depending upon whether you are using &lt;code&gt;SwinjectStoryboard&lt;/code&gt; or not.&lt;/p&gt;
&lt;p&gt;The following view controller class is used in addition to the protocols and classes above in the examples below.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PersonViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; person&lt;span class="pl-k"&gt;:&lt;/span&gt; Person&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-with-swinjectstoryboard" class="anchor" aria-hidden="true" href="#with-swinjectstoryboard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With SwinjectStoryboard&lt;/h3&gt;
&lt;p&gt;Import SwinjectStoryboard at the top of your swift source file if you use Swinject v2 in Swift 3.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only Swinject v2 in Swift 3.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SwinjectStoryboard&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Services should be registered in an extension of &lt;code&gt;SwinjectStoryboard&lt;/code&gt; if you use &lt;code&gt;SwinjectStoryboard&lt;/code&gt;. Refer to &lt;a href="https://github.com/Swinject/SwinjectStoryboard"&gt;the project page of SwinjectStoryboard&lt;/a&gt; for further details.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;SwinjectStoryboard&lt;/span&gt; {
    &lt;span class="pl-k"&gt;@objc&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;setup&lt;/span&gt;() {
        defaultContainer.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;Cat&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Mimi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
        defaultContainer.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { r &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c1"&gt;PetOwner&lt;/span&gt;(&lt;span class="pl-c1"&gt;pet&lt;/span&gt;: r.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
        }
        defaultContainer.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(PersonViewController.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { r &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; controller &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PersonViewController&lt;/span&gt;()
            controller.&lt;span class="pl-smi"&gt;person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; r.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;)
            &lt;span class="pl-k"&gt;return&lt;/span&gt; controller
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-without-swinjectstoryboard" class="anchor" aria-hidden="true" href="#without-swinjectstoryboard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Without SwinjectStoryboard&lt;/h3&gt;
&lt;p&gt;If you do not use &lt;code&gt;SwinjectStoryboard&lt;/code&gt; to instantiate view controllers, services should be registered to a container in your application's &lt;code&gt;AppDelegate&lt;/code&gt;. Registering before exiting &lt;code&gt;application:didFinishLaunchingWithOptions:&lt;/code&gt; will ensure that the services are setup appropriately before they are used.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AppDelegate&lt;/span&gt;: &lt;span class="pl-e"&gt;UIResponder&lt;/span&gt;, &lt;span class="pl-e"&gt;UIApplicationDelegate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; window&lt;span class="pl-k"&gt;:&lt;/span&gt; UIWindow&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; container&lt;span class="pl-k"&gt;:&lt;/span&gt; Container &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; container &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Container&lt;/span&gt;()
        container.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;Cat&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Mimi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
        container.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { r &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c1"&gt;PetOwner&lt;/span&gt;(&lt;span class="pl-c1"&gt;pet&lt;/span&gt;: r.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Animal.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
        }
        container.&lt;span class="pl-c1"&gt;register&lt;/span&gt;(PersonViewController.&lt;span class="pl-k"&gt;self&lt;/span&gt;) { r &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; controller &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PersonViewController&lt;/span&gt;()
            controller.&lt;span class="pl-smi"&gt;person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; r.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(Person.&lt;span class="pl-k"&gt;self&lt;/span&gt;)
            &lt;span class="pl-k"&gt;return&lt;/span&gt; controller
        }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; container
    }()

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;application&lt;/span&gt;(
        &lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;application&lt;/span&gt;: UIApplication,
        &lt;span class="pl-en"&gt;didFinishLaunchingWithOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;launchOptions&lt;/span&gt;: [UIApplicationLaunchOptionsKey : &lt;span class="pl-c1"&gt;Any&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Instantiate a window.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; window &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIWindow&lt;/span&gt;(&lt;span class="pl-c1"&gt;frame&lt;/span&gt;: UIScreen.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;bounds&lt;/span&gt;)
        window.&lt;span class="pl-c1"&gt;makeKeyAndVisible&lt;/span&gt;()
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;window&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; window

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Instantiate the root view controller with dependencies injected by the container.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        window.&lt;span class="pl-smi"&gt;rootViewController&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; container.&lt;span class="pl-c1"&gt;resolve&lt;/span&gt;(PersonViewController.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that the example uses a convenience initializer taking a closure to register services to the new instance of &lt;code&gt;Container&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-play-in-playground" class="anchor" aria-hidden="true" href="#play-in-playground"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Play in Playground!&lt;/h2&gt;
&lt;p&gt;The project contains &lt;code&gt;Sample-iOS.playground&lt;/code&gt; to demonstrate the features of Swinject. Download or clone the project, run the playground, modify it, and play with it to learn Swinject.&lt;/p&gt;
&lt;p&gt;To run the playground in the project, first build the project, then select &lt;code&gt;Editor &amp;gt; Execute Playground&lt;/code&gt; menu in Xcode.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example-apps" class="anchor" aria-hidden="true" href="#example-apps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Apps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Swinject/SwinjectSimpleExample"&gt;SwinjectSimpleExample&lt;/a&gt; demonstrates dependency injection and Swinject in a simple weather app that lists current weather information at some locations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Swinject/SwinjectMVVMExample"&gt;SwinjectMVVMExample&lt;/a&gt; demonstrates dependency injection with Swift and reactive programming with &lt;a href="https://github.com/ReactiveCocoa/ReactiveCocoa"&gt;ReactiveCocoa&lt;/a&gt; in MVVM architecture.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-blog-posts" class="anchor" aria-hidden="true" href="#blog-posts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blog Posts&lt;/h2&gt;
&lt;p&gt;The following blog posts introduce Swinject and the concept of dependency injection.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yoichitgy.github.io/post/dependency-injection-framework-for-swift-introduction-to-swinject/" rel="nofollow"&gt;Dependency Injection Framework for Swift - Introduction to Swinject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yoichitgy.github.io/post/dependency-injection-framework-for-swift-simple-weather-app-example-with-swinject-part-1/" rel="nofollow"&gt;Dependency Injection Framework for Swift - Simple Weather App Example with Swinject Part 1/2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yoichitgy.github.io/post/dependency-injection-framework-for-swift-simple-weather-app-example-with-swinject-part-2/" rel="nofollow"&gt;Dependency Injection Framework for Swift - Simple Weather App Example with Swinject Part 2/2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guide" class="anchor" aria-hidden="true" href="#contribution-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution Guide&lt;/h2&gt;
&lt;p&gt;A guide to &lt;a href="https://github.com/Swinject/Swinject/issues"&gt;submit issues&lt;/a&gt;, to ask general questions, or to &lt;a href="https://github.com/Swinject/Swinject/pulls"&gt;open pull requests&lt;/a&gt; is &lt;a href="CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-question" class="anchor" aria-hidden="true" href="#question"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Question?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://join.slack.com/t/swinject/shared_invite/enQtNjk0NjE0NjMzOTIyLTI5NWJiNDU5NGI1MTUwZDI3MDU2ZTM2YTMwMWRhMjI0ZmFlODk4MDI5OWUwNzY1YjlhOTRjYWM2NjZmOTVhNTU" rel="nofollow"&gt;Slack&lt;/a&gt; feel free to discuss anything Swinject related.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/swinject" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; we are trying to monitor questions tagged &lt;code&gt;swinject&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;The DI container features of Swinject are inspired by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ninject.org" rel="nofollow"&gt;Ninject&lt;/a&gt; - &lt;a href="https://github.com/enkari"&gt;Enkari, Ltd&lt;/a&gt; and &lt;a href="https://github.com/ninject/Ninject/graphs/contributors"&gt;the Ninject project contributors&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://autofac.org" rel="nofollow"&gt;Autofac&lt;/a&gt; - &lt;a href="https://github.com/autofac/Autofac"&gt;Autofac Project&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and highly inspired by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://funq.codeplex.com" rel="nofollow"&gt;Funq&lt;/a&gt; - &lt;a href="http://www.codeplex.com/site/users/view/dcazzulino" rel="nofollow"&gt;Daniel Cazzulino&lt;/a&gt; and &lt;a href="http://funq.codeplex.com/team/view" rel="nofollow"&gt;the project team&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT license. See the &lt;a href="LICENSE.txt"&gt;LICENSE file&lt;/a&gt; for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Swinject</author><guid isPermaLink="false">https://github.com/Swinject/Swinject</guid><pubDate>Sat, 21 Dec 2019 00:05:00 GMT</pubDate></item><item><title>Alamofire/Alamofire #6 in Swift, Today</title><link>https://github.com/Alamofire/Alamofire</link><description>&lt;p&gt;&lt;i&gt;Elegant HTTP Networking in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/Alamofire/Alamofire/master/alamofire.png"&gt;&lt;img src="https://raw.githubusercontent.com/Alamofire/Alamofire/master/alamofire.png" alt="Alamofire: Elegant Networking in Swift" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Alamofire/Alamofire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/077a1810116942b4f37ebd4aca3c88bad49c328d/68747470733a2f2f7472617669732d63692e6f72672f416c616d6f666972652f416c616d6f666972652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Alamofire/Alamofire.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://img.shields.io/cocoapods/v/Alamofire.svg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9bd6769e4a8458272a249358bec5e4e511ce6888/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f416c616d6f666972652e737667" alt="CocoaPods Compatible" data-canonical-src="https://img.shields.io/cocoapods/v/Alamofire.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage Compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://alamofire.github.io/Alamofire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7bbc7493c87f5447d92c2394201eec2f79ecbe1d/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f416c616d6f666972652e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/Alamofire.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/AlamofireSF" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/778c845778219b6c8b8160fc1b8c2ac4b21b7aab/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d40416c616d6f6669726553462d626c75652e7376673f7374796c653d666c6174" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-@AlamofireSF-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Alamofire/Alamofire?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f34d662fe4592df9b54859f624c089c5386a3ab/68747470733a2f2f6261646765732e6769747465722e696d2f416c616d6f666972652f416c616d6f666972652e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Alamofire/Alamofire.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codetriage.com/alamofire/alamofire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08b7810b0eb2f6121f6cc2417ffcfee1c7608acf/68747470733a2f2f7777772e636f64657472696167652e636f6d2f616c616d6f666972652f616c616d6f666972652f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/alamofire/alamofire/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alamofire is an HTTP networking library written in Swift.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; WARNING &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;/strong&gt; This documentation is out of date during the Alamofire 5 beta process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#component-libraries"&gt;Component Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#migration-guides"&gt;Migration Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#communication"&gt;Communication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#using-alamofire"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#introduction"&gt;&lt;strong&gt;Introduction -&lt;/strong&gt;&lt;/a&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#making-requests"&gt;Making Requests&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-handling"&gt;Response Handling&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-validation"&gt;Response Validation&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-caching"&gt;Response Caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#http-methods"&gt;HTTP Methods&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md##request-parameters-and-parameter-encoders"&gt;Parameters and Parameter Encoder&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#http-headers"&gt;HTTP Headers&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Large Data -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#downloading-data-to-a-file"&gt;Downloading Data to a File&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#uploading-data-to-a-server"&gt;Uploading Data to a Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tools -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#statistical-metrics"&gt;Statistical Metrics&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#curl-command-output"&gt;cURL Command Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md"&gt;Advanced Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;URL Session -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#session-manager"&gt;Session Manager&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#session-delegate"&gt;Session Delegate&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#request"&gt;Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Routing -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#routing-requests"&gt;Routing Requests&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#adapting-and-retrying-requests"&gt;Adapting and Retrying Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model Objects -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#custom-response-serialization"&gt;Custom Response Serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connection -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#security"&gt;Security&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#network-reachability"&gt;Network Reachability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#open-radars"&gt;Open Radars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#donations"&gt;Donations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Chainable Request / Response Methods&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; URL / JSON / plist Parameter Encoding&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Upload File / Data / Stream / MultipartFormData&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Download File using Request or Resume Data&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Authentication with URLCredential&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; HTTP Response Validation&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Upload and Download Progress Closures with Progress&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; cURL Command Output&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Dynamically Adapt and Retry Requests&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; TLS Certificate and Public Key Pinning&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Network Reachability&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Comprehensive Unit and Integration Test Coverage&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="https://alamofire.github.io/Alamofire" rel="nofollow"&gt;Complete Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-component-libraries" class="anchor" aria-hidden="true" href="#component-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Component Libraries&lt;/h2&gt;
&lt;p&gt;In order to keep Alamofire focused specifically on core networking implementations, additional component libraries have been created by the &lt;a href="https://github.com/Alamofire/Foundation"&gt;Alamofire Software Foundation&lt;/a&gt; to bring additional functionality to the Alamofire ecosystem.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireImage"&gt;AlamofireImage&lt;/a&gt; - An image library including image response serializers, &lt;code&gt;UIImage&lt;/code&gt; and &lt;code&gt;UIImageView&lt;/code&gt; extensions, custom image filters, an auto-purging in-memory cache and a priority-based image downloading system.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireNetworkActivityIndicator"&gt;AlamofireNetworkActivityIndicator&lt;/a&gt; - Controls the visibility of the network activity indicator on iOS using Alamofire. It contains configurable delay timers to help mitigate flicker and can support &lt;code&gt;URLSession&lt;/code&gt; instances not managed by Alamofire.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+&lt;/li&gt;
&lt;li&gt;Xcode 10.2+&lt;/li&gt;
&lt;li&gt;Swift 5+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-migration-guides" class="anchor" aria-hidden="true" href="#migration-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migration Guides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Alamofire 5.0 Migration Guide: To be written!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%204.0%20Migration%20Guide.md"&gt;Alamofire 4.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%203.0%20Migration%20Guide.md"&gt;Alamofire 3.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%202.0%20Migration%20Guide.md"&gt;Alamofire 2.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you &lt;strong&gt;need help with making network requests&lt;/strong&gt; using Alamofire, use &lt;a href="https://stackoverflow.com/questions/tagged/alamofire" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; and tag &lt;code&gt;alamofire&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you need to &lt;strong&gt;find or understand an API&lt;/strong&gt;, check &lt;a href="http://alamofire.github.io/Alamofire/" rel="nofollow"&gt;our documentation&lt;/a&gt; or &lt;a href="https://developer.apple.com/documentation/foundation/url_loading_system" rel="nofollow"&gt;Apple's documentation for &lt;code&gt;URLSession&lt;/code&gt;&lt;/a&gt;, on top of which Alamofire is built.&lt;/li&gt;
&lt;li&gt;If you need &lt;strong&gt;help with an Alamofire feature&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you'd like to &lt;strong&gt;discuss Alamofire best practices&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you'd like to &lt;strong&gt;discuss a feature request&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an issue here on GitHub and follow the guide. The more detail the better!&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt;, submit a pull request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate Alamofire into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Alamofire&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5.0.0-rc.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate Alamofire into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "Alamofire/Alamofire" "5.0.0-rc.3"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler. It is in early development, but Alamofire does support its use on supported platforms.&lt;/p&gt;
&lt;p&gt;Once you have your Swift package set up, adding Alamofire as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Alamofire/Alamofire.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5.0.0-rc.3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;p&gt;If you prefer not to use any of the aforementioned dependency managers, you can integrate Alamofire into your project manually.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-embedded-framework" class="anchor" aria-hidden="true" href="#embedded-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded Framework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open up Terminal, &lt;code&gt;cd&lt;/code&gt; into your top-level project directory, and run the following command "if" your project is not initialized as a git repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git init&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add Alamofire as a git &lt;a href="https://git-scm.com/docs/git-submodule" rel="nofollow"&gt;submodule&lt;/a&gt; by running the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git submodule add https://github.com/Alamofire/Alamofire.git&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the new &lt;code&gt;Alamofire&lt;/code&gt; folder, and drag the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; into the Project Navigator of your application's Xcode project.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It should appear nested underneath your application's blue project icon. Whether it is above or below all the other Xcode groups does not matter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; in the Project Navigator and verify the deployment target matches that of your application target.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "Targets" heading in the sidebar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the tab bar at the top of that window, open the "General" panel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;code&gt;+&lt;/code&gt; button under the "Embedded Binaries" section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will see two different &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; folders each with two different versions of the &lt;code&gt;Alamofire.framework&lt;/code&gt; nested inside a &lt;code&gt;Products&lt;/code&gt; folder.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It does not matter which &lt;code&gt;Products&lt;/code&gt; folder you choose from, but it does matter whether you choose the top or bottom &lt;code&gt;Alamofire.framework&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the top &lt;code&gt;Alamofire.framework&lt;/code&gt; for iOS and the bottom one for macOS.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can verify which one you selected by inspecting the build log for your project. The build target for &lt;code&gt;Alamofire&lt;/code&gt; will be listed as either &lt;code&gt;Alamofire iOS&lt;/code&gt;, &lt;code&gt;Alamofire macOS&lt;/code&gt;, &lt;code&gt;Alamofire tvOS&lt;/code&gt; or &lt;code&gt;Alamofire watchOS&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And that's it!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;Alamofire.framework&lt;/code&gt; is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-open-radars" class="anchor" aria-hidden="true" href="#open-radars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open Radars&lt;/h2&gt;
&lt;p&gt;The following radars have some effect on the current implementation of Alamofire.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openradar.me/radar?id=5517037090635776" rel="nofollow"&gt;&lt;code&gt;rdar://21349340&lt;/code&gt;&lt;/a&gt; - Compiler throwing warning due to toll-free bridging issue in test case&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rdar://26870455&lt;/code&gt; - Background URL Session Configurations do not work in the simulator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rdar://26849668&lt;/code&gt; - Some URLProtocol APIs do not properly handle &lt;code&gt;URLRequest&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-resolved-radars" class="anchor" aria-hidden="true" href="#resolved-radars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resolved Radars&lt;/h2&gt;
&lt;p&gt;The following radars have been resolved over time after being filed against the Alamofire project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openradar.me/radar?id=5010235949318144" rel="nofollow"&gt;&lt;code&gt;rdar://26761490&lt;/code&gt;&lt;/a&gt; - Swift string interpolation causing memory leak with common usage.
&lt;ul&gt;
&lt;li&gt;(Resolved): 9/1/17 in Xcode 9 beta 6.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openradar.appspot.com/radar?id=4942308441063424" rel="nofollow"&gt;&lt;code&gt;rdar://36082113&lt;/code&gt;&lt;/a&gt; - &lt;code&gt;URLSessionTaskMetrics&lt;/code&gt; failing to link on watchOS 3.0+
&lt;ul&gt;
&lt;li&gt;(Resolved): Just add &lt;code&gt;CFNetwork&lt;/code&gt; to your linked frameworks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-whats-the-origin-of-the-name-alamofire" class="anchor" aria-hidden="true" href="#whats-the-origin-of-the-name-alamofire"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the origin of the name Alamofire?&lt;/h3&gt;
&lt;p&gt;Alamofire is named after the &lt;a href="https://aggie-horticulture.tamu.edu/wildseed/alamofire.html" rel="nofollow"&gt;Alamo Fire flower&lt;/a&gt;, a hybrid variant of the Bluebonnet, the official state flower of Texas.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Alamofire is owned and maintained by the &lt;a href="http://alamofire.org" rel="nofollow"&gt;Alamofire Software Foundation&lt;/a&gt;. You can follow them on Twitter at &lt;a href="https://twitter.com/AlamofireSF" rel="nofollow"&gt;@AlamofireSF&lt;/a&gt; for project updates and releases.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-security-disclosure" class="anchor" aria-hidden="true" href="#security-disclosure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security Disclosure&lt;/h3&gt;
&lt;p&gt;If you believe you have identified a security vulnerability with Alamofire, you should report it as soon as possible via email to &lt;a href="mailto:security@alamofire.org"&gt;security@alamofire.org&lt;/a&gt;. Please do not post it to a public issue tracker.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/Alamofire/Foundation#members"&gt;ASF&lt;/a&gt; is looking to raise money to officially stay registered as a federal non-profit organization.
Registering will allow us members to gain some legal protections and also allow us to put donations to use, tax free.
Donating to the ASF will enable us to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pay our yearly legal fees to keep the non-profit in good status&lt;/li&gt;
&lt;li&gt;Pay for our mail servers to help us stay on top of all questions and security issues&lt;/li&gt;
&lt;li&gt;Potentially fund test servers to make it easier for us to test the edge cases&lt;/li&gt;
&lt;li&gt;Potentially fund developers to work on one of our projects full-time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The community adoption of the ASF libraries has been amazing.
We are greatly humbled by your enthusiasm around the projects, and want to continue to do everything we can to move the needle forward.
With your continued support, the ASF will be able to improve its reach and also provide better legal safety for the core members.
If you use any of our libraries for work, see if your employers would be interested in donating.
Any amount you can donate today to help us reach our goal would be greatly appreciated.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=W34WPEE74APJQ" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f896f7d176663a1559376bb56aac4bdbbbe85ed1/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e61746543435f4c472e676966" alt="paypal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Alamofire is released under the MIT license. &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/LICENSE"&gt;See LICENSE&lt;/a&gt; for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Alamofire</author><guid isPermaLink="false">https://github.com/Alamofire/Alamofire</guid><pubDate>Sat, 21 Dec 2019 00:06:00 GMT</pubDate></item><item><title>fancymax/12306ForMac #7 in Swift, Today</title><link>https://github.com/fancymax/12306ForMac</link><description>&lt;p&gt;&lt;i&gt;An unofficial 12306 Client for Mac&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-12306formac" class="anchor" aria-hidden="true" href="#12306formac"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12306ForMac&lt;/h1&gt;
&lt;p&gt;仅做学习参考，随着12306接口的变更可能无法正常使用。&lt;/p&gt;
&lt;p&gt;Mac版12306 订票/捡票 助手。&lt;/p&gt;
&lt;p&gt;以前要么开Windows虚拟机，要么使用官方Web，现在可以使用12306ForMac订票助手。&lt;/p&gt;
&lt;p&gt;注意系统要求  &lt;strong&gt;OS X10.11&lt;/strong&gt;  以上&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshot/12306ForMac.jpg"&gt;&lt;img src="screenshot/12306ForMac.jpg" alt="demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-开发" class="anchor" aria-hidden="true" href="#开发"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;开发&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;OS X 10.13/Xcode 9.0/Swift 3.2/brew&lt;/li&gt;
&lt;li&gt;$ brew install carthage&lt;/li&gt;
&lt;li&gt;$ git clone --recursive &lt;a href="https://github.com/fancymax/12306ForMac.git"&gt;https://github.com/fancymax/12306ForMac.git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;$ cd 12306ForMac&lt;/li&gt;
&lt;li&gt;$ carthage update --platform macOS&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-感谢" class="anchor" aria-hidden="true" href="#感谢"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;感谢&lt;/h1&gt;
&lt;p&gt;本项目基于 Alamofire、PromiseKit、FMDB、MASPreferences等进行开发，在此表示感谢。&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fancymax</author><guid isPermaLink="false">https://github.com/fancymax/12306ForMac</guid><pubDate>Sat, 21 Dec 2019 00:07:00 GMT</pubDate></item><item><title>vsouza/awesome-ios #8 in Swift, Today</title><link>https://github.com/vsouza/awesome-ios</link><description>&lt;p&gt;&lt;i&gt;A curated list of awesome iOS ecosystem, including Objective-C and Swift Projects &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/vsouza/awesome-ios/blob/master/header.png"&gt;&lt;img src="https://github.com/vsouza/awesome-ios/raw/master/header.png" alt="Awesome" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;p align="center"&gt;
        &lt;a href="https://triplebyte.com/a/azelHFa/d" rel="nofollow"&gt;
        &lt;b&gt;Reduce your job search from O(N) to O(1)&lt;/b&gt;
        &lt;br&gt;
        One coding quiz. &lt;b&gt;Multiple offers from top companies&lt;/b&gt;
        &lt;br&gt;
        &lt;/a&gt;&lt;/p&gt;&lt;p align="center"&gt;&lt;a href="https://triplebyte.com/a/azelHFa/d" rel="nofollow"&gt;
			&lt;img align="center" src="triplebyte_logo.png" width="260" alt="Tripblebyte" style="max-width:100%;"&gt;
	    &lt;/a&gt;&lt;/p&gt;&lt;a href="https://triplebyte.com/a/azelHFa/d" rel="nofollow"&gt;
        &lt;/a&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;br&gt;
	&lt;br&gt;
	&lt;br&gt;
&lt;/div&gt;
&lt;p align="center"&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/13c4e50d88df7178ae1882a203ed57b641674f94/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667"&gt;&lt;img alt="awesome" src="https://camo.githubusercontent.com/13c4e50d88df7178ae1882a203ed57b641674f94/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" data-canonical-src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://travis-ci.org/vsouza/awesome-ios" rel="nofollow"&gt;&lt;img alt="Build Status" src="https://camo.githubusercontent.com/810699c61513c8a99156fe479d4e5b973eb88f1f/68747470733a2f2f6170692e7472617669732d63692e6f72672f76736f757a612f617765736f6d652d696f732e7376673f6272616e63683d6d6173746572" data-canonical-src="https://api.travis-ci.org/vsouza/awesome-ios.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://ko-fi.com/M4M3WPRD" rel="nofollow"&gt;&lt;img width="110" alt="Buy Me a Coffee" src="buy_me_a_coffee.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-meet-the-new-instabugunderstand-how-your-ios-app-is-doing-with-real-time-contextual-insights-from-your-users" class="anchor" aria-hidden="true" href="#meet-the-new-instabugunderstand-how-your-ios-app-is-doing-with-real-time-contextual-insights-from-your-users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meet the New Instabug: Understand How Your iOS App is Doing with Real-Time Contextual Insights From Your Users&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://instabug.com/ios/sdk?utm_source=awesomeios&amp;amp;utm_medium=spon&amp;amp;utm_content=photo" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/vsouza/awesome-ios/master/awesome_ios_instabug.png" alt="instabug-github" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Instabug helps development and product teams easily collect bugs and feedback from beta testers and customers to iterate faster and ship quality apps. Instabug automatically attaches screenshots, device details, network logs, repro steps, and tons of other critical insights needed to resolve issues and prioritize product backlogs.
Mobile teams accelerate their workflows by seamlessly integrating with third-party tools like Github, Jira, Slack, Zendesk and much more. &lt;a href="https://instabug.com/ios/sdk?utm_source=awesomeios&amp;amp;utm_medium=spon&amp;amp;utm_content=learn-more" rel="nofollow"&gt;Instabug is offering awesome-ios community an exclusive 15% discount on all paid plans. Get Started!&lt;/a&gt;
&lt;a href="https://instabug.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c8b52beda68e55d51176d29ea81064608e6e06ac/68747470733a2f2f696e7374616275672d67612e61707073706f742e636f6d2f55412d34313938323038382d362f6769746875622f617765736f6d65696f733f706978656c" alt="" data-canonical-src="https://instabug-ga.appspot.com/UA-41982088-6/github/awesomeios?pixel" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-content" class="anchor" aria-hidden="true" href="#content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#courses"&gt;Courses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#accessibility"&gt;Accessibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alexa"&gt;Alexa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#analytics"&gt;Analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#app-routing"&gt;App Routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apple-tv"&gt;Apple TV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#architecture-patterns"&gt;Architecture Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#arkit"&gt;ARKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#blockchain"&gt;Blockchain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bridging"&gt;Bridging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cache"&gt;Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#charts"&gt;Charts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-quality"&gt;Code Quality&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#linter"&gt;Linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#color"&gt;Color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#command-line"&gt;Command Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-data"&gt;Core Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database"&gt;Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-structures--algorithms"&gt;Data Structures / Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#date--time"&gt;Date &amp;amp; Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#eventbus"&gt;EventBus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#files"&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#functional-programming"&gt;Functional Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#games"&gt;Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gcd"&gt;GCD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gesture"&gt;Gesture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#graphics"&gt;Graphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hardware"&gt;Hardware&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#bluetooth"&gt;Bluetooth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#camera"&gt;Camera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#force-touch"&gt;Force Touch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ibeacon"&gt;iBeacon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#location"&gt;Location&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-hardware"&gt;Other Hardware&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#layout"&gt;Layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization"&gt;Localization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#machine-learning"&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#maps"&gt;Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#math"&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#media"&gt;Media&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#audio"&gt;Audio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gif"&gt;GIF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#image"&gt;Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#media-processing"&gt;Media Processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pdf"&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#streaming"&gt;Streaming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#video"&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#messaging"&gt;Messaging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#networking"&gt;Networking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#notifications"&gt;Notifications&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#push-notifications"&gt;Push Notifications&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#push-notification-providers"&gt;Push Notification Providers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#local-notifications"&gt;Local Notifications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#objective-c-runtime"&gt;Objective-C Runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#optimization"&gt;Optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#parsing"&gt;Parsing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#csv"&gt;CSV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#json"&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xml--html"&gt;XML &amp;amp; HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-parsing"&gt;Other Parsing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#passbook"&gt;Passbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#payments"&gt;Payments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#permissions"&gt;Permissions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#products"&gt;Products&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reactive-programming"&gt;Reactive Programming&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#react-like"&gt;React-Like&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#reflection"&gt;Reflection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#regex"&gt;Regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sdk"&gt;SDK&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#official"&gt;Official&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unofficial"&gt;Unofficial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#security"&gt;Security&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#encryption"&gt;Encryption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keychain"&gt;Keychain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#server"&gt;Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing"&gt;Testing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tdd--bdd"&gt;TDD / BDD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ab-testing"&gt;A/B Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ui-testing"&gt;UI Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-testing"&gt;Other Testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#text"&gt;Text&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#font"&gt;Font&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ui"&gt;UI&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#activity-indicator"&gt;Activity Indicator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alert--action-sheet"&gt;Alert &amp;amp; Action Sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#animation"&gt;Animation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#transition"&gt;Transition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#badge"&gt;Badge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#button"&gt;Button&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calendar"&gt;Calendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cards"&gt;Cards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#form--settings"&gt;Form &amp;amp; Settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keyboard"&gt;Keyboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#label"&gt;Label&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#login"&gt;Login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#menu"&gt;Menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#navigation-bar"&gt;Navigation Bar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pickerview"&gt;PickerView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#popup"&gt;Popup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pull-to-refresh"&gt;Pull to Refresh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rating-stars"&gt;Rating Stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scrollview"&gt;ScrollView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#segmented-control"&gt;Segmented Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#slider"&gt;Slider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splash-view"&gt;Splash View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#status-bar"&gt;Status Bar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stepper"&gt;Stepper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#switch"&gt;Switch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tab-bar"&gt;Tab Bar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#table-view--collection-view"&gt;Table View / Collection View&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#table-view"&gt;Table View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collection-view"&gt;Collection View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#expandable-cell"&gt;Expandable Cell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header"&gt;Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#placeholder"&gt;Placeholder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collection-view-layout"&gt;Collection View Layout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#tag"&gt;Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#textfield--textview"&gt;TextField &amp;amp; TextView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uipagecontrol"&gt;UIPageControl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-view"&gt;Web View&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#utility"&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#user-consent"&gt;User Consent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vr"&gt;VR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#walkthrough--intro--tutorial"&gt;Walkthrough / Intro / Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#websocket"&gt;Websocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#project-setup"&gt;Project setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependency--package-manager"&gt;Dependency / Package Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rapid-development"&gt;Rapid Development&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#injection"&gt;Injection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#deployment--distribution"&gt;Deployment / Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#app-store"&gt;App Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xcode"&gt;Xcode&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#extensions-xcode-8"&gt;Extensions (Xcode 8+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-xcode"&gt;Other Xcode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#reference"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#style-guides"&gt;Style Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#good-websites"&gt;Good Websites&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#news-blogs-and-more"&gt;News, Blogs and more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uikit-references"&gt;UIKit references&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#forums-and-discuss-lists"&gt;Forums and discuss lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tutorials-and-keynotes"&gt;Tutorials and Keynotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prototyping"&gt;Prototyping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#newsletters"&gt;Newsletters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#medium"&gt;Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#social-media"&gt;Social Media&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#twitter"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#facebook-groups"&gt;Facebook Groups&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#podcasts"&gt;Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#books"&gt;Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-awesome-lists"&gt;Other Awesome Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing-and-license"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-courses" class="anchor" aria-hidden="true" href="#courses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Courses&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Courses, tutorials and guides&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/archive/referencelibrary/GettingStarted/DevelopiOSAppsSwift/" rel="nofollow"&gt;Apple- Start Developing with iOS&lt;/a&gt; - Apple Guide.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/OOP_ObjC/Introduction/Introduction.html" rel="nofollow"&gt;Apple - Object-Oriented Programming with Objective-C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html" rel="nofollow"&gt;Apple - Programming with Objective-C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeproject.com/articles/88929/getting-started-with-iphone-and-ios-development" rel="nofollow"&gt;CodeProject&lt;/a&gt; - Getting Started with iPhone and iOS Development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lifehacker.com/i-want-to-write-ios-apps-where-do-i-start-1644802175" rel="nofollow"&gt;Lifehacker&lt;/a&gt; - I Want to Write iOS Apps. Where Do I Start?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/2690-learn-to-code-ios-apps-1-welcome-to-programming" rel="nofollow"&gt;Ray Wenderlich&lt;/a&gt; - Learn to code iOS Apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/us/course/developing-ios-7-apps-for-iphone-and-ipad/id733644550" rel="nofollow"&gt;Stanford - Developing iOS 7 Apps for iPhone and iPad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/in/course/developing-ios-10-apps-swift/id1198467120" rel="nofollow"&gt;Stanford - Developing iOS 10 Apps with Swift&lt;/a&gt; - Stanford's 2017 iTunes U course.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/us/course/developing-ios-11-apps-with-swift/id1309275316" rel="nofollow"&gt;Stanford - Developing iOS 11 Apps with Swift&lt;/a&gt; - Stanford's 2017 iTunes U course updated for iOS 11 and Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swifteducation.github.io/teaching_app_development_with_swift/" rel="nofollow"&gt;Swifteducation - Teaching App Development with Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/intro-to-ios-app-development-with-swift--ud585" rel="nofollow"&gt;Udacity - Intro to iOS App Development with Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/arkit-beginner-to-professional/" rel="nofollow"&gt;Udemy - ARKit - Beginner to Professional in Swift 4 and iOS 11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/codePrincess/ARStarter"&gt;ARStarter&lt;/a&gt; - Get started with ARKit - A little exercise for beginners.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-accessibility" class="anchor" aria-hidden="true" href="#accessibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accessibility&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Frameworks that help to support accessibility features and enable people with disabilities to use your app&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chrs1885/Capable"&gt;Capable&lt;/a&gt; - Track accessibility features to improve your app for people with certain disabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-alexa" class="anchor" aria-hidden="true" href="#alexa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alexa&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Frameworks that help to support writing custom alexa skills in swift&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/choefele/AlexaSkillsKit"&gt;AlexaSkillsKit&lt;/a&gt; - Swift library to develop custom Alexa Skills.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-analytics" class="anchor" aria-hidden="true" href="#analytics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Analytics&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Analytics platforms, SDK's, error tracking and real-time answers about your app&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://instabug.com" rel="nofollow"&gt;Instabug&lt;/a&gt; - In-app feedback, Bug and Crash reporting, Fix Bugs Faster through user-steps, video recordings, screen annotation, network requests logging.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mixpanel.com/" rel="nofollow"&gt;Mixpanel&lt;/a&gt; - Advanced analytics platform.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.localytics.com/" rel="nofollow"&gt;Localytics&lt;/a&gt; - Brings app marketing and analytics together.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://get.fabric.io" rel="nofollow"&gt;Answers by Fabric&lt;/a&gt; - Answers gives you real-time insight into people’s experience in your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gemr/GTrack"&gt;GTrack&lt;/a&gt; - Lightweight Objective-C wrapper around the Google Analytics for iOS SDK with some extra goodies.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orta/ARAnalytics"&gt;ARAnalytics&lt;/a&gt; - Analytics abstraction library offering a sane API for tracking events and user data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/segmentio/analytics-ios"&gt;Segment&lt;/a&gt; - The hassle-free way to integrate analytics into any iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mocaplatform.com/features" rel="nofollow"&gt;MOCA Analytics&lt;/a&gt; - Paid cross-platform analytics backend.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://count.ly" rel="nofollow"&gt;Countly&lt;/a&gt; - Open source, mobile &amp;amp; web analytics, crash reports and push notifications platform for iOS &amp;amp; Android.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abbiio/iosdk"&gt;Abbi&lt;/a&gt; - A Simple SDK for developers to manage and maximise conversions of all in-app promotions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.devtodev.com/" rel="nofollow"&gt;devtodev&lt;/a&gt; - Comprehensive analytics service that improves your project and saves time for product development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bugsnag.com/platforms/ios-crash-reporting" rel="nofollow"&gt;Bugsnag&lt;/a&gt; - Error tracking with a free tier. Error reports include data on device, release, user, and allows arbitrary data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://inapptics.com" rel="nofollow"&gt;Inapptics&lt;/a&gt; - Helps analyze and visualize user behavior in mobile apps. Provides visual user journeys, heatmaps and crash replays.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matomo-org/matomo-sdk-ios"&gt;Matomo&lt;/a&gt; - The MatomoTracker is an iOS, tvOS and macOS SDK for sending app analytics to a Matomo server.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-app-routing" class="anchor" aria-hidden="true" href="#app-routing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;App Routing&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Elegant URL routing, navigation frameworks, deep links and more&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Wasappli/WAAppRouting"&gt;WAAppRouting&lt;/a&gt; - iOS routing done right. Handles both URL recognition and controller displaying with parsed parameters. All in one line, controller stack preserved automatically!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/button/DeepLinkKit"&gt;DeepLinkKit&lt;/a&gt; - A splendid route-matching, block-based way to handle your deep links.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intentkit/IntentKit"&gt;IntentKit&lt;/a&gt; - An easier way to handle third-party URL schemes in iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joeldev/JLRoutes"&gt;JLRoutes&lt;/a&gt; - URL routing library for iOS with a simple block-based API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanKeen/IKRouter"&gt;IKRouter&lt;/a&gt; - URLScheme router than supports auto creation of UIViewControllers for associated url parameters to allow creation of navigation stacks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Appz"&gt;Appz&lt;/a&gt; - Easily launch and deeplink into external applications, falling back to web if not installed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/URLNavigator"&gt;URLNavigator&lt;/a&gt; - Elegant URL Routing for Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/avito-tech/Marshroute"&gt;Marshroute&lt;/a&gt; - Marshroute is an iOS Library for making your Routers simple but extremely powerful.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skyline75489/SwiftRouter"&gt;SwiftRouter&lt;/a&gt; - A URL Router for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/Router"&gt;Router&lt;/a&gt; - Simple Navigation for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AndreyPanov/ApplicationCoordinator"&gt;ApplicationCoordinator&lt;/a&gt; - Coordinator is an object that handles navigation flow and shares flow’s handling for the next coordinator after switching on the next chain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxFlow"&gt;RxFlow&lt;/a&gt; - Navigation framework for iOS applications based on a Reactive Flow Coordinator pattern.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaksimKurpa/Linker"&gt;Linker&lt;/a&gt; - Lightweight way to handle internal and external deeplinks for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aronbalog/CoreNavigation"&gt;CoreNavigation&lt;/a&gt; - Navigate between view controllers with ease.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yishuiliunian/DZURLRoute"&gt;DZURLRoute&lt;/a&gt; - Universal route engine for iOS app, it can handle URLScheme between applications and page route between UIViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/giginet/Crossroad"&gt;Crossroad&lt;/a&gt; - Crossroad is an URL router focused on handling Custom URL Schemes. Using this, you can route multiple URL schemes and fetch arguments and parameters easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zuikyo/ZIKRouter"&gt;ZIKRouter&lt;/a&gt; - An interface-oriented router for discovering modules and injecting dependencies with protocol in OC &amp;amp; Swift, iOS &amp;amp; macOS. Handles route in a type safe way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ekazaev/route-composer"&gt;RouteComposer&lt;/a&gt; - Library that helps to handle view controllers composition, routing and deeplinking tasks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SpectralDragon/LightRoute"&gt;LightRoute&lt;/a&gt; - Easy transition between VIPER modules, implemented on pure Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-apple-tv" class="anchor" aria-hidden="true" href="#apple-tv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apple TV&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;tvOS view controllers, wrappers, template managers and video players.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rsattar/Voucher"&gt;Voucher&lt;/a&gt; - A simple library to make authenticating tvOS apps easy via their iOS counterparts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/0xced/XCDYouTubeKit"&gt;XCDYouTubeKit&lt;/a&gt; - YouTube video player for iOS, tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/toshi0383/TVMLKitchen"&gt;TVMLKitchen&lt;/a&gt; - Swifty TVML template manager with or without client-server.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zats/BrowserTV"&gt;BrowserTV&lt;/a&gt; - Turn your Apple TV into a dashboard displaying any webpage!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/analytics-pros/Swift-GA-Tracker-for-Apple-tvOS"&gt;Swift-GA-Tracker-for-Apple-tvOS&lt;/a&gt; - Google Analytics tracker for Apple tvOS provides an easy integration of Google Analytics’ measurement protocol for Apple TV.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PGSSoft/ParallaxView"&gt;ParallaxView&lt;/a&gt; - iOS controls and extensions that add parallax effect to your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dcordero/TvOSTextViewer"&gt;TvOSTextViewer&lt;/a&gt; - Light and scrollable view controller for tvOS to present blocks of text&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dcordero/FocusTvButton"&gt;FocusTvButton&lt;/a&gt; - Light wrapper of UIButton that allows extra customization for tvOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cgoldsby/TvOSMoreButton"&gt;TvOSMoreButton&lt;/a&gt; - A basic tvOS button which truncates long text with '... More'.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zattoo/TvOSPinKeyboard"&gt;TvOSPinKeyboard&lt;/a&gt; - PIN keyboard for tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dcordero/TvOSScribble"&gt;TvOSScribble&lt;/a&gt; - Handwriting numbers recognizer for Siri Remote.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zattoo/TvOSCustomizableTableViewCell"&gt;TvOSCustomizableTableViewCell&lt;/a&gt; - Light wrapper of UITableViewCell that allows extra customization for tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zattoo/TvOSSlider"&gt;TvOSSlider&lt;/a&gt; - TvOSSlider is an implementation of UISlider for tvOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-architecture-patterns" class="anchor" aria-hidden="true" href="#architecture-patterns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture Patterns&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Clean architecture, Viper, MVVM, Reactive... choose your weapon.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/codytwinton/SwiftyVIPER"&gt;SwiftyVIPER&lt;/a&gt; - Makes implementing VIPER architecture much easier and cleaner.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sergdort/CleanArchitectureRxSwift"&gt;CleanArchitectureRxSwift&lt;/a&gt; - Example of Clean Architecture of iOS app using RxSwift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ferranabello/Viperit"&gt;Viperit&lt;/a&gt; - Viper Framework for iOS. Develop an app following VIPER architecture in an easy way. Written and tested in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Brightify/Reactant"&gt;Reactant&lt;/a&gt; - Reactant is a reactive architecture for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alfa-laboratory/YARCH"&gt;YARCH&lt;/a&gt; - More clean alternative to VIPER with unidirectional data flow (flux-like).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MindorksOpenSource/iOS-Viper-Architecture"&gt;iOS-Viper-Architecture&lt;/a&gt; - This repository contains a detailed sample app that implements VIPER architecture in iOS using libraries and frameworks like Alamofire, AlamofireImage, PKHUD, CoreData etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BendingSpoons/tempura-swift"&gt;Tempura&lt;/a&gt; - A holistic approach to iOS development, inspired by Redux and MVVM.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kaakati/VIPER-Module-Generator"&gt;VIPER Module Generator&lt;/a&gt; - A Clean VIPER Modules Generator with comments and predfined functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Maryom/MMVMi"&gt;MMVMi&lt;/a&gt; - A Validation Model for MVC and MVVM Design Patterns in iOS Applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tailec/ios-architecture"&gt;ios-architecture&lt;/a&gt; - A collection of iOS architectures - MVC, MVVM, MVVM+RxSwift, VIPER, RIBs and many others.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-arkit" class="anchor" aria-hidden="true" href="#arkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ARKit&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Library and tools to help you build unparalleled augmented reality experiences&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ProjectDent/ARKit-CoreLocation"&gt;ARKit-CoreLocation&lt;/a&gt; - Combines the high accuracy of AR with the scale of GPS data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ignacio-chiazzo/ARKit"&gt;Virtual Objects&lt;/a&gt; - Placing Virtual Objects in Augmented Reality.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AFathi/ARVideoKit"&gt;ARVideoKit&lt;/a&gt; - Record and capture ARKit videos, photos, Live Photos, and GIFs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/svhawks/ARKitEnvironmentMapper"&gt;ARKitEnvironmentMapper&lt;/a&gt; - A library that allows you to generate and update environment maps in real-time using the camera feed and ARKit's tracking capabilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rsrbk/SmileToUnlock"&gt;SmileToUnlock&lt;/a&gt; - This library uses ARKit Face Tracking in order to catch a user's smile.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Placenote/PlacenoteSDK-iOS"&gt;Placenote&lt;/a&gt; - A library that makes ARKit sessions persistent to a location using advanced computer vision.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piemonte/Poly"&gt;Poly&lt;/a&gt; - Unofficial Google Poly SDK – search and display 3D models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kboy-silvergym/ARKit-Emperor"&gt;ARKit Emperor&lt;/a&gt; - The Emperor give you the most practical ARKit samples ever.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-authentication" class="anchor" aria-hidden="true" href="#authentication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authentication&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Oauth and Oauth2 libraries, social logins and captcha tools.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/trivago/Heimdallr.swift"&gt;Heimdallr.swift&lt;/a&gt; - Easy to use OAuth 2 library for iOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/OhMyAuth"&gt;OhMyAuth&lt;/a&gt; - Simple OAuth2 library with a support of multiple services.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raulriera/AuthenticationViewController"&gt;AuthenticationViewController&lt;/a&gt; - A simple to use, standard interface for authenticating to oauth 2.0 protected endpoints via SFSafariViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/p2/OAuth2"&gt;OAuth2&lt;/a&gt; - OAuth2 framework for macOS and iOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OAuthSwift/OAuthSwift"&gt;OAuthSwift&lt;/a&gt; - Swift based OAuth library for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/calebd/SimpleAuth"&gt;SimpleAuth&lt;/a&gt; - Simple social authentication for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/AlamofireOauth2"&gt;AlamofireOauth2&lt;/a&gt; - A swift implementation of OAuth2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/SwiftyOAuth"&gt;SwiftyOAuth&lt;/a&gt; - A simple OAuth library for iOS with a built-in set of providers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SimplicityMobile/Simplicity"&gt;Simplicity&lt;/a&gt; - A simple way to implement Facebook and Google login in your iOS and macOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Isuru-Nanayakkara/InstagramAuthViewController"&gt;InstagramAuthViewController&lt;/a&gt; - A ViewController for Instagram authentication.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbaumbach/InstagramSimpleOAuth"&gt;InstagramSimpleOAuth&lt;/a&gt; - A quick and simple way to authenticate an Instagram user in your iPhone or iPad app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbaumbach/DropboxSimpleOAuth"&gt;DropboxSimpleOAuth&lt;/a&gt; - A quick and simple way to authenticate a Dropbox user in your iPhone or iPad app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbaumbach/BoxSimpleOAuth"&gt;BoxSimpleOAuth&lt;/a&gt; - A quick and simple way to authenticate a Box user in your iPhone or iPad app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnderGoig/InstagramLogin"&gt;InstagramLogin&lt;/a&gt; - A simple way to authenticate Instagram accounts on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fjcaetano/ReCaptcha"&gt;ReCaptcha&lt;/a&gt; - (In)visible ReCaptcha for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serhii-londar/LinkedInSignIn"&gt;LinkedInSignIn&lt;/a&gt; - Simple view controller to login and retrieve access token from LinkedIn.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-blockchain" class="anchor" aria-hidden="true" href="#blockchain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blockchain&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Tool for smart contract interactions. Bitcoin protocol implementations and Frameworks for interacting with cryptocurrencies.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Boilertalk/Web3.swift"&gt;Web3.swift&lt;/a&gt; - Web3 library for interacting with the Ethereum blockchain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BANKEX/web3swift"&gt;web3swift&lt;/a&gt; - Elegant Web3js functionality in Swift. Native ABI parsing and smart contract interactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/D-Technologies/EthereumKit"&gt;EthereumKit&lt;/a&gt; - EthereumKit is a free, open-source Swift framework for easily interacting with the Ethereum.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yenom/BitcoinKit"&gt;BitcoinKit&lt;/a&gt; - Bitcoin protocol toolkit for Swift, BitcoinKit implements Bitcoin protocol in Swift. It is an implementation of the Bitcoin SPV protocol written (almost) entirely in swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SteadyAction/EtherWalletKit"&gt;EtherWalletKit&lt;/a&gt; - Ethereum Wallet Toolkit for iOS - You can implement Ethereum wallet without a server and blockchain knowledge.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coinpaprika/coinpaprika-api-swift-client"&gt;CoinpaprikaAPI&lt;/a&gt; - Coinpaprika API client with free &amp;amp; frequently updated market data from the world of crypto: coin prices, volumes, market caps, ATHs, return rates and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/horizontalsystems/bitcoin-kit-ios"&gt;Bitcoin-Swift-Kit&lt;/a&gt; - Full Bitcoin library written on Swift. Complete SPV wallet implementation for Bitcoin, Bitcoin Cash and Dash blockchains.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-bridging" class="anchor" aria-hidden="true" href="#bridging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bridging&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Sharing code between Objective-C and Swift, iOS and macOS, Javascript and Objective-C.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rubymotion.com/" rel="nofollow"&gt;RubyMotion&lt;/a&gt; - RubyMotion is a revolutionary toolchain that lets you quickly develop and test native iOS and macOS applications for iPhone, iPad and Mac, all using the Ruby language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bang590/JSPatch"&gt;JSPatch&lt;/a&gt; - JSPatch bridge Objective-C and Javascript using the Objective-C runtime. You can call any Objective-C class and method in JavaScript by just including a small engine. JSPatch is generally use for hotfix iOS App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcuswestin/WebViewJavascriptBridge"&gt;WebViewJavascriptBridge&lt;/a&gt; - An iOS/macOS bridge for sending messages between Obj-C and JavaScript in UIWebViews/WebViews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MichaelBuckley/MAIKit"&gt;MAIKit&lt;/a&gt; - A framework for sharing code between iOS and macOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cache" class="anchor" aria-hidden="true" href="#cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cache&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Thread safe, offline and high performance cache libs and frameworks.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aschuch/AwesomeCache"&gt;Awesome Cache&lt;/a&gt; - Delightful on-disk cache (written in Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/buzzfeed/mattress"&gt;mattress&lt;/a&gt; - iOS Offline Caching for Web Content.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spring-media/Carlos"&gt;Carlos&lt;/a&gt; - A simple but flexible cache.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Haneke/HanekeSwift"&gt;HanekeSwift&lt;/a&gt; - A lightweight generic cache for iOS written in Swift with extra love for images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYCache"&gt;YYCache&lt;/a&gt; - High performance cache framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Cache"&gt;Cache&lt;/a&gt; - Nothing but Cache.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mortgy/MGCacheManager"&gt;MGCacheManager&lt;/a&gt; - A delightful iOS Networking Cache Managing Class.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/SPTPersistentCache"&gt;SPTPersistentCache&lt;/a&gt; - Everyone tries to implement a cache at some point in their iOS app’s lifecycle, and this is ours. By Spotify.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maquannene/Track"&gt;Track&lt;/a&gt; - Track is a thread safe cache write by Swift. Composed of DiskCache and MemoryCache which support LRU.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kilograpp/UITableView-Cache"&gt;UITableView Cache&lt;/a&gt; - UITableView cell cache that cures scroll-lags on a cell instantiating.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/plivesey/RocketData"&gt;RocketData&lt;/a&gt; - A caching and consistency solution for immutable models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pinterest/PINCache"&gt;PINCache&lt;/a&gt; - Fast, non-deadlocking parallel object cache for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zolomatok/Johnny"&gt;Johnny&lt;/a&gt; - Melodic Caching for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saoudrizwan/Disk"&gt;Disk&lt;/a&gt; - Delightful framework for iOS to easily persist structs, images, and data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nrkno/yr-cachyr"&gt;Cachyr&lt;/a&gt; - A small key-value data cache for iOS, macOS and tvOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soffes/Cache"&gt;Cache&lt;/a&gt; - Swift caching library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yysskk/MemoryCache"&gt;MemoryCache&lt;/a&gt; - MemoryCache is type-safe memory cache.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-charts" class="anchor" aria-hidden="true" href="#charts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Charts&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Beautiful, Easy and Fully customized charts&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danielgindi/Charts"&gt;Charts&lt;/a&gt; - A powerful chart / graph framework, the iOS equivalent to &lt;a href="https://github.com/PhilJay/MPAndroidChart"&gt;MPAndroidChart&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kevinzhow/PNChart"&gt;PNChart&lt;/a&gt; - A simple and beautiful chart lib used in Piner and CoinsMan for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JunyiXie/XJYChart"&gt;XJYChart&lt;/a&gt; - A Beautiful chart for iOS. Support animation, click, slide, area highlight.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boris-Em/BEMSimpleLineGraph"&gt;BEMSimpleLineGraph&lt;/a&gt; - Elegant Line Graphs for iOS (charting library).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Jawbone/JBChartView"&gt;JBChartView&lt;/a&gt; - iOS-based charting library for both line and bar graphs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xyfeng/XYPieChart"&gt;XYPieChart&lt;/a&gt; - A simple and animated Pie Chart for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xhacker/TEAChart"&gt;TEAChart&lt;/a&gt; - Simple and intuitive iOS chart library. Contribution graph, clock chart, and bar chart.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zhuhuihuihui/EChart"&gt;EChart&lt;/a&gt; - iOS/iPhone/iPad Chart, Graph. Event handling and animation supported.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArthurGuibert/FSLineChart"&gt;FSLineChart&lt;/a&gt; - A line chart library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zhiyu/chartee"&gt;chartee&lt;/a&gt; - A charting library for mobile platforms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anaglik/ANDLineChartView"&gt;ANDLineChartView&lt;/a&gt; - ANDLineChartView is easy to use view-based class for displaying animated line chart.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chasseurmic/TWRCharts"&gt;TWRCharts&lt;/a&gt; - An iOS wrapper for ChartJS. Easily build animated charts by leveraging the power of native Obj-C code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/i-schuetz/SwiftCharts"&gt;SwiftCharts&lt;/a&gt; - Easy to use and highly customizable charts library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/drinkius/flowerchart"&gt;FlowerChart&lt;/a&gt; - Flower-shaped chart with custom appearance animation, fully vector.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/philackm/ScrollableGraphView"&gt;Scrollable-GraphView&lt;/a&gt; - An adaptive scrollable graph view for iOS to visualise simple discrete datasets. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zomato/DR-charts"&gt;Dr-Charts&lt;/a&gt; - Dr-Charts is a highly customisable, easy to use and interactive chart / graph framework in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-mtl/Graphs"&gt;Graphs&lt;/a&gt; - Light weight charts view generator for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArthurGuibert/FSInteractiveMap"&gt;FSInteractiveMap&lt;/a&gt; - A charting library to visualize and interact with a vector map on iOS. It's like Geochart but for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnnywjy/JYRadarChart"&gt;JYRadarChart&lt;/a&gt; - An iOS open source Radar Chart implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TBXark/TKRadarChart"&gt;TKRadarChart&lt;/a&gt; - A customizable radar chart in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexandrGraschenkov/MagicPie"&gt;MagicPie&lt;/a&gt; - Awesome layer based pie chart. Fantastically fast and fully customizable. Amazing animations available with MagicPie.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/i-schuetz/PieCharts"&gt;PieCharts&lt;/a&gt; - Easy to use and highly customizable pie charts library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/youkchansim/CSPieChart"&gt;CSPieChart&lt;/a&gt; - iOS PieChart Opensource. This is very easy to use and customizable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dadalar/DDSpiderChart"&gt;DDSpiderChart&lt;/a&gt; - Easy to use and customizable Spider (Radar) Chart library for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/core-plot/core-plot"&gt;core-plot&lt;/a&gt; - a 2D plotting lib which is highly customizable and capable of drawing many types of plots.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hadiidbouk/ChartProgressBar-iOS"&gt;ChartProgressBar&lt;/a&gt; - Draw a chart with progress bar style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VRGsoftUA/SMDiagramView"&gt;SMDiagramViewSwift&lt;/a&gt; - Meet cute and very flexibility library for iOS application for different data view in one circle diagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zemirco/swift-linechart"&gt;Swift LineChart&lt;/a&gt; - Line Chart library for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gpbl/SwiftChart"&gt;SwiftChart&lt;/a&gt; - Line and area chart library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/EatFit"&gt;EatFit&lt;/a&gt; - Eat fit is a component for attractive data representation inspired by Google Fit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cagricolak/CoreCharts"&gt;CoreCharts&lt;/a&gt; - CoreCharts is a simple powerful yet Charts library for apple products.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-quality" class="anchor" aria-hidden="true" href="#code-quality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Quality&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Quality always matters. Code checkers, memory vigilants, syntastic sugars and more.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/Bootstrap"&gt;Bootstrap&lt;/a&gt; - iOS project bootstrap aimed at high quality coding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/KZAsserts"&gt;KZAsserts&lt;/a&gt; - Set of custom assertions that automatically generate NSError's, allow for both Assertions in Debug and Error handling in Release builds, with beautiful DSL.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/steipete/5664345"&gt;PSPDFUIKitMainThreadGuard&lt;/a&gt; - Simple snippet generating assertions when UIKit is used on background threads.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cue/ocstyle"&gt;ocstyle&lt;/a&gt; - Objective-C style checker.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/spacecommander"&gt;spacecommander&lt;/a&gt; - Commit fully-formatted Objective-C code as a team without even trying.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/diwu/DWURecyclingAlert"&gt;DWURecyclingAlert&lt;/a&gt; - Optimizing UITableViewCell For Fast Scrolling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sleekbyte/tailor"&gt;Tailor&lt;/a&gt; - Cross-platform static analyzer for Swift that helps you to write cleaner code and avoid bugs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andresinaka/SwiftCop"&gt;SwiftCop&lt;/a&gt; -  SwiftCop is a validation library fully written in Swift and inspired by the clarity of Ruby On Rails Active Record validations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VojtaStavik/Trackable"&gt;Trackable&lt;/a&gt; - Trackable is a simple analytics integration helper library. It’s especially designed for easy and comfortable integration with existing projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/MLeaksFinder"&gt;MLeaksFinder&lt;/a&gt; - Find memory leaks in your iOS app at develop time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tapwork/HeapInspector-for-iOS"&gt;HeapInspector-for-iOS&lt;/a&gt; - Find memory issues &amp;amp; leaks in your iOS app without instruments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/FBMemoryProfiler"&gt;FBMemoryProfiler&lt;/a&gt; - iOS tool that helps with profiling iOS Memory usage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/FBRetainCycleDetector"&gt;FBRetainCycleDetector&lt;/a&gt; - iOS library to help detecting retain cycles in runtime.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Buglife/Buglife-iOS"&gt;Buglife&lt;/a&gt; - Awesome bug reporting for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boredzo/Warnings-xcconfig"&gt;Warnings-xcconfig&lt;/a&gt; - An xcconfig (Xcode configuration) file for easily turning on a boatload of warnings in your project or its targets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/Aardvark"&gt;Aardvark&lt;/a&gt; - Aardvark is a library that makes it dead simple to create actionable bug reports.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shu223/Stats"&gt;Stats&lt;/a&gt; - In-app memory usage monitoring.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/GlueKit"&gt;GlueKit&lt;/a&gt; - A type-safe observer framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/SwiftFormat"&gt;SwiftFormat&lt;/a&gt; - A code library and command-line formatting tool for reformatting Swift code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PSPDFKit-labs/PSTModernizer"&gt;PSTModernizer&lt;/a&gt; - Makes it easier to support older versions of iOS by fixing things and adding missing methods.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bugsee.com" rel="nofollow"&gt;Bugsee&lt;/a&gt; - In-app bug and crash reporting with video, logs, network traffic and traces.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/Fallback"&gt;Fallback&lt;/a&gt; - Syntactic sugar for nested do-try-catch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olddonkey/ODUIThreadGuard"&gt;ODUIThreadGuard&lt;/a&gt; - A guard to help you check if you make UI changes not in main thread.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastred/IBAnalyzer"&gt;IBAnalyzer&lt;/a&gt; - Find common xib and storyboard-related problems without running your app or writing unit tests.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coderyi/DecouplingKit"&gt;DecouplingKit&lt;/a&gt; - decoupling between modules in your iOS Project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Geek-1001/Clue"&gt;Clue&lt;/a&gt; - Flexible bug report framework for iOS with screencast, networking, interactions and view structure.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vincent-pradeilles/weakable-self"&gt;WeakableSelf&lt;/a&gt; - A Swift micro-framework to encapsulate &lt;code&gt;[weak self]&lt;/code&gt; and &lt;code&gt;guard&lt;/code&gt; statements within closures.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-linter" class="anchor" aria-hidden="true" href="#linter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linter&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Static code analyzers to enforce style and conventions.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/oclint/oclint"&gt;OCLint&lt;/a&gt; - Static code analysis tool for improving quality and reducing defects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yopeso/Taylor"&gt;Taylor&lt;/a&gt; - Measure Swift code metrics and get reports in Xcode, Jenkins and other CI platforms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/SwiftLint"&gt;Swiftlint&lt;/a&gt; - A tool to enforce Swift style and conventions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBDecodable/IBLinter"&gt;IBLinter&lt;/a&gt; - A linter tool for Interface Builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muyexi/SwiftLinter"&gt;SwiftLinter&lt;/a&gt; - Share lint rules between projects and lint changed files with SwiftLint.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-color" class="anchor" aria-hidden="true" href="#color"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Color&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Hex color extensions, theming, color pickers and other awesome color tools.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/DynamicColor"&gt;DynamicColor&lt;/a&gt; - Yet another extension to manipulate colors easily in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thii/SwiftHEXColors"&gt;SwiftHEXColors&lt;/a&gt; - HEX color handling as an extension for UIColor.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bennyguitar/Colours"&gt;Colours&lt;/a&gt; - A beautiful set of predefined colors and a set of color methods to make your iOS/macOS development life easier.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yeahdongcn/UIColor-Hex-Swift"&gt;UIColor-Hex-Swift&lt;/a&gt; - Convenience method for creating autoreleased color using RGBA hex string.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Hue"&gt;Hue&lt;/a&gt; - Hue is the all-in-one coloring utility that you'll ever need.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brynbellomy/FlatUIColors"&gt;FlatUIColors&lt;/a&gt; - Flat UI color palette helpers written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/RandomColorSwift"&gt;RandomColorSwift&lt;/a&gt; - An attractive color generator for Swift. Ported from &lt;code&gt;randomColor.js&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectFreeze/PFColorHash"&gt;PFColorHash&lt;/a&gt; - Generate color based on the given string.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boycechang/BCColor"&gt;BCColor&lt;/a&gt; - A lightweight but powerful color kit (Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Draveness/DKNightVersion"&gt;DKNightVersion&lt;/a&gt; - Manage Colors, Integrate Night/Multiple Themes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jdhealy/PrettyColors"&gt;PrettyColors&lt;/a&gt; - PrettyColors is a Swift library for styling and coloring text in the Terminal. The library outputs &lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code" rel="nofollow"&gt;ANSI escape codes&lt;/a&gt; and conforms to ECMA Standard 48.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/burhanuddin353/TFTColor"&gt;TFTColor&lt;/a&gt; - Simple Extension for RGB and CMKY Hex Strings and Hex Values (ObjC &amp;amp; Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakemarsh/CostumeKit"&gt;CostumeKit&lt;/a&gt; - Base types for theming an app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WorldDownTown/CSS3ColorsSwift"&gt;CSS3ColorsSwift&lt;/a&gt; - A UIColor extension with CSS3 Colors name.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/czater/Colorify"&gt;Colorify&lt;/a&gt; - Simple, yet powerful color library that includes latest and most trendy colors from 2017.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joncardasis/ChromaColorPicker"&gt;ChromaColorPicker&lt;/a&gt; - An intuitive iOS color picker built in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/valdirunars/Lorikeet"&gt;Lorikeet&lt;/a&gt; - A lightweight Swift framework for aesthetically pleasing color-scheme generation and CIE color-difference calculation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/regexident/Gestalt"&gt;Gestalt&lt;/a&gt; - An unintrusive &amp;amp; light-weight iOS app-theming library with support for animated theme switching.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Smart, beauftil and elegant tools to help you create command line applications.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nsomar/Swiftline"&gt;Swiftline&lt;/a&gt; - Swiftline is a set of tools to help you create command line applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/Commander"&gt;Commander&lt;/a&gt; - Compose beautiful command line interfaces in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mtynior/ColorizeSwift"&gt;ColorizeSwift&lt;/a&gt; - Terminal string styling for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nsomar/Guaka"&gt;Guaka&lt;/a&gt; - The smartest and most beautiful (POSIX compliant) Command line framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/Marathon"&gt;Marathon&lt;/a&gt; - Marathon makes it easy to write, run and manage your Swift scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/surfandneptune/CommandCougar"&gt;CommandCougar&lt;/a&gt; - An elegant pure Swift library for building command line applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luoxiu/Crayon"&gt;Crayon&lt;/a&gt; - Terminal string styling with expressive api and 256/TrueColor support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kareman/SwiftShell"&gt;SwiftShell&lt;/a&gt; - A Swift framework for shell scripting and running shell commands.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eneko/SourceDocs"&gt;SourceDocs&lt;/a&gt; - Command Line Tool that generates Markdown documentation from inline source code comments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/minuscorp/ModuleInterface"&gt;ModuleInterface&lt;/a&gt; - Command Line Tool that generates the Module's Interface from a Swift project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-concurrency" class="anchor" aria-hidden="true" href="#concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Job schedulers, Coroutines, Asynchronous and Type safe threads libs and frameworks written in Swift&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Zewo/Venice"&gt;Venice&lt;/a&gt; - CSP (Coroutines, Channels, Select) for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/Concurrent"&gt;Concurrent&lt;/a&gt; - Functional Concurrency Primitives.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/Flow"&gt;Flow&lt;/a&gt; - Operation Oriented Programming in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmfieldman/Brisk"&gt;Brisk&lt;/a&gt; - A Swift DSL that allows concise and effective concurrency manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aojet/Aojet"&gt;Aojet&lt;/a&gt; - An actor model library for swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saidsikira/Overdrive"&gt;Overdrive&lt;/a&gt; - Fast async task based Swift framework with focus on type safety, concurrency and multi threading.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AsyncNinja/AsyncNinja"&gt;AsyncNinja&lt;/a&gt; - A complete set of concurrency and reactive programming primitives.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intelygenz/Kommander-iOS"&gt;Kommander&lt;/a&gt; - Kommander is a Swift library to manage the task execution in different threads. Through the definition a simple but powerful concept, Kommand.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/Threadly"&gt;Threadly&lt;/a&gt; - Type-safe thread-local storage in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roytornado/Flow-iOS"&gt;Flow-iOS&lt;/a&gt; - Make your logic flow and data flow clean and human readable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FabrizioBrancati/Queuer"&gt;Queuer&lt;/a&gt; - A queue manager, built on top of OperationQueue and Dispatch (aka GCD).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lucas34/SwiftQueue"&gt;SwiftQueue&lt;/a&gt; - Job Scheduler with Concurrent run, failure/retry, persistence, repeat, delay and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quanvo87/GroupWork"&gt;GroupWork&lt;/a&gt; - Easy concurrent, asynchronous tasks in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stickytools/sticky-locking"&gt;StickyLocking&lt;/a&gt; - A general purpose embedded hierarchical lock manager used to build highly concurrent applications of all types.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-core-data" class="anchor" aria-hidden="true" href="#core-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Data&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Core data Frameworks, wrappers, generators and boilerplates.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/drewmccormack/ensembles"&gt;Ensembles&lt;/a&gt; - A synchronization framework for Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rentzsch/mogenerator"&gt;Mogenerator&lt;/a&gt; - Automatic Core Data code generation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/magicalpanda/MagicalRecord"&gt;MagicalRecord&lt;/a&gt; - Super Awesome Easy Fetching for Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnEstropia/CoreStore"&gt;CoreStore&lt;/a&gt; - Powerful Core Data framework for Incremental Migrations, Fetching, Observering, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prosumma/CoreDataQueryInterface"&gt;Core Data Query Interface&lt;/a&gt; A type-safe, fluent query framework for Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Graph"&gt;Graph&lt;/a&gt; - An elegant data-driven framework for CoreData in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fuzz-productions/CoreDataDandy"&gt;CoreDataDandy&lt;/a&gt; - A feature-light wrapper around Core Data that simplifies common database operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/Sync"&gt;Sync&lt;/a&gt; - Modern Swift JSON synchronization to Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alecrim/AlecrimCoreData"&gt;AlecrimCoreData&lt;/a&gt; - A powerful and simple Core Data wrapper framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AERecord"&gt;AERecord&lt;/a&gt; - Super awesome Core Data wrapper in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bignerdranch/CoreDataStack"&gt;CoreDataStack&lt;/a&gt; - The Big Nerd Ranch Core Data Stack.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/JSQCoreDataKit"&gt;JSQCoreDataKit&lt;/a&gt; - A swifter Core Data stack.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/albertodebortoli/Skopelos"&gt;Skopelos&lt;/a&gt; - A minimalistic, thread safe, non-boilerplate and super easy to use version of Active Record on Core Data. Simply all you need for doing Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmfieldman/cadmium"&gt;Cadmium&lt;/a&gt; - A complete swift framework that wraps CoreData and helps facilitate best practices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mrdekk/DataKernel"&gt;DataKernel&lt;/a&gt; - Simple CoreData wrapper to ease operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/DATAStack"&gt;DATAStack&lt;/a&gt; - 100% Swift Simple Boilerplate Free Core Data Stack. NSPersistentContainer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/justeat/JustPersist"&gt;JustPersist&lt;/a&gt; - JustPersist is the easiest and safest way to do persistence on iOS with Core Data support out of the box.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KrakenDev/PrediKit"&gt;PrediKit&lt;/a&gt; - An NSPredicate DSL for iOS, macOS, tvOS, &amp;amp; watchOS. Inspired by SnapKit and lovingly written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BowdusBrown/Records"&gt;Records&lt;/a&gt; - In just a few minutes, setup a fully functioning CoreData implementation that embraces the static, type-safe nature of Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreadelfante/PredicateFlow"&gt;PredicateFlow&lt;/a&gt; - Write amazing, strong-typed and easy-to-read NSPredicate, allowing you to write flowable NSPredicate, without guessing attribution names, predicate operation or writing wrong arguments type.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-database" class="anchor" aria-hidden="true" href="#database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Wrappers, clients, Parse alternatives and safe tools to deal with ephemeral and persistent data.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/realm-cocoa"&gt;Realm&lt;/a&gt; - The alternative to CoreData and SQLite: Simple, modern and fast.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yapstudios/YapDatabase"&gt;YapDatabase&lt;/a&gt; - YapDatabase is an extensible database for iOS &amp;amp; Mac.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.couchbase.com/products/mobile/" rel="nofollow"&gt;Couchbase Mobile&lt;/a&gt; - Couchbase document store for mobile with cloud sync.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ccgus/fmdb"&gt;FMDB&lt;/a&gt; - A Cocoa / Objective-C wrapper around SQLite.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcoarment/FCModel"&gt;FCModel&lt;/a&gt; - An alternative to Core Data for people who like having direct SQL access.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Zephyr"&gt;Zephyr&lt;/a&gt; - Effortlessly synchronize NSUserDefaults over iCloud.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phimage/Prephirences"&gt;Prephirences&lt;/a&gt; - Prephirences is a Swift library that provides useful protocols and convenience methods to manage application preferences, configurations and app-state.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Storez"&gt;Storez&lt;/a&gt; - Safe, statically-typed, store-agnostic key-value storage (with namespace support).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sunshinejr/SwiftyUserDefaults"&gt;SwiftyUserDefaults&lt;/a&gt; - Statically-typed NSUserDefaults.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/modo-studio/SugarRecord"&gt;SugarRecord&lt;/a&gt;  - Data persistence management library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stephencelis/SQLite.swift"&gt;SQLite.swift&lt;/a&gt; - A type-safe, Swift-language layer over SQLite3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRDB.swift"&gt;GRDB.swift&lt;/a&gt; - A versatile SQLite toolkit for Swift, with WAL mode support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vapor/fluent"&gt;Fluent&lt;/a&gt; - Simple ActiveRecord implementation for working with your database in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/relatedcode/ParseAlternatives"&gt;ParseAlternatives&lt;/a&gt; - A collaborative list of Parse alternative backend service providers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tasanobu/TypedDefaults"&gt;TypedDefaults&lt;/a&gt; - TypedDefaults is a utility library to type-safely use NSUserDefaults.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/realm-cocoa-converter"&gt;realm-cocoa-converter&lt;/a&gt; - A library that provides the ability to import/export Realm files from a variety of data container formats.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danthorpe/YapDatabaseExtensions"&gt;YapDatabaseExtensions&lt;/a&gt; - YapDatabase extensions for use with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mhergon/RealmGeoQueries"&gt;RealmGeoQueries&lt;/a&gt; - RealmGeoQueries simplifies spatial queries with Realm Cocoa. In the absence of and official functions, this library provide the possibility to do proximity search.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Danappelxx/SwiftMongoDB"&gt;SwiftMongoDB&lt;/a&gt; - A MongoDB interface for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iabudiab/ObjectiveRocks"&gt;ObjectiveRocks&lt;/a&gt; - An Objective-C wrapper of Facebook's RocksDB - A Persistent Key-Value Store for Flash and RAM Storage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oleghnidets/OHMySQL"&gt;OHMySQL&lt;/a&gt; - An Objective-C wrapper of MySQL C API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemantasapkota/SwiftStore"&gt;SwiftStore&lt;/a&gt; - Key-Value store for Swift backed by LevelDB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/OneStore"&gt;OneStore&lt;/a&gt; - A single value proxy for NSUserDefaults, with clean API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-MongoDB"&gt;MongoDB&lt;/a&gt; - A Swift wrapper around the mongo-c client library, enabling access to MongoDB servers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-MySQL"&gt;MySQL&lt;/a&gt; - A Swift wrapper around the MySQL client library, enabling access to MySQL servers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-Redis"&gt;Redis&lt;/a&gt; - A Swift wrapper around the Redis client library, enabling access to Redis.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-PostgreSQL"&gt;PostgreSQL&lt;/a&gt; - A Swift wrapper around the libpq client library, enabling access to PostgreSQL servers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-FileMaker"&gt;FileMaker&lt;/a&gt; - A Swift wrapper around the FileMaker XML Web publishing interface, enabling access to FileMaker servers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SD10/Nora"&gt;Nora&lt;/a&gt; - Nora is a Firebase abstraction layer for working with FirebaseDatabase and FirebaseStorage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanRublev/PersistentStorageSerializable"&gt;PersistentStorageSerializable&lt;/a&gt; - Swift library that makes easier to serialize the user's preferences (app's settings) with system User Defaults or Property List file on disk.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/wcdb"&gt;WCDB&lt;/a&gt; - WCDB is an efficient, complete, easy-to-use mobile database framework for iOS, macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/StorageKit/StorageKit"&gt;StorageKit&lt;/a&gt; - Your Data Storage Troubleshooter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nmdias/DefaultsKit"&gt;UserDefaults&lt;/a&gt; - Simple, Strongly Typed UserDefaults for iOS, macOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/Default"&gt;Default&lt;/a&gt; - Modern interface to UserDefaults + Codable support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/caiyue1993/IceCream"&gt;IceCream&lt;/a&gt; - Sync Realm Database with CloudKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quanvo87/FirebaseHelper"&gt;FirebaseHelper&lt;/a&gt; - Safe and easy wrappers for common Firebase Realtime Database functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dreymonde/Shallows"&gt;Shallows&lt;/a&gt; - Your lightweight persistence toolbox.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iAmrSalman/StorageManager"&gt;StorageManager&lt;/a&gt; - Safe and easy way to use FileManager as Database.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k-lpmg/RealmWrapper"&gt;RealmWrapper&lt;/a&gt; - Safe and easy wrappers for RealmSwift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/omaralbeik/UserDefaultsStore"&gt;UserDefaultsStore&lt;/a&gt; - An easy and very light way to store and retrieve -reasonable amount- of Codable objects, in a couple lines of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metasmile/PropertyKit"&gt;PropertyKit&lt;/a&gt; - Protocol-First, Type and Key-Safe Swift Property for iOS, macOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Teknasyon-Teknoloji/PersistenceKit"&gt;PersistenceKit&lt;/a&gt; - Store and retrieve Codable objects to various persistence layers, in a couple lines of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ssamadgh/ModelAssistant"&gt;ModelAssistant&lt;/a&gt; - Elegant library to manage the interactions between view and model in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/MMKV"&gt;MMKV&lt;/a&gt; - An efficient, small mobile key-value storage framework developed by WeChat. Works on iOS, Android, macOS and Windows.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/Defaults"&gt;Defaults&lt;/a&gt; - Swifty and modern UserDefaults.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenKitten/MongoKitten"&gt;MongoKitten&lt;/a&gt; - A pure Swift MongoDB client implementation with support for embedded databases.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vpeschenkov/SecureDefaults"&gt;SecureDefaults&lt;/a&gt; - A lightweight wrapper over UserDefaults/NSUserDefaults with an extra AES-256 encryption layer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturdev/Unrealm"&gt;Unrealm&lt;/a&gt; - Unrealm enables you to easily store Swift native Classes, Structs and Enums into Realm.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-data-structures--algorithms" class="anchor" aria-hidden="true" href="#data-structures--algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Structures / Algorithms&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Diffs, keypaths, sorted lists and other amazing data structures wrappers and libraries.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/osteslag/Changeset"&gt;Changeset&lt;/a&gt; - Minimal edits from one collection to another.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/BTree"&gt;BTree&lt;/a&gt; - Fast ordered collections for Swift using in-memory B-trees.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/waynewbishop/SwiftStructures"&gt;SwiftStructures&lt;/a&gt; - Examples of commonly used data structures and algorithms in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soffes/diff"&gt;diff&lt;/a&gt; - Simple diff library in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Brick"&gt;Brick&lt;/a&gt; - A generic view model for both basic and complex scenarios.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Algorithm"&gt;Algorithm&lt;/a&gt; - Algorithm is a collection of data structures that are empowered by a probability toolset.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tarunon/AnyObjectConvertible"&gt;AnyObjectConvertible&lt;/a&gt; - Convert your own struct/enum to AnyObject easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ankurp/Dollar"&gt;Dollar&lt;/a&gt; - A functional tool-belt for Swift Language similar to Lo-Dash or Underscore.js in Javascript &lt;a href="https://www.dollarswift.org/" rel="nofollow"&gt;https://www.dollarswift.org/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antitypical/Result"&gt;Result&lt;/a&gt; - Swift type modeling the success/failure of arbitrary operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EvgenyKarkan/EKAlgorithms"&gt;EKAlgorithms&lt;/a&gt; - Some well known CS algorithms &amp;amp; data structures in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naru-jpn/Monaka"&gt;Monaka&lt;/a&gt; - Convert custom struct and fundamental values to NSData.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexdrone/Buffer"&gt;Buffer&lt;/a&gt; - Swift μ-framework for efficient array diffs, collection observation and cell configuration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davecom/SwiftGraph"&gt;SwiftGraph&lt;/a&gt; - Graph data structure and utility functions in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davecom/SwiftPriorityQueue"&gt;SwiftPriorityQueue&lt;/a&gt; - A priority queue with a classic binary heap implementation in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naru-jpn/pencil"&gt;Pencil&lt;/a&gt; - Write values to file and read it more easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mcudich/HeckelDiff"&gt;HeckelDiff&lt;/a&gt; - A fast Swift diffing library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artemstepanenko/Dekoter"&gt;Dekoter&lt;/a&gt; - &lt;code&gt;NSCoding&lt;/code&gt;'s counterpart for Swift structs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/swift-algorithm-club"&gt;swift-algorithm-club&lt;/a&gt; - Algorithms and data structures in Swift, with explanations!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/david-coyle-sjc/impeller"&gt;Impeller&lt;/a&gt; - A Distributed Value Store in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexdrone/Store"&gt;Dispatch&lt;/a&gt; - Multi-store Flux implementation in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/DeepDiff"&gt;DeepDiff&lt;/a&gt; - Diff in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonyarnold/Differ"&gt;Differ&lt;/a&gt; - Swift library to generate differences and patches between collections.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/harlanhaskins/Probably"&gt;Probably&lt;/a&gt; - A Swift probability and statistics library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesdouble/RandMyMod"&gt;RandMyMod&lt;/a&gt; - RandMyMod base on your own struct or class create one or a set of randomized instance.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vincent-pradeilles/KeyPathKit"&gt;KeyPathKit&lt;/a&gt; - KeyPathKit provides a seamless syntax to manipulate data using typed keypaths.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Differific"&gt;Differific&lt;/a&gt; - A fast and convenient diffing framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ladeiko/OneWaySynchronizer"&gt;OneWaySynchronizer&lt;/a&gt; - The simplest abstraction to synchronize local data with remote source.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/DifferenceKit"&gt;DifferenceKit&lt;/a&gt; - A fast and flexible O(n) difference algorithm framework for Swift collection.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-date--time" class="anchor" aria-hidden="true" href="#date--time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date &amp;amp; Time&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Time and NSCalendar libraries. Also contains Sunrise and Sunset time generators, time pickers and NSTimer interfaces.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/naoty/Timepiece"&gt;Timepiece&lt;/a&gt; - Intuitive NSDate extensions in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/SwiftDate"&gt;SwiftDate&lt;/a&gt; - The best way to manage Dates and Timezones in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/akosma/SwiftMoment"&gt;SwiftMoment&lt;/a&gt; - A time and calendar manipulation library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatthewYork/DateTools"&gt;DateTools&lt;/a&gt; - Dates and times made easy in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radex/SwiftyTimer"&gt;SwiftyTimer&lt;/a&gt; - Swifty API for NSTimer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/melvitax/DateHelper"&gt;DateHelper&lt;/a&gt; - Convenience extension for NSDate in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boredzo/iso-8601-date-formatter"&gt;iso-8601-date-formatter&lt;/a&gt; - A Cocoa NSFormatter subclass to convert dates to and from ISO-8601-formatted strings. Supports calendar, week, and ordinal formats.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thomaspaulmann/EmojiTimeFormatter"&gt;EmojiTimeFormatter&lt;/a&gt; - Format your dates/times as emojis.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lyft/Kronos"&gt;Kronos&lt;/a&gt; - Elegant NTP date library in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/instacart/TrueTime.swift"&gt;TrueTime&lt;/a&gt; - Get the true current time impervious to device clock time changes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joedaniels29/10Clock"&gt;10Clock&lt;/a&gt; - This Control is a beautiful time-of-day picker heavily inspired by the iOS 10 "Bedtime" timer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kevinlawler/NSDate-TimeAgo"&gt;NSDate-TimeAgo&lt;/a&gt; - A "time ago", "time since", "relative date", or "fuzzy date" category for NSDate and iOS, Objective-C, Cocoa Touch, iPhone, iPad.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kawoou/AnyDate"&gt;AnyDate&lt;/a&gt; - Swifty Date &amp;amp; Time API inspired from Java 8 DateTime API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gligorkot/TimeZonePicker"&gt;TimeZonePicker&lt;/a&gt; - A TimeZonePicker UIViewController similar to the iOS Settings app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dreymonde/Time"&gt;Time&lt;/a&gt; - Type-safe time calculations in Swift, powered by generics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davedelong/Chronology"&gt;Chronology&lt;/a&gt; - Building a better date/time library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ceeK/Solar"&gt;Solar&lt;/a&gt; - A Swift micro library for generating Sunrise and Sunset times.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Endore8/TimePicker"&gt;TimePicker&lt;/a&gt; - Configurable time picker component based on a pan gesture and its velocity.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/awesome-labs/LFTimePicker"&gt;LFTimePicker&lt;/a&gt; - Custom Time Picker ViewController with Selection of start and end times in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/novalagung/nvdate"&gt;NVDate&lt;/a&gt; - Swift4 Date extension library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luoxiu/Schedule"&gt;Schedule&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="hourglass_flowing_sand" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/23f3.png"&gt;⏳&lt;/g-emoji&gt; A missing lightweight task scheduler for Swift with an incredibly human-friendly syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Debugging tools, crash reports, logs and console UI's.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/Xniffer"&gt;Xniffer&lt;/a&gt; - A swift network profiler built on top of URLSession.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kasketis/netfox"&gt;Netfox&lt;/a&gt; - A lightweight, one line setup, iOS / macOS network debugging library!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/PonyDebugger"&gt;PonyDebugger&lt;/a&gt; - Remote network and data debugging for your native iOS app using Chrome Developer Tools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dbukowski/DBDebugToolkit"&gt;DBDebugToolkit&lt;/a&gt; - Set of easy to use debugging tools for iOS developers &amp;amp; QA engineers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Flipboard/FLEX"&gt;Flex&lt;/a&gt; - An in-app debugging and exploration tool for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/chisel"&gt;chisel&lt;/a&gt; - Collection of LLDB commands to assist debugging iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Legoless/Alpha"&gt;Alpha&lt;/a&gt; - Next generation debugging framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEConsole"&gt;AEConsole&lt;/a&gt; - Customizable Console UI overlay with debug log on top of your iOS App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zixun/GodEye"&gt;GodEye&lt;/a&gt; - Automatically display Log,Crash,Network,ANR,Leak,CPU,RAM,FPS,NetFlow,Folder and etc with one line of code based on Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coderyi/NetworkEye"&gt;NetworkEye&lt;/a&gt; - a iOS network debug library, It can monitor HTTP requests within the App and displays information related to the request.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/remirobert/Dotzu"&gt;Dotzu&lt;/a&gt; - iOS app debugger while using the app. Crash report, logs, network.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/willowtreeapps/Hyperion-iOS"&gt;Hyperion&lt;/a&gt; - In-app design review tool to inspect measurements, attributes, and animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MuShare/Httper-iOS"&gt;Httper-iOS&lt;/a&gt; - App for developers to test REST API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/myriadmobile/Droar"&gt;Droar&lt;/a&gt; - Droar is a modular, single-line installation debugging window.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmusolino/Wormholy"&gt;Wormholy&lt;/a&gt; - iOS network debugging, like a wizard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appspector.com" rel="nofollow"&gt;AppSpector&lt;/a&gt; - Remote iOS and Android debugging and data collection service. You can debug networking, logs, CoreData, SQLite, NSNotificationCenter and mock device's geo location.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.woodpeck.cn" rel="nofollow"&gt;Woodpecker&lt;/a&gt; - View sandbox files, UserDefaults, network request from Mac.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isavynskyi/LayoutInspector"&gt;LayoutInspector&lt;/a&gt; - Debug app layouts directly on iOS device: inspect layers in 3D and debug each visible view attributes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meitu/MTHawkeye"&gt;MTHawkeye&lt;/a&gt; - Profiling / Debugging assist tools for iOS, include tools: UITimeProfiler, Memory Allocations, Living ObjC Objects Sniffer, Network Transaction Waterfall, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-eventbus" class="anchor" aria-hidden="true" href="#eventbus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EventBus&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Promises and Futures libraries to help you write better async code in Swift.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cesarferreira/SwiftEventBus"&gt;SwiftEventBus&lt;/a&gt; - A publish/subscribe event bus optimized for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mxcl/PromiseKit"&gt;PromiseKit&lt;/a&gt; - Promises for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BoltsFramework/Bolts-ObjC"&gt;Bolts&lt;/a&gt; - Bolts is a collection of low-level libraries designed to make developing mobile apps easier, including tasks (promises) and app links (deep links).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactKit/SwiftTask"&gt;SwiftTask&lt;/a&gt; - Promise + progress + pause + cancel + retry for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/When"&gt;When&lt;/a&gt; - A lightweight implementation of Promises in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/then"&gt;then&lt;g-emoji class="g-emoji" alias="clapper" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3ac.png"&gt;🎬&lt;/g-emoji&gt;&lt;/a&gt; - Elegant Async code in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BoltsFramework/Bolts-Swift"&gt;Bolts-Swift&lt;/a&gt; - Bolts is a collection of low-level libraries designed to make developing mobile apps easier.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/deput/RWPromiseKit"&gt;RWPromiseKit&lt;/a&gt; - A light-weighted Promise library for Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/couchdeveloper/FutureLib"&gt;FutureLib&lt;/a&gt; - FutureLib is a pure Swift 2 library implementing Futures &amp;amp; Promises inspired by Scala.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/100mango/SwiftNotificationCenter"&gt;SwiftNotificationCenter&lt;/a&gt; - A Protocol-Oriented NotificationCenter which is type safe, thread safe and with memory safety.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FutureKit/FutureKit"&gt;FutureKit&lt;/a&gt; - A Swift based Future/Promises Library for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uber/signals-ios"&gt;signals-ios&lt;/a&gt; - Typeful eventing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Thomvis/BrightFutures"&gt;BrightFutures&lt;/a&gt; - Write great asynchronous code in Swift using futures and promises.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/NoticeObserveKit"&gt;NoticeObserveKit&lt;/a&gt; - NoticeObserveKit is type-safe NotificationCenter wrapper that associates notice type with info type.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/Hydra"&gt;Hydra&lt;/a&gt; - Promises &amp;amp; Await - Write better async code in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/albertodebortoli/Promis"&gt;Promis&lt;/a&gt; - The easiest Future and Promises framework in Swift. No magic. No boilerplate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AndrewBarba/Bluebird.swift"&gt;Bluebird.swift&lt;/a&gt; - Promise/A+, Bluebird inspired, implementation in Swift 4.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/khanlou/Promise"&gt;Promise&lt;/a&gt; - A Promise library for Swift, based partially on Javascript's A+ spec.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/promises"&gt;promises&lt;/a&gt; - Google provides a synchronization construct for Objective-C and Swift to facilitate writing asynchronous code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/Continuum"&gt;Continuum&lt;/a&gt; - NotificationCenter based Lightweight UI / AnyObject binder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/formbound/Futures"&gt;Futures&lt;/a&gt; - Lightweight promises for iOS, macOS, tvOS, watchOS, and server-side Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DimaMishchenko/EasyFutures"&gt;EasyFutures&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; Swift Futures &amp;amp; Promises. Easy to use. Highly combinable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mcmatan/topicEventBus"&gt;TopicEventBus&lt;/a&gt; - Publish–subscribe design pattern implementation framework, with ability to publish events by topic. (NotificationCenter extended alternative).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-files" class="anchor" aria-hidden="true" href="#files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Files&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;File management, file browser, zip handling and file observers.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/FileKit"&gt;FileKit&lt;/a&gt; - Simple and expressive file management in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Zip"&gt;Zip&lt;/a&gt; - Swift framework for zipping and unzipping files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/FileBrowser"&gt;FileBrowser&lt;/a&gt; - Powerful Swift file browser for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/indragiek/Ares"&gt;Ares&lt;/a&gt; - Zero-setup P2P file transfer between Macs and iOS devices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amosavian/FileProvider"&gt;FileProvider&lt;/a&gt; - FileManager replacement for Local, iCloud and Remote (WebDAV/FTP/Dropbox/OneDrive/SMB2) files on iOS/tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/KZFileWatchers"&gt;KZFileWatchers&lt;/a&gt; - A micro-framework for observing file changes, both local and remote. Helpful in building developer tools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZipArchive/ZipArchive"&gt;ZipArchive&lt;/a&gt; - ZipArchive is a simple utility class for zipping and unzipping files on iOS and Mac.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Augustyniak/FileExplorer"&gt;FileExplorer&lt;/a&gt; - Powerful file browser for iOS that allows its users to choose and remove files and/or directories.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/weichsel/ZIPFoundation"&gt;ZIPFoundation&lt;/a&gt; - Effortless ZIP Handling in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dreymonde/AppFolder"&gt;AppFolder&lt;/a&gt; - AppFolder is a lightweight framework that lets you design a friendly, strongly-typed representation of a directories inside your app's container.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pixelglow/ZipZap"&gt;ZipZap&lt;/a&gt; - zip file I/O library for iOS, macOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amosavian/AMSMB2"&gt;AMSMB2&lt;/a&gt; - Swift framework to connect SMB 2/3 shares for iOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-functional-programming" class="anchor" aria-hidden="true" href="#functional-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functional Programming&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Collection of Swift functional programming tools.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ulrikdamm/Forbind"&gt;Forbind&lt;/a&gt; - Functional chaining and promises in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brynbellomy/Funky"&gt;Funky&lt;/a&gt; - Functional programming tools and experiments in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LlamaKit/LlamaKit"&gt;LlamaKit&lt;/a&gt; - Collection of must-have functional Swift tools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tptee/Oriole"&gt;Oriole&lt;/a&gt; - A functional utility belt implemented as Swift protocol extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robrix/Prelude"&gt;Prelude&lt;/a&gt; - Swift µframework of simple functional programming tools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/Swiftx"&gt;Swiftx&lt;/a&gt; - Functional data types and functions for any project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/Swiftz"&gt;Swiftz&lt;/a&gt; -  Functional programming in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RuiAAPeres/OptionalExtensions"&gt;OptionalExtensions&lt;/a&gt; - Swift µframework with extensions for the  Optional Type.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Argo"&gt;Argo&lt;/a&gt; - Functional JSON parsing library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Runes"&gt;Runes&lt;/a&gt; - Infix operators for monadic functions in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bow-swift/bow"&gt;Bow&lt;/a&gt; - Typed Functional Programming companion library for Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-games" class="anchor" aria-hidden="true" href="#games"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Games&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/Sage"&gt;Sage&lt;/a&gt; - A cross-platform chess library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/codelynx/ShogibanKit"&gt;ShogibanKit&lt;/a&gt; - ShogibanKit is a framework for implementing complex Japanese Chess (Shogii) in Swift. No UI, nor AI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mfessenden/SKTiled"&gt;SKTiled&lt;/a&gt; - Swift framework for working with Tiled assets in SpriteKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bwide/CollectionNode"&gt;CollectionNode&lt;/a&gt; - A swift framework for a collectionView in SpriteKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugenebokhan/AssetImportKit"&gt;AssetImportKit&lt;/a&gt; - Swifty cross platform library (macOS, iOS) that converts Assimp supported models to SceneKit scenes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cocoatoucher/Glide"&gt;glide engine&lt;/a&gt; - SpriteKit and GameplayKit based engine for making 2d games, with practical examples and tutorials.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-gcd" class="anchor" aria-hidden="true" href="#gcd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GCD&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Grand Central Dispatch syntax sugars, tools and timers.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnEstropia/GCDKit"&gt;GCDKit&lt;/a&gt; - Grand Central Dispatch simplified with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/duemunk/Async"&gt;Async&lt;/a&gt; - Syntactic sugar in Swift for asynchronous dispatches in Grand Central Dispatch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nodes-ios/SwiftSafe"&gt;SwiftSafe&lt;/a&gt; - Thread synchronization made easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYDispatchQueuePool"&gt;YYDispatchQueuePool&lt;/a&gt; - iOS utility class to manage global dispatch queue.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alecrim/AlecrimAsyncKit"&gt;AlecrimAsyncKit&lt;/a&gt; - Bringing async and await to Swift world with some flavouring.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/GrandSugarDispatch"&gt;GrandSugarDispatch&lt;/a&gt; - Syntactic sugar for Grand Central Dispatch (GCD).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mitchtreece/Threader"&gt;Threader&lt;/a&gt; - Pretty GCD calls and easier code execution.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JARMourato/Dispatch"&gt;Dispatch&lt;/a&gt; - Just a tiny library to make using GCD easier and intuitive.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemantasapkota/GCDTimer"&gt;GCDTimer&lt;/a&gt; - Well tested Grand Central Dispatch (GCD) Timer in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/comyar/Chronos-Swift"&gt;Chronos-Swift&lt;/a&gt; - Grand Central Dispatch Utilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pascalbros/Me"&gt;Me&lt;/a&gt; - A super slim solution to the nested asynchronous computations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Albinzr/SwiftyTask"&gt;SwiftyTask&lt;/a&gt; - An extreme queuing system with high performance for managing all task in app with closure.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-gesture" class="anchor" aria-hidden="true" href="#gesture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gesture&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Libraries and tools to handle gestures.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/Tactile"&gt;Tactile&lt;/a&gt; - A better way to handle gestures on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/b3ll/SwiftyGestureRecognition"&gt;SwiftyGestureRecognition&lt;/a&gt; - Aids with prototyping UIGestureRecognizers in Xcode Playgrounds.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/didierbrun/DBPathRecognizer"&gt;DBPathRecognizer&lt;/a&gt; - Gesture recognizer tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/igormatyushkin014/Sensitive"&gt;Sensitive&lt;/a&gt; - Fresh look at work with gestures in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MarioIannotta/SplitViewDragAndDrop"&gt;SplitViewDragAndDrop&lt;/a&gt; - Easily add drag and drop to pass data between your apps in split view mode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/forkingdog/FDFullscreenPopGesture"&gt;FDFullscreenPopGesture&lt;/a&gt; - An UINavigationController's category to enable fullscreen pop gesture in an iOS7+ system style with AOP.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-graphics" class="anchor" aria-hidden="true" href="#graphics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graphics&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;CoreGraphics, CoreAnimation, SVG, CGContext libraries, helpers and tools.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Graphicz"&gt;Graphicz&lt;/a&gt; - Light-weight, operator-overloading-free complements to CoreGraphics!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pkluz/PKCoreTechniques"&gt;PKCoreTechniques&lt;/a&gt; - The code for my CoreGraphics+CoreAnimation talk, held during the 2012 iOS Game Design Seminar at the Technical University Munich.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mpw/MPWDrawingContext"&gt;MPWDrawingContext&lt;/a&gt; - An Objective-C wrapper for CoreGraphics CGContext.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davidcairns/DePict"&gt;DePict&lt;/a&gt; - A simple, declarative, functional drawing framework, in Swift!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mchoe/SwiftSVG"&gt;SwiftSVG&lt;/a&gt; -  A single pass SVG parser with multiple interface options (String, NS/UIBezierPath, CAShapeLayer, and NS/UIView).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shaps80/InkKit"&gt;InkKit&lt;/a&gt; - Write-Once, Draw-Everywhere for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYAsyncLayer"&gt;YYAsyncLayer&lt;/a&gt; - iOS utility classes for asynchronous rendering and display.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nicejinux/NXDrawKit"&gt;NXDrawKit&lt;/a&gt; - NXDrawKit is a simple and easy but useful drawing kit for iPhone.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IFTTT/jot"&gt;jot&lt;/a&gt; - An iOS framework for easily adding drawings and text to images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SVGKit/SVGKit"&gt;SVGKit&lt;/a&gt; - Display and interact with SVG Images on iOS / macOS, using native rendering (CoreAnimation) (currently only supported for iOS - macOS code needs updating).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Snowflake"&gt;Snowflake&lt;/a&gt; - SVG in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/victorgama/HxSTLParser"&gt;HxSTLParser&lt;/a&gt; - Basic STL loader for SceneKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/natmark/ProcessingKit"&gt;ProcessingKit&lt;/a&gt; - Visual designing library for iOS &amp;amp; OSX.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shashankpali/EZYGradientView"&gt;EZYGradientView&lt;/a&gt; - Create gradients and blur gradients without a single line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEConicalGradient"&gt;AEConicalGradient&lt;/a&gt; - Conical (angular) gradient layer written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxkonovalov/MKGradientView"&gt;MKGradientView&lt;/a&gt; - Core Graphics based gradient view capable of producing Linear (Axial), Radial (Circular), Conical (Angular), Bilinear (Four Point) gradients, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ipraba/EPShapes"&gt;EPShapes&lt;/a&gt; - Design shapes in Interface Builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/macaw"&gt;Macaw&lt;/a&gt; - Powerful and easy-to-use vector graphics library with SVG support written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boilertalk/BlockiesSwift"&gt;BlockiesSwift&lt;/a&gt; - Unique blocky identicons/profile picture generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bakhtiyork/Rough"&gt;Rough&lt;/a&gt; - lets you draw in a sketchy, hand-drawn-like, style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bakhtiyork/GraphLayout"&gt;GraphLayout&lt;/a&gt; - UI controls for graph visualization. It is powered by Graphviz.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Asana/Drawsana"&gt;Drawsana&lt;/a&gt; - iOS framework for building raster drawing and image markup views.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-hardware" class="anchor" aria-hidden="true" href="#hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hardware&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-bluetooth" class="anchor" aria-hidden="true" href="#bluetooth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bluetooth&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Libraries to deal with nearby devices, BLE tools and MultipeerConnectivity wrappers.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/omergul/Discovery"&gt;Discovery&lt;/a&gt; - A very simple library to discover and retrieve data from nearby devices (even if the peer app works at background).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LGBluetooth/LGBluetooth"&gt;LGBluetooth&lt;/a&gt; - Simple, block-based, lightweight library over CoreBluetooth. Will clean up your Core Bluetooth related code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpsim/PeerKit"&gt;PeerKit&lt;/a&gt; An open-source Swift framework for building event-driven, zero-config Multipeer Connectivity apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rhummelmose/BluetoothKit"&gt;BluetoothKit&lt;/a&gt; - Easily communicate between iOS/macOS devices using BLE.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/e-sites/Bluetonium"&gt;Bluetonium&lt;/a&gt; - Bluetooth mapping in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/troystribling/BlueCap"&gt;BlueCap&lt;/a&gt; - iOS Bluetooth LE framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kirankunigiri/Apple-Family"&gt;Apple Family&lt;/a&gt; - Quickly connect Apple devices together with Bluetooth, wifi, and USB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/1amageek/Bleu"&gt;Bleu&lt;/a&gt; - BLE (Bluetooth LE) for U.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/steamclock/bluejay"&gt;Bluejay&lt;/a&gt; - A simple Swift framework for building reliable Bluetooth LE apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coolnameismy/BabyBluetooth"&gt;BabyBluetooth&lt;/a&gt; - The easiest way to use Bluetooth (BLE) in iOS/MacOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AntonTheDev/ExtendaBLE"&gt;ExtendaBLE&lt;/a&gt; - Simple Blocks-Based BLE Client for iOS/tvOS/watchOS/OSX/Android. Quickly configuration for centrals/peripherals, perform packet based read/write operations, and callbacks for characteristic updates.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rchatham/PeerConnectivity"&gt;PeerConnectivity&lt;/a&gt; - Functional wrapper for Apple's MultipeerConnectivity framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AfrozZaheer/AZPeerToPeerConnection"&gt;AZPeerToPeerConnection&lt;/a&gt; - AZPeerToPeerConnectivity is a wrapper on top of Apple iOS Multipeer Connectivity framework. It provides an easier way to create and manage sessions. Easy to integrate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dingwilson/MultiPeer"&gt;MultiPeer&lt;/a&gt; - Multipeer is a wrapper for Apple's MultipeerConnectivity framework for offline data transmission between Apple devices. It makes easy to automatically connect to multiple nearby devices and share information using either bluetooth or wifi.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-camera" class="anchor" aria-hidden="true" href="#camera"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Camera&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Mocks, ImagePickers, and multiple options of customizable camera implementation&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tdginternet/TGCameraViewController"&gt;TGCameraViewController&lt;/a&gt; - Custom camera with AVFoundation. Beautiful, light and easy to integrate with iOS projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piemonte/PBJVision"&gt;PBJVision&lt;/a&gt; - iOS camera engine, features touch-to-record video, slow motion video, and photo capture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GabrielAlva/Cool-iOS-Camera"&gt;Cool-iOS-Camera&lt;/a&gt; - A fully customisable and modern camera implementation for iOS made with AVFoundation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rFlex/SCRecorder"&gt;SCRecorder&lt;/a&gt; - Camera engine with Vine-like tap to record, animatable filters, slow motion, segments editing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexLittlejohn/ALCameraViewController"&gt;ALCameraViewController&lt;/a&gt; - A camera view controller with custom image picker and image cropping. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imaginary-cloud/CameraManager"&gt;CameraManager&lt;/a&gt; - Simple Swift class to provide all the configurations you need to create custom camera view in your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yeahdongcn/RSBarcodes_Swift"&gt;RSBarcodes_Swift&lt;/a&gt; - 1D and 2D barcodes reader and generators for iOS 8 with delightful controls. Now Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/omergul/LLSimpleCamera"&gt;LLSimpleCamera&lt;/a&gt; - A simple, customizable camera control - video recorder for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ytakzk/Fusuma"&gt;Fusuma&lt;/a&gt; - Instagram-like photo browser and a camera feature with a few line of code in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/BarcodeScanner"&gt;BarcodeScanner&lt;/a&gt; - Simple and beautiful barcode scanner.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HorizonCamera/HorizonSDK-iOS"&gt;HorizonSDK-iOS&lt;/a&gt; - State of the art real-time video recording / photo shooting iOS library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IFTTT/FastttCamera"&gt;FastttCamera&lt;/a&gt; - Fasttt and easy camera framework for iOS with customizable filters.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zhangao0086/DKCamera"&gt;DKCamera&lt;/a&gt; - A lightweight &amp;amp; simple camera framework for iOS. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NextLevel/NextLevel"&gt;NextLevel&lt;/a&gt; - Next Level is a media capture camera library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/remirobert/CameraEngine"&gt;CameraEngine&lt;/a&gt; - Camera engine for iOS, written in Swift, above AVFoundation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Awalz/SwiftyCam"&gt;SwiftyCam&lt;/a&gt; -  A Snapchat Inspired iOS Camera Framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/CameraBackground"&gt;CameraBackground&lt;/a&gt; -  Show camera layer as a background to any UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dokun1/Lumina"&gt;Lumina&lt;/a&gt; - Full service camera that takes photos, videos, streams frames, detects metadata, and streams CoreML predictions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rallahaseh/RAImagePicker"&gt;RAImagePicker&lt;/a&gt; - RAImagePicker is a protocol-oriented framework that provides custom features from the built-in Image Picker Edit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fulldecent/FDTake"&gt;FDTake&lt;/a&gt; - Easily take a photo or video or choose from library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yummypets/YPImagePicker"&gt;YPImagePicker&lt;/a&gt; - Instagram-like image picker &amp;amp; filters for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MockImagePicker"&gt;MockImagePicker&lt;/a&gt; - Mock UIImagePickerController for testing camera based UI in simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shu223/iOS-Depth-Sampler"&gt;iOS-Depth-Sampler&lt;/a&gt; - A collection of code examples for Depth APIs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/TakeASelfie"&gt;TakeASelfie&lt;/a&gt; - An iOS framework that uses the front camera, detects your face and takes a selfie.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eonist/HybridCamera"&gt;HybridCamera&lt;/a&gt; - Video and photo camera for iOS, similar to the SnapChat camera.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CameraKit/camerakit-ios"&gt;CameraKit-iOS&lt;/a&gt; - Massively increase camera performance and ease of use in your next iOS project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-force-touch" class="anchor" aria-hidden="true" href="#force-touch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Force Touch&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Quick actions and peek and pop interactions&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ricardopereira/QuickActions"&gt;QuickActions&lt;/a&gt; - Swift wrapper for iOS Home Screen Quick Actions (App Icon Shortcuts).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/justeat/JustPeek"&gt;JustPeek&lt;/a&gt; - JustPeek is an iOS Library that adds support for Force Touch-like Peek and Pop interactions on devices that do not natively support this kind of interaction.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/itsmeichigo/PeekView"&gt;PeekView&lt;/a&gt; - PeekView supports peek, pop and preview actions for iOS devices without 3D Touch capibility.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ibeacon" class="anchor" aria-hidden="true" href="#ibeacon"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iBeacon&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Device detect libraries and iBeacon helpers&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Proxitee/iOS-SDK"&gt;Proxitee&lt;/a&gt; - Allows developers to create proximity aware applications utilizing iBeacons &amp;amp; geo fences.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ohayon/OWUProximityManager"&gt;OWUProximityManager&lt;/a&gt; - iBeacons + CoreBluetooth.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Instrument/Vicinity"&gt;Vicinity&lt;/a&gt; - Vicinity replicates iBeacons (by analyzing RSSI) and supports broadcasting and detecting low-energy Bluetooth devices in the background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lgaches/BeaconEmitter"&gt;BeaconEmitter&lt;/a&gt; - Turn your Mac as an iBeacon.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mocaplatform.com/features" rel="nofollow"&gt;MOCA Proximity&lt;/a&gt; - Paid proximity marketing platform that lets you add amazing proximity  experiences to your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/izotx/JMCBeaconManager"&gt;JMCBeaconManager&lt;/a&gt; - An iBeacon Manager class that is responsible for detecting beacons nearby.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-location" class="anchor" aria-hidden="true" href="#location"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Location&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Location monitoring, detect motion and geofencing libraries&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IngeoSDK/ingeo-ios-sdk"&gt;IngeoSDK&lt;/a&gt; - Always-On Location monitoring framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intuit/LocationManager"&gt;LocationManager&lt;/a&gt; - Provides a block-based asynchronous API to request the current location, either once or continuously.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/SwiftLocation"&gt;SwiftLocation&lt;/a&gt; - Location &amp;amp; Beacon Monitoring in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturdev/SOMotionDetector"&gt;SOMotionDetector&lt;/a&gt; - Simple library to detect motion. Based on location updates and acceleration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZhuoranTan/LocationPicker"&gt;LocationPicker&lt;/a&gt; - A ready for use and fully customizable location picker for your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benzamin/BBLocationManager"&gt;BBLocationManager&lt;/a&gt; - A Location Manager for easily implementing location services &amp;amp; geofencing in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lyft/set-simulator-location"&gt;set-simulator-location&lt;/a&gt; - CLI for setting location in the iOS simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/caloon/NominatimKit"&gt;NominatimKit&lt;/a&gt; - A Swift wrapper for (reverse) geocoding of OpenStreetMap data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-hardware" class="anchor" aria-hidden="true" href="#other-hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Hardware&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MHaroonBaig/MotionKit"&gt;MotionKit&lt;/a&gt; - Get the data from Accelerometer, Gyroscope and Magnetometer in only Two or a few lines of code. CoreMotion now made insanely simple.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jensmeder/DarkLightning"&gt;DarkLightning&lt;/a&gt; - Simply the fastest way to transmit data between iOS/tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrealufino/Deviice"&gt;Deviice&lt;/a&gt; - Simply library to detect the device on which the app is running (and some properties).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devicekit/DeviceKit"&gt;DeviceKit&lt;/a&gt; - DeviceKit is a value-type replacement of UIDevice.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrealufino/Luminous"&gt;Luminous&lt;/a&gt; - Luminous is a big framework which can give you a lot of information (more than 50) about the current system.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ekhoo/Device"&gt;Device&lt;/a&gt; - Light weight tool for detecting the current device and screen size written in swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ezefranca/WatchShaker"&gt;WatchShaker&lt;/a&gt; - WatchShaker is a watchOS helper to get your shake movement written in swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/WatchCon"&gt;WatchCon&lt;/a&gt; - WatchCon is a tool which enables creating easy connectivity between iOS and WatchOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WorldDownTown/TapticEngine"&gt;TapticEngine&lt;/a&gt; - TapticEngine generates iOS Device vibrations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/UIDeviceComplete"&gt;UIDeviceComplete&lt;/a&gt; - UIDevice extensions that fill in the missing pieces.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jvk75/NFCNDEFParse"&gt;NFCNDEFParse&lt;/a&gt; - NFC Forum Well Known Type Data Parser for iOS11 and Core NFC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schickling/Device.swift"&gt;Device.swift&lt;/a&gt; - Super-lightweight library to detect used device.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sebyddd/SDVersion"&gt;SDVersion&lt;/a&gt; - Lightweight Cocoa library for detecting the running device's model and screen size.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iSapozhnik/Haptico"&gt;Haptico&lt;/a&gt; - Easy to use haptic feedback generator with pattern-play support.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-layout" class="anchor" aria-hidden="true" href="#layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Layout&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Auto Layout, UI frameworks and a gorgeous list of tools to simplify layout constructions&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SnapKit/Masonry"&gt;Masonry&lt;/a&gt; - Harness the power of AutoLayout NSLayoutConstraints with a simplified, chainable and expressive syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/floriankugler/FLKAutoLayout"&gt;FLKAutoLayout&lt;/a&gt; - UIView category which makes it easy to create layout constraints in code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mamaral/Facade"&gt;Façade&lt;/a&gt; - Programmatic view layout for the rest of us - an autolayout alternative.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PureLayout/PureLayout"&gt;PureLayout&lt;/a&gt; - The ultimate API for iOS &amp;amp; macOS Auto Layout — impressively simple, immensely powerful. Objective-C and Swift compatible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SnapKit/SnapKit"&gt;SnapKit&lt;/a&gt; - A Swift Autolayout DSL for iOS &amp;amp; macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robb/Cartography"&gt;Cartography&lt;/a&gt; - A declarative Auto Layout DSL for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruipfcosta/AutoLayoutPlus"&gt;AutoLayoutPlus&lt;/a&gt; - A bit of steroids for AutoLayout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mamaral/Neon"&gt;Neon&lt;/a&gt; - A powerful Swift programmatic UI layout framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/MisterFusion"&gt;MisterFusion&lt;/a&gt; - A Swift DSL for AutoLayout. It is the extremely clear, but concise syntax, in addition, can be used in both Swift and Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joshaber/SwiftBox"&gt;SwiftBox&lt;/a&gt; - Flexbox in Swift, using Facebook's css-layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isair/ManualLayout"&gt;ManualLayout&lt;/a&gt; - Easy to use and flexible library for manually laying out views and layers for iOS and tvOS. Supports AsyncDisplayKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/Stevia"&gt;Stevia&lt;/a&gt; - Elegant view layout for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/floriankrueger/Manuscript"&gt;Manuscript&lt;/a&gt; - AutoLayoutKit in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/forkingdog/UITableView-FDTemplateLayoutCell"&gt;FDTemplateLayoutCell&lt;/a&gt; - Template auto layout cell for automatically UITableViewCell height calculating.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/indragiek/SwiftAutoLayout"&gt;SwiftAutoLayout&lt;/a&gt; - Tiny Swift DSL for Autolayout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evan-liu/FormationLayout"&gt;FormationLayout&lt;/a&gt; - Work with auto layout and size classes easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fhisa/SwiftyLayout"&gt;SwiftyLayout&lt;/a&gt; - Lightweight declarative auto-layout framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Skyvive/Swiftstraints"&gt;Swiftstraints&lt;/a&gt; - Auto Layout In Swift Made Easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeclarativeHub/Bond"&gt;SwiftBond&lt;/a&gt; - Bond is a Swift binding framework that takes binding concepts to a whole new level. It's simple, powerful, type-safe and multi-paradigm.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/puffinsupply/Restraint"&gt;Restraint&lt;/a&gt; - Minimal Auto Layout in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nakiostudio/EasyPeasy"&gt;EasyPeasy&lt;/a&gt; - Auto Layout made easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://akordadev.github.io/AutoLayoutMagic/" rel="nofollow"&gt;Auto Layout Magic&lt;/a&gt; - Build 1 scene, let Auto Layout Magic generate the  constraints for you!  Scenes look great across all devices!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mergesort/Anchorman"&gt;Anchorman&lt;/a&gt; - An autolayout library for the damn fine citizens of San Diego.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linkedin/LayoutKit"&gt;LayoutKit&lt;/a&gt; - LayoutKit is a fast view layout library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stevestreza/Relayout"&gt;Relayout&lt;/a&gt; - Swift microframework for declaring Auto Layout constraints functionally.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rightpoint/Anchorage"&gt;Anchorage&lt;/a&gt; - A collection of operators and utilities that simplify iOS layout code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grupozap/Compose"&gt;Compose&lt;/a&gt; - Compose is a library that helps you compose complex and dynamic views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wayfair/brickkit-ios"&gt;BrickKit&lt;/a&gt; - With BrickKit, you can create complex and responsive layouts in a simple way. It's easy to use and easy to extend. Create your own reusable bricks and behaviors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Otbivnoe/Framezilla"&gt;Framezilla&lt;/a&gt; - Elegant library which wraps working with frames with a nice chaining syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/TinyConstraints"&gt;TinyConstraints&lt;/a&gt; -  The syntactic sugar that makes Auto Layout sweeter for human use.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/youngsoft/MyLinearLayout"&gt;MyLinearLayout&lt;/a&gt; - MyLayout is a powerful iOS UI framework implemented by Objective-C. It integrates the functions with Android Layout,iOS AutoLayout,SizeClass, HTML CSS float and flexbox and bootstrap.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashikahmad/SugarAnchor"&gt;SugarAnchor&lt;/a&gt; - Same native NSLayoutAnchor &amp;amp; NSLayoutConstraints; but with more natural and easy to read syntactic sugar. Typesafe, concise &amp;amp; readable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Anchors"&gt;Anchors&lt;/a&gt; - Declarative, extensible, powerful Auto Layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/layoutBox/PinLayout"&gt;PinLayout&lt;/a&gt; - Fast Swift Views layouting without auto layout. No magic, pure code, full control and blazing fast. Concise syntax, intuitive, readable &amp;amp; chainable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sp71/SnapLayout"&gt;SnapLayout&lt;/a&gt; - Concise Auto Layout API to chain programmatic constraints while easily updating existing constraints.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nerdycat/Cupcake"&gt;Cupcake&lt;/a&gt; - An easy way to create and layout UI components for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MiniLayout"&gt;MiniLayout&lt;/a&gt; - Minimal AutoLayout convenience layer. Program constraints succinctly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wordlessj/Bamboo"&gt;Bamboo&lt;/a&gt; - Bamboo makes Auto Layout (and manual layout) elegant and concise.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/layoutBox/FlexLayout"&gt;FlexLayout&lt;/a&gt; - FlexLayout gently wraps the highly optimized &lt;a href="https://github.com/facebook/yoga"&gt;facebook/yoga&lt;/a&gt; flexbox implementation in a concise, intuitive &amp;amp; chainable syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/layout"&gt;Layout&lt;/a&gt; - A declarative UI framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k-o-d-e-n/CGLayout"&gt;CGLayout&lt;/a&gt; - Powerful autolayout framework based on constraints, that can manage UIView(NSView), CALayer and not rendered views. Not Apple Autolayout wrapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/yoga/tree/master/YogaKit"&gt;YogaKit&lt;/a&gt; - Powerful layout engine which implements Flexbox.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AntonTheDev/FlightLayout"&gt;FlightLayout&lt;/a&gt; -  Balanced medium between manual layout and auto-layout. Great for calculating frames for complex animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josejuanqm/QLayout"&gt;QLayout&lt;/a&gt; - AutoLayout Utility for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeclarativeHub/Layoutless"&gt;Layoutless&lt;/a&gt; - Minimalistic declarative layout and styling framework built on top of Auto Layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kean/Align"&gt;Yalta&lt;/a&gt; - An intuitive and powerful Auto Layout library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lionheart/SuperLayout"&gt;SuperLayout&lt;/a&gt; - Simplify Auto Layout with super syntactic sugar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huri000/QuickLayout"&gt;QuickLayout&lt;/a&gt; - QuickLayout offers a simple way, to easily manage Auto Layout in code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efekanegeli/EEStackLayout"&gt;EEStackLayout&lt;/a&gt; - A structured vertical stack layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daskioff/RKAutoLayout"&gt;RKAutoLayout&lt;/a&gt; - Simple wrapper over AutoLayout.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-localization" class="anchor" aria-hidden="true" href="#localization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Localization&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Tools to manage strings files, translate and enable localization in your apps.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Aufree/Hodor"&gt;Hodor&lt;/a&gt; - Simple solution to localize your iOS App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomkowz/Swifternalization"&gt;Swifternalization&lt;/a&gt; - Localize iOS apps in a smarter way using JSON files. Swift framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dcordero/Rubustrings"&gt;Rubustrings&lt;/a&gt; - Check the format and consistency of Localizable.strings files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Flinesoft/BartyCrouch"&gt;BartyCrouch&lt;/a&gt; - Incrementally update/translate your Strings files from Code and Storyboards/XIBs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/willpowell8/LocalizationKit_iOS"&gt;LocalizationKit&lt;/a&gt; - Localization management in realtime from a web portal. Easily manage your texts and translations without redeploy and resubmission.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Localize-Swift"&gt;Localize-Swift&lt;/a&gt; - Swift 2.0 friendly localization and i18n with in-app language switching.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/darkcl/LocalizedView"&gt;LocalizedView&lt;/a&gt; - Setting up application specific localized string within Xib file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Jintin/transai"&gt;transai&lt;/a&gt; - command line tool help you manage localization string files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metasmile/strsync"&gt;Strsync&lt;/a&gt; - Automatically translate and synchronize .strings files from base language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PiXeL16/IBLocalizable"&gt;IBLocalizable&lt;/a&gt; - Localize your views directly in Interface Builder with IBLocalizable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/samdmarshall/nslocalizer"&gt;nslocalizer&lt;/a&gt; - A tool for finding missing and unused NSLocalizedStrings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Decybel07/L10n-swift"&gt;L10n-swift&lt;/a&gt; - Localization of an application with ability to change language "on the fly" and support for plural forms in any language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andresilvagomez/Localize"&gt;Localize&lt;/a&gt; - Easy tool to localize apps using JSON or Strings and of course IBDesignables with extensions for UI components.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-logging" class="anchor" aria-hidden="true" href="#logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Debugging lives here. Logging tools, frameworks, integrations and more.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emaloney/CleanroomLogger"&gt;CleanroomLogger&lt;/a&gt; - A configurable and extensible Swift-based logging API that is simple, lightweight and performant.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CocoaLumberjack/CocoaLumberjack"&gt;CocoaLumberjack&lt;/a&gt; - A fast &amp;amp; simple, yet powerful &amp;amp; flexible logging framework for Mac and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fpillet/NSLogger"&gt;NSLogger&lt;/a&gt; - a high performance logging utility which displays traces emitted by client applications running on macOS, iOS and Android.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/QorumLogs"&gt;QorumLogs&lt;/a&gt; — Swift Logging Utility for Xcode &amp;amp; Google Docs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/Log"&gt;Log&lt;/a&gt; - A logging tool with built-in themes, formatters, and a nice API to define your owns.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Rainbow"&gt;Rainbow&lt;/a&gt; - Delightful console output for Swift developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftyBeaver/SwiftyBeaver"&gt;SwiftyBeaver&lt;/a&gt; - Convenient logging during development and release.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scottrhoyt/SwiftyTextTable"&gt;SwiftyTextTable&lt;/a&gt; - A lightweight tool for generating text tables.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wojteklu/Watchdog"&gt;Watchdog&lt;/a&gt; - Class for logging excessive blocking on the main thread.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DaveWoodCom/XCGLogger"&gt;XCGLogger&lt;/a&gt; - A debug log framework for use in Swift projects. Allows you to log details to the console (and optionally a file), just like you would have with NSLog or println, but with additional information, such as the date, function name, filename and line number.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cookpad/puree-ios"&gt;puree&lt;/a&gt; - A log collector for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icodeforlove/Colors"&gt;Colors&lt;/a&gt; - A pure Swift library for using ANSI codes. Basically makes command-line coloring and styling very easy!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/honghaoz/Loggerithm"&gt;Loggerithm&lt;/a&gt; - A lightweight Swift logger, uses &lt;code&gt;print&lt;/code&gt; in development and &lt;code&gt;NSLog&lt;/code&gt; in production. Support colourful and formatted output.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AELog"&gt;AELog&lt;/a&gt; - Simple, lightweight and flexible debug logging framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattcomi/ReflectedStringConvertible"&gt;ReflectedStringConvertible&lt;/a&gt; - A protocol that allows any class to be printed as if it were a struct.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nilsleiffischer/Evergreen"&gt;Evergreen&lt;/a&gt; - Most natural Swift logging.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnno1962/SwiftTrace"&gt;SwiftTrace&lt;/a&gt; - Trace Swift and Objective-C method invocations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nike-Inc/Willow"&gt;Willow&lt;/a&gt; - Willow is a powerful, yet lightweight logging library written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bugfender/BugfenderSDK-iOS"&gt;Bugfender&lt;/a&gt; - Cloud storage for your app logs. Track user behaviour to find problems in your mobile apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeveloperLx/LxDBAnything"&gt;LxDBAnything&lt;/a&gt; - Automate box any value! Print log without any format control symbol! Change debug habit thoroughly!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xareelee/XLTestLog"&gt;XLTestLog&lt;/a&gt; - Styling and coloring your XCTest logs on Xcode Console.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisspol/XLFacility"&gt;XLFacility&lt;/a&gt; - Elegant and extensive logging facility for macOS &amp;amp; iOS (includes database, Telnet and HTTP servers).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DrewKiino/Atlantis"&gt;Atlantis&lt;/a&gt; - A powerful input-agnostic swift logging framework made to speed up development with maximum readability.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/drekka/StoryTeller"&gt;StoryTeller&lt;/a&gt; - Taking a completely different approach to logging, Story Teller replacing fixed logging levels in It then uses dynamic expressions to control the logging so you only see what is important.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ubclaunchpad/LumberMill"&gt;LumberMill&lt;/a&gt; - Stupidly simple logging.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cosmo/TinyConsole"&gt;TinyConsole&lt;/a&gt; - A tiny log console to display information while using your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/Lighty"&gt;Lighty&lt;/a&gt; - Easy to use and lightweight logger for iOS, macOS, tvOS, watchOS and Linux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/justeat/JustLog"&gt;JustLog&lt;/a&gt; - Console, file and remote Logstash logging via TCP socket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/ios-twitter-logging-service"&gt;Twitter Logging Service&lt;/a&gt; - Twitter Logging Service is a robust and performant logging framework for iOS clients.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AckeeCZ/Reqres"&gt;Reqres&lt;/a&gt; - Network request and response body logger with Alamofire support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonystone/tracelog"&gt;TraceLog&lt;/a&gt; - Dead Simple: logging the way it's meant to be! Runs on ios, osx, and Linux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/diegotl/OkLog-Swift"&gt;OkLog&lt;/a&gt; - A network logger for iOS and macOS projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-machine-learning" class="anchor" aria-hidden="true" href="#machine-learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Machine Learning&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;A collection of ML Models, deep learning and neural networking libraries&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vlall/Swift-Brain"&gt;Swift-Brain&lt;/a&gt; - Artificial Intelligence/Machine Learning data structures and Swift algorithms for future iOS development. Bayes theorem, Neural Networks, and more AI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KevinCoble/AIToolbox"&gt;AIToolbox&lt;/a&gt; - A toolbox of AI modules written in Swift: Graphs/Trees, Linear Regression, Support Vector Machines, Neural Networks, PCA, KMeans, Genetic Algorithms, MDP, Mixture of Gaussians.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/ios"&gt;Tensorflow-iOS&lt;/a&gt; - The official Google-built powerful neural network library port for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/Bender"&gt;Bender&lt;/a&gt; - Easily craft fast Neural Networks. Use TensorFlow models. Metal under the hood.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ytakzk/CoreML-samples"&gt;CoreML-samples&lt;/a&gt; - Sample code for Core ML using ResNet50 provided by Apple and a custom model generated by coremltools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/petrmanek/Revolver"&gt;Revolver&lt;/a&gt; - A framework for building fast genetic algorithms in Swift. Comes with modular architecture, pre-implemented operators and loads of examples.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/likedan/Awesome-CoreML-Models"&gt;CoreML-Models&lt;/a&gt; - A collection of unique Core ML Models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pcpLiu/Serrano"&gt;Serrano&lt;/a&gt; - A deep learning library for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Swift-AI/Swift-AI"&gt;Swift-AI&lt;/a&gt; - The Swift machine learning library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qoncept/TensorSwift"&gt;TensorSwift&lt;/a&gt; - A lightweight library to calculate tensors in Swift, which has similar APIs to TensorFlow's.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-maps" class="anchor" aria-hidden="true" href="#maps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mapbox/mapbox-gl-native"&gt;Mapbox GL&lt;/a&gt; - An OpenGL renderer for Mapbox Vector Tiles with SDK bindings for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GEOSwift/GEOSwift"&gt;GEOSwift&lt;/a&gt; - The Swift Geographic Engine.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/poulpix/PXGoogleDirections"&gt;PXGoogleDirections&lt;/a&gt; - Google Directions API helper for iOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Cluster"&gt;Cluster&lt;/a&gt; - Easy Map Annotation Clustering.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesdouble/JDSwiftHeatMap"&gt;JDSwiftHeatMap&lt;/a&gt; - JDSwiftMap is an IOS Native MapKit Library. You can easily make a highly customized HeatMap.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hulab/ClusterKit"&gt;ClusterKit&lt;/a&gt; - An iOS map clustering framework targeting MapKit, Google Maps and Mapbox.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/FlyoverKit"&gt;FlyoverKit&lt;/a&gt; - FlyoverKit enables you to present stunning 360° flyover views on your MKMapView with zero effort while maintaining full configuration possibilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okhanokbay/MapViewPlus"&gt;MapViewPlus&lt;/a&gt; - Use any custom view as custom callout view of your MKMapView with cool animations. Also, easily use any image as annotation view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mabdulsubhan/MSFlightMapView"&gt;MSFlightMapView&lt;/a&gt; - Add and animate geodesic flights on Google map.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-math" class="anchor" aria-hidden="true" href="#math"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Math&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Math frameworks, functions and libraries to custom operations, statistical calculations and more.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/Euler"&gt;Euler&lt;/a&gt; - Swift Custom Operators for Mathematical Notation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/madbat/SwiftMath"&gt;SwiftMath&lt;/a&gt; - A math framework for Swift. Includes: vectors, matrices, complex numbers, quaternions and polynomials.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phimage/Arithmosophi"&gt;Arithmosophi&lt;/a&gt; - A set of protocols for Arithmetic and Logical operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/Surge"&gt;Surge&lt;/a&gt; - A Swift library that uses the Accelerate framework to provide high-performance functions for matrix math, digital signal processing, and image manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alejandro-isaza/Upsurge"&gt;Upsurge&lt;/a&gt; - Swift math.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rugheid/Swift-MathEagle"&gt;Swift-MathEagle&lt;/a&gt; - A general math framework to make using math easy. Currently supports function solving and optimisation, matrix and vector algebra, complex numbers, big int and big frac and general handy extensions and functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kostub/iosMath"&gt;iosMath&lt;/a&gt; - A library for displaying beautifully rendered math equations. Enables typesetting LaTeX math formulae in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/BigInt"&gt;BigInt&lt;/a&gt; - Arbitrary-precision arithmetic in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/SigmaSwiftStatistics"&gt;SigmaSwiftStatistics&lt;/a&gt; - A collection of functions for statistical calculation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/VectorMath"&gt;VectorMath&lt;/a&gt; - A Swift library for Mac and iOS that implements common 2D and 3D vector and matrix functions, useful for games or vector-based graphics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/Expression"&gt;Expression&lt;/a&gt; - A Mac and iOS library for evaluating numeric expressions at runtime.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/toineheuvelmans/Metron"&gt;Metron&lt;/a&gt; - Metron is a comprehensive collection of geometric functions and types that extend the 2D geometric primitives provided by CoreGraphics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xwu/NumericAnnex"&gt;NumericAnnex&lt;/a&gt; - NumericAnnex supplements the numeric facilities provided in the Swift standard library.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-media" class="anchor" aria-hidden="true" href="#media"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Media&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-audio" class="anchor" aria-hidden="true" href="#audio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Audio&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.audiob.us/" rel="nofollow"&gt;AudioBus&lt;/a&gt; - Add Next Generation Live App-to-App Audio Routing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/audiokit/AudioKit"&gt;AudioKit&lt;/a&gt; - A powerful toolkit for synthesizing, processing, and analyzing sounds.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/syedhali/EZAudio"&gt;EZAudio&lt;/a&gt; - An iOS/macOS audio visualization framework built upon Core Audio useful for anyone doing real-time, low-latency audio processing and visualizations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexbw/novocaine"&gt;novocaine&lt;/a&gt; - Painless high-performance audio on iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quentinhayot/QHSpeechSynthesizerQueue"&gt;QHSpeechSynthesizerQueue&lt;/a&gt; - Queue management system for AVSpeechSynthesizer (iOS Text to Speech).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/Cephalopod"&gt;Cephalopod&lt;/a&gt; - A sound fader for AVAudioPlayer written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trifl/Chirp"&gt;Chirp&lt;/a&gt; - The easiest way to prepare, play, and remove sounds in your Swift app!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/Beethoven"&gt;Beethoven&lt;/a&gt; - An audio processing Swift library for pitch detection of musical signals.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/AudioPlayerSwift"&gt;AudioPlayerSwift&lt;/a&gt; - AudioPlayer is a simple class for playing audio in iOS, macOS and tvOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delannoyk/AudioPlayer"&gt;AudioPlayer&lt;/a&gt; - AudioPlayer is syntax and feature sugar over AVPlayer. It plays your audio files (local &amp;amp; remote).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/comyar/TuningFork"&gt;TuningFork&lt;/a&gt; - Simple Tuner for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benzguo/MusicKit"&gt;MusicKit&lt;/a&gt; - A framework for composing and transforming music in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/SubtleVolume"&gt;SubtleVolume&lt;/a&gt; - Replace the system volume popup with a more subtle indicator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bartolsthoorn/NVDSP"&gt;NVDSP&lt;/a&gt; - iOS/macOS DSP for audio (with Novocaine).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SRGSSR/SRGMediaPlayer-iOS"&gt;SRGMediaPlayer-iOS&lt;/a&gt; - The SRG Media Player library for iOS provides a simple way to add a universal audio / video player to any iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hackiftekhar/IQAudioRecorderController"&gt;IQAudioRecorderController&lt;/a&gt; - A drop-in universal library allows to record audio within the app with a nice User Interface.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TheAmazingAudioEngine/TheAmazingAudioEngine2"&gt;TheAmazingAudioEngine2&lt;/a&gt; - The Amazing Audio Engine is a sophisticated framework for iOS audio applications, built so you don't have to.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AhmettKeskin/InteractivePlayerView"&gt;InteractivePlayerView&lt;/a&gt; - Custom iOS music player view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Aufree/ESTMusicIndicator"&gt;ESTMusicIndicator&lt;/a&gt; - Cool Animated music indicator view written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quiet/QuietModemKit"&gt;QuietModemKit&lt;/a&gt; - iOS framework for the Quiet Modem (data over sound).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adamcichy/SwiftySound"&gt;SwiftySound&lt;/a&gt; - Super simple library that lets you play sounds with a single line of code (and much more). Written in Swift 3, supports iOS, macOS and tvOS. CocoaPods and Carthage compatible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Luccifer/BPM-Analyser"&gt;BPMAnalyser&lt;/a&gt; - Fast and simple instrument to get the BPM rate from your audio-files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AppliKeySolutions/PandoraPlayer"&gt;PandoraPlayer&lt;/a&gt; - A lightweight music player for iOS, based on AudioKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Luccifer/SonogramView"&gt;SonogramView&lt;/a&gt; - Audio visualisation of song.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/AudioIndicatorBars"&gt;AudioIndicatorBars&lt;/a&gt; - AIB indicates for your app users which audio is playing. Just like the Podcasts app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Picovoice/Porcupine"&gt;Porcupine&lt;/a&gt; - On-device wake word detection engine for macOS, iOS, and watchOS, powered by deep learning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/algolia/voice-overlay-ios"&gt;Voice Overlay&lt;/a&gt; - An overlay that gets your user’s voice permission and input as text in a customizable UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/noreasonprojects/ModernAVPlayer"&gt;ModernAVPlayer&lt;/a&gt; - Persistence player to resume playback after bad network connection even in background mode, manage headphone interactions, system interruptions, now playing informations and remote commands.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-gif" class="anchor" aria-hidden="true" href="#gif"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GIF&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/liyong03/YLGIFImage"&gt;YLGIFImage&lt;/a&gt; - Async GIF image decoder and Image viewer supporting play GIF images. It just use very less memory.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Flipboard/FLAnimatedImage"&gt;FLAnimatedImage&lt;/a&gt; - Performant animated GIF engine for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaishin/gifu"&gt;gifu&lt;/a&gt; - Highly performant animated GIF support for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/AnimatedGIFImageSerialization"&gt;AnimatedGIFImageSerialization&lt;/a&gt; - Complete Animated GIF Support for iOS, with Functions, NSJSONSerialization-style Class, and (Optional) UIImage Swizzling&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/khaledmtaha/XAnimatedImage"&gt;XAnimatedImage&lt;/a&gt; - XAnimatedImage is a performant animated GIF engine for iOS written in Swift based on FLAnimatedImage&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swiftgif/SwiftGif"&gt;SwiftGif&lt;/a&gt; - A small UIImage extension with gif support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/APNGKit"&gt;APNGKit&lt;/a&gt; - High performance and delightful way to play with APNG format in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYImage"&gt;YYImage&lt;/a&gt; - Image framework for iOS to display/encode/decode animated WebP, APNG, GIF, and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wangjwchn/AImage"&gt;AImage&lt;/a&gt; - A animated GIF&amp;amp;APNG engine for iOS in Swift with low memory &amp;amp; cpu usage.Optimized for Multi-Image case.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metasmile/NSGIF2"&gt;NSGIF2&lt;/a&gt; - Simplify creation of a GIF from the provided video file url.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kirualex/SwiftyGif"&gt;SwiftyGif&lt;/a&gt; - High performance GIF engine.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-image" class="anchor" aria-hidden="true" href="#image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Image&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BradLarson/GPUImage"&gt;GPU Image&lt;/a&gt; - An open source iOS framework for GPU-based image and video processing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gdawg/uiimage-dsp"&gt;UIImage DSP&lt;/a&gt; - iOS UIImage processing functions using the vDSP/Accelerate framework for speed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/AsyncImageView"&gt;AsyncImageView&lt;/a&gt; - Simple extension of UIImageView for loading and displaying images asynchronously without lock up the UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SDWebImage/SDWebImage"&gt;SDWebImage&lt;/a&gt; - Asynchronous image downloader with cache support with an UIImageView category.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kean/DFImageManager"&gt;DFImageManager&lt;/a&gt; - Modern framework for fetching images from various sources. Zero config yet immense customization and extensibility. Uses NSURLSession.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JanGorman/MapleBacon"&gt;MapleBacon&lt;/a&gt; - An image download and caching library for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NYTimes/NYTPhotoViewer"&gt;NYTPhotoViewer&lt;/a&gt; - Slideshow and image viewer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thiagoperes/IDMPhotoBrowser"&gt;IDMPhotoBrowser&lt;/a&gt; - Photo Browser / Viewer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/contentful-labs/Concorde/"&gt;Concorde&lt;/a&gt; - Download and decode progressive JPEGs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimOliver/TOCropViewController"&gt;TOCropViewController&lt;/a&gt; - A view controller that allows users to crop UIImage objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanton/YXTMotionView"&gt;YXTMotionView&lt;/a&gt; - A custom image view that implements device motion scrolling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pinterest/PINRemoteImage"&gt;PINRemoteImage&lt;/a&gt; - A thread safe, performant, feature rich image fetcher.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/SABlurImageView"&gt;SABlurImageView&lt;/a&gt; - Easily Adding Animated Blur/Unblur Effects To An Image.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/path/FastImageCache"&gt;FastImageCache&lt;/a&gt; - iOS library for quickly displaying images while scrolling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bkoc/BKAsciiImage"&gt;BKAsciiImage&lt;/a&gt; - Convert UIImage to ASCII art.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireImage"&gt;AlamofireImage&lt;/a&gt; - An image component library for Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kean/Nuke"&gt;Nuke&lt;/a&gt; - Image loading, processing, caching and preheating.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/madebybowtie/FlagKit"&gt;FlagKit&lt;/a&gt; - Beautiful flag icons for usage in apps and on the web.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYWebImage"&gt;YYWebImage&lt;/a&gt; - Asynchronous image loading framework (supports WebP, APNG, GIF).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslanskorb/RSKImageCropper"&gt;RSKImageCropper&lt;/a&gt; - An image cropper for iOS like in the Contacts app with support for landscape orientation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josejuanqm/Silo"&gt;Silo&lt;/a&gt; - Image loading framework with loaders.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josejuanqm/Ody"&gt;Ody&lt;/a&gt; - Ody is an easy to use random image generator built with Swift, Perfect for placeholders.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gauravkatoch007/banana"&gt;Banana&lt;/a&gt; - Image slider with very simple interface.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JellyDevelopment/JDSwiftAvatarProgress"&gt;JDSwiftAvatarProgress&lt;/a&gt; - Easy customizable avatar image asynchronously with progress bar animated.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Kingfisher"&gt;Kingfisher&lt;/a&gt; - A lightweight and pure Swift implemented library for downloading and caching image from the web.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EddyBorja/EBPhotoPages"&gt;EBPhotoPages&lt;/a&gt; - A photo gallery for iOS with a modern feature set. Similar features as the Facebook photo browser.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/croath/UIImageView-BetterFace-Swift"&gt;UIImageView-BetterFace-Swift&lt;/a&gt; - The Swift version of &lt;a href="https://github.com/croath/UIImageView-BetterFace"&gt;https://github.com/croath/UIImageView-BetterFace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kiavashfaisali/KFSwiftImageLoader"&gt;KFSwiftImageLoader&lt;/a&gt; - An extremely high-performance, lightweight, and energy-efficient pure Swift async web image loader with memory and disk caching for iOS and Apple Watch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gavinbunney/Toucan"&gt;Toucan&lt;/a&gt; - Fabulous Image Processing in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hirohisa/ImageLoaderSwift"&gt;ImageLoaderSwift&lt;/a&gt; - A lightweight and fast image loader for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaishin/ImageScout"&gt;ImageScout&lt;/a&gt; - A Swift implementation of fastimage. Supports PNG, GIF, and JPEG.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Textcat/JLStickerTextView"&gt;JLStickerTextView&lt;/a&gt; - A UIImageView allow you to add multiple Label (multiple line text support) on it, you can edit, rotate, resize the Label as you want with one finger ,then render the text on Image.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JanGorman/Agrume"&gt;Agrume&lt;/a&gt; - A lemony fresh iOS image viewer written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abiaad/PASImageView"&gt;PASImageView&lt;/a&gt; - Rounded async imageview downloader lightly cached and written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nixzhu/Navi"&gt;Navi&lt;/a&gt; - Focus on avatar caching.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/justinvallely/SwiftPhotoGallery"&gt;SwiftPhotoGallery&lt;/a&gt; - Simple, fullscreen image gallery with tap, swipe, and pinch gestures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wangjwchn/MetalAcc"&gt;MetalAcc&lt;/a&gt; - GPU-based Media processing library using Metal written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mwaterfall/MWPhotoBrowser"&gt;MWPhotoBrowser&lt;/a&gt; - A simple iOS photo and video browser with grid view, captions and selections.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jathu/UIImageColors"&gt;UIImageColors&lt;/a&gt; - iTunes style color fetcher for UIImage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jibeex/CDFlipView"&gt;CDFlipView&lt;/a&gt; - A view that takes a set of images, make transition from one to another by using flipping effects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BradLarson/GPUImage2"&gt;GPUImage2&lt;/a&gt; - GPUImage 2 is a BSD-licensed Swift framework for GPU-accelerated video and image processing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/taglia3/TGLParallaxCarousel"&gt;TGLParallaxCarousel&lt;/a&gt; - A lightweight 3D Linear Carousel with parallax effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dollarshaveclub/ImageButter"&gt;ImageButter&lt;/a&gt; - Makes dealing with images buttery smooth.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suzuki-0000/SKPhotoBrowser"&gt;SKPhotoBrowser&lt;/a&gt; - Simple PhotoBrowser/Viewer inspired by Facebook, Twitter photo browsers written by swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/YuAo/YUCIHighPassSkinSmoothing"&gt;YUCIHighPassSkinSmoothing&lt;/a&gt; - An implementation of High Pass Skin Smoothing using Apple's Core Image Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vinbhai4u/CLImageViewPopup/"&gt;CLImageViewPopup&lt;/a&gt; - A simple Image full screen pop up.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alterplay/APKenBurnsView"&gt;APKenBurnsView&lt;/a&gt; - Ken Burns effect with face recognition!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/moa"&gt;Moa&lt;/a&gt; - An image download extension of the image view for iOS, tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/izotx/JMCMarchingAnts"&gt;JMCMarchingAnts&lt;/a&gt; - Library that lets you add marching ants (animated) selection to the edges of the images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Krisiacik/ImageViewer"&gt;ImageViewer&lt;/a&gt; - An image viewer à la Twitter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BeauNouvelle/FaceAware"&gt;FaceAware&lt;/a&gt; - An extension that gives UIImageView the ability to focus on faces within an image when using AspectFill.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dkalaitzidis/SwiftyAvatar"&gt;SwiftyAvatar&lt;/a&gt; - A UiimageView class for creating circular avatar images, IBDesignable to make all changes via storyboard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FlexMonkey/ShinpuruImage"&gt;ShinpuruImage&lt;/a&gt; - Syntactic Sugar for Accelerate/vImage and Core Image Filters.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lbrndnr/ImagePickerSheetController"&gt;ImagePickerSheetController&lt;/a&gt; - ImagePickerSheetController is like the custom photo action sheet in iMessage just without the glitches.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gkye/ComplimentaryGradientView"&gt;ComplimentaryGradientView&lt;/a&gt; - Create complementary gradients generated from dominant and prominent colors in supplied image. Inspired by Grade.js.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zvonicek/ImageSlideshow"&gt;ImageSlideshow&lt;/a&gt; - Swift image slideshow with circular scrolling, timer and full screen viewer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Imaginary"&gt;Imaginary&lt;/a&gt; - Remote images, as easy as one, two, three.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pantuspavel/PPAssetsActionController"&gt;PPAssetsActionController&lt;/a&gt; - Highly customizable Action Sheet Controller with Assets Preview.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jinSasaki/Vulcan"&gt;Vulcan&lt;/a&gt; - Multi image downloader with priority in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/floriangbh/FacebookImagePicker"&gt;FacebookImagePicker&lt;/a&gt; - Facebook album photo picker written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Lightbox"&gt;Lightbox&lt;/a&gt; - A convenient and easy to use image viewer for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ebbapp/ebblinkSDK"&gt;Ebblink&lt;/a&gt; - An iOS SDK for sharing photos that automatically expire and can be deleted at any time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/makomori/Sharaku"&gt;Sharaku&lt;/a&gt; - Instagram-like image filter ViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scihant/CTPanoramaView"&gt;CTPanoramaView&lt;/a&gt; - Displays spherical or cylindrical panoramas or 360-photos with touch or motion based control options.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/ios-twitter-image-pipeline"&gt;Twitter Image Pipline&lt;/a&gt; - streamlined framework for fetching and storing images in an application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TinyCrayon/TinyCrayon-iOS-SDK"&gt;TinyCrayon&lt;/a&gt; - A smart and easy-to-use image masking and cutout SDK for mobile apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kawoou/FlexibleImage"&gt;FlexibleImage&lt;/a&gt; - A simple way to play with image!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tilltue/TLPhotoPicker"&gt;TLPhotoPicker&lt;/a&gt; - Multiple phassets picker for iOS lib. like a facebook.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yapstudios/YapImageManager"&gt;YapImageManager&lt;/a&gt; - A high-performance image downloader written in Swift, powered by YapDatabase.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://photoeditorsdk.com/" rel="nofollow"&gt;PhotoEditorSDK&lt;/a&gt; - A fully customizable photo editor for your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aFrogleap/SimpleImageViewer"&gt;SimpleImageViewer&lt;/a&gt; - A snappy image viewer with zoom and interactive dismissal transition.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/AZImagePreview"&gt;AZImagePreview&lt;/a&gt; - A framework that makes image viewing easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KimDarren/FaceCropper"&gt;FaceCropper&lt;/a&gt; - Crop faces, inside of your image, with iOS 11 Vision api.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/avito-tech/Paparazzo"&gt;Paparazzo&lt;/a&gt; - Custom iOS camera and photo picker with editing capabilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZaidPathan/ZImageCropper"&gt;ZImageCropper&lt;/a&gt; - A Swift  project to crop image in any shape.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bachonk/InitialsImageView"&gt;InitialsImageView&lt;/a&gt; - An UIImageView extension that generates letter initials as a placeholder for user profile images, with a randomized background color.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tungvoduc/DTPhotoViewerController"&gt;DTPhotoViewerController&lt;/a&gt; - A fully customizable photo viewer ViewController, inspired by Facebook photo viewer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vpeschenkov/LetterAvatarKit"&gt;LetterAvatarKit&lt;/a&gt; - A UIImage extension that generates letter-based avatars written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexhillc/AXPhotoViewer"&gt;AXPhotoViewer&lt;/a&gt; - An iPhone/iPad photo gallery viewer, useful for viewing a large (or small!) number of photos&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tejas-ardeshna/TJProfileImage"&gt;TJProfileImage&lt;/a&gt; - Live rendering of componet’s properties in Interface Builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/Viewer"&gt;Viewer&lt;/a&gt; - Image viewer (or Lightbox) with support for local and remote videos and images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aaronjsutton/OverlayComposite"&gt;OverlayComposite&lt;/a&gt; - An asynchronous, multithreaded, image compositing framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minecodecraft/MCScratchImageView"&gt;MCScratchImageView&lt;/a&gt; - A custom ImageView that is used to cover the surface of other view like a scratch card, user can swipe the mulch to see the view below.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MetalPetal/MetalPetal"&gt;MetalPetal&lt;/a&gt; - A GPU-accelerated image/video processing framework based on &lt;a href="https://developer.apple.com/metal/" rel="nofollow"&gt;Metal&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olddonkey/ShadowImageView"&gt;ShadowImageView&lt;/a&gt; - ShadowImageView is a iOS 10 Apple Music style image view, help you create elegent image with shadow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wvabrinskas/Avatar"&gt;Avatar&lt;/a&gt; - Generate random user Avatar images using CoreGraphics and QuartzCore.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/horitaku46/Serrata"&gt;Serrata&lt;/a&gt; - Slide image viewer library similar to Twitter and LINE.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ileafsolutions/StyleArt"&gt;StyleArt&lt;/a&gt; - Style Art library process images using COREML with a set of pre trained machine learning models and convert them to Art style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/500px/greedo-layout-for-ios"&gt;greedo-layout-for-ios&lt;/a&gt; - Full aspect ratio grid layout for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Feghal/ImageDetect"&gt;ImageDetect&lt;/a&gt; - Detect and crop faces, barcodes and texts inside of your image, with iOS 11 Vision api.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TileImageTeamiOS/THTiledImageView"&gt;THTiledImageView&lt;/a&gt; - Provide ultra-high-quality images through tiling techniques.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BradLarson/GPUImage3"&gt;GPUImage3&lt;/a&gt; - GPUImage 3 is a BSD-licensed Swift framework for GPU-accelerated video and image processing using Metal.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Gallery"&gt;Gallery&lt;/a&gt; - Your next favorite image and video picker.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/altayer-digital/ATGMediaBrowser"&gt;ATGMediaBrowser&lt;/a&gt; - Image slide-show viewer with multiple predefined transition styles, and ability to create new transitions with ease.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/Pixel"&gt;Pixel&lt;/a&gt; - An image editor and engine using CoreImage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KiranJasvanee/OnlyPictures"&gt;OnlyPictures&lt;/a&gt; - A simple and flexible way to add source of overlapping circular pictures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piknotech/SFSafeSymbols"&gt;SFSafeSymbols&lt;/a&gt; - Safely access Apple's SF Symbols using static typing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-media-processing" class="anchor" aria-hidden="true" href="#media-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Media Processing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/garnele007/SwiftOCR"&gt;SwiftOCR&lt;/a&gt; - Fast and simple OCR library written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.appcoda.com/qr-code-ios-programming-tutorial/" rel="nofollow"&gt;QR Code Scanner&lt;/a&gt; - QR Code implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aschuch/QRCode"&gt;QRCode&lt;/a&gt; - A QRCode generator written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EFPrefix/EFQRCode"&gt;EFQRCode&lt;/a&gt; - A better way to operate two-dimensional code in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lovoo/NSFWDetector"&gt;NSFWDetector&lt;/a&gt; - A NSFW (aka porn) detector with CoreML.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-pdf" class="anchor" aria-hidden="true" href="#pdf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PDF&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vfr/Reader"&gt;Reader&lt;/a&gt; - PDF Reader Core for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RobertAPhillips/UIView_2_PDF"&gt;UIView 2 PDF&lt;/a&gt; - PDF generator using UIViews or UIViews with an associated XIB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FolioReader/FolioReaderKit"&gt;FolioReaderKit&lt;/a&gt; - A Swift ePub reader and parser framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgr-ksmt/PDFGenerator"&gt;PDFGenerator&lt;/a&gt; - A simple Generator of PDF in Swift. Generate PDF from view(s) or image(s).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nRewik/SimplePDF"&gt;SimplePDF&lt;/a&gt; - Create a simple PDF effortlessly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kayoslab/SwiftPDFGenerator"&gt;SwiftPDFGenerator&lt;/a&gt; - PDF generator using UIViews; Swift Version of 'UIView 2 PDF'.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pspdfkit.com/" rel="nofollow"&gt;PSPDFKit&lt;/a&gt; - Render PDF, add/edit annotations, fill forms, add/edit pages, view/create digital signatures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Techprimate/TPPDF"&gt;TPPDF&lt;/a&gt; - Generate PDF using commands and automatic layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mobfarm/FastPdfKit"&gt;FastPdfKit&lt;/a&gt; - A Static Library to be embedded on iOS applications to display pdf documents derived from Fast PDF.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DimaMishchenko/UIImagePlusPDF"&gt;UIImagePlusPDF&lt;/a&gt; - UIImage extensions to simply use PDF files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-streaming" class="anchor" aria-hidden="true" href="#streaming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Streaming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shogo4405/HaishinKit.swift"&gt;HaishinKit.swift&lt;/a&gt; - Camera and Microphone streaming library via RTMP, HLS for iOS, macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tumtumtum/StreamingKit"&gt;StreamingKit&lt;/a&gt; - A fast and extensible gapless AudioPlayer/AudioStreamer for macOS and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/teodorpatras/Jukebox"&gt;Jukebox&lt;/a&gt; - Player for streaming local and remote audio files. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LaiFengiOS/LFLiveKit"&gt;LFLiveKit&lt;/a&gt; - H264 and AAC Hard coding，support GPUImage Beauty， rtmp transmission，weak network lost frame，Dynamic switching rate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qasim/Airstream"&gt;Airstream&lt;/a&gt; - A framework for streaming audio between Apple devices using AirPlay.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opentok/accelerator-core-ios"&gt;OTAcceleratorCore&lt;/a&gt; - A painless way to integrate audio/video(screen sharing) to any iOS applications via Tokbox.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webrtc.org/native-code/ios/" rel="nofollow"&gt;webrtc&lt;/a&gt; - Provides browsers and mobile applications with Real-Time Communications (RTC) capabilities via simple APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-video" class="anchor" aria-hidden="true" href="#video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Video&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vimeo/VIMVideoPlayer"&gt;VIMVideoPlayer&lt;/a&gt; - A simple wrapper around the AVPlayer and AVPlayerLayer classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mobileplayer/mobileplayer-ios"&gt;MobilePlayer&lt;/a&gt; - A powerful and completely customizable media player for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/0xced/XCDYouTubeKit"&gt;XCDYouTubeKit&lt;/a&gt; - YouTube video player for iOS, tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.modejong.com/AVAnimator/" rel="nofollow"&gt;AVAnimator&lt;/a&gt; - An open source iOS native library that makes it easy to implement non-trivial video/audio enabled apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gontovnik/Periscope-VideoViewController"&gt;Periscope VideoViewController&lt;/a&gt; - Video view controller with Periscope fast rewind control.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mariohahn/MHVideoPhotoGallery"&gt;MHVideoPhotoGallery&lt;/a&gt; - A Photo and Video Gallery.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davidlondono/PlayerView"&gt;PlayerView&lt;/a&gt; - Player View is a delegated view using AVPlayer of Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SRGSSR/SRGMediaPlayer-iOS"&gt;SRGMediaPlayer-iOS&lt;/a&gt; - The SRG Media Player library for iOS provides a simple way to add a universal audio / video player to any iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mhergon/AVPlayerViewController-Subtitles"&gt;AVPlayerViewController-Subtitles&lt;/a&gt; - AVPlayerViewController-Subtitles is a library to display subtitles on iOS. It's built as a Swift extension and it's very easy to integrate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mhergon/MPMoviePlayerController-Subtitles"&gt;MPMoviePlayerController-Subtitles&lt;/a&gt; - MPMoviePlayerController-Subtitles is a library to display subtitles on iOS. It's built as a Swift extension and it's very easy to integrate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/renzifeng/ZFPlayer"&gt;ZFPlayer&lt;/a&gt; - Based on AVPlayer, support for the horizontal screen, vertical screen (full screen playback can also lock the screen direction), the upper and lower slide to adjust the volume, the screen brightness, or so slide to adjust the playback progress.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piemonte/Player"&gt;Player&lt;/a&gt; - video player in Swift, simple way to play and stream media in your iOS or tvOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BrikerMan/BMPlayer"&gt;BMPlayer&lt;/a&gt; - Video player in swift3 and swift2 for iOS, based on AVPlayer, support the horizontal, vertical screen. support adjust volume, brigtness and seek by slide.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/entotsu/VideoPager"&gt;VideoPager&lt;/a&gt; - Paging Video UI, and some control components is available.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NYTimes/ios-360-videos"&gt;ios-360-videos&lt;/a&gt; - NYT360Video plays 360-degree video streamed from an AVPlayer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gsabran/DDDKit"&gt;swift-360-videos&lt;/a&gt; - Pure swift (no SceneKit) 3D library with focus on video and 360.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrewboryk/ABMediaView"&gt;ABMediaView&lt;/a&gt; - UIImageView subclass for drop-in image, video, GIF, and audio display, with functionality for fullscreen and minimization to the bottom-right corner.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HHK1/PryntTrimmerView"&gt;PryntTrimmerView&lt;/a&gt; - A set of UI elements to trim, crop and select frames inside a video.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VeinGuo/VGPlayer"&gt;VGPlayer&lt;/a&gt; - A simple iOS video player in Swift,Support play local and network,Background playback mode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rinov/YoutubeKit"&gt;YoutubeKit&lt;/a&gt; - A video player that fully supports Youtube IFrame API and YoutubeDataAPI for easily create a Youtube app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gilesvangruisen/Swift-YouTube-Player"&gt;Swift-YouTube-Player&lt;/a&gt; - Swift library for embedding and controlling YouTube videos in your iOS applications!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesdouble/JDVideoKit"&gt;JDVideoKit&lt;/a&gt; - You can easily transfer your video into Three common video type via this framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josejuanqm/VersaPlayer"&gt;VersaPlayer&lt;/a&gt; - Versatile AVPlayer implementation for iOS, macOS, and tvOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-messaging" class="anchor" aria-hidden="true" href="#messaging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Messaging&lt;/h2&gt;
&lt;p&gt;Also see &lt;a href="#push-notifications"&gt;push notifications&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/layerhq/releases-ios"&gt;LayerKit&lt;/a&gt; - iOS SDK for Layer, the easiest way to add in-app messaging (text, photos, videos, data) to any mobile or web application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robbiehanson/XMPPFramework"&gt;XMPPFramework&lt;/a&gt; - An XMPP Framework in Objective-C for Mac and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/badoo/Chatto"&gt;Chatto&lt;/a&gt; - A lightweight framework to build chat applications, made in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MessageKit/MessageKit"&gt;MessageKit&lt;/a&gt; - Eventually, a Swift re-write of JSQMessagesViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/relatedcode/Messenger"&gt;Messenger&lt;/a&gt; - This is a native iOS Messenger app, making realtime chat conversations and audio calls with full offline support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opentok/accelerator-textchat-ios"&gt;OTTextChatAccelerator&lt;/a&gt; - OpenTok Text Chat Accelerator Pack enables text messages between mobile or browser-based devices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chat-sdk/chat-sdk-ios"&gt;chat-sdk-ios&lt;/a&gt; - Chat SDK iOS - Open Source Mobile Messenger.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nguyenhuy/AsyncMessagesViewController"&gt;AsyncMessagesViewController&lt;/a&gt; - A smooth, responsive and flexible messages UI library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GitHawkApp/MessageViewController"&gt;MessageViewController&lt;/a&gt; - A SlackTextViewController replacement written in Swift for the iPhone X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/SwiftyMessenger"&gt;SwiftyMessenger&lt;/a&gt; - Swift toolkit for passing messages between iOS apps and extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/instamobile/messenger-iOS-chat-swift-firestore"&gt;Messenger Chat with Firebase&lt;/a&gt; - Swift messaging chat app with Firebase Firestore integration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/SwiftKafka"&gt;SwiftKafka&lt;/a&gt; - Swift SDK for Apache Kafka by IBM.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-networking" class="anchor" aria-hidden="true" href="#networking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Networking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AFNetworking/AFNetworking"&gt;AFNetworking&lt;/a&gt; - A delightful iOS and macOS networking framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RestKit/RestKit"&gt;RestKit&lt;/a&gt; - RestKit is an Objective-C framework for iOS that aims to make interacting with RESTful web services simple, fast and fun.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/foursquare/FSNetworking"&gt;FSNetworking&lt;/a&gt; - Foursquare iOS networking library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pokeb/asi-http-request"&gt;ASIHTTPRequest&lt;/a&gt; - Easy to use CFNetwork wrapper for HTTP requests, Objective-C, macOS and iPhone.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Overcoat/Overcoat"&gt;Overcoat&lt;/a&gt; - Small but powerful library that makes creating REST clients simple and fun.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/epam/road-ios-framework"&gt;ROADFramework&lt;/a&gt; - Attributed-oriented approach for interacting with web services. The framework has built-in json and xml serialization for requests and responses and can be easily extensible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire"&gt;Alamofire&lt;/a&gt; - Alamofire is an HTTP networking library written in Swift, from the creator of AFNetworking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nghialv/Transporter"&gt;Transporter&lt;/a&gt; - A tiny library makes uploading and downloading easier.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cdzombak/CDZPinger"&gt;CDZPinger&lt;/a&gt; - Easy-to-use ICMP Ping.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dingbat/nsrails"&gt;NSRails&lt;/a&gt; - iOS/Mac OS framework for Rails.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nathankot/NKMultipeer"&gt;NKMultipeer&lt;/a&gt; - A testable abstraction over multipeer connectivity.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robbiehanson/CocoaAsyncSocket"&gt;CocoaAsyncSocket&lt;/a&gt; - Asynchronous socket networking library for Mac and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bustoutsolutions/siesta"&gt;Siesta&lt;/a&gt; - Elegant abstraction for RESTful resources that untangles stateful messes. An alternative to callback- and delegate-based networking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashleymills/Reachability.swift"&gt;Reachability.swift&lt;/a&gt; - Replacement for Apple's Reachability re-written in Swift with closures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icoco/OctopusKit"&gt;OctopusKit&lt;/a&gt; - A simplicity but graceful solution for invoke RESTful web service APIs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Moya/Moya"&gt;Moya&lt;/a&gt; - Network abstraction layer written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chasseurmic/TWRDownloadManager"&gt;TWRDownloadManager&lt;/a&gt; - A modern download manager based on NSURLSession to deal with asynchronous downloading, management and persistence of multiple files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qiniu/happy-dns-objc"&gt;HappyDns&lt;/a&gt; - A Dns library, support custom dns server, dnspod httpdns. Only support A record.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BridgeNetworking/Bridge"&gt;Bridge&lt;/a&gt; - A simple extensible typed networking library. Intercept and process/alter requests and responses easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MLSDev/TRON"&gt;TRON&lt;/a&gt; - Lightweight network abstraction layer, written on top of Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/EVCloudKitDao"&gt;EVCloudKitDao&lt;/a&gt; - Simplified access to Apple's CloudKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/EVURLCache"&gt;EVURLCache&lt;/a&gt; - a NSURLCache subclass for handling all web requests that use NSURLRequest.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netguru/ResponseDetective"&gt;ResponseDetective&lt;/a&gt; - Sherlock Holmes of the networking layer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnlui/Pitaya"&gt;Pitaya&lt;/a&gt; - A Swift HTTP / HTTPS networking library just incidentally execute on machines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dduan/Just"&gt;Just&lt;/a&gt; - Swift HTTP for Humans.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hallas/agent"&gt;agent&lt;/a&gt; - Minimalistic Swift HTTP request agent for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Isuru-Nanayakkara/Reach"&gt;Reach&lt;/a&gt; - A simple class to check for internet connection availability in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam/SwiftHTTP"&gt;SwiftHTTP&lt;/a&gt; - Thin wrapper around NSURLSession in swift. Simplifies HTTP requests.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qiniu/iOS-netdiag"&gt;Netdiag&lt;/a&gt; - A network diagnosis library. Support Ping/TcpPing/Rtmp/TraceRoute/DNS/external IP/external DNS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/betacraft/AFNetworkingHelper"&gt;AFNetworkingHelper&lt;/a&gt; - A custom wrapper over AFNetworking library that we use inside RC extensively.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/azizuysal/NetKit"&gt;NetKit&lt;/a&gt; - A Concise HTTP Framework in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dustturtle/RealReachability"&gt;RealReachability&lt;/a&gt; - We need to observe the REAL reachability of network. That's what RealReachability do.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nixzhu/MonkeyKing"&gt;MonkeyKing&lt;/a&gt; - MonkeyKing helps you post messages to Chinese Social Networks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imex94/NetworkKit"&gt;NetworkKit&lt;/a&gt; - Lightweight Networking and Parsing framework made for iOS, Mac, WatchOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ishkawa/APIKit"&gt;APIKit&lt;/a&gt; - A networking library for building type safe web API client in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/ws"&gt;ws &lt;g-emoji class="g-emoji" alias="cloud" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2601.png"&gt;☁️&lt;/g-emoji&gt;&lt;/a&gt; - Elegant JSON WebService in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/SPTDataLoader"&gt;SPTDataLoader&lt;/a&gt; - The HTTP library used by the Spotify iOS client.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skywite/SWNetworking"&gt;SWNetworking&lt;/a&gt; - Powerful high-level iOS, macOS and tvOS networking library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/Networking"&gt;Networking&lt;/a&gt; - Simple HTTP Networking in Swift a NSURLSession wrapper with image caching support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/priore/SOAPEngine"&gt;SOAPEngine&lt;/a&gt; - This generic SOAP client allows you to access web services using a your iOS app, macOS app and AppleTV app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Swish"&gt;Swish&lt;/a&gt; - Nothing but Net(working).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Malibu"&gt;Malibu&lt;/a&gt; - Malibu is a networking library built on promises.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yuantiku/YTKNetwork"&gt;YTKNetwork&lt;/a&gt; - YTKNetwork is a high level request util based on AFNetworking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serejahh/UnboxedAlamofire"&gt;UnboxedAlamofire&lt;/a&gt; - Alamofire + Unbox: the easiest way to download and decode JSON into swift objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mavris/MMLanScan"&gt;MMLanScan&lt;/a&gt; - An iOS LAN Network Scanner library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FelixLinBH/Domainer"&gt;Domainer&lt;/a&gt; - Manage multi-domain url auto mapping ip address table.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Restofire/Restofire"&gt;Restofire&lt;/a&gt; - Restofire is a protocol oriented network abstraction layer in swift that is built on top of Alamofire to use services in a declartive way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kubatruhlar/AFNetworking-RetryPolicy"&gt;AFNetworking+RetryPolicy&lt;/a&gt; - An objective-c category that adds the ability to set the retry logic for requests made with AFNetworking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/azawawi/SwiftyZeroMQ"&gt;SwiftyZeroMQ&lt;/a&gt; - ZeroMQ Swift Bindings for iOS, macOS, tvOS and watchOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stremsdoerfer/Nikka"&gt;Nikka&lt;/a&gt; - A super simple Networking wrapper that supports many JSON libraries, Futures and Rx.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kangzubin/XMNetworking"&gt;XMNetworking&lt;/a&gt; - A lightweight but powerful network library with simplified and expressive syntax based on AFNetworking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/Merhaba"&gt;Merhaba&lt;/a&gt; - Bonjour networking for discovery and connection between iOS, macOS and tvOS devices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dbsystel/DBNetworkStack"&gt;DBNetworkStack&lt;/a&gt; - Resource-oritented networking which is typesafe, extendable, composeable and makes testing a lot easier.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ezefranca/EFInternetIndicator"&gt;EFInternetIndicator&lt;/a&gt; - A little swift Internet error status indicator using ReachabilitySwift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/paulmelnikow/AFNetworking-Synchronous"&gt;AFNetworking-Synchronous&lt;/a&gt; - Synchronous requests for AFNetworking 1.x, 2.x, and 3.x.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/logansease/QwikHttp"&gt;QwikHttp&lt;/a&gt; - a robust, yet lightweight and simple to use HTTP networking library designed for RESTful APIs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intelygenz/NetClient-iOS"&gt;NetClient&lt;/a&gt; - Versatile HTTP networking library written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Wasappli/WANetworkRouting"&gt;WANetworkRouting&lt;/a&gt; - An iOS library to route API paths to objects on client side with request, mapping, routing and auth layers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RuiAAPeres/Reactor"&gt;Reactor&lt;/a&gt; - Powering your RAC architecture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isamankumara/skywite"&gt;SWNetworking&lt;/a&gt; - Powerful high-level iOS, macOS and tvOS networking library. from the creator of SWNetworking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cornerAnt/Digger"&gt;Digger&lt;/a&gt; - Digger is a lightweight download framework that requires only one line of code to complete the file download task.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlTavares/Ciao"&gt;Ciao&lt;/a&gt; - Publish and discover services using mDNS(Bonjour, Zeroconf).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jorik041/PerfectAPIClient"&gt;PerfectAPIClient&lt;/a&gt; - An API Client based on a network abstraction layer for the Perfect Server-Side Swift Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmoaay/Bamboots"&gt;Bamboots&lt;/a&gt; - Bamboots is a network request framework based on Alamofire, aiming at making network request easier for business development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ThreeGayHub/SolarNetwork"&gt;SolarNetwork&lt;/a&gt; - Elegant network abstraction layer in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Feghal/FGRoute"&gt;FGRoute&lt;/a&gt; - An easy-to-use library that helps developers to get wifi ssid, router and device ip addresses.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stdevteam/RxRestClient"&gt;RxRestClient&lt;/a&gt; - Simple REST Client based on RxSwift and Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/billp/TermiNetwork"&gt;TermiNetwork&lt;/a&gt; - A networking library written with Swift 4.0 that supports multi-environment configuration, routing and automatic deserialization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iAmrSalman/Dots"&gt;Dots&lt;/a&gt; - Lightweight Concurrent Networking Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Albinzr/Gem"&gt;Gem&lt;/a&gt; - An extreme light weight system with high performance for managing all http request with automated parser with modal.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rogermolas/RMHttp"&gt;RMHttp&lt;/a&gt; - Lightweight REST library for iOS and watchOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tunespeak/AlamoRecord"&gt;AlamoRecord&lt;/a&gt; - An elegant yet powerful iOS networking layer inspired by ActiveRecord.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emadhegab/MHNetwork"&gt;MHNetwork&lt;/a&gt; - Protocol Oriented Network Layer Aim to avoid having bloated singleton NetworkManager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3sidedcube/ThunderRequest"&gt;ThunderRequest&lt;/a&gt; - A simple URLSession wrapper with a generic protocol based request body approach and easy deserialisation of responses.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sky-uk/ReactiveAPI"&gt;ReactiveAPI&lt;/a&gt; - Write clean, concise and declarative network code relying on URLSession, with the power of RxSwift. Inspired by Retrofit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/borchero/Squid"&gt;Squid&lt;/a&gt; - Declarative and reactive networking framework based on Combine and providing means for HTTP requests, transparent pagination, and WebSocket communication.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-email" class="anchor" aria-hidden="true" href="#email"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Email&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MailCore/mailcore2"&gt;Mail Core 2&lt;/a&gt; - MailCore 2 provide a simple and asynchronous API to work with e-mail protocols IMAP, POP and SMTP.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snipsco/Postal"&gt;Postal&lt;/a&gt; - A swift framework providing simple access to common email providers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-representations" class="anchor" aria-hidden="true" href="#representations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Representations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/apollographql/apollo-ios"&gt;apollo-ios&lt;/a&gt; - A GraphQL client for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bricklife/JSONRPCKit"&gt;JSONRPCKit&lt;/a&gt; - A JSON-RPC 2.0 library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexeyxo/protobuf-swift"&gt;protobuf-swift&lt;/a&gt; - Google ProtocolBuffers for Apple Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-protobuf"&gt;swift-protobuf&lt;/a&gt; - Plugin and runtime library for using protobuf with Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-notifications" class="anchor" aria-hidden="true" href="#notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notifications&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-push-notifications" class="anchor" aria-hidden="true" href="#push-notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Push Notifications&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/Orbiter"&gt;Orbiter&lt;/a&gt; - Push Notification Registration for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/fastlane/tree/master/pem"&gt;PEM&lt;/a&gt; - Automatically generate and renew your push notification profiles.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KnuffApp/Knuff"&gt;Knuff&lt;/a&gt; - The debug application for Apple Push Notification Service (APNS).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/FBNotifications"&gt;FBNotifications&lt;/a&gt; - Facebook Analytics In-App Notifications Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/noodlewerk/NWPusher"&gt;NWPusher&lt;/a&gt; - macOS and iOS application and framework to play with the Apple Push Notification service (APNs).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/acoomans/SimulatorRemoteNotifications"&gt;SimulatorRemoteNotifications&lt;/a&gt; - Library to send mock remote notifications to the iOS simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pisces/APNSUtil"&gt;APNSUtil&lt;/a&gt; - Library makes code simple settings and landing for apple push notification service.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-push-notification-providers" class="anchor" aria-hidden="true" href="#push-notification-providers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Push Notification Providers&lt;/h3&gt;
&lt;p&gt;Most of these are paid services, some have free tiers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.airship.com/platform/channels/mobile-app/" rel="nofollow"&gt;Urban Airship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://growthpush.com" rel="nofollow"&gt;Growth Push&lt;/a&gt; - Popular in Japan.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.braze.com/" rel="nofollow"&gt;Braze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://batch.com" rel="nofollow"&gt;Batch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boxcar.io" rel="nofollow"&gt;Boxcar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sailthru.com" rel="nofollow"&gt;Carnival&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.catapush.com/" rel="nofollow"&gt;Catapush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.netmera.com/" rel="nofollow"&gt;Netmera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://onesignal.com" rel="nofollow"&gt;OneSignal&lt;/a&gt; - Free.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pushbots.com/" rel="nofollow"&gt;PushBots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pushwoosh.com" rel="nofollow"&gt;Pushwoosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nordeus/pushkin"&gt;Pushkin&lt;/a&gt; - Free and open-source.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pusher.com/beams" rel="nofollow"&gt;Pusher&lt;/a&gt; - Free and unlimited.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.swrve.com" rel="nofollow"&gt;Swrve&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-local-notifications" class="anchor" aria-hidden="true" href="#local-notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Notifications&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/d7laungani/DLLocalNotifications"&gt;DLLocalNotifications&lt;/a&gt; -  Easily create Local Notifications in swift - Wrapper of UserNotifications Framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-objective-c-runtime" class="anchor" aria-hidden="true" href="#objective-c-runtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C Runtime&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Objective-C Runtime wrappers, libraries and tools.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sushinoya/lumos"&gt;Lumos&lt;/a&gt; - A light Swift wrapper around Objective-C Runtime.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbaumbach/Swizzlean"&gt;Swizzlean&lt;/a&gt; - An Objective-C Swizzle Helper Class.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-optimization" class="anchor" aria-hidden="true" href="#optimization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optimization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/Unreachable"&gt;Unreachable&lt;/a&gt; - Unreachable code path optimization hint for Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-parsing" class="anchor" aria-hidden="true" href="#parsing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parsing&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-csv" class="anchor" aria-hidden="true" href="#csv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSV&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Daniel1of1/CSwiftV"&gt;CSwiftV&lt;/a&gt; - A csv parser written in swift conforming to rfc4180.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yaslab/CSV.swift"&gt;CSV.swift&lt;/a&gt; - CSV reading and writing library written in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-json" class="anchor" aria-hidden="true" href="#json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/stig/json-framework"&gt;JSON-Framework&lt;/a&gt; - This framework implements a strict JSON parser and generator in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mantle/Mantle"&gt;Mantle&lt;/a&gt; - Model framework for Cocoa and Cocoa Touch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gonzalezreal/Groot"&gt;Groot&lt;/a&gt; - Convert JSON dictionaries and arrays to and from Core Data managed objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/PropertyMapper"&gt;PropertyMapper&lt;/a&gt; - Data mapping and validation with minimal amount of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JSONModel/JSONModel"&gt;JSONModel&lt;/a&gt; - Magical Data Modeling Framework for JSON. Create rapidly powerful, atomic and smart data model classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftyJSON/SwiftyJSON"&gt;SwiftyJSON&lt;/a&gt; - The better way to deal with JSON data in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/FastEasyMapping"&gt;FastEasyMapping&lt;/a&gt; - Serialize &amp;amp; deserialize JSON fast.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tristanhimmelman/ObjectMapper"&gt;ObjectMapper&lt;/a&gt; - A framework written in Swift that makes it easy for you to convert your Model objects (Classes and Structs) to and from JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/JASON"&gt;JASON&lt;/a&gt; - JSON parsing with outstanding performances and convenient operators.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hkellaway/Gloss"&gt;Gloss&lt;/a&gt; - A shiny JSON parsing library in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Weebly/Cereal"&gt;Cereal&lt;/a&gt; - Swift object serialization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/insanoid/SwiftyJSONAccelerator"&gt;SwiftyJSONAccelerator&lt;/a&gt; - Generate Swift 5 model files from JSON with Codeable support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewcheok/JSONCodable"&gt;JSONCodable&lt;/a&gt; - Hassle-free JSON encoding and decoding in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Tailor"&gt;Tailor&lt;/a&gt; - A super fast &amp;amp; convenient object mapper tailored for your needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hodinkee/alexander"&gt;alexander&lt;/a&gt; - An extremely simple JSON helper written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bignerdranch/Freddy"&gt;Freddy&lt;/a&gt; - A reusable framework for parsing JSON in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lyft/mapper"&gt;mapper&lt;/a&gt; - A JSON deserialization library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/AlamofireJsonToObjects"&gt;AlamofireJsonToObjects&lt;/a&gt; - An Alamofire extension which converts JSON response data into swift objects using EVReflection.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/endocrimes/Jay"&gt;Jay&lt;/a&gt; - Pure-Swift JSON parser &amp;amp; formatter. Linux &amp;amp; macOS ready.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYModel"&gt;YYModel&lt;/a&gt; - High performance model framework for iOS/macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/Alembic"&gt;Alembic&lt;/a&gt; - Functional JSON parsing, mapping to objects, and serialize to JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/Wrap"&gt;Wrap&lt;/a&gt; - The easy to use Swift JSON encoder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/Arrow"&gt;Arrow &lt;g-emoji class="g-emoji" alias="bow_and_arrow" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3f9.png"&gt;🏹&lt;/g-emoji&gt;&lt;/a&gt; - Elegant JSON Parsing in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Anviking/Decodable"&gt;Decodable&lt;/a&gt; - Swift 2/3 JSON parsing done (more) right.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LoganWright/Genome"&gt;Genome&lt;/a&gt; - A simple, type safe, failure driven mapping library for serializing JSON to models in Swift 3.0 (Supports Linux).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/Unbox"&gt;Unbox&lt;/a&gt; - The easy to use Swift JSON decoder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam/JSONJoy-Swift"&gt;JSONJoy-Swift&lt;/a&gt; - Convert JSON to Swift objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/LazyObject"&gt;LazyObject&lt;/a&gt; - Lazily deserialize JSON into strongly typed Swift objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ahmed-Ali/JSONExport"&gt;JSONExport&lt;/a&gt; - JSONExport is a desktop application for macOS which enables you to export JSON objects as model classes with their associated constructors, utility methods, setters and getters in your favorite language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nike-Inc/Elevate"&gt;Elevate&lt;/a&gt; - Elevate is a JSON parsing framework that leverages Swift to make parsing simple, reliable and composable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CoderMJLee/MJExtension"&gt;MJExtension&lt;/a&gt; - A fast, convenient and nonintrusive conversion between JSON and model. Your model class don't need to extend another base class. You don't need to modify any model file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tristanhimmelman/AlamofireObjectMapper"&gt;AlamofireObjectMapper&lt;/a&gt; - An Alamofire extension which converts JSON response data into swift objects using ObjectMapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wiggzz/GuardedSwiftyJSON"&gt;GuardedSwiftyJSON&lt;/a&gt; - An add-on to SwiftyJSON to make it easier to create failable initializers for data models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/JAYSON"&gt;JAYSON&lt;/a&gt; - Strict and Scalable JSON library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alibaba/handyjson"&gt;HandyJSON&lt;/a&gt; - A handy swift JSON-object serialization/deserialization library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/utahiosmac/Marshal"&gt;Marshal&lt;/a&gt; - Marshaling the typeless wild west of [String: Any] (Protocol based).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mobilejazz/Motis"&gt;Motis&lt;/a&gt; - Easy JSON to NSObject mapping using Cocoa's key value coding (KVC).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bernikovich/NSTEasyJSON"&gt;NSTEasyJSON&lt;/a&gt; - The easiest way to deal with JSON data in Objective-C (similar to SwiftyJSON).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nodes-ios/Serpent"&gt;Serpent&lt;/a&gt; - A protocol to serialize Swift structs and classes for encoding and decoding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adrianmateoaea24/magic-mapper-swift"&gt;MagicMapper&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="star2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png"&gt;🌟&lt;/g-emoji&gt; Super light and easy automatic JSON to model mapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mzaks/FlatBuffersSwift"&gt;FlatBuffersSwift&lt;/a&gt; - This project brings FlatBuffers (an efficient cross platform serialization library) to Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Otbivnoe/CodableAlamofire"&gt;CodableAlamofire&lt;/a&gt; - An extension for Alamofire that converts JSON data into Decodable objects (Swift 4).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Wasappli/WAMapping"&gt;WAMapping&lt;/a&gt; - A library to turn dictionary into object and vice versa for iOS. Designed for speed!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/owensd/json-swift"&gt;json-swift&lt;/a&gt; - A basic library for working with JSON in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ikesyo/Himotoki"&gt;Himotoki&lt;/a&gt; - A type-safe JSON decoding library purely written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/postmates/PMHTTP"&gt;PMHTTP&lt;/a&gt; - Swift/Obj-C HTTP framework with a focus on REST and JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DimaMishchenko/NativeJSONMapper"&gt;NativeJSONMapper&lt;/a&gt; - Simple Swift 4 encoding &amp;amp; decoding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/postmates/PMJSON"&gt;PMJSON&lt;/a&gt; - Pure Swift JSON encoding/decoding library.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jsoncafe.com/" rel="nofollow"&gt;jsoncafe.com&lt;/a&gt; - Online Template driven Model Class Generator from JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/leavez/Mappable"&gt;Mappable&lt;/a&gt; - lightweight and powerful JSON object mapping library, specially optimized for immutable properties.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-xml--html" class="anchor" aria-hidden="true" href="#xml--html"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XML &amp;amp; HTML&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEXML"&gt;AEXML&lt;/a&gt; - Simple and lightweight XML parser written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/honghaoz/Ji"&gt;Ji&lt;/a&gt; - XML/HTML parser for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/Ono"&gt;Ono&lt;/a&gt; - A sensible way to deal with XML &amp;amp; HTML for iOS &amp;amp; macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/AlamofireXmlToObjects"&gt;AlamofireXmlToObjects&lt;/a&gt; - Fetch a XML feed and parse it into objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cezheng/Fuzi"&gt;Fuzi&lt;/a&gt; - A fast &amp;amp; lightweight XML &amp;amp; HTML parser in Swift with XPath &amp;amp; CSS support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tid-kijyun/Kanna"&gt;Kanna&lt;/a&gt;  - Kanna(鉋) is an XML/HTML parser for macOS/iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yahoojapan/SwiftyXMLParser"&gt;SwiftyXMLParser&lt;/a&gt; - Simple XML Parser implemented in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iabudiab/HTMLKit"&gt;HTMLKit&lt;/a&gt; - An Objective-C framework for your everyday HTML needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/drmohundro/SWXMLHash"&gt;SWXMLHash&lt;/a&gt; - Simple XML parsing in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chenyunguiMilook/SwiftyXML"&gt;SwiftyXML&lt;/a&gt; - The most swifty way to deal with XML data in swift 4.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxDesiatov/XMLCoder"&gt;XMLCoder&lt;/a&gt; - Encoder &amp;amp; Decoder for XML using Swift's &lt;code&gt;Codable&lt;/code&gt; protocols.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-parsing" class="anchor" aria-hidden="true" href="#other-parsing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Parsing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mkoehnke/WKZombie"&gt;WKZombie&lt;/a&gt; - WKZombie is a Swift framework for iOS/macOS to navigate within websites and collect data without the need of User Interface or API, also known as Headless browser. It can be used to run automated tests or manipulate websites using Javascript.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/itsmeichigo/URLPreview"&gt;URLPreview&lt;/a&gt; - An NSURL extension for showing preview info of webpages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nmdias/FeedKit"&gt;FeedKit&lt;/a&gt; - An RSS and Atom feed parser written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phimage/Erik"&gt;Erik&lt;/a&gt; - Erik is an headless browser based on WebKit. An headless browser allow to run functional tests, to access and manipulate webpages using javascript.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/URLEmbeddedView"&gt;URLEmbeddedView&lt;/a&gt; - Automatically caches the object that is confirmed the Open Graph Protocol, and displays it as URL embedded card.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ykyouhei/SwiftyConfiguration"&gt;SwiftyConfiguration&lt;/a&gt; - Modern Swift API for Plist.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/totocaster/JSONFeed"&gt;JSONFeed&lt;/a&gt; - Swift parser for JSON Feed, a format similar to RSS and Atom but in JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/100mango/SwiftCssParser"&gt;SwiftCssParser&lt;/a&gt; - A Powerful , Extensible CSS Parser written in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bitfwdcommunity/RLPSwift"&gt;RLPSwift&lt;/a&gt; - Recursive Length Prefix encoding written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cats-oss/AcknowledgementsPlist"&gt;AcknowledgementsPlist&lt;/a&gt; - AcknowledgementsPlist manages the licenses of libraries that depend on your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxDesiatov/CoreXLSX"&gt;CoreXLSX&lt;/a&gt; - Excel spreadsheet (XLSX) format support in pure Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-passbook" class="anchor" aria-hidden="true" href="#passbook"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passbook&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/frozon/passbook"&gt;passbook&lt;/a&gt; - Passbook gem let's you create pkpass for passbook iOS 6+.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nomad/dubai"&gt;Dubai&lt;/a&gt; - Generate and Preview Passbook Passes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://passkit.com" rel="nofollow"&gt;Passkit&lt;/a&gt; - Design, Create and validate Passbook Passes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-payments" class="anchor" aria-hidden="true" href="#payments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/prolificinteractive/Caishen"&gt;Caishen&lt;/a&gt; - A Payment Card UI &amp;amp; Validator for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stripe.com" rel="nofollow"&gt;Stripe&lt;/a&gt; - Payment integration on your app with PAY. Suitable for people with low knowledge on Backend.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.braintreepayments.com" rel="nofollow"&gt;Braintree&lt;/a&gt; - Free payment processing on your first $50k. Requires Backend.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/venmo-ios-sdk"&gt;Venmo&lt;/a&gt; Make and accept payments in your iOS app via Venmo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.moltin.com/developer/swift-ecommerce-sdk/" rel="nofollow"&gt;Moltin&lt;/a&gt; - Add eCommerce to your app with a simple SDK, so you can create a store and sell physical products, no backend required.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MosheBerman/PatronKit"&gt;PatronKit&lt;/a&gt; - A framework to add patronage to your apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit"&gt;SwiftyStoreKit&lt;/a&gt; - Lightweight In App Purchases Swift framework for iOS 8.0+ and macOS 9.0+&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sandorgyulai/InAppFramework"&gt;InAppFramework&lt;/a&gt; - In App Purchase Manager framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suraphanL/SwiftInAppPurchase"&gt;SwiftInAppPurchase&lt;/a&gt; - Simply code In App Purchases with this Swift Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gabrielgarza/monza"&gt;monza&lt;/a&gt; - Ruby Gem for Rails - Easy iTunes In-App Purchase Receipt validation, including auto-renewable subscriptions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/paypal/PayPal-iOS-SDK"&gt;PayPal&lt;/a&gt; - Accept payments in your iOS app via PayPal.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/card-io/card.io-iOS-SDK"&gt;card.io-iOS-SDK&lt;/a&gt; - card.io provides fast, easy credit card scanning in mobile apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxKramer/SwiftLuhn"&gt;SwiftLuhn&lt;/a&gt; - Debit/Credit card validation port of the Luhn Algorithm in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxKramer/ObjectiveLuhn"&gt;ObjectiveLuhn&lt;/a&gt; - Luhn Credit Card Validation Algorithm.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robotmedia/RMStore"&gt;RMStore&lt;/a&gt; - A lightweight iOS library for In-App Purchases.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MobileFirstInc/MFCard"&gt;MFCard&lt;/a&gt; - Easily integrate Credit Card payments in iOS App / Customisable Card UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tikhop/TPInAppReceipt"&gt;TPInAppReceipt&lt;/a&gt; - Reading and Validating In App Store Receipt.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eliakorkmaz/iCard"&gt;iCard&lt;/a&gt; - Bank Card Generator with Swift using SnapKit DSL.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orazz/CreditCardForm-iOS"&gt;CreditCardForm-iOS&lt;/a&gt; - CreditCardForm is iOS framework that allows developers to create the UI which replicates an actual Credit Card.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benjaminmayo/merchantkit"&gt;merchantkit&lt;/a&gt; - A modern In-App Purchases management framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lionheart/TipJarViewController"&gt;TipJarViewController&lt;/a&gt; - Easy, drop-in tip jar for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/checkout/frames-ios"&gt;FramesIos&lt;/a&gt; - Payment Form UI and Utilities in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yassram/YRPayment"&gt;YRPayment&lt;/a&gt; - Better payment user experience library with cool animation in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-permissions" class="anchor" aria-hidden="true" href="#permissions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Permissions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nixzhu/Proposer"&gt;Proposer&lt;/a&gt; - Make permission request easier (Supports Camera, Photos, Microphone, Contacts, Location).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wircho/ICanHas"&gt;ICanHas&lt;/a&gt; - Simplifies iOS user permission requests (Supports location, push notifications, camera, contacts, calendar, photos).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zakkhoyt/VWWPermissionKit"&gt;VWWPermissionKit&lt;/a&gt; - A visual permission manager for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iosphere/ISHPermissionKit"&gt;ISHPermissionKit&lt;/a&gt; - A unified way for iOS apps to request user permissions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlaws/JLPermissions"&gt;JLPermissions&lt;/a&gt; - An iOS pre-permissions utility that lets developers ask users on their own dialog for calendar, contacts, location, photos, reminders, twitter, push notifications and more, before making the system-based permission request.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rsattar/ClusterPrePermissions"&gt;ClusterPrePermissions&lt;/a&gt; - Reusable pre-permissions utility that lets developers ask users for access in their own dialog, before making the system-based request.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/Permission"&gt;Permission&lt;/a&gt; - A unified API to ask for permissions on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/STLocationRequest"&gt;STLocationRequest&lt;/a&gt; - A simple and elegant 3D-Flyover location request screen written Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pascalbros/PAPermissions"&gt;PAPermissions&lt;/a&gt; - A unified API to ask for permissions on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ennioma/arek"&gt;AREK&lt;/a&gt; - AREK is a clean and easy to use wrapper over any kind of iOS permission.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanVorobei/SPPermission"&gt;SPPermission&lt;/a&gt; - Request permissions with dialog. Check state any permissions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-products" class="anchor" aria-hidden="true" href="#products"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Products&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.import.io/" rel="nofollow"&gt;Import.io&lt;/a&gt; - Instantly Turn Web Pages into Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tapglue.com/" rel="nofollow"&gt;Tapglue&lt;/a&gt; - Build social products and a activity feed with a few lines of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openshopio/openshop.io-ios"&gt;OpenShop.io&lt;/a&gt; - mobile e-commerce solution connected to Facebook Ads and Google.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reactive-programming" class="anchor" aria-hidden="true" href="#reactive-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reactive Programming&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt; - Reactive Programming in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thanegill/RxOptional"&gt;RxOptional&lt;/a&gt; - RxSwift extensions for Swift optionals and "Occupiable" types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Carthage/ReactiveTask"&gt;ReactiveTask&lt;/a&gt; - Flexible, stream-based abstraction for launching processes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactiveCocoa/ReactiveCocoa"&gt;ReactiveCocoa&lt;/a&gt; - Streams of values over time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxMediaPicker"&gt;RxMediaPicker&lt;/a&gt; - A reactive wrapper built around UIImagePickerController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apparentsoft/ReactiveCoreData"&gt;ReactiveCoreData&lt;/a&gt; - ReactiveCoreData (RCD) is an attempt to bring Core Data into the ReactiveCocoa (RAC) world.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReSwift/ReSwift"&gt;ReSwift&lt;/a&gt; - Unidirectional Data Flow in Swift - Inspired by Redux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeclarativeHub/ReactiveKit"&gt;ReactiveKit&lt;/a&gt; - ReactiveKit is a collection of Swift frameworks for reactive and functional reactive programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sunshinejr/RxPermission"&gt;RxPermission&lt;/a&gt; - RxSwift bindings for Permissions API in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxAlamofire"&gt;RxAlamofire&lt;/a&gt; - RxSwift wrapper around the elegant HTTP networking in Swift Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxRealm"&gt;RxRealm&lt;/a&gt; - Rx wrapper for Realm's collection types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxMultipeer"&gt;RxMultipeer&lt;/a&gt; - A testable RxSwift wrapper around MultipeerConnectivity.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Polidea/RxBluetoothKit"&gt;RxBluetoothKit&lt;/a&gt; - iOS &amp;amp; macOS Bluetooth library for RxSwift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxGesture"&gt;RxGesture&lt;/a&gt; - RxSwift reactive wrapper for view gestures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/NSObject-Rx"&gt;NSObject-Rx&lt;/a&gt; - Handy RxSwift extensions on NSObject, including rx_disposeBag.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxCoreData"&gt;RxCoreData&lt;/a&gt; - RxSwift extensions for Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/inamiy/RxAutomaton"&gt;RxAutomaton&lt;/a&gt; - RxSwift + State Machine, inspired by Redux and Elm.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Wolox/ReactiveArray"&gt;ReactiveArray&lt;/a&gt; - An array class implemented in Swift that can be observed using ReactiveCocoa's Signals.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JensRavens/Interstellar"&gt;Interstellar&lt;/a&gt; - Simple and lightweight Functional Reactive Coding in Swift for the rest of us.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lsunsi/ReduxSwift"&gt;ReduxSwift&lt;/a&gt; - Predictable state container for Swift apps too.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Aftermath"&gt;Aftermath&lt;/a&gt; - Stateless message-driven micro-framework in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxKeyboard"&gt;RxKeyboard&lt;/a&gt; - Reactive Keyboard in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Jasonette/JASONETTE-iOS"&gt;JASONETTE-iOS&lt;/a&gt; - Native App over HTTP. Create your own native iOS app with nothing but JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactiveCocoa/ReactiveSwift"&gt;ReactiveSwift&lt;/a&gt; - Streams of values over time by ReactiveCocoa group.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/msaps/Listenable"&gt;Listenable&lt;/a&gt; - Swift object that provides an observable platform.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactorSwift/Reactor"&gt;Reactor&lt;/a&gt; - Unidirectional Data Flow using idiomatic Swift—inspired by Elm and Redux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/UrbanCompass/Snail"&gt;Snail&lt;/a&gt; - An observables framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fjcaetano/RxWebSocket"&gt;RxWebSocket&lt;/a&gt; - Reactive extension over Starscream for websockets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AckeeCZ/ACKReactiveExtensions"&gt;ACKReactiveExtensions&lt;/a&gt; - Useful extensions for ReactiveCocoa&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AckeeCZ/ReactiveLocation"&gt;ReactiveLocation&lt;/a&gt; - CoreLocation made reactive&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blendle/Hanson"&gt;Hanson&lt;/a&gt; - Lightweight observations and bindings in Swift, with support for KVO and NotificationCenter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/Observable"&gt;Observable&lt;/a&gt; - The easiest way to observe values in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jaychang0917/SimpleApiClient-ios"&gt;SimpleApiClient&lt;/a&gt; - A configurable api client based on Alamofire4 and RxSwift4 for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/VueFlux"&gt;VueFlux&lt;/a&gt; - Unidirectional Data Flow State Management Architecture for Swift - Inspired by Vuex and Flux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxAnimated"&gt;RxAnimated&lt;/a&gt; - Animated RxCocoa bindings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electricbolt/bindkit"&gt;BindKit&lt;/a&gt; - Two-way data binding framework for iOS. Only one API to learn.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stdevteam/STDevRxExt"&gt;STDevRxExt&lt;/a&gt; - STDevRxExt contains some extension functions for RxSwift and RxCocoa which makes our live easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxReduce"&gt;RxReduce&lt;/a&gt; - Lightweight framework that ease the implementation of a state container pattern in a Reactive Programming compliant way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quickbirdstudios/XCoordinator"&gt;RxCoordinator&lt;/a&gt; -  Powerful navigation library for iOS based on the coordinator pattern.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daltron/RxAlamoRecord"&gt;RxAlamoRecord&lt;/a&gt; Combines the power of the AlamoRecord and RxSwift libraries to create a networking layer that makes interacting with API's easier than ever reactively.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattgallagher/CwlSignal"&gt;CwlSignal&lt;/a&gt; A Swift framework for reactive programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fxm90/LightweightObservable"&gt;LightweightObservable&lt;/a&gt; - A lightweight implementation of an observable sequence that you can subscribe to.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaximKotliar/Bindy"&gt;Bindy&lt;/a&gt; - Simple, lightweight swift bindings with KVO support and easy to read syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/broadwaylamb/OpenCombine"&gt;OpenCombine&lt;/a&gt; — Open source implementation of Apple's Combine framework for processing values over time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-react-like" class="anchor" aria-hidden="true" href="#react-like"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React-Like&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexdrone/Render"&gt;Render&lt;/a&gt; - Swift and UIKit a la React.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BendingSpoons/katana-swift"&gt;Katana&lt;/a&gt; - Swift apps a la React and Redux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mcudich/TemplateKit"&gt;TemplateKit&lt;/a&gt; - React-inspired framework for building component-based user interfaces in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/Komponents"&gt;Komponents &lt;g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png"&gt;📦&lt;/g-emoji&gt;&lt;/a&gt; - React-inspired UIKit Components.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/surfstudio/CoreEvents"&gt;CoreEvents&lt;/a&gt; - Simple library with C#-like events.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxDesiatov/Tokamak"&gt;Tokamak&lt;/a&gt; - React-like framework providing a declarative API for building native UI components with easy to use one-way data binding.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reflection" class="anchor" aria-hidden="true" href="#reflection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reflection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Zewo/Reflection"&gt;Reflection&lt;/a&gt; - Reflection provides an API for advanced reflection at runtime including dynamic construction of types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CharlinFeng/Reflect"&gt;Reflect&lt;/a&gt; - Reflection, Dict2Model, Model2Dict, Archive.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/EVReflection"&gt;EVReflection&lt;/a&gt; - Reflection based JSON encoding and decoding. Including support for NSDictionary, NSCoding, Printable, Hashable and Equatable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnlui/JSONNeverDie"&gt;JSONNeverDie&lt;/a&gt; - Auto reflection tool from JSON to Model, user friendly JSON encoder / decoder, aims to never die.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bradhilton/SwiftKVC"&gt;SwiftKVC&lt;/a&gt; - Key-Value Coding (KVC) for native Swift classes and structs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wickwirew/Runtime"&gt;Runtime&lt;/a&gt; - A Swift Runtime library for viewing type info, and the dynamic getting and setting of properties.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-regex" class="anchor" aria-hidden="true" href="#regex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Regex&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sharplet/Regex"&gt;Regex&lt;/a&gt; - A Swift µframework providing an NSRegularExpression-backed Regex type.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kasei/SwiftRegex"&gt;SwiftRegex&lt;/a&gt; - Perl-like Regex =~ operator for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cezheng/PySwiftyRegex"&gt;PySwiftyRegex&lt;/a&gt; - Easily deal with Regex in Swift in a Pythonic way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crossroadlabs/Regex"&gt;Regex&lt;/a&gt; - Regular expressions for swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brynbellomy/Regex"&gt;Regex&lt;/a&gt; - Regex class for Swift. Wraps NSRegularExpression.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sdk" class="anchor" aria-hidden="true" href="#sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SDK&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-official" class="anchor" aria-hidden="true" href="#official"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/ios-sdk"&gt;Spotify&lt;/a&gt; Spotify iOS SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/SpotifyLogin"&gt;SpotifyLogin&lt;/a&gt; Spotify SDK Login in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/facebook-ios-sdk"&gt;Facebook&lt;/a&gt; Facebook iOS SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/facebook-swift-sdk"&gt;Facebook Swift&lt;/a&gt; Integrate your iOS apps in Swift with Facebook Platform.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/analytics/devguides/collection/ios/v3/" rel="nofollow"&gt;Google Analytics&lt;/a&gt; Google Analytics SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/paypal/PayPal-iOS-SDK"&gt;Paypal iOS SDK&lt;/a&gt; The PayPal Mobile SDKs enable native apps to easily accept PayPal and credit card payments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pocket/Pocket-ObjC-SDK"&gt;Pocket&lt;/a&gt; SDK for saving stuff to Pocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tumblr/TMTumblrSDK"&gt;Tumblr&lt;/a&gt; Library for easily integrating Tumblr data into your iOS or macOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evernote/evernote-cloud-sdk-ios"&gt;Evernote&lt;/a&gt; Evernote SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/box/box-ios-sdk"&gt;Box&lt;/a&gt; iOS + macOS SDK for the Box API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OneDrive/onedrive-sdk-ios"&gt;OneDrive&lt;/a&gt; Live SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stripe/stripe-ios"&gt;Stripe&lt;/a&gt; Stripe bindings for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="#payments"&gt;Venmo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aws-amplify/aws-sdk-ios"&gt;AWS&lt;/a&gt; Amazon Web Services Mobile SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zendesk/zendesk_sdk_ios"&gt;Zendesk&lt;/a&gt; Zendesk Mobile SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dropbox.com/lp/developers" rel="nofollow"&gt;Dropbox&lt;/a&gt; SDKs for Drop-ins and Dropbox Core API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.fabric.io/apple/fabric/overview.html" rel="nofollow"&gt;Fabric by Twitter&lt;/a&gt; Fabric Twitter Kit for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ResearchKit/ResearchKit"&gt;ResearchKit&lt;/a&gt; ResearchKit is an open source software framework that makes it easy to create apps for medical research or for other research projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.goprimer.com/" rel="nofollow"&gt;Primer&lt;/a&gt; - Easy SDK for creating personalized landing screens, signup, and login flows on a visual editor with built in a/b/n testing and analytics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-storage-ios"&gt;Azure&lt;/a&gt; - Client library for accessing Azure Storage on an iOS device.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileBits/onepassword-app-extension"&gt;1Password&lt;/a&gt; - 1Password Extension for iOS Apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carekit-apple/CareKit"&gt;CareKit&lt;/a&gt; - CareKit is an open source software framework for creating apps that help people better understand and manage their health. By Apple.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Shopify/mobile-buy-sdk-ios"&gt;Shopify&lt;/a&gt; - Shopify’s Mobile Buy SDK makes it simple to sell physical products inside your mobile app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pinterest/ios-pdk"&gt;Pinterest&lt;/a&gt; - Pinterest iOS SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaltura/playkit-ios"&gt;playkit-ios&lt;/a&gt; - PlayKit: Kaltura Player SDK for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/algolia/algoliasearch-client-swift"&gt;algoliasearch-client-swift&lt;/a&gt; - Algolia Search API Client for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter-archive/twitter-kit-ios"&gt;twitter-kit-ios&lt;/a&gt; - Twitter Kit is a native SDK to include Twitter content inside mobile apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uber/rides-ios-sdk"&gt;rides-ios-sdk&lt;/a&gt; - Uber Rides iOS SDK (beta).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-unofficial" class="anchor" aria-hidden="true" href="#unofficial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unofficial&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nst/STTwitter"&gt;STTwitter&lt;/a&gt; A stable, mature and comprehensive Objective-C library for Twitter REST API 1.1.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/natesymer/FHSTwitterEngine"&gt;FHSTwitterEngine&lt;/a&gt; Twitter API for Cocoa developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/heyalexchoi/Giphy-iOS"&gt;Giphy&lt;/a&gt; Giphy API client for iOS in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sachinkesiraju/UberKit"&gt;UberKit&lt;/a&gt; - A simple, easy-to-use Objective-C wrapper for the Uber API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shyambhat/InstagramKit"&gt;InstagramKit&lt;/a&gt; - Instagram iOS SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agilie/dribbble-ios-sdk"&gt;DribbbleSDK&lt;/a&gt; - Dribbble iOS SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lukhnos/objectiveflickr"&gt;objectiveflickr&lt;/a&gt; - ObjectiveFlickr, a Flickr API framework for Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pjebs/EasySocial"&gt;Easy Social&lt;/a&gt; - Twitter &amp;amp; Facebook Integration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Constantine-Fry/das-quadrat"&gt;das-quadrat&lt;/a&gt; - A Swift wrapper for Foursquare API. iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/darkcl/SocialLib"&gt;SocialLib&lt;/a&gt; - SocialLib handles sharing message to multiple social media.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ContinuousLearning/PokemonKit"&gt;PokemonKit&lt;/a&gt; - Pokeapi wrapper, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timonus/TJDropbox"&gt;TJDropbox&lt;/a&gt; - A Dropbox v2 client library written in Objective-C&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/github.swift"&gt;GitHub.swift&lt;/a&gt; - &lt;img class="emoji" title=":octocat:" alt=":octocat:" src="https://github.githubassets.com/images/icons/emoji/octocat.png" height="20" width="20" align="absmiddle"&gt; Unofficial GitHub API client in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CloudRail/cloudrail-si-ios-sdk"&gt;CloudRail SI&lt;/a&gt; - Abstraction layer / unified API for multiple API providers. Interfaces eg for Cloud Storage (Dropbox, Google, ...), Social Networks (Facebook, Twitter, ...) and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/96-problems/medium-sdk-swift"&gt;Medium SDK - Swift&lt;/a&gt; - Unofficial Medium API SDK in Swift with sample project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattdonnelly/Swifter"&gt;Swifter&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="bird" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f426.png"&gt;🐦&lt;/g-emoji&gt; A Twitter framework for iOS &amp;amp; macOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvzig/SlackKit"&gt;SlackKit&lt;/a&gt; - a Slack client library for iOS and macOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dingwilson/RandomUserSwift"&gt;RandomUserSwift&lt;/a&gt; - Swift Framework to Generate Random Users - An Unofficial SDK for randomuser.me.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pantuspavel/PPEventRegistryAPI/"&gt;PPEventRegistryAPI&lt;/a&gt; - Swift 3 Framework for Event Registry API (eventregistry.org).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/modo-studio/UnsplashKit"&gt;UnsplashKit&lt;/a&gt; - Swift client for Unsplash.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mike4aday/SwiftlySalesforce"&gt;Swiftly Salesforce&lt;/a&gt; - An easy-to-use framework for building iOS apps that integrate with Salesforce, using Swift and promises.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daltron/Spartan"&gt;Spartan&lt;/a&gt; - An Elegant Spotify Web API Library Written in Swift for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daltron/BigBoard"&gt;BigBoard&lt;/a&gt; - An Elegant Financial Markets Library Written in Swift that makes requests to Yahoo Finance API's under the hood.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saeid/BittrexApiKit"&gt;BittrexApiKit&lt;/a&gt; - Simple and complete Swift wrapper for Bittrex Exchange API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftyVK/SwiftyVK"&gt;SwiftyVK&lt;/a&gt; Library for easy interact with VK social network API written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sleepdefic1t/ARKKit"&gt;ARKKit&lt;/a&gt; - ARK Ecosystem Cryptocurrency API Framework for iOS &amp;amp; macOS, written purely in Swift 4.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnderGoig/SwiftInstagram"&gt;SwiftInstagram&lt;/a&gt; - Swift Client for Instagram API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Awalz/SwiftyArk"&gt;SwiftyArk&lt;/a&gt; - A simple, lightweight, fully-asynchronous cryptocurrency framework for the ARK Ecosystem.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CaptainYukinoshitaHachiman/PerfectSlackAPIClient"&gt;PerfectSlackAPIClient&lt;/a&gt; - A Slack API Client for the Perfect Server-Side Swift Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thecb4/MotherShip"&gt;Mothership&lt;/a&gt; - Tunes Connect Library inspired by FastLane.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rinov/SwiftFlyer"&gt;SwiftFlyer&lt;/a&gt; - An API wrapper for bitFlyer that supports all providing API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylebrowning/waterwheel.swift"&gt;waterwheel.swift&lt;/a&gt; - The Waterwheel Swift SDK provides classes to natively connect iOS, macOS, tvOS, and watchOS applications to Drupal 7 and 8.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sxg/ForecastIO"&gt;ForecastIO&lt;/a&gt; - A Swift library for the Forecast.io Dark Sky API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ethenyl/JamfKit"&gt;JamfKit&lt;/a&gt; - A JSS communication framework written in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/orta/cocoapods-keys"&gt;cocoapods-keys&lt;/a&gt; - A key value store for storing environment and application keys.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simple-machines/simple-touch"&gt;simple-touch&lt;/a&gt; - Very simple swift wrapper for Biometric Authentication Services (Touch ID) on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yankodimitrov/SwiftPasscodeLock"&gt;SwiftPasscodeLock&lt;/a&gt; - An iOS passcode lock with TouchID authentication written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-lifestyle/Smile-Lock"&gt;Smile-Lock&lt;/a&gt; - A library for make a beautiful Passcode Lock View.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dropbox/zxcvbn-ios"&gt;zxcvbn-ios&lt;/a&gt; - A realistic password strength estimator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Techprimate/TPObfuscatedString"&gt;TPObfuscatedString&lt;/a&gt; - Simple String obfuscation using core Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rolandleth/LTHPasscodeViewController"&gt;LTHPasscodeViewController&lt;/a&gt; - An iOS passcode lockscreen replica (from Settings), with TouchID and simple (variable length) / complex support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/karek314/iOS-App-Security-Class"&gt;iOS-App-Security-Class&lt;/a&gt; - Simple class to check if iOS app has been cracked, being debugged or enriched with custom dylib and as well detect jailbroken environment.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasilenkoigor/BiometricAuth"&gt;BiometricAuth&lt;/a&gt; - Simple framework for biometric authentication (via TouchID) in your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/siavashalipour/SAPinViewController"&gt;SAPinViewController&lt;/a&gt; - Simple and easy to use default iOS PIN screen. This simple library allows you to draw a fully customisable PIN screen same as the iOS default PIN view. My inspiration to create this library was form THPinViewController, however SAPinViewController is completely implemented in Swift. Also the main purpose of creating this library was to have simple, easy to use and fully customisable PIN screen.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timoliver/TOPasscodeViewController"&gt;TOPasscodeViewController&lt;/a&gt; - A modal passcode input and validation view controller for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rushisangani/BiometricAuthentication"&gt;BiometricAuthentication&lt;/a&gt; - Use Apple FaceID or TouchID authentication in your app using BiometricAuthentication.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kolesa-team/ios_pinCodeTextField"&gt;KKPinCodeTextField&lt;/a&gt; - A customizable verification code textField for phone verification codes, passwords etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/umbri/Vault"&gt;&lt;g-emoji class="g-emoji" alias="file_cabinet" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5c4.png"&gt;🗄&lt;/g-emoji&gt; Vault&lt;/a&gt; - Simple and Secure container for passwords and other sensitive data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VirgilSecurity/virgil-sdk-pfs-x"&gt;Virgil SWIFT PFS SDK&lt;/a&gt; - An SDK that allows developers to add the Perfect Forward Secrecy (PFS) technologies to their digital solutions to protect previously intercepted traffic from being decrypted even if the main Private Key is compromised.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VirgilSecurity/virgil-sdk-x"&gt;Virgil Security Objective-C/Swift SDK&lt;/a&gt; - An SDK which allows developers to add full end-to-end security to their existing digital solutions to become HIPAA and GDPR compliant and more using Virgil API.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-encryption" class="anchor" aria-hidden="true" href="#encryption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Encryption&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Gurpartap/AESCrypt-ObjC"&gt;AESCrypt-ObjC&lt;/a&gt; - A simple and opinionated AES encrypt / decrypt Objective-C class that just works.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iosdevzone/IDZSwiftCommonCrypto"&gt;IDZSwiftCommonCrypto&lt;/a&gt; - A wrapper for Apple's Common Crypto library written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Arcane"&gt;Arcane&lt;/a&gt; - Lightweight wrapper around CommonCrypto in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mpurland/SwiftMD5"&gt;SwiftMD5&lt;/a&gt; - A pure Swift implementation of MD5.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/SwiftHash"&gt;SwiftHash&lt;/a&gt; - Hash in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jancassio/SweetHMAC"&gt;SweetHMAC&lt;/a&gt; - A tiny and easy to use Swift class to encrypt strings using HMAC algorithms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soyersoyer/SwCrypt"&gt;SwCrypt&lt;/a&gt; - RSA public/private key generation, RSA, AES encryption/decryption, RSA sign/verify in Swift with CommonCrypto in iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftP2P/SwiftSSL"&gt;SwiftSSL&lt;/a&gt; - An Elegant crypto toolkit in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TakeScoop/SwiftyRSA"&gt;SwiftyRSA&lt;/a&gt; - RSA public/private key encryption in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mikaoj/EnigmaKit"&gt;EnigmaKit&lt;/a&gt; - Enigma encryption in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cossacklabs/themis"&gt;Themis&lt;/a&gt; - High-level crypto library, providing basic asymmetric encryption, secure messaging with forward secrecy and secure data storage, supports iOS/macOS, Android and different server side platforms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pjebs/Obfuscator-iOS"&gt;Obfuscator-iOS&lt;/a&gt; - Secure your app by obfuscating all the hard-coded security-sensitive strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jedisct1/swift-sodium"&gt;swift-sodium&lt;/a&gt; - Safe and easy to use crypto for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzyzanowskim/CryptoSwift"&gt;CryptoSwift&lt;/a&gt; - Crypto related functions and helpers for Swift implemented in Swift programming language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgl0v/SCrypto"&gt;SCrypto&lt;/a&gt; - Elegant Swift interface to access the CommonCrypto routines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/SipHash"&gt;SipHash&lt;/a&gt; - Simple and secure hashing in Swift with the SipHash algorithm.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RNCryptor/RNCryptor"&gt;RNCryptor&lt;/a&gt; - CCCryptor (AES encryption) wrappers for iOS and Mac in Swift. -- For ObjC, see RNCryptor/RNCryptor-objc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ImKcat/CatCrypto"&gt;CatCrypto&lt;/a&gt; - An easy way for hashing and encryption.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trailofbits/SecureEnclaveCrypto"&gt;SecureEnclaveCrypto&lt;/a&gt; - Demonstration library for using the Secure Enclave on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/4taras4/RSASwiftGenerator"&gt;RSASwiftGenerator&lt;/a&gt; - Util for generation RSA keys on your client and save to keychain or cover into Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VirgilSecurity/virgil-crypto-x"&gt;Virgil Security Objective-C/Swift Crypto Library&lt;/a&gt; - A high-level cryptographic library that allows to perform all necessary operations for securely storing and transferring data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airsidemobile/JOSESwift"&gt;JOSESwift&lt;/a&gt; - A framework for the JOSE standards JWS, JWE, and JWK written in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-keychain" class="anchor" aria-hidden="true" href="#keychain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keychain&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kishikawakatsumi/UICKeyChainStore"&gt;UICKeyChainStore&lt;/a&gt; - UICKeyChainStore is a simple wrapper for Keychain on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/Valet"&gt;Valet&lt;/a&gt; - Securely store data in the iOS or macOS Keychain without knowing a thing about how the Keychain works.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewpalmer/Locksmith"&gt;Locksmith&lt;/a&gt; - A powerful, protocol-oriented library for working with the keychain in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kishikawakatsumi/KeychainAccess"&gt;KeychainAccess&lt;/a&gt; - Simple Swift wrapper for Keychain that works on iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Keychains"&gt;Keychains&lt;/a&gt; - Because you should care... about the security... of your shit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/granoff/Lockbox"&gt;Lockbox&lt;/a&gt; - Objective-C utility class for storing data securely in the key chain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soffes/SAMKeychain"&gt;SAMKeychain&lt;/a&gt; - Simple Objective-C wrapper for the keychain that works on Mac and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jrendel/SwiftKeychainWrapper"&gt;SwiftKeychainWrapper&lt;/a&gt; - A simple wrapper for the iOS Keychain to allow you to use it in a similar fashion to User Defaults.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andriyslyusar/SwiftyKeychainKit"&gt;SwiftyKeychainKit&lt;/a&gt; - Keychain wrapper with the benefits of static typing and convenient syntax, support for primitive types, Codable, NSCoding.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-server" class="anchor" aria-hidden="true" href="#server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Server&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Server side projects supporting coroutines, Linux, MacOS, iOS, Apache Modules, Async calls, libuv and more.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect"&gt;Perfect&lt;/a&gt; - Server-side Swift. The Perfect library, application server, connectors and example apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/httpswift/swifter"&gt;Swifter&lt;/a&gt; - Tiny http server engine written in Swift programming language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robbiehanson/CocoaHTTPServer"&gt;CocoaHTTPServer&lt;/a&gt; - A small, lightweight, embeddable HTTP server for macOS or iOS applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef-archive/Curassow"&gt;Curassow&lt;/a&gt; - Swift HTTP server using the pre-fork worker model.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zewo/Zewo"&gt;Zewo&lt;/a&gt; - Lightweight library for web server applications in Swift on macOS and Linux powered by coroutines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vapor/vapor"&gt;Vapor&lt;/a&gt; - Elegant web framework for Swift that works on iOS, macOS, and Ubuntu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/takebayashi/swiftra"&gt;swiftra&lt;/a&gt; - Sinatra-like DSL for developing web apps in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elliottminns/blackfire"&gt;blackfire&lt;/a&gt; - A fast HTTP web server based on Node.js and Express written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huytd/swift-http"&gt;swift-http&lt;/a&gt; - HTTP Implementation for Swift on Linux and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yoseob/Trevi"&gt;Trevi&lt;/a&gt; - libuv base Swift web HTTP server framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crossroadlabs/Express"&gt;Express&lt;/a&gt; - Swift Express is a simple, yet unopinionated web application server written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/izqui/Taylor"&gt;Taylor&lt;/a&gt; - A lightweight library for writing HTTP web servers with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef-archive/Frank"&gt;Frank&lt;/a&gt; - Frank is a DSL for quickly writing web applications in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/Kitura"&gt;Kitura&lt;/a&gt; - A Swift Web Framework and HTTP Server.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sauliusgrigaitis/Swifton"&gt;Swifton&lt;/a&gt; - A Ruby on Rails inspired Web Framework for Swift that runs on Linux and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnno1962/Dynamo"&gt;Dynamo&lt;/a&gt; - High Performance (nearly)100% Swift Web server supporting dynamic content.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vapor/redis"&gt;Redis&lt;/a&gt; - Pure-Swift Redis client implemented from the original protocol spec. macOS + Linux compatible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colemancda/NetworkObjects"&gt;NetworkObjects&lt;/a&gt; - Swift backend / server framework (Pure Swift, Supports Linux).&lt;/li&gt;
&lt;li&gt;&lt;a href="http://noze.io" rel="nofollow"&gt;Noze.io&lt;/a&gt; - Evented I/O streams a.k.a. Node.js for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skylab-inc/Lightning"&gt;Lightning&lt;/a&gt; - A Swift Multiplatform Web and Networking Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twostraws/swiftgd"&gt;SwiftGD&lt;/a&gt; - A simple Swift wrapper for libgd.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BrettRToomey/Jobs"&gt;Jobs&lt;/a&gt; - A job system for Swift backends.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ApacheExpress/ApacheExpress"&gt;ApacheExpress&lt;/a&gt; - Write Apache Modules in Swift!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisspol/GCDWebServer"&gt;GCDWebServer&lt;/a&gt; - Lightweight GCD based HTTP server for macOS &amp;amp; iOS (includes web based uploader &amp;amp; WebDAV server).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/envoy/Embassy"&gt;Embassy&lt;/a&gt; - Super lightweight async HTTP server library in pure Swift runs in iOS / MacOS / Linux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amzn/smoke-framework"&gt;smoke-framework&lt;/a&gt; - A light-weight server-side service framework written in the Swift programming language.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-text" class="anchor" aria-hidden="true" href="#text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Text&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/twitter-text"&gt;Twitter Text Obj&lt;/a&gt; - An Objective-C implementation of Twitter's text processing library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jverkoey/nimbus"&gt;Nimbus&lt;/a&gt; - Nimbus is a toolkit for experienced iOS software designers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/diy/nsstringemojize"&gt;NSStringEmojize&lt;/a&gt; - A category on NSString to convert Emoji Cheat Sheet codes to their equivalent Unicode characters.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mdiep/MMMarkdown"&gt;MMMarkdown&lt;/a&gt; - An Objective-C static library for converting Markdown to HTML.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cocoanetics/DTCoreText"&gt;DTCoreText&lt;/a&gt; - Methods to allow using HTML code with CoreText.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cocoanetics/DTRichTextEditor"&gt;DTRichTextEditor&lt;/a&gt; - A rich-text editor for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neerajbaid/NBEmojiSearchView"&gt;NBEmojiSearchView&lt;/a&gt; - A searchable emoji dropdown view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joshualat/Pluralize.swift"&gt;Pluralize.swift&lt;/a&gt; - Great Swift String Pluralize Extension.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cjwirth/RichEditorView"&gt;RichEditorView&lt;/a&gt; - RichEditorView is a simple, modular, drop-in UIView subclass for Rich Text Editing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danthorpe/Money"&gt;Money&lt;/a&gt; - Swift value types for working with money &amp;amp; currency.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/PhoneNumberKit"&gt;PhoneNumberKit&lt;/a&gt; - A Swift framework for parsing, formatting and validating international phone numbers. Inspired by Google's libphonenumber.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYText"&gt;YYText&lt;/a&gt; - Powerful text framework for iOS to display and edit rich text.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Format"&gt;Format&lt;/a&gt; - A Swift Formatter Kit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zats/Tribute"&gt;Tribute&lt;/a&gt; - Programmatic creation of NSAttributedString doesn't have to be a pain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dasmer/EmojiKit"&gt;EmojiKit&lt;/a&gt; - Effortless emoji-querying in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/Roman"&gt;Roman&lt;/a&gt; - Seamless Roman numeral conversion in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nnhubbard/ZSSRichTextEditor"&gt;ZSSRichTextEditor&lt;/a&gt; - A beautiful rich text WYSIWYG editor for iOS with a syntax highlighted source view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cee/pangu.objective-c"&gt;pangu.Objective-C&lt;/a&gt; - Paranoid text spacing in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amayne/SwiftString"&gt;SwiftString&lt;/a&gt; - A comprehensive, lightweight string extension for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/macteo/Marklight"&gt;Marklight&lt;/a&gt; - Markdown syntax highlighter for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/indragiek/MarkdownTextView"&gt;MarkdownTextView&lt;/a&gt; - Rich Markdown editing control for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/TextAttributes"&gt;TextAttributes&lt;/a&gt; - An easier way to compose attributed strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fdzsergio/Reductio"&gt;Reductio&lt;/a&gt; - Automatic summarizer text in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftStudies/SmarkDown"&gt;SmarkDown&lt;/a&gt; - A Pure Swift implementation of the markdown mark-up language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SimonFairbairn/SwiftyMarkdown"&gt;SwiftyMarkdown&lt;/a&gt; - Converts Markdown files and strings into NSAttributedString.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szweier/SZMentions"&gt;SZMentions&lt;/a&gt; - Library to help handle mentions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szweier/SZMentionsSwift"&gt;SZMentionsSwift&lt;/a&gt; - Library to help handle mentions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/henrinormak/Heimdall"&gt;Heimdall&lt;/a&gt; - Heimdall is a wrapper around the Security framework for simple encryption/decryption operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/T-Pham/NoOptionalInterpolation"&gt;NoOptionalInterpolation&lt;/a&gt; - Get rid of "Optional(...)" and "nil" in string interpolation. Easy pluralization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Smile"&gt;Smile&lt;/a&gt; Emoji in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/iso8601"&gt;ISO8601&lt;/a&gt; Super lightweight ISO8601 Date Formatter in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ekhoo/Translucid"&gt;Translucid&lt;/a&gt; - Lightweight library to set an Image as text background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/FormatterKit"&gt;FormatterKit&lt;/a&gt; - &lt;code&gt;stringWithFormat:&lt;/code&gt; for the sophisticated hacker set.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rightpoint/BonMot"&gt;BonMot&lt;/a&gt; - Beautiful, easy attributed strings in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gkaimakas/SwiftValidators"&gt;SwiftValidators&lt;/a&gt; - String validation for iOS developed in Swift. Inspired by &lt;a href="https://www.npmjs.com/package/validator" rel="nofollow"&gt;validator.js&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kazuhiro4949/StringStylizer"&gt;StringStylizer&lt;/a&gt; - Type strict builder class for NSAttributedString.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eddiekaiger/SwiftyAttributes"&gt;SwiftyAttributes&lt;/a&gt; - Swift extensions that make it a breeze to work with attributed strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bmoliveira/MarkdownKit"&gt;MarkdownKit&lt;/a&gt; - A simple and customizable Markdown Parser for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/indragiek/CocoaMarkdown"&gt;CocoaMarkdown&lt;/a&gt; - Markdown parsing and rendering for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruddfawcett/Notepad"&gt;Notepad&lt;/a&gt; - A fully themeable markdown editor with live syntax highlighting.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krizhanovskii/KKStringValidator"&gt;KKStringValidator&lt;/a&gt; - Fast and simple string validation for iOS. With UITextField extension.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cosmo/ISO8859"&gt;ISO8859&lt;/a&gt; - Convert ISO8859 1-16 Encoded Text to String in Swift. Supports iOS, tvOS, watchOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xoudini/emojica"&gt;Emojica&lt;/a&gt; - Replace standard emoji in strings with a custom emoji set, such as &lt;a href="https://github.com/twitter/twemoji"&gt;Twemoji&lt;/a&gt; or &lt;a href="https://github.com/joypixels/emojione"&gt;EmojiOne&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/SwiftRichString"&gt;SwiftRichString&lt;/a&gt; - Elegant &amp;amp; Painless Attributed Strings Management Library in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iziz/libPhoneNumber-iOS"&gt;libPhoneNumber-iOS&lt;/a&gt; - iOS port from libphonenumber (Google's phone number handling library).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/AttributedTextView"&gt;AttributedTextView&lt;/a&gt; - Easiest way to create an attributed UITextView with support for multiple links (including hashtags and mentions).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dimpiax/StyleDecorator"&gt;StyleDecorator&lt;/a&gt; - Design string simply by linking attributes to needed parts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mathewsanders/Mustard"&gt;Mustard&lt;/a&gt; - Mustard is a Swift library for tokenizing strings when splitting by whitespace doesn't cut it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RedMadRobot/input-mask-ios"&gt;Input Mask&lt;/a&gt; - Pattern-based user input formatter, parser and validator for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/Attributed"&gt;Attributed&lt;/a&gt; - Modern Swift µframework for attributed strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/psharanda/Atributika"&gt;Atributika&lt;/a&gt; - Easily build NSAttributedString by detecting and styling HTML-like tags, hashtags, mentions, RegExp or NSDataDetector patterns.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Guitar"&gt;Guitar&lt;/a&gt; - A Cross-Platform String Library Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaiomedau/realtime-currency-formatter-objc"&gt;RealTimeCurrencyFormatter&lt;/a&gt; - An ObjC international currency formatting utility.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/Down"&gt;Down&lt;/a&gt; - Blazing fast Markdown rendering in Swift, built upon cmark.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/m2mobi/Marky-Mark"&gt;Marky Mark&lt;/a&gt; - Highly customizable Markdown parsing and native rendering in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitaoouchi/MarkdownView"&gt;MarkdownView&lt;/a&gt; - Markdown View for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/Highlighter"&gt;Highlighter&lt;/a&gt; - Highlight whatever you want! Highlighter will magically find UI objects such as UILabel, UITextView, UITexTfield, UIButton in your UITableViewCell or other Class.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/Sprinter"&gt;Sprinter&lt;/a&gt; - A library for formatting strings on iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raspu/Highlightr"&gt;Highlightr&lt;/a&gt; - An iOS &amp;amp; macOS syntax highlighter, supports 176 languages and comes with 79 styles.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krisk/fuse-swift"&gt;fuse-swift&lt;/a&gt; - A lightweight fuzzy-search library, with zero dependencies.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EFPrefix/EFMarkdown"&gt;EFMarkdown&lt;/a&gt; - A lightweight Markdown library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jkalash/croc"&gt;Croc&lt;/a&gt; - A lightweight Swift library for Emoji parsing and querying.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FormatterKit/PostalCodeValidator"&gt;PostalCodeValidator&lt;/a&gt; - A validator for postal codes with support for 200+ regions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-font" class="anchor" aria-hidden="true" href="#font"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Font&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/FontBlaster"&gt;FontBlaster&lt;/a&gt; - Programmatically load custom fonts into your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kitasuke/GoogleMaterialIconFont"&gt;GoogleMaterialIconFont&lt;/a&gt; - Google Material Design Icons for Swift and ObjC project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexdrone/ios-fontawesome"&gt;ios-fontawesome&lt;/a&gt; - NSString+FontAwesome.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thii/FontAwesome.swift"&gt;FontAwesome.swift&lt;/a&gt; - Use FontAwesome in your Swift projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morizotter/SwiftFontName"&gt;SwiftFontName&lt;/a&gt; - OS font complements library. Localized font supported.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/0x73/SwiftIconFont"&gt;SwiftIconFont&lt;/a&gt; - Icons fonts for iOS (FontAwesome, Iconic, Ionicon, Octicon, Themify, MapIcon, MaterialIcon).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PrideChung/FontAwesomeKit"&gt;FontAwesomeKit&lt;/a&gt; - Icon font library for iOS. Currently supports Font-Awesome, Foundation icons, Zocial, and ionicons.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/home-assistant/Iconic"&gt;Iconic&lt;/a&gt; - Auto-generated icon font library for iOS, watchOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dekatotoro/GoogleMaterialDesignIcons"&gt;GoogleMaterialDesignIcons&lt;/a&gt; - Google Material Design Icons Font for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitaoouchi/OcticonsKit"&gt;OcticonsKit&lt;/a&gt; - Use Octicons as UIImage / UIFont in your projects with Swifty manners.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitaoouchi/IoniconsKit"&gt;IoniconsKit&lt;/a&gt; - Use Ionicons as UIImage / UIFont in your projects with Swifty manners.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qiuncheng/FontAwesomeKit.Swift"&gt;FontAwesomeKit.Swift&lt;/a&gt; - A better choice for iOS Developer to use FontAwesome Icon.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/UIFontComplete"&gt;UIFontComplete&lt;/a&gt; - Font management (System &amp;amp; Custom) for iOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/UglyTroLL/Swicon"&gt;Swicon&lt;/a&gt; - Use 1600+ icons (and more!) from FontAwesome and Google Material Icons in your swift/iOS project in an easy and space-efficient way!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ranesr/SwiftIcons"&gt;SwiftIcons&lt;/a&gt; - A library for using different font icons: dripicons, emoji, font awesome, icofont, ionicons, linear icons, map icons, material icons, open iconic, state, weather. It supports UIImage, UIImageView, UILabel, UIButton, UISegmentedControl, UITabBarItem, UISlider, UIBarButtonItem, UIViewController, UITextfield, UIStepper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Vaberer/Font-Awesome-Swift"&gt;Font-Awesome-Swift&lt;/a&gt; - Font Awesome swift library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/josejuanqm/JQSwiftIcon"&gt;JQSwiftIcon&lt;/a&gt; - Icon Fonts on iOS using string interpolation written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Flight-School/Money"&gt;Money&lt;/a&gt; - A precise, type-safe representation of a monetary amount in a given currency.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-tdd--bdd" class="anchor" aria-hidden="true" href="#tdd--bdd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TDD / BDD&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kiwi-bdd/Kiwi"&gt;Kiwi&lt;/a&gt; - A behavior-driven development library for iOS development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/specta/specta"&gt;Specta&lt;/a&gt; - A light-weight TDD / BDD framework for Objective-C &amp;amp; Cocoa.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Quick/Quick"&gt;Quick&lt;/a&gt; - A behavior-driven development framework for Swift and Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonreid/XcodeCoverage"&gt;XcodeCoverage&lt;/a&gt; - Code coverage for Xcode projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AliSoftware/OHHTTPStubs"&gt;OHHTTPStubs&lt;/a&gt; - Stub your network requests easily! Test your apps with fake network data and custom response time, response code and headers!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Skyscanner/Dixie"&gt;Dixie&lt;/a&gt; - Dixie is an open source Objective-C testing framework for altering object behaviours.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gh-unit/gh-unit"&gt;gh-unit&lt;/a&gt; - Test Framework for Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Quick/Nimble"&gt;Nimble&lt;/a&gt; - A Matcher Framework for Swift and Objective-C&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/railsware/Sleipnir"&gt;Sleipnir&lt;/a&gt; - BDD-style framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/SwiftCheck"&gt;SwiftCheck&lt;/a&gt; - QuickCheck for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Quick/Spry"&gt;Spry&lt;/a&gt; - A Mac and iOS Playgrounds Unit Testing library based on Nimble.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-corelibs-xctest"&gt;swift-corelibs-xctest&lt;/a&gt; - The XCTest Project, A Swift core library for providing unit test support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WhiskerzAB/PlaygroundTDD"&gt;PlaygroundTDD&lt;/a&gt; - Small library to easily run your tests directly within a Playground.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ab-testing" class="anchor" aria-hidden="true" href="#ab-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A/B Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KeepSafe/Switchboard"&gt;Switchboard&lt;/a&gt; - Switchboard - easy and super light weight A/B testing for your mobile iPhone or android app. This mobile A/B testing framework allows you with minimal servers to run large amounts of mobile users.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattt/SkyLab"&gt;SkyLab&lt;/a&gt; - Multivariate &amp;amp; A/B Testing for iOS and Mac.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mindsnacks/MSActiveConfig"&gt;MSActiveConfig&lt;/a&gt; - Remote configuration and A/B Testing framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-mp/ABKit"&gt;ABKit&lt;/a&gt; - AB testing framework for iOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ui-testing" class="anchor" aria-hidden="true" href="#ui-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://appium.io/" rel="nofollow"&gt;appium&lt;/a&gt; - Appium is an open source test automation framework for use with native and hybrid mobile apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serhatbolsu/robotframework-appiumlibrary"&gt;robotframework-appiumlibrary&lt;/a&gt; - AppiumLibrary is an appium testing library for RobotFramework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cucumber.io/" rel="nofollow"&gt;Cucumber&lt;/a&gt; - Behavior driver development for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kif-framework/KIF"&gt;Kif&lt;/a&gt; - An iOS Functional Testing Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/inkling/Subliminal"&gt;Subliminal&lt;/a&gt; - An understated approach to iOS integration testing.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ios-driver.github.io/ios-driver/index.html" rel="nofollow"&gt;ios-driver&lt;/a&gt; - Test any iOS native, hybrid, or mobile web application using Selenium / WebDriver.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnno1962/Remote"&gt;Remote&lt;/a&gt; - Control your iPhone from inside Xcode for end-to-end testing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linkedin/LayoutTest-iOS"&gt;LayoutTest-iOS&lt;/a&gt; - Write unit tests which test the layout of a view in multiple configurations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/EarlGrey"&gt;EarlGrey&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="tea" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f375.png"&gt;🍵&lt;/g-emoji&gt; iOS UI Automation Test Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joemasilotti/UI-Testing-Cheat-Sheet"&gt;UI Testing Cheat Sheet&lt;/a&gt; - How do I test this with UI Testing?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linkedin/bluepill"&gt;Bluepill&lt;/a&gt; - Bluepill is a reliable iOS testing tool that runs UI tests using multiple simulators on a single machine.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flawlessapp.io/" rel="nofollow"&gt;Flawless App&lt;/a&gt; - tool for visual quality check of mobile app in a real-time. It compares initial design with the actual implementation right inside iOS simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morizotter/TouchVisualizer"&gt;TouchVisualizer&lt;/a&gt; - Lightweight touch visualization library in Swift. A single line of code and visualize your touches!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/UITestHelper"&gt;UITestHelper&lt;/a&gt; - UITest helper library for creating readable and maintainable tests.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nalexn/ViewInspector"&gt;ViewInspector&lt;/a&gt; - Runtime inspection and unit testing of SwiftUI views&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-testing" class="anchor" aria-hidden="true" href="#other-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Palleas/NaughtyKeyboard"&gt;NaughtyKeyboard&lt;/a&gt; - The Big List of Naughty Strings is a list of strings which have a high probability of causing issues when used as user-input data. This is a keyboard to help you test your app from your iOS device.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/Fakery"&gt;Fakery&lt;/a&gt; - Swift fake data generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/DVR"&gt;DVR&lt;/a&gt; - Network testing for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Brightify/Cuckoo"&gt;Cuckoo&lt;/a&gt; - First boilerplate-free mocking framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Velhotes/Vinyl"&gt;Vinyl&lt;/a&gt; - Network testing à la VCR in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sabirvirtuoso/Mockit"&gt;Mockit&lt;/a&gt; - A simple mocking framework for Swift, inspired by the famous Mockito for Java.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxsokolov/Cribble"&gt;Cribble&lt;/a&gt; - Swifty tool for visual testing iPhone and iPad apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashfurrow/second_curtain"&gt;second_curtain&lt;/a&gt; - Upload failing iOS snapshot tests cases to S3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane-community/trainer"&gt;trainer&lt;/a&gt; - Convert xcodebuild plist files to JUnit reports.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/buildasaurs/Buildasaur"&gt;Buildasaur&lt;/a&gt; - Automatic testing of your Pull Requests on GitHub and BitBucket using Xcode Server. Keep your team productive and safe. Get up and running in minutes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devlucky/Kakapo"&gt;Kakapo&lt;/a&gt; - Dynamically Mock server behaviors and responses in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bizz84/AcceptanceMark"&gt;AcceptanceMark&lt;/a&gt; Tool to auto-generate Xcode tests classes from Markdown tables.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metova/MetovaTestKit"&gt;MetovaTestKit&lt;/a&gt; - A collection of testing utilities to turn crashing test suites into failing test suites.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kuniwak/MirrorDiffKit"&gt;MirrorDiffKit&lt;/a&gt; - Pretty diff between any structs or classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tooploox/SnappyTestCase"&gt;SnappyTestCase&lt;/a&gt; - iOS Simulator type agnostic snapshot testing, built on top of the FBSnapshotTestCase.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shindyu/XCTestExtensions"&gt;XCTestExtensions&lt;/a&gt; - XCTestExtensions is a Swift extension that provides convenient assertions for writing Unit Test.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ocmock.org" rel="nofollow"&gt;OCMock&lt;/a&gt; - Mock objects for Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/Mockingjay"&gt;Mockingjay&lt;/a&gt; - An elegant library for stubbing HTTP requests with ease in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lickability/PinpointKit"&gt;PinpointKit&lt;/a&gt; - Let your testers and users send feedback with annotated screenshots and logs using a simple gesture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uber/ios-snapshot-test-case"&gt;iOS Snapshot Test Case&lt;/a&gt; — Snapshot test your UIViews and CALayers on iOS and tvOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-ui" class="anchor" aria-hidden="true" href="#ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Grouper/FlatUIKit"&gt;FlatUIKit&lt;/a&gt; - A collection of awesome flat UI components for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/erichoracek/Motif"&gt;Motif&lt;/a&gt; - A lightweight and customizable JSON stylesheet framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TextureGroup/Texture"&gt;Texture&lt;/a&gt; - Smooth asynchronous user interfaces for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skywinder/GaugeKit"&gt;GaugeKit&lt;/a&gt; - Customizable gauges. Easy reproduce Apple's style gauges.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/SAHistoryNavigationViewController"&gt;SAHistoryNavigationViewController&lt;/a&gt; - SAHistoryNavigationViewController realizes iOS task manager like UI in UINavigationContoller,3D Touch Compatible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/iCarousel"&gt;iCarousel&lt;/a&gt; - A simple, highly customisable, data-driven 3D carousel for iOS and Mac OS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devinross/tapkulibrary"&gt;tapkulibrary&lt;/a&gt; - tap + haiku = tapku, a well crafted open source iOS framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/HorizontalDial"&gt;HorizontalDial&lt;/a&gt; - A horizontal scroll dial like Instagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://componentkit.org/" rel="nofollow"&gt;ComponentKit&lt;/a&gt; - A React-Inspired View Framework for iOS, by Facebook.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cwRichardKim/RKNotificationHub"&gt;RKNotificationHub&lt;/a&gt; - Make any UIView a full fledged notification center.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hughbe/phone-number-picker"&gt;phone-number-picker&lt;/a&gt; - A simple and easy to use view controller enabling you to enter a phone number with a country code similar to WhatsApp written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-mtl/EXTView"&gt;EXTView&lt;/a&gt; - Extended UIView for Interface Builder by using IB_DESIGNABLE and IBInspectable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boris-Em/BEMCheckBox#sample-app"&gt;BEMCheckBox&lt;/a&gt; - Tasteful Checkbox for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DroidsOnRoids/MPParallaxView"&gt;MPParallaxView&lt;/a&gt; - Apple TV Parallax effect in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/Splitflap"&gt;Splitflap&lt;/a&gt; - A simple split-flap display for your Swift applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/EZSwipeController"&gt;EZSwipeController&lt;/a&gt; - UIPageViewController like Snapchat/Tinder/iOS Main Pages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devinross/curry"&gt;Curry&lt;/a&gt; - Curry is a framework built to enhance and compliment Foundation and UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Pages"&gt;Pages&lt;/a&gt; - UIPageViewController made simple.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Karumi/BothamUI"&gt;BothamUI&lt;/a&gt; - Model View Presenter Framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/collinhundley/APCustomBlurView"&gt;APCustomBlurView&lt;/a&gt; - A subclass of UIVisualEffectView with customizable blur radius.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antiguab/BAFluidView"&gt;BAFluidView&lt;/a&gt; - UIView that simulates a 2D view of a fluid in motion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wongzigii/WZDraggableSwitchHeaderView"&gt;WZDraggableSwitchHeaderView&lt;/a&gt; - Showing status for switching between viewControllers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SergioChan/SCTrelloNavigation"&gt;SCTrelloNavigation&lt;/a&gt; - An iOS native implementation of a Trello Animated Navagation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Spots"&gt;Spots&lt;/a&gt; - Spots is a view controller framework that makes your setup and future development blazingly fast.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alterplay/APAddressBook"&gt;APAddressBook&lt;/a&gt; - Easy access to iOS address book.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azuritul/AZExpandableIconListView"&gt;AZExpandableIconListView&lt;/a&gt; - An expandable/collapsible view component written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thinkclay/FlourishUI"&gt;FlourishUI&lt;/a&gt; - A highly configurable and out-of-the-box-pretty UI library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/navigation-stack"&gt;Navigation Stack&lt;/a&gt; - Navigation Stack is a stack-modeled navigation controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/UIView-draggable"&gt;UIView-draggable&lt;/a&gt; - UIView category that adds dragging capabilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/PeekPop"&gt;PeekPop&lt;/a&gt; - Backwards-compatible Peek and Pop.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ipraba/EPSignature"&gt;EPSignature&lt;/a&gt; - Signature component for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nevyn/CoreDragon"&gt;CoreDragon&lt;/a&gt;  - Stop using context menus. Drag and drop instead, even between apps!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/EVFaceTracker"&gt;EVFaceTracker&lt;/a&gt; - Calculate the distance and angle of your device with regards to your face.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/Fashion"&gt;Fashion&lt;/a&gt; - Fashion accessories and beauty tools to share and reuse UI styles in a Swifty way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wangshengjia/LeeGo"&gt;LeeGo&lt;/a&gt; - Declarative, configurable &amp;amp; highly reusable UI development as making Lego bricks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/manuelescrig/MEVHorizontalContacts"&gt;MEVHorizontalContacts&lt;/a&gt; - An iOS UICollectionViewLayout subclass to show a list of contacts with configurable expandable menu items.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RamonGilabert/Ripple"&gt;Ripple&lt;/a&gt; - Remember there's no such thing as a small act of kindness. Every act creates a ripple with no logical end.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kronik/ScalePicker"&gt;ScalePicker&lt;/a&gt; - Generic scale and a handy float-value picker for any iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/VisualEffectView"&gt;VisualEffectView&lt;/a&gt; - UIVisualEffectView subclass with tint color.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PureSwift/Cacao"&gt;Cacao&lt;/a&gt; - Pure Swift Cross-platform UIKit (Cocoa Touch) implementation (Supports Linux).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sahandnayebaziz/StateView"&gt;StateView&lt;/a&gt; - Views that automatically update themselves.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/calimarkus/JDFlipNumberView"&gt;JDFlipNumberView&lt;/a&gt; - Representing analog flip numbers like airport/trainstation displays.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/instant-solutions/ISTimeline"&gt;ISTimeline&lt;/a&gt; - Simple timeline view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/atljeremy/JFCardSelectionViewController"&gt;JFCardSelectionViewController&lt;/a&gt; - A fancy collection style view controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agordeev/DCKit"&gt;DCKit&lt;/a&gt; - Set of iOS controls, which have useful IBInspectable properties. Written on Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Guzlan/BackgroundVideoiOS"&gt;BackgroundVideoiOS&lt;/a&gt; - A swift and objective-C object that lets you add a background video to iOS views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Draveness/NightNight"&gt;NightNight&lt;/a&gt; - Elegant way to integrate night mode to swift projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wxxsw/SwiftTheme"&gt;SwiftTheme&lt;/a&gt; - Powerful theme/skin manager for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/forkingdog/FDStackView"&gt;FDStackView&lt;/a&gt; - Use UIStackView directly in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/YahooArchive/YangMingShan"&gt;YangMingShan&lt;/a&gt; - YangMingShan is a collection of iOS UI components that we created while building Yahoo apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tombenner/nui"&gt;nui&lt;/a&gt; - Style iOS apps with a stylesheet, similar to CSS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redbeard.io/" rel="nofollow"&gt;RedBeard&lt;/a&gt; - It's a complete framework that takes away much of the pain of getting a beautiful, powerful iOS App crafted.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Material"&gt;Material&lt;/a&gt; - Material is an animation and graphics framework that allows developers to easily create beautiful applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qmathe/DistancePicker"&gt;DistancePicker&lt;/a&gt; - Custom control to select a distance with a pan gesture, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nsomar/OAStackView"&gt;OAStackView&lt;/a&gt; - OAStackView tries to port back the stackview to iOS 7+. OAStackView aims at replicating all the features in UIStackView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/146BC/StyleKit"&gt;StyleKit&lt;/a&gt; - StyleKit is a microframework that enables you to style your applications using a simple JSON file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hirohisa/PageController"&gt;PageController&lt;/a&gt; - Infinite paging controller, scrolling through contents and title bar scrolls with a delay.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mariohahn/StatusProvider"&gt;StatusProvider&lt;/a&gt; - Protocol to handle initial Loadings, Empty Views and Error Handling in a ViewController &amp;amp; views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scamps88/ASBubbleDrag"&gt;ASBubbleDrag&lt;/a&gt; - round icon drag control (made in swift) dock style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bridger/StackLayout"&gt;StackLayout&lt;/a&gt; - An alternative to UIStackView for common Auto Layout patterns.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boris-Em/NightView"&gt;NightView&lt;/a&gt; - Dazzling Nights on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dingwilson/SwiftVideoBackground"&gt;SwiftVideoBackground&lt;/a&gt; - Easy to Use UIView subclass for implementing a video background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mrigdon/MRArticleViewController"&gt;MRArticleViewController&lt;/a&gt; - Easily create UIViewControllers for news articles similar to those in the News app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OrRon/ConfettiView"&gt;ConfettiView&lt;/a&gt; - Confetti View lets you create a magnificent confetti view in your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BohdanOrlov/BouncyPageViewController"&gt;BouncyPageViewController&lt;/a&gt; - Page view controller with bounce effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rolandleth/LTHRadioButton"&gt;LTHRadioButton&lt;/a&gt; - A radio button with a pretty fill animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/Macaw-Examples"&gt;Macaw-Examples&lt;/a&gt; - Various usages of the Macaw library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/Reactions"&gt;Reactions&lt;/a&gt; - Fully customizable Facebook reactions control.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dhirajjadhao/Newly"&gt;Newly&lt;/a&gt; - Newly is a drop in solution to add Twitter/Facebook/Linkedin-style new updates/tweets/posts available button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jobandtalent/CardStackController"&gt;CardStackController&lt;/a&gt; - iOS custom controller used in Jobandtalent app to present new view controllers as cards.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/material-components/material-components-ios"&gt;Material Components&lt;/a&gt; - Google developed UI components that help developers execute Material Design.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/farshidce/RKMultiUnitRuler/"&gt;RKMultiUnitRuler&lt;/a&gt; - Simple customizable ruler control that supports multiple units.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mukeshthawani/FAQView"&gt;FAQView&lt;/a&gt; - An easy to use FAQ view for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lucamozza/LMArticleViewController"&gt;LMArticleViewController&lt;/a&gt; - UIViewController subclass to beautifully present news articles and blog posts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WenchaoD/FSPagerView"&gt;FSPagerView&lt;/a&gt; - FSPagerView is an elegant Screen Slide Library. It is extremely helpful for making Banner、Product Show、Welcome/Guide Pages、Screen/ViewController Sliders.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/louisdh/panelkit"&gt;PanelKit&lt;/a&gt; - A UI framework that enables panels on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/elongation-preview"&gt;ElongationPreview&lt;/a&gt; - ElongationPreview is an elegant push-pop style view controller with 3D-Touch support and gestures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uias/Pageboy"&gt;Pageboy&lt;/a&gt; - A simple, highly informative page view controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iGenius-Srl/IGColorPicker"&gt;IGColorPicker&lt;/a&gt; - A customizable color picker for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/khuong291/KPActionSheet"&gt;KPActionSheet&lt;/a&gt; -  A replacement of default action sheet, but has very simple usage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/D-32/SegmentedProgressBar"&gt;SegmentedProgressBar&lt;/a&gt; - Snapchat / Instagram Stories style animated indicator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Magnetic"&gt;Magnetic&lt;/a&gt; - SpriteKit Floating Bubble Picker (inspired by Apple Music).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GlebRadchenko/AmazingBubbles"&gt;AmazingBubbles&lt;/a&gt; - Apple Music like Bubble Picker using Dynamic Animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Haptica"&gt;Haptica&lt;/a&gt; - Easy Haptic Feedback Generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saeid/GDCheckbox"&gt;GDCheckbox&lt;/a&gt; - An easy to use custom checkbox/radio button component for iOS, with support of IBDesign Inspector.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Howardw3/HamsterUIKit"&gt;HamsterUIKit&lt;/a&gt; - A simple and elegant UIKit(Chart) for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/AZEmptyState"&gt;AZEmptyState&lt;/a&gt; - A UIControl subclass that makes it easy to create empty states.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jegumhon/URWeatherView"&gt;URWeatherView&lt;/a&gt; - Show the weather effects onto view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linhcn/LCUIComponents"&gt;LCUIComponents&lt;/a&gt; - A framework supports creating transient views on top of other content onscreen such as popover with a data list.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Sajjon/ViewComposer"&gt;ViewComposer&lt;/a&gt; - &lt;code&gt;let lbl: UILabel = [.text("Hello"), .textColor(.red)]&lt;/code&gt; - Create views using array literal of enum expressing view attributes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/BatteryView"&gt;BatteryView&lt;/a&gt; - Simple battery shaped UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PierrePerrin/ShadowView"&gt;ShadowView&lt;/a&gt; - Make shadows management easy on UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/52inc/Pulley"&gt;Pulley&lt;/a&gt; - A library to imitate the iOS 10 Maps UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/n8iveapps/N8iveKit"&gt;N8iveKit&lt;/a&gt; - A set of frameworks making iOS development more fun.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wordlessj/Panda"&gt;Panda&lt;/a&gt; - Create view hierarchies declaratively.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HarshilShah/NotchKit"&gt;NotchKit&lt;/a&gt; - A simple way to hide the notch on the iPhone X&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TintPoint/Overlay"&gt;Overlay&lt;/a&gt; - Overlay is a flexible UI framework designed for Swift. It allows you to write CSS like Swift code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/haoking/SwiftyUI"&gt;SwiftyUI&lt;/a&gt; - High performance and lightweight(one class each UI) UIView, UIImage, UIImageView, UIlabel, UIButton, Promise and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AFathi/NotchToolkit"&gt;NotchToolkit&lt;/a&gt; - A framework for iOS that allow developers use the iPhone X notch in creative ways.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MarioIannotta/PullUpController"&gt;PullUpController&lt;/a&gt; - Pull up controller with multiple sticky points like in iOS Maps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Babylonpartners/DrawerKit"&gt;DrawerKit&lt;/a&gt; - DrawerKit lets an UIViewController modally present another UIViewController in a manner similar to the way Apple's Maps app works.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aaronjsutton/Shades"&gt;Shades&lt;/a&gt; - Easily add drop shadows, borders, and round corners to a UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Interactive-Studio/ISPageControl"&gt;ISPageControl&lt;/a&gt; - A page control similar to that used in Instagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oney/Mixin"&gt;Mixin&lt;/a&gt; - React.js like Mixin. More powerful Protocol-Oriented Programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Shiny"&gt;Shiny&lt;/a&gt; - Iridescent Effect View (inspired by Apple Pay Cash).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seedco/StackViewController"&gt;StackViewController&lt;/a&gt; - A controller that uses a UIStackView and view controller composition to display content in a list.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uber/UberSignature"&gt;UberSignature&lt;/a&gt; - Provides an iOS view controller allowing a user to draw their signature with their finger in a realistic style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/startry/SwViewCapture"&gt;SwViewCapture&lt;/a&gt; - A nice iOS View Capture Swift Library which can capture all content.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HamzaGhazouani/HGRippleRadarView"&gt;HGRippleRadarView&lt;/a&gt; - A beautiful radar view to show nearby items (users, restaurants, ...) with ripple animation, fully customizable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saeid/GDGauge"&gt;GDGauge&lt;/a&gt; - Full Customizable, Beautiful, Easy to use gauge view Edit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Stunner/STAControls"&gt;STAControls&lt;/a&gt; - Handy UIControl subclasses. (Think Three20/NimbusKit of UIControls.) Written in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shindyu/ApplyStyleKit"&gt;ApplyStyleKit&lt;/a&gt; - Elegant apply style, using Swift Method Chain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/applidium/OverlayContainer"&gt;OverlayContainer&lt;/a&gt; - A library to develop overlay based interfaces, such as the one presented in the iOS 12 Apple Maps or Stocks apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Baddaboo/ClassicKit"&gt;ClassicKit&lt;/a&gt; - A collection of classic-style UI components for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MoveUpwards/Sejima"&gt;Sejima&lt;/a&gt; - A collection of User Interface components for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OfficeDev/ui-fabric-ios"&gt;UI Fabric by Microsoft&lt;/a&gt; - UI framework based on &lt;a href="https://www.microsoft.com/design/fluent/#/ios" rel="nofollow"&gt;Fluent Design System&lt;/a&gt; by Microsoft.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-activity-indicator" class="anchor" aria-hidden="true" href="#activity-indicator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Activity Indicator&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ninjaprox/NVActivityIndicatorView"&gt;NVActivityIndicatorView&lt;/a&gt; - Collection of nice loading animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TBXark/TKRubberIndicator"&gt;TKRubberIndicator&lt;/a&gt; - Rubber Indicator in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naoyashiga/RPLoadingAnimation"&gt;RPLoadingAnimation&lt;/a&gt; - Loading animations by using Swift CALayer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yoavlt/LiquidLoader"&gt;LiquidLoader&lt;/a&gt; - Spinner loader components with liquid animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CardinalNow/iOS-CircleProgressView"&gt;iOS-CircleProgressView&lt;/a&gt; - This control will allow a user to use code instantiated or interface builder to create and render a circle progress view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Eclair/CircleProgressBar"&gt;iOS Circle Progress Bar&lt;/a&gt; - iOS Circle Progress Bar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/LinearProgressBar"&gt;LinearProgressBar&lt;/a&gt; - Linear Progress Bar (inspired by Google Material Design) for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saitjr/STLoadingGroup"&gt;STLoadingGroup&lt;/a&gt; - loading views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexLittlejohn/ALThreeCircleSpinner"&gt;ALThreeCircleSpinner&lt;/a&gt; - A pulsing spinner view written in swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mehfuzh/MHRadialProgressView"&gt;MHRadialProgressView&lt;/a&gt; - iOS radial animated progress view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ekhoo/Loader"&gt;Loader&lt;/a&gt; - Amazing animated switch activity indicator written in swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jdg/MBProgressHUD"&gt;MBProgressHUD&lt;/a&gt; - Drop-in class for displays a translucent HUD with an indicator and/or labels while work is being done in a background thread.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SVProgressHUD/SVProgressHUD"&gt;SVProgressHUD&lt;/a&gt; - A clean and lightweight progress HUD for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/relatedcode/ProgressHUD"&gt;ProgressHUD&lt;/a&gt; - ProgressHUD is a lightweight and easy-to-use HUD.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Marxon13/M13ProgressSuite"&gt;M13ProgressSuite&lt;/a&gt; - A suite containing many tools to display progress information on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pkluz/PKHUD"&gt;PKHUD&lt;/a&gt; - A Swift based reimplementation of the Apple HUD (Volume, Ringer, Rotation,…) for iOS 8 and above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/EZLoadingActivity"&gt;EZLoadingActivity&lt;/a&gt; - Lightweight loading activity HUD.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elbryan/FFCircularProgressView"&gt;FFCircularProgressView&lt;/a&gt; - FFCircularProgressView - An iOS 7-inspired blue circular progress view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mrackwitz/MRProgress"&gt;MRProgress&lt;/a&gt; - Collection of iOS drop-in components to visualize progress.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcelofabri/BigBrother"&gt;BigBrother&lt;/a&gt; - Automatically sets the network activity indicator for any performed request.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireNetworkActivityIndicator"&gt;AlamofireNetworkActivityIndicator&lt;/a&gt; - Controls the visibility of the network activity indicator on iOS using Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaandedeoglu/KDCircularProgress"&gt;KDCircularProgress&lt;/a&gt; - A circular progress view with gradients written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielamitay/DACircularProgress"&gt;DACircularProgress&lt;/a&gt; - DACircularProgress is a UIView subclass with circular UIProgressView properties.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ykyouhei/KYNavigationProgress"&gt;KYNavigationProgress&lt;/a&gt; - Simple extension of UINavigationController to display progress on the UINavigationBar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/GearRefreshControl"&gt;GearRefreshControl&lt;/a&gt; - A custom animation for the UIRefreshControl.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ninjinkun/NJKWebViewProgress"&gt;NJKWebViewProgress&lt;/a&gt; - A progress interface library for UIWebView. You can implement progress bar for your in-app browser using this module.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxkonovalov/MKRingProgressView"&gt;MKRingProgressView&lt;/a&gt; - A beautiful ring/circular progress view similar to Activity app on Apple Watch, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gautier-gdx/Hexacon"&gt;Hexacon&lt;/a&gt; - A new way to display content in your app like the Apple Watch SpringBoard, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BalestraPatrick/ParticlesLoadingView"&gt;ParticlesLoadingView&lt;/a&gt; - A customizable SpriteKit particles animation on the border of a view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/RPCircularProgress"&gt;RPCircularProgress&lt;/a&gt; - (Swift) Circular progress UIView subclass with UIProgressView properties.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatiBot/MBCircularProgressBar"&gt;MBCircularProgressBar&lt;/a&gt; -  A circular, animatable &amp;amp; highly customizable progress bar, editable from the Interface Builder using IBDesignable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devSC/WSProgressHUD"&gt;WSProgressHUD&lt;/a&gt; - This is a beautiful hud view for iPhone &amp;amp; iPad.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dabing1022/DBMetaballLoading"&gt;DBMetaballLoading&lt;/a&gt; - A metaball loading written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/polqf/FillableLoaders"&gt;FillableLoaders&lt;/a&gt; - Completely customizable progress based loaders drawn using custom CGPaths written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xxxAIRINxxx/VHUD"&gt;VHUD&lt;/a&gt; Simple HUD.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icanzilb/SwiftSpinner"&gt;SwiftSpinner&lt;/a&gt; - A beautiful activity indicator and modal alert written in Swift using blur effects, translucency, flat and bold design.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andresinaka/SnapTimer"&gt;SnapTimer&lt;/a&gt; - Implementation of Snapchat's stories timer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alephao/LLSpinner"&gt;LLSpinner&lt;/a&gt; - An easy way to create a full screen activity indicator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kirankunigiri/SVUploader"&gt;SVUploader&lt;/a&gt; - A beautiful uploader progress view that makes things simple and easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/YLProgressBar"&gt;YLProgressBar&lt;/a&gt; - UIProgressView replacement with an highly and fully customizable animated progress bar in pure Core Graphics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amratab/FlexibleSteppedProgressBar"&gt;FlexibleSteppedProgressBar&lt;/a&gt; - A beautiful easily customisable stepped progress bar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fxm90/GradientLoadingBar"&gt;GradientLoadingBar&lt;/a&gt; - An animated gradient loading bar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DholStudio/DSGradientProgressView"&gt;DSGradientProgressView&lt;/a&gt; - A simple and customizable animated progress bar written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fxm90/GradientProgressBar"&gt;GradientProgressBar&lt;/a&gt; - A gradient progress bar (UIProgressView).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ppth0608/BPCircleActivityIndicator"&gt;BPCircleActivityIndicator&lt;/a&gt; - A lightweight and awesome Loading Activity Indicator for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikola9core/DottedProgressBar"&gt;DottedProgressBar&lt;/a&gt; - Simple and customizable animated progress bar with dots for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roytornado/RSLoadingView"&gt;RSLoadingView&lt;/a&gt; - Awesome loading animations using 3D engine written with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/SendIndicator"&gt;SendIndicator&lt;/a&gt; - Yet another task indicator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/StepProgressView"&gt;StepProgressView&lt;/a&gt; - Step-by-step progress view with labels and shapes. A good replacement for UIActivityIndicatorView and UIProgressView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ppth0608/BPBlockActivityIndicator"&gt;BPBlockActivityIndicator&lt;/a&gt; - A simple and awesome Loading Activity Indicator(with funny block animation) for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesdouble/JDBreaksLoading"&gt;JDBreaksLoading&lt;/a&gt; - You can easily start up a little breaking game indicator by one line.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Juanpe/SkeletonView"&gt;SkeletonView&lt;/a&gt; - An elegant way to show users that something is happening and also prepare them to which contents he is waiting.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Interactive-Studio/Windless"&gt;Windless&lt;/a&gt; - Windless makes it easy to implement invisible layout loading view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gonzalonunez/Skeleton"&gt;Skeleton&lt;/a&gt; - An easy way to create sliding CAGradientLayer animations! Works great for creating skeleton screens for loading content.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IdleHandsApps/StatusBarOverlay"&gt;StatusBarOverlay&lt;/a&gt; - Automatically show/hide a "No Internet Connection" bar when your app loses/gains connection. It supports apps which hide the status bar and "The Notch".&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/RetroProgress"&gt;RetroProgress&lt;/a&gt; - Retro looking progress bar straight from the 90s.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Recouse/LinearProgressBar"&gt;LinearProgressBar&lt;/a&gt; - Material Linear Progress Bar for your iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kamirana4/MKProgress"&gt;MKProgress&lt;/a&gt; - A lightweight ProgressHUD written in Swift. Looks similar to /MBProgressHUD/SVProgressHUD/KVNProgressHUD.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robertherdzik/RHPlaceholder"&gt;RHPlaceholder&lt;/a&gt; - Simple library which give you possibility to add Facebook like loading state for your views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Swiftify-Corp/IHProgressHUD"&gt;IHProgressHUD&lt;/a&gt; - Simple HUD, thread safe, supports iOS, tvOS and App Extensions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-animation" class="anchor" aria-hidden="true" href="#animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/pop"&gt;Pop&lt;/a&gt; - An extensible iOS and macOS animation library, useful for physics-based interactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intuit/AnimationEngine"&gt;AnimationEngine&lt;/a&gt; - Easily build advanced custom animations on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rightpoint/RZTransitions"&gt;RZTransitions&lt;/a&gt; - A library of custom iOS View Controller Animations and Interactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam/DCAnimationKit"&gt;DCAnimationKit&lt;/a&gt; - A collection of animations for iOS. Simple, just add water animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MengTo/Spring"&gt;Spring&lt;/a&gt; - A library to simplify iOS animations in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewcheok/Fluent"&gt;Fluent&lt;/a&gt; - Swift animation made easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suguru/Cheetah"&gt;Cheetah&lt;/a&gt; - Easy animation library on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soheil/RadialLayer"&gt;RadialLayer&lt;/a&gt; - Animation for clickable elements (similar to Youtube Music).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hossamghareeb/Facebook-POP-Tutorial"&gt;Pop By Example&lt;/a&gt; - A project tutorial in how to use Pop animation framework by example.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.appanimations.com" rel="nofollow"&gt;AppAnimations&lt;/a&gt; - Collection of iOS animations to inspire your next project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icanzilb/EasyAnimation"&gt;EasyAnimation&lt;/a&gt; - A Swift library to take the power of UIView.animateWithDuration() to a whole new level - layers, springs, chain-able animations, and mixing view/layer animations together.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eure/Animo"&gt;Animo&lt;/a&gt; - SpriteKit-like animation builders for CALayers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devinross/curry-fire"&gt;CurryFire&lt;/a&gt; - A framework for creating unique animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBAnimatable/IBAnimatable"&gt;IBAnimatable&lt;/a&gt; - Design and prototype UI, interaction, navigation, transition and animation for App Store ready Apps in Interface Builder with IBAnimatable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CezaryKopacz/CKWaveCollectionViewTransition"&gt;CKWaveCollectionViewTransition&lt;/a&gt; - Cool wave like transition between two or more UICollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alikaragoz/DaisyChain"&gt;DaisyChain&lt;/a&gt; - Easy animation chaining.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shu223/PulsingHalo"&gt;PulsingHalo&lt;/a&gt; - iOS Component for creating a pulsing animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Draveness/DKChainableAnimationKit"&gt;DKChainableAnimationKit&lt;/a&gt; - Chainable animations in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JellyDevelopment/JDAnimationKit"&gt;JDAnimationKit&lt;/a&gt; - Animate easy and with less code with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timdonnelly/Advance"&gt;Advance&lt;/a&gt; - A powerful animation framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/UIView-Shake"&gt;UIView-Shake&lt;/a&gt; - UIView category that adds shake animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RamonGilabert/Walker"&gt;Walker&lt;/a&gt; - A new animation engine for your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RamonGilabert/Morgan"&gt;Morgan&lt;/a&gt; - An animation set for your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/patrickreynolds/MagicMove"&gt;MagicMove&lt;/a&gt; - Keynote-style Magic Move transition animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/Shimmer"&gt;Shimmer&lt;/a&gt; - An easy way to add a simple, shimmering effect to any view in an iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sudeepag/SAConfettiView"&gt;SAConfettiView&lt;/a&gt; - Confetti! Who doesn't like confetti?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cacmartinez/CCMRadarView"&gt;CCMRadarView&lt;/a&gt; - CCMRadarView uses the IBDesignable tools to make an easy customizable radar view with animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shu223/Pulsator"&gt;Pulsator&lt;/a&gt; - Pulse animation for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Interpolate"&gt;Interpolate&lt;/a&gt; - Swift interpolation for gesture-driven animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Antondomashnev/ADPuzzleAnimation"&gt;ADPuzzleAnimation&lt;/a&gt; - Custom animation for UIView inspired by Fabric - Answers animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Wave"&gt;Wave&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="ocean" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30a.png"&gt;🌊&lt;/g-emoji&gt; Declarative chainable animations in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AugustRush/Stellar"&gt;Stellar&lt;/a&gt; - A fantastic Physical animation library for swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/poetmountain/MotionMachine"&gt;MotionMachine&lt;/a&gt; - A powerful, elegant, and modular animation library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carleihar/JRMFloatingAnimation"&gt;JRMFloatingAnimation&lt;/a&gt; - An Objective-C animation library used to create floating image views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastred/AHKBendableView"&gt;AHKBendableView&lt;/a&gt; - UIView subclass that bends its edges when its position changes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AntonTheDev/FlightAnimator"&gt;FlightAnimator&lt;/a&gt; - Advanced Natural Motion Animations, Simple Blocks Based Syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WorldDownTown/ZoomTransitioning"&gt;ZoomTransitioning&lt;/a&gt; - A custom transition with image zooming animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RobinFalko/Ubergang"&gt;Ubergang&lt;/a&gt; - A tweening engine for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jhurray/JHChainableAnimations"&gt;JHChainableAnimations&lt;/a&gt; - Easy to read and write chainable animations in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DavdRoman/Popsicle"&gt;Popsicle&lt;/a&gt; - Delightful, extensible Swift value interpolation framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WelkinXie/WXWaveView"&gt;WXWaveView&lt;/a&gt; - Add a pretty water wave to your view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piemonte/Twinkle"&gt;Twinkle&lt;/a&gt; - Swift and easy way to make elements in your iOS and tvOS app twinkle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastred/MotionBlur"&gt;MotionBlur&lt;/a&gt; - MotionBlur allows you to add motion blur effect to iOS animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alsedi/RippleEffectView"&gt;RippleEffectView&lt;/a&gt; - RippleEffectView - A Neat Rippling View Effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebookincubator/Keyframes"&gt;Keyframes&lt;/a&gt; - A library for converting Adobe AE shape based animations to a data format and play it back on Android and iOS devices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rchatham/SwiftyAnimate"&gt;SwiftyAnimate&lt;/a&gt; - Composable animations in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hachinobu/SamuraiTransition"&gt;SamuraiTransition&lt;/a&gt; - Swift based library providing a collection of ViewController transitions featuring a number of neat “cutting” animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/lottie-ios"&gt;Lottie&lt;/a&gt; - An iOS library for a real time rendering of native vector animations from Adobe After Effects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ML-Works/Overlap"&gt;Overlap&lt;/a&gt; - Tiny iOS library to achieve overlap visual effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onurersel/anim"&gt;anim&lt;/a&gt; - An animation library for iOS with custom easings and easy to follow API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KelvinJin/AnimatedCollectionViewLayout"&gt;AnimatedCollectionViewLayout&lt;/a&gt; - A UICollectionViewLayout subclass that adds custom transitions/animations to the UICollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saoudrizwan/Dance"&gt;Dance&lt;/a&gt; - A radical &amp;amp; elegant animation library built for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/numen31337/AKVideoImageView"&gt;AKVideoImageView&lt;/a&gt; - UIImageView subclass which allows you to display a looped video as a background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/willowtreeapps/spruce-ios"&gt;Spruce iOS Animation Library&lt;/a&gt; - Swift library for choreographing animations on the screen.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/T-Pro/CircularRevealKit"&gt;CircularRevealKit&lt;/a&gt; - UI framework that implements the material design's reveal effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SteveBarnegren/TweenKit"&gt;TweenKit&lt;/a&gt; - Animation library for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KrisYu/Water"&gt;Water&lt;/a&gt; - Simple calculation to render cheap water effects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cruisediary/Pastel"&gt;Pastel&lt;/a&gt; - Gradient animation effect like Instagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yapstudios/YapAnimator"&gt;YapAnimator&lt;/a&gt; - Your fast and friendly physics-based animation system.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goldmoment/Bubble"&gt;Bubble&lt;/a&gt; - Fruit Animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shoheiyokoyama/Gemini"&gt;Gemini&lt;/a&gt; - Gemini is rich scroll based animation framework for iOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeFal/WaterDrops"&gt;WaterDrops&lt;/a&gt; - Simple water drops animation for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcosgriselli/ViewAnimator"&gt;ViewAnimator&lt;/a&gt; - ViewAnimator brings your UI to life with just one line.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/Ease"&gt;Ease&lt;/a&gt; - Animate everything with Ease.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmick66/kinieta"&gt;Kinieta&lt;/a&gt; - An Animation Engine with Custom Bezier Easing, an Intuitive API and perfect Color Intepolation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lision/LSAnimator"&gt;LSAnimator&lt;/a&gt; - Easy to Read and Write Multi-chain Animations Kit in Objective-C and Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lkzhao/YetAnotherAnimationLibrary"&gt;YetAnotherAnimationLibrary&lt;/a&gt; - Designed for gesture-driven animations. Fast, simple, &amp;amp; extensible!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/satoshin21/Anima"&gt;Anima&lt;/a&gt; - Anima is chainable Layer-Based Animation library for Swift4.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lkzhao/MotionAnimation"&gt;MotionAnimation&lt;/a&gt; - Lightweight animation library for UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agilie/AGInterfaceInteraction"&gt;AGInterfaceInteraction&lt;/a&gt; - library performs interaction with UI interface.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/poetmountain/PMTween"&gt;PMTween&lt;/a&gt; - An elegant and flexible tweening library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artrmz/VariousViewsEffects"&gt;VariousViewsEffects&lt;/a&gt; - Animates views nicely with easy to use extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/TheAnimation"&gt;TheAnimation&lt;/a&gt; - Type-safe CAAnimation wrapper. It makes preventing to set wrong type values.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HideakiTouhara/Poi"&gt;Poi&lt;/a&gt; - Poi makes you use card UI like tinder UI .You can use it like tableview method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cats-oss/Sica"&gt;Sica&lt;/a&gt; - Simple Interface Core Animation. Run type-safe animation sequencially or parallelly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomkowz/fireworks"&gt;fireworks&lt;/a&gt; - Fireworks effect for UIView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dbukowski/Disintegrate"&gt;Disintegrate&lt;/a&gt; - Disintegration animation inspired by THAT thing Thanos did at the end of Avengers: Infinity War.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sagaya/wobbly"&gt;Wobbly&lt;/a&gt; - Wobbly is a Library of predefined, easy to use iOS animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/LoadingShimmer"&gt;LoadingShimmer&lt;/a&gt; - An easy way to add a shimmering effect to any view with just one line of code. It is useful as an unobtrusive loading indicator.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-transition" class="anchor" aria-hidden="true" href="#transition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transition&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Citrrus/BlurryModalSegue"&gt;BlurryModalSegue&lt;/a&gt; - A custom modal segue for providing a blurred overlay effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ifitdoesntwork/DAExpandAnimation"&gt;DAExpandAnimation&lt;/a&gt; - A custom modal transition that presents a controller with an expanding effect while sliding out the presenter remnants.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/BubbleTransition"&gt;BubbleTransition&lt;/a&gt; - A custom modal transition that presents and dismiss a controller with an expanding bubble effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naoyashiga/RPModalGestureTransition"&gt;RPModalGestureTransition&lt;/a&gt; - You can dismiss modal by using gesture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-mp/RMPZoomTransitionAnimator"&gt;RMPZoomTransitionAnimator&lt;/a&gt; - A custom zooming transition animation for UIViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lkzhao/ElasticTransition"&gt;ElasticTransition&lt;/a&gt; - A UIKit custom transition that simulates an elastic drag. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/taglia3/ElasticTransition-ObjC"&gt;ElasticTransition-ObjC&lt;/a&gt; - A UIKit custom transition that simulates an elastic drag.This is the Objective-C Version of Elastic Transition written in Swift by lkzhao.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zoonooz/ZFDragableModalTransition"&gt;ZFDragableModalTransition&lt;/a&gt; - Custom animation transition for present modal view controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NewAmsterdamLabs/ZOZolaZoomTransition"&gt;ZOZolaZoomTransition&lt;/a&gt; - Zoom transition that animates the entire view hierarchy. Used extensively in the Zola iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonathantribouharet/JTMaterialTransition"&gt;JTMaterialTransition&lt;/a&gt; - An iOS transition for controllers based on material design.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shu223/AnimatedTransitionGallery"&gt;AnimatedTransitionGallery&lt;/a&gt; - Collection of iOS 7 custom animated transitions using UIViewControllerAnimatedTransitioning protocol.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DianQK/TransitionTreasury"&gt;TransitionTreasury&lt;/a&gt; - Easier way to push your viewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/Presenter"&gt;Presenter&lt;/a&gt; - Screen transition with safe and clean code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bannzai/Kaeru"&gt;Kaeru&lt;/a&gt; - Switch viewcontroller like iOS task manager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naru-jpn/View2ViewTransition"&gt;View2ViewTransition&lt;/a&gt; - Custom interactive view controller transition from one view to another view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/azimin/AZTransitions"&gt;AZTransitions&lt;/a&gt; - API to make great custom transitions in one method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HeroTransitions/Hero"&gt;Hero&lt;/a&gt; - Supercharged transition engine for iOS. Build your custom view transitions with no code at all. Inspired by Keynote's Magic Move.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Motion"&gt;Motion&lt;/a&gt; - Seamless animations and transitions in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/PresenterKit"&gt;PresenterKit&lt;/a&gt; - Swifty view controller presentation for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Touchwonders/Transition"&gt;Transition&lt;/a&gt; - Easy interactive interruptible custom ViewController transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boerworz/Gagat"&gt;Gagat&lt;/a&gt; - A delightful way to transition between visual styles in your iOS applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HarshilShah/DeckTransition"&gt;DeckTransition&lt;/a&gt; - A library to recreate the iOS Apple Music now playing transition.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Interactive-Studio/TransitionableTab"&gt;TransitionableTab&lt;/a&gt; - TransitionableTab makes it easy to animate when switching between tab.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/loopeer/AlertTransition"&gt;AlertTransition&lt;/a&gt; - AlertTransition is a extensible library for making view controller transitions, especially for alert transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muyexi/SemiModalViewController"&gt;SemiModalViewController&lt;/a&gt; - Present view / view controller as bottom-half modal.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shtnkgm/ImageTransition"&gt;ImageTransition&lt;/a&gt; - ImageTransition is a library for smooth animation of images during transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexandrGraschenkov/LiquidTransition"&gt;LiquidTransition&lt;/a&gt; - removes boilerplate code to perform transition, allows backward animations, custom properties animation and much more!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanVorobei/SPStorkController"&gt;SPStorkController&lt;/a&gt; - Very similar to the controllers displayed in Apple Music, Podcasts and Mail Apple's applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appssemble/appstore-card-transition"&gt;AppstoreTransition&lt;/a&gt; - Simulates the appstore card animation transition.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-alert--action-sheet" class="anchor" aria-hidden="true" href="#alert--action-sheet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alert &amp;amp; Action Sheet&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/codestergit/SweetAlert-iOS"&gt;SweetAlert&lt;/a&gt; - Live animated Alert View for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nealyoung/NYAlertViewController"&gt;NYAlertViewController&lt;/a&gt; - Highly configurable iOS Alert Views with custom content views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vikmeup/SCLAlertView-Swift"&gt;SCLAlertView-Swift&lt;/a&gt; - Beautiful animated Alert View, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zekunyan/TTGSnackbar"&gt;TTGSnackbar&lt;/a&gt; - Show simple message and action button on the bottom of the screen with multi kinds of animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GabrielAlva/Swift-Prompts"&gt;Swift-Prompts&lt;/a&gt; - A Swift library to design custom prompts with a great scope of options to choose from.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bryx-inc/BRYXBanner"&gt;BRYXBanner&lt;/a&gt; - A lightweight dropdown notification for iOS 7+, in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LISNR/LNRSimpleNotifications"&gt;LNRSimpleNotifications&lt;/a&gt; - Simple Swift in-app notifications. LNRSimpleNotifications is a simplified Swift port of TSMessages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nhdang103/HDNotificationView"&gt;HDNotificationView&lt;/a&gt; - Emulates the native Notification Banner UI for any alert.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/calimarkus/JDStatusBarNotification"&gt;JDStatusBarNotification&lt;/a&gt; - Easy, customizable notifications displayed on top of the statusbar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thii/Notie"&gt;Notie&lt;/a&gt; - In-app notification in Swift, with customizable buttons and input text field.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thellimist/EZAlertController"&gt;EZAlertController&lt;/a&gt; - Easy Swift UIAlertController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wxxsw/GSMessages"&gt;GSMessages&lt;/a&gt; - A simple style messages/notifications for iOS 7+.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OEA/OEANotification"&gt;OEANotification&lt;/a&gt; - In-app customizable notification views on top of screen for iOS which is written in Swift 2.1.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cwRichardKim/RKDropdownAlert"&gt;RKDropdownAlert&lt;/a&gt; - Extremely simple UIAlertView alternative.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/entotsu/TKSwarmAlert"&gt;TKSwarmAlert&lt;/a&gt; - Animated alert library like Swarm app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KyoheiG3/SimpleAlert"&gt;SimpleAlert&lt;/a&gt; - Customizable simple Alert and simple ActionSheet for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ytakzk/Hokusai"&gt;Hokusai&lt;/a&gt; - A Swift library to provide a bouncy action sheet.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnlui/SwiftNotice"&gt;SwiftNotice&lt;/a&gt; - SwiftNotice is a GUI library for displaying various popups (HUD) written in pure Swift, fits any scrollview.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peterprokop/SwiftOverlays"&gt;SwiftOverlays&lt;/a&gt; - SwiftOverlays is a Swift GUI library for displaying various popups and notifications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morizotter/SwiftyDrop"&gt;SwiftyDrop&lt;/a&gt; - SwiftyDrop is a lightweight pure Swift simple and beautiful dropdown message.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lightningkite/LKAlertController"&gt;LKAlertController&lt;/a&gt; - An easy to use UIAlertController builder for swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okmr-d/DOAlertController"&gt;DOAlertController&lt;/a&gt; - Simple Alert View written in Swift, which can be used as a UIAlertController. (AlertController/AlertView/ActionSheet).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/beryu/CustomizableActionSheet"&gt;CustomizableActionSheet&lt;/a&gt; - Action sheet allows including your custom views and buttons.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scalessec/Toast-Swift"&gt;Toast-Swift&lt;/a&gt; - A Swift extension that adds toast notifications to the UIView object class.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmusolino/PMAlertController"&gt;PMAlertController&lt;/a&gt; - PMAlertController is a great and customizable substitute to UIAlertController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dimillian/PopupViewController"&gt;PopupViewController&lt;/a&gt; - UIAlertController drop in replacement with much more customization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/AlertViewLoveNotification"&gt;AlertViewLoveNotification&lt;/a&gt; - A simple and attractive AlertView to ask permission to your users for Push Notification.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cruffenach/CRToast"&gt;CRToast&lt;/a&gt; - A modern iOS toast view that can fit your notification needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/Toaster"&gt;JLToast&lt;/a&gt; - Toast for iOS with very simple interface.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rollmind/CuckooAlert"&gt;CuckooAlert&lt;/a&gt; - Multiple use of presentViewController for UIAlertController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krimpedance/KRAlertController"&gt;KRAlertController&lt;/a&gt; - A colored alert view for your iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/Dodo"&gt;Dodo&lt;/a&gt; - A message bar for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ntnhon/MaterialActionSheetController"&gt;MaterialActionSheetController&lt;/a&gt; - A Google like action sheet for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKickMobile/SwiftMessages"&gt;SwiftMessages&lt;/a&gt; - A very flexible message bar for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krispenney/FCAlertView"&gt;FCAlertView&lt;/a&gt; - A Flat Customizable AlertView for iOS. (Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nimati/FCAlertView"&gt;FCAlertView&lt;/a&gt; - A Flat Customizable AlertView for iOS. (Objective-C).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/candostdagdeviren/CDAlertView"&gt;CDAlertView&lt;/a&gt; - Highly customizable alert/notification/success/error/alarm popup.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CooperRS/RMActionController"&gt;RMActionController&lt;/a&gt; - Present any UIView in an UIAlertController like manner.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CooperRS/RMDateSelectionViewController"&gt;RMDateSelectionViewController&lt;/a&gt; - Select a date using UIDatePicker in a UIAlertController like fashion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CooperRS/RMPickerViewController"&gt;RMPickerViewController&lt;/a&gt; - Select something using UIPickerView in a UIAlertController like fashion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SebastianBoldt/Jelly"&gt;Jelly&lt;/a&gt; - Jelly provides custom view controller transitions with just a few lines of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vitormesquita/Malert"&gt;Malert&lt;/a&gt; - Malert is a simple, easy and custom iOS UIAlertView written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roycms/AlertView"&gt;RAlertView&lt;/a&gt; - AlertView, iOS popup window, A pop-up framework, Can be simple and convenient to join your project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qiuncheng/NoticeBar"&gt;NoticeBar&lt;/a&gt; - A simple NoticeBar written by Swift 3, similar with QQ notice view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lasithih/LIHAlert"&gt;LIHAlert&lt;/a&gt; - Advance animated banner alerts for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ppth0608/BPStatusBarAlert"&gt;BPStatusBarAlert&lt;/a&gt; - A simple alerts that appear on the status bar and below navigation bar(like Facebook).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Codigami/CFAlertViewController"&gt;CFAlertViewController&lt;/a&gt; -  A library that helps you display and customise alerts and action sheets on iPad and iPhone.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daltron/NotificationBanner"&gt;NotificationBanner&lt;/a&gt; - The easiest way to display highly customizable in app notification banners in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgr-ksmt/Alertift"&gt;Alertift&lt;/a&gt; - Swifty, modern UIAlertController wrapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hryk224/PCLBlurEffectAlert"&gt;PCLBlurEffectAlert&lt;/a&gt; - Swift AlertController with UIVisualEffectView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trilliwon/JDropDownAlert"&gt;JDropDownAlert&lt;/a&gt; - Multi dirction dropdown alert view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexaubry/BulletinBoard"&gt;BulletinBoard&lt;/a&gt; - Generate and Display Bottom Card Interfaces on iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hallelujahbaby/CFNotify"&gt;CFNotify&lt;/a&gt; - A customizable framework to create draggable views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LowKostKustomz/StatusAlert"&gt;StatusAlert&lt;/a&gt; - Display Apple system-like self-hiding status alerts without interrupting user flow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dillidon/alerts-and-pickers"&gt;Alerts &amp;amp; Pickers&lt;/a&gt; - Advanced usage of native UIAlertController with TextField, DatePicker, PickerView, TableView and CollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/donileo/RMessage"&gt;RMessage&lt;/a&gt; - A crisp in-app notification/message banner built in ObjC.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lucabecchetti/InAppNotify"&gt;InAppNotify&lt;/a&gt; - Swift library to manage in-app notification in swift language, like WhatsApp, Telegram, Frind, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/FloatingActionSheetController"&gt;FloatingActionSheetController&lt;/a&gt; - FloatingActionSheetController is a cool design ActionSheetController library written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimOliver/TOActionSheet"&gt;TOActionSheet&lt;/a&gt; - A custom-designed reimplementation of the UIActionSheet control for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLActionController"&gt;XLActionController&lt;/a&gt; - Fully customizable and extensible action sheet controller written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CaliCastle/PopMenu"&gt;PopMenu&lt;/a&gt; - A cool and customizable popup style action sheet &lt;g-emoji class="g-emoji" alias="sunglasses" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png"&gt;😎&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TheAbstractDev/NotchyAlert"&gt;NotchyAlert&lt;/a&gt; - Use the iPhone X notch space to display creative alerts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BowdusBrown/Sheet"&gt;Sheet&lt;/a&gt; - Show a workflow of view controllers as an action sheet. Very light weight. No configuration needed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ParkGwangBeom/Sheet"&gt;Sheet&lt;/a&gt; - SHEET helps you easily create a wide variety of action sheets with navigation features used in the Flipboard App&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mshrwtnb/alrt"&gt;ALRT&lt;/a&gt; - An easier constructor for UIAlertController. Present an alert from anywhere.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ImKcat/CatAlertController"&gt;CatAlertController&lt;/a&gt; - Use UIAlertController like a boss.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schmidyy/Loaf"&gt;Loaf&lt;/a&gt; - A simple framework for easy iOS Toasts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanVorobei/SPAlert"&gt;SPAlert&lt;/a&gt; - Native popup from Apple Music &amp;amp; Feedback in AppStore. Contains Done &amp;amp; Heart presets.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-badge" class="anchor" aria-hidden="true" href="#badge"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Badge&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mustafaibrahim989/MIBadgeButton-Swift"&gt;MIBadgeButton&lt;/a&gt; - Notification badge for UIButtons.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/EasyNotificationBadge"&gt;EasyNotificationBadge&lt;/a&gt; - UIView extension that adds a notification badge. [e]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gemr/Sheriff"&gt;Sheriff&lt;/a&gt; - Add badges to anything.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/swift-badge"&gt;swift-badge&lt;/a&gt; - Badge view for iOS written in swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/BadgeHub"&gt;BadgeHub&lt;/a&gt; - Make any UIView a full fledged animated notification center. It is a way to quickly add a notification badge icon to a UIView.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-button" class="anchor" aria-hidden="true" href="#button"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Button&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/StyleShare/SSBouncyButton"&gt;SSBouncyButton&lt;/a&gt; - iOS7-style bouncy button UI component.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okmr-d/DOFavoriteButton"&gt;DOFavoriteButton&lt;/a&gt; - Cute Animated Button written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/victorBaro/VBFPopFlatButton"&gt;VBFPopFlatButton&lt;/a&gt; - Flat button with 9 different states animated using Facebook POP.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Famolus/HTPressableButton"&gt;HTPressableButton&lt;/a&gt; - Flat design pressable button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yoavlt/LiquidFloatingActionButton"&gt;LiquidFloatingActionButton&lt;/a&gt; - Material Design Floating Action Button in liquid state&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JunichiT/JTFadingInfoView"&gt;JTFadingInfoView&lt;/a&gt; - An UIButton-based view with fade in/out animation features.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/Floaty"&gt;Floaty&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; Floating Action Button for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/TVButton"&gt;TVButton&lt;/a&gt; - Recreating the cool parallax icons from Apple TV as iOS UIButtons (in Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TakeScoop/SwiftyButton"&gt;SwiftyButton&lt;/a&gt; - Simple and customizable button in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suzuki-0000/AnimatablePlayButton"&gt;AnimatablePlayButton&lt;/a&gt; - Animated Play and Pause Button using CALayer, CAKeyframeAnimation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Guidebook/gbkui-button-progress-view"&gt;gbkui-button-progress-view&lt;/a&gt; - Inspired by Apple’s download progress buttons in the App Store.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zoonooz/ZFRippleButton"&gt;ZFRippleButton&lt;/a&gt; - Custom UIButton effect inspired by Google Material Design&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lojals/JOEmojiableBtn"&gt;JOEmojiableBtn&lt;/a&gt; - Emoji selector like Facebook Reactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Eke/EMEmojiableBtn"&gt;EMEmojiableBtn&lt;/a&gt; - Option selector that works similar to Reactions by fb. Objective-c version.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yu-w/WYMaterialButton"&gt;WYMaterialButton&lt;/a&gt; - Interactive and fully animated Material Design button for iOS developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/DynamicButton"&gt;DynamicButton&lt;/a&gt; - Yet another animated flat buttons in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rakaramos/OnOffButton"&gt;OnOffButton&lt;/a&gt; - Custom On/Off Animated UIButton, written in Swift. By Creativedash&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imwcl/WCLShineButton"&gt;WCLShineButton&lt;/a&gt; - This is a UI lib for iOS. Effects like shining.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/EasySocialButton"&gt;EasySocialButton&lt;/a&gt; - An easy way to create beautiful social authentication buttons.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/NFDownloadButton"&gt;NFDownloadButton&lt;/a&gt; - Revamped Download Button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/loregr/LGButton"&gt;LGButton&lt;/a&gt; - A fully customisable subclass of the native UIControl which allows you to create beautiful buttons without writing any line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MultiToggleButton"&gt;MultiToggleButton&lt;/a&gt; - A UIButton subclass that implements tap-to-toggle button text (Like the camera flash and timer buttons).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmusolino/PMSuperButton"&gt;PMSuperButton&lt;/a&gt; - A powerful UIButton with super powers, customizable from Storyboard!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/JSButton"&gt;JSButton&lt;/a&gt; - A fully customisable swift subclass on UIButton which allows you to create beautiful buttons without writing any line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AladinWay/TransitionButton"&gt;TransitionButton&lt;/a&gt; - UIButton sublass for loading and transition animation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thePsguy/ButtonProgressBar-iOS"&gt;ButtonProgressBar-iOS&lt;/a&gt; - A small and flexible UIButton subclass with animated loading progress, and completion animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lukecrum/SpicyButton"&gt;SpicyButton&lt;/a&gt; - Full-featured IBDesignable UIButton class&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IdleHandsApps/DesignableButton"&gt;DesignableButton&lt;/a&gt; - UIButton subclass with centralised and reusable styles. View styles and customise in InterfaceBuilder in real time!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boris-Em/BEMCheckBox"&gt;BEMCheckBox&lt;/a&gt; - Tasteful Checkbox for iOS. (Check box)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DimaMishchenko/ExpandableButton"&gt;ExpandableButton&lt;/a&gt; - Customizable and easy to use expandable button in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimOliver/TORoundedButton"&gt;TORoundedButton&lt;/a&gt; - A high-performance button control with rounded corners.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-calendar" class="anchor" aria-hidden="true" href="#calendar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calendar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/CVCalendar/CVCalendar"&gt;CVCalendar&lt;/a&gt; - A custom visual calendar for iOS 8+ written in Swift (2.0).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslanskorb/RSDayFlow"&gt;RSDayFlow&lt;/a&gt; - iOS 7+ Calendar with Infinite Scrolling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbwar/NWCalendarView"&gt;NWCalendarView&lt;/a&gt; - An availability calendar implementation for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Glow-Inc/GLCalendarView"&gt;GLCalendarView&lt;/a&gt; - A fully customizable calendar view acting as a date range picker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonathantribouharet/JTCalendar"&gt;JTCalendar&lt;/a&gt; - A customizable calendar view for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/patchthecode/JTAppleCalendar"&gt;JTAppleCalendar&lt;/a&gt; - The Unofficial Swift Apple Calendar Library. View. Control. for iOS &amp;amp; tvOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixzii/Daysquare"&gt;Daysquare&lt;/a&gt; - An elegant calendar control for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scamps88/ASCalendar"&gt;ASCalendar&lt;/a&gt; - A calendar control for iOS written in swift with mvvm pattern&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jumartin/Calendar"&gt;Calendar&lt;/a&gt; - A set of views and controllers for displaying and scheduling events on iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shoheiyokoyama/Koyomi"&gt;Koyomi&lt;/a&gt; - Simple customizable calendar component in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/itsmeichigo/DateTimePicker"&gt;DateTimePicker&lt;/a&gt; - A nicer iOS UI component for picking date and time&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roycms/RCalendarPicker"&gt;RCalendarPicker&lt;/a&gt; - RCalendarPicker A date picker control.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/richardtop/CalendarKit"&gt;CalendarKit&lt;/a&gt; - Fully customizable calendar day view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saeid/GDCalendar"&gt;GDPersianCalendar&lt;/a&gt; - Customizable and easy to use Persian Calendar component.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MosheBerman/MBCalendarKit"&gt;MBCalendarKit&lt;/a&gt; - A calendar framework for iOS built with customization, and localization in mind.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amantaneja/PTEventView"&gt;PTEventView&lt;/a&gt; - An Event View based on Apple's Event Detail View within Calender.Supports ARC, Autolayout and editing via StoryBoard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmick66/CalendarView"&gt;KDCalendarView&lt;/a&gt; - A calendar component for iOS written in Swift 4.0. It features both vertical and horizontal layout (and scrolling) and the display of native calendar events.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orazz/CalendarPopUp"&gt;CalendarPopUp&lt;/a&gt; - CalendarPopUp - JTAppleCalendar library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maximbilan/Calendar-iOS"&gt;ios_calendar&lt;/a&gt;  - It's lightweight and simple control with supporting Locale and CalendarIdentifier. There're samples for iPhone and iPad, and also with using a popover. With supporting Persian calendar&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WenchaoD/FSCalendar"&gt;FSCalendar&lt;/a&gt; - A fully customizable iOS calendar library, compatible with Objective-C and Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cards" class="anchor" aria-hidden="true" href="#cards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cards&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Card based UI's, pan gestures, flip and swipe animations&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/modocache/MDCSwipeToChoose"&gt;MDCSwipeToChoose&lt;/a&gt; - Swipe to "like" or "dislike" any view, just like Tinder.app. Build a flashcard app, a photo viewer, and more, in minutes, not hours!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tispr/tispr-card-stack"&gt;TisprCardStack&lt;/a&gt; - Library that allows to have cards UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seedante/CardAnimation"&gt;CardAnimation&lt;/a&gt; - Card flip animation by pan gesture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Koloda"&gt;Koloda&lt;/a&gt; - KolodaView is a class designed to simplify the implementation of Tinder like cards on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kunalverma25/KVCardSelectionVC"&gt;KVCardSelectionVC&lt;/a&gt; - Awesome looking Dial like card selection ViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/D-32/DMSwipeCards"&gt;DMSwipeCards&lt;/a&gt; - Tinder like card stack that supports lazy loading and generics&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vladaverin24/TimelineCards"&gt;TimelineCards&lt;/a&gt; - Presenting timelines as cards, single or bundled in scrollable feed!.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PaoloCuscela/Cards"&gt;Cards&lt;/a&gt; - Awesome iOS 11 AppStore's Card Views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MillmanY/MMCardView"&gt;MMCardView&lt;/a&gt; - Custom CollectionView like Wallet App&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/filletofish/CardsLayout"&gt;CardsLayout&lt;/a&gt; - Nice card-designed custom collection view layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intuit/CardParts"&gt;CardParts&lt;/a&gt; - A reactive, card-based UI framework built on UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JoniVR/VerticalCardSwiper"&gt;VerticalCardSwiper&lt;/a&gt; - A marriage between the Shazam Discover UI and Tinder, built with UICollectionView in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-form--settings" class="anchor" aria-hidden="true" href="#form--settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Form &amp;amp; Settings&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Input validators, form helpers and form builders.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Form"&gt;Form&lt;/a&gt; - The most flexible and powerful way to build a form on iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLForm"&gt;XLForm&lt;/a&gt; - XLForm is the most flexible and powerful iOS library to create dynamic table-view forms. Fully compatible with Swift &amp;amp; Obj-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/Eureka"&gt;Eureka&lt;/a&gt; - Elegant iOS form builder in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/YALField"&gt;YALField&lt;/a&gt; - Custom Field component with validation for creating easier form-like UI from interface builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/Former"&gt;Former&lt;/a&gt; - Former is a fully customizable Swift2 library for easy creating UITableView based form.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ortuman/SwiftForms"&gt;SwiftForms&lt;/a&gt; - A small and lightweight library written in Swift that allows you to easily create forms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seedco/Formalist"&gt;Formalist&lt;/a&gt; - Declarative form building framework for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neoneye/SwiftyFORM"&gt;SwiftyFORM&lt;/a&gt; - SwiftyFORM is a form framework for iOS written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftValidatorCommunity/SwiftValidator"&gt;SwiftValidator&lt;/a&gt; - A rule-based validation library for Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EurekaCommunity/GenericPasswordRow"&gt;GenericPasswordRow&lt;/a&gt; - A row for Eureka to implement password validations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ustwo/formvalidator-swift"&gt;formvalidator-swift&lt;/a&gt; - A framework to validate inputs of text fields and text views in a convenient way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nsagora/validation-toolkit"&gt;ValidationToolkit&lt;/a&gt; - Lightweight framework for input validation written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/altayer-digital/ATGValidator"&gt;ATGValidator&lt;/a&gt; - Rule based validation framework with form and card validation support for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/ValidatedPropertyKit"&gt;ValidatedPropertyKit&lt;/a&gt; - Easily validate your Properties with Property Wrappers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-keyboard" class="anchor" aria-hidden="true" href="#keyboard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslanskorb/RSKKeyboardAnimationObserver"&gt;RSKKeyboardAnimationObserver&lt;/a&gt; - Showing / dismissing keyboard animation in simple UIViewController category.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruddfawcett/RFKeyboardToolbar"&gt;RFKeyboardToolbar&lt;/a&gt; - This is a flexible UIView and UIButton subclass to add customized buttons and toolbars to your UITextFields/UITextViews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hackiftekhar/IQKeyboardManager"&gt;IQKeyboardManager&lt;/a&gt; - Codeless drop-in universal library allows to prevent issues of keyboard sliding up and cover UITextField/UITextView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meiwin/NgKeyboardTracker"&gt;NgKeyboardTracker&lt;/a&gt; - Objective-C library for tracking keyboard in iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matmartinez/MMNumberKeyboard"&gt;MMNumberKeyboard&lt;/a&gt; - A simple keyboard to use with numbers and, optionally, a decimal point.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morizotter/KeyboardObserver"&gt;KeyboardObserver&lt;/a&gt; - For less complicated keyboard event handling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/michaeltyson/TPKeyboardAvoiding"&gt;TPKeyboardAvoiding&lt;/a&gt; - A drop-in universal solution for moving text fields out of the way of the keyboard in iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ibireme/YYKeyboardManager"&gt;YYKeyboardManager&lt;/a&gt; - iOS utility class allows you to access keyboard view and track keyboard animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nixzhu/KeyboardMan"&gt;KeyboardMan&lt;/a&gt; - KeyboardMan helps you make keyboard animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/makemoji/MakemojiSDK"&gt;MakemojiSDK&lt;/a&gt; - Emoji Keyboard SDK (iOS)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/totocaster/Typist"&gt;Typist&lt;/a&gt; - Small, drop-in Swift UIKit keyboard manager for iOS apps-helps manage keyboard's screen presence and behavior without notification center.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bonyadmitr/KeyboardHideManager"&gt;KeyboardHideManager&lt;/a&gt; - Codeless manager to hide keyboard by tapping on views for iOS written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/1amageek/Toolbar"&gt;Toolbar&lt;/a&gt; - Awesome autolayout Toolbar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IdleHandsApps/IHKeyboardAvoiding"&gt;IHKeyboardAvoiding&lt;/a&gt; - A drop-in universal solution for keeping any UIView visible when the keyboard is being shown - no more UIScrollViews!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/NumPad"&gt;NumPad&lt;/a&gt; - Number Pad (inspired by Square's design).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chriszielinski/Ribbon"&gt;Ribbon&lt;/a&gt; - A simple cross-platform toolbar/custom input accessory view library for iOS &amp;amp; macOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-label" class="anchor" aria-hidden="true" href="#label"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Label&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lexrus/LTMorphingLabel"&gt;LTMorphingLabel&lt;/a&gt; - Graceful morphing effects for UILabel written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/optonaut/ActiveLabel.swift"&gt;ActiveLabel.swift&lt;/a&gt; - UILabel drop-in replacement supporting Hashtags (#), Mentions (@) and URLs (http://) written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mineschan/MZTimerLabel"&gt;MZTimerLabel&lt;/a&gt; - A handy class for iOS to use UILabel as a countdown timer or stopwatch just like in Apple Clock App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suzuki-0000/CountdownLabel"&gt;CountdownLabel&lt;/a&gt; - Simple countdown UILabel with morphing animation, and some useful function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/IncrementableLabel"&gt;IncrementableLabel&lt;/a&gt; - Incrementable label for iOS, macOS, and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TTTAttributedLabel/TTTAttributedLabel"&gt;TTTAttributedLabel&lt;/a&gt; - A drop-in replacement for UILabel that supports attributes, data detectors, links, and more&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/me-abhinav/NumberMorphView"&gt;NumberMorphView&lt;/a&gt; - A label view for displaying numbers which can transition or animate using a technique called number tweening or number morphing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/GlitchLabel"&gt;GlitchLabel&lt;/a&gt; - Glitching UILabel for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomknig/TOMSMorphingLabel"&gt;TOMSMorphingLabel&lt;/a&gt; - Configurable morphing transitions between text values of a label.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tobihagemann/THLabel"&gt;THLabel&lt;/a&gt; - UILabel subclass, which additionally allows shadow blur, inner shadow, stroke text and fill gradient.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zipme/RQShineLabel"&gt;RQShineLabel&lt;/a&gt; - Secret app like text animation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/overboming/ZCAnimatedLabel"&gt;ZCAnimatedLabel&lt;/a&gt; - UILabel replacement with fine-grain appear/disappear animation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mukeshthawani/TriLabelView"&gt;TriLabelView&lt;/a&gt; - A triangle shaped corner label view for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Preloader.Ophiuchus"&gt;Preloader.Ophiuchus&lt;/a&gt; - Custom Label to apply animations on whole text or letters.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-mtl/MTLLinkLabel"&gt;MTLLinkLabel&lt;/a&gt; - MTLLinkLabel is linkable UILabel. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dataxpress/UICountingLabel/"&gt;UICountingLabel&lt;/a&gt; - Adds animated counting support to UILabel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dnKaratzas/SlidingText"&gt;SlidingText&lt;/a&gt; -  Swift UIView for sliding text with page indicator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/javalnanda/NumericAnimatedLabel/"&gt;NumericAnimatedLabel&lt;/a&gt; -  Swift UIView for showing numeric label with incremental and decremental step animation while changing value. Useful for scenarios like displaying currency.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/JSLabel"&gt;JSLabel&lt;/a&gt; -  A simple designable subclass on UILabel with extra IBDesignable and Blinking features.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/AnimatedMaskLabel"&gt;AnimatedMaskLabel&lt;/a&gt; -  Animated Mask Label is a nice gradient animated label. This is an easy way to add a shimmering effect to any view in your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stephan-tolksdorf/STULabel"&gt;STULabel&lt;/a&gt; -  A label view that's faster than UILabel and supports asynchronous rendering, links with UIDragInteraction, very flexible text truncation, Auto Layout, UIAccessibility and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-login" class="anchor" aria-hidden="true" href="#login"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Login&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/awesome-labs/LFLoginController"&gt;LFLoginController&lt;/a&gt; - Customizable login screen, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IcaliaLabs/LoginKit"&gt;LoginKit&lt;/a&gt; - LoginKit is a quick and easy way to add a Login/Signup UX to your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cely-tools/Cely"&gt;Cely&lt;/a&gt; - Plug-n-Play login framework written in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-menu" class="anchor" aria-hidden="true" href="#menu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Menu&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/evnaz/ENSwiftSideMenu"&gt;ENSwiftSideMenu&lt;/a&gt; - A simple side menu for iOS 7/8 written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/romaonthego/RESideMenu"&gt;RESideMenu&lt;/a&gt; - iOS 7/8 style side menu with parallax effect inspired by Dribbble shots.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SSA111/SSASideMenu"&gt;SSASideMenu&lt;/a&gt; - A Swift implementation of RESideMenu. A iOS 7/8 style side menu with parallax effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bradjasper/radialmenu"&gt;RadialMenu&lt;/a&gt; - RadialMenu is a custom control for providing a touch context menu (like iMessage recording in iOS 8) built with Swift &amp;amp; POP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arn00s/cariocamenu"&gt;cariocamenu&lt;/a&gt; - The fastest zero-tap iOS menu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vangelov/VLDContextSheet"&gt;VLDContextSheet&lt;/a&gt; - Context menu similar to the one in the Pinterest iOS app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/GuillotineMenu"&gt;GuillotineMenu&lt;/a&gt; - Our Guillotine Menu Transitioning Animation implemented in Swift reminds a bit of a notorious killing machine.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pixyzehn/MediumMenu"&gt;MediumMenu&lt;/a&gt; - A menu based on Medium iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hossamghareeb/SwiftySideMenu"&gt;SwiftySideMenu&lt;/a&gt; - SwiftySideMenu is a lightweight and easy to use side menu controller to add left menu and center view controllers with scale animation based on Pop framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lilei644/LLSlideMenu"&gt;LLSlideMenu&lt;/a&gt; - This is a spring slide menu for iOS apps&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/Swift-Slide-Menu"&gt;Swift-Slide-Menu&lt;/a&gt; - A Slide Menu, written in Swift, inspired by Slide Menu Material Design.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cxa/MenuItemKit"&gt;MenuItemKit&lt;/a&gt; - UIMenuItem with image and block(closure)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhamBaTho/BTNavigationDropdownMenu"&gt;BTNavigationDropdownMenu&lt;/a&gt; - The elegant dropdown menu, written in Swift, appears underneath navigation bar to display a list of related items when a user click on the navigation title.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexLittlejohn/ALRadialMenu"&gt;ALRadialMenu&lt;/a&gt; - A radial/circular menu featuring spring animations. Written in swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azuritul/AZDropdownMenu"&gt;AZDropdownMenu&lt;/a&gt; - An easy to use dropdown menu that supports images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/circle-menu"&gt;CircleMenu&lt;/a&gt; - An animated, multi-option menu button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dekatotoro/SlideMenuControllerSwift"&gt;SlideMenuControllerSwift&lt;/a&gt; - iOS Slide Menu View based on Google+, iQON, Feedly, Ameba iOS app. It is written in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonkykong/SideMenu"&gt;SideMenu&lt;/a&gt; - Simple side menu control in Swift inspired by Facebook. Right and Left sides. Lots of customization and animation options. Can be implemented in Storyboard with no code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cemolcay/CategorySliderView"&gt;CategorySliderView&lt;/a&gt; - slider view for choosing categories. add any UIView type as category item view. Fully customisable&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxkonovalov/MKDropdownMenu"&gt;MKDropdownMenu&lt;/a&gt; - A Dropdown Menu for iOS with many customizable parameters to suit any needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monoqlo/ExpandingMenu"&gt;ExpandingMenu&lt;/a&gt; - ExpandingMenu is menu button for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PageMenu/PageMenu"&gt;PageMenu&lt;/a&gt; - A paging menu controller built from other view controllers placed inside a scroll view (like Spotify, Windows Phone, Instagram)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zsy78191/XXXRoundMenuButton"&gt;XXXRoundMenuButton&lt;/a&gt; - A simple circle style menu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sunilsharma08/IGCMenu"&gt;IGCMenu&lt;/a&gt; - Grid and Circular menu with animation.Easy to customise.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eejahromi/EEJSelectMenu"&gt;EEJSelectMenu&lt;/a&gt; - Single selection menu with cool animations, responsive with all screen sizes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bestwnh/IGLDropDownMenu"&gt;IGLDropDownMenu&lt;/a&gt; - An iOS drop down menu with pretty animation and easy to customize.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Side-Menu.iOS"&gt;Side-Menu.iOS&lt;/a&gt; - Animated side menu with customizable UI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xhzengAIB/PopMenu"&gt;PopMenu&lt;/a&gt; - PopMenu is pop animation menu inspired by Sina weibo / NetEase app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/FlowingMenu"&gt;FlowingMenu&lt;/a&gt; - Interactive view transition to display menus with flowing and bouncing effects in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Persei"&gt;Persei&lt;/a&gt; - Animated top menu for UITableView / UICollectionView / UIScrollView written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AssistoLab/DropDown"&gt;DropDown&lt;/a&gt; - A Material Design drop down for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KittenYang/KYGooeyMenu"&gt;KYGooeyMenu&lt;/a&gt; - A not bad gooey effects menu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/teodorpatras/SideMenuController"&gt;SideMenuController&lt;/a&gt; - A side menu controller written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Context-Menu.iOS"&gt;Context-Menu.iOS&lt;/a&gt; - You can easily add awesome animated context menu to your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ViewDeck/ViewDeck"&gt;ViewDeck&lt;/a&gt; - An implementation of the sliding functionality found in the Path 2.0 or Facebook iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edekhayser/FrostedSidebar"&gt;FrostedSidebar&lt;/a&gt; - Hamburger Menu using Swift and iOS 8 API's&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nightonke/VHBoomMenuButton"&gt;VHBoomMenuButton&lt;/a&gt; - A menu which can ... BOOM!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qmathe/DropDownMenuKit"&gt;DropDownMenuKit&lt;/a&gt; - A simple, modular and highly customizable UIKit menu, that can be attached to the navigation bar or toolbar, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anatoliyv/RevealMenuController"&gt;RevealMenuController&lt;/a&gt; - Expandable item groups, custom position and appearance animation. Similar to ActionSheet style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robertherdzik/RHSideButtons"&gt;RHSideButtons&lt;/a&gt; - Library provides easy to implement variation of Android (Material Design) Floating Action Button for iOS. You can use it as your app small side menu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hu55a1n1/Swift-CircleMenu"&gt;Swift-CircleMenu&lt;/a&gt; - Rotating circle menu written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dogo/AKSideMenu"&gt;AKSideMenu&lt;/a&gt; - Beautiful iOS side menu library with parallax effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/handsomecode/InteractiveSideMenu"&gt;InteractiveSideMenu&lt;/a&gt; - Customizable iOS Interactive Side Menu written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/YNDropDownMenu"&gt;YNDropDownMenu&lt;/a&gt; - Adorable iOS drop down menu with Swift3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kawoou/KWDrawerController"&gt;KWDrawerController&lt;/a&gt; - Drawer view controller that easy to use!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/javalnanda/JNDropDownMenu"&gt;JNDropDownMenu&lt;/a&gt; - Easy to use tableview style drop down menu with multi-column support written in Swift3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/fan-menu"&gt;FanMenu&lt;/a&gt; - Menu with a circular layout based on Macaw.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uptechteam/AirBar"&gt;AirBar&lt;/a&gt; - UIScrollView driven expandable menu written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fahidattique55/FAPanels"&gt;FAPanels&lt;/a&gt; - FAPanels for transition&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yysskk/SwipeMenuViewController"&gt;SwipeMenuViewController&lt;/a&gt; - Swipable tab and menu View and ViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tungvoduc/DTPagerController"&gt;DTPagerController&lt;/a&gt; - A fully customizable container view controller to display set of ViewControllers in horizontal scroller&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kazuhiro4949/PagingKit"&gt;PagingKit&lt;/a&gt; - PagingKit provides customizable menu UI It has more flexible layout and design than the other libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Dropdowns"&gt;Dropdowns&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="droplet" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a7.png"&gt;💧&lt;/g-emoji&gt; Dropdown in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rechsteiner/Parchment"&gt;Parchment&lt;/a&gt; - A paging view controller with a highly customizable menu. Built on UICollectionView, with support for custom layouts and infinite data sources.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GitHawkApp/ContextMenu"&gt;ContextMenu&lt;/a&gt; - An iOS context menu UI inspired by Things 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antoniocasero/Panels"&gt;Panels&lt;/a&gt; - Panels is a framework to easily add sliding panels to your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlekseyPleshkov/UIMenuScroll"&gt;UIMenuScroll&lt;/a&gt; - Creating the horizontal swiping navigation how on Facebook Messenger.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/softhausHQ/CircleBar"&gt;CircleBar&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt; A fun, easy-to-use tab bar navigation controller for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanVorobei/SPLarkController"&gt;SPLarkController&lt;/a&gt; - Settings screen with buttons and switches.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-navigation-bar" class="anchor" aria-hidden="true" href="#navigation-bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Navigation Bar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tristanhimmelman/HidingNavigationBar"&gt;HidingNavigationBar&lt;/a&gt; - Easily hide and show a view controller's navigation bar (and tab bar) as a user scrolls&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MoZhouqi/KMNavigationBarTransition"&gt;KMNavigationBarTransition&lt;/a&gt; - A drop-in universal library helps you to manage the navigation bar styles and makes transition animations smooth between different navigation bar styles while pushing or popping a view controller for all orientations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ltebean/LTNavigationBar"&gt;LTNavigationBar&lt;/a&gt; - UINavigationBar Category which allows you to change its appearance dynamically&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gmertk/BusyNavigationBar"&gt;BusyNavigationBar&lt;/a&gt; - A UINavigationBar extension to show loading effects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kingiol/KDInteractiveNavigationController"&gt;KDInteractiveNavigationController&lt;/a&gt; - A UINavigationController subclass that support pop interactive UINavigationbar with hidden or show.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/AMScrollingNavbar"&gt;AMScrollingNavbar&lt;/a&gt; - Scrollable UINavigationBar that follows the scrolling of a UIScrollView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wilbertliu/NavKit"&gt;NavKit&lt;/a&gt; - Simple and integrated way to customize navigation bar experience on iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DanisFabric/RainbowNavigation"&gt;RainbowNavigation&lt;/a&gt; - An easy way to change backgroundColor of UINavigationBar when Push &amp;amp; Pop&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimOliver/TONavigationBar"&gt;TONavigationBar&lt;/a&gt; - A simple subclass that adds the ability to set the navigation bar background to 'clear' and gradually transition it visibly back in, similar to the effect in the iOS Music app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-pickerview" class="anchor" aria-hidden="true" href="#pickerview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PickerView&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/skywinder/ActionSheetPicker-3.0/"&gt;ActionSheetPicker-3.0&lt;/a&gt; - Quickly reproduce the dropdown UIPickerView / ActionSheet functionality on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/filipealva/PickerView"&gt;PickerView&lt;/a&gt; - A customizable alternative to UIPickerView in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/squimer/DatePickerDialog-iOS-Swift"&gt;DatePickerDialog&lt;/a&gt; - Date picker dialog for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chenzeyu/CZPicker"&gt;CZPicker&lt;/a&gt; - A picker view shown as a popup for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alikaragoz/AIDatePickerController"&gt;AIDatePickerController&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="date" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c5.png"&gt;📅&lt;/g-emoji&gt; UIDatePicker modally presented with iOS 7 custom transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/4taras4/CountryCode"&gt;CountryPicker&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="date" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c5.png"&gt;📅&lt;/g-emoji&gt; UIPickerView with Country names flags and phoneCodes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kmcgill88/McPicker-iOS"&gt;McPicker&lt;/a&gt; - A customizable, closure driven UIPickerView drop-in solution with animations that is rotation ready.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blueapron/Mandoline"&gt;Mandoline&lt;/a&gt; - An iOS picker view to serve all your "picking" needs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/di2pra/D2PDatePicker"&gt;D2PDatePicker&lt;/a&gt; - Elegant and Easy-to-Use iOS Swift Date Picker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kizitonwose/CountryPickerView"&gt;CountryPickerView&lt;/a&gt;- A simple, customizable view for efficiently collecting country information in iOS apps&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kwallet/planet"&gt;planet&lt;/a&gt; - A country picker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mustafaibrahim989/MICountryPicker"&gt;MICountryPicker&lt;/a&gt; - Swift country picker with search option.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abhiperry/ADDatePicker"&gt;ADDatePicker&lt;/a&gt; - A fully customizable iOS Horizontal PickerView library, written in pure swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SURYAKANTSHARMA/CountryPicker"&gt;SKCountryPicker&lt;/a&gt; - A simple, customizable Country picker for picking country or dialing code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-popup" class="anchor" aria-hidden="true" href="#popup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Popup&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rynecheow/PopupKit"&gt;PopupKit&lt;/a&gt; - A simple and flexible class for presenting custom views as a popup in iOS and tvOS, maintained from &lt;a href="https://github.com/jmascia/KLCPopup"&gt;KLCPopup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adad184/MMPopupView"&gt;MMPopupView&lt;/a&gt; - Pop-up based view(e.g. alert sheet), can easily customize.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kevin0571/STPopup"&gt;STPopup&lt;/a&gt; - STPopup provides a UINavigationController in popup style, for both iPhone and iPad.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/psy2k/NMPopUpView"&gt;NMPopUpView&lt;/a&gt; - Simple iOS class for showing nice popup windows. Swift and Objective-C versions available.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daisuke310vvv/PopupController"&gt;PopupController&lt;/a&gt; - A customizable controller for showing temporary popup view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/binchik/SubscriptionPrompt"&gt;SubscriptionPrompt&lt;/a&gt; - Subscription View Controller like the Tinder uses&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IcaliaLabs/Presentr"&gt;Presentr&lt;/a&gt; - Wrapper for custom ViewController presentations in iOS 8+&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Orderella/PopupDialog"&gt;PopupDialog&lt;/a&gt; - A simple, customizable popup dialog for iOS written in Swift. Replaces UIAlertControllers alert style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/SelectionDialog"&gt;SelectionDialog&lt;/a&gt; - Simple selection dialog.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/AZDialogViewController"&gt;AZDialogViewController&lt;/a&gt; - A highly customizable alert dialog controller that mimics Snapchat's alert dialog.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MarioIannotta/MIBlurPopup"&gt;MIBlurPopup&lt;/a&gt; - MIBlurPopup let you create amazing popups with a blurred background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeoNatan/LNPopupController"&gt;LNPopupController&lt;/a&gt; - a framework for presenting view controllers as popups of other view controllers, much like the Apple Music and Podcasts apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shin8484/PopupWindow"&gt;PopupWindow&lt;/a&gt; - PopupWindow is a simple Popup using another UIWindow in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iamshezad/SHPopup"&gt;SHPopup&lt;/a&gt; - SHPopup is a simple lightweight library for popup view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/corin8823/Popover"&gt;Popover&lt;/a&gt; - Popover is a balloon library like Facebook app. It is written in pure swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huri000/SwiftEntryKit"&gt;SwiftEntryKit&lt;/a&gt; - A highly customizable popups, alerts and banners presenter for iOS. It offers various presets and is written in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JonyFang/FFPopup"&gt;FFPopup&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="shinto_shrine" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26e9.png"&gt;⛩&lt;/g-emoji&gt;FFPopup is a lightweight library for presenting custom views as a popup.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-progressview" class="anchor" aria-hidden="true" href="#progressview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ProgressView&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/khawajafarooq/ProgressMeter"&gt;ProgressMeter&lt;/a&gt; - Display the progress on a meter with customized annotations for iOS developed in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keygx/GradientCircularProgress"&gt;GradientCircularProgress&lt;/a&gt; - Customizable progress indicator library in Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-pull-to-refresh" class="anchor" aria-hidden="true" href="#pull-to-refresh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pull to Refresh&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gontovnik/DGElasticPullToRefresh"&gt;DGElasticPullToRefresh&lt;/a&gt; - Elastic pull to refresh for iOS developed in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/entotsu/PullToBounce"&gt;PullToBounce&lt;/a&gt; - Animated "Pull To Refresh" Library for UIScrollView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/samvermette/SVPullToRefresh"&gt;SVPullToRefresh&lt;/a&gt; - Give pull-to-refresh &amp;amp; infinite scrolling to any UIScrollView with 1 line of code. &lt;a href="http://samvermette.com/314" rel="nofollow"&gt;http://samvermette.com/314&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uzysjung/UzysAnimatedGifPullToRefresh"&gt;UzysAnimatedGifPullToRefresh&lt;/a&gt; - Add PullToRefresh using animated GIF to any scrollView with just simple code&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cemolcay/PullToRefreshCoreText"&gt;PullToRefreshCoreText&lt;/a&gt; - PullToRefresh extension for all UIScrollView type classes with animated text drawing style&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boztalay/BOZPongRefreshControl"&gt;BOZPongRefreshControl&lt;/a&gt; - A pull-down-to-refresh control for iOS that plays pong, originally created for the MHacks III iOS app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coolbeet/CBStoreHouseRefreshControl"&gt;CBStoreHouseRefreshControl&lt;/a&gt; - Fully customizable pull-to-refresh control inspired by Storehouse iOS app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peiweichen/SurfingRefreshControl"&gt;SurfingRefreshControl&lt;/a&gt; - Inspired by CBStoreHouseRefreshControl.Customizable pull-to-refresh control,written in pure Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mentionapp/mntpulltoreact"&gt;mntpulltoreact&lt;/a&gt; - One gesture, many actions. An evolution of Pull to Refresh.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Antondomashnev/ADChromePullToRefresh"&gt;ADChromePullToRefresh&lt;/a&gt; - Chrome iOS app style pull to refresh with multiple actions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dasdom/BreakOutToRefresh"&gt;BreakOutToRefresh&lt;/a&gt; - A playable pull to refresh view using SpriteKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CoderMJLee/MJRefresh"&gt;MJRefresh&lt;/a&gt; An easy way to use pull-to-refresh.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoang-tran/HTPullToRefresh"&gt;HTPullToRefresh&lt;/a&gt; - Easily add vertical and horizontal pull to refresh to any UIScrollView. Can also add multiple pull-to-refesh views at once.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dekatotoro/PullToRefreshSwift"&gt;PullToRefreshSwift&lt;/a&gt; - iOS Simple Cool PullToRefresh Library. It is written in pure swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delannoyk/GIFRefreshControl"&gt;GIFRefreshControl&lt;/a&gt; - GIFRefreshControl is a pull to refresh that supports GIF images as track animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fruitcoder/ReplaceAnimation"&gt;ReplaceAnimation&lt;/a&gt; - Pull-to-refresh animation in UICollectionView with a sticky header flow layout, written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/PullToMakeSoup"&gt;PullToMakeSoup&lt;/a&gt; - Custom animated pull-to-refresh that can be easily added to UIScrollView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Onix-Systems/RainyRefreshControl"&gt;RainyRefreshControl&lt;/a&gt; - Simple refresh control for iOS inspired by &lt;a href="https://dribbble.com/shots/2242263--1-Pull-to-refresh-Freebie-Weather-Concept" rel="nofollow"&gt;concept&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eggswift/pull-to-refresh"&gt;ESPullToRefresh&lt;/a&gt; - Customisable pull-to-refresh, including nice animation on the top&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CRAnimation/CRRefresh"&gt;CRRefresh&lt;/a&gt; - An easy way to use pull-to-refresh.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenFeyn/KafkaRefresh"&gt;KafkaRefresh&lt;/a&gt; - Highly scalable, custom, multi-style refresh framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-rating-stars" class="anchor" aria-hidden="true" href="#rating-stars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rating Stars&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/glenyi/FloatRatingView"&gt;FloatRatingView&lt;/a&gt; - Whole, half or floating point ratings control written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zekunyan/TTGEmojiRate"&gt;TTGEmojiRate&lt;/a&gt; - An emoji-liked rating view for iOS, implemented in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peterprokop/StarryStars"&gt;StarryStars&lt;/a&gt; - StarryStars is iOS GUI library for displaying and editing ratings&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/Cosmos"&gt;Cosmos&lt;/a&gt; - A star rating control for iOS / Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hsousa/HCSStarRatingView"&gt;HCSStarRatingView&lt;/a&gt; - Simple star rating view for iOS written in Objective-C&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatiBot/MBRateApp"&gt;MBRateApp&lt;/a&gt; - A groovy app rate stars screen for iOS written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbolatov/RPInteraction"&gt;RPInteraction&lt;/a&gt; - Review page interaction - handy and pretty way to ask for review.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-scrollview" class="anchor" aria-hidden="true" href="#scrollview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ScrollView&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ktanaka117/ScrollingFollowView"&gt;ScrollingFollowView&lt;/a&gt; - ScrollingFollowView is a simple view which follows UIScrollView scrolling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pronebird/UIScrollView-InfiniteScroll"&gt;UIScrollView-InfiniteScroll&lt;/a&gt; - UIScrollView infinite scroll category.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zjmdp/GoAutoSlideView"&gt;GoAutoSlideView&lt;/a&gt; - GoAutoSlideView extends UIScrollView by featuring infinitely and automatically slide.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terenceLuffy/AppStoreStyleHorizontalScrollView"&gt;AppStoreStyleHorizontalScrollView&lt;/a&gt; - App store style horizontal scroll view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgr-ksmt/PullToDismiss"&gt;PullToDismiss&lt;/a&gt; - You can dismiss modal viewcontroller by pulling scrollview or navigationbar in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kishikawakatsumi/SpreadsheetView"&gt;SpreadsheetView&lt;/a&gt; - Full configurable spreadsheet view user interfaces for iOS applications. With this framework, you can easily create complex layouts like schedule, gantt chart or timetable as if you are using Excel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AppliKeySolutions/VegaScroll"&gt;VegaScroll&lt;/a&gt; - VegaScroll is a lightweight animation flowlayout for UICollectionView completely written in Swift 4, compatible with iOS 11 and Xcode 9&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tdscientist/ShelfView-iOS"&gt;ShelfView-iOS&lt;/a&gt; - iOS custom view to display books on shelf&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/touchlane/SlideController"&gt;SlideController&lt;/a&gt; - SlideController is simple and flexible UI component completely written in Swift. It is a nice alternative for UIPageViewController built using power of generic types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huri000/CrownControl"&gt;CrownControl&lt;/a&gt; - Inspired by the Apple Watch Digital Crown, CrownControl is a tiny accessory view that enables scrolling through scrollable content without lifting your thumb.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Jiar/SegementSlide"&gt;SegementSlide&lt;/a&gt; - Multi-tier UIScrollView nested scrolling solution.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-segmented-control" class="anchor" aria-hidden="true" href="#segmented-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Segmented Control&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gmarm/BetterSegmentedControl"&gt;BetterSegmentedControl&lt;/a&gt; - An easy to use, customizable replacement for UISegmentedControl &amp;amp; UISwitch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Stormotion-Mobile/LUNSegmentedControl"&gt;LUNSegmentedControl&lt;/a&gt; - Customizable segmented control with interactive animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alikaragoz/AKASegmentedControl"&gt;AKASegmentedControl&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="chocolate_bar" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f36b.png"&gt;🍫&lt;/g-emoji&gt; Fully customizable Segmented Control for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twicketapp/TwicketSegmentedControl"&gt;TwicketSegmentedControl&lt;/a&gt; - Custom UISegmentedControl replacement for iOS, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sasojadrovski/SJFluidSegmentedControl"&gt;SJFluidSegmentedControl&lt;/a&gt; - A segmented control with custom appearance and interactive animations. Written in Swift 3.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HeshamMegid/HMSegmentedControl"&gt;HMSegmentedControl&lt;/a&gt; - A drop-in replacement for UISegmentedControl mimicking the style of the segmented control used in Google Currents and various other Google products.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/afishhhhh/YUSegment"&gt;YUSegment&lt;/a&gt; - A customizable segmented control for iOS. Supports both text and image.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MultiSelectSegmentedControl"&gt;MultiSelectSegmentedControl&lt;/a&gt; - adds Multiple-Selection to the standard &lt;code&gt;UISegmentedControl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KittenYang/DynamicMaskSegmentSwitch"&gt;DynamicMaskSegmentSwitch&lt;/a&gt; - A segment switcher with dynamic text mask effect&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TBXark/PinterestSegment"&gt;PinterestSegment&lt;/a&gt; - A Pinterest-like segment control with masking animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BowdusBrown/Rotary"&gt;Rotary&lt;/a&gt; - A customisable rotary wheel composed of selectable segments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gontovnik/DGRunkeeperSwitch"&gt;DGRunkeeperSwitch&lt;/a&gt; - Runkeeper design switch control (two part segment control)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-slider" class="anchor" aria-hidden="true" href="#slider"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Slider&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/12Rockets/VolumeControl"&gt;VolumeControl&lt;/a&gt; - Custom volume control for iPhone featuring a well-designed round slider.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ekhoo/WESlider"&gt;WESlider&lt;/a&gt; - Simple and light weight slider with chapter management&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shushutochako/IntervalSlider"&gt;IntervalSlider&lt;/a&gt; - IntervalSlider is a slider library like ReutersTV app. written in pure swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/warchimede/RangeSlider"&gt;RangeSlider&lt;/a&gt; - A simple range slider made in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shushutochako/CircleSlider"&gt;CircleSlider&lt;/a&gt; - CircleSlider is a Circular slider library. written in pure Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/MARKRangeSlider"&gt;MARKRangeSlider&lt;/a&gt; - A custom reusable slider control with 2 thumbs (range slider).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alskipp/ASValueTrackingSlider"&gt;ASValueTrackingSlider&lt;/a&gt; - A UISlider subclass that displays the slider value in a popup view&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TomThorpe/TTRangeSlider"&gt;TTRangeSlider&lt;/a&gt; - A slider, similar in style to UISlider, but which allows you to pick a minimum and maximum range.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MedvedevMax/MMSegmentSlider"&gt;MMSegmentSlider&lt;/a&gt; - Customizable animated slider for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spromicky/StepSlider"&gt;StepSlider&lt;/a&gt; - StepSlider its custom implementation of slider such as UISlider for preset integer values.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JellyDevelopment/JDSlider"&gt;JDSlider&lt;/a&gt; - An iOS Slider written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rehatkathuria/SnappingSlider"&gt;SnappingSlider&lt;/a&gt; - A beautiful slider control for iOS built purely upon Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EranBoudjnah/MTCircularSlider"&gt;MTCircularSlider&lt;/a&gt; - A feature-rich circular slider control.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonkykong/VerticalSlider"&gt;VerticalSlider&lt;/a&gt; - VerticalSlider is a vertical implementation of the UISlider slider control.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/taglia3/CircularSlider"&gt;CircularSlider&lt;/a&gt; - A powerful Circular Slider. It's written in Swift, it's 100% IBDesignable and all parameters are IBInspectable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HamzaGhazouani/HGCircularSlider"&gt;HGCircularSlider&lt;/a&gt; - A custom reusable circular slider control for iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WorldDownTown/RangeSeekSlider"&gt;RangeSeekSlider&lt;/a&gt; - A customizable range slider for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/SectionedSlider"&gt;SectionedSlider&lt;/a&gt; - Control Center Slider.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MultiSlider"&gt;MultiSlider&lt;/a&gt; - UISlider clone with multiple thumbs and values, optional snap intervals, optional value labels.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agilie/AGCircularPicker"&gt;AGCircularPicker&lt;/a&gt; - AGCircularPicker is helpful component for creating a controller aimed to manage any calculated parameter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/fluid-slider"&gt;Fluid Slider&lt;/a&gt; - A slider widget with a popup bubble displaying the precise value selected.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-splash-view" class="anchor" aria-hidden="true" href="#splash-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splash View&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/callumboddy/CBZSplashView"&gt;CBZSplashView&lt;/a&gt; - Twitter style Splash Screen View. Grows to reveal the Initial view behind.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sachinkesiraju/SKSplashView"&gt;SKSplashView&lt;/a&gt; - Create custom animated splash views similar to the ones in the Twitter, Uber and Ping iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PiXeL16/RevealingSplashView"&gt;RevealingSplashView&lt;/a&gt; - A Splash view that animates and reveals its content, inspired by Twitter splash&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-status-bar" class="anchor" aria-hidden="true" href="#status-bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status Bar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MaximKotliar/Bartinter"&gt;Bartinter&lt;/a&gt; - Status bar tint depending on content behind, updates dynamically.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-stepper" class="anchor" aria-hidden="true" href="#stepper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stepper&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectFreeze/PFStepper"&gt;PFStepper&lt;/a&gt; - May be the most elegant stepper you have ever had!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BalestraPatrick/ValueStepper"&gt;ValueStepper&lt;/a&gt; - A Stepper object that displays its value.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gmertk/GMStepper"&gt;GMStepper&lt;/a&gt; - A stepper with a sliding label in the middle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arn00s/barceloneta"&gt;barceloneta&lt;/a&gt; - The right way to increment/decrement values with a simple gesture on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/SnappingStepper"&gt;SnappingStepper&lt;/a&gt; - An elegant alternative to the UIStepper written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SinaMoetakef/SMNumberWheel"&gt;SMNumberWheel&lt;/a&gt; - A custom control written in Swift, which is ideal for picking numbers very fast but yet very accurate using a rotating wheel&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-switch" class="anchor" aria-hidden="true" href="#switch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Switch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alsedi/AnimatedSwitch"&gt;AnimatedSwitch&lt;/a&gt; - UISwitch which paints over the parent view with the color in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/ViralSwitch"&gt;ViralSwitch&lt;/a&gt; - A UISwitch that infects its superview with its tint color.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JunichiT/JTMaterialSwitch"&gt;JTMaterialSwitch&lt;/a&gt; - A customizable switch UI with ripple effect and bounce animations, inspired from Google's Material Design.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TBXark/TKSwitcherCollection"&gt;TKSwitcherCollection&lt;/a&gt; - An animate switch collection&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bvogelzang/SevenSwitch"&gt;SevenSwitch&lt;/a&gt; - iOS7 style drop in replacement for UISwitch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kovpas/PMZSwitch"&gt;PMZSwitch&lt;/a&gt; - Yet another animated toggle&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/knn90/Switcher"&gt;Switcher&lt;/a&gt; - Swift - Custom UISwitcher with animation when change status&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/paper-switch"&gt;RAMPaperSwitch&lt;/a&gt; - RAMPaperSwitch is a Swift module which paints over the parent view when the switch is turned on.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cocoatoucher/AIFlatSwitch"&gt;AIFlatSwitch&lt;/a&gt; - A flat component alternative to UISwitch on iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/T-Pham/Switch"&gt;Switch&lt;/a&gt; - An iOS switch control implemented in Swift with full Interface Builder support.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-tab-bar" class="anchor" aria-hidden="true" href="#tab-bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tab Bar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ezescaruli/ESTabBarController"&gt;ESTabBarController&lt;/a&gt; - A tab bar controller for iOS that allows highlighting buttons and setting custom actions to them.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KittenYang/GooeyTabbar"&gt;GooeyTabbar&lt;/a&gt; - A gooey effect tabbar&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/animated-tab-bar"&gt;animated-tab-bar&lt;/a&gt; - RAMAnimatedTabBarController is a Swift module for adding animation to tabbar items.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/FoldingTabBar.iOS"&gt;FoldingTabBar.iOS&lt;/a&gt; - Folding Tab Bar and Tab Bar Controller&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Goles/GGTabBar"&gt;GGTabBar&lt;/a&gt; - Another UITabBar &amp;amp; UITabBarController (iOS Tab Bar) replacement, but uses Auto Layout for arranging it's views hierarchy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/adaptive-tab-bar"&gt;adaptive-tab-bar&lt;/a&gt; - AdaptiveController is a 'Progressive Reduction' Swift module for adding custom states to Native or Custom iOS UI elements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lucoceano/Pager"&gt;Pager&lt;/a&gt; - Easily create sliding tabs with Pager&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLPagerTabStrip"&gt;XLPagerTabStrip&lt;/a&gt; - Android PagerTabStrip for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EndouMari/TabPageViewController"&gt;TabPageViewController&lt;/a&gt; - Paging view controller and scroll tab view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/winslowdibona/TabDrawer"&gt;TabDrawer&lt;/a&gt; - Customizable TabBar UI element that allows you to run a block of code upon TabBarItem selection, written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fortmarek/SwipeViewController"&gt;SwipeViewController&lt;/a&gt; - SwipeViewController is a Swift modification of RKSwipeBetweenViewControllers - navigate between pages / ViewControllers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/ColorMatchTabs"&gt;ColorMatchTabs&lt;/a&gt; - Interesting way to display tabs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antiguab/BATabBarController"&gt;BATabBarController&lt;/a&gt; - A TabBarController with a unique animation for selection&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aryaxt/ScrollPager"&gt;ScrollPager&lt;/a&gt; - A scroll pager that displays a list of tabs (segments) and manages paging between given views&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Segmentio"&gt;Segmentio&lt;/a&gt; - Animated top/bottom segmented control written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ykyouhei/KYWheelTabController"&gt;KYWheelTabController&lt;/a&gt; - KYWheelTabController is a subclass of UITabBarController.It displays the circular menu instead of UITabBar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/odedharth/SuperBadges"&gt;SuperBadges&lt;/a&gt; - Add emojis and colored dots as badges for your Tab Bar buttons&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minitour/AZTabBarController"&gt;AZTabBarController&lt;/a&gt; - A custom tab bar controller for iOS written in Swift 3.0&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/D-32/MiniTabBar"&gt;MiniTabBar&lt;/a&gt; - A clean simple alternative to the UITabBar&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcosgriselli/SwipeableTabBarController"&gt;SwipeableTabBarController&lt;/a&gt; - UITabBarController with swipe interaction between its tabs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/smahajan28/SMSwipeableTabView"&gt;SMSwipeableTabView&lt;/a&gt; - Swipeable Views with Tabs (Like Android SwipeView With Tabs Layout)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uias/Tabman"&gt;Tabman&lt;/a&gt; - A powerful paging view controller with indicator bar for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EzimetYusup/WormTabStrip"&gt;WormTabStrip&lt;/a&gt; Beatiful ViewPager For iOS written in Swift  (inspired by Android &lt;a href="https://github.com/ogaclejapan/SmartTabLayout"&gt;SmartTabLayout&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simformsolutions/SSCustomTabMenu"&gt;SSCustomTabMenu&lt;/a&gt; Simple customizable iOS bottom menu with Tabbar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yervandsar/SmoothTab"&gt;SmoothTab&lt;/a&gt; - Smooth customizable tabs for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yervandsar/ExpandedTabBar"&gt;ExpandedTabBar&lt;/a&gt; - Very creative designed solution for "more" items in UITabBarController&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-table-view--collection-view" class="anchor" aria-hidden="true" href="#table-view--collection-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table View / Collection View&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-table-view" class="anchor" aria-hidden="true" href="#table-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table View&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MortimerGoro/MGSwipeTableCell"&gt;MGSwipeTableCell&lt;/a&gt; - UITableViewCell subclass that allows to display swippable buttons with a variety of transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanton/YXTPageView"&gt;YXTPageView&lt;/a&gt; - A PageView, which supporting scrolling to transition between a UIView and a UITableView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastred/ConfigurableTableViewController"&gt;ConfigurableTableViewController&lt;/a&gt; - Typed, yet Flexible Table View Controller &lt;a href="https://holko.pl/2016/01/05/typed-table-view-controller/" rel="nofollow"&gt;https://holko.pl/2016/01/05/typed-table-view-controller/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electrickangaroo/Lightning-Table"&gt;Lightning-Table&lt;/a&gt; - A declarative api for working with UITableView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/Static"&gt;Static&lt;/a&gt; - Simple static table views for iOS in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/AMWaveTransition"&gt;AMWaveTransition&lt;/a&gt; - Custom transition between viewcontrollers holding tableviews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CEWendel/SWTableViewCell"&gt;SWTableViewCell&lt;/a&gt; - An easy-to-use UITableViewCell subclass that implements a swippable content view which exposes utility buttons (similar to iOS 7 Mail Application)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/liuzhiyi1992/ZYThumbnailTableView"&gt;ZYThumbnailTableView&lt;/a&gt; - a TableView have thumbnail cell only, and you can use gesture let it expands other expansionView, all diy&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bitwit/BWSwipeRevealCell"&gt;BWSwipeRevealCell&lt;/a&gt; - A Swift library for swipeable table cells&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/preview-transition"&gt;preview-transition&lt;/a&gt; - PreviewTransition is a simple preview gallery controller&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bcylin/QuickTableViewController"&gt;QuickTableViewController&lt;/a&gt; - A simple way to create a UITableView for settings in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxsokolov/TableKit"&gt;TableKit&lt;/a&gt; - Type-safe declarative table views with Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/v-braun/VBPiledView"&gt;VBPiledView&lt;/a&gt; - Simple and beautiful stacked UIView to use as a replacement for an UITableView, UIImageView or as a menu&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tianzhuo112/VTMagic"&gt;VTMagic&lt;/a&gt; - VTMagic is a page container library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alikaragoz/MCSwipeTableViewCell"&gt;MCSwipeTableViewCell&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="point_up_2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f446.png"&gt;👆&lt;/g-emoji&gt; Convenient UITableViewCell subclass that implements a swippable content to trigger actions (similar to the Mailbox app).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mindz-eye/MYTableViewIndex"&gt;MYTableViewIndex&lt;/a&gt; - A pixel perfect replacement for UITableView section index, written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/palmin/ios-dragable-table-cells"&gt;ios-dragable-table-cells&lt;/a&gt; - Support for drag-n-drop of UITableViewCells in a navigation hierarchy of view controllers. You drag cells by tapping and holding them.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DavdRoman/Bohr"&gt;Bohr&lt;/a&gt; - Bohr allows you to set up a settings screen for your app with three principles in mind: ease, customization and extensibility.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adamshin/SwiftReorder"&gt;SwiftReorder&lt;/a&gt; - Add drag-and-drop reordering to any table view with just a few lines of code. Robust, lightweight, and completely customizable. [e]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/HoverConversion"&gt;HoverConversion&lt;/a&gt; - HoverConversion realized vertical paging with UITableView. UIViewController will be paging when reaching top or bottom of UITableView contentOffset.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KyoheiG3/TableViewDragger"&gt;TableViewDragger&lt;/a&gt; - A cells of UITableView can be rearranged by drag and drop.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dimpiax/FlexibleTableViewController"&gt;FlexibleTableViewController&lt;/a&gt; - Swift library of generic table view controller with external data processing of functionality, like determine cell's reuseIdentifier related to indexPath, configuration of requested cell for display and cell selection handler&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edopelawi/CascadingTableDelegate"&gt;CascadingTableDelegate&lt;/a&gt; - A no-nonsense way to write cleaner UITableViewDelegate and UITableViewDataSource in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kf99916/TimelineTableViewCell"&gt;TimelineTableViewCell&lt;/a&gt; - Simple timeline view implemented by UITableViewCell written in Swift 3.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robertherdzik/RHPreviewCell"&gt;RHPreviewCell&lt;/a&gt; - I envied so much Spotify iOS app this great playlist preview cell. Now you can give your users ability to quick check "what content is hidden under your UITableViewCell".&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimOliver/TORoundedTableView"&gt;TORoundedTableView&lt;/a&gt; - A subclass of UITableView that styles it like Settings.app on iPad&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mergesort/TableFlip"&gt;TableFlip&lt;/a&gt; - A simpler way to do cool UITableView animations! (╯°□°）╯︵ ┻━┻&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DenTelezhkin/DTTableViewManager"&gt;DTTableViewManager&lt;/a&gt; - Protocol-oriented UITableView management, powered by generics and associated types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwipeCellKit/SwipeCellKit"&gt;SwipeCellKit&lt;/a&gt; - Swipeable UITableViewCell based on the stock Mail.app, implemented in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/ReverseExtension"&gt;ReverseExtension&lt;/a&gt; - A UITableView extension that enables cell insertion from the bottom of a table view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/SelectionList"&gt;SelectionList&lt;/a&gt; - Simple single-selection or multiple-selection checklist, based on UITableView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AfrozZaheer/AZTableViewController"&gt;AZTableViewController&lt;/a&gt; - Elegant and easy way to integrate pagination with dummy views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/SAInboxViewController"&gt;SAInboxViewController&lt;/a&gt; - UIViewController subclass inspired by "Inbox by google" animated transitioning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muyexi/StaticTableViewController"&gt;StaticTableViewController&lt;/a&gt; - Dynamically hide / show cells of static UITableViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okcupid/OKTableViewLiaison"&gt;OKTableViewLiaison&lt;/a&gt; - Framework to help you better manage UITableView configuration.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3sidedcube/ThunderTable"&gt;ThunderTable&lt;/a&gt; - A simple declarative approach to UITableViewController management using a protocol-based approach.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-collection-view" class="anchor" aria-hidden="true" href="#collection-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection View&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jflinter/Dwifft"&gt;Dwifft&lt;/a&gt; - Swift Diff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/manuelescrig/MEVFloatingButton"&gt;MEVFloatingButton&lt;/a&gt; - An iOS drop-in UITableView, UICollectionView and UIScrollView superclass category for showing a customizable floating button on top of it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kean/Preheat"&gt;Preheat&lt;/a&gt; - Automates prefetching of content in UITableView and UICollectionView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/DisplaySwitcher"&gt;DisplaySwitcher&lt;/a&gt; - Custom transition between two collection view layouts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AliSoftware/Reusable"&gt;Reusable&lt;/a&gt; - A Swift mixin for UITableViewCells and UICollectionViewCells&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nghialv/Sapporo"&gt;Sapporo&lt;/a&gt; - Cellmodel-driven collectionview manager&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matbeich/StickyCollectionView-Swift"&gt;StickyCollectionView-Swift&lt;/a&gt; - UICollectionView layout for presenting of the overlapping cells.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKickMobile/TLIndexPathTools"&gt;TLIndexPathTools&lt;/a&gt; - TLIndexPathTools is a small set of classes that can greatly simplify your table and collection views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Instagram/IGListKit"&gt;IGListKit&lt;/a&gt; - A data-driven UICollectionView framework for building fast and flexible lists.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dimpiax/FlexibleCollectionViewController"&gt;FlexibleCollectionViewController&lt;/a&gt; - Swift library of generic collection view controller with external data processing of functionality, like determine cell's reuseIdentifier related to indexPath, configuration of requested cell for display and cell selection handler etc&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/ASCollectionView"&gt;ASCollectionView&lt;/a&gt; - A Swift collection view inspired by Airbnb.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/giulio92/GLTableCollectionView"&gt;GLTableCollectionView&lt;/a&gt; - Netflix and App Store like UITableView with UICollectionView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kazuhiro4949/EditDistance"&gt;EditDistance&lt;/a&gt; - Incremental update tool for UITableView and UICollectionView&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stuffrabbit/SwiftSpreadsheet"&gt;SwiftSpreadSheet&lt;/a&gt; - Spreadsheet CollectionViewLayout in Swift. Fully customizable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GenericDataSource/GenericDataSource"&gt;GenericDataSource&lt;/a&gt; - A generic small reusable components for data source implementation for UITableView/UICollectionView in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KyoheiG3/PagingView"&gt;PagingView&lt;/a&gt; - Infinite paging, Smart auto layout, Interface of similar to UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/PJFDataSource"&gt;PJFDataSource&lt;/a&gt; - PJFDataSource is a small library that provides a simple, clean architecture for your app to manage its data sources while providing a consistent user interface for common content states (i.e. loading, loaded, empty, and error).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/DataSources"&gt;DataSources&lt;/a&gt; - Type-safe data-driven List-UI Framework. (We can also use ASCollectionNode)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmick66/KDDragAndDropCollectionView"&gt;KDDragAndDropCollectionView&lt;/a&gt; - Dragging &amp;amp; Dropping data across multiple UICollectionViews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/SectionScrubber"&gt;SectionScrubber&lt;/a&gt; - A component to quickly scroll between collection view sections&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SoySauceLab/CollectionKit"&gt;CollectionKit&lt;/a&gt; - A modern Swift framework for building reusable data-driven collection components.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AfrozZaheer/AZCollectionViewController"&gt;AZCollectionViewController&lt;/a&gt; - Easy way to integrate pagination with dummy views in CollectionView, make Instagram Discover within minutes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/touchlane/CampcotCollectionView"&gt;CampcotCollectionView&lt;/a&gt; - CampcotCollectionView is a custom UICollectionView written in Swift that allows to expand and collapse sections. It provides a simple API to manage collection view appearance.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appunite/Stefan"&gt;Stefan&lt;/a&gt; - A guy that helps you manage collections and placeholders in easy way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HelloElephant/Parade"&gt;Parade&lt;/a&gt; - Parallax Scroll-Jacking Effects Engine for iOS / tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaherKSantina/MSPeekCollectionViewDelegateImplementation"&gt;MSPeekCollectionViewDelegateImplementation&lt;/a&gt; - A custom paging behavior that peeks the previous and next items in a collection view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Squarespace/simple-source"&gt;SimpleSource&lt;/a&gt; - Easy and type-safe iOS table and collection views in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bannzai/conv"&gt;Conv&lt;/a&gt; - Conv smart represent UICollectionView data structure more than UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/Carbon"&gt;Carbon&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="biking_man" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6b4.png"&gt;🚴&lt;/g-emoji&gt; A declarative library for building component-based user interfaces in UITableView and UICollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3sidedcube/ThunderCollection"&gt;ThunderCollection&lt;/a&gt; - A simple declarative approach to UICollectionViewController management using a protocol-based approach.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/DiffableDataSources"&gt;DiffableDataSources&lt;/a&gt; - A library for backporting UITableView/UICollectionViewDiffableDataSource.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-expandable-cell" class="anchor" aria-hidden="true" href="#expandable-cell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Expandable Cell&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/folding-cell"&gt;folding-cell&lt;/a&gt; - FoldingCell is an expanding content cell inspired by folding paper material&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEAccordion"&gt;AEAccordion&lt;/a&gt; - UITableViewController with accordion effect (expand / collapse cells).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amratab/ThreeLevelAccordian"&gt;ThreeLevelAccordian&lt;/a&gt; - This is a customisable three level accordian with options for adding images and accessories images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/YNExpandableCell"&gt;YNExpandableCell&lt;/a&gt; - Awesome expandable, collapsible tableview cell for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nandiin/Savory"&gt;Savory&lt;/a&gt; - A swift accordion view implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okhanokbay/ExpyTableView"&gt;ExpyTableView&lt;/a&gt; - Make your table view expandable just by implementing one method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monofire/FTFoldingPaper"&gt;FTFoldingPaper&lt;/a&gt; - Emulates paper folding effect. Can be integrated with UITableView or used with other UI components.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jeantimex/CollapsibleTableSectionViewController"&gt;CollapsibleTableSectionViewController&lt;/a&gt; - A swift library to support collapsible sections in a table view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/ExpandableCell"&gt;ExpandableCell&lt;/a&gt; - Fully refactored YNExapnadableCell with more concise, bug free. Awesome expandable, collapsible tableview cell for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/expanding-collection"&gt;expanding-collection&lt;/a&gt; - ExpandingCollection is a card peek/pop controller&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-header" class="anchor" aria-hidden="true" href="#header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Header&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Vinodh-G/ParallaxTableViewHeader"&gt;ParallaxTableViewHeader&lt;/a&gt; - Parallax scrolling effect on UITableView header view when a tableView is scrolled.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CSStickyHeaderFlowLayout/CSStickyHeaderFlowLayout"&gt;CSStickyHeaderFlowLayout&lt;/a&gt; - UICollectionView replacement of UITableView. Do even more like Parallax Header, Sticky Section Header.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gskbyte/GSKStretchyHeaderView"&gt;GSKStretchyHeaderView&lt;/a&gt; - Configurable yet easy to use stretchy header view for UITableView and UICollectionView.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-placeholder" class="anchor" aria-hidden="true" href="#placeholder"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Placeholder&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dzenbot/DZNEmptyDataSet"&gt;DZNEmptyDataSet&lt;/a&gt; - A drop-in UITableView/UICollectionView superclass category for showing empty datasets whenever the view has no content to display.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HamzaGhazouani/HGPlaceholders"&gt;HGPlaceholders&lt;/a&gt; - Nice library to show and create placeholders and Empty States for any UITableView/UICollectionView in your project&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malkouz/ListPlaceholder"&gt;ListPlaceholder&lt;/a&gt; - ListPlaceholder is a swift library allows you to easily add facebook style animated loading placeholder to your tableviews or collection views&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wizeline/WLEmptyState"&gt;WLEmptyState&lt;/a&gt; - A component that lets you customize the view when the dataset of UITableView is empty.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-collection-view-layout" class="anchor" aria-hidden="true" href="#collection-view-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection View Layout&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chiahsien/CHTCollectionViewWaterfallLayout"&gt;CHTCollectionViewWaterfallLayout&lt;/a&gt; - The waterfall (i.e., Pinterest-like) layout for UICollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fmitech/FMMosaicLayout"&gt;FMMosaicLayout&lt;/a&gt; - A drop-in mosaic collection view layout with a focus on simple customizations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vinnyoodles/mosaic-layout"&gt;mosaic-layout&lt;/a&gt; - A mosaic collection view layout inspired by Lightbox's Algorithm, written in Swift&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKickMobile/TLLayoutTransitioning"&gt;TLLayoutTransitioning&lt;/a&gt; - Enhanced transitioning between UICollectionView layouts in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BenEmdon/CenteredCollectionView"&gt;CenteredCollectionView&lt;/a&gt; - A lightweight UICollectionViewLayout that &lt;em&gt;'pages'&lt;/em&gt; and centers it's cells &lt;g-emoji class="g-emoji" alias="ferris_wheel" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a1.png"&gt;🎡&lt;/g-emoji&gt; written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yacir/CollectionViewSlantedLayout"&gt;CollectionViewSlantedLayout&lt;/a&gt; - UICollectionViewLayout with slanted content&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwheelbuy/SquareMosaicLayout"&gt;SquareMosaicLayout&lt;/a&gt; - An extandable mosaic UICollectionViewLayout with a focus on extremely flexible customizations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/BouncyLayout"&gt;BouncyLayout&lt;/a&gt; - BouncyLayout is a collection view layout that makes your cells bounce.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AfrozZaheer/AZSafariCollectionViewLayout"&gt;AZSafariCollectionViewLayout&lt;/a&gt; - AZSafariCollectionViewLayout is replica of safari browser history page layout. very easy to use, IBInspectable are given for easy integration.
-ollectionView, make Instagram Discover within minutes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Blueprints"&gt;Blueprints&lt;/a&gt; - A framework that is meant to make your life easier when working with collection view flow layouts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yahoojapan/UICollectionViewSplitLayout"&gt;UICollectionViewSplitLayout&lt;/a&gt; - UICollectionViewSplitLayout makes collection view more responsive.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VladIacobIonut/Swinflate"&gt;Swinflate&lt;/a&gt; -  A bunch of layouts providing light and seamless experiences in your CollectionView.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-tag" class="anchor" aria-hidden="true" href="#tag"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tag&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/paulrolfe/PARTagPicker"&gt;PARTagPicker&lt;/a&gt; - This pod provides a view controller for choosing and creating tags in the style of wordpress or tumblr.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/AMTagListView"&gt;AMTagListView&lt;/a&gt; - UIScrollView subclass that allows to add a list of highly customizable tags.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/riteshhgupta/TagCellLayout"&gt;TagCellLayout&lt;/a&gt; - UICollectionView layout for Tags with Left, Center &amp;amp; Right alignments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zekunyan/TTGTagCollectionView"&gt;TTGTagCollectionView&lt;/a&gt; - Show simple text tags or custom tag views in a vertical scrollable view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ElaWorkshop/TagListView"&gt;TagListView&lt;/a&gt; - Simple and highly customizable iOS tag list view, in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kuler90/RKTagsView"&gt;RKTagsView&lt;/a&gt; - Highly customizable iOS tags view (like NSTokenField). Supports editing, multiple selection, Auto Layout and much more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whitesmith/WSTagsField"&gt;WSTagsField&lt;/a&gt; - An iOS text field that represents different Tags.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artemkrachulov/AKMaskField"&gt;AKMaskField&lt;/a&gt; - AKMaskField is UITextField subclass which allows enter data in the fixed quantity and in the certain format.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/YNSearch"&gt;YNSearch&lt;/a&gt; - Awesome fully customizable search view like Pinterest written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fdzsergio/SFFocusViewLayout"&gt;SFFocusViewLayout&lt;/a&gt; - UICollectionViewLayout with focused content.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-textfield--textview" class="anchor" aria-hidden="true" href="#textfield--textview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TextField &amp;amp; TextView&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jverdi/JVFloatLabeledTextField"&gt;JVFloatLabeledTextField&lt;/a&gt; - UITextField subclass with floating labels.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexruperez/ARAutocompleteTextView"&gt;ARAutocompleteTextView&lt;/a&gt; - subclass of UITextView that automatically displays text suggestions in real-time. Perfect for email Textviews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hackiftekhar/IQDropDownTextField"&gt;IQDropDownTextField&lt;/a&gt; - TextField with DropDown support using UIPickerView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/UITextField-Shake"&gt;UITextField-Shake&lt;/a&gt; - UITextField category that adds shake animation. &lt;a href="https://github.com/King-Wizard/UITextField-Shake-Swift"&gt;Also with Swift version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanton/HTYTextField"&gt;HTYTextField&lt;/a&gt; - A UITextField with bouncy placeholder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TheMrugraj/MVAutocompletePlaceSearchTextField"&gt;MVAutocompletePlaceSearchTextField&lt;/a&gt; - A drop-in Autocompletion control for Place Search like Google Places, Uber, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/filipstefansson/AutocompleteField"&gt;AutocompleteField&lt;/a&gt; - Add word completion to your UITextFields.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslanskorb/RSKGrowingTextView"&gt;RSKGrowingTextView&lt;/a&gt; - A light-weight UITextView subclass that automatically grows and shrinks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruslanskorb/RSKPlaceholderTextView"&gt;RSKPlaceholderTextView&lt;/a&gt; - A light-weight UITextView subclass that adds support for placeholder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aschuch/StatefulViewController"&gt;StatefulViewController&lt;/a&gt; - Placeholder views based on content, loading, error or empty states.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatejBalantic/MBAutoGrowingTextView"&gt;MBAutoGrowingTextView&lt;/a&gt; - An auto-layout base UITextView subclass which automatically grows with user input and can be constrained by maximal and minimal height - all without a single line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raulriera/TextFieldEffects"&gt;TextFieldEffects&lt;/a&gt; - Custom UITextFields effects inspired by Codrops, built using Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/reel-search"&gt;Reel Search&lt;/a&gt; - RAMReel is a controller that allows you to choose options from a list.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EddyBorja/MLPAutoCompleteTextField"&gt;MLPAutoCompleteTextField&lt;/a&gt; - a subclass of UITextField that behaves like a typical UITextField with one notable exception: it manages a drop down table of autocomplete suggestions that update as the user types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Skyscanner/SkyFloatingLabelTextField"&gt;SkyFloatingLabelTextField&lt;/a&gt; - A beautiful and flexible text field control implementation of "Float Label Pattern". Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/viniciusmo/VMaskTextField"&gt;VMaskTextField&lt;/a&gt; - VMaskTextField is a library which create an input mask for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tejas-ardeshna/TJTextField"&gt;TJTextField&lt;/a&gt; - UITextField with underline and left image.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/NextGrowingTextView"&gt;NextGrowingTextView&lt;/a&gt; - The next in the generations of 'growing textviews' optimized for iOS 7 and above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/RPFloatingPlaceholders"&gt;RPFloatingPlaceholders&lt;/a&gt; - UITextField and UITextView subclasses with placeholders that change into floating labels when the fields are populated with text.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/richa008/CurrencyTextField"&gt;CurrencyTextField&lt;/a&gt; - UITextField that automatically formats text to display in the currency format.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/T-Pham/UITextField-Navigation"&gt;UITextField-Navigation&lt;/a&gt; - UITextField-Navigation adds next, previous and done buttons to the keyboard for your UITextFields.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nferocious76/AutoCompleteTextField"&gt;AutoCompleteTextField&lt;/a&gt; - Auto complete with suggestion textfield.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nonameplum/PLCurrencyTextField"&gt;PLCurrencyTextField&lt;/a&gt; - UITextField that support currency in the right way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PiXeL16/PasswordTextField"&gt;PasswordTextField&lt;/a&gt; - A custom TextField with a switchable icon which shows or hides the password and enforce good password policies.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jobandtalent/AnimatedTextInput"&gt;AnimatedTextInput&lt;/a&gt; - Animated UITextField and UITextView replacement for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MoZhouqi/KMPlaceholderTextView"&gt;KMPlaceholderTextView&lt;/a&gt; - A UITextView subclass that adds support for multiline placeholder written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Otbivnoe/NxEnabled"&gt;NxEnabled&lt;/a&gt; - Library which allows you binding &lt;code&gt;enabled&lt;/code&gt; property of button with textable elements (TextView, TextField).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aleksandrshoshiashvili/AwesomeTextFieldSwift"&gt;AwesomeTextField&lt;/a&gt; - Awesome TextField is a nice and simple library for iOS. It's highly customisable and easy-to-use tool. Works perfectly for any registration or login forms in your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/ModernSearchBar"&gt;ModernSearchBar&lt;/a&gt; - The famous iOS search bar with auto completion feature implemented.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jhurray/SelectableTextView"&gt;SelectableTextView&lt;/a&gt; - A text view that supports selection and expansion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Fawxy/CBPinEntryView"&gt;CBPinEntryView&lt;/a&gt; - A customisable view written in Swift 4.2 for any pin, code or password entry. Supports one time codes in iOS 12.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KennethTsang/GrowingTextView"&gt;GrowingTextView&lt;/a&gt; - An UITextView in Swift3 and Swift2.3. Support auto growing, placeholder and length limit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iDhaval/DTTextField"&gt;DTTextField&lt;/a&gt; - DTTextField is a custom textfield with floating placeholder and error label in Swift3.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serralvo/TextFieldCounter"&gt;TextFieldCounter&lt;/a&gt; - UITextField character counter with lovable UX.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roytornado/RSFloatInputView"&gt;RSFloatInputView&lt;/a&gt; - A Float Input View with smooth animation and supporting icon and seperator written with Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iceman201/TaniwhaTextField"&gt;TaniwhaTextField&lt;/a&gt; - TaniwhaTextField is a lightweight and beautiful swift textfield framework. It has float label pattern, and also you can highly customise it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/algolia/instantsearch-ios"&gt;InstantSearch iOS&lt;/a&gt; - A library of widgets and helpers to build instant-search applications on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apasccon/SearchTextField"&gt;SearchTextField&lt;/a&gt; - UITextField subclass with autocompletion suggestions list.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ko1o/PYSearch"&gt;PYSearch&lt;/a&gt; - An elegant search controller which replaces the UISearchController for iOS (iPhone &amp;amp; iPad).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blueapron/styled-text"&gt;styled-text&lt;/a&gt; - Declarative text styles and streamlined Dynamic Type support for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oleghnidets/TweeTextField"&gt;TweeTextField&lt;/a&gt; - Lightweight set of text fields with nice animation and functionality.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SiarheiFedartsou/MeasurementTextField"&gt;MeasurementTextField&lt;/a&gt; - UITextField-based control for (NS)Measurement values input.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/VENTokenField"&gt;VENTokenField&lt;/a&gt; - Easy-to-use token field that is used in the Venmo app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexLittlejohn/ALTextInputBar"&gt;ALTextInputBar&lt;/a&gt; - An auto growing text input bar for messaging apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k-lpmg/Tagging"&gt;Tagging&lt;/a&gt; - TextView that provides easy to use tagging feature for Mention or Hashtag.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nathantannar4/InputBarAccessoryView"&gt;InputBarAccessoryView&lt;/a&gt; - A simple and easily customizable InputAccessoryView for making powerful input bars with autocomplete and attachments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-uipagecontrol" class="anchor" aria-hidden="true" href="#uipagecontrol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UIPageControl&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kasper-lahti/PageControl"&gt;PageControl&lt;/a&gt; - A nice, animated UIPageControl alternative.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/popwarsweet/PageControls"&gt;PageControls&lt;/a&gt; - This is a selection of custom page controls to replace UIPageControl, inspired by a dribbble found here.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChiliLabs/CHIPageControl"&gt;CHIPageControl&lt;/a&gt; - A set of cool animated page controls to replace boring UIPageControl.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sevruk-dev/page-control"&gt;Page-Control&lt;/a&gt; - Beautiful, animated and highly customizable UIPageControl alternative.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-web-view" class="anchor" aria-hidden="true" href="#web-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web View&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tasanobu/Otafuku"&gt;Otafuku&lt;/a&gt; - Otafuku provides utility classes to use WKWebView in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meismyles/SwiftWebVC"&gt;SwiftWebVC&lt;/a&gt; - A drop-in inline browser for your Swift iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TransitApp/SVWebViewController"&gt;SVWebViewController&lt;/a&gt; - A drop-in inline browser for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pjocprac/PTPopupWebView"&gt;PTPopupWebView&lt;/a&gt; - PTPopupWebView is a simple and useful WebView for iOS, which can be popup and has many of the customized item.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-utility" class="anchor" aria-hidden="true" href="#utility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Utility&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/robb/Underscore.m"&gt;Underscore.m&lt;/a&gt; - A DSL for Data Manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tumblr/XExtensionItem"&gt;XExtensionItem&lt;/a&gt; - Easier sharing of structured data between iOS applications and share extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastred/ReflectableEnum"&gt;ReflectableEnum&lt;/a&gt; - Reflection for enumerations in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/supermarin/ObjectiveSugar"&gt;ObjectiveSugar&lt;/a&gt; - ObjectiveC additions for humans. Ruby style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/leoschweizer/OpinionatedC"&gt;OpinionatedC&lt;/a&gt; - Because Objective-C should have inherited more from Smalltalk.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thellimist/SwiftRandom"&gt;SwiftRandom&lt;/a&gt; - Generator for random data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/RandomKit/"&gt;RandomKit&lt;/a&gt; - Random data generation in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mxcl/YOLOKit"&gt;YOLOKit&lt;/a&gt; - Getting square objects down round holes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/EZSwiftExtensions"&gt;EZSwiftExtensions&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="smirk" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60f.png"&gt;😏&lt;/g-emoji&gt; How Swift standard types and classes were supposed to work.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nickoneill/Pantry"&gt;Pantry&lt;/a&gt; - The missing light persistence layer for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davedufresne/SwiftParsec"&gt;SwiftParsec&lt;/a&gt; - A parser combinator library written in the Swift programming language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Weebly/OrderedSet"&gt;OrderedSet&lt;/a&gt; - A Swift collection of unique, ordered objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Datez"&gt;Datez&lt;/a&gt; - Swift library for dealing with &lt;code&gt;NSDate&lt;/code&gt;, &lt;code&gt;NSCalendar&lt;/code&gt;, and &lt;code&gt;NSDateComponents&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FabrizioBrancati/BFKit"&gt;BFKit&lt;/a&gt; - An Objective-C collection of useful classes to develop Apps faster.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FabrizioBrancati/BFKit-Swift"&gt;BFKit-Swift&lt;/a&gt; - A Swift collection of useful classes to develop Apps faster.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/scale"&gt;Scale&lt;/a&gt; - Unit converter in Swift (available via CocoaPods).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cconeil/Standard-Template-Protocols"&gt;Standard Template Protocols&lt;/a&gt; - Protocols for your every day iOS needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JonFir/TimeLord"&gt;TimeLord&lt;/a&gt; - Easy DateTime (NSDate) management in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eure/AppVersionMonitor"&gt;AppVersionMonitor&lt;/a&gt; - Monitor iOS app version easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Sugar"&gt;Sugar&lt;/a&gt; - Something sweet that goes great with your Cocoa.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/Then"&gt;Then&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;✨&lt;/g-emoji&gt; Super sweet syntactic sugar for Swift initializers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cocoanetics/Kvitto"&gt;Kvitto&lt;/a&gt; - App Store Receipt Validation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Notificationz"&gt;Notificationz&lt;/a&gt; - Helping you own NSNotificationCenter in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PureSwift/SwiftFoundation"&gt;SwiftFoundation&lt;/a&gt; - Cross-Platform, Protocol-Oriented Programming base library to complement the Swift Standard Library. (Pure Swift, Supports Linux).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jspahrsummers/libextobjc"&gt;libextobjc&lt;/a&gt; - A Cocoa library to extend the Objective-C programming language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/VersionTrackerSwift"&gt;VersionTrackerSwift&lt;/a&gt; - Track which versions of your app a user has previously installed..&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/InderKumarRathore/DeviceGuru/"&gt;DeviceGuru&lt;/a&gt; - DeviceGuru is a simple lib (Swift) to know the exact type of the device, e.g. iPhone 6 or iPhone 6s.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEAppVersion"&gt;AEAppVersion&lt;/a&gt; - Simple and Lightweight App Version Tracking for iOS written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BlocksKit/BlocksKit"&gt;BlocksKit&lt;/a&gt; - The Objective-C block utilities you always wish you had.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/swiftyutils"&gt;SwiftyUtils&lt;/a&gt; - All the reusable code that we need in each project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soffes/RateLimit"&gt;RateLimit&lt;/a&gt; - Simple utility for only executing code every so often.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phatblat/Outlets"&gt;Outlets&lt;/a&gt; - Utility functions for validating IBOutlet and IBAction connections.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JARMourato/EasyAbout"&gt;EasyAbout&lt;/a&gt; - A way to easily add CocoaPods licenses and App Version to your iOS App using the Settings Bundle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ben-G/Validated"&gt;Validated&lt;/a&gt; - A Swift μ-Library for Somewhat Dependent Types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ankurp/Cent"&gt;Cent&lt;/a&gt; - Extensions for Swift Standard Types and Classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anatoliyv/AssistantKit"&gt;AssistantKit&lt;/a&gt; - Easy way to detect iOS device properties, OS versions and work with screen sizes. Powered by Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/SwiftLinkPreview"&gt;SwiftLinkPreview&lt;/a&gt; - It makes a preview from an url, grabbing all the information such as title, relevant texts and images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rollmind/BundleInfos"&gt;BundleInfos&lt;/a&gt; - Simple getter for Bundle informations. like short version from bundle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mirek/YAML.framework"&gt;YAML.framework&lt;/a&gt; - Proper YAML support for Objective-C based on &lt;code&gt;LibYAML&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/ReadabilityKit"&gt;ReadabilityKit&lt;/a&gt; - Metadata extractor for news, articles and full-texts in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appculture/MissionControl-iOS"&gt;MissionControl-iOS&lt;/a&gt; - Super powerful remote config utility written in Swift (iOS, watchOS, tvOS, macOS).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Khan/SwiftTweaks"&gt;SwiftTweaks&lt;/a&gt; - Tweak your iOS app without recompiling!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/caloon/UnsupportedOSVersionAlert"&gt;UnsupportedOSVersionAlert&lt;/a&gt; - Alerts users with a popup if they use an app with an unsupported version of iOS (e.g. iOS betas).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dsmatter/SwiftSortUtils"&gt;SwiftSortUtils&lt;/a&gt; - This library takes a shot at making sorting in Swift more pleasant. It also allows you to reuse your old NSSortDescriptor instances in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icanzilb/Retry"&gt;Retry&lt;/a&gt; - Haven't you wished for &lt;code&gt;try&lt;/code&gt; to sometimes try a little harder? Meet &lt;code&gt;retry&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/ObjectiveKit"&gt;ObjectiveKit&lt;/a&gt; - Swift-friendly API for Objective C runtime functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/MoyaSugar"&gt;MoyaSugar&lt;/a&gt; -  Syntactic sugar for Moya.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwifterSwift/SwifterSwift"&gt;SwifterSwift&lt;/a&gt; -  A handy collection of more than 400 native Swift 4 extensions to boost your productivity.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rightpoint/Eject"&gt;Eject&lt;/a&gt; - An eject button for Interface Builder to generate swift code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/ContactsWrapper"&gt;ContactsWrapper&lt;/a&gt; - Easy to use wrapper for both contacts and contacts group with Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eBardX/XestiMonitors"&gt;XestiMonitors&lt;/a&gt; - An extensible monitoring framework written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/floriangbh/OpenSourceController"&gt;OpenSourceController&lt;/a&gt; - The simplest way to display the libraries licences used in your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Stunner/App-Update-Tracker"&gt;App-Update-Tracker&lt;/a&gt; - Easily detect and run code upon app installation or update.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/4taras4/SwiftExtension"&gt;ExtensionalSwift&lt;/a&gt; - Useful swift extensions in one place.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/futuretap/InAppSettingsKit"&gt;InAppSettingsKit&lt;/a&gt; - This iOS framework allows settings to be in-app in addition to or instead of being in the Settings app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mutualmobile/MMWormhole"&gt;MMWormhole&lt;/a&gt; - Message passing between iOS apps and extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/DefaultStringConvertible"&gt;DefaultStringConvertible&lt;/a&gt; - A default CustomStringConvertible implementation for Swift types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/FluxCapacitor"&gt;FluxCapacitor&lt;/a&gt; - FluxCapacitor makes implementing Flux design pattern easily with protocols and typealias.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vtourraine/VTAcknowledgementsViewController"&gt;VTAcknowledgementsViewController&lt;/a&gt; - Ready to use “Acknowledgements”/“Licenses”/“Credits” view controller for CocoaPods.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vhesener/Closures"&gt;Closures&lt;/a&gt; - Swifty closures for UIKit and Foundation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BalestraPatrick/WhatsNew"&gt;WhatsNew&lt;/a&gt; - Showcase new features after an app update similar to Pages, Numbers and Keynote.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/michalkonturek/MKUnits"&gt;MKUnits&lt;/a&gt; - Unit conversion library for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/takasek/ActionClosurable"&gt;ActionClosurable&lt;/a&gt; - Extensions which helps to convert objc-style target/action to swifty closures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/holzschu/ios_system"&gt;ios_system&lt;/a&gt; - Drop-in replacement for system() in iOS programs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Sherlouk/SwiftProvisioningProfile"&gt;SwiftProvisioningProfile&lt;/a&gt; - Parse provisioning profiles into Swift models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luoxiu/Once"&gt;Once&lt;/a&gt; - Minimalist library to manage one-off operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZamzamInc/ZamzamKit"&gt;ZamzamKit&lt;/a&gt; - A collection of micro utilities and extensions for Standard Library, Foundation and UIKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/DuctTape"&gt;DuctTape&lt;/a&gt; - KeyPath dynamicMemberLookup based syntax sugar for swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-user-consent" class="anchor" aria-hidden="true" href="#user-consent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Consent&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/smartlook/ios-consent-sdk"&gt;SmartlookConsentSDK&lt;/a&gt; - Open source SDK which provides a configurable control panel where user can select their privacy options and store the user preferences for the app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-vr" class="anchor" aria-hidden="true" href="#vr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Aralekk/VR_Toolkit_iOS"&gt;VR Toolkit iOS&lt;/a&gt; - A sample project that provides the basics to create an interactive VR experience on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanton/HTY360Player"&gt;360 VR Player&lt;/a&gt; - A open source, ad-free, native and universal 360 degree panorama video player for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Aralekk/simple360player_iOS"&gt;simple360player&lt;/a&gt; - Free &amp;amp; ad-free 360 VR Video Player. Flat or Stereoscopic. In Swift 2.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/Swifty360Player"&gt;Swifty360Player&lt;/a&gt; - iOS 360-degree video player streaming from an AVPlayer with Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-walkthrough--intro--tutorial" class="anchor" aria-hidden="true" href="#walkthrough--intro--tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Walkthrough / Intro / Tutorial&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mamaral/Onboard"&gt;Onboard&lt;/a&gt; - Easily create a beautiful and engaging onboarding experience with only a few lines of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ealeksandrov/EAIntroView"&gt;EAIntroView&lt;/a&gt; - Highly customizable drop-in solution for introduction views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatthewYork/MYBlurIntroductionView"&gt;MYBlurIntroductionView&lt;/a&gt; - A super-charged version of MYIntroductionView for building custom app introductions and tutorials.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ariok/BWWalkthrough"&gt;BWWalkthrough&lt;/a&gt; - A class to build custom walkthroughs for your iOS App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GnosisHub/GHWalkThrough"&gt;GHWalkThrough&lt;/a&gt; - A UICollectionView backed drop-in component for introduction views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icepat/ICETutorial"&gt;ICETutorial&lt;/a&gt; - A nice tutorial like the one introduced in the Path 3.X App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IFTTT/JazzHands"&gt;JazzHands&lt;/a&gt; - Jazz Hands is a simple keyframe-based animation framework for UIKit. Animations can be controlled via gestures, scroll views, KVO, or ReactiveCocoa.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IFTTT/RazzleDazzle"&gt;RazzleDazzle&lt;/a&gt; - A simple keyframe-based animation framework for iOS, written in Swift. Perfect for scrolling app intros.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ephread/Instructions"&gt;Instructions&lt;/a&gt; - Easily add customizable coach marks into you iOS project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruipfcosta/SwiftyWalkthrough"&gt;SwiftyWalkthrough&lt;/a&gt; - The easiest way to create a great walkthrough experience in your apps, powered by Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yukiasai/Gecco"&gt;Gecco&lt;/a&gt; - Spotlight view for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/svhawks/VideoSplashKit"&gt;VideoSplashKit&lt;/a&gt; - VideoSplashKit - UIViewController library for creating easy intro pages with background videos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Presentation"&gt;Presentation&lt;/a&gt; - Presentation helps you to make tutorials, release notes and animated pages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/AMPopTip"&gt;AMPopTip&lt;/a&gt; - An animated popover that pops out a given frame, great for subtle UI tips and onboarding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/AlertOnboarding"&gt;AlertOnboarding&lt;/a&gt; - A simple and handsome AlertView for onboard your users in your amazing world.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/teodorpatras/EasyTipView"&gt;EasyTipView&lt;/a&gt; - Fully customisable tooltip view in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/paper-onboarding"&gt;paper-onboarding&lt;/a&gt; - PaperOnboarding is a material design slider.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anatoliyv/InfoView"&gt;InfoView&lt;/a&gt; - Swift based simple information view with pointed arrow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbolatov/Intro"&gt;Intro&lt;/a&gt; - An iOS framework to easily create simple animated walkthrough, written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aleksandrshoshiashvili/AwesomeSpotlightView"&gt;AwesomeSpotlightView&lt;/a&gt; - Tool to create awesome tutorials or educate user to use application. Or just highlight something on screen. Written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/juanpablofernandez/SwiftyOnboard"&gt;SwiftyOnboard&lt;/a&gt; - A simple way to add onboarding to your project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/praagyajoshi/WVWalkthroughView"&gt;WVWalkthroughView&lt;/a&gt; - Utility to easily create walkthroughs to help with user onboarding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saeid/SwiftyOverlay"&gt;SwiftyOverlay&lt;/a&gt; - Easy and quick way to show intro / instructions over app UI without any additional images in real-time!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chaser79/SwiftyOnboardVC"&gt;SwiftyOnboardVC&lt;/a&gt; - Lightweight walkthrough controller thats uses view controllers as its subviews making the customization endless.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yukiasai/Minamo"&gt;Minamo&lt;/a&gt; - Simple coach mark library written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aromajoin/material-showcase-ios"&gt;Material Showcase iOS&lt;/a&gt; - An elegant and beautiful showcase for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/WhatsNewKit"&gt;WhatsNewKit&lt;/a&gt; - Showcase your awesome new app features.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NikolaKirev/OnboardKit"&gt;OnboardKit&lt;/a&gt; - Customisable user onboarding for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/ConcentricOnboarding"&gt;ConcentricOnboarding&lt;/a&gt; - SwiftUI library for a walkthrough or onboarding flow with tap actions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-websocket" class="anchor" aria-hidden="true" href="#websocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocket&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/SocketRocket"&gt;SocketRocket&lt;/a&gt; - A conforming Objective-C WebSocket client library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/socketio/socket.io-client-swift"&gt;socket.io-client-swift&lt;/a&gt; - Socket.IO-client for iOS/macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tidwall/SwiftWebSocket"&gt;SwiftWebSocket&lt;/a&gt; - High performance WebSocket client library for Swift, iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam/Starscream"&gt;Starscream&lt;/a&gt; - Websockets in swift for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swiftsocket/SwiftSocket"&gt;SwiftSocket&lt;/a&gt; - simple socket library for apple swift lang.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vapor-community/sockets"&gt;Socks&lt;/a&gt; - Pure-Swift Sockets: TCP, UDP; Client, Server; Linux, macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Balancingrock/SwifterSockets"&gt;SwifterSockets&lt;/a&gt; - A collection of socket utilities in Swift for OS-X and iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielrhodes/Swift-ActionCableClient"&gt;Swift-ActionCableClient&lt;/a&gt; - ActionCable is a new WebSocket server being released with Rails 5 which makes it easy to add real-time features to your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GlebRadchenko/DNWebSocket"&gt;DNWebSocket&lt;/a&gt; - Object-Oriented, Swift-style WebSocket Library (RFC 6455) for Swift-compatible Platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-project-setup" class="anchor" aria-hidden="true" href="#project-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/crafter"&gt;crafter&lt;/a&gt; - CLI that allows you to configure iOS project's template using custom DSL syntax, simple to use and quite powerful.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/liftoffcli/liftoff"&gt;liftoff&lt;/a&gt; - Another CLI for creating iOS projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crushlovely/Amaro"&gt;amaro&lt;/a&gt; - iOS Boilerplate full of delights.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orta/chairs"&gt;chairs&lt;/a&gt; - Swap around your iOS Simulator Documents.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/SwiftPlate"&gt;SwiftPlate&lt;/a&gt; - Easily generate cross platform Swift framework projects from the command line.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tuist/xcodeproj"&gt;xcproj&lt;/a&gt; - Read and update Xcode projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tuist/tuist"&gt;Tuist&lt;/a&gt; - A tool to create, maintain and interact with Xcode projects at scale.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/SwiftKit"&gt;SwiftKit&lt;/a&gt; - Start your next Open-Source Swift Framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-dependency--package-manager" class="anchor" aria-hidden="true" href="#dependency--package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependency / Package Manager&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; - CocoaPods is the dependency manager for Objective-C projects. It has thousands of libraries and can help you scale your projects elegantly.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sap-production.github.io/xcode-maven-plugin/site/" rel="nofollow"&gt;Xcode Maven&lt;/a&gt; - The Xcode Maven Plugin can be used in order to run Xcode builds embedded in a Maven lifecycle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; - A simple, decentralized dependency manager for Cocoa.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jankuca/swm"&gt;SWM (Swift Modules)&lt;/a&gt; - A package/dependency manager for Swift projects similar to npm (node.js package manager) or bower (browser package manager from Twitter). Does not require the use of Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/CocoaSeeds"&gt;CocoaSeeds&lt;/a&gt; - Git Submodule Alternative for Cocoa.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-package-manager"&gt;swift-package-manager&lt;/a&gt; - The Package Manager for the Swift Programming Language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schwa/punic"&gt;punic&lt;/a&gt; - Clean room reimplementation of Carthage tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tmspzz/Rome"&gt;Rome&lt;/a&gt; - A cache tool for Carthage built frameworks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yunarta/works-athena-gradle-plugin"&gt;Athena&lt;/a&gt; - Gradle Plugin to enhance Carthage by uploading the archived frameworks into Maven repository, currently support only Bintray, Artifactory and Mavel local.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt; - A SwiftPM based dependency manager for iOS &amp;amp; Co. with improvements over Carthage.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kaandedeoglu/Shark"&gt;Shark&lt;/a&gt; - Swift Script that transforms the .xcassets folder into a type safe enum.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/paulsamuels/SBConstants"&gt;SBConstants&lt;/a&gt; - Generate a constants file by grabbing identifiers from storyboards in a project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mac-cain13/R.swift"&gt;R.swift&lt;/a&gt; - Tool to get strong typed, autocompleted resources like images, cells and segues in your Swift project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftGen/SwiftGen"&gt;SwiftGen&lt;/a&gt; - A collection of Swift tools to generate Swift code (enums for your assets, storyboards, Localizable.strings and UIColors).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jondot/blade"&gt;Blade&lt;/a&gt; - Generate Xcode image catalogs for iOS / macOS app icons, universal images, and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terwanerik/Retini"&gt;Retini&lt;/a&gt; - A super simple retina (2x, 3x) image converter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/jazzy"&gt;Jazzy&lt;/a&gt; - Soulful docs for Swift &amp;amp; Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomaz/appledoc"&gt;appledoc&lt;/a&gt; - ObjectiveC code Apple style documentation set generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JiriTrecak/Laurine"&gt;Laurine&lt;/a&gt; - Laurine - Localization code generator written in Swift. Sweet!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcinolawski/StoryboardMerge"&gt;StoryboardMerge&lt;/a&gt; - Xcode storyboards diff and merge tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metasmile/ai2appiconset"&gt;ai2app&lt;/a&gt; - Creating AppIcon sets from Adobe Illustrator (all supported formats).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daisuke0131/ViewMonitor"&gt;ViewMonitor&lt;/a&gt; - ViewMonitor can measure view positions with accuracy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ijoshsmith/abandoned-strings"&gt;abandoned-strings&lt;/a&gt; - Command line program that detects unused resource strings in an iOS or macOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/swiftenv"&gt;swiftenv&lt;/a&gt; - swiftenv allows you to easily install, and switch between multiple versions of Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tasanobu/Misen"&gt;Misen&lt;/a&gt; - Script to support easily using Xcode Asset Catalog in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metasmile/git-xcp"&gt;git-xcp&lt;/a&gt; - A Git plugin for versioning workflow of real-world Xcode project. fastlane's best friend.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tapwork/WatchdogInspector"&gt;WatchdogInspector&lt;/a&gt; - Shows your current framerate (fps) in the status bar of your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dealforest/Cichlid"&gt;Cichlid&lt;/a&gt; - automatically delete the current project's DerivedData directories.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Delta"&gt;Delta&lt;/a&gt; - Managing state is hard. Delta aims to make it simple.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ypresto/SwiftLintXcode"&gt;SwiftLintXcode&lt;/a&gt; - An Xcode plug-in to format your code using SwiftLint.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dzenbot/XCSwiftr"&gt;XCSwiftr&lt;/a&gt; - An Xcode Plugin to convert Objective-C to Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johncsnyder/SwiftKitten"&gt;SwiftKitten&lt;/a&gt; - Swift autocompleter for Sublime Text, via the adorable SourceKitten framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Karumi/Kin"&gt;Kin&lt;/a&gt; - Have you ever found yourself undoing a merge due to a broken Xcode build? Then Kin is your tool. It will parse your project configuration file and detect errors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angelvasa/AVXCAssets-Generator"&gt;AVXCAssets-Generator&lt;/a&gt; - AVXCAssets Generator takes path for your assets images and creates appiconset and imageset for you in just one click.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shaps80/Peek"&gt;Peek&lt;/a&gt; - Take a Peek at your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpsim/SourceKitten"&gt;SourceKitten&lt;/a&gt; - An adorable little framework and command line tool for interacting with SourceKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/athiercelin/localizations"&gt;Localizations&lt;/a&gt; - macOS app that manages localizations of Xcode projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/xcbuild"&gt;xcbuild&lt;/a&gt; - Xcode-compatible build tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/doubleencore/XcodeIssueGenerator"&gt;XcodeIssueGenerator&lt;/a&gt; - An executable that can be placed in a Run Script Build Phase that marks comments like // TODO: or // SERIOUS: as warnings or errors so they display in the Xcode Issue Navigator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TumblrArchive/SwiftCompilationPerformanceReporter"&gt;SwiftCompilationPerformanceReporter&lt;/a&gt; - Generate automated reports for slow Swift compilation paths in specific targets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RobertGummesson/BuildTimeAnalyzer-for-Xcode"&gt;BuildTimeAnalyzer&lt;/a&gt; - Build Time Analyzer for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftStudies/Duration"&gt;Duration&lt;/a&gt; - A simple Swift package for measuring and reporting the time taken for operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WorldDownTown/Benchmark"&gt;Benchmark&lt;/a&gt; - The Benchmark module provides methods to measure and report the time used to execute Swift code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatiBot/MBAssetsImporter"&gt;MBAssetsImporter&lt;/a&gt; - Import assets from Panoramio or from your macOS file system with their metadata to your iOS simulator (Swift 2.0).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/realm-browser-osx"&gt;Realm Browser&lt;/a&gt; - Realm Browser is a macOS utility to open and modify realm database files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/SuperDelegate"&gt;SuperDelegate&lt;/a&gt; – SuperDelegate provides a clean application delegate interface and protects you from bugs in the application lifecycle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane-community/fastlane-plugin-appicon"&gt;fastlane-plugin-appicon&lt;/a&gt; - Generate required icon sizes and iconset from a master application icon.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/infer"&gt;infer&lt;/a&gt; - A static analyzer for Java, C and Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcboquet/PlayNow"&gt;PlayNow&lt;/a&gt; - Small app that creates empty Swift playground files and opens them with Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnno1962/Xtrace"&gt;Xtrace&lt;/a&gt; - Trace Objective-C method calls by class or instance.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xcenv/xcenv"&gt;xcenv&lt;/a&gt; - Groom your Xcode environment.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/playgroundbooks/playgroundbook"&gt;playgroundbook&lt;/a&gt; - Tool for Swift Playground books.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/Ecno"&gt;Ecno&lt;/a&gt; - Ecno is a task state manager built on top of UserDefaults in pure Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/toshi0383/ipanema"&gt;ipanema&lt;/a&gt; - ipanema analyzes and prints useful information from &lt;code&gt;.ipa&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/plu/pxctest"&gt;pxctest&lt;/a&gt; - Parallel XCTest - Execute XCTest suites in parallel on multiple iOS Simulators.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swift.sandbox.bluemix.net" rel="nofollow"&gt;IBM Swift Sandbox&lt;/a&gt; - The IBM Swift Sandbox is an interactive website that lets you write Swift code and execute it in a server environment – on top of Linux!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/idb"&gt;FBSimulatorControl&lt;/a&gt; - A macOS library for managing and manipulating iOS Simulators&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nomad-cli.com" rel="nofollow"&gt;Nomad&lt;/a&gt; - Suite of command line utilities &amp;amp; libraries for sending APNs, create &amp;amp; distribute &lt;code&gt;.ipa&lt;/code&gt;, verify In-App-Purchase receipt and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RahulKatariya/SwiftFrameworkTemplate"&gt;Cookiecutter&lt;/a&gt; - A template for new Swift iOS / tvOS / watchOS / macOS Framework project ready with travis-ci, cocoapods, Carthage, SwiftPM and a Readme file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/Sourcery"&gt;Sourcery&lt;/a&gt; - A tool that brings meta-programming to Swift, allowing you to code generate Swift code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/AssetChecker"&gt;AssetChecker &lt;g-emoji class="g-emoji" alias="policeman" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f46e.png"&gt;👮&lt;/g-emoji&gt;&lt;/a&gt; - Keeps your Assets.xcassets files clean and emits warnings when something is suspicious.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/insidegui/PlayAlways"&gt;PlayAlways&lt;/a&gt; - Create Xcode playgrounds from your menu bar&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dani-gavrilov/GDPerformanceView-Swift"&gt;GDPerformanceView-Swift&lt;/a&gt; - Shows FPS, CPU usage, app and iOS versions above the status bar and report FPS and CPU usage via delegate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/Traits"&gt;Traits&lt;/a&gt; - Library for a real-time design and behavior modification of native iOS apps without recompiling (code and interface builder changes are supported).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.get-struct.tools" rel="nofollow"&gt;Struct&lt;/a&gt; - A tool for iOS and Mac developers to automate the creation and management of Xcode projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yukiasai/Nori"&gt;Nori&lt;/a&gt; - Easier to apply code based style guide to storyboard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/Attabench"&gt;Attabench&lt;/a&gt; - Microbenchmarking app for Swift with nice log-log plots.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wilbertliu/Gluten"&gt;Gluten&lt;/a&gt; - Nano library to unify XIB and it's code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mono0926/LicensePlist"&gt;LicensePlist&lt;/a&gt; - A license list generator of all your dependencies for iOS applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yahoo/AppDevKit"&gt;AppDevKit&lt;/a&gt; - AppDevKit is an iOS development library that provides developers with useful features to fulfill their everyday iOS app development needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/Tweaks"&gt;Tweaks&lt;/a&gt; - An easy way to fine-tune, and adjust parameters for iOS apps in development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/FengNiao"&gt;FengNiao&lt;/a&gt; - A command line tool for cleaning unused resources in Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/LifetimeTracker"&gt;LifetimeTracker&lt;/a&gt; - Find retain cycles / memory leaks sooner.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pinterest/plank"&gt;Plank&lt;/a&gt; - A tool for generating immutable model objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/Lona"&gt;Lona&lt;/a&gt; - A tool for defining design systems and using them to generate cross-platform UI code, Sketch files, images, and other artifacts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/XcodeGen"&gt;XcodeGen&lt;/a&gt; - Command line tool that generates your Xcode project from a spec file and your folder structure.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wigl/iSimulator"&gt;iSimulator&lt;/a&gt; - iSimulator is a GUI utility to control the Simulator, and manage the app installed on the simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzyzanowskim/Natalie"&gt;Natalie&lt;/a&gt; - Storyboard Code Generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andresinaka/transformer"&gt;Transformer&lt;/a&gt; - Easy Online Attributed String Creator. This tool lets you format a string directly in the browser and then copy/paste the attributed string code into your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ealeksandrov/ProvisionQL"&gt;ProvisionQL&lt;/a&gt; - Quick Look plugin for apps and provisioning profile files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/novemberfiveco/xib2Storyboard"&gt;xib2Storyboard&lt;/a&gt; - A tool to convert Xcode .xib to .storyboard files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zolang/Zolang"&gt;Zolang&lt;/a&gt; - A programming language for sharing logic between iOS, Android and Tools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gabrielrobert/xavtool"&gt;xavtool&lt;/a&gt; - Command-line utility to automatically increase iOS / Android applications version.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cutter.albemala.me/" rel="nofollow"&gt;Cutter&lt;/a&gt; - A tool to generate iOS Launch Images (Splash Screens) for all screen sizes starting from a single template.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bow-swift/nef"&gt;nef&lt;/a&gt; - A set of command line tools for Xcode Playground: lets you have compile-time verification of your documentation written as Xcode Playgrounds, generates markdown files, integration with Jekyll for building microsites and Carbon to export code snippets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speculid.com" rel="nofollow"&gt;Speculid&lt;/a&gt; - generate Image Sets and App Icons from SVG, PNG, and JPEG files&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-rapid-development" class="anchor" aria-hidden="true" href="#rapid-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rapid Development&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/Playgrounds"&gt;Playgrounds&lt;/a&gt; - Playgrounds for Objective-C for extremely fast prototyping / learning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mutualmobile/MMBarricade"&gt;MMBarricade&lt;/a&gt; - Runtime configurable local server for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sensiblecocoa.com" rel="nofollow"&gt;STV Framework&lt;/a&gt; - Native visual iOS development.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dimpiax/swiftmon"&gt;swiftmon&lt;/a&gt; - swiftmon restarts your swift application in case of any file change.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Q-Mobile/Model2App"&gt;Model2App&lt;/a&gt; - Turn your Swift data model into a working CRUD app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-injection" class="anchor" aria-hidden="true" href="#code-injection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Injection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DyCI/dyci-main"&gt;dyci&lt;/a&gt; - Code injection tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnno1962/injectionforxcode"&gt;injectionforxcode&lt;/a&gt; - Code injection including Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Vaccine"&gt;Vaccine&lt;/a&gt; - Vaccine is a framework that aims to make your apps immune to recompile-decease.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-dependency-injection" class="anchor" aria-hidden="true" href="#dependency-injection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependency Injection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Swinject/Swinject"&gt;Swinject&lt;/a&gt; - Dependency injection framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appfoundry/Reliant"&gt;Reliant&lt;/a&gt; - Nonintrusive Objective-C dependency injection.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sabirvirtuoso/Kraken"&gt;Kraken&lt;/a&gt; - A Dependency Injection Container for Swift with easy-to-use syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/Cleanse"&gt;Cleanse&lt;/a&gt; - Lightweight Swift Dependency Injection Framework by Square.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appsquickly/Typhoon"&gt;Typhoon&lt;/a&gt; - Powerful dependency injection (Objective-C &amp;amp; Swift).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Perform"&gt;Perform&lt;/a&gt; - Easy dependency injection for storyboard segues.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/drekka/Alchemic"&gt;Alchemic&lt;/a&gt; - Advanced, yet simple to use DI framework for Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prosumma/Guise"&gt;Guise&lt;/a&gt; - An elegant, flexible, type-safe dependency resolution framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scribd/Weaver"&gt;Weaver&lt;/a&gt; - A declarative, easy-to-use and safe Dependency Injection framework for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hiro-nagami/StoryboardBuilder"&gt;StoryboardBuilder&lt;/a&gt; - Simple dependency injection for generating views from storyboard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ladeiko/ViperServices"&gt;ViperServices&lt;/a&gt; - Dependency injection container for iOS applications written in Swift. Each service can have boot and shutdown code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivlevAstef/DITranquillity"&gt;DITranquillity&lt;/a&gt; - Dependency injection framework for iOS applications written in clean Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uber/needle"&gt;Needle&lt;/a&gt; — Compile-time safe Swift dependency injection framework with real code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vincent-pradeilles/locatable"&gt;Locatable&lt;/a&gt; - A micro-framework that leverages Property Wrappers to implement the Service Locator pattern.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-deployment--distribution" class="anchor" aria-hidden="true" href="#deployment--distribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment / Distribution&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/fastlane"&gt;fastlane&lt;/a&gt; - Connect all iOS deployment tools into one streamlined workflow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/fastlane/tree/master/deliver"&gt;deliver&lt;/a&gt; - Upload screenshots, metadata and your app to the App Store using a single command.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/fastlane/tree/master/snapshot"&gt;snapshot&lt;/a&gt; - Automate taking localized screenshots of your iOS app on every device.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.buddybuild.com/" rel="nofollow"&gt;buddybuild&lt;/a&gt; - A mobile iteration platform - build, deploy, and collaborate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bitrise.io" rel="nofollow"&gt;Bitrise&lt;/a&gt; - Mobile Continuous Integration &amp;amp; Delivery with dozens of integrations to build, test, deploy and collaborate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/watchbuild"&gt;watchbuild&lt;/a&gt; - Get a notification once your iTunes Connect build is finished processing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/products/crashlytics/" rel="nofollow"&gt;Crashlytics&lt;/a&gt; - A crash reporting and beta testing service.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/testflight/" rel="nofollow"&gt;TestFlight Beta Testing&lt;/a&gt; - The beta testing service hosted on iTunes Connect (requires iOS 8 or later).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hockeyapp.net" rel="nofollow"&gt;HockeyApp&lt;/a&gt; - With HockeyApp, you can distribute beta versions of your app, collect live crash reports, get feedback from users, and analyze test coverage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fastlane/boarding"&gt;boarding&lt;/a&gt; - Instantly create a simple signup page for TestFlight beta testers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bitstadium/HockeyKit"&gt;HockeyKit&lt;/a&gt; - A software update kit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rollout.io/" rel="nofollow"&gt;Rollout.io&lt;/a&gt; - SDK to patch, fix bugs, modify and manipulate native apps (Obj-c &amp;amp; Swift) in real-time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://theapplaunchpad.com/" rel="nofollow"&gt;AppLaunchpad&lt;/a&gt; - Free App Store screenshot builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LaunchKit/LaunchKit"&gt;LaunchKit&lt;/a&gt; - A set of web-based tools for mobile app developers, now open source!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://instabug.com" rel="nofollow"&gt;Instabug&lt;/a&gt; - In-app feedback, Bug and Crash reporting, Fix Bugs Faster through user-steps, video recordings, screen annotation, network requests logging.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electricbolt/appfiguratesdk"&gt;Appfigurate&lt;/a&gt; - Secure runtime configuration for iOS and watchOS, apps and app extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IdeasOnCanvas/ScreenshotFramer"&gt;ScreenshotFramer&lt;/a&gt; - With Screenshot Framer you can easily create nice-looking and localized App Store Images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://semaphoreci.com/product/ios" rel="nofollow"&gt;Semaphore&lt;/a&gt; - CI/CD service which makes it easy to build, test and deploy applications for any Apple device. iOS support is fully integrated in Semaphore 2.0, so you can use the same powerful CI/CD pipeline features for iOS as you do for Linux-based development.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-app-store" class="anchor" aria-hidden="true" href="#app-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;App Store&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/app-store/review/#common-app-rejections" rel="nofollow"&gt;Apple's Common App Rejections Styleguide&lt;/a&gt; - Highlighted some of the most common issues that cause apps to get rejected.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mobileaction.co" rel="nofollow"&gt;Free App Store Optimization Tool&lt;/a&gt; - Lets you track your App Store visibility in terms of keywords and competitors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oisin/app-release-checklist/blob/master/checklist.md"&gt;App Release Checklist&lt;/a&gt; - A checklist to pore over before you ship that amazing app that has taken ages to complete, but you don't want to rush out in case you commit a schoolboy error that will end up making you look dumber than you are.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Harpy"&gt;Harpy&lt;/a&gt; - Notify users when a new version of your iOS app is available, and prompt them with the App Store link.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arashpayan/appirater"&gt;appirater&lt;/a&gt; - A utility that reminds your iPhone app's users to review the app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Siren"&gt;Siren&lt;/a&gt; - Notify users when a new version of your app is available and prompt them to upgrade.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aashishtamsya/Appstore-Review-Guidelines"&gt;Appstore Review Guidelines&lt;/a&gt; - A curated list of points which a developer has to keep in mind before submitting his/her application on appstore for review.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amebalabs/AppVersion"&gt;AppVersion&lt;/a&gt; - Keep users on the up-to date version of your App.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-extensions-xcode-8" class="anchor" aria-hidden="true" href="#extensions-xcode-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions (Xcode 8+)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BalestraPatrick/CleanClosureXcode"&gt;CleanClosureXcode&lt;/a&gt; - An Xcode Source Editor extension to clean the closure syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cyanzhong/xTextHandler"&gt;xTextHandler&lt;/a&gt; - Xcode Source Editor Extension Toolset (Plugins for Xcode 8).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bouke/SwiftInitializerGenerator"&gt;SwiftInitializerGenerator&lt;/a&gt; - Xcode 8 Source Code Extension to Generate Swift Initializers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sergdort/XcodeEquatableGenerator"&gt;XcodeEquatableGenerator&lt;/a&gt; - Xcode 8 Source Code Extension will generate conformance to Swift Equatable protocol based on type and fields selection.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markohlebar/Import"&gt;Import&lt;/a&gt; - Xcode extension for adding imports from anywhere in the code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/velyan/Mark"&gt;Mark&lt;/a&gt; - Xcode extension for generating MARK comments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Otbivnoe/XShared"&gt;XShared&lt;/a&gt; - Xcode extension which allows you copying the code with special formatting quotes for social (Slack, Telegram).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bunn/Xgist"&gt;XGist&lt;/a&gt; - Xcode extension which allows you to send your text selection or entire file to GitHub's Gist and automatically copy the Gist URL into your Clipboard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://objectivec2swift.com/" rel="nofollow"&gt;Swiftify&lt;/a&gt; - Objective-C to Swift online code converter and Xcode extension.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serhii-londar/DocumenterXcode"&gt;DocumenterXcode&lt;/a&gt; - Attempt to give a new life for VVDocumenter-Xcode as source editor extension.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Karetski/Snowonder"&gt;Snowonder&lt;/a&gt; - Magical import declarations formatter for Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/XVimProject/XVim2"&gt;XVim2&lt;/a&gt; - Vim key-bindings for Xcode 9.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/velyan/Comment-Spell-Checker"&gt;Comment Spell Checker&lt;/a&gt; - Xcode extension for spell checking and auto correcting code comments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bow-swift/nef-plugin"&gt;nef&lt;/a&gt; - This Xcode extension enables you to make a code selection and export it to a snippets. Available on Mac AppStore.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-themes" class="anchor" aria-hidden="true" href="#themes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Themes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://draculatheme.com/xcode/" rel="nofollow"&gt;Dracula Theme&lt;/a&gt; - A dark theme for Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hdoria/xcode-themes"&gt;Xcode themes list&lt;/a&gt; - Color themes for Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Solarized-Dark-for-Xcode/"&gt;Solarized-Dark-for-Xcode&lt;/a&gt; - Solarized Dark Theme for Xcode 5.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cargath/WWDC2016-Xcode-Color-Scheme"&gt;WWDC2016 Xcode Color Scheme&lt;/a&gt; - A color scheme for Xcode based on the WWDC 2016 invitation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/durul/Xcodetheme"&gt;DRL Theme&lt;/a&gt; - A soft darkness theme for Xcode.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-xcode" class="anchor" aria-hidden="true" href="#other-xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Xcode&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aashishtamsya/awesome-xcode-scripts"&gt;awesome-xcode-scripts&lt;/a&gt; - A curated list of useful xcode scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/synx"&gt;Synx&lt;/a&gt; - A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tintenklecks/IBDelegateCodesippets"&gt;dsnip&lt;/a&gt; - Tool to generate (native) Xcode code snippets from all protocols/delegate methods of UIKit (UITableView, ...)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeskConnect/SBShortcutMenuSimulator"&gt;SBShortcutMenuSimulator&lt;/a&gt; - 3D Touch shortcuts in the Simulator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aashishtamsya/awesome-gitignore-templates"&gt;awesome-gitignore-templates&lt;/a&gt; - A collection of swift, objective-c, android and many more langugages .gitignore templates.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artemnovichkov/swift-project-template"&gt;swift-project-template&lt;/a&gt; - Template for iOS Swift project generation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Juanpe/Swift-VIPER-Module"&gt;Swift-VIPER-Module&lt;/a&gt; - Xcode template for create modules with VIPER Architecture written in Swift 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abdullahselek/ViperC"&gt;ViperC&lt;/a&gt; - Xcode template for VIPER Architecture for both Objective-C and Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ismetanin/XcodeCodeSnippets"&gt;XcodeCodeSnippets&lt;/a&gt; - A set of code snippets for iOS development, includes code and comments snippets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=stevemoser.xcode-keybindings" rel="nofollow"&gt;Xcode Keymap for Visual Studio Code&lt;/a&gt; - This extension ports popular Xcode keyboard shortcuts to Visual Studio Code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Camji55/xtm"&gt;Xcode Template Manager&lt;/a&gt; - Xcode Template Manager is a Swift command line tool that helps you manage your Xcode project templates.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EvsenevDev/VIPERModuleTemplate"&gt;VIPER Module Template&lt;/a&gt; - Xcode Template of VIPER Module which generates all layers of VIPER.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/Swift-CheatSheet"&gt;Swift Cheat Sheet&lt;/a&gt; - A quick reference cheat sheet for common, high level topics in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iwasrobbed/Objective-C-CheatSheet"&gt;Objective-C Cheat Sheet&lt;/a&gt; - A quick reference cheat sheet for common, high level topics in Objective-C.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/SwiftSnippets"&gt;SwiftSnippets&lt;/a&gt; - A collection of Swift snippets to be used in Xcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whitef0x0/app-store-checklist"&gt;App Store Checklist&lt;/a&gt; - A checklist of what to look for before submitting your app to the App Store.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ole/whats-new-in-swift-4"&gt;whats-new-in-swift-4&lt;/a&gt; - An Xcode playground showcasing the new features in Swift 4.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://erenkabakci.github.io/WWDC-Recap/" rel="nofollow"&gt;WWDC-Recap&lt;/a&gt; - A collection of session summaries in markdown format, from WWDC 19 &amp;amp; 17.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-style-guides" class="anchor" aria-hidden="true" href="#style-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style Guides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/NYTimes/objective-c-style-guide"&gt;NY Times - Objective C Style Guide&lt;/a&gt; - The Objective-C Style Guide used by The New York Times.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/objective-c-style-guide"&gt;raywenderlich Style Guide&lt;/a&gt; - A style guide that outlines the coding conventions for raywenderlich.com.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/github/objective-c-style-guide"&gt;GitHub Objective-C Style Guide&lt;/a&gt; - Style guide &amp;amp; coding conventions for Objective-C projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/soffes/812796"&gt;Objective-C Coding Convention and Best Practices&lt;/a&gt; - Gist with coding conventions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/swift-style-guide"&gt;Swift Style Guide by @raywenderlich&lt;/a&gt; - The official Swift style guide for raywenderlich.com.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/ios-style"&gt;Spotify Objective-C Coding Style&lt;/a&gt; - Guidelines for iOS development in use at Spotify.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/github/swift-style-guide"&gt;GitHub - Style guide &amp;amp; coding conventions for Swift projects&lt;/a&gt; - A guide to our Swift style and conventions by @github.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/futurice/ios-good-practices"&gt;Futurice iOS Good Practices&lt;/a&gt; - iOS starting guide and good practices suggestions by &lt;a href="https://github.com/futurice"&gt;@futurice&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SlideShareInc/swift-style-guide/blob/master/swift_style_guide.md"&gt;SlideShare Swift Style Guide&lt;/a&gt; - SlideShare Swift Style Guide we are using for our upcoming iOS 8 only app written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prolificinteractive/swift-style-guide"&gt;Prolific Interactive Style Guide&lt;/a&gt; - A style guide for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linkedin/swift-style-guide"&gt;Swift Style Guide by LinkedIn&lt;/a&gt; - LinkedIn's Official Swift Style Guide.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-good-websites" class="anchor" aria-hidden="true" href="#good-websites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Good Websites&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-news-blogs-and-more" class="anchor" aria-hidden="true" href="#news-blogs-and-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News, Blogs and more&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bgr.com/ios-7/" rel="nofollow"&gt;BGR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.imore.com/" rel="nofollow"&gt;iMore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lifehacker.com/tag/ios" rel="nofollow"&gt;Lifehacker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nshipster.com" rel="nofollow"&gt;NSHipster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.objc.io/" rel="nofollow"&gt;Objc.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://asciiwwdc.com/" rel="nofollow"&gt;ASCIIwwdc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.natashatherobot.com/" rel="nofollow"&gt;Natasha The Robot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/swift/blog/" rel="nofollow"&gt;Apple's Swift Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/iOSProgramming/" rel="nofollow"&gt;iOS Programming Subreddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ScottLogic/iOS8-day-by-day"&gt;iOS8-day-by-day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ioscreator.com/" rel="nofollow"&gt;iOScreator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mathewsanders.com/" rel="nofollow"&gt;Mathew Sanders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hboon.com/iosdevnuggets/" rel="nofollow"&gt;iOS Dev Nuggets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/9magnets/iOS-Developer-and-Designer-Interview-Questions"&gt;iOS Developer and Designer interview&lt;/a&gt; - A small guide to help those looking to hire a developer or designer for iOS work.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ScottLogic/iOS9-day-by-day"&gt;iOS9-day-by-day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.fb.com/category/ios/" rel="nofollow"&gt;Code Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rgnlax/Feeds-for-iOS-Developer"&gt;Feeds for iOS Developer&lt;/a&gt; - The list of RSS feeds for iOS developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cocoacontrols.com/" rel="nofollow"&gt;Cocoa Controls&lt;/a&gt; - Open source UI components for iOS and macOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-uikit-references" class="anchor" aria-hidden="true" href="#uikit-references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UIKit references&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://iosfonts.com/" rel="nofollow"&gt;iOS Fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/mattt/5135521"&gt;UIAppearance list&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-forums-and-discuss-lists" class="anchor" aria-hidden="true" href="#forums-and-discuss-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forums and discuss lists&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/ios" rel="nofollow"&gt;"iOS" on Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-tutorials-and-keynotes" class="anchor" aria-hidden="true" href="#tutorials-and-keynotes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorials and Keynotes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.appcoda.com/" rel="nofollow"&gt;AppCoda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/ios/index.htm" rel="nofollow"&gt;Tutorials Point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codewithchris.com/" rel="nofollow"&gt;Code with Chris&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cocoawithlove.com/" rel="nofollow"&gt;Cocoa with Love&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCysEngjfeIYapEER9K8aikw/videos" rel="nofollow"&gt;Brian Advent youtube channel&lt;/a&gt; - Swift tutorials Youtube Channel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/ios" rel="nofollow"&gt;raywenderlich.com&lt;/a&gt; - Tutorials for developers and gamers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mikeash.com/pyblog/" rel="nofollow"&gt;Mike Ash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bignerdranch.com/blog/category/ios/" rel="nofollow"&gt;Big Nerd Ranch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.tutsplus.com/categories/ios-sdk" rel="nofollow"&gt;Tuts+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thinkster.io/a-better-way-to-learn-swift" rel="nofollow"&gt;Thinkster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swifteducation"&gt;Swift Education&lt;/a&gt; - A community of educators sharing materials for teaching Swift and app development.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cocoadevcentral.com" rel="nofollow"&gt;Cocoa Dev Central&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://useyourloaf.com/" rel="nofollow"&gt;Use Your Loaf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jamesonquave.com/blog/tutorials/" rel="nofollow"&gt;Swift Tutorials by Jameson Quave&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hsavit1/Awesome-Swift-Education"&gt;Awesome-Swift-Education&lt;/a&gt; - All of the resources for Learning About Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uraimo/Awesome-Swift-Playgrounds"&gt;Awesome-Swift-Playgrounds&lt;/a&gt; - A List of Awesome Swift Playgrounds!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nettlep/learn-swift"&gt;learn-swift&lt;/a&gt; - Learn Apple's Swift programming language interactively through these playgrounds.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teamtreehouse.com/library/topic:ios" rel="nofollow"&gt;Treehouse's iOS Courses and Workshops&lt;/a&gt; - Topics for beginner and advanced developers in both Objective-C and Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakarmy/swift-summary"&gt;The Swift Summary Book&lt;/a&gt; - A summary of Apple's Swift language written on Playgrounds.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com" rel="nofollow"&gt;Hacking With Swift&lt;/a&gt; - Learn to code iPhone and iPad apps with 3 Swift tutorials.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://academy.realm.io/" rel="nofollow"&gt;Realm Academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnappmaking.com" rel="nofollow"&gt;LearnAppMaking&lt;/a&gt; - LearnAppMaking helps app developers to build, launch and market iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/livevideo/ios-development-with-swift-lv" rel="nofollow"&gt;iOS Development with Swift in Motion &lt;/a&gt; -  This live video course locks in the language fundamentals and then offers interesting examples and exercises to build and practice your knowledge and skills.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zagahr/Conferences.digital"&gt;Conferences.digital&lt;/a&gt; - Watch conference videos in a native macOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://daddycoding.com/" rel="nofollow"&gt;DaddyCoding&lt;/a&gt; - iOS Tutorials ranging from beginners to advance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ios-ui-template" class="anchor" aria-hidden="true" href="#ios-ui-template"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS UI Template&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.invisionapp.com/inside-design/design-resources/tethr/" rel="nofollow"&gt;iOS UI Design Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ivomynttinen.com/blog/ios-design-guidelines" rel="nofollow"&gt;iOS Design Guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://facebook.design/" rel="nofollow"&gt;iOS GUI by Facebook Design Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-prototyping" class="anchor" aria-hidden="true" href="#prototyping"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prototyping&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.fluidui.com" rel="nofollow"&gt;FluidUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proto.io/" rel="nofollow"&gt;Proto.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.framer.com/" rel="nofollow"&gt;Framer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://principleformac.com/" rel="nofollow"&gt;Principle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-newsletters" class="anchor" aria-hidden="true" href="#newsletters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://weekly.awesomeios.com" rel="nofollow"&gt;AwesomeiOS Weekly&lt;/a&gt; - AwesomeiOS Weekly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ios-goodies.com" rel="nofollow"&gt;iOS Goodies&lt;/a&gt; - Weekly iOS newsletter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/newsletter" rel="nofollow"&gt;raywenderlich.com Weekly&lt;/a&gt; - sign up to receive the latest tutorials from raywenderlich.com each week.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iosdev.tools" rel="nofollow"&gt;iOS Dev Tools Weekly&lt;/a&gt; - The greatest iOS development tools, including websites, desktop and mobile apps, and back-end services.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wanderbit.us4.list-manage.com/subscribe?u=4e20cd8ea3a0ce09ff4619a52&amp;amp;id=5898a5992b" rel="nofollow"&gt;iOS Trivia Weekly&lt;/a&gt; - Three challenging questions about iOS development every Wednesday.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://indieiosfocus.com/" rel="nofollow"&gt;Indie iOS Focus Weekly&lt;/a&gt; - Looking for the best iOS dev links, tutorials, &amp;amp; tips beyond the usual news? Curated by Chris Beshore. Published every Thursday.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iosdevweekly.com/" rel="nofollow"&gt;iOS Dev Weekly&lt;/a&gt; - Subscribe to a hand-picked round up of the best iOS development links every week. Free.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swiftweekly.github.io/" rel="nofollow"&gt;Swift Weekly Brief&lt;/a&gt; - A community-driven weekly newsletter about Swift.org. Curated by Jesse Squires and published for free every Thursday.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.serverswift.tech" rel="nofollow"&gt;Server-Side Swift Weekly&lt;/a&gt; - A weekly newsletter with the best links related to server-side Swift and cross-platform developer tools. Curated by &lt;a href="https://twitter.com/maxdesiatov" rel="nofollow"&gt;@maxdesiatov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://us11.campaign-archive.com/home/?u=cd1f3ed33c6527331d82107ba&amp;amp;id=532dc7fb64" rel="nofollow"&gt;iOS Cookies Newsletter&lt;/a&gt; - A weekly digest of new iOS libraries written in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://andybargh.com/swiftdevelopments/" rel="nofollow"&gt;Swift Developments&lt;/a&gt; - A weekly curated newsletter containing a hand picked selection of the latest links, videos, tools and tutorials for people interested in designing and developing their own iOS, WatchOS and AppleTV apps using Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-medium" class="anchor" aria-hidden="true" href="#medium"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Medium&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/ios-os-x-development" rel="nofollow"&gt;iOS App Development&lt;/a&gt; - Stories and technical tips about building apps for iOS, Apple Watch, and iPad/iPhone.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/swift-programming" rel="nofollow"&gt;Swift Programming&lt;/a&gt; - The Swift Programming Language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/flawless-app-stories" rel="nofollow"&gt;Flawless App&lt;/a&gt; - Development &amp;amp; design &amp;amp; marketing tips for iOS developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-social-media" class="anchor" aria-hidden="true" href="#social-media"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Social Media&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-twitter" class="anchor" aria-hidden="true" href="#twitter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Twitter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/objcio" rel="nofollow"&gt;@objcio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/CocoaPods" rel="nofollow"&gt;@CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/CocoaPodsFeed" rel="nofollow"&gt;@CocoaPodsFeed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/RubyMotion" rel="nofollow"&gt;@RubyMotion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-podcasts" class="anchor" aria-hidden="true" href="#podcasts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Podcasts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/podcast" rel="nofollow"&gt;The Ray Wenderlich Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.imore.com/debug" rel="nofollow"&gt;Debug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.appstorypodcast.com" rel="nofollow"&gt;App Story&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devchat.tv/iphreaks/" rel="nofollow"&gt;iPhreaks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.relay.fm/radar" rel="nofollow"&gt;Under the Radar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://coreint.org/" rel="nofollow"&gt;Core Intuition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.swiftplayhouse.com/" rel="nofollow"&gt;Swift Playhouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://releasenotes.tv/" rel="nofollow"&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mtjc.fireside.fm/" rel="nofollow"&gt;More Than Just Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spec.fm/podcasts/runtime" rel="nofollow"&gt;Runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://consultpodcast.com/#_=_" rel="nofollow"&gt;Consult&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spec.fm/podcasts/swift-unwrapped" rel="nofollow"&gt;Swift Unwrapped&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/fireside-swift/id1269435221?mt=2" rel="nofollow"&gt;Fireside Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.swiftbysundell.com/podcast/" rel="nofollow"&gt;Swift by Sundell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-books" class="anchor" aria-hidden="true" href="#books"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Books&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://books.apple.com/us/book/swift-programming-language/id881256329" rel="nofollow"&gt;The Swift Programming Language by Apple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bignerdranch.com/books/ios-programming-the-big-nerd-ranch-guide-sixth-edition/" rel="nofollow"&gt;iOS Programming: The Big Nerd Ranch Guide by Christian Keur, Aaron Hillegass, Joe Conway&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Programming-Objective-C-6th-Developers-Library/dp/0321967607" rel="nofollow"&gt;Programming in Objective-C by Stephen G. Kochan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mikeash.com/book.html" rel="nofollow"&gt;The Complete Friday Q &amp;amp; A: Volume 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Core-Data-iOS-Data-Driven-Applications/dp/0321670426" rel="nofollow"&gt;Core Data for iOS: Developing Data-Driven Applications for the iPad, iPhone, and iPod touch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Cocoa-Design-Patterns-Erik-Buck/dp/0321535022" rel="nofollow"&gt;Cocoa Design Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/hello-swift" rel="nofollow"&gt;Hello Swift! by Tanmay Bakshi with Lynn Beighley&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/ios-development-with-swift" rel="nofollow"&gt;iOS Development with Swift by Craig Grummitt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/anyone-can-create-an-app" rel="nofollow"&gt;Anyone Can Create an App by Wendy L. Wise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.objc.io/books/advanced-swift/" rel="nofollow"&gt;Advanced Swift by Chris Eidhof, Ole Begemann, and Airspeed Velocity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.objc.io/books/functional-swift/" rel="nofollow"&gt;Functional Swift by Chris Eidhof, Florian Kugler, and Wouter Swierstra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.objc.io/books/core-data/" rel="nofollow"&gt;Core Data by Florian Kugler and Daniel Eggert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/classic-computer-science-problems-in-swift" rel="nofollow"&gt;Classic Computer Science Problems in Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/swift-in-depth" rel="nofollow"&gt;Swift in Depth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-other-awesome-lists" class="anchor" aria-hidden="true" href="#other-awesome-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Awesome Lists&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Other amazingly awesome lists can be found in the&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bayandin/awesome-awesomeness"&gt;awesome-awesomeness&lt;/a&gt; list.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dkhamsing/open-source-ios-apps"&gt;Open Source apps&lt;/a&gt; list of open source iOS apps.&lt;/li&gt;
&lt;li&gt;Awesome-swift
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/matteocrippa/awesome-swift"&gt;@matteocrippa&lt;/a&gt; - A collaborative list of awesome swift resources.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Wolg/awesome-swift"&gt;@Wolg&lt;/a&gt; - A curated list of awesome Swift frameworks, libraries and software.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hsavit1/Awesome-Swift-Education"&gt;Awesome-Swift-Education&lt;/a&gt; - All of the resources for Learning About Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sanketfirodiya/sample-watchkit-apps"&gt;awesome watchkit apps&lt;/a&gt; curated list of sample watchkit apps and tutorials.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sanketfirodiya/iOS-learning-resources"&gt;iOS Learning Resources&lt;/a&gt; Comprehensive collection of high quality, frequently updated and well maintained iOS tutorial sites.&lt;/li&gt;
&lt;li&gt;Awesome iOS Animation
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ameizi/awesome-ios-animation"&gt;@ameizi&lt;/a&gt; - A curated list of awesome iOS animation, including Objective-C and Swift libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jzau/awesome-ios-animation"&gt;@jzau&lt;/a&gt; - Collection of Animation projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ameizi/awesome-ios-chart"&gt;awesome-ios-chart&lt;/a&gt; - A curated list of awesome iOS chart libraries, including Objective-C and Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vsouza/awesome-gists#ios"&gt;awesome-gists&lt;/a&gt; - A list of amazing gists (iOS section).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cjwirth/awesome-ios-ui"&gt;awesome-ios-ui&lt;/a&gt; - A curated list of awesome iOS UI/UX libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Awesome-Server-Side-Swift/TheList"&gt;Awesome-Server-Side-Swift/TheList&lt;/a&gt; - A list of Awesome Server Side Swift 3 projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaximAbramchuck/awesome-interview-questions#ios"&gt;awesome-interview-questions&lt;/a&gt; - A curated awesome list of lists of interview questions including iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bakkenbaeck/iOS-handbook"&gt;iOS-Playbook&lt;/a&gt; - Guidelines and best practices for excellent iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jVirus/iOS-Learning-Materials"&gt;iOS-Learning-Materials&lt;/a&gt; - Curated list of articles, web-resources, tutorials and code repositories that may help you dig a little bit deeper into iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carolanitz/Awesome-iOS-Twitter"&gt;Awesome-iOS-Twitter&lt;/a&gt; - A curated list of awesome iOS Twitter accounts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LisaDziuba/Marketing-for-Engineers"&gt;Marketing for Engineers&lt;/a&gt; - A curated collection of marketing articles &amp;amp; tools to grow your product.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olucurious/Awesome-ARKit"&gt;Awesome ARKit&lt;/a&gt; - A curated list of awesome ARKit projects and resources.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lascorbe/CocoaConferences"&gt;CocoaConferences&lt;/a&gt; - List of cocoa conferences for iOS &amp;amp; macOS developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/example-ios-apps"&gt;example-ios-apps&lt;/a&gt; - A curated list of Open Source example iOS apps developed in Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackr.io/tutorials/learn-ios-swift" rel="nofollow"&gt;Curated-Resources-for-Learning-Swift&lt;/a&gt; - A curated list of resources recommended by the developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/smalam119/classic-problem-solving-algorithms-and-data-structures-in-swift"&gt;ClassicProblemSolvingAndDataStructuresInSwift&lt;/a&gt; - Collection of popular algorithms, data structure and problem solving in Swift 4.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serhii-londar/open-source-mac-os-apps"&gt;Awesome list of open source applications for macOS&lt;/a&gt; - List of awesome open source applications for macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dashvlas/awesome-ios-interview"&gt;Awesome iOS Interview question list&lt;/a&gt; - Guide for interviewers and interviewees. Review these iOS interview questions - and get some practical tips along the way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/app-developers/top"&gt;Top App Developers&lt;/a&gt; - A list of top iOS app developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-and-license" class="anchor" aria-hidden="true" href="#contributing-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing and License&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vsouza/awesome-ios/blob/master/.github/CONTRIBUTING.md"&gt;See the guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Distributed under the MIT license. See LICENSE for more information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vsouza</author><guid isPermaLink="false">https://github.com/vsouza/awesome-ios</guid><pubDate>Sat, 21 Dec 2019 00:08:00 GMT</pubDate></item><item><title>SwipeCellKit/SwipeCellKit #9 in Swift, Today</title><link>https://github.com/SwipeCellKit/SwipeCellKit</link><description>&lt;p&gt;&lt;i&gt;Swipeable UITableViewCell/UICollectionViewCell based on the stock Mail.app, implemented in Swift.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swipecellkit" class="anchor" aria-hidden="true" href="#swipecellkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwipeCellKit&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/jerkoch/SwipeCellKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4fcd720196659aedbbf0a6558bb2cac056b37c0c/68747470733a2f2f7472617669732d63692e6f72672f6a65726b6f63682f537769706543656c6c4b69742e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/jerkoch/SwipeCellKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/SwipeCellKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e673f9bebc91d5bcd7c911152e9ff36ac458b453/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f537769706543656c6c4b69742e737667" alt="Version Status" data-canonical-src="https://img.shields.io/cocoapods/v/SwipeCellKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c44447970d8ab760d39e09c8b3837dff55f74fd1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352e302d6f72616e67652e7376673f7374796c653d666c6174" alt="Swift 5.0" data-canonical-src="https://img.shields.io/badge/Swift-5.0-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3db2b440dbec3c7d07ab312602b33dea4f6563d0/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f537769706543656c6c4b69742e737667" alt="license MIT" data-canonical-src="https://img.shields.io/cocoapods/l/SwipeCellKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swipecellkit.github.io/SwipeCellKit/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d0e941fa1d123e66a3f4a67494f2fbdef92ef1c/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f537769706543656c6c4b69742e737667" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/SwipeCellKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/mkurabi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1d27cac1c85325cf0abeb23a51e853aa3aae60d7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d406d6b75726162692d626c75652e7376673f7374796c653d666c6174" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-@mkurabi-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Swipeable UITableViewCell/UICollectionViewCell based on the stock Mail.app, implemented in Swift.&lt;/em&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Hero.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Hero.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;A swipeable &lt;code&gt;UITableViewCell&lt;/code&gt; or &lt;code&gt;UICollectionViewCell&lt;/code&gt; with support for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Left and right swipe actions&lt;/li&gt;
&lt;li&gt;Action buttons with: &lt;em&gt;text only, text + image, image only&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Haptic Feedback&lt;/li&gt;
&lt;li&gt;Customizable transitions: &lt;em&gt;Border, Drag, and Reveal&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Customizable action button behavior during swipe&lt;/li&gt;
&lt;li&gt;Animated expansion when dragging past threshold&lt;/li&gt;
&lt;li&gt;Customizable expansion animations&lt;/li&gt;
&lt;li&gt;Support for both &lt;code&gt;UITableView&lt;/code&gt; and &lt;code&gt;UICollectionView&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;Dark Mode&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-background" class="anchor" aria-hidden="true" href="#background"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Background&lt;/h2&gt;
&lt;p&gt;Check out my &lt;a href="https://jerkoch.com/2017/02/07/swiper-no-swiping.html" rel="nofollow"&gt;blog post&lt;/a&gt; on how &lt;em&gt;SwipeCellKit&lt;/em&gt; came to be.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-transition-styles" class="anchor" aria-hidden="true" href="#transition-styles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transition Styles&lt;/h3&gt;
&lt;p&gt;The transition style describes how the action buttons are exposed during the swipe.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-border" class="anchor" aria-hidden="true" href="#border"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Border&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Border.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Border.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-drag" class="anchor" aria-hidden="true" href="#drag"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Drag&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Drag.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Drag.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-reveal" class="anchor" aria-hidden="true" href="#reveal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reveal&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Reveal.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Reveal.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-customized" class="anchor" aria-hidden="true" href="#customized"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customized&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Delegate.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Delegate.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-expansion-styles" class="anchor" aria-hidden="true" href="#expansion-styles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Expansion Styles&lt;/h3&gt;
&lt;p&gt;The expansion style describes the behavior when the cell is swiped past a defined threshold.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-none" class="anchor" aria-hidden="true" href="#none"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;None&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-None.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-None.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-selection" class="anchor" aria-hidden="true" href="#selection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selection&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Selection.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Selection.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-destructive" class="anchor" aria-hidden="true" href="#destructive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Destructive&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Destructive.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Destructive.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-customized-1" class="anchor" aria-hidden="true" href="#customized-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customized&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Delegate.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Delegate.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Swift 5.0&lt;/li&gt;
&lt;li&gt;Xcode 10.3+&lt;/li&gt;
&lt;li&gt;iOS 9.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-cocoapods-recommended" class="anchor" aria-hidden="true" href="#cocoapods-recommended"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; (recommended)&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Latest release in CocoaPods&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwipeCellKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get the latest on develop&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwipeCellKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:git&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/SwipeCellKit/SwipeCellKit.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:branch&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;develop&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you have NOT upgraded to Xcode 11, use the last Swift Xcode 10.X compatible release&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwipeCellKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.6.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you have NOT upgraded to Swift 5.0, use the last Swift 4.2/Xcode 10.2 compatible release&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwipeCellKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.5.4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you have NOT upgraded to Swift 4.2, use the last non-swift 4.2 compatible release&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwipeCellKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.4.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SwipeCellKit/SwipeCellKit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/SwipeCellKit/SwipeCellKit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.7.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="https://swipecellkit.github.io/SwipeCellKit/" rel="nofollow"&gt;docs&lt;/a&gt;. Generated with &lt;a href="https://github.com/realm/jazzy"&gt;jazzy&lt;/a&gt;. Hosted by &lt;a href="https://pages.github.com"&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage-for-uitableview" class="anchor" aria-hidden="true" href="#usage-for-uitableview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage for UITableView&lt;/h2&gt;
&lt;p&gt;Set the &lt;code&gt;delegate&lt;/code&gt; property on &lt;code&gt;SwipeTableViewCell&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;tableView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;tableView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;cellForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UITableViewCell {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; cell &lt;span class="pl-k"&gt;=&lt;/span&gt; tableView.&lt;span class="pl-c1"&gt;dequeueReusableCell&lt;/span&gt;(&lt;span class="pl-c1"&gt;withIdentifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;as!&lt;/span&gt; SwipeTableViewCell
    cell.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; cell
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adopt the &lt;code&gt;SwipeTableViewCellDelegate&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;tableView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;tableView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;editActionsForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;orientation&lt;/span&gt;: SwipeActionsOrientation) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [SwipeAction]&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; orientation &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;right&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; }

    &lt;span class="pl-k"&gt;let&lt;/span&gt; deleteAction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeAction&lt;/span&gt;(&lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;destructive&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Delete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { action, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle action by updating model with deletion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; customize the action appearance&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    deleteAction.&lt;span class="pl-c1"&gt;image&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;delete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    &lt;span class="pl-k"&gt;return&lt;/span&gt; [deleteAction]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Optionally, you can implement the &lt;code&gt;editActionsOptionsForRowAt&lt;/code&gt; method to customize the behavior of the swipe actions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;tableView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;tableView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;editActionsOptionsForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;orientation&lt;/span&gt;: SwipeActionsOrientation) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; SwipeOptions {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; options &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeOptions&lt;/span&gt;()
    options.&lt;span class="pl-smi"&gt;expansionStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;destructive&lt;/span&gt;
    options.&lt;span class="pl-smi"&gt;transitionStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;border&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; options
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage-for-uicollectionview" class="anchor" aria-hidden="true" href="#usage-for-uicollectionview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage for UICollectionView&lt;/h2&gt;
&lt;p&gt;Set the &lt;code&gt;delegate&lt;/code&gt; property on &lt;code&gt;SwipeCollectionViewCell&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionView&lt;/span&gt;: UICollectionView, &lt;span class="pl-en"&gt;cellForItemAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UICollectionViewCell {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; cell &lt;span class="pl-k"&gt;=&lt;/span&gt; collectionView.&lt;span class="pl-c1"&gt;dequeueReusableCell&lt;/span&gt;(&lt;span class="pl-c1"&gt;withReuseIdentifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;for&lt;/span&gt;: indexPath) &lt;span class="pl-k"&gt;as!&lt;/span&gt; SwipeCollectionViewCell
    cell.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; cell
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adopt the &lt;code&gt;SwipeCollectionViewCellDelegate&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionView&lt;/span&gt;: UICollectionView, &lt;span class="pl-en"&gt;editActionsForItemAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;orientation&lt;/span&gt;: SwipeActionsOrientation) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [SwipeAction]&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; orientation &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;right&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; }

    &lt;span class="pl-k"&gt;let&lt;/span&gt; deleteAction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeAction&lt;/span&gt;(&lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;destructive&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Delete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { action, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle action by updating model with deletion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; customize the action appearance&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    deleteAction.&lt;span class="pl-c1"&gt;image&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;delete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    &lt;span class="pl-k"&gt;return&lt;/span&gt; [deleteAction]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Optionally, you can implement the &lt;code&gt;editActionsOptionsForItemAt&lt;/code&gt; method to customize the behavior of the swipe actions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionView&lt;/span&gt;: UICollectionView, &lt;span class="pl-en"&gt;editActionsOptionsForItemAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;orientation&lt;/span&gt;: SwipeActionsOrientation) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; SwipeOptions {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; options &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeOptions&lt;/span&gt;()
    options.&lt;span class="pl-smi"&gt;expansionStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;destructive&lt;/span&gt;
    options.&lt;span class="pl-smi"&gt;transitionStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;border&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; options
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-transitions" class="anchor" aria-hidden="true" href="#transitions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transitions&lt;/h3&gt;
&lt;p&gt;Three built-in transition styles are provided by &lt;code&gt;SwipeTransitionStyle&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.border: The visible action area is equally divide between all action buttons.&lt;/li&gt;
&lt;li&gt;.drag: The visible action area is dragged, pinned to the cell, with each action button fully sized as it is exposed.&lt;/li&gt;
&lt;li&gt;.reveal: The visible action area sits behind the cell, pinned to the edge of the table view, and is revealed as the cell is dragged aside.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://github.com/SwipeCellKit/SwipeCellKit/blob/develop/Guides/Advanced.md"&gt;Customizing Transitions&lt;/a&gt; for more details on customizing button appearance as the swipe is performed.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-transition-delegate" class="anchor" aria-hidden="true" href="#transition-delegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transition Delegate&lt;/h4&gt;
&lt;p&gt;Transition for a &lt;code&gt;SwipeAction&lt;/code&gt; can be observered by setting a &lt;code&gt;SwipeActionTransitioning&lt;/code&gt; on the &lt;code&gt;transitionDelegate&lt;/code&gt; property. This allows you to observe what percentage is visible and access to the underlying &lt;code&gt;UIButton&lt;/code&gt; for that &lt;code&gt;SwipeAction&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-expansion" class="anchor" aria-hidden="true" href="#expansion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Expansion&lt;/h3&gt;
&lt;p&gt;Four built-in expansion styles are provided by &lt;code&gt;SwipeExpansionStyle&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.selection&lt;/li&gt;
&lt;li&gt;.destructive (like Mail.app)&lt;/li&gt;
&lt;li&gt;.destructiveAfterFill (like Mailbox/Tweetbot)&lt;/li&gt;
&lt;li&gt;.fill&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Much effort has gone into making &lt;code&gt;SwipeExpansionStyle&lt;/code&gt; extremely customizable. If these built-in styles do not meet your needs, see &lt;a href="https://github.com/SwipeCellKit/SwipeCellKit/blob/develop/Guides/Advanced.md"&gt;Customizing Expansion&lt;/a&gt; for more details on creating custom styles.&lt;/p&gt;
&lt;p&gt;The built-in &lt;code&gt;.fill&lt;/code&gt; expansion style requires manual action fulfillment. This means your action handler must call &lt;code&gt;SwipeAction.fulfill(style:)&lt;/code&gt; at some point during or after invocation to resolve the fill expansion. The supplied &lt;code&gt;ExpansionFulfillmentStyle&lt;/code&gt; allows you to delete or reset the cell at some later point (possibly after further user interaction).&lt;/p&gt;
&lt;p&gt;The built-in &lt;code&gt;.destructive&lt;/code&gt;, and &lt;code&gt;.destructiveAfterFill&lt;/code&gt; expansion styles are configured to automatically perform row deletion when the action handler is invoked (automatic fulfillment).  Your deletion behavior may require coordination with other row animations (eg. inside &lt;code&gt;beginUpdates&lt;/code&gt; and &lt;code&gt;endUpdates&lt;/code&gt;). In this case, you can easily create a custom &lt;code&gt;SwipeExpansionStyle&lt;/code&gt; which requires manual fulfillment to trigger deletion:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; options &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeTableOptions&lt;/span&gt;()
options.&lt;span class="pl-smi"&gt;expansionStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;destructive&lt;/span&gt;(&lt;span class="pl-c1"&gt;automaticallyDelete&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: You must call &lt;code&gt;SwipeAction.fulfill(with style:)&lt;/code&gt; at some point while/after your action handler is invoked to trigger deletion. Do not call &lt;code&gt;deleteRows&lt;/code&gt; directly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; delete &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeAction&lt;/span&gt;(&lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;destructive&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) { action, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update model&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;emails&lt;/span&gt;.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-c1"&gt;at&lt;/span&gt;: indexPath.&lt;span class="pl-smi"&gt;row&lt;/span&gt;)
    action.&lt;span class="pl-c1"&gt;fulfill&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: .&lt;span class="pl-smi"&gt;delete&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-advanced" class="anchor" aria-hidden="true" href="#advanced"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/SwipeCellKit/SwipeCellKit/blob/develop/Guides/Advanced.md"&gt;Advanced Guide&lt;/a&gt; for more details on customization.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Maintained by &lt;a href="https://twitter.com/mkurabi" rel="nofollow"&gt;&lt;strong&gt;@mkurabi&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-showcase" class="anchor" aria-hidden="true" href="#showcase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Showcase&lt;/h2&gt;
&lt;p&gt;We're interested in knowing &lt;a href="https://github.com/SwipeCellKit/SwipeCellKit/blob/develop/SHOWCASE.md"&gt;who's using &lt;em&gt;SwipeCellKit&lt;/em&gt;&lt;/a&gt; in their app. Please submit a pull request to add your app!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;SwipeCellKit&lt;/code&gt; is released under an &lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT License&lt;/a&gt;. See &lt;code&gt;LICENSE&lt;/code&gt; for details.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Please provide attribution, it is greatly appreciated.&lt;/em&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SwipeCellKit</author><guid isPermaLink="false">https://github.com/SwipeCellKit/SwipeCellKit</guid><pubDate>Sat, 21 Dec 2019 00:09:00 GMT</pubDate></item><item><title>marmelroy/PhoneNumberKit #10 in Swift, Today</title><link>https://github.com/marmelroy/PhoneNumberKit</link><description>&lt;p&gt;&lt;i&gt;A Swift framework for parsing, formatting and validating international phone numbers. Inspired by Google's libphonenumber.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/889949/20864386/a1307950-b9ef-11e6-8a58-e9c5103738e7.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/889949/20864386/a1307950-b9ef-11e6-8a58-e9c5103738e7.png" alt="PhoneNumberKit" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/?q=PhoneNumberKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/21382df54a2acfe5f5ef69beb2ea0f9d93dd11a9/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f50686f6e654e756d6265724b69742e7376673f6d61784167653d32353932303030" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/PhoneNumberKit.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/marmelroy/PhoneNumberKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a95ff28120160df088553387283271be7956669a/68747470733a2f2f7472617669732d63692e6f72672f6d61726d656c726f792f50686f6e654e756d6265724b69742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/marmelroy/PhoneNumberKit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/?q=PhoneNumberKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd0d43a2eaf31672e09e52f926e89b696b6371bc/687474703a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f50686f6e654e756d6265724b69742e737667" alt="Version" data-canonical-src="http://img.shields.io/cocoapods/v/PhoneNumberKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-phonenumberkit" class="anchor" aria-hidden="true" href="#phonenumberkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PhoneNumberKit&lt;/h1&gt;
&lt;p&gt;Swift 5.0 framework for parsing, formatting and validating international phone numbers.
Inspired by Google's libphonenumber.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/marmelroy/PhoneNumberKit/blob/master/Documentation/OXMIGRATIONGUIDE.md"&gt;Migrating from PhoneNumberKit 0.x? See the migration guide.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="phone" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/260e.png"&gt;☎️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Validate, normalize and extract the elements of any phone number string.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="100" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png"&gt;💯&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Simple Swift syntax and a lightweight readable codebase.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="checkered_flag" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c1.png"&gt;🏁&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Fast. 1000 parses -&amp;gt; ~0.4 seconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Best-in-class metadata from Google's libPhoneNumber project.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="trophy" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c6.png"&gt;🏆&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Fully tested to match the accuracy of Google's JavaScript implementation of libPhoneNumber.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="iphone" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f1.png"&gt;📱&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Built for iOS. Automatically grabs the default region code from the phone.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Editable (!) AsYouType formatter for UITextField.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="us" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1f8.png"&gt;🇺🇸&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Convert country codes to country names and vice versa&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Import PhoneNumberKit at the top of the Swift file that will interact with a phone number.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PhoneNumberKit&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All of your interactions with PhoneNumberKit happen through a PhoneNumberKit object. The first step you should take is to allocate one.&lt;/p&gt;
&lt;p&gt;A PhoneNumberKit instance is relatively expensive to allocate (it parses the metadata and keeps it in memory for the object's lifecycle), you should try and make sure PhoneNumberKit is allocated once and deallocated when no longer needed.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumberKit &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PhoneNumberKit&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To parse a string, use the parse function. The region code is automatically computed but can be overridden if needed. PhoneNumberKit automatically does a hard type validation to ensure that the object created is valid, this can be quite costly performance-wise and can be turned off if needed.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumber &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+33 6 89 017383&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumberCustomDefaultRegion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+44 20 7031 3000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;withRegion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;ignoreType&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Generic parser error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need to parse and validate a large amount of numbers at once, PhoneNumberKit has a special, lightning fast array parsing function. The default region code is automatically computed but can be overridden if needed. Here you can also ignore hard type validation if it is not necessary. Invalid numbers are ignored in the resulting array.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rawNumberArray &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0291 12345678&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+49 291 12345678&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;04134 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;09123 12345&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumbers &lt;span class="pl-k"&gt;=&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(rawNumberArray)
&lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumbersCustomDefaultRegion &lt;span class="pl-k"&gt;=&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(rawNumberArray, &lt;span class="pl-c1"&gt;withRegion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,  &lt;span class="pl-c1"&gt;ignoreType&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PhoneNumber objects are immutable Swift structs with the following properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumber.&lt;span class="pl-smi"&gt;numberString&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;countryCode&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;nationalNumber&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;numberExtension&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;type&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; e.g Mobile or Fixed&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Formatting a PhoneNumber object into a string is also very easy&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;format&lt;/span&gt;(phoneNumber, &lt;span class="pl-c1"&gt;toType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;e164&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; +61236618300&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;format&lt;/span&gt;(phoneNumber, &lt;span class="pl-c1"&gt;toType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;international&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; +61 2 3661 8300&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;format&lt;/span&gt;(phoneNumber, &lt;span class="pl-c1"&gt;toType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;national&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (02) 3661 8300&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-phonenumbertextfield" class="anchor" aria-hidden="true" href="#phonenumbertextfield"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PhoneNumberTextField&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/7651280/67554038-e6512500-f751-11e9-93c9-9111e899a2ef.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/7651280/67554038-e6512500-f751-11e9-93c9-9111e899a2ef.gif" alt="AsYouTypeFormatter" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To use the AsYouTypeFormatter, just replace your UITextField with a PhoneNumberTextField (if you are using Interface Builder make sure the module field is set to PhoneNumberKit).&lt;/p&gt;
&lt;p&gt;You can customize your TextField UI in the following ways&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;withFlag&lt;/code&gt; will display the country code for the &lt;code&gt;currentRegion&lt;/code&gt;. The &lt;code&gt;flagButton&lt;/code&gt; is displayed in the &lt;code&gt;leftView&lt;/code&gt; of the text field with it's size set based off your text size.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;withExamplePlaceholder&lt;/code&gt; uses &lt;code&gt;attributedPlaceholder&lt;/code&gt; to show an example number for the &lt;code&gt;currentRegion&lt;/code&gt;. In addition when &lt;code&gt;withPrefix&lt;/code&gt; is set, the country code's prefix will automatically be inserted and removed when editing changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PhoneNumberTextField automatically formats phone numbers and gives the user full editing capabilities. If you want to customize you can use the PartialFormatter directly. The default region code is automatically computed but can be overridden if needed (see the example given below).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyGBTextField&lt;/span&gt;: &lt;span class="pl-e"&gt;PhoneNumberTextField &lt;/span&gt;{
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; defaultRegion&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;get&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
        &lt;span class="pl-k"&gt;set&lt;/span&gt; {} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; exists for backward compatibility&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; textField &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PhoneNumberTextField&lt;/span&gt;()

&lt;span class="pl-c1"&gt;PartialFormatter&lt;/span&gt;().&lt;span class="pl-c1"&gt;formatPartial&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+336895555&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; +33 6 89 55 55&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also query countries for a dialing code or the dialing code for a given country&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;countries&lt;/span&gt;(&lt;span class="pl-c1"&gt;withCode&lt;/span&gt;: &lt;span class="pl-c1"&gt;33&lt;/span&gt;)
phoneNumberKit.&lt;span class="pl-c1"&gt;countryCode&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-need-more-customization" class="anchor" aria-hidden="true" href="#need-more-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need more customization?&lt;/h2&gt;
&lt;p&gt;You can access the metadata powering PhoneNumberKit yourself, this enables you to program any behaviours as they may be implemented in PhoneNumberKit itself. It does mean you are exposed to the less polished interface of the underlying file format. If you program something you find useful please push it upstream!&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;metadata&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AU&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;mobile&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;exampleNumber&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 412345678&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-setting-up-with-carthage" class="anchor" aria-hidden="true" href="#setting-up-with-carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up with Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that automates the process of adding frameworks to your Cocoa application.&lt;/p&gt;
&lt;p&gt;You can install Carthage with &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate PhoneNumberKit into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "marmelroy/PhoneNumberKit"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-setting-up-with-cocoapods" class="anchor" aria-hidden="true" href="#setting-up-with-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up with &lt;a href="http://cocoapods.org/?q=PhoneNumberKit" rel="nofollow"&gt;CocoaPods&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;PhoneNumberKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 3.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>marmelroy</author><guid isPermaLink="false">https://github.com/marmelroy/PhoneNumberKit</guid><pubDate>Sat, 21 Dec 2019 00:10:00 GMT</pubDate></item><item><title>Cuberto/liquid-swipe #11 in Swift, Today</title><link>https://github.com/Cuberto/liquid-swipe</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cubertos-development-lab" class="anchor" aria-hidden="true" href="#cubertos-development-lab"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cuberto's development lab:&lt;/h1&gt;
&lt;p&gt;Cuberto is a leading digital agency with solid design and development expertise. We build mobile and web products for startups. Drop us a line.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-liquid-swipe" class="anchor" aria-hidden="true" href="#liquid-swipe"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;liquid-swipe&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Cuberto/liquid-swipe/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c0e54a826d90da52e4ee70c63fef3ee61b3ffbd5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d6c69676874677265792e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-MIT-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/liquid-swipe" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ac42e172cc022bd94c9099ca520ab7bfe9a54ea/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f6c69717569642d73776970652e737667" alt="CocoaPods" data-canonical-src="https://img.shields.io/cocoapods/v/liquid-swipe.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b994edcafe57565f07286f5a876df7a0cbc7fccd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d342e322d677265656e2e7376673f7374796c653d666c6174" alt="Swift 4.2" data-canonical-src="https://img.shields.io/badge/Swift-4.2-green.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/Cuberto/liquid-swipe/master/Screenshots/animation.gif"&gt;&lt;img src="https://raw.githubusercontent.com/Cuberto/liquid-swipe/master/Screenshots/animation.gif" alt="Animation" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;To run the example project, clone the repo, and run &lt;code&gt;pod install&lt;/code&gt; from the Example directory first.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 9.3+&lt;/li&gt;
&lt;li&gt;Xcode 10&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;liquid-swipe is available through &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;. To install
it, simply add the following line to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;liquid-swipe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Instantiate &lt;code&gt;LiquidSwipeContainerController&lt;/code&gt; from storyboard or from code and set properly configured datasource
The data source for a  controller is responsible for providing the content view controllers on demand and must conform to the &lt;code&gt;LiquidSwipeContainerDataSource&lt;/code&gt;
Container delegate can be used for monitoring conent changes&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;Cuberto Design, &lt;a href="mailto:info@cuberto.com"&gt;info@cuberto.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;liquid-swipe is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Cuberto</author><guid isPermaLink="false">https://github.com/Cuberto/liquid-swipe</guid><pubDate>Sat, 21 Dec 2019 00:11:00 GMT</pubDate></item><item><title>realm/SwiftLint #12 in Swift, Today</title><link>https://github.com/realm/SwiftLint</link><description>&lt;p&gt;&lt;i&gt;A tool to enforce Swift style and conventions.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftlint" class="anchor" aria-hidden="true" href="#swiftlint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftLint&lt;/h1&gt;
&lt;p&gt;A tool to enforce Swift style and conventions, loosely based on
&lt;a href="https://github.com/github/swift-style-guide"&gt;GitHub's Swift Style Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;SwiftLint hooks into &lt;a href="http://clang.llvm.org" rel="nofollow"&gt;Clang&lt;/a&gt; and
&lt;a href="http://www.jpsim.com/uncovering-sourcekit" rel="nofollow"&gt;SourceKit&lt;/a&gt; to use the
&lt;a href="http://clang.llvm.org/docs/IntroductionToTheClangAST.html" rel="nofollow"&gt;AST&lt;/a&gt; representation
of your source files for more accurate results.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/jpsim/SwiftLint/_build/latest?definitionId=4?branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9a0296a6379b15a4bb08a821efade137d0837d36/68747470733a2f2f6465762e617a7572652e636f6d2f6a7073696d2f53776966744c696e742f5f617069732f6275696c642f7374617475732f7265616c6d2e53776966744c696e743f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/jpsim/SwiftLint/_apis/build/status/realm.SwiftLint?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/realm/SwiftLint?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c86f87b309c2e2ed94c56663ab18ce4096d1cd7f/68747470733a2f2f636f6465636f762e696f2f6769746875622f7265616c6d2f53776966744c696e742f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/realm/SwiftLint/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/screenshot.png"&gt;&lt;img src="assets/screenshot.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project adheres to the &lt;a href="https://realm.io/conduct" rel="nofollow"&gt;Contributor Covenant Code of Conduct&lt;/a&gt;.
By participating, you are expected to uphold this code. Please report
unacceptable behavior to &lt;a href="mailto:info@realm.io"&gt;info@realm.io&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Language Switch: &lt;a href="https://github.com/realm/SwiftLint/blob/master/README_CN.md"&gt;中文&lt;/a&gt;, &lt;a href="https://github.com/realm/SwiftLint/blob/master/README_KR.md"&gt;한국어&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-using-homebrew" class="anchor" aria-hidden="true" href="#using-homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;brew install swiftlint
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-using-cocoapods" class="anchor" aria-hidden="true" href="#using-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;:&lt;/h3&gt;
&lt;p&gt;Simply add the following line to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwiftLint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will download the SwiftLint binaries and dependencies in &lt;code&gt;Pods/&lt;/code&gt; during your next
&lt;code&gt;pod install&lt;/code&gt; execution and will allow you to invoke it via &lt;code&gt;${PODS_ROOT}/SwiftLint/swiftlint&lt;/code&gt;
in your Script Build Phases.&lt;/p&gt;
&lt;p&gt;This is the recommended way to install a specific version of SwiftLint since it supports
installing a pinned version rather than simply the latest (which is the case with Homebrew).&lt;/p&gt;
&lt;p&gt;Note that this will add the SwiftLint binaries, its dependencies' binaries and the Swift binary
library distribution to the &lt;code&gt;Pods/&lt;/code&gt; directory, so checking in this directory to SCM such as
git is discouraged.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-mint" class="anchor" aria-hidden="true" href="#using-mint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://github.com/yonaskolb/mint"&gt;Mint&lt;/a&gt;:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ mint install realm/SwiftLint
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-using-a-pre-built-package" class="anchor" aria-hidden="true" href="#using-a-pre-built-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using a pre-built package:&lt;/h3&gt;
&lt;p&gt;You can also install SwiftLint by downloading &lt;code&gt;SwiftLint.pkg&lt;/code&gt; from the
&lt;a href="https://github.com/realm/SwiftLint/releases/latest"&gt;latest GitHub release&lt;/a&gt; and
running it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compiling-from-source" class="anchor" aria-hidden="true" href="#compiling-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling from source:&lt;/h3&gt;
&lt;p&gt;You can also build from source by cloning this project and running
&lt;code&gt;git submodule update --init --recursive; make install&lt;/code&gt; (Xcode 10.2 or later).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-known-installation-issues-on-macos-before-10144" class="anchor" aria-hidden="true" href="#known-installation-issues-on-macos-before-10144"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Installation Issues On MacOS Before 10.14.4&lt;/h3&gt;
&lt;p&gt;Starting with &lt;a href="https://github.com/realm/SwiftLint/releases/tag/0.32.0"&gt;SwiftLint 0.32.0&lt;/a&gt;, if you get
an error similar to &lt;code&gt;dyld: Symbol not found: _$s11SubSequenceSlTl&lt;/code&gt; when running SwiftLint,
you'll need to install the &lt;a href="https://support.apple.com/kb/DL1998" rel="nofollow"&gt;Swift 5 Runtime Support for Command Line Tools&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update to macOS 10.14.4 or later&lt;/li&gt;
&lt;li&gt;Install Xcode 10.2 or later at &lt;code&gt;/Applications/Xcode.app&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rebuild SwiftLint from source using Xcode 10.2 or later&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-presentation" class="anchor" aria-hidden="true" href="#presentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presentation&lt;/h3&gt;
&lt;p&gt;To get a high-level overview of recommended ways to integrate SwiftLint into your project,
we encourage you to watch this presentation or read the transcript:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://academy.realm.io/posts/slug-jp-simard-swiftlint/" rel="nofollow"&gt;&lt;img src="assets/presentation.svg" alt="Presentation" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h3&gt;
&lt;p&gt;Integrate SwiftLint into an Xcode scheme to get warnings and errors displayed
in the IDE. Just add a new "Run Script Phase" with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; which swiftlint &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;/dev/null&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
  swiftlint
&lt;span class="pl-k"&gt;else&lt;/span&gt;
  &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/runscript.png"&gt;&lt;img src="assets/runscript.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, if you've installed SwiftLint via CocoaPods the script should look like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;${PODS_ROOT}&lt;/span&gt;/SwiftLint/swiftlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-format-on-save-xcode-plugin" class="anchor" aria-hidden="true" href="#format-on-save-xcode-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Format on Save Xcode Plugin&lt;/h4&gt;
&lt;p&gt;To run &lt;code&gt;swiftlint autocorrect&lt;/code&gt; on save in Xcode, install the
&lt;a href="https://github.com/ypresto/SwiftLintXcode"&gt;SwiftLintXcode&lt;/a&gt; plugin from Alcatraz.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;This plugin will not work with Xcode 8 or later without disabling SIP.
This is not recommended.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-appcode" class="anchor" aria-hidden="true" href="#appcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AppCode&lt;/h3&gt;
&lt;p&gt;To integrate SwiftLint with AppCode, install
&lt;a href="https://plugins.jetbrains.com/plugin/9175" rel="nofollow"&gt;this plugin&lt;/a&gt; and configure
SwiftLint's installed path in the plugin's preferences.
The &lt;code&gt;autocorrect&lt;/code&gt; action is available via &lt;code&gt;⌥⏎&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-atom" class="anchor" aria-hidden="true" href="#atom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Atom&lt;/h3&gt;
&lt;p&gt;To integrate SwiftLint with &lt;a href="https://atom.io/" rel="nofollow"&gt;Atom&lt;/a&gt;, install the
&lt;a href="https://atom.io/packages/linter-swiftlint" rel="nofollow"&gt;&lt;code&gt;linter-swiftlint&lt;/code&gt;&lt;/a&gt; package from
APM.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fastlane" class="anchor" aria-hidden="true" href="#fastlane"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fastlane&lt;/h3&gt;
&lt;p&gt;You can use the &lt;a href="https://docs.fastlane.tools/actions/swiftlint" rel="nofollow"&gt;official swiftlint fastlane action&lt;/a&gt; to run SwiftLint as part of your fastlane process.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;swiftlint(
    &lt;span class="pl-c1"&gt;mode:&lt;/span&gt; &lt;span class="pl-c1"&gt;:lint&lt;/span&gt;,                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; SwiftLint mode: :lint (default) or :autocorrect&lt;/span&gt;
    &lt;span class="pl-c1"&gt;executable:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pods/SwiftLint/swiftlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The SwiftLint binary path (optional). Important if you've installed it via CocoaPods&lt;/span&gt;
    &lt;span class="pl-c1"&gt;path:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/lint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Specify path to lint (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;output_file:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;swiftlint.result.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The path of the output file (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;reporter:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The custom reporter to use (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;config_file:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.swiftlint-ci.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The path of the configuration file (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;files:&lt;/span&gt; [                                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; List of files to process (optional)&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AppDelegate.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;path/to/project/Model.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    ],
    &lt;span class="pl-c1"&gt;ignore_exit_status:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Allow fastlane to continue even if SwiftLint returns a non-zero exit status (Default: false)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;quiet:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Don't print status logs like 'Linting ' &amp;amp; 'Done linting' (Default: false)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;strict:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fail on warnings? (Default: false)&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ swiftlint help
Available commands:

   analyze         [Experimental] Run analysis rules
   autocorrect     Automatically correct warnings and errors
   generate-docs   Generates markdown documentation for all rules
   help            Display general or command-specific help
   lint            Print lint warnings and errors (default command)
   rules           Display the list of rules and their identifiers
   version         Display the current version of SwiftLint
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run &lt;code&gt;swiftlint&lt;/code&gt; in the directory containing the Swift files to lint. Directories
will be searched recursively.&lt;/p&gt;
&lt;p&gt;To specify a list of files when using &lt;code&gt;lint&lt;/code&gt;, &lt;code&gt;autocorrect&lt;/code&gt; or &lt;code&gt;analyze&lt;/code&gt;
(like the list of files modified by Xcode specified by the
&lt;a href="https://github.com/norio-nomura/ExtraBuildPhase"&gt;&lt;code&gt;ExtraBuildPhase&lt;/code&gt;&lt;/a&gt; Xcode
plugin, or modified files in the working tree based on &lt;code&gt;git ls-files -m&lt;/code&gt;), you
can do so by passing the option &lt;code&gt;--use-script-input-files&lt;/code&gt; and setting the
following instance variables: &lt;code&gt;SCRIPT_INPUT_FILE_COUNT&lt;/code&gt; and
&lt;code&gt;SCRIPT_INPUT_FILE_0&lt;/code&gt;, &lt;code&gt;SCRIPT_INPUT_FILE_1&lt;/code&gt;...&lt;code&gt;SCRIPT_INPUT_FILE_{SCRIPT_INPUT_FILE_COUNT}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These are same environment variables set for input files to
&lt;a href="http://indiestack.com/2014/12/speeding-up-custom-script-phases/" rel="nofollow"&gt;custom Xcode script phases&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-working-with-multiple-swift-versions" class="anchor" aria-hidden="true" href="#working-with-multiple-swift-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working With Multiple Swift Versions&lt;/h3&gt;
&lt;p&gt;SwiftLint hooks into SourceKit so it continues working even as Swift evolves!&lt;/p&gt;
&lt;p&gt;This also keeps SwiftLint lean, as it doesn't need to ship with a full Swift
compiler, it just communicates with the official one you already have installed
on your machine.&lt;/p&gt;
&lt;p&gt;You should always run SwiftLint with the same toolchain you use to compile your
code.&lt;/p&gt;
&lt;p&gt;You may want to override SwiftLint's default Swift toolchain if you have
multiple toolchains or Xcodes installed.&lt;/p&gt;
&lt;p&gt;Here's the order in which SwiftLint determines which Swift toolchain to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$XCODE_DEFAULT_TOOLCHAIN_OVERRIDE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$TOOLCHAIN_DIR&lt;/code&gt; or &lt;code&gt;$TOOLCHAINS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xcrun -find swift&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;sourcekitd.framework&lt;/code&gt; is expected to be found in the &lt;code&gt;usr/lib/&lt;/code&gt; subdirectory of
the value passed in the paths above.&lt;/p&gt;
&lt;p&gt;You may also set the &lt;code&gt;TOOLCHAINS&lt;/code&gt; environment variable to the reverse-DNS
notation that identifies a Swift toolchain version:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ TOOLCHAINS=com.apple.dt.toolchain.Swift_2_3 swiftlint autocorrect&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Linux, SourceKit is expected to be located in
&lt;code&gt;/usr/lib/libsourcekitdInProc.so&lt;/code&gt; or specified by the &lt;code&gt;LINUX_SOURCEKIT_LIB_PATH&lt;/code&gt;
environment variable.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-version-support" class="anchor" aria-hidden="true" href="#swift-version-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Version Support&lt;/h3&gt;
&lt;p&gt;Here's a reference of which SwiftLint version to use for a given Swift version.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Swift version&lt;/th&gt;
&lt;th align="left"&gt;Last supported SwiftLint release&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 1.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.1.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 2.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.18.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 3.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.25.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 4.0-4.1.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.28.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 4.2.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.35.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 5.x&lt;/td&gt;
&lt;td align="left"&gt;Latest&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-rules" class="anchor" aria-hidden="true" href="#rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules&lt;/h2&gt;
&lt;p&gt;Over 75 rules are included in SwiftLint and the Swift community (that's you!)
continues to contribute more over time.
&lt;a href="CONTRIBUTING.md"&gt;Pull requests&lt;/a&gt; are encouraged.&lt;/p&gt;
&lt;p&gt;You can find an updated list of rules and more information about them
in &lt;a href="Rules.md"&gt;Rules.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also check &lt;a href="Source/SwiftLintFramework/Rules"&gt;Source/SwiftLintFramework/Rules&lt;/a&gt;
directory to see their implementation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-opt-in-rules" class="anchor" aria-hidden="true" href="#opt-in-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Opt-In Rules&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;opt_in_rules&lt;/code&gt; are disabled by default (i.e., you have to explicitly enable them
in your configuration file).&lt;/p&gt;
&lt;p&gt;Guidelines on when to mark a rule as opt-in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A rule that can have many false positives (e.g. &lt;code&gt;empty_count&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;A rule that is too slow&lt;/li&gt;
&lt;li&gt;A rule that is not general consensus or is only useful in some cases
(e.g. &lt;code&gt;force_unwrapping&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disable-rules-in-code" class="anchor" aria-hidden="true" href="#disable-rules-in-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disable rules in code&lt;/h3&gt;
&lt;p&gt;Rules can be disabled with a comment inside a source file with the following
format:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:disable &amp;lt;rule1&amp;gt; [&amp;lt;rule2&amp;gt; &amp;lt;rule3&amp;gt;...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The rules will be disabled until the end of the file or until the linter sees a
matching enable comment:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:enable &amp;lt;rule1&amp;gt; [&amp;lt;rule2&amp;gt; &amp;lt;rule3&amp;gt;...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable colon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No warning about colons immediately after variable names!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:enable colon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about colons immediately after variable names&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Including the &lt;code&gt;all&lt;/code&gt; keyword will disable all rules until the linter sees a matching enable comment:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:disable all&lt;/code&gt;
&lt;code&gt;// swiftlint:enable all&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No warning about colons immediately after variable names!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Also no warning about short identifier names&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:enable all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about colons immediately after variable names&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; y &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about short identifier names&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's also possible to modify a &lt;code&gt;disable&lt;/code&gt; or &lt;code&gt;enable&lt;/code&gt; command by appending
&lt;code&gt;:previous&lt;/code&gt;, &lt;code&gt;:this&lt;/code&gt; or &lt;code&gt;:next&lt;/code&gt; for only applying the command to the previous,
this (current) or next line respectively.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:next force_cast&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:this force_cast&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning3 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:previous force_cast&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;swiftlint rules&lt;/code&gt; to print a list of all available rules and their
identifiers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h3&gt;
&lt;p&gt;Configure SwiftLint by adding a &lt;code&gt;.swiftlint.yml&lt;/code&gt; file from the directory you'll
run SwiftLint from. The following parameters can be configured:&lt;/p&gt;
&lt;p&gt;Rule inclusion:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;disabled_rules&lt;/code&gt;: Disable rules from the default enabled set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opt_in_rules&lt;/code&gt;: Enable rules not from the default set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whitelist_rules&lt;/code&gt;: Acts as a whitelist, only the rules specified in this list
will be enabled. Can not be specified alongside &lt;code&gt;disabled_rules&lt;/code&gt; or
&lt;code&gt;opt_in_rules&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;analyzer_rules&lt;/code&gt;: This is an entirely separate list of rules that are only
run by the &lt;code&gt;analyze&lt;/code&gt; command. All analyzer rules are opt-in, so this is the
only configurable rule list (there is no disabled/whitelist equivalent).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;disabled_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule identifiers to exclude from running&lt;/span&gt;
  - &lt;span class="pl-s"&gt;colon&lt;/span&gt;
  - &lt;span class="pl-s"&gt;comma&lt;/span&gt;
  - &lt;span class="pl-s"&gt;control_statement&lt;/span&gt;
&lt;span class="pl-ent"&gt;opt_in_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; some rules are only opt-in&lt;/span&gt;
  - &lt;span class="pl-s"&gt;empty_count&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Find all the available rules by running:&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; swiftlint rules&lt;/span&gt;
&lt;span class="pl-ent"&gt;included&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; paths to include during linting. `--path` is ignored if present.&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source&lt;/span&gt;
&lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; paths to ignore during linting. Takes precedence over `included`.&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Carthage&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Pods&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/ExcludedFolder&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/ExcludedFile.swift&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/*/ExcludedFile.swift &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Exclude files with a wildcard&lt;/span&gt;
&lt;span class="pl-ent"&gt;analyzer_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Rules run by `swiftlint analyze` (experimental)&lt;/span&gt;
  - &lt;span class="pl-s"&gt;explicit_self&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; configurable rules can be customized from this configuration file&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; binary rules can set their severity level&lt;/span&gt;
&lt;span class="pl-ent"&gt;force_cast&lt;/span&gt;: &lt;span class="pl-s"&gt;warning &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; implicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;force_try&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;severity&lt;/span&gt;: &lt;span class="pl-s"&gt;warning &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; explicitly&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rules that have both warning and error levels, can set just the warning level&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; implicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;line_length&lt;/span&gt;: &lt;span class="pl-c1"&gt;110&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; they can set both implicitly with an array&lt;/span&gt;
&lt;span class="pl-ent"&gt;type_body_length&lt;/span&gt;:
  - &lt;span class="pl-c1"&gt;300&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; warning&lt;/span&gt;
  - &lt;span class="pl-c1"&gt;400&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or they can set both explicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;file_length&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;warning&lt;/span&gt;: &lt;span class="pl-c1"&gt;500&lt;/span&gt;
  &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;1200&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; naming rules can set warnings/errors for min_length and max_length&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; additionally they can set excluded names&lt;/span&gt;
&lt;span class="pl-ent"&gt;type_name&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;min_length&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only warning&lt;/span&gt;
  &lt;span class="pl-ent"&gt;max_length&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; warning and error&lt;/span&gt;
    &lt;span class="pl-ent"&gt;warning&lt;/span&gt;: &lt;span class="pl-c1"&gt;40&lt;/span&gt;
    &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;50&lt;/span&gt;
  &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-s"&gt;iPhone &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; excluded via string&lt;/span&gt;
  &lt;span class="pl-ent"&gt;allowed_symbols&lt;/span&gt;: &lt;span class="pl-s"&gt;["_"] &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; these are allowed in type names&lt;/span&gt;
&lt;span class="pl-ent"&gt;identifier_name&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;min_length&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only min_length&lt;/span&gt;
    &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only error&lt;/span&gt;
  &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; excluded via string array&lt;/span&gt;
    - &lt;span class="pl-s"&gt;id&lt;/span&gt;
    - &lt;span class="pl-s"&gt;URL&lt;/span&gt;
    - &lt;span class="pl-s"&gt;GlobalAPIKey&lt;/span&gt;
&lt;span class="pl-ent"&gt;reporter&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;xcode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use environment variables in your configuration file,
by using &lt;code&gt;${SOME_VARIABLE}&lt;/code&gt; in a string.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-defining-custom-rules" class="anchor" aria-hidden="true" href="#defining-custom-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining Custom Rules&lt;/h4&gt;
&lt;p&gt;You can define custom regex-based rules in your configuration file using the
following syntax:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;custom_rules&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;pirates_beat_ninjas&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule identifier&lt;/span&gt;
    &lt;span class="pl-ent"&gt;included&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.*&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; regex that defines paths to include during linting. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.*Test&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; regex that defines paths to exclude during linting. optional&lt;/span&gt;
    &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pirates Beat Ninjas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule name. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;regex&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([n,N]inja)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; matching pattern&lt;/span&gt;
    &lt;span class="pl-ent"&gt;match_kinds&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; SyntaxKinds to match. optional.&lt;/span&gt;
      - &lt;span class="pl-s"&gt;comment&lt;/span&gt;
      - &lt;span class="pl-s"&gt;identifier&lt;/span&gt;
    &lt;span class="pl-ent"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pirates are better than ninjas.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; violation message. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;severity&lt;/span&gt;: &lt;span class="pl-s"&gt;error &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; violation severity. optional.&lt;/span&gt;
  &lt;span class="pl-ent"&gt;no_hiding_in_strings&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;regex&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([n,N]inja)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-ent"&gt;match_kinds&lt;/span&gt;: &lt;span class="pl-s"&gt;string&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is what the output would look like:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/custom-rule.png"&gt;&lt;img src="assets/custom-rule.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can filter the matches by providing one or more &lt;code&gt;match_kinds&lt;/code&gt;, which will
reject matches that include syntax kinds that are not present in this list. Here
are all the possible syntax kinds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;argument&lt;/li&gt;
&lt;li&gt;attribute.builtin&lt;/li&gt;
&lt;li&gt;attribute.id&lt;/li&gt;
&lt;li&gt;buildconfig.id&lt;/li&gt;
&lt;li&gt;buildconfig.keyword&lt;/li&gt;
&lt;li&gt;comment&lt;/li&gt;
&lt;li&gt;comment.mark&lt;/li&gt;
&lt;li&gt;comment.url&lt;/li&gt;
&lt;li&gt;doccomment&lt;/li&gt;
&lt;li&gt;doccomment.field&lt;/li&gt;
&lt;li&gt;identifier&lt;/li&gt;
&lt;li&gt;keyword&lt;/li&gt;
&lt;li&gt;number&lt;/li&gt;
&lt;li&gt;objectliteral&lt;/li&gt;
&lt;li&gt;parameter&lt;/li&gt;
&lt;li&gt;placeholder&lt;/li&gt;
&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;string_interpolation_anchor&lt;/li&gt;
&lt;li&gt;typeidentifier&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If using custom rules alongside a whitelist, make sure to add &lt;code&gt;custom_rules&lt;/code&gt; as an item under &lt;code&gt;whitelist_rules&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-nested-configurations" class="anchor" aria-hidden="true" href="#nested-configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nested Configurations&lt;/h4&gt;
&lt;p&gt;SwiftLint supports nesting configuration files for more granular control over
the linting process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Include additional &lt;code&gt;.swiftlint.yml&lt;/code&gt; files where necessary in your directory
structure.&lt;/li&gt;
&lt;li&gt;Each file will be linted using the configuration file that is in its
directory or at the deepest level of its parent directories. Otherwise the
root configuration will be used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;included&lt;/code&gt; is ignored for nested configurations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-auto-correct" class="anchor" aria-hidden="true" href="#auto-correct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto-correct&lt;/h3&gt;
&lt;p&gt;SwiftLint can automatically correct certain violations. Files on disk are
overwritten with a corrected version.&lt;/p&gt;
&lt;p&gt;Please make sure to have backups of these files before running
&lt;code&gt;swiftlint autocorrect&lt;/code&gt;, otherwise important data may be lost.&lt;/p&gt;
&lt;p&gt;Standard linting is disabled while correcting because of the high likelihood of
violations (or their offsets) being incorrect after modifying a file while
applying corrections.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-analyze-experimental" class="anchor" aria-hidden="true" href="#analyze-experimental"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Analyze (experimental)&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;experimental&lt;/em&gt; &lt;code&gt;swiftlint analyze&lt;/code&gt; command can lint Swift files using the
full type-checked AST. The compiler log path containing the clean &lt;code&gt;swiftc&lt;/code&gt; build
command invocation (incremental builds will fail) must be passed to &lt;code&gt;analyze&lt;/code&gt;
via the &lt;code&gt;--compiler-log-path&lt;/code&gt; flag.
e.g. &lt;code&gt;--compiler-log-path /path/to/xcodebuild.log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This can be obtained by running
&lt;code&gt;xcodebuild -workspace {WORKSPACE}.xcworkspace -scheme {SCHEME} &amp;gt; xcodebuild.log&lt;/code&gt;
with a clean &lt;code&gt;DerivedData&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;This command and related code in SwiftLint is subject to substantial changes at
any time while this feature is marked as experimental. Analyzer rules also tend
to be considerably slower than lint rules.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;MIT licensed.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/realm.png"&gt;&lt;img src="assets/realm.png" width="184" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SwiftLint is maintained and funded by Realm Inc. The names and logos for
Realm are trademarks of Realm Inc.&lt;/p&gt;
&lt;p&gt;We &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; open source software!
See &lt;a href="https://github.com/realm"&gt;our other open source projects&lt;/a&gt;,
read &lt;a href="https://realm.io/news" rel="nofollow"&gt;our blog&lt;/a&gt;, or say hi on twitter
(&lt;a href="https://twitter.com/realm" rel="nofollow"&gt;@realm&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/macstadium.png"&gt;&lt;img src="assets/macstadium.png" width="184" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our thanks to MacStadium for providing a Mac Mini to run our performance
tests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>realm</author><guid isPermaLink="false">https://github.com/realm/SwiftLint</guid><pubDate>Sat, 21 Dec 2019 00:12:00 GMT</pubDate></item><item><title>sergdort/CleanArchitectureRxSwift #13 in Swift, Today</title><link>https://github.com/sergdort/CleanArchitectureRxSwift</link><description>&lt;p&gt;&lt;i&gt;Example of Clean Architecture of iOS app using RxSwift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-clean-architecture-with-rxswift" class="anchor" aria-hidden="true" href="#clean-architecture-with-rxswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clean architecture with &lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-contributions-are-welcome-and-highly-appreciated" class="anchor" aria-hidden="true" href="#contributions-are-welcome-and-highly-appreciated"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions are welcome and highly appreciated!!&lt;/h2&gt;
&lt;p&gt;You can do this by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;opening an issue to discuss the current solution, ask a question, propose your solution etc. (also English is not my native language so if you think that something can be corrected please open a PR &lt;g-emoji class="g-emoji" alias="blush" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png"&gt;😊&lt;/g-emoji&gt;)&lt;/li&gt;
&lt;li&gt;opening a PR if you want to fix bugs or improve something&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-instalation" class="anchor" aria-hidden="true" href="#instalation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instalation&lt;/h3&gt;
&lt;p&gt;Dependencies in this project are provided via Cocoapods. Please install all dependecies with&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pod install&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-high-level-overview" class="anchor" aria-hidden="true" href="#high-level-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;High level overview&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Architecture/Modules.png"&gt;&lt;img src="Architecture/Modules.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-domain" class="anchor" aria-hidden="true" href="#domain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Domain&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;Domain&lt;/code&gt; is basically what is your App about and what it can do (Entities, UseCase etc.) &lt;strong&gt;It does not depend on UIKit or any persistence framework&lt;/strong&gt;, and it doesn't have implementations apart from entities&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-platform" class="anchor" aria-hidden="true" href="#platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platform&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;Platform&lt;/code&gt; is a concrete implementation of the &lt;code&gt;Domain&lt;/code&gt; in a specific platform like iOS. It does hide all implementation details. For example Database implementation whether it is CoreData, Realm, SQLite etc.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-application" class="anchor" aria-hidden="true" href="#application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Application&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Application&lt;/code&gt; is responsible for delivering information to the user and handling user input. It can be implemented with any delivery pattern e.g (MVVM, MVC, MVP). This is the place for your &lt;code&gt;UIView&lt;/code&gt;s and &lt;code&gt;UIViewController&lt;/code&gt;s. As you will see from the example app, &lt;code&gt;ViewControllers&lt;/code&gt; are completely independent of the &lt;code&gt;Platform&lt;/code&gt;.  The only responsibility of a view controller is to "bind" the UI to the Domain to make things happen. In fact, in the current example we are using the same view controller for Realm and CoreData.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-detail-overview" class="anchor" aria-hidden="true" href="#detail-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Detail overview&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Architecture/ModulesDetails.png"&gt;&lt;img src="Architecture/ModulesDetails.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To enforce modularity, &lt;code&gt;Domain&lt;/code&gt;, &lt;code&gt;Platform&lt;/code&gt; and &lt;code&gt;Application&lt;/code&gt; are separate targets in the App, which allows us to take advantage of the &lt;code&gt;internal&lt;/code&gt; access layer in Swift to prevent exposing of types that we don't want to expose.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-domain-1" class="anchor" aria-hidden="true" href="#domain-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Domain&lt;/h4&gt;
&lt;p&gt;Entities are implemented as Swift value types&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Post&lt;/span&gt; {
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; uid&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; createDate&lt;span class="pl-k"&gt;:&lt;/span&gt; Date
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; updateDate&lt;span class="pl-k"&gt;:&lt;/span&gt; Date
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; content&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;UseCases are protocols which do one specific thing:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;PostsUseCase&lt;/span&gt; {
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;posts&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Observable&amp;lt;[Post]&amp;gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;save&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;post&lt;/span&gt;&lt;/span&gt;: Post) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Observable&amp;lt;&lt;span class="pl-c1"&gt;Void&lt;/span&gt;&amp;gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;UseCaseProvider&lt;/code&gt; is a &lt;a href="https://en.wikipedia.org/wiki/Service_locator_pattern" rel="nofollow"&gt;service locator&lt;/a&gt;.  In the current example, it helps to hide the concrete implementation of use cases.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-platform-1" class="anchor" aria-hidden="true" href="#platform-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platform&lt;/h4&gt;
&lt;p&gt;In some cases, we can't use Swift structs for our domain objects because of DB framework requirements (e.g. CoreData, Realm).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;final&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CDPost&lt;/span&gt;: &lt;span class="pl-e"&gt;NSManagedObject &lt;/span&gt;{
    &lt;span class="pl-k"&gt;@NSManaged&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; uid&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;@NSManaged&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;@NSManaged&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; content&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;@NSManaged&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; createDate&lt;span class="pl-k"&gt;:&lt;/span&gt; NSDate&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;@NSManaged&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; updateDate&lt;span class="pl-k"&gt;:&lt;/span&gt; NSDate&lt;span class="pl-k"&gt;?&lt;/span&gt;
}

&lt;span class="pl-k"&gt;final&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;RMPost&lt;/span&gt;: &lt;span class="pl-e"&gt;Object &lt;/span&gt;{
    &lt;span class="pl-k"&gt;dynamic&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; uid&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;dynamic&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; createDate&lt;span class="pl-k"&gt;:&lt;/span&gt; NSDate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSDate&lt;/span&gt;()
    &lt;span class="pl-k"&gt;dynamic&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; updateDate&lt;span class="pl-k"&gt;:&lt;/span&gt; NSDate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSDate&lt;/span&gt;()
    &lt;span class="pl-k"&gt;dynamic&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;dynamic&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; content&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;Platform&lt;/code&gt; also contains concrete implementations of your use cases, repositories or any services that are defined in the &lt;code&gt;Domain&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;final&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PostsUseCase&lt;/span&gt;: &lt;span class="pl-e"&gt;Domain&lt;/span&gt;.&lt;span class="pl-e"&gt;PostsUseCase &lt;/span&gt;{
    
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; repository&lt;span class="pl-k"&gt;:&lt;/span&gt; AbstractRepository&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Post&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;repository&lt;/span&gt;&lt;/span&gt;: AbstractRepository&amp;lt;Post&amp;gt;) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;repository&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; repository
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;posts&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Observable&amp;lt;[Post]&amp;gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; repository.&lt;span class="pl-c1"&gt;query&lt;/span&gt;(&lt;span class="pl-c1"&gt;sortDescriptors&lt;/span&gt;: [Post.&lt;span class="pl-smi"&gt;CoreDataType&lt;/span&gt;.&lt;span class="pl-smi"&gt;uid&lt;/span&gt;.&lt;span class="pl-c1"&gt;descending&lt;/span&gt;()])
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;save&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;post&lt;/span&gt;&lt;/span&gt;: Post) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Observable&amp;lt;&lt;span class="pl-c1"&gt;Void&lt;/span&gt;&amp;gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; repository.&lt;span class="pl-c1"&gt;save&lt;/span&gt;(&lt;span class="pl-c1"&gt;entity&lt;/span&gt;: post)
    }
}

&lt;span class="pl-k"&gt;final&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Repository&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreDataRepresentable&lt;/span&gt;&amp;gt;: &lt;span class="pl-e"&gt;AbstractRepository&amp;lt;T&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;where&lt;/span&gt; T &lt;span class="pl-k"&gt;==&lt;/span&gt; T.CoreDataType.DomainType {
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; context&lt;span class="pl-k"&gt;:&lt;/span&gt; NSManagedObjectContext
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; scheduler&lt;span class="pl-k"&gt;:&lt;/span&gt; ContextScheduler

    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;context&lt;/span&gt;&lt;/span&gt;: NSManagedObjectContext) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;context&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; context
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ContextScheduler&lt;/span&gt;(&lt;span class="pl-c1"&gt;context&lt;/span&gt;: context)
    }

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;query&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;predicate&lt;/span&gt;: NSPredicate&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;,
                        &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;sortDescriptors&lt;/span&gt;&lt;/span&gt;: [NSSortDescriptor]&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Observable&amp;lt;[T]&amp;gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; T.&lt;span class="pl-smi"&gt;CoreDataType&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchRequest&lt;/span&gt;()
        request.&lt;span class="pl-smi"&gt;predicate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; predicate
        request.&lt;span class="pl-smi"&gt;sortDescriptors&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; sortDescriptors
        &lt;span class="pl-k"&gt;return&lt;/span&gt; context.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;entities&lt;/span&gt;(&lt;span class="pl-c1"&gt;fetchRequest&lt;/span&gt;: request)
            .&lt;span class="pl-c1"&gt;mapToDomain&lt;/span&gt;()
            .&lt;span class="pl-c1"&gt;subscribeOn&lt;/span&gt;(scheduler)
    }

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;save&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;entity&lt;/span&gt;&lt;/span&gt;: T) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Observable&amp;lt;&lt;span class="pl-c1"&gt;Void&lt;/span&gt;&amp;gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; entity.&lt;span class="pl-c1"&gt;sync&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: context)
            .&lt;span class="pl-c1"&gt;mapToVoid&lt;/span&gt;()
            .&lt;span class="pl-c1"&gt;flatMapLatest&lt;/span&gt;(context.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-smi"&gt;save&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;subscribeOn&lt;/span&gt;(scheduler)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, concrete implementations are internal, because we don't want to expose our dependecies. The only thing that is exposed in the current example from the &lt;code&gt;Platform&lt;/code&gt; is a concrete implementation of the &lt;code&gt;UseCaseProvider&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;final&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;UseCaseProvider&lt;/span&gt;: &lt;span class="pl-e"&gt;Domain&lt;/span&gt;.&lt;span class="pl-e"&gt;UseCaseProvider &lt;/span&gt;{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; coreDataStack &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CoreDataStack&lt;/span&gt;()
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; postRepository&lt;span class="pl-k"&gt;:&lt;/span&gt; Repository&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Post&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;() {
        postRepository &lt;span class="pl-k"&gt;=&lt;/span&gt; Repository&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Post&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;context&lt;/span&gt;: coreDataStack.&lt;span class="pl-smi"&gt;context&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;makePostsUseCase&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Domain.PostsUseCase {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PostsUseCase&lt;/span&gt;(&lt;span class="pl-c1"&gt;repository&lt;/span&gt;: postRepository)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-application-1" class="anchor" aria-hidden="true" href="#application-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Application&lt;/h4&gt;
&lt;p&gt;In the current example, &lt;code&gt;Application&lt;/code&gt; is implemented with the &lt;a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel" rel="nofollow"&gt;MVVM&lt;/a&gt; pattern and heavy use of &lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;, which makes binding very easy.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Architecture/MVVMPattern.png"&gt;&lt;img src="Architecture/MVVMPattern.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Where the &lt;code&gt;ViewModel&lt;/code&gt; performs pure transformation of a user &lt;code&gt;Input&lt;/code&gt; to the &lt;code&gt;Output&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;ViewModelType&lt;/span&gt; {
    &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;Input&lt;/span&gt;
    &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;Output&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;transform&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;input&lt;/span&gt;&lt;/span&gt;: Input) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Output
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;final&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PostsViewModel&lt;/span&gt;: &lt;span class="pl-e"&gt;ViewModelType &lt;/span&gt;{
    &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Input&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; trigger&lt;span class="pl-k"&gt;:&lt;/span&gt; Driver&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Void&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; createPostTrigger&lt;span class="pl-k"&gt;:&lt;/span&gt; Driver&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Void&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; selection&lt;span class="pl-k"&gt;:&lt;/span&gt; Driver&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;IndexPath&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Output&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; fetching&lt;span class="pl-k"&gt;:&lt;/span&gt; Driver&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Bool&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; posts&lt;span class="pl-k"&gt;:&lt;/span&gt; Driver&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;[Post]&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; createPost&lt;span class="pl-k"&gt;:&lt;/span&gt; Driver&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Void&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; selectedPost&lt;span class="pl-k"&gt;:&lt;/span&gt; Driver&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Post&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; error&lt;span class="pl-k"&gt;:&lt;/span&gt; Driver&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; useCase&lt;span class="pl-k"&gt;:&lt;/span&gt; AllPostsUseCase
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; navigator&lt;span class="pl-k"&gt;:&lt;/span&gt; PostsNavigator
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;useCase&lt;/span&gt;&lt;/span&gt;: AllPostsUseCase, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;navigator&lt;/span&gt;&lt;/span&gt;: PostsNavigator) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;useCase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; useCase
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;navigator&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; navigator
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;transform&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;input&lt;/span&gt;&lt;/span&gt;: Input) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Output {
       &lt;span class="pl-k"&gt;......&lt;/span&gt;
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A &lt;code&gt;ViewModel&lt;/code&gt; can be injected into a &lt;code&gt;ViewController&lt;/code&gt; via property injection or initializer. In the current example, this is done by &lt;code&gt;Navigator&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;PostsNavigator&lt;/span&gt; {
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;toCreatePost&lt;/span&gt;()
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;toPost&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;post&lt;/span&gt;: Post)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;toPosts&lt;/span&gt;()
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DefaultPostsNavigator&lt;/span&gt;: &lt;span class="pl-e"&gt;PostsNavigator &lt;/span&gt;{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; storyBoard&lt;span class="pl-k"&gt;:&lt;/span&gt; UIStoryboard
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; navigationController&lt;span class="pl-k"&gt;:&lt;/span&gt; UINavigationController
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; services&lt;span class="pl-k"&gt;:&lt;/span&gt; ServiceLocator
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;services&lt;/span&gt;&lt;/span&gt;: ServiceLocator,
         &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;navigationController&lt;/span&gt;&lt;/span&gt;: UINavigationController,
         &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;storyBoard&lt;/span&gt;&lt;/span&gt;: UIStoryboard) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;services&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; services
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;navigationController&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; navigationController
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;storyBoard&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; storyBoard
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;toPosts&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; vc &lt;span class="pl-k"&gt;=&lt;/span&gt; storyBoard.&lt;span class="pl-c1"&gt;instantiateViewController&lt;/span&gt;(&lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: PostsViewController.&lt;span class="pl-k"&gt;self&lt;/span&gt;)
        vc.&lt;span class="pl-smi"&gt;viewModel&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PostsViewModel&lt;/span&gt;(&lt;span class="pl-c1"&gt;useCase&lt;/span&gt;: services.&lt;span class="pl-c1"&gt;getAllPostsUseCase&lt;/span&gt;(),
                                      &lt;span class="pl-c1"&gt;navigator&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;)
        navigationController.&lt;span class="pl-c1"&gt;pushViewController&lt;/span&gt;(vc, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;....&lt;/span&gt;
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PostsViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController &lt;/span&gt;{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; disposeBag &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DisposeBag&lt;/span&gt;()
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; viewModel&lt;span class="pl-k"&gt;:&lt;/span&gt; PostsViewModel&lt;span class="pl-k"&gt;!&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h3&gt;
&lt;p&gt;The example app is Post/TODOs app which uses &lt;code&gt;Realm&lt;/code&gt;, &lt;code&gt;CoreData&lt;/code&gt; and &lt;code&gt;Network&lt;/code&gt; at the same time as a proof of concept that the &lt;code&gt;Application&lt;/code&gt; level is not dependant on the Platform level implementation details.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CoreData&lt;/th&gt;
&lt;th&gt;Realm&lt;/th&gt;
&lt;th&gt;Network&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Architecture/CoreData.gif"&gt;&lt;img src="Architecture/CoreData.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Architecture/Realm.gif"&gt;&lt;img src="Architecture/Realm.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Architecture/Network.gif"&gt;&lt;img src="Architecture/Network.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-modularization" class="anchor" aria-hidden="true" href="#modularization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modularization&lt;/h3&gt;
&lt;p&gt;The corner stone of &lt;strong&gt;Clean Architecture&lt;/strong&gt; is modularization, as you can hide implementation detail under &lt;code&gt;internal&lt;/code&gt; access layer. Further read of this topic &lt;a href="https://github.com/microfeatures/guidelines"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;add tests&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93presenter" rel="nofollow"&gt;MVP&lt;/a&gt; example&lt;/li&gt;
&lt;li&gt;&lt;a href="http://redux.js.org" rel="nofollow"&gt;Redux&lt;/a&gt; example??&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-links" class="anchor" aria-hidden="true" href="#links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://store.raywenderlich.com/products/rxswift" rel="nofollow"&gt;RxSwift Book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Nsjsiz2A9mg" rel="nofollow"&gt;Robert C Martin - Clean Architecture and Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cycle.js.org" rel="nofollow"&gt;Cycle.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@SergDort/viewmodel-in-rxswift-world-13d39faa2cf5#.qse37r6jw" rel="nofollow"&gt;ViewModel&lt;/a&gt; in Rx world&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-any-questions" class="anchor" aria-hidden="true" href="#any-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Any questions?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ping me on &lt;a href="https://twitter.com/SergDort" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>sergdort</author><guid isPermaLink="false">https://github.com/sergdort/CleanArchitectureRxSwift</guid><pubDate>Sat, 21 Dec 2019 00:13:00 GMT</pubDate></item><item><title>jonkykong/SideMenu #14 in Swift, Today</title><link>https://github.com/jonkykong/SideMenu</link><description>&lt;p&gt;&lt;i&gt;Simple side/slide menu control for iOS, no code necessary! Lots of customization. Add it to your project in 5 minutes or less.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--sidemenu" class="anchor" aria-hidden="true" href="#-sidemenu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;▤ SideMenu&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/jonkykong/SideMenu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ff6527970f9858d2e0c9225002cef4291310e41e/68747470733a2f2f636972636c6563692e636f6d2f67682f6a6f6e6b796b6f6e672f536964654d656e752e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/jonkykong/SideMenu.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/SideMenu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/76995976b159deaff5183d7a0b00ee4a762e55f3/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f536964654d656e752e7376673f7374796c653d666c61742d737175617265" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/SideMenu.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3192219757eff6dc3d9b5670d4afd942df1f9b65/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c61742d737175617265" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/SideMenu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e671bbe068c251af33647f7386bd3504483858c/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f536964654d656e752e7376673f7374796c653d666c61742d737175617265" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/SideMenu.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/SideMenu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a2f3bfbb817de6cc8c07ff50d09c86e6c1bbf9dd/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f536964654d656e752e7376673f7374796c653d666c61742d737175617265" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/SideMenu.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-if-you-like-sidemenu-give-it-a--at-the-top-right-of-this-page" class="anchor" aria-hidden="true" href="#if-you-like-sidemenu-give-it-a--at-the-top-right-of-this-page"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If you like SideMenu, give it a ★ at the top right of this page.&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sidemenu-needs-your-help-if-youre-a-skilled-ios-developer-and-want-to-help-maintain-this-repository-and-answer-issues-asked-by-the-community-please-send-me-an-email" class="anchor" aria-hidden="true" href="#sidemenu-needs-your-help-if-youre-a-skilled-ios-developer-and-want-to-help-maintain-this-repository-and-answer-issues-asked-by-the-community-please-send-me-an-email"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenu needs your help! If you're a skilled iOS developer and want to help maintain this repository and answer issues asked by the community, please &lt;a href="mailto:yo@massappeal.co?subject=I%20Want%20To%20Help!"&gt;send me an email&lt;/a&gt;.&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi, I'm Jon Kent and I am an iOS designer, developer, and mobile strategist. I love coffee and play the drums.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="mailto:yo@massappeal.co?subject=Let's%20build%20something%20amazing"&gt;&lt;strong&gt;Hire me&lt;/strong&gt;&lt;/a&gt; to help you make cool stuff. &lt;em&gt;Note: If you're having a problem with SideMenu, please open an &lt;a href="https://github.com/jonkykong/SideMenu/issues/new"&gt;issue&lt;/a&gt; and do not email me.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Check out my &lt;a href="http://massappeal.co" rel="nofollow"&gt;website&lt;/a&gt; to see some of my other projects.&lt;/li&gt;
&lt;li&gt;Building and maintaining this &lt;strong&gt;free&lt;/strong&gt; library takes a lot of my time and &lt;strong&gt;saves you time&lt;/strong&gt;. Please consider paying it forward by supporting me with a small amount to my &lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=contact%40jonkent%2eme&amp;amp;lc=US&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted" rel="nofollow"&gt;PayPal&lt;/a&gt;. (only &lt;strong&gt;13&lt;/strong&gt; people have donated since 12/23/15 but &lt;strong&gt;thank you&lt;/strong&gt; to those who have!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#preview-samples"&gt;Preview Samples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cocoapods"&gt;CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#carthage"&gt;Carthage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-package-manager"&gt;Swift Package Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#code-less-storyboard-implementation"&gt;Code-less Storyboard Implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-implementation"&gt;Code Implementation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#customization"&gt;Customization&lt;/a&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sidemenumanager"&gt;SideMenuManager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sidemenunavigationcontroller"&gt;SideMenuNavigationController&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sidemenunavigationcontrollerdelegate"&gt;SideMenuNavigationControllerDelegate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced"&gt;Advanced&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#known-issues"&gt;Known Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thank-you"&gt;Thank You&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;SideMenu is a simple and versatile side menu control written in Swift.&lt;/p&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;It can be implemented in storyboard without a single line of &lt;a href="#code-less-storyboard-implementation"&gt;code&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Eight standard animation styles to choose from (there's even a parallax effect if you want to get weird).&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Highly customizable without needing to write tons of custom code.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports continuous swiping between side menus on boths sides in a single gesture.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Global menu configuration. Set-up once and be done for all screens.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Menus can be presented and dismissed the same as any other view controller since this control uses &lt;a href="https://developer.apple.com/library/content/featuredarticles/ViewControllerPGforiPhoneOS/CustomizingtheTransitionAnimations.html" rel="nofollow"&gt;custom transitions&lt;/a&gt;.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Animations use your view controllers, not snapshots.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Properly handles screen rotation and in-call status bar height changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check out the example project to see it in action!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-preview-samples" class="anchor" aria-hidden="true" href="#preview-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preview Samples&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Slide Out&lt;/th&gt;
&lt;th&gt;Slide In&lt;/th&gt;
&lt;th&gt;Dissolve&lt;/th&gt;
&lt;th&gt;Slide In + Out&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/SlideOut.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/SlideOut.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/SlideIn.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/SlideIn.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Dissolve.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Dissolve.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/InOut.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/InOut.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Xcode 11.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Swift 5.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; iOS 10 or higher.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. You can install it with the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gem install cocoapods&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate SideMenu into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;10.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SideMenu&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For Swift 5 use:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; pod 'SideMenu', '~&amp;gt; 6.0'&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For Swift 4.2 (no longer maintained) use:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; pod 'SideMenu', '~&amp;gt; 5.0'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.&lt;/p&gt;
&lt;p&gt;You can install Carthage with &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate SideMenu into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "jonkykong/SideMenu" "master"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler. It is in early development, but SideMenu does support its use on supported platforms.&lt;/p&gt;
&lt;p&gt;Once you have your Swift package set up, adding SideMenu as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/jonkykong/SideMenu.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;6.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-code-less-storyboard-implementation" class="anchor" aria-hidden="true" href="#code-less-storyboard-implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code-less Storyboard Implementation&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a Navigation Controller for a side menu. Set the &lt;code&gt;Custom Class&lt;/code&gt; of the Navigation Controller to be &lt;code&gt;SideMenuNavigationController&lt;/code&gt; in the &lt;strong&gt;Identity Inspector&lt;/strong&gt;. Set the &lt;code&gt;Module&lt;/code&gt; to &lt;code&gt;SideMenu&lt;/code&gt; (ignore this step if you've manually added SideMenu to your project). Create a Root View Controller for the Navigation Controller (shown as a UITableViewController below). Set up any Triggered Segues you want in that view controller.
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot1.png"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the &lt;code&gt;Left Side&lt;/code&gt; property of the &lt;code&gt;SideMenuNavigationController&lt;/code&gt; to On if you want it to appear from the left side of the screen, or Off/Default if you want it to appear from the right side.
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot2.png"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add a UIButton or UIBarButton to a view controller that you want to display the menu from. Set that button's Triggered Segues action to modally present the Navigation Controller from step 1.
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot3.png"&gt;&lt;img src="https://raw.githubusercontent.com/jonkykong/SideMenu/master/etc/Screenshot3.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's it. &lt;em&gt;Note: you can only enable gestures in code.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-code-implementation" class="anchor" aria-hidden="true" href="#code-implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Implementation&lt;/h3&gt;
&lt;p&gt;First:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SideMenu&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From a button, do something like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define the menu&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; menu &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SideMenuNavigationController&lt;/span&gt;(&lt;span class="pl-c1"&gt;rootViewController&lt;/span&gt;: YourViewController)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SideMenuNavigationController is a subclass of UINavigationController, so do any additional configuration &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; of it here like setting its viewControllers. If you're using storyboards, you'll want to do something like:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; let menu = storyboard!.instantiateViewController(withIdentifier: "RightMenu") as! SideMenuNavigationController&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;present&lt;/span&gt;(menu, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To dismiss a menu programmatically, do something like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;dismiss&lt;/span&gt;(&lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use gestures you have to use the &lt;code&gt;SideMenuManager&lt;/code&gt;. In your &lt;code&gt;AppDelegate&lt;/code&gt; do something like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define the menus&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; leftMenuNavigationController &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SideMenuNavigationController&lt;/span&gt;(&lt;span class="pl-c1"&gt;rootViewController&lt;/span&gt;: YourViewController)
SideMenuManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-smi"&gt;leftMenuNavigationController&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; leftMenuNavigationController

&lt;span class="pl-k"&gt;let&lt;/span&gt; rightMenuNavigationController &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SideMenuNavigationController&lt;/span&gt;(&lt;span class="pl-c1"&gt;rootViewController&lt;/span&gt;: YourViewController)
SideMenuManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-smi"&gt;rightMenuNavigationController&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rightMenuNavigationController

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Setup gestures: the left and/or right menus must be set up (above) for these to work.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note that these continue to work on the Navigation Controller independent of the view controller it displays!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;SideMenuManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-c1"&gt;addPanGestureToPresent&lt;/span&gt;(&lt;span class="pl-c1"&gt;toView&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;navigationController&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;.&lt;span class="pl-smi"&gt;navigationBar&lt;/span&gt;)
SideMenuManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-c1"&gt;addScreenEdgePanGesturesToPresent&lt;/span&gt;(&lt;span class="pl-c1"&gt;toView&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;navigationController&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;.&lt;span class="pl-c1"&gt;view&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (Optional) Prevent status bar area from turning black when menu appears:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;leftMenuNavigationController.&lt;span class="pl-smi"&gt;statusBarEndAlpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Copy all settings to the other menu&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;rightMenuNavigationController.&lt;span class="pl-smi"&gt;settings&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; leftMenuNavigationController.&lt;span class="pl-smi"&gt;settings&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-sidemenumanager" class="anchor" aria-hidden="true" href="#sidemenumanager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenuManager&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;SideMenuManager&lt;/code&gt; supports the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The left menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;open&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; leftMenuNavigationController&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuNavigationController&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The right menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; rightMenuNavigationController&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuNavigationController&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; Adds screen edge gestures for both left and right sides to a view to present a menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Parameter toView: The view to add gestures to.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Returns: The array of screen edge gestures added to `toView`.&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;@discardableResult&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;addScreenEdgePanGesturesToPresent&lt;/span&gt;(&lt;span class="pl-en"&gt;toView&lt;/span&gt; &lt;span class="pl-smi"&gt;view&lt;/span&gt;: UIView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [UIScreenEdgePanGestureRecognizer]
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; Adds screen edge gestures to a view to present a menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Parameter toView: The view to add gestures to.&lt;/span&gt;
&lt;span class="pl-c"&gt; - Parameter forMenu: The menu (left or right) you want to add a gesture for.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Returns: The screen edge gestures added to `toView`.&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;@discardableResult&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;addScreenEdgePanGesturesToPresent&lt;/span&gt;(&lt;span class="pl-en"&gt;toView&lt;/span&gt; &lt;span class="pl-smi"&gt;view&lt;/span&gt;: UIView, &lt;span class="pl-en"&gt;forMenu&lt;/span&gt; &lt;span class="pl-smi"&gt;side&lt;/span&gt;: PresentDirection) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UIScreenEdgePanGestureRecognizer
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; Adds a pan edge gesture to a view to present menus.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Parameter toView: The view to add a pan gesture to.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Returns: The pan gesture added to `toView`.&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;@discardableResult&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;addPanGestureToPresent&lt;/span&gt;(&lt;span class="pl-en"&gt;toView&lt;/span&gt; &lt;span class="pl-smi"&gt;view&lt;/span&gt;: UIView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UIPanGestureRecognizer&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-sidemenunavigationcontroller" class="anchor" aria-hidden="true" href="#sidemenunavigationcontroller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenuNavigationController&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;SideMenuNavigationController&lt;/code&gt; supports the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Prevents the same view controller (or a view controller of the same class) from being pushed more than once. Defaults to true.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; allowPushOfSameClassTwice&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Forces menus to always animate when appearing or disappearing, regardless of a pushed view controller's animation.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; alwaysAnimate&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The animation options when a menu is displayed. Ignored when displayed with a gesture.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; animationOptions&lt;span class="pl-k"&gt;:&lt;/span&gt; UIView.&lt;span class="pl-smi"&gt;AnimationOptions&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;curveEaseInOut&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; The blur effect style of the menu if the menu's root view controller is a UITableViewController or UICollectionViewController.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; - Note: If you want cells in a UITableViewController menu to show vibrancy, make them a subclass of UITableViewVibrantCell.&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; blurEffectStyle&lt;span class="pl-k"&gt;:&lt;/span&gt; UIBlurEffect.&lt;span class="pl-smi"&gt;Style&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Duration of the remaining animation when the menu is partially dismissed with gestures. Default is 0.35 seconds.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; completeGestureDuration&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.35&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Animation curve of the remaining animation when the menu is partially dismissed with gestures. Default is .easeIn.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; completionCurve&lt;span class="pl-k"&gt;:&lt;/span&gt; UIView.&lt;span class="pl-smi"&gt;AnimationCurve&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;curveEaseInOut&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Duration of the animation when the menu is dismissed without gestures. Default is 0.35 seconds.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; dismissDuration&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.35&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Automatically dismisses the menu when another view is presented from it.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; dismissOnPresent&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Automatically dismisses the menu when another view controller is pushed from it.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; dismissOnPush&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Automatically dismisses the menu when the screen is rotated.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; dismissOnRotation&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Automatically dismisses the menu when app goes to the background.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; dismissWhenBackgrounded&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Enable or disable a swipe gesture that dismisses the menu. Will not be triggered when `presentingViewControllerUserInteractionEnabled` is set to true. Default is true.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; enableSwipeToDismissGesture&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Enable or disable a tap gesture that dismisses the menu. Will not be triggered when `presentingViewControllerUserInteractionEnabled` is set to true. Default is true.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; enableTapToDismissGesture&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The animation initial spring velocity when a menu is displayed. Ignored when displayed with a gesture.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; initialSpringVelocity&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Whether the menu appears on the right or left side of the screen. Right is the default. This property cannot be changed after the menu has loaded.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; leftSide&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Width of the menu when presented on screen, showing the existing view controller in the remaining space. Default is zero.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; menuWidth&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;240&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Duration of the animation when the menu is presented without gestures. Default is 0.35 seconds.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; presentDuration&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.35&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Enable or disable interaction with the presenting view controller while the menu is displayed. Enabling may make it difficult to dismiss the menu or cause exceptions if the user tries to present and already presented menu. `presentingViewControllerUseSnapshot` must also set to false. Default is false.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; presentingViewControllerUserInteractionEnabled&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Use a snapshot for the presenting vierw controller while the menu is displayed. Useful when layout changes occur during transitions. Not recommended for apps that support rotation. Default is false.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; presentingViewControllerUseSnapshot&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The presentation style of the menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; presentationStyle&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;viewSlideOut&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; The push style of the menu.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; There are six modes in MenuPushStyle:&lt;/span&gt;
&lt;span class="pl-c"&gt; - defaultBehavior: The view controller is pushed onto the stack.&lt;/span&gt;
&lt;span class="pl-c"&gt; - popWhenPossible: If a view controller already in the stack is of the same class as the pushed view controller, the stack is instead popped back to the existing view controller. This behavior can help users from getting lost in a deep navigation stack.&lt;/span&gt;
&lt;span class="pl-c"&gt; - preserve: If a view controller already in the stack is of the same class as the pushed view controller, the existing view controller is pushed to the end of the stack. This behavior is similar to a UITabBarController.&lt;/span&gt;
&lt;span class="pl-c"&gt; - preserveAndHideBackButton: Same as .preserve and back buttons are automatically hidden.&lt;/span&gt;
&lt;span class="pl-c"&gt; - replace: Any existing view controllers are released from the stack and replaced with the pushed view controller. Back buttons are automatically hidden. This behavior is ideal if view controllers require a lot of memory or their state doesn't need to be preserved..&lt;/span&gt;
&lt;span class="pl-c"&gt; - subMenu: Unlike all other behaviors that push using the menu's presentingViewController, this behavior pushes view controllers within the menu.  Use this behavior if you want to display a sub menu.&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; pushStyle&lt;span class="pl-k"&gt;:&lt;/span&gt; MenuPushStyle &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;default&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Draws `presentationStyle.backgroundColor` behind the status bar. Default is 1.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; statusBarEndAlpha&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The animation spring damping when a menu is displayed. Ignored when displayed with a gesture.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; usingSpringWithDamping&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Indicates if the menu is anywhere in the view hierarchy, even if covered by another view controller.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; isHidden&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-sidemenupresentstyle" class="anchor" aria-hidden="true" href="#sidemenupresentstyle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenuPresentStyle&lt;/h4&gt;
&lt;p&gt;There are 8 pre-defined &lt;code&gt;SideMenuPresentStyle&lt;/code&gt; options:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Menu slides in over the existing view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; menuSlideIn&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out to reveal the menu underneath.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOut&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out while the menu slides in.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOutMenuIn&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The menu dissolves in over the existing view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; menuDissolveIn&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out while the menu partially slides in.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOutMenuPartialIn&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out while the menu slides out from under it.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOutMenuOut&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out while the menu partially slides out from under it.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOutMenuPartialOut&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The existing view slides out and shrinks to reveal the menu underneath.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; viewSlideOutMenuZoom&lt;span class="pl-k"&gt;:&lt;/span&gt; SideMenuPresentStyle&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-sidemenunavigationcontrollerdelegate" class="anchor" aria-hidden="true" href="#sidemenunavigationcontrollerdelegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenuNavigationControllerDelegate&lt;/h4&gt;
&lt;p&gt;To receive notifications when a menu is displayed from a view controller, have it adhere to the  &lt;code&gt;SideMenuNavigationControllerDelegate&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;MyViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;SideMenuNavigationControllerDelegate &lt;/span&gt;{

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;sideMenuWillAppear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;menu&lt;/span&gt;&lt;/span&gt;: SideMenuNavigationController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SideMenu Appearing! (animated: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;animated&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;sideMenuDidAppear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;menu&lt;/span&gt;&lt;/span&gt;: SideMenuNavigationController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SideMenu Appeared! (animated: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;animated&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;sideMenuWillDisappear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;menu&lt;/span&gt;&lt;/span&gt;: SideMenuNavigationController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SideMenu Disappearing! (animated: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;animated&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;sideMenuDidDisappear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;menu&lt;/span&gt;&lt;/span&gt;: SideMenuNavigationController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SideMenu Disappeared! (animated: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;animated&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note: setting the  &lt;code&gt;sideMenuDelegate&lt;/code&gt; property on &lt;code&gt;SideMenuNavigationController&lt;/code&gt; is optional. If your view controller adheres to the protocol then the methods will be called automatically.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced" class="anchor" aria-hidden="true" href="#advanced"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced&lt;/h3&gt;
&lt;details&gt;
&lt;summary&gt;Click for Details&lt;/summary&gt;
&lt;h4&gt;&lt;a id="user-content-multiple-sidemenumanagers" class="anchor" aria-hidden="true" href="#multiple-sidemenumanagers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple SideMenuManagers&lt;/h4&gt;
&lt;p&gt;For simplicity, &lt;code&gt;SideMenuManager.default&lt;/code&gt; serves as the primary instance as most projects will only need one menu across all screens. If you need to show a different SideMenu using gestures, such as from a modal view controller presented from a previous SideMenu, do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Declare a variable containing your custom &lt;code&gt;SideMenuManager&lt;/code&gt; instance. You may want it to define it globally and configure it in your app delegate if menus will be used on multiple screens.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; customSideMenuManager &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SideMenuManager&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Setup and display menus with your custom instance the same as you would with the  &lt;code&gt;SideMenuManager.default&lt;/code&gt; instance.&lt;/li&gt;
&lt;li&gt;If using Storyboards, subclass your instance of &lt;code&gt;SideMenuNavigationController&lt;/code&gt; and set its &lt;code&gt;sideMenuManager&lt;/code&gt; property to your custom instance. This must be done before &lt;code&gt;viewDidLoad&lt;/code&gt; is called:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MySideMenuNavigationController&lt;/span&gt;: &lt;span class="pl-e"&gt;SideMenuNavigationController &lt;/span&gt;{

    &lt;span class="pl-k"&gt;let&lt;/span&gt; customSideMenuManager &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SideMenuManager&lt;/span&gt;()

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;awakeFromNib&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;awakeFromNib&lt;/span&gt;()

        sideMenuManager &lt;span class="pl-k"&gt;=&lt;/span&gt; customSideMenuManager
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, you can set  &lt;code&gt;sideMenuManager&lt;/code&gt; from the view controller that segues to your SideMenuNavigationController:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;prepare&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;segue&lt;/span&gt;: UIStoryboardSegue, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;sender&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Any&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; sideMenuNavigationController &lt;span class="pl-k"&gt;=&lt;/span&gt; segue.&lt;span class="pl-smi"&gt;destination&lt;/span&gt; &lt;span class="pl-k"&gt;as?&lt;/span&gt; SideMenuNavigationController {
        sideMenuNavigationController.&lt;span class="pl-smi"&gt;sideMenuManager&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; customSideMenuManager
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Important: displaying SideMenu instances directly over each other is not supported. Use &lt;code&gt;menuPushStyle = .subMenu&lt;/code&gt; to display multi-level menus instead.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sidemenupresentationstyle" class="anchor" aria-hidden="true" href="#sidemenupresentationstyle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SideMenuPresentationStyle&lt;/h3&gt;
&lt;p&gt;If you want to create your own custom presentation style, create a subclass of &lt;code&gt;SideMenuPresentationStyle&lt;/code&gt; and set your menu's &lt;code&gt;presentationStyle&lt;/code&gt; to it:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyPresentStyle&lt;/span&gt;: &lt;span class="pl-e"&gt;SideMenuPresentationStyle &lt;/span&gt;{

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;()
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Background color behind the views and status bar color&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        backgroundColor &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;black&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The starting alpha value of the menu before it appears&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        menuStartAlpha &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Whether or not the menu is on top. If false, the presenting view is on top. Shadows are applied to the view on top.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        menuOnTop &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The amount the menu is translated along the x-axis. Zero is stationary, negative values are off-screen, positive values are on screen.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        menuTranslateFactor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The amount the menu is scaled. Less than one shrinks the view, larger than one grows the view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        menuScaleFactor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The color of the shadow applied to the top most view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        onTopShadowColor &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;black&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The radius of the shadow applied to the top most view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        onTopShadowRadius &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The opacity of the shadow applied to the top most view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        onTopShadowOpacity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The offset of the shadow applied to the top most view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        onTopShadowOffset &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;zero&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The ending alpha of the presenting view when the menu is fully displayed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        presentingEndAlpha &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The amount the presenting view is translated along the x-axis. Zero is stationary, negative values are off-screen, positive values are on screen.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        presentingTranslateFactor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The amount the presenting view is scaled. Less than one shrinks the view, larger than one grows the view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        presentingScaleFactor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The strength of the parallax effect on the presenting view once the menu is displayed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        presentingParallaxStrength &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;zero&lt;/span&gt;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called just before the presentation transition begins. Use this to setup any animations. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;presentationTransitionWillBegin&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController) {}
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called during the presentation animation. Use this to animate anything alongside the menu animation. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;presentationTransition&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController) {}
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called when the presentation transition ends. Use this to finish any animations. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;presentationTransitionDidEnd&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;completed&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {}
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called just before the dismissal transition begins. Use this to setup any animations. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;dismissalTransitionWillBegin&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController) {}
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called during the dismissal animation. Use this to animate anything alongside the menu animation. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;dismissalTransition&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController) {}
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This method is called when the dismissal transition ends. Use this to finish any animations. The super method does not need to be called.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;dismissalTransitionDidEnd&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;presentedViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;presentingViewController&lt;/span&gt;: UIViewController, &lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;completed&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {}
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Issues&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Issue &lt;a href="https://github.com/jonkykong/SideMenu/issues/258"&gt;#258&lt;/a&gt;. Using &lt;code&gt;presentingViewControllerUseSnapshot&lt;/code&gt; can help preserve the experience.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-thank-you" class="anchor" aria-hidden="true" href="#thank-you"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thank You&lt;/h2&gt;
&lt;p&gt;A special thank you to everyone that has &lt;a href="https://github.com/jonkykong/SideMenu/graphs/contributors"&gt;contributed&lt;/a&gt; to this library to make it better. Your support is appreciated!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;SideMenu is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jonkykong</author><guid isPermaLink="false">https://github.com/jonkykong/SideMenu</guid><pubDate>Sat, 21 Dec 2019 00:14:00 GMT</pubDate></item><item><title>apple/swift-package-manager #15 in Swift, Today</title><link>https://github.com/apple/swift-package-manager</link><description>&lt;p&gt;&lt;i&gt;The Package Manager for the Swift Programming Language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swift-package-manager-project" class="anchor" aria-hidden="true" href="#swift-package-manager-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager Project&lt;/h1&gt;
&lt;p&gt;The Swift Package Manager is a tool for managing distribution of source code, aimed at making it easy to share your code and reuse others’ code. The tool directly addresses the challenges of compiling and linking Swift packages, managing dependencies, versioning, and supporting flexible distribution and collaboration models.&lt;/p&gt;
&lt;p&gt;We’ve designed the system to make it easy to share packages on services like GitHub, but packages are also great for private personal development, sharing code within a team, or at any other granularity.&lt;/p&gt;
&lt;p&gt;Swift Package Manager includes a build system that can build for macOS and Linux. Xcode 11 integrates with libSwiftPM to provide support for iOS, watchOS, and tvOS platforms.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/apple/sourcekit-lsp"&gt;SourceKit-LSP&lt;/a&gt; project leverages libSwiftPM and provides Language Server Protocol implementation for editors that support LSP.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-requirements"&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#managing-swift-environments"&gt;Managing Swift Environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#choosing-a-swift-version"&gt;Choosing a Swift Version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#support"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributions"&gt;Contributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Please use &lt;a href="https://swift.org/getting-started/#using-the-package-manager" rel="nofollow"&gt;this guide&lt;/a&gt; for learning package manager basics.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;For Quick Help use the &lt;code&gt;swift package --help &lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;For extensive documentation on using Swift Package Manager, creating packages, and more, see &lt;a href="Documentation"&gt;Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For additional documentation on developing the Swift Package Manager itself, see &lt;a href="Documentation/Development.md"&gt;Documentation/Development&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Requirements&lt;/h2&gt;
&lt;p&gt;The package manager’s system requirements are the same as &lt;a href="https://github.com/apple/swift#system-requirements"&gt;those for Swift&lt;/a&gt; with the caveat that the package manager requires Git at runtime as well as build-time.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;The Swift Package Manager is included in Xcode 8.0 and all subsequent releases.&lt;/p&gt;
&lt;p&gt;The package manager is also available for other platforms as part of all &lt;a href="https://swift.org/download/" rel="nofollow"&gt;Snapshots available at swift.org&lt;/a&gt;, including snapshots for the latest versions built from &lt;code&gt;master&lt;/code&gt;. For installation instructions for downloaded snapshots, please see the &lt;a href="https://swift.org/getting-started/#installing-swift" rel="nofollow"&gt;Getting Started&lt;/a&gt; section of &lt;a href="https://swift.org" rel="nofollow"&gt;swift.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can verify your installation by typing &lt;code&gt;swift package --version&lt;/code&gt; in a terminal:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift package --version
Apple Swift Package Manager - ...&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-managing-swift-environments" class="anchor" aria-hidden="true" href="#managing-swift-environments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing Swift Environments&lt;/h3&gt;
&lt;p&gt;On macOS &lt;code&gt;/usr/bin/swift&lt;/code&gt; is just a stub that forwards invocations to the active
toolchain. Thus when you call &lt;code&gt;swift build&lt;/code&gt; it will use the swift defined by
your &lt;code&gt;TOOLCHAINS&lt;/code&gt; environment variable. This can be used to easily switch
between the default tools, and a development snapshot:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ xcrun --find swift
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift
$ swift --version
Apple Swift version 3.0
$ &lt;span class="pl-k"&gt;export&lt;/span&gt; TOOLCHAINS=swift
$ xcrun --find swift
/Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin/swift
$ swift --version
Swift version 3.0-dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use a specific toolchain you can set &lt;code&gt;TOOLCHAINS&lt;/code&gt; to the &lt;code&gt;CFBundleIdentifier&lt;/code&gt; in an &lt;code&gt;.xctoolchain&lt;/code&gt;’s Info.plist.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-choosing-a-swift-version" class="anchor" aria-hidden="true" href="#choosing-a-swift-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Choosing a Swift Version&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;SWIFT_EXEC&lt;/code&gt; environment variable specifies the &lt;code&gt;swiftc&lt;/code&gt; executable path used by &lt;code&gt;swift package&lt;/code&gt;. If it is not set, the package manager will try to locate it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In &lt;code&gt;swift-package&lt;/code&gt;'s parent directory.&lt;/li&gt;
&lt;li&gt;On macOS, by calling &lt;code&gt;xcrun --find swiftc&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;By searching the PATH.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;If you have any trouble with the package manager, help is available. We recommend:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://forums.swift.org/c/swift-users" rel="nofollow"&gt;Swift Forums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Our &lt;a href="http://bugs.swift.org" rel="nofollow"&gt;bug tracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When adding a bug to the tracker you should follow the bug reporting guidelines, they can be found in &lt;a href="./Documentation/Resources.md#reporting-a-good-swiftpm-bug"&gt;Resources.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you’re not comfortable sharing your question with the list, contact details for the code owners can be found in &lt;a href="CODEOWNERS"&gt;CODEOWNERS&lt;/a&gt;; however, the mailing list is usually the best place to go for help.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;To learn about the policies and best practices that govern contributions to the Swift project, please read the &lt;a href="https://swift.org/contributing/" rel="nofollow"&gt;Contributor Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are interested in contributing, please read the &lt;a href="Documentation/Internals/PackageManagerCommunityProposal.md"&gt;Community Proposal&lt;/a&gt;, which provides some context for decisions made in the current implementation and offers direction for the development of future features.&lt;/p&gt;
&lt;p&gt;Instructions for setting up the development environment are available &lt;a href="Documentation/Development.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Swift package manager uses &lt;a href="https://github.com/apple/swift-llbuild"&gt;llbuild&lt;/a&gt; as the underlying build system for compiling source files.  It is also open source and part of the Swift project.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2015 - 2019 Apple Inc. and the Swift project authors. Licensed under Apache License v2.0 with Runtime Library Exception.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://swift.org/LICENSE.txt" rel="nofollow"&gt;https://swift.org/LICENSE.txt&lt;/a&gt; for license information.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://swift.org/CONTRIBUTORS.txt" rel="nofollow"&gt;https://swift.org/CONTRIBUTORS.txt&lt;/a&gt; for Swift project authors.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift-package-manager</guid><pubDate>Sat, 21 Dec 2019 00:15:00 GMT</pubDate></item><item><title>airbnb/lottie-ios #16 in Swift, Today</title><link>https://github.com/airbnb/lottie-ios</link><description>&lt;p&gt;&lt;i&gt;An iOS library to natively render After Effects vector animations&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lottie-for-ios-macos-and-android-and-react-native" class="anchor" aria-hidden="true" href="#lottie-for-ios-macos-and-android-and-react-native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lottie for iOS, macOS (and &lt;a href="https://github.com/airbnb/lottie-android"&gt;Android&lt;/a&gt; and &lt;a href="https://github.com/airbnb/lottie-react-native"&gt;React Native&lt;/a&gt;)&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec93af3b58853a5ba768cc785ad54a4aca961645/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ff1d88230b9d245f16df6036e058518d051df573/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80aaf7fb5854bde9c64a0aff30cd12ebf1765b36/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-view-documentation-faq-help-examples-and-more-at-airbnbiolottie" class="anchor" aria-hidden="true" href="#view-documentation-faq-help-examples-and-more-at-airbnbiolottie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View documentation, FAQ, help, examples, and more at &lt;a href="http://airbnb.io/lottie/" rel="nofollow"&gt;airbnb.io/lottie&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Lottie is a mobile library for Android and iOS that natively renders vector based animations and art in realtime with minimal code.&lt;/p&gt;
&lt;p&gt;Lottie loads and renders animations and vectors exported in the bodymovin JSON format. Bodymovin JSON can be created and exported from After Effects with &lt;a href="https://github.com/bodymovin/bodymovin"&gt;bodymovin&lt;/a&gt;, Sketch with &lt;a href="https://github.com/buba447/Lottie-Sketch-Export"&gt;Lottie Sketch Export&lt;/a&gt;, and from &lt;a href="https://www.haiku.ai" rel="nofollow"&gt;Haiku&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the first time, designers can create &lt;strong&gt;and ship&lt;/strong&gt; beautiful animations without an engineer painstakingly recreating it by hand.
Since the animation is backed by JSON they are extremely small in size but can be large in complexity!
Animations can be played, resized, looped, sped up, slowed down, reversed, and even interactively scrubbed.
Lottie can play or loop just a portion of the animation as well, the possibilities are endless!
Animations can even be &lt;em&gt;&lt;strong&gt;changed at runtime&lt;/strong&gt;&lt;/em&gt; in various ways! Change the color, position or any keyframable value!
Lottie also supports native UIViewController Transitions out of the box!&lt;/p&gt;
&lt;p&gt;Here is just a small sampling of the power of Lottie&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples1.gif"&gt;&lt;img src="_Gifs/Examples1.gif" alt="Example1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples2.gif"&gt;&lt;img src="_Gifs/Examples2.gif" alt="Example2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Community 2_3.gif"&gt;&lt;img src="_Gifs/Community 2_3.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples3.gif"&gt;&lt;img src="_Gifs/Examples3.gif" alt="Example3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples4.gif"&gt;&lt;img src="_Gifs/Examples4.gif" alt="Abcs" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-lottie" class="anchor" aria-hidden="true" href="#installing-lottie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Lottie&lt;/h2&gt;
&lt;p&gt;Lottie supports &lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; and &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; (Both dynamic and static). Lottie is written in &lt;em&gt;&lt;strong&gt;Swift 4.2&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-github-repo" class="anchor" aria-hidden="true" href="#github-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Github Repo&lt;/h3&gt;
&lt;p&gt;You can pull the &lt;a href="https://github.com/airbnb/lottie-ios/"&gt;Lottie Github Repo&lt;/a&gt; and include the Lottie.xcodeproj to build a dynamic or static library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Add the pod to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lottie-ios&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then run:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After installing the cocoapod into your project import Lottie with&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Lottie&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Add Lottie to your Cartfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "airbnb/lottie-ios" "master"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;carthage update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In your application targets “General” tab under the “Linked Frameworks and Libraries” section, drag and drop lottie-ios.framework from the Carthage/Build/iOS directory that &lt;code&gt;carthage update&lt;/code&gt; produced.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;platforms&lt;/span&gt;: [
       .&lt;span class="pl-c1"&gt;iOS&lt;/span&gt;(.&lt;span class="pl-smi"&gt;v12&lt;/span&gt;),
  ],
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/airbnb/lottie-ios.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.1.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ],
  &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Lottie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then import wherever needed: &lt;code&gt;import Lottie&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-adding-it-to-an-existent-ios-project-via-swift-package-manager" class="anchor" aria-hidden="true" href="#adding-it-to-an-existent-ios-project-via-swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding it to an existent iOS Project via Swift Package Manager&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Using Xcode 11 go to File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/li&gt;
&lt;li&gt;Paste the project URL: &lt;a href="https://github.com/airbnb/lottie-ios"&gt;https://github.com/airbnb/lottie-ios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click on next and select the project target
**NOTE: For MacOS you must set the &lt;code&gt;Branch&lt;/code&gt; field to &lt;code&gt;lottie/macos-spm&lt;/code&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/spm-branch.png"&gt;&lt;img src="_Gifs/spm-branch.png" alt="Example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you have doubts, please, check the following links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2019/408/" rel="nofollow"&gt;How to use&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2019/410/" rel="nofollow"&gt;Creating Swift Packages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After successfully retrieved the package and added it to your project, just import &lt;code&gt;Lottie&lt;/code&gt; and you can get the full benefits of it.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>airbnb</author><guid isPermaLink="false">https://github.com/airbnb/lottie-ios</guid><pubDate>Sat, 21 Dec 2019 00:16:00 GMT</pubDate></item><item><title>IBM-Swift/Kitura #17 in Swift, Today</title><link>https://github.com/IBM-Swift/Kitura</link><description>&lt;p&gt;&lt;i&gt;A Swift web framework and HTTP server.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a href="http://kitura.io/" rel="nofollow"&gt;
&lt;img src="https://raw.githubusercontent.com/IBM-Swift/Kitura/master/Documentation/KituraLogo-wide.png" height="100" alt="Kitura" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/p&gt;&lt;p align="center"&gt;&lt;strong&gt;A Swift Web Framework and HTTP Server&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="https://www.kitura.io/packages.html#all" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/7fcd62b47dd033be54ccfc637201af95629531e2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6b69747572612e696f2d3146424345342e737667" alt="Docs" data-canonical-src="https://img.shields.io/badge/docs-kitura.io-1FBCE4.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://travis-ci.org/IBM-Swift/Kitura" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/8b7b775d604fb8c292bbee568a16958084327d26/68747470733a2f2f7472617669732d63692e6f72672f49424d2d53776966742f4b69747572612e7376673f6272616e63683d6d6173746572" alt="Build Status - Master" data-canonical-src="https://travis-ci.org/IBM-Swift/Kitura.svg?branch=master" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/20738bb8299d3bba047a2257835816c996f32dce/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6f732d6d61634f532d677265656e2e7376673f7374796c653d666c6174"&gt;&lt;img src="https://camo.githubusercontent.com/20738bb8299d3bba047a2257835816c996f32dce/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6f732d6d61634f532d677265656e2e7376673f7374796c653d666c6174" alt="macOS" data-canonical-src="https://img.shields.io/badge/os-macOS-green.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e03f50adf26f5ec614c12cfd26146990e82f72ce/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6f732d6c696e75782d677265656e2e7376673f7374796c653d666c6174"&gt;&lt;img src="https://camo.githubusercontent.com/e03f50adf26f5ec614c12cfd26146990e82f72ce/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6f732d6c696e75782d677265656e2e7376673f7374796c653d666c6174" alt="Linux" data-canonical-src="https://img.shields.io/badge/os-linux-green.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/23ab21d88ff4fce8c54ca4ce792028dcbec1d92f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865322d626c75652e7376673f7374796c653d666c6174"&gt;&lt;img src="https://camo.githubusercontent.com/23ab21d88ff4fce8c54ca4ce792028dcbec1d92f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865322d626c75652e7376673f7374796c653d666c6174" alt="Apache 2" data-canonical-src="https://img.shields.io/badge/license-Apache2-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/IBM-Swift/Kitura" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/f6bb2185247222e4cecbc72575bfc62452c372aa/68747470733a2f2f636f6465636f762e696f2f67682f49424d2d53776966742f4b69747572612f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/IBM-Swift/Kitura/branch/master/graph/badge.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://codebeat.co/projects/github-com-ibm-swift-kitura" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/8f81fc7756e44033e6c1b5ae286410660ccd8a93/68747470733a2f2f636f6465626561742e636f2f6261646765732f64326431636231302d653538372d343462372d623633612d306137366666623762643936" alt="codebeat badge" data-canonical-src="https://codebeat.co/badges/d2d1cb10-e587-44b7-b63a-0a76ffb7bd96" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="http://swift-at-ibm-slack.mybluemix.net/" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/582471d6c4025088d0dc079bbf6ee636afca64ff/687474703a2f2f73776966742d61742d69626d2d736c61636b2e6d79626c75656d69782e6e65742f62616467652e737667" alt="Slack Status" data-canonical-src="http://swift-at-ibm-slack.mybluemix.net/badge.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-summary" class="anchor" aria-hidden="true" href="#summary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;p&gt;Kitura is a web framework and web server that is created for web services written in Swift. For more information, visit &lt;a href="http://www.kitura.io" rel="nofollow"&gt;www.kitura.io&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing-to-kitura"&gt;Contributing to Kitura&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;URL routing (e.g., GET, POST, PUT, DELETE, PATCH)&lt;/li&gt;
&lt;li&gt;Codable routing&lt;/li&gt;
&lt;li&gt;URL parameters&lt;/li&gt;
&lt;li&gt;Static file serving&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/Kitura/blob/master/Documentation/FastCGI.md"&gt;FastCGI support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SSL/TLS support&lt;/li&gt;
&lt;li&gt;Pluggable middleware&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Visit &lt;a href="http://www.kitura.io/" rel="nofollow"&gt;www.kitura.io&lt;/a&gt; for a Getting Started guide, tutorials, and API reference documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-kitura" class="anchor" aria-hidden="true" href="#contributing-to-kitura"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Kitura&lt;/h2&gt;
&lt;p&gt;All improvements to Kitura are very welcome! Here's how to get started with developing Kitura itself.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone this repository.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;$ git clone https://github.com/IBM-Swift/Kitura&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Build and run tests.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;$ swift test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can find more info on contributing to Kitura in our &lt;a href="https://github.com/IBM-Swift/Kitura/blob/master/.github/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;We love to talk server-side Swift, and Kitura. Join our &lt;a href="http://swift-at-ibm-slack.mybluemix.net/" rel="nofollow"&gt;Slack&lt;/a&gt; to meet the team!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>IBM-Swift</author><guid isPermaLink="false">https://github.com/IBM-Swift/Kitura</guid><pubDate>Sat, 21 Dec 2019 00:17:00 GMT</pubDate></item><item><title>xmartlabs/XLPagerTabStrip #18 in Swift, Today</title><link>https://github.com/xmartlabs/XLPagerTabStrip</link><description>&lt;p&gt;&lt;i&gt;Android PagerTabStrip for iOS.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-xlpagertabstrip" class="anchor" aria-hidden="true" href="#xlpagertabstrip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XLPagerTabStrip&lt;/h1&gt;
&lt;p align="left"&gt;
&lt;a href="https://travis-ci.org/xmartlabs/XLPagerTabStrip" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2d16544f1c7a922cd953d2d6e8c3be9147ca1dc5/68747470733a2f2f7472617669732d63692e6f72672f786d6172746c6162732f584c506167657254616253747269702e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://travis-ci.org/xmartlabs/XLPagerTabStrip.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4f118b3bbdae3a6c576b02083da10f466a7d46d9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d694f532d626c75652e7376673f7374796c653d666c6174"&gt;&lt;img src="https://camo.githubusercontent.com/4f118b3bbdae3a6c576b02083da10f466a7d46d9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d694f532d626c75652e7376673f7374796c653d666c6174" alt="Platform iOS" data-canonical-src="https://img.shields.io/badge/platform-iOS-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/251e6a3e9e63afd624f423e8beb24e4a3144074d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7377696674352d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Swift 5 compatible" data-canonical-src="https://img.shields.io/badge/swift5-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/XLPagerTabStrip" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ec5c2a0e0b1b35289a77e3b5f568fbcd6a62fd0/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f584c506167657254616253747269702e737667" alt="CocoaPods compatible" data-canonical-src="https://img.shields.io/cocoapods/v/XLPagerTabStrip.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/xmartlabs/XLPagerTabStrip/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ad0bc4de8816451a4a76b886b76142b99d10ffb/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c6174" alt="License: MIT" data-canonical-src="http://img.shields.io/badge/license-MIT-blue.svg?style=flat" style="max-width:100%;"&gt;
&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Made with &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; by &lt;a href="http://xmartlabs.com" rel="nofollow"&gt;XMARTLABS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Android &lt;a href="http://developer.android.com/reference/android/support/v4/view/PagerTabStrip.html" rel="nofollow"&gt;PagerTabStrip&lt;/a&gt; for iOS!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XLPagerTabStrip&lt;/strong&gt; is a &lt;em&gt;Container View Controller&lt;/em&gt; that allows us to switch easily among a collection of view controllers. Pan gesture can be used to move on to next or previous view controller. It shows a interactive indicator of the current, previous, next child view controllers.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;th&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/instagram.gif"&gt;&lt;img src="Example/instagram.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/spotify.gif"&gt;&lt;img src="Example/spotify.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/youtube.gif"&gt;&lt;img src="Example/youtube.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/pagerTabStripTypes.gif"&gt;&lt;img src="Example/pagerTabStripTypes.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-getting-involved" class="anchor" aria-hidden="true" href="#getting-involved"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting involved&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt; please feel free to &lt;strong&gt;submit pull requests&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;have a feature request&lt;/strong&gt; please &lt;strong&gt;open an issue&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt; or &lt;strong&gt;need help&lt;/strong&gt; please &lt;strong&gt;check older issues, &lt;a href="#faq"&gt;FAQ&lt;/a&gt; and threads on &lt;a href="http://stackoverflow.com/questions/tagged/XLPagerTabStrip" rel="nofollow"&gt;StackOverflow&lt;/a&gt; (Tag 'XLPagerTabStrip') before submitting an issue&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Before contribute check the &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; file for more info.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you use &lt;strong&gt;XLPagerTabStrip&lt;/strong&gt; in your app we would love to hear about it! Drop us a line on &lt;a href="https://twitter.com/xmartlabs" rel="nofollow"&gt;twitter&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pager-types" class="anchor" aria-hidden="true" href="#pager-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pager Types&lt;/h2&gt;
&lt;p&gt;The library provides 4 different ways to show the view controllers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-button-bar" class="anchor" aria-hidden="true" href="#button-bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Button Bar&lt;/h3&gt;
&lt;p&gt;This is likely the most common pager type. It's used by many well-known apps such as instagram, youtube, skype, and many others.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/barButton.gif"&gt;&lt;img src="Example/barButton.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bar" class="anchor" aria-hidden="true" href="#bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bar&lt;/h3&gt;
&lt;p&gt;This mode doesn't show a title neither an image. It only shows a bar that indicates the current view controller.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/bar.gif"&gt;&lt;img src="Example/bar.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-twitter" class="anchor" aria-hidden="true" href="#twitter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Twitter&lt;/h3&gt;
&lt;p&gt;A long time ago, the twitter app made use of this type of pager in the app main screen.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/twitter.gif"&gt;&lt;img src="Example/twitter.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-segmented" class="anchor" aria-hidden="true" href="#segmented"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Segmented&lt;/h3&gt;
&lt;p&gt;This mode uses a &lt;code&gt;UISegmentedControl&lt;/code&gt; to indicate which view controller is being displayed.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Example/segmented.gif"&gt;&lt;img src="Example/segmented.gif" width="250" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Basically, we just need to provide the list of child view controllers to show, and these view controllers should provide the information (title or image) that will be shown in the associated indicator.&lt;/p&gt;
&lt;p&gt;Let's see the steps to do this:&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-choose-which-type-of-pager-we-want-to-create" class="anchor" aria-hidden="true" href="#choose-which-type-of-pager-we-want-to-create"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Choose which type of pager we want to create&lt;/h5&gt;
&lt;p&gt;First, we must choose the type of pager we want to create.  Depending on our choice, we will have to create a view controller that extends from one of the following controllers: &lt;code&gt;TwitterPagerTabStripViewController&lt;/code&gt;, &lt;code&gt;ButtonBarPagerTabStripViewController&lt;/code&gt;, &lt;code&gt;SegmentedPagerTabStripViewController&lt;/code&gt;, &lt;code&gt;BarPagerTabStripViewController&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All these built-in pager controllers extend from the base class &lt;code&gt;PagerTabStripViewController&lt;/code&gt;.
You can also make your custom pager controller by extending directly from &lt;code&gt;PagerTabStripViewController&lt;/code&gt; in the event that no pager menu type fits your needs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;XLPagerTabStrip&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyPagerTabStripName&lt;/span&gt;: &lt;span class="pl-e"&gt;ButtonBarPagerTabStripViewController &lt;/span&gt;{
  &lt;span class="pl-k"&gt;..&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-connect-outlets-and-add-layout-constraints" class="anchor" aria-hidden="true" href="#connect-outlets-and-add-layout-constraints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connect outlets and add layout constraints&lt;/h5&gt;
&lt;p&gt;We strongly recommend using IB to set up our page controller views.&lt;/p&gt;
&lt;p&gt;Drag a &lt;code&gt;UIViewController&lt;/code&gt; into the storyboard and set up its class with your pager controller (&lt;code&gt;MyPagerTabStripName&lt;/code&gt;).
Drag a &lt;code&gt;UIScrollView&lt;/code&gt; into your view controller view and connect &lt;code&gt;PagerTabStripViewController&lt;/code&gt; &lt;code&gt;containerView&lt;/code&gt; outlet with the scroll view.&lt;/p&gt;
&lt;p&gt;Depending on which type of paging view controller you are working with you may have to connect more outlets.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;BarPagerTabStripViewController&lt;/code&gt;, we should connect &lt;code&gt;barView&lt;/code&gt; outlet. barView type is UIView. &lt;code&gt;ButtonBarPagerTabStripViewController&lt;/code&gt; requires us to connect &lt;code&gt;buttonBarView&lt;/code&gt; outlet. &lt;code&gt;buttonBarView&lt;/code&gt; type is &lt;code&gt;ButtonBarView&lt;/code&gt; which extends from &lt;code&gt;UICollectionView&lt;/code&gt;. &lt;code&gt;SegmentedPagerTabStripViewController&lt;/code&gt; has a &lt;code&gt;segmentedControl&lt;/code&gt; outlet; if the outlet is not connected the library try to set up the navigationItem &lt;code&gt;titleView&lt;/code&gt; property using a &lt;code&gt;UISegmentedControl&lt;/code&gt;. &lt;code&gt;TwitterPagerTabStripViewController&lt;/code&gt; doesn't require us to connect any additional outlet.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The example project contains a example for each pager controller type and we can look into it to see how views were added and how outlets were connected.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;&lt;a id="user-content-provide-the-view-controllers-that-will-appear-embedded-into-the-pagertabstrip-view-controller" class="anchor" aria-hidden="true" href="#provide-the-view-controllers-that-will-appear-embedded-into-the-pagertabstrip-view-controller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Provide the view controllers that will appear embedded into the PagerTabStrip view controller&lt;/h5&gt;
&lt;p&gt;You can provide the view controllers by overriding &lt;code&gt;func viewControllers(for: pagerTabStripController: PagerTabStripViewController) -&amp;gt; [UIViewController]&lt;/code&gt; method.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewControllers&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;pagerTabStripController&lt;/span&gt;: PagerTabStripViewController) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [UIViewController] {
  &lt;span class="pl-k"&gt;return&lt;/span&gt; [&lt;span class="pl-c1"&gt;MyEmbeddedViewController&lt;/span&gt;(), &lt;span class="pl-c1"&gt;MySecondEmbeddedViewController&lt;/span&gt;()]
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The method above is the only method declared in &lt;code&gt;PagerTabStripDataSource&lt;/code&gt; protocol. We don't need to explicitly conform to it since base pager class already does it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;&lt;a id="user-content-provide-information-to-show-in-each-indicator" class="anchor" aria-hidden="true" href="#provide-information-to-show-in-each-indicator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Provide information to show in each indicator&lt;/h5&gt;
&lt;p&gt;Every UIViewController that will appear within the PagerTabStrip needs to provide either a title or an image.
In order to do so they should conform to &lt;code&gt;IndicatorInfoProvider&lt;/code&gt; by implementing &lt;code&gt;func indicatorInfo(for pagerTabStripController: PagerTabStripViewController) -&amp;gt; IndicatorInfo&lt;/code&gt;
which provides the information required to show the PagerTabStrip menu (indicator) associated with the view controller.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyEmbeddedViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UITableViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;IndicatorInfoProvider &lt;/span&gt;{

  &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;indicatorInfo&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;pagerTabStripController&lt;/span&gt;: PagerTabStripViewController) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; IndicatorInfo {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;IndicatorInfo&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Child title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;For a detailed step-by-step guide about how to use the library, please check out this community &lt;a href="https://medium.com/michaeladeyeri/how-to-implement-android-like-tab-layouts-in-ios-using-swift-3-578516c3aa9" rel="nofollow"&gt;blog post&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;That's it! We're done! &lt;g-emoji class="g-emoji" alias="beers" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png"&gt;🍻&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="beers" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png"&gt;🍻&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h2&gt;
&lt;h5&gt;&lt;a id="user-content-pager-behaviour" class="anchor" aria-hidden="true" href="#pager-behaviour"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pager Behaviour&lt;/h5&gt;
&lt;p&gt;The pager indicator can be updated progressive as we swipe or at once in the middle of the transition between the view controllers.
By setting up &lt;code&gt;pagerBehaviour&lt;/code&gt; property we can choose how the indicator should be updated.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; pagerBehaviour&lt;span class="pl-k"&gt;:&lt;/span&gt; PagerTabStripBehaviour&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PagerTabStripBehaviour&lt;/span&gt; {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;common&lt;/span&gt;(&lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;skipIntermediteViewControllers&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;progressive&lt;/span&gt;(&lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;skipIntermediteViewControllers&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;elasticIndicatorLimit&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Default Values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Twitter Type&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PagerTabStripBehaviour.&lt;span class="pl-c1"&gt;common&lt;/span&gt;(&lt;span class="pl-c1"&gt;skipIntermediateViewControllers&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Segmented Type&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PagerTabStripBehaviour.&lt;span class="pl-c1"&gt;common&lt;/span&gt;(&lt;span class="pl-c1"&gt;skipIntermediateViewControllers&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bar Type&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PagerTabStripBehaviour.&lt;span class="pl-c1"&gt;progressive&lt;/span&gt;(&lt;span class="pl-c1"&gt;skipIntermediateViewControllers&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;elasticIndicatorLimit&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ButtonBar Type&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PagerTabStripBehaviour.&lt;span class="pl-c1"&gt;progressive&lt;/span&gt;(&lt;span class="pl-c1"&gt;skipIntermediateViewControllers&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;elasticIndicatorLimit&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you might have noticed, &lt;code&gt;common&lt;/code&gt; and &lt;code&gt;progressive&lt;/code&gt; enumeration cases have &lt;code&gt;skipIntermediateViewControllers&lt;/code&gt; and &lt;code&gt;elasticIndicatorLimit&lt;/code&gt; associated values.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;skipIntermediateViewControllers&lt;/code&gt; allows us to skip intermediate view controllers when a tab indicator is tapped.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;elasticIndicatorLimit&lt;/code&gt; allows us to tension the indicator when we reach a limit, I mean when we try to move forward from last indicator or move back from first indicator.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-pagertabstripdelegate--pagertabstripisprogressivedelegate" class="anchor" aria-hidden="true" href="#pagertabstripdelegate--pagertabstripisprogressivedelegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PagerTabStripDelegate &amp;amp; PagerTabStripIsProgressiveDelegate&lt;/h5&gt;
&lt;p&gt;Normally we don't need to implement these protocols because each pager type already conforms to it in order to properly update its indicator. However, there may be some scenarios when overriding a method may come in handy.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;PagerTabStripDelegate&lt;/span&gt;: &lt;span class="pl-k"&gt;class&lt;/span&gt; {

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;updateIndicator&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;viewController&lt;/span&gt;: PagerTabStripViewController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;fromIndex&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;toIndex&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;PagerTabStripIsProgressiveDelegate&lt;/span&gt; : &lt;span class="pl-e"&gt;PagerTabStripDelegate &lt;/span&gt;{

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;updateIndicator&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;viewController&lt;/span&gt;: PagerTabStripViewController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;fromIndex&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;toIndex&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;withProgressPercentage&lt;/span&gt; &lt;span class="pl-smi"&gt;progressPercentage&lt;/span&gt;: CGFloat, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;indexWasChanged&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Again, the method invoked by the library depends on the &lt;code&gt;pagerBehaviour&lt;/code&gt; value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-buttonbar-customization" class="anchor" aria-hidden="true" href="#buttonbar-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ButtonBar Customization&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarBackgroundColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; buttonBar minimumInteritemSpacing value, note that button bar extends from UICollectionView&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarMinimumInteritemSpacing&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; buttonBar minimumLineSpacing value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarMinimumLineSpacing&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; buttonBar flow layout left content inset value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarLeftContentInset&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; buttonBar flow layout right content inset value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarRightContentInset&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; selected bar view is created programmatically so it's important to set up the following 2 properties properly&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedBarBackgroundColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIColor.&lt;span class="pl-smi"&gt;black&lt;/span&gt;
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedBarHeight&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; each buttonBar item is a UICollectionView cell of type ButtonBarViewCell&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarItemBackgroundColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarItemFont&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIFont.&lt;span class="pl-c1"&gt;systemFont&lt;/span&gt;(&lt;span class="pl-c1"&gt;ofSize&lt;/span&gt;: &lt;span class="pl-c1"&gt;18&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; helps to determine the cell width, it represent the space before and after the title label&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarItemLeftRightMargin&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarItemTitleColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; in case the barView items do not fill the screen width this property stretch the cells to fill the screen&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;buttonBarItemsShouldFillAvailiableWidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only used if button bar is created programmatically and not using storyboards or nib files as recommended.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; buttonBarHeight&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Settings should be called before &lt;code&gt;viewDidLoad&lt;/code&gt; is called.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLoad&lt;/span&gt;() {
   &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;settings&lt;/span&gt;.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedBarHeight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
   &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;settings&lt;/span&gt;.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedBarBackgroundColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIColor.&lt;span class="pl-smi"&gt;white&lt;/span&gt;

   &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewDidLoad&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-update-cells-when-selected-indicator-changes" class="anchor" aria-hidden="true" href="#update-cells-when-selected-indicator-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update cells when selected indicator changes&lt;/h5&gt;
&lt;p&gt;We may need to update the indicator cell when the displayed view controller changes. The following function properties help to accomplish that. Depending on our pager &lt;code&gt;pagerBehaviour&lt;/code&gt; value we will have to set up &lt;code&gt;changeCurrentIndex&lt;/code&gt; or &lt;code&gt;changeCurrentIndexProgressive&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; changeCurrentIndex&lt;span class="pl-k"&gt;:&lt;/span&gt; ((&lt;span class="pl-c1"&gt;oldCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;newCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt;)&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; changeCurrentIndexProgressive&lt;span class="pl-k"&gt;:&lt;/span&gt; ((&lt;span class="pl-c1"&gt;oldCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;newCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;progressPercentage&lt;/span&gt;: CGFloat, &lt;span class="pl-c1"&gt;changeCurrentIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt;)&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;changeCurrentIndexProgressive &lt;span class="pl-k"&gt;=&lt;/span&gt; { (&lt;span class="pl-c1"&gt;oldCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;newCell&lt;/span&gt;: ButtonBarViewCell&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-c1"&gt;progressPercentage&lt;/span&gt;: CGFloat, &lt;span class="pl-c1"&gt;changeCurrentIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; changeCurrentIndex &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; }

    oldCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;label&lt;/span&gt;.&lt;span class="pl-smi"&gt;textColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIColor&lt;/span&gt;(&lt;span class="pl-c1"&gt;white&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;alpha&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;)
    newCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;label&lt;/span&gt;.&lt;span class="pl-smi"&gt;textColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIColor.&lt;span class="pl-smi"&gt;white&lt;/span&gt;

    &lt;span class="pl-k"&gt;if&lt;/span&gt; animated {
        UIView.&lt;span class="pl-c1"&gt;animate&lt;/span&gt;(&lt;span class="pl-c1"&gt;withDuration&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;animations&lt;/span&gt;: { () &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
            newCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;transform&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CGAffineTransform&lt;/span&gt;(&lt;span class="pl-c1"&gt;scaleX&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;)
            oldCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;transform&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CGAffineTransform&lt;/span&gt;(&lt;span class="pl-c1"&gt;scaleX&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.8&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.8&lt;/span&gt;)
        })
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        newCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;transform&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CGAffineTransform&lt;/span&gt;(&lt;span class="pl-c1"&gt;scaleX&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;)
        oldCell&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;transform&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CGAffineTransform&lt;/span&gt;(&lt;span class="pl-c1"&gt;scaleX&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.8&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.8&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-bar-type-customization" class="anchor" aria-hidden="true" href="#bar-type-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bar Type Customization&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;barBackgroundColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedBarBackgroundColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; barHeight is only set up when the bar is created programmatically and not using storyboards or xib files as recommended.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;barHeight&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; CGFloat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-twitter-type-customization" class="anchor" aria-hidden="true" href="#twitter-type-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Twitter Type Customization&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;dotColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIColor&lt;/span&gt;(&lt;span class="pl-c1"&gt;white&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;alpha&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.4&lt;/span&gt;)
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;selectedDotColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIColor.&lt;span class="pl-smi"&gt;white&lt;/span&gt;
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;portraitTitleFont&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIFont.&lt;span class="pl-c1"&gt;systemFont&lt;/span&gt;(&lt;span class="pl-c1"&gt;ofSize&lt;/span&gt;: &lt;span class="pl-c1"&gt;18&lt;/span&gt;)
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;landscapeTitleFont&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIFont.&lt;span class="pl-c1"&gt;systemFont&lt;/span&gt;(&lt;span class="pl-c1"&gt;ofSize&lt;/span&gt;: &lt;span class="pl-c1"&gt;15&lt;/span&gt;)
settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;titleColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; UIColor.&lt;span class="pl-smi"&gt;white&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-segmented-type-customization" class="anchor" aria-hidden="true" href="#segmented-type-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Segmented Type Customization&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;settings.&lt;span class="pl-smi"&gt;style&lt;/span&gt;.&lt;span class="pl-smi"&gt;segmentedControlColor&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; UIColor&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 9.3+&lt;/li&gt;
&lt;li&gt;Xcode 10.2+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Follow these 3 steps to run Example project: Clone XLPagerTabStrip repository, open XLPagerTabStrip workspace and run the &lt;em&gt;Example&lt;/em&gt; project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects.&lt;/p&gt;
&lt;p&gt;To install XLPagerTabStrip, simply add the following line to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;XLPagerTabStrip&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 9.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a simple, decentralized dependency manager for Cocoa.&lt;/p&gt;
&lt;p&gt;To install XLPagerTabStrip, simply add the following line to your Cartfile:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "xmartlabs/XLPagerTabStrip" ~&amp;gt; 9.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-how-to-change-the-visible-child-view-controller-programmatically" class="anchor" aria-hidden="true" href="#how-to-change-the-visible-child-view-controller-programmatically"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to change the visible child view controller programmatically&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;PagerTabStripViewController&lt;/code&gt; provides the following methods to programmatically change the visible child view controller:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;moveToViewController&lt;/span&gt;(&lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)
&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;moveToViewController&lt;/span&gt;(&lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)
&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;moveTo&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;viewController&lt;/span&gt;&lt;/span&gt;: UIViewController)
&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;moveTo&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;viewController&lt;/span&gt;&lt;/span&gt;: UIViewController, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-how-to-migrate-from-swift-2-to-swift-3-" class="anchor" aria-hidden="true" href="#how-to-migrate-from-swift-2-to-swift-3-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to migrate from Swift 2 to Swift 3 &lt;a name="user-content-migrate"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Check out &lt;a href="https://github.com/xmartlabs/XLPagerTabStrip/blob/master/Migration.md"&gt;our migration guide&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mtnBarreto"&gt;Martin Barreto&lt;/a&gt; (&lt;a href="https://twitter.com/mtnBarreto" rel="nofollow"&gt;@mtnBarreto&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-change-log" class="anchor" aria-hidden="true" href="#change-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Log&lt;/h2&gt;
&lt;p&gt;This can be found in the &lt;a href="CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; file.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xmartlabs</author><guid isPermaLink="false">https://github.com/xmartlabs/XLPagerTabStrip</guid><pubDate>Sat, 21 Dec 2019 00:18:00 GMT</pubDate></item><item><title>patchthecode/JTAppleCalendar #19 in Swift, Today</title><link>https://github.com/patchthecode/JTAppleCalendar</link><description>&lt;p&gt;&lt;i&gt;The Unofficial Apple iOS Swift Calendar View. Swift calendar Library. iOS calendar Control. 100% Customizable&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://github.com/patchthecode/JTAppleCalendar"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2439146/20656424/a1c98c8e-b4e1-11e6-9833-5fa6430f5a8c.png" alt="jtapplecalendarnewlogo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://patchthecode.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b18a4bc6c4b50f7f7bfe445892adb8ad5bd7399/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5475746f7269616c732d7061746368746865636f64652e636f6d2d626c75652e737667" alt="Tutorial" data-canonical-src="https://img.shields.io/badge/Tutorials-patchthecode.com-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/pods/JTAppleCalendar" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/42f9cce501c1ccd6ec6a46054cd14a301fcd6d18/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4a544170706c6543616c656e6461722e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/JTAppleCalendar.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage Compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/pods/JTAppleCalendar" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1567810733542ef646fad7e3292b28f6ba59a09f/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4a544170706c6543616c656e6461722e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/JTAppleCalendar.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/pods/JTAppleCalendar" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d89a1e1d87461e800113fdef07187e56b82541f8/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f4a544170706c6543616c656e6461722e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/JTAppleCalendar.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/patchthecode/JTAppleCalendar/wiki/Support"&gt;&lt;img src="https://camo.githubusercontent.com/6820e87f3e52c5051748ed1acccf5c5380e224e5/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f7765627374617469632f656e5f55532f62746e2f62746e5f646f6e6174655f37347832312e706e67" alt="" data-canonical-src="https://www.paypalobjects.com/webstatic/en_US/btn/btn_donate_74x21.png" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="#backers"&gt;&lt;img src="https://camo.githubusercontent.com/104865d4273479d8469383b591daf596afa957b3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f6261636b6572732f62616467652e737667" alt="Backers on Open Collective" data-canonical-src="https://opencollective.com/JTAppleCalendar/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/0cce449839101903ecf7d796408e16aedde4beff/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f72732f62616467652e737667" alt="Sponsors on Open Collective" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/patchthecode/jtapplecalendar" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b4a6a66acc370d6e1303a184cd76801f8b1b574/68747470733a2f2f7777772e636f64657472696167652e636f6d2f7061746368746865636f64652f6a746170706c6563616c656e6461722f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/patchthecode/jtapplecalendar/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-q-how-will-my-calendar-datecells-look-with-this-library" class="anchor" aria-hidden="true" href="#q-how-will-my-calendar-datecells-look-with-this-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: How will my calendar dateCells look with this library?&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: However you want them to look.&lt;/p&gt;
&lt;p align="center"&gt;
   &lt;a href="https://github.com/patchthecode/JTAppleCalendar/issues/2"&gt;
      &lt;img src="https://cloud.githubusercontent.com/assets/2439146/20638185/d708d542-b353-11e6-8119-fa36c11b66cb.gif" height="450" style="max-width:100%;"&gt;
   &lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;  
   &lt;a href="https://github.com/patchthecode/JTAppleCalendar/issues/2"&gt;More Images&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;hr&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Range selection - select dates in a range. The design is entirely up to you.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Boundary dates - limit the calendar date range&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="https://patchthecode.com/jtapplecalendar-home/week-view-month-view/" rel="nofollow"&gt;Week/month mode&lt;/a&gt; - show 1 row of weekdays. Or 2, 3 or 6&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Custom cells - make your day-cells look however you want, with any functionality you want&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Custom calendar view - make your calendar look however you want, with what ever functionality you want&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; First Day of week - pick anyday to be first day of the week&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Horizontal or vertical mode&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Ability to add &lt;a href="https://patchthecode.com/jtapplecalendar-home/headers/" rel="nofollow"&gt;month headers&lt;/a&gt; in varying sizes/styles of your liking&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Ability to scroll to any month by simply using the date&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Ability to design your calendar &lt;a href="https://github.com/patchthecode/JTAppleCalendar/issues/2"&gt;however you want.&lt;/a&gt; You want it, you build it&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-how-do-i-use-this-library" class="anchor" aria-hidden="true" href="#how-do-i-use-this-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I use this library?&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content--read-the-wiki-for-tutorials-and-example-code-to-download-or-visit-patchthecodecom" class="anchor" aria-hidden="true" href="#-read-the-wiki-for-tutorials-and-example-code-to-download-or-visit-patchthecodecom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&amp;gt;&amp;gt; &lt;a href="https://github.com/patchthecode/JTAppleCalendar/wiki/Tutorials"&gt;Read the wiki&lt;/a&gt; for Tutorials and example code to download. Or visit &lt;a href="https://patchthecode.com" rel="nofollow"&gt;PatchTheCode.com&lt;/a&gt;.&lt;/h3&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href="CONTRIBUTING.md"&gt;Contribute&lt;/a&gt;].
&lt;a href="graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/79c2926aceed829d8ac7da6d79224090a7289a0d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/JTAppleCalendar/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h2&gt;
&lt;p&gt;Thank you to all our backers! &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; [&lt;a href="https://opencollective.com/JTAppleCalendar#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/JTAppleCalendar#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57361d599bb4cf4693cbf367c34ba15811712739/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/JTAppleCalendar/backers.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/JTAppleCalendar#sponsor" rel="nofollow"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e67273e1b343cf9abc0e3ad69ba342e4ceb0905/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/736ac398a3450a518ac88751f23c6a1ab8af32bb/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c01edb9f09263b2cea225254c8e8aa37e42b85c8/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6ff994042a4f4ad69d06b781b2e251fbe8bfa26d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d1414499a943d73a075589bbb102da9cdb2331a5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ef517be6424b8e9b59e1aaf568dd9c9ed64dd02c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f22caab59c23a9c1b8809ef6bb7969a230a59b23/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/72437a2b64a2d267253b267f3fa564d417b6da24/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ce4aa863fa433577cfa31fc261ac3b1573fe9d1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7986f740b1a643db1b130e3a11bfdee2abee48e1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;JTAppleCalendar is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>patchthecode</author><guid isPermaLink="false">https://github.com/patchthecode/JTAppleCalendar</guid><pubDate>Sat, 21 Dec 2019 00:19:00 GMT</pubDate></item><item><title>Quick/Nimble #20 in Swift, Today</title><link>https://github.com/Quick/Nimble</link><description>&lt;p&gt;&lt;i&gt;A Matcher Framework for Swift and Objective-C&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nimble" class="anchor" aria-hidden="true" href="#nimble"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nimble&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Quick/Nimble" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33e652a42c0be3c96797217d05c7b5e5f33a38ef/68747470733a2f2f7472617669732d63692e6f72672f517569636b2f4e696d626c652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Quick/Nimble.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/Nimble" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d38b35e502bc6c1a59fc266bb6ce52291237514/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4e696d626c652e737667" alt="CocoaPods" data-canonical-src="https://img.shields.io/cocoapods/v/Nimble.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage Compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/e502cdc2b27c1f2b2590f061d37b984ba3957c26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d3041374346352e7376673f7374796c653d666c6174" alt="Accio supported" data-canonical-src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/Nimble" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/260d11f464288550b03bddaaa292b713804a9ce1/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4e696d626c652e737667" alt="Platforms" data-canonical-src="https://img.shields.io/cocoapods/p/Nimble.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://houndci.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c940d021ef775a44e0880bc3ba124a6bee5fefb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657669657765645f62792d486f756e642d3845363442302e737667" alt="Reviewed by Hound" data-canonical-src="https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use Nimble to express the expected outcomes of Swift
or Objective-C expressions. Inspired by
&lt;a href="https://github.com/pivotal/cedar"&gt;Cedar&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1.2&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beCloseTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;1.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;within&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;seahorse&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sea&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Atlantic&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pacific&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Mississippi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(ocean.&lt;span class="pl-smi"&gt;isClean&lt;/span&gt;).&lt;span class="pl-c1"&gt;toEventually&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTruthy&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-use-nimble" class="anchor" aria-hidden="true" href="#how-to-use-nimble"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Use Nimble&lt;/h1&gt;


&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;  &lt;em&gt;generated with &lt;a href="https://github.com/thlorenz/doctoc"&gt;DocToc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#some-background-expressing-outcomes-using-assertions-in-xctest"&gt;Some Background: Expressing Outcomes Using Assertions in XCTest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nimble-expectations-using-expectto"&gt;Nimble: Expectations Using &lt;code&gt;expect(...).to&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#custom-failure-messages"&gt;Custom Failure Messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#type-safety"&gt;Type Safety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#operator-overloads"&gt;Operator Overloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lazily-computed-values"&gt;Lazily Computed Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c-primitives"&gt;C Primitives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asynchronous-expectations"&gt;Asynchronous Expectations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#objective-c-support"&gt;Objective-C Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#disabling-objective-c-shorthand"&gt;Disabling Objective-C Shorthand&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#built-in-matcher-functions"&gt;Built-in Matcher Functions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#type-checking"&gt;Type Checking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#equivalence"&gt;Equivalence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#identity"&gt;Identity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#comparisons"&gt;Comparisons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#typesclasses"&gt;Types/Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#truthiness"&gt;Truthiness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-assertions"&gt;Swift Assertions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-error-handling"&gt;Swift Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exceptions"&gt;Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collection-membership"&gt;Collection Membership&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#strings"&gt;Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collection-elements"&gt;Collection Elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collection-count"&gt;Collection Count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#notifications"&gt;Notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#matching-a-value-to-any-of-a-group-of-matchers"&gt;Matching a value to any of a group of matchers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-validation"&gt;Custom Validation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#writing-your-own-matchers"&gt;Writing Your Own Matchers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#predicateresult"&gt;PredicateResult&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lazy-evaluation"&gt;Lazy Evaluation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#type-checking-via-swift-generics"&gt;Type Checking via Swift Generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customizing-failure-messages"&gt;Customizing Failure Messages&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#basic-customization"&gt;Basic Customization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#full-customization"&gt;Full Customization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#supporting-objective-c"&gt;Supporting Objective-C&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#properly-handling-nil-in-objective-c-matchers"&gt;Properly Handling &lt;code&gt;nil&lt;/code&gt; in Objective-C Matchers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#migrating-from-the-old-matcher-api"&gt;Migrating from the Old Matcher API&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#minimal-step---use-predicate"&gt;Minimal Step - Use &lt;code&gt;.predicate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#convert-to-use-predicate-type-with-old-matcher-constructor"&gt;Convert to use &lt;code&gt;Predicate&lt;/code&gt; Type with Old Matcher Constructor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#convert-to-predicate-type-with-preferred-constructor"&gt;Convert to &lt;code&gt;Predicate&lt;/code&gt; Type with Preferred Constructor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deprecation-roadmap"&gt;Deprecation Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing-nimble"&gt;Installing Nimble&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installing-nimble-as-a-submodule"&gt;Installing Nimble as a Submodule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing-nimble-via-cocoapods"&gt;Installing Nimble via CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing-nimble-via-accio"&gt;Installing Nimble via Accio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-nimble-without-xctest"&gt;Using Nimble without XCTest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a id="user-content-some-background-expressing-outcomes-using-assertions-in-xctest" class="anchor" aria-hidden="true" href="#some-background-expressing-outcomes-using-assertions-in-xctest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some Background: Expressing Outcomes Using Assertions in XCTest&lt;/h1&gt;
&lt;p&gt;Apple's Xcode includes the XCTest framework, which provides
assertion macros to test whether code behaves properly.
For example, to assert that &lt;code&gt;1 + 1 = 2&lt;/code&gt;, XCTest has you write:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;XCTAssertEqual&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;expected one plus one to equal two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, in Objective-C:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;XCTAssertEqual&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; + &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;expected one plus one to equal two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;XCTest assertions have a couple of drawbacks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Not enough macros.&lt;/strong&gt; There's no easy way to assert that a string
contains a particular substring, or that a number is less than or
equal to another.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It's hard to write asynchronous tests.&lt;/strong&gt; XCTest forces you to write
a lot of boilerplate code.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Nimble addresses these concerns.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-nimble-expectations-using-expectto" class="anchor" aria-hidden="true" href="#nimble-expectations-using-expectto"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nimble: Expectations Using &lt;code&gt;expect(...).to&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Nimble allows you to express expectations using a natural,
easily understood language:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Nimble&lt;/span&gt;

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(seagull.&lt;span class="pl-smi"&gt;squawk&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Squee!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

@import Nimble;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(seagull.squawk).to(equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Squee!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;expect&lt;/code&gt; function autocompletes to include &lt;code&gt;file:&lt;/code&gt; and &lt;code&gt;line:&lt;/code&gt;,
but these parameters are optional. Use the default values to have
Xcode highlight the correct line when an expectation is not met.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To perform the opposite expectation--to assert something is &lt;em&gt;not&lt;/em&gt;
equal--use &lt;code&gt;toNot&lt;/code&gt; or &lt;code&gt;notTo&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Nimble&lt;/span&gt;

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(seagull.&lt;span class="pl-smi"&gt;squawk&lt;/span&gt;).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Oh, hello there!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(seagull.&lt;span class="pl-smi"&gt;squawk&lt;/span&gt;).&lt;span class="pl-c1"&gt;notTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Oh, hello there!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

@import Nimble;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(seagull.squawk).toNot(equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Oh, hello there!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(seagull.squawk).notTo(equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Oh, hello there!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-custom-failure-messages" class="anchor" aria-hidden="true" href="#custom-failure-messages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Failure Messages&lt;/h2&gt;
&lt;p&gt;Would you like to add more information to the test's failure messages? Use the &lt;code&gt;description&lt;/code&gt; optional argument to add your own text:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed - expected to equal &amp;lt;3&amp;gt;, got &amp;lt;2&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;description&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Make sure libKindergartenMath is loaded&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed - Make sure libKindergartenMath is loaded&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; expected to equal &amp;lt;3&amp;gt;, got &amp;lt;2&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or the *WithDescription version in Objective-C:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

@import Nimble;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@(&lt;span class="pl-c1"&gt;1&lt;/span&gt;+&lt;span class="pl-c1"&gt;1&lt;/span&gt;)).to(equal(@&lt;span class="pl-c1"&gt;3&lt;/span&gt;));
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed - expected to equal &amp;lt;3.0000&amp;gt;, got &amp;lt;2.0000&amp;gt;&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@(&lt;span class="pl-c1"&gt;1&lt;/span&gt;+&lt;span class="pl-c1"&gt;1&lt;/span&gt;)).toWithDescription(equal(@&lt;span class="pl-c1"&gt;3&lt;/span&gt;), @"Make sure libKindergartenMath is loaded");
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed - Make sure libKindergartenMath is loaded&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; expected to equal &amp;lt;3.0000&amp;gt;, got &amp;lt;2.0000&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-type-safety" class="anchor" aria-hidden="true" href="#type-safety"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Safety&lt;/h2&gt;
&lt;p&gt;Nimble makes sure you don't compare two types that don't match:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Does not compile:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Squee!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Nimble uses generics--only available in Swift--to ensure
type correctness. That means type checking is
not available when using Nimble in Objective-C. &lt;g-emoji class="g-emoji" alias="sob" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png"&gt;😭&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-operator-overloads" class="anchor" aria-hidden="true" href="#operator-overloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Operator Overloads&lt;/h2&gt;
&lt;p&gt;Tired of so much typing? With Nimble, you can use overloaded operators
like &lt;code&gt;==&lt;/code&gt; for equivalence, or &lt;code&gt;&amp;gt;&lt;/code&gt; for comparisons:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if squawk does not equal "Hi!":&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(seagull.&lt;span class="pl-smi"&gt;squawk&lt;/span&gt;) &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hi!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 10 is greater than 2:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Operator overloads are only available in Swift, so you won't be able
to use this syntax in Objective-C. &lt;g-emoji class="g-emoji" alias="broken_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f494.png"&gt;💔&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-lazily-computed-values" class="anchor" aria-hidden="true" href="#lazily-computed-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lazily Computed Values&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;expect&lt;/code&gt; function doesn't evaluate the value it's given until it's
time to match. So Nimble can test whether an expression raises an
exception once evaluated:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note: Swift currently doesn't have exceptions.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;       Only Objective-C code can raise exceptions&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;       that Nimble will catch.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;       (see https://github.com/Quick/Nimble/issues/220#issuecomment-172667064)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; exception &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSException&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: NSInternalInconsistencyException,
    &lt;span class="pl-c1"&gt;reason&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not enough fish in the sea.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;userInfo&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;something&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;is fishy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
expect { exception.&lt;span class="pl-c1"&gt;raise&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Also, you can customize raiseException to be more specific&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { exception.&lt;span class="pl-c1"&gt;raise&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: NSInternalInconsistencyException))
expect { exception.&lt;span class="pl-c1"&gt;raise&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;named&lt;/span&gt;: NSInternalInconsistencyException,
    &lt;span class="pl-c1"&gt;reason&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not enough fish in the sea&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
expect { exception.&lt;span class="pl-c1"&gt;raise&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;named&lt;/span&gt;: NSInternalInconsistencyException,
    &lt;span class="pl-c1"&gt;reason&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not enough fish in the sea&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;userInfo&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;something&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;is fishy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Objective-C works the same way, but you must use the &lt;code&gt;expectAction&lt;/code&gt;
macro when making an expectation on an expression that has no return
value:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c1"&gt;NSException&lt;/span&gt; *exception = [&lt;span class="pl-c1"&gt;NSException&lt;/span&gt; &lt;span class="pl-c1"&gt;exceptionWithName:&lt;/span&gt;&lt;span class="pl-c1"&gt;NSInternalInconsistencyException&lt;/span&gt;
                                                 &lt;span class="pl-c1"&gt;reason:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Not enough fish in the sea.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                                               &lt;span class="pl-c1"&gt;userInfo:&lt;/span&gt;&lt;span class="pl-c1"&gt;nil&lt;/span&gt;];
&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(^{ [exception &lt;span class="pl-c1"&gt;raise&lt;/span&gt;]; }).to(raiseException());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use the property-block syntax to be more specific.&lt;/span&gt;
&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(^{ [exception &lt;span class="pl-c1"&gt;raise&lt;/span&gt;]; }).to(raiseException().named(&lt;span class="pl-c1"&gt;NSInternalInconsistencyException&lt;/span&gt;));
&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(^{ [exception &lt;span class="pl-c1"&gt;raise&lt;/span&gt;]; }).to(raiseException().
    named(&lt;span class="pl-c1"&gt;NSInternalInconsistencyException&lt;/span&gt;).
    reason(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not enough fish in the sea&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(^{ [exception &lt;span class="pl-c1"&gt;raise&lt;/span&gt;]; }).to(raiseException().
    named(&lt;span class="pl-c1"&gt;NSInternalInconsistencyException&lt;/span&gt;).
    reason(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not enough fish in the sea&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).
    userInfo(@{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;something&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;is fishy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can also pass a block for custom matching of the raised exception&lt;/span&gt;
&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(exception.raise()).to(raiseException().satisfyingBlock(^(&lt;span class="pl-c1"&gt;NSException&lt;/span&gt; *exception) {
    &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(exception.&lt;span class="pl-smi"&gt;name&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(&lt;span class="pl-c1"&gt;NSInternalInconsistencyException&lt;/span&gt;));
}));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-c-primitives" class="anchor" aria-hidden="true" href="#c-primitives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C Primitives&lt;/h2&gt;
&lt;p&gt;Some testing frameworks make it hard to test primitive C values.
In Nimble, it just works:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; actual&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;CInt&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; expectedValue&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;CInt&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(expectedValue))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In fact, Nimble uses type inference, so you can write the above
without explicitly specifying both types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;CInt&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;In Objective-C, Nimble only supports Objective-C objects. To
make expectations on primitive C values, wrap then in an object
literal:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@(&lt;span class="pl-c1"&gt;1&lt;/span&gt; + &lt;span class="pl-c1"&gt;1&lt;/span&gt;)).to(equal(@&lt;span class="pl-c1"&gt;2&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-asynchronous-expectations" class="anchor" aria-hidden="true" href="#asynchronous-expectations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous Expectations&lt;/h2&gt;
&lt;p&gt;In Nimble, it's easy to make expectations on values that are updated
asynchronously. Just use &lt;code&gt;toEventually&lt;/code&gt; or &lt;code&gt;toEventuallyNot&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;DispatchQueue.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
    ocean.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dolphins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    ocean.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;whales&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(ocean).&lt;span class="pl-c1"&gt;toEventually&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dolphins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;whales&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;dispatch_async&lt;/span&gt;(dispatch_get_main_queue(), ^{
    [ocean &lt;span class="pl-c1"&gt;add:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;dolphins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
    [ocean &lt;span class="pl-c1"&gt;add:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;whales&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
});
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(ocean).toEventually(contain(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;dolphins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;whales&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: toEventually triggers its polls on the main thread. Blocking the main
thread will cause Nimble to stop the run loop. This can cause test pollution
for whatever incomplete code that was running on the main thread.  Blocking the
main thread can be caused by blocking IO, calls to sleep(), deadlocks, and
synchronous IPC.&lt;/p&gt;
&lt;p&gt;In the above example, &lt;code&gt;ocean&lt;/code&gt; is constantly re-evaluated. If it ever
contains dolphins and whales, the expectation passes. If &lt;code&gt;ocean&lt;/code&gt; still
doesn't contain them, even after being continuously re-evaluated for one
whole second, the expectation fails.&lt;/p&gt;
&lt;p&gt;Sometimes it takes more than a second for a value to update. In those
cases, use the &lt;code&gt;timeout&lt;/code&gt; parameter:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Waits three seconds for ocean to contain "starfish":&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(ocean).&lt;span class="pl-c1"&gt;toEventually&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;timeout&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Evaluate someValue every 0.2 seconds repeatedly until it equals 100, or fails if it timeouts after 5.5 seconds.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(someValue).&lt;span class="pl-c1"&gt;toEventually&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;), &lt;span class="pl-c1"&gt;timeout&lt;/span&gt;: &lt;span class="pl-c1"&gt;5.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;pollInterval&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Waits three seconds for ocean to contain "starfish":&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(ocean).withTimeout(&lt;span class="pl-c1"&gt;3&lt;/span&gt;).toEventually(contain(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also provide a callback by using the &lt;code&gt;waitUntil&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
waitUntil { done &lt;span class="pl-k"&gt;in&lt;/span&gt;
    ocean.&lt;span class="pl-smi"&gt;goFish&lt;/span&gt; { success &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(success).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTrue&lt;/span&gt;())
        &lt;span class="pl-c1"&gt;done&lt;/span&gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;waitUntil&lt;/span&gt;(^(&lt;span class="pl-k"&gt;void&lt;/span&gt; (^done)(&lt;span class="pl-k"&gt;void&lt;/span&gt;)){
    [ocean &lt;span class="pl-c1"&gt;goFishWithHandler:&lt;/span&gt;^(&lt;span class="pl-c1"&gt;BOOL&lt;/span&gt; success){
        &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(success).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTrue&lt;/span&gt;());
        &lt;span class="pl-c1"&gt;done&lt;/span&gt;();
    }];
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;waitUntil&lt;/code&gt; also optionally takes a timeout parameter:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;waitUntil&lt;/span&gt;(&lt;span class="pl-c1"&gt;timeout&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;) { done &lt;span class="pl-k"&gt;in&lt;/span&gt;
    ocean.&lt;span class="pl-smi"&gt;goFish&lt;/span&gt; { success &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(success).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTrue&lt;/span&gt;())
        &lt;span class="pl-c1"&gt;done&lt;/span&gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;waitUntilTimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, ^(&lt;span class="pl-k"&gt;void&lt;/span&gt; (^done)(&lt;span class="pl-k"&gt;void&lt;/span&gt;)){
    [ocean &lt;span class="pl-c1"&gt;goFishWithHandler:&lt;/span&gt;^(&lt;span class="pl-c1"&gt;BOOL&lt;/span&gt; success){
        &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(success).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTrue&lt;/span&gt;());
        &lt;span class="pl-c1"&gt;done&lt;/span&gt;();
    }];
});&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: &lt;code&gt;waitUntil&lt;/code&gt; triggers its timeout code on the main thread. Blocking the main
thread will cause Nimble to stop the run loop to continue. This can cause test
pollution for whatever incomplete code that was running on the main thread.
Blocking the main thread can be caused by blocking IO, calls to sleep(),
deadlocks, and synchronous IPC.&lt;/p&gt;
&lt;p&gt;In some cases (e.g. when running on slower machines) it can be useful to modify
the default timeout and poll interval values. This can be done as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Increase the global timeout to 5 seconds:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Nimble.&lt;span class="pl-smi"&gt;AsyncDefaults&lt;/span&gt;.&lt;span class="pl-smi"&gt;Timeout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Slow the polling interval to 0.1 seconds:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Nimble.&lt;span class="pl-smi"&gt;AsyncDefaults&lt;/span&gt;.&lt;span class="pl-smi"&gt;PollInterval&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-objective-c-support" class="anchor" aria-hidden="true" href="#objective-c-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C Support&lt;/h2&gt;
&lt;p&gt;Nimble has full support for Objective-C. However, there are two things
to keep in mind when using Nimble in Objective-C:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;All parameters passed to the &lt;code&gt;expect&lt;/code&gt; function, as well as matcher
functions like &lt;code&gt;equal&lt;/code&gt;, must be Objective-C objects or can be converted into
an &lt;code&gt;NSObject&lt;/code&gt; equivalent:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

@import Nimble;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@(&lt;span class="pl-c1"&gt;1&lt;/span&gt; + &lt;span class="pl-c1"&gt;1&lt;/span&gt;)).to(equal(@&lt;span class="pl-c1"&gt;2&lt;/span&gt;));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).to(contain(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Boxed as NSNumber *&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;).to(equal(&lt;span class="pl-c1"&gt;2&lt;/span&gt;));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1.2&lt;/span&gt;).to(beLessThan(&lt;span class="pl-c1"&gt;2.0&lt;/span&gt;));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;).to(beTruthy());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Boxed as NSString *&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).to(equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Boxed as NSRange&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;NSMakeRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)).to(equal(&lt;span class="pl-c1"&gt;NSMakeRange&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)));&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To make an expectation on an expression that does not return a value,
such as &lt;code&gt;-[NSException raise]&lt;/code&gt;, use &lt;code&gt;expectAction&lt;/code&gt; instead of
&lt;code&gt;expect&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expectAction&lt;/span&gt;(^{ [exception &lt;span class="pl-c1"&gt;raise&lt;/span&gt;]; }).to(raiseException());&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following types are currently converted to an &lt;code&gt;NSObject&lt;/code&gt; type:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C Numeric types&lt;/strong&gt; are converted to &lt;code&gt;NSNumber *&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSRange&lt;/code&gt; is converted to &lt;code&gt;NSValue *&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;char *&lt;/code&gt; is converted to &lt;code&gt;NSString *&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the following matchers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;equal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beGreaterThan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beGreaterThanOrEqual&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beLessThan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beLessThanOrEqual&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beCloseTo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beTrue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beFalse&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beTruthy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beFalsy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;haveCount&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you would like to see more, &lt;a href="https://github.com/Quick/Nimble/issues"&gt;file an issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disabling-objective-c-shorthand" class="anchor" aria-hidden="true" href="#disabling-objective-c-shorthand"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disabling Objective-C Shorthand&lt;/h2&gt;
&lt;p&gt;Nimble provides a shorthand for expressing expectations using the
&lt;code&gt;expect&lt;/code&gt; function. To disable this shorthand in Objective-C, define the
&lt;code&gt;NIMBLE_DISABLE_SHORT_SYNTAX&lt;/code&gt; macro somewhere in your code before
importing Nimble:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;NIMBLE_DISABLE_SHORT_SYNTAX&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;

@import Nimble;

&lt;span class="pl-en"&gt;NMB_expect&lt;/span&gt;(^{ &lt;span class="pl-k"&gt;return&lt;/span&gt; seagull.&lt;span class="pl-smi"&gt;squawk&lt;/span&gt;; }, __FILE__, __LINE__).to(NMB_equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Squee!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Disabling the shorthand is useful if you're testing functions with
names that conflict with Nimble functions, such as &lt;code&gt;expect&lt;/code&gt; or
&lt;code&gt;equal&lt;/code&gt;. If that's not the case, there's no point in disabling the
shorthand.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-built-in-matcher-functions" class="anchor" aria-hidden="true" href="#built-in-matcher-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built-in Matcher Functions&lt;/h1&gt;
&lt;p&gt;Nimble includes a wide variety of matcher functions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-type-checking" class="anchor" aria-hidden="true" href="#type-checking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Checking&lt;/h2&gt;
&lt;p&gt;Nimble supports checking the type membership of any kind of object, whether
Objective-C conformant or not:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;SomeProtocol&lt;/span&gt;{}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SomeClassConformingToProtocol&lt;/span&gt;: &lt;span class="pl-e"&gt;SomeProtocol&lt;/span&gt;{}
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;SomeStructConformingToProtocol&lt;/span&gt;: &lt;span class="pl-e"&gt;SomeProtocol&lt;/span&gt;{}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The following tests pass&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;turtle&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;))

&lt;span class="pl-k"&gt;let&lt;/span&gt; classObject &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeClassConformingToProtocol&lt;/span&gt;()
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeClassConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeStructConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))

&lt;span class="pl-k"&gt;let&lt;/span&gt; structObject &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeStructConformingToProtocol&lt;/span&gt;()
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeStructConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(SomeClassConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The following tests pass&lt;/span&gt;
&lt;span class="pl-c1"&gt;NSMutableArray&lt;/span&gt; *array = [&lt;span class="pl-c1"&gt;NSMutableArray&lt;/span&gt; &lt;span class="pl-c1"&gt;array&lt;/span&gt;];
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(array).to(beAKindOf([&lt;span class="pl-c1"&gt;NSArray&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;]));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@&lt;span class="pl-c1"&gt;1&lt;/span&gt;).toNot(beAKindOf([&lt;span class="pl-c1"&gt;NSNull&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;]));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Objects can be tested for their exact types using the &lt;code&gt;beAnInstanceOf&lt;/code&gt; matcher:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;SomeProtocol&lt;/span&gt;{}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SomeClassConformingToProtocol&lt;/span&gt;: &lt;span class="pl-e"&gt;SomeProtocol&lt;/span&gt;{}
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;SomeStructConformingToProtocol&lt;/span&gt;: &lt;span class="pl-e"&gt;SomeProtocol&lt;/span&gt;{}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Unlike the 'beKindOf' matcher, the 'beAnInstanceOf' matcher only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if the object is the EXACT type requested. The following&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; tests pass -- note its behavior when working in an inheritance hierarchy.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;turtle&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;))

&lt;span class="pl-k"&gt;let&lt;/span&gt; classObject &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeClassConformingToProtocol&lt;/span&gt;()
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeClassConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(classObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeStructConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))

&lt;span class="pl-k"&gt;let&lt;/span&gt; structObject &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeStructConformingToProtocol&lt;/span&gt;()
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeStructConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(structObject).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(SomeClassConformingToProtocol.&lt;span class="pl-k"&gt;self&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-equivalence" class="anchor" aria-hidden="true" href="#equivalence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Equivalence&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is equivalent to 'expected':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;==&lt;/span&gt; expected

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is not equivalent to 'expected':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;!=&lt;/span&gt; expected&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is equivalent to 'expected':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(equal(expected))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is not equivalent to 'expected':&lt;/span&gt;
expect(actual).toNot(equal(expected))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Values must be &lt;code&gt;Equatable&lt;/code&gt;, &lt;code&gt;Comparable&lt;/code&gt;, or subclasses of &lt;code&gt;NSObject&lt;/code&gt;.
&lt;code&gt;equal&lt;/code&gt; will always fail when used to compare one or more &lt;code&gt;nil&lt;/code&gt; values.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-identity" class="anchor" aria-hidden="true" href="#identity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Identity&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' has the same pointer address as 'expected':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beIdenticalTo&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;===&lt;/span&gt; expected

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' does not have the same pointer address as 'expected':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;beIdenticalTo&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;!==&lt;/span&gt; expected&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important to remember that &lt;code&gt;beIdenticalTo&lt;/code&gt; only makes sense when comparing
types with reference semantics, which have a notion of identity. In Swift,
that means types that are defined as a &lt;code&gt;class&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This matcher will not work when comparing types with value semantics such as
those defined as a &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;enum&lt;/code&gt;. If you need to compare two value types,
consider what it means for instances of your type to be identical. This may mean
comparing individual properties or, if it makes sense to do so, conforming your type
to &lt;code&gt;Equatable&lt;/code&gt; and using Nimble's equivalence matchers instead.&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' has the same pointer address as 'expected':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beIdenticalTo(expected));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' does not have the same pointer address as 'expected':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).toNot(beIdenticalTo(expected));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-comparisons" class="anchor" aria-hidden="true" href="#comparisons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comparisons&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beLessThan&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; expected

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beLessThanOrEqualTo&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; expected

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beGreaterThan&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; expected

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beGreaterThanOrEqualTo&lt;/span&gt;(expected))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; expected&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beLessThan(expected));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beLessThanOrEqualTo(expected));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beGreaterThan(expected));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beGreaterThanOrEqualTo(expected));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Values given to the comparison matchers above must implement
&lt;code&gt;Comparable&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Because of how computers represent floating point numbers, assertions
that two floating point numbers be equal will sometimes fail. To express
that two numbers should be close to one another within a certain margin
of error, use &lt;code&gt;beCloseTo&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beCloseTo&lt;/span&gt;(expected, &lt;span class="pl-c1"&gt;within&lt;/span&gt;: delta))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beCloseTo(expected).within(delta));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, to assert that &lt;code&gt;10.01&lt;/code&gt; is close to &lt;code&gt;10&lt;/code&gt;, you can write:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;10.01&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beCloseTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;within&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@(&lt;span class="pl-c1"&gt;10.01&lt;/span&gt;)).to(beCloseTo(@&lt;span class="pl-c1"&gt;10&lt;/span&gt;).within(&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is also an operator shortcut available in Swift:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;≈&lt;/span&gt; expected
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;≈&lt;/span&gt; (expected, delta)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Type &lt;kbd&gt;option&lt;/kbd&gt;+&lt;kbd&gt;x&lt;/kbd&gt; to get &lt;code&gt;≈&lt;/code&gt; on a U.S. keyboard)&lt;/p&gt;
&lt;p&gt;The former version uses the default delta of 0.0001. Here is yet another way to do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;≈&lt;/span&gt; expected &lt;span class="pl-k"&gt;±&lt;/span&gt; delta
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual) &lt;span class="pl-k"&gt;==&lt;/span&gt; expected &lt;span class="pl-k"&gt;±&lt;/span&gt; delta
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Type &lt;kbd&gt;option&lt;/kbd&gt;+&lt;kbd&gt;shift&lt;/kbd&gt;+&lt;kbd&gt;=&lt;/kbd&gt; to get &lt;code&gt;±&lt;/code&gt; on a U.S. keyboard)&lt;/p&gt;
&lt;p&gt;If you are comparing arrays of floating point numbers, you'll find the following useful:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-c1"&gt;0.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;]) &lt;span class="pl-k"&gt;≈&lt;/span&gt; [&lt;span class="pl-c1"&gt;0.0001&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.0001&lt;/span&gt;]
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-c1"&gt;0.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;]).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beCloseTo&lt;/span&gt;([&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.1&lt;/span&gt;], &lt;span class="pl-c1"&gt;within&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;))
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Values given to the &lt;code&gt;beCloseTo&lt;/code&gt; matcher must be coercable into a
&lt;code&gt;Double&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-typesclasses" class="anchor" aria-hidden="true" href="#typesclasses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Types/Classes&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'instance' is an instance of 'aClass':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(instance).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAnInstanceOf&lt;/span&gt;(aClass))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'instance' is an instance of 'aClass' or any of its subclasses:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(instance).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(aClass))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'instance' is an instance of 'aClass':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(instance).to(beAnInstanceOf(aClass));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'instance' is an instance of 'aClass' or any of its subclasses:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(instance).to(beAKindOf(aClass));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Instances must be Objective-C objects: subclasses of &lt;code&gt;NSObject&lt;/code&gt;,
or Swift objects bridged to Objective-C with the &lt;code&gt;@objc&lt;/code&gt; prefix.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example, to assert that &lt;code&gt;dolphin&lt;/code&gt; is a kind of &lt;code&gt;Mammal&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(dolphin).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beAKindOf&lt;/span&gt;(Mammal))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(dolphin).to(beAKindOf([Mammal &lt;span class="pl-c1"&gt;class&lt;/span&gt;]));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;beAnInstanceOf&lt;/code&gt; uses the &lt;code&gt;-[NSObject isMemberOfClass:]&lt;/code&gt; method to
test membership. &lt;code&gt;beAKindOf&lt;/code&gt; uses &lt;code&gt;-[NSObject isKindOfClass:]&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-truthiness" class="anchor" aria-hidden="true" href="#truthiness"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Truthiness&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is not nil, true, or an object with a boolean value of true:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTruthy&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is only true (not nil or an object conforming to Boolean true):&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beTrue&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is nil, false, or an object with a boolean value of false:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beFalsy&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is only false (not nil or an object conforming to Boolean false):&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beFalse&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is nil:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beNil&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is not nil, true, or an object with a boolean value of true:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beTruthy());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is only true (not nil or an object conforming to Boolean true):&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beTrue());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is nil, false, or an object with a boolean value of false:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beFalsy());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is only false (not nil or an object conforming to Boolean false):&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beFalse());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is nil:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beNil());&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-swift-assertions" class="anchor" aria-hidden="true" href="#swift-assertions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Assertions&lt;/h2&gt;
&lt;p&gt;If you're using Swift, you can use the &lt;code&gt;throwAssertion&lt;/code&gt; matcher to check if an assertion is thrown (e.g. &lt;code&gt;fatalError()&lt;/code&gt;). This is made possible by &lt;a href="https://github.com/mattgallagher"&gt;@mattgallagher&lt;/a&gt;'s &lt;a href="https://github.com/mattgallagher/CwlPreconditionTesting"&gt;CwlPreconditionTesting&lt;/a&gt; library.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'somethingThatThrows()' throws an assertion, &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; such as by calling 'fatalError()' or if a precondition fails:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;somethingThatThrows&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwAssertion&lt;/span&gt;())
expect { () &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;fatalError&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwAssertion&lt;/span&gt;())
expect { &lt;span class="pl-c1"&gt;precondition&lt;/span&gt;(&lt;span class="pl-c1"&gt;false&lt;/span&gt;) }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwAssertion&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if throwing an NSError is not equal to throwing an assertion:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;NSError&lt;/span&gt;(&lt;span class="pl-c1"&gt;domain&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;code&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;userInfo&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) }.&lt;span class="pl-c1"&gt;toNot&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwAssertion&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if the code after the precondition check is not run:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; reachedPoint1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; reachedPoint2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
expect {
    reachedPoint1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    &lt;span class="pl-c1"&gt;precondition&lt;/span&gt;(&lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;condition message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    reachedPoint2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwAssertion&lt;/span&gt;())

&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(reachedPoint1) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(reachedPoint2) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This feature is only available in Swift.&lt;/li&gt;
&lt;li&gt;It is only supported for &lt;code&gt;x86_64&lt;/code&gt; binaries, meaning &lt;em&gt;you cannot run this matcher on iOS devices, only simulators&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;The tvOS simulator is supported, but using a different mechanism, requiring you to turn off the &lt;code&gt;Debug executable&lt;/code&gt; scheme setting for your tvOS scheme's Test configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-swift-error-handling" class="anchor" aria-hidden="true" href="#swift-error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Error Handling&lt;/h2&gt;
&lt;p&gt;You can use the &lt;code&gt;throwError&lt;/code&gt; matcher to check if an error is thrown.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'somethingThatThrows()' throws an 'Error':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;somethingThatThrows&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwError&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'somethingThatThrows()' throws an error within a particular domain:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;somethingThatThrows&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(throwError { (&lt;span class="pl-c1"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;Error&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(error.&lt;span class="pl-smi"&gt;_domain&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(NSCocoaErrorDomain))
})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'somethingThatThrows()' throws a particular error enum case:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;somethingThatThrows&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwError&lt;/span&gt;(NSCocoaError.&lt;span class="pl-smi"&gt;PropertyListReadCorruptError&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'somethingThatThrows()' throws an error of a particular type:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;somethingThatThrows&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;throwError&lt;/span&gt;(&lt;span class="pl-c1"&gt;errorType&lt;/span&gt;: NimbleError.&lt;span class="pl-k"&gt;self&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When working directly with &lt;code&gt;Error&lt;/code&gt; values, using the &lt;code&gt;matchError&lt;/code&gt; matcher
allows you to perform certain checks on the error itself without having to
explicitly cast the error.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;matchError&lt;/code&gt; matcher allows you to check whether or not the error:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;is the same &lt;em&gt;type&lt;/em&gt; of error you are expecting.&lt;/li&gt;
&lt;li&gt;represents a particular error value that you are expecting.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This can be useful when using &lt;code&gt;Result&lt;/code&gt; or &lt;code&gt;Promise&lt;/code&gt; types, for example.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; actual&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Error&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' represents any error value from the NimbleErrorEnum type:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchError&lt;/span&gt;(NimbleErrorEnum.&lt;span class="pl-k"&gt;self&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' represents the case 'timeout' from the NimbleErrorEnum type:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchError&lt;/span&gt;(NimbleErrorEnum.&lt;span class="pl-smi"&gt;timeout&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' contains an NSError equal to the one provided:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchError&lt;/span&gt;(&lt;span class="pl-c1"&gt;NSError&lt;/span&gt;(&lt;span class="pl-c1"&gt;domain&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;err&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;code&lt;/span&gt;: &lt;span class="pl-c1"&gt;123&lt;/span&gt;, &lt;span class="pl-c1"&gt;userInfo&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: This feature is only available in Swift.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-exceptions" class="anchor" aria-hidden="true" href="#exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exceptions&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual', when evaluated, raises an exception:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception with the given name:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: name))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception with the given name and reason:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;raiseException&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: name, &lt;span class="pl-c1"&gt;reason&lt;/span&gt;: reason))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception which passes expectations defined in the given closure:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (in this case, if the exception's name begins with "a r")&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect { exception.&lt;span class="pl-c1"&gt;raise&lt;/span&gt;() }.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(raiseException { (&lt;span class="pl-c1"&gt;exception&lt;/span&gt;: NSException) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(exception.&lt;span class="pl-smi"&gt;name&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
})&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual', when evaluated, raises an exception:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(raiseException())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception with the given name&lt;/span&gt;
expect(actual).to(raiseException().named(name))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception with the given name and reason:&lt;/span&gt;
expect(actual).to(raiseException().named(name).reason(reason))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' raises an exception and it passes expectations defined in the given block:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (in this case, if name begins with "a r")&lt;/span&gt;
expect(actual).to(raiseException().satisfyingBlock(^(&lt;span class="pl-c1"&gt;NSException&lt;/span&gt; *exception) {
    &lt;span class="pl-c1"&gt;expect&lt;/span&gt;(exception.&lt;span class="pl-smi"&gt;name&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;a r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
}));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: Swift currently doesn't have exceptions (see &lt;a href="https://github.com/Quick/Nimble/issues/220#issuecomment-172667064"&gt;#220&lt;/a&gt;).
Only Objective-C code can raise exceptions that Nimble will catch.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-collection-membership" class="anchor" aria-hidden="true" href="#collection-membership"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection Membership&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if all of the expected values are members of 'actual':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(expected&lt;span class="pl-k"&gt;...&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is empty (i.e. it contains no elements):&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beEmpty&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if expected is a member of 'actual':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(contain(expected));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' is empty (i.e. it contains no elements):&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beEmpty());&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;In Swift &lt;code&gt;contain&lt;/code&gt; takes any number of arguments. The expectation
passes if all of them are members of the collection. In Objective-C,
&lt;code&gt;contain&lt;/code&gt; only takes one argument &lt;a href="https://github.com/Quick/Nimble/issues/27"&gt;for now&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example, to assert that a list of sea creature names contains
"dolphin" and "starfish":&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;whale&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dolphin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dolphin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;whale&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;dolphin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]).to(contain(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;dolphin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;whale&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;dolphin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]).to(contain(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;starfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;contain&lt;/code&gt; and &lt;code&gt;beEmpty&lt;/code&gt; expect collections to be instances of
&lt;code&gt;NSArray&lt;/code&gt;, &lt;code&gt;NSSet&lt;/code&gt;, or a Swift collection composed of &lt;code&gt;Equatable&lt;/code&gt; elements.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To test whether a set of elements is present at the beginning or end of
an ordered collection, use &lt;code&gt;beginWith&lt;/code&gt; and &lt;code&gt;endWith&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if the elements in expected appear at the beginning of 'actual':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(expected&lt;span class="pl-k"&gt;...&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if the the elements in expected come at the end of 'actual':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;endWith&lt;/span&gt;(expected&lt;span class="pl-k"&gt;...&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if the elements in expected appear at the beginning of 'actual':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beginWith(expected));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if the the elements in expected come at the end of 'actual':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(endWith(expected));&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;beginWith&lt;/code&gt; and &lt;code&gt;endWith&lt;/code&gt; expect collections to be instances of
&lt;code&gt;NSArray&lt;/code&gt;, or ordered Swift collections composed of &lt;code&gt;Equatable&lt;/code&gt;
elements.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Like &lt;code&gt;contain&lt;/code&gt;, in Objective-C &lt;code&gt;beginWith&lt;/code&gt; and &lt;code&gt;endWith&lt;/code&gt; only support
a single argument &lt;a href="https://github.com/Quick/Nimble/issues/27"&gt;for now&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For code that returns collections of complex objects without a strict
ordering, there is the &lt;code&gt;containElementSatisfying&lt;/code&gt; matcher:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Turtle&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; turtles&lt;span class="pl-k"&gt;:&lt;/span&gt; [Turtle] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;functionThatReturnsSomeTurtlesInAnyOrder&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This set of matchers passes regardless of whether the array is &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{color: "blue"}, {color: "green"}] or [{color: "green"}, {color: "blue"}]:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(turtles).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;containElementSatisfying&lt;/span&gt;({ turtle &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; turtle.&lt;span class="pl-c1"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;green&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}))
&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(turtles).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;containElementSatisfying&lt;/span&gt;({ turtle &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; turtle.&lt;span class="pl-c1"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;blue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;that is a turtle with color 'blue'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The second matcher will incorporate the provided string in the error message&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; should it fail&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-k"&gt;@interface&lt;/span&gt; &lt;span class="pl-en"&gt;Turtle&lt;/span&gt; : &lt;span class="pl-e"&gt;NSObject&lt;/span&gt;
&lt;span class="pl-k"&gt;@property&lt;/span&gt; (&lt;span class="pl-k"&gt;nonatomic&lt;/span&gt;, &lt;span class="pl-k"&gt;readonly&lt;/span&gt;, &lt;span class="pl-k"&gt;nonnull&lt;/span&gt;) &lt;span class="pl-c1"&gt;NSString&lt;/span&gt; *color;
&lt;span class="pl-k"&gt;@end&lt;/span&gt;

&lt;span class="pl-k"&gt;@implementation&lt;/span&gt; &lt;span class="pl-en"&gt;Turtle&lt;/span&gt; 
&lt;span class="pl-k"&gt;@end&lt;/span&gt;

&lt;span class="pl-c1"&gt;NSArray&lt;/span&gt;&amp;lt;Turtle *&amp;gt; * __nonnull turtles = functionThatReturnsSomeTurtlesInAnyOrder();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This set of matchers passes regardless of whether the array is &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{color: "blue"}, {color: "green"}] or [{color: "green"}, {color: "blue"}]:&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(turtles).to(containElementSatisfying(^&lt;span class="pl-c1"&gt;BOOL&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt; __nonnull object) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [[turtle &lt;span class="pl-c1"&gt;color&lt;/span&gt;] &lt;span class="pl-c1"&gt;isEqualToString:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;green&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
}));
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(turtles).to(containElementSatisfying(^&lt;span class="pl-c1"&gt;BOOL&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt; __nonnull object) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [[turtle &lt;span class="pl-c1"&gt;color&lt;/span&gt;] &lt;span class="pl-c1"&gt;isEqualToString:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;blue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;];
}));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-strings" class="anchor" aria-hidden="true" href="#strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strings&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' contains 'substring':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;contain&lt;/span&gt;(substring))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' begins with 'prefix':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(&lt;span class="pl-k"&gt;prefix&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' ends with 'suffix':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;endWith&lt;/span&gt;(suffix))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' represents the empty string, "":&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beEmpty&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' matches the regular expression defined in 'expected':&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;match&lt;/span&gt;(expected))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' contains 'substring':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(contain(expected));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' begins with 'prefix':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beginWith(prefix));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' ends with 'suffix':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(endWith(suffix));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' represents the empty string, "":&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(beEmpty());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' matches the regular expression defined in 'expected':&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(match(expected))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-collection-elements" class="anchor" aria-hidden="true" href="#collection-elements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection Elements&lt;/h2&gt;
&lt;p&gt;Nimble provides a means to check that all elements of a collection pass a given expectation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift" class="anchor" aria-hidden="true" href="#swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift&lt;/h3&gt;
&lt;p&gt;In Swift, the collection must be an instance of a type conforming to
&lt;code&gt;Sequence&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Providing a custom function:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(allPass { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; })

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Composing the expectation with another matcher:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;allPass&lt;/span&gt;(&lt;span class="pl-c1"&gt;beLessThan&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-objective-c" class="anchor" aria-hidden="true" href="#objective-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C&lt;/h3&gt;
&lt;p&gt;In Objective-C, the collection must be an instance of a type which implements
the &lt;code&gt;NSFastEnumeration&lt;/code&gt; protocol, and whose elements are instances of a type
which subclasses &lt;code&gt;NSObject&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Additionally, unlike in Swift, there is no override to specify a custom
matcher function.&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(@[@&lt;span class="pl-c1"&gt;1&lt;/span&gt;, @&lt;span class="pl-c1"&gt;2&lt;/span&gt;, @&lt;span class="pl-c1"&gt;3&lt;/span&gt;, @&lt;span class="pl-c1"&gt;4&lt;/span&gt;]).to(allPass(beLessThan(@&lt;span class="pl-c1"&gt;5&lt;/span&gt;)));&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-collection-count" class="anchor" aria-hidden="true" href="#collection-count"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection Count&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' contains the 'expected' number of elements:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;haveCount&lt;/span&gt;(expected))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' does _not_ contain the 'expected' number of elements:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;notTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;haveCount&lt;/span&gt;(expected))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' contains the 'expected' number of elements:&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(haveCount(expected))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Passes if 'actual' does _not_ contain the 'expected' number of elements:&lt;/span&gt;
expect(actual).notTo(haveCount(expected))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Swift, the actual value must be an instance of a type conforming to &lt;code&gt;Collection&lt;/code&gt;.
For example, instances of &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Dictionary&lt;/code&gt;, or &lt;code&gt;Set&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For Objective-C, the actual value must be one of the following classes, or their subclasses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NSArray&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSDictionary&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSSet&lt;/code&gt;, or&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSHashTable&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-notifications" class="anchor" aria-hidden="true" href="#notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notifications&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; testNotification &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Notification&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;object&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if the closure in expect { ... } posts a notification to the default&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; notification center.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;expect {
    NotificationCenter.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-c1"&gt;postNotification&lt;/span&gt;(testNotification)
}.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;postNotifications&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;([testNotification]))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if the closure in expect { ... } posts a notification to a given&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; notification center&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; notificationCenter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NotificationCenter&lt;/span&gt;()
expect {
    notificationCenter.&lt;span class="pl-c1"&gt;postNotification&lt;/span&gt;(testNotification)
}.&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;postNotifications&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;([testNotification]), &lt;span class="pl-c1"&gt;fromNotificationCenter&lt;/span&gt;: notificationCenter))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This matcher is only available in Swift.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-matching-a-value-to-any-of-a-group-of-matchers" class="anchor" aria-hidden="true" href="#matching-a-value-to-any-of-a-group-of-matchers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Matching a value to any of a group of matchers&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if actual is either less than 10 or greater than 20&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(actual).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;satisfyAnyOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;beLessThan&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;), &lt;span class="pl-c1"&gt;beGreaterThan&lt;/span&gt;(&lt;span class="pl-c1"&gt;20&lt;/span&gt;)))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; can include any number of matchers -- the following will pass&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; **be careful** -- too many matchers can be the sign of an unfocused test&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;satisfyAnyOf&lt;/span&gt;(&lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;), &lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;), &lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;), &lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;), &lt;span class="pl-c1"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;7&lt;/span&gt;)))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; in Swift you also have the option to use the || operator to achieve a similar function&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;82&lt;/span&gt;).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;beLessThan&lt;/span&gt;(&lt;span class="pl-c1"&gt;50&lt;/span&gt;) &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-c1"&gt;beGreaterThan&lt;/span&gt;(&lt;span class="pl-c1"&gt;80&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if actual is either less than 10 or greater than 20&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to(satisfyAnyOf(beLessThan(@&lt;span class="pl-c1"&gt;10&lt;/span&gt;), beGreaterThan(@&lt;span class="pl-c1"&gt;20&lt;/span&gt;)))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; can include any number of matchers -- the following will pass&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; **be careful** -- too many matchers can be the sign of an unfocused test&lt;/span&gt;
expect(@&lt;span class="pl-c1"&gt;6&lt;/span&gt;).to(satisfyAnyOf(equal(@&lt;span class="pl-c1"&gt;2&lt;/span&gt;), equal(@&lt;span class="pl-c1"&gt;3&lt;/span&gt;), equal(@&lt;span class="pl-c1"&gt;4&lt;/span&gt;), equal(@&lt;span class="pl-c1"&gt;5&lt;/span&gt;), equal(@&lt;span class="pl-c1"&gt;6&lt;/span&gt;), equal(@&lt;span class="pl-c1"&gt;7&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: This matcher allows you to chain any number of matchers together. This provides flexibility,
but if you find yourself chaining many matchers together in one test, consider whether you
could instead refactor that single test into multiple, more precisely focused tests for
better coverage.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-custom-validation" class="anchor" aria-hidden="true" href="#custom-validation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Validation&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if .succeeded is returned from the closure&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;({
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;enumCaseWithAssociatedValueThatIDontCareAbout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; actual &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-c1"&gt;failed&lt;/span&gt;(&lt;span class="pl-c1"&gt;reason&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wrong enum case&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;succeeded&lt;/span&gt;
}).&lt;span class="pl-c1"&gt;to&lt;/span&gt;(&lt;span class="pl-c1"&gt;succeed&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes if .failed is returned from the closure&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;expect&lt;/span&gt;({
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;enumCaseWithAssociatedValueThatIDontCareAbout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; actual &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-c1"&gt;failed&lt;/span&gt;(&lt;span class="pl-c1"&gt;reason&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wrong enum case&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;succeeded&lt;/span&gt;
}).&lt;span class="pl-c1"&gt;notTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;succeed&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;String&lt;/code&gt; provided with &lt;code&gt;.failed()&lt;/code&gt; is shown when the test fails.&lt;/p&gt;
&lt;p&gt;When using &lt;code&gt;toEventually()&lt;/code&gt; be careful not to make state changes or run process intensive code since this closure will be ran many times.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-writing-your-own-matchers" class="anchor" aria-hidden="true" href="#writing-your-own-matchers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing Your Own Matchers&lt;/h1&gt;
&lt;p&gt;In Nimble, matchers are Swift functions that take an expected
value and return a &lt;code&gt;Predicate&lt;/code&gt; closure. Take &lt;code&gt;equal&lt;/code&gt;, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;equal&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt;&lt;/span&gt;&amp;gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;expectedValue&lt;/span&gt;&lt;/span&gt;: T&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;T&amp;gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Can be shortened to:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   Predicate { actual in  ... }&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; But shown with types here for clarity.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; Predicate { (&lt;span class="pl-c1"&gt;actualExpression&lt;/span&gt;: Expression&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;T&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; PredicateResult &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; msg &lt;span class="pl-k"&gt;=&lt;/span&gt; ExpectationMessage.&lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;equal &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expectedValue&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;() {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateResult&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;bool&lt;/span&gt;: actualValue &lt;span class="pl-k"&gt;==&lt;/span&gt; expectedValue&lt;span class="pl-k"&gt;!&lt;/span&gt;,
                &lt;span class="pl-c1"&gt;message&lt;/span&gt;: msg
            )
        } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateResult&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;status&lt;/span&gt;: .&lt;span class="pl-smi"&gt;fail&lt;/span&gt;,
                &lt;span class="pl-c1"&gt;message&lt;/span&gt;: msg.&lt;span class="pl-c1"&gt;appendedBeNilHint&lt;/span&gt;()
            )
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The return value of a &lt;code&gt;Predicate&lt;/code&gt; closure is a &lt;code&gt;PredicateResult&lt;/code&gt; that indicates
whether the actual value matches the expectation and what error message to
display on failure.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The actual &lt;code&gt;equal&lt;/code&gt; matcher function does not match when
&lt;code&gt;expected&lt;/code&gt; are nil; the example above has been edited for brevity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since matchers are just Swift functions, you can define them anywhere:
at the top of your test file, in a file shared by all of your tests, or
in an Xcode project you distribute to others.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you write a matcher you think everyone can use, consider adding it
to Nimble's built-in set of matchers by sending a pull request! Or
distribute it yourself via GitHub.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For examples of how to write your own matchers, just check out the
&lt;a href="https://github.com/Quick/Nimble/tree/master/Sources/Nimble/Matchers"&gt;&lt;code&gt;Matchers&lt;/code&gt; directory&lt;/a&gt;
to see how Nimble's built-in set of matchers are implemented. You can
also check out the tips below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-predicateresult" class="anchor" aria-hidden="true" href="#predicateresult"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PredicateResult&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;PredicateResult&lt;/code&gt; is the return struct that &lt;code&gt;Predicate&lt;/code&gt; return to indicate
success and failure. A &lt;code&gt;PredicateResult&lt;/code&gt; is made up of two values:
&lt;code&gt;PredicateStatus&lt;/code&gt; and &lt;code&gt;ExpectationMessage&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Instead of a boolean, &lt;code&gt;PredicateStatus&lt;/code&gt; captures a trinary set of values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PredicateStatus&lt;/span&gt; {
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The predicate "passes" with the given expression&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - expect(1).to(equal(1))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;matches&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The predicate "fails" with the given expression&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - expect(1).toNot(equal(1))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;doesNotMatch&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The predicate never "passes" with the given expression, even if negated&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - expect(nil as Int?).toNot(equal(1))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;fail&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Meanwhile, &lt;code&gt;ExpectationMessage&lt;/code&gt; provides messaging semantics for error reporting.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;indirect&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;ExpectationMessage&lt;/span&gt; {
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emits standard error message:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "expected to &amp;lt;string&amp;gt;, got &amp;lt;actual&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allows any free-form message&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "&amp;lt;string&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;fail&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Predicates should usually depend on either &lt;code&gt;.expectedActualValueTo(..)&lt;/code&gt; or
&lt;code&gt;.fail(..)&lt;/code&gt; when reporting errors. Special cases can be used for the other enum
cases.&lt;/p&gt;
&lt;p&gt;Finally, if your Predicate utilizes other Predicates, you can utilize
&lt;code&gt;.appended(details:)&lt;/code&gt; and &lt;code&gt;.appended(message:)&lt;/code&gt; methods to annotate an existing
error with more details.&lt;/p&gt;
&lt;p&gt;A common message to append is failing on nils. For that, &lt;code&gt;.appendedBeNilHint()&lt;/code&gt;
can be used.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lazy-evaluation" class="anchor" aria-hidden="true" href="#lazy-evaluation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lazy Evaluation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;actualExpression&lt;/code&gt; is a lazy, memoized closure around the value provided to the
&lt;code&gt;expect&lt;/code&gt; function. The expression can either be a closure or a value directly
passed to &lt;code&gt;expect(...)&lt;/code&gt;. In order to determine whether that value matches,
custom matchers should call &lt;code&gt;actualExpression.evaluate()&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beNil&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;T&amp;gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Predicate.simpleNilable(..) automatically generates ExpectationMessage for&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; us based on the string we provide to it. Also, the 'Nilable' postfix indicates&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; that this Predicate supports matching against nil actualExpressions, instead of&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; always resulting in a PredicateStatus.fail result -- which is true for&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Predicate.simple(..)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; Predicate.&lt;span class="pl-c1"&gt;simpleNilable&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;be nil&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { actualExpression &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;()
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateStatus&lt;/span&gt;(&lt;span class="pl-c1"&gt;bool&lt;/span&gt;: actualValue &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the above example, &lt;code&gt;actualExpression&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt; -- it is a closure
that returns a value. The value it returns, which is accessed via the
&lt;code&gt;evaluate()&lt;/code&gt; method, may be &lt;code&gt;nil&lt;/code&gt;. If that value is &lt;code&gt;nil&lt;/code&gt;, the &lt;code&gt;beNil&lt;/code&gt;
matcher function returns &lt;code&gt;true&lt;/code&gt;, indicating that the expectation passed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-type-checking-via-swift-generics" class="anchor" aria-hidden="true" href="#type-checking-via-swift-generics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Checking via Swift Generics&lt;/h2&gt;
&lt;p&gt;Using Swift's generics, matchers can constrain the type of the actual value
passed to the &lt;code&gt;expect&lt;/code&gt; function by modifying the return type.&lt;/p&gt;
&lt;p&gt;For example, the following matcher, &lt;code&gt;haveDescription&lt;/code&gt;, only accepts actual
values that implement the &lt;code&gt;Printable&lt;/code&gt; protocol. It checks their &lt;code&gt;description&lt;/code&gt;
against the one provided to the matcher function, and passes if they are the same:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;haveDescription&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;description&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;Printable&lt;span class="pl-k"&gt;?&lt;/span&gt;&amp;gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; Predicate.&lt;span class="pl-c1"&gt;simple&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;have description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { actual &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateStatus&lt;/span&gt;(&lt;span class="pl-c1"&gt;bool&lt;/span&gt;: actual.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;().&lt;span class="pl-c1"&gt;description&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; description)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-customizing-failure-messages" class="anchor" aria-hidden="true" href="#customizing-failure-messages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing Failure Messages&lt;/h2&gt;
&lt;p&gt;When using &lt;code&gt;Predicate.simple(..)&lt;/code&gt; or &lt;code&gt;Predicate.simpleNilable(..)&lt;/code&gt;, Nimble
outputs the following failure message when an expectation fails:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; where `message` is the first string argument and&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; `actual` is the actual value received in `expect(..)`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;expected to &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;message&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, got &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;actual&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can customize this message by modifying the way you create a &lt;code&gt;Predicate&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-basic-customization" class="anchor" aria-hidden="true" href="#basic-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Customization&lt;/h3&gt;
&lt;p&gt;For slightly more complex error messaging, receive the created failure message
with &lt;code&gt;Predicate.define(..)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;equal&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt;&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;expectedValue&lt;/span&gt;: T&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;T&amp;gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; Predicate.&lt;span class="pl-c1"&gt;define&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;equal &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;(expectedValue)&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { actualExpression, msg &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;()
        &lt;span class="pl-k"&gt;let&lt;/span&gt; matches &lt;span class="pl-k"&gt;=&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;==&lt;/span&gt; expectedValue &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; expectedValue &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; expectedValue &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; expectedValue &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
                &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateResult&lt;/span&gt;(
                    &lt;span class="pl-c1"&gt;status&lt;/span&gt;: .&lt;span class="pl-smi"&gt;fail&lt;/span&gt;,
                    &lt;span class="pl-c1"&gt;message&lt;/span&gt;: msg.&lt;span class="pl-c1"&gt;appendedBeNilHint&lt;/span&gt;()
                )
            }
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateResult&lt;/span&gt;(&lt;span class="pl-c1"&gt;status&lt;/span&gt;: .&lt;span class="pl-smi"&gt;fail&lt;/span&gt;, &lt;span class="pl-c1"&gt;message&lt;/span&gt;: msg)
        }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PredicateResult&lt;/span&gt;(&lt;span class="pl-c1"&gt;bool&lt;/span&gt;: matches, &lt;span class="pl-c1"&gt;message&lt;/span&gt;: msg)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above, &lt;code&gt;msg&lt;/code&gt; is defined based on the string given to
&lt;code&gt;Predicate.define&lt;/code&gt;. The code looks akin to:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; msg &lt;span class="pl-k"&gt;=&lt;/span&gt; ExpectationMessage.&lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;equal &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;(expectedValue)&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-full-customization" class="anchor" aria-hidden="true" href="#full-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full Customization&lt;/h3&gt;
&lt;p&gt;To fully customize the behavior of the Predicate, use the overload that expects
a &lt;code&gt;PredicateResult&lt;/code&gt; to be returned.&lt;/p&gt;
&lt;p&gt;Along with &lt;code&gt;PredicateResult&lt;/code&gt;, there are other &lt;code&gt;ExpectationMessage&lt;/code&gt; enum values you can use:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;indirect&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;ExpectationMessage&lt;/span&gt; {
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emits standard error message:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "expected to &amp;lt;message&amp;gt;, got &amp;lt;actual&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allows any free-form message&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "&amp;lt;message&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;fail&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emits standard error message with a custom actual value instead of the default.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "expected to &amp;lt;message&amp;gt;, got &amp;lt;actual&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;expectedCustomValueTo&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; actual: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emits standard error message without mentioning the actual value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eg - "expected to &amp;lt;message&amp;gt;"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;expectedTo&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; message: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For matchers that compose other matchers, there are a handful of helper
functions to annotate messages.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;appended(message: String)&lt;/code&gt; is used to append to the original failure message:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; produces "expected to be true, got &amp;lt;actual&amp;gt; (use beFalse() for inverse)"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; appended message do show up inline in Xcode.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;be true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;appended&lt;/span&gt;(&lt;span class="pl-c1"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; (use beFalse() for inverse)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a more comprehensive message that spans multiple lines, use
&lt;code&gt;appended(details: String)&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; produces "expected to be true, got &amp;lt;actual&amp;gt;\n\nuse beFalse() for inverse\nor use beNil()"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; details do not show inline in Xcode, but do show up in test logs.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;expectedActualValueTo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;be true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;appended&lt;/span&gt;(&lt;span class="pl-c1"&gt;details&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;use beFalse() for inverse&lt;span class="pl-cce"&gt;\n&lt;/span&gt;or use beNil()&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-supporting-objective-c" class="anchor" aria-hidden="true" href="#supporting-objective-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Objective-C&lt;/h2&gt;
&lt;p&gt;To use a custom matcher written in Swift from Objective-C, you'll have
to extend the &lt;code&gt;NMBObjCMatcher&lt;/code&gt; class, adding a new class method for your
custom matcher. The example below defines the class method
&lt;code&gt;+[NMBObjCMatcher beNilMatcher]&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;NMBObjCMatcher&lt;/span&gt; {
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beNilMatcher&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; NMBObjCMatcher {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; NMBObjCMatcher { actualBlock, failureMessage, location &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; block &lt;span class="pl-k"&gt;=&lt;/span&gt; ({ &lt;span class="pl-c1"&gt;actualBlock&lt;/span&gt;() &lt;span class="pl-k"&gt;as&lt;/span&gt; NSObject&lt;span class="pl-k"&gt;?&lt;/span&gt; })
            &lt;span class="pl-k"&gt;let&lt;/span&gt; expr &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Expression&lt;/span&gt;(&lt;span class="pl-c1"&gt;expression&lt;/span&gt;: block, &lt;span class="pl-c1"&gt;location&lt;/span&gt;: location)
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;beNil&lt;/span&gt;().&lt;span class="pl-c1"&gt;matches&lt;/span&gt;(expr, &lt;span class="pl-c1"&gt;failureMessage&lt;/span&gt;: failureMessage)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above allows you to use the matcher from Objective-C:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(actual).to([NMBObjCMatcher &lt;span class="pl-c1"&gt;beNilMatcher&lt;/span&gt;]());&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To make the syntax easier to use, define a C function that calls the
class method:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

FOUNDATION_EXPORT &lt;span class="pl-k"&gt;id&lt;/span&gt;&amp;lt;NMBMatcher&amp;gt; &lt;span class="pl-en"&gt;beNil&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [NMBObjCMatcher &lt;span class="pl-c1"&gt;beNilMatcher&lt;/span&gt;];
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-properly-handling-nil-in-objective-c-matchers" class="anchor" aria-hidden="true" href="#properly-handling-nil-in-objective-c-matchers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Properly Handling &lt;code&gt;nil&lt;/code&gt; in Objective-C Matchers&lt;/h3&gt;
&lt;p&gt;When supporting Objective-C, make sure you handle &lt;code&gt;nil&lt;/code&gt; appropriately.
Like &lt;a href="https://github.com/pivotal/cedar/issues/100"&gt;Cedar&lt;/a&gt;,
&lt;strong&gt;most matchers do not match with nil&lt;/strong&gt;. This is to bring prevent test
writers from being surprised by &lt;code&gt;nil&lt;/code&gt; values where they did not expect
them.&lt;/p&gt;
&lt;p&gt;Nimble provides the &lt;code&gt;beNil&lt;/code&gt; matcher function for test writer that want
to make expectations on &lt;code&gt;nil&lt;/code&gt; objects:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Objective-C&lt;/span&gt;

&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;nil&lt;/span&gt;).to(equal(&lt;span class="pl-c1"&gt;nil&lt;/span&gt;)); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fails&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-c1"&gt;nil&lt;/span&gt;).to(beNil());    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; passes&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your matcher does not want to match with nil, you use &lt;code&gt;NonNilMatcherFunc&lt;/code&gt;
and the &lt;code&gt;canMatchNil&lt;/code&gt; constructor on &lt;code&gt;NMBObjCMatcher&lt;/code&gt;. Using both types will
automatically generate expected value failure messages when they're nil.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beginWith&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;S&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Sequence&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;T&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt; &lt;/span&gt;&lt;span class="pl-k"&gt;where&lt;/span&gt; S.&lt;span class="pl-c1"&gt;Iterator&lt;/span&gt;.&lt;span class="pl-c1"&gt;Element&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; T&amp;gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;startingElement&lt;/span&gt;&lt;/span&gt;: T) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; NonNilMatcherFunc&amp;lt;S&amp;gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; NonNilMatcherFunc { actualExpression, failureMessage &lt;span class="pl-k"&gt;in&lt;/span&gt;
        failureMessage.&lt;span class="pl-smi"&gt;postfixMessage&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;begin with &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;startingElement&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;() {
            &lt;span class="pl-k"&gt;var&lt;/span&gt; actualGenerator &lt;span class="pl-k"&gt;=&lt;/span&gt; actualValue.&lt;span class="pl-c1"&gt;makeIterator&lt;/span&gt;()
            &lt;span class="pl-k"&gt;return&lt;/span&gt; actualGenerator.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; startingElement
        }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;NMBObjCMatcher&lt;/span&gt; {
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beginWithMatcher&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;expected&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;AnyObject&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; NMBObjCMatcher {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;NMBObjCMatcher&lt;/span&gt;(&lt;span class="pl-c1"&gt;canMatchNil&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;) { actualExpression, failureMessage &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; actual &lt;span class="pl-k"&gt;=&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;()
            &lt;span class="pl-k"&gt;let&lt;/span&gt; expr &lt;span class="pl-k"&gt;=&lt;/span&gt; actualExpression.&lt;span class="pl-smi"&gt;cast&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt; &lt;span class="pl-k"&gt;as?&lt;/span&gt; NMBOrderedCollection }
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;beginWith&lt;/span&gt;(expected).&lt;span class="pl-c1"&gt;matches&lt;/span&gt;(expr, &lt;span class="pl-c1"&gt;failureMessage&lt;/span&gt;: failureMessage)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-migrating-from-the-old-matcher-api" class="anchor" aria-hidden="true" href="#migrating-from-the-old-matcher-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrating from the Old Matcher API&lt;/h2&gt;
&lt;p&gt;Previously (&lt;code&gt;&amp;lt;7.0.0&lt;/code&gt;), Nimble supported matchers via the following types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Matcher&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NonNilMatcherFunc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MatcherFunc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of those types have been replaced by &lt;code&gt;Predicate&lt;/code&gt;. While migrating can be a
lot of work, Nimble currently provides several steps to aid migration of your
custom matchers:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-minimal-step---use-predicate" class="anchor" aria-hidden="true" href="#minimal-step---use-predicate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Minimal Step - Use &lt;code&gt;.predicate&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Nimble provides an extension to the old types that automatically naively
converts those types to the newer &lt;code&gt;Predicate&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beginWith&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;S&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Sequence&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;T&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt; &lt;/span&gt;&lt;span class="pl-k"&gt;where&lt;/span&gt; S.&lt;span class="pl-c1"&gt;Iterator&lt;/span&gt;.&lt;span class="pl-c1"&gt;Element&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; T&amp;gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;startingElement&lt;/span&gt;&lt;/span&gt;: T) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;S&amp;gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; NonNilMatcherFunc { actualExpression, failureMessage &lt;span class="pl-k"&gt;in&lt;/span&gt;
        failureMessage.&lt;span class="pl-smi"&gt;postfixMessage&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;begin with &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;startingElement&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;() {
            &lt;span class="pl-k"&gt;var&lt;/span&gt; actualGenerator &lt;span class="pl-k"&gt;=&lt;/span&gt; actualValue.&lt;span class="pl-c1"&gt;makeIterator&lt;/span&gt;()
            &lt;span class="pl-k"&gt;return&lt;/span&gt; actualGenerator.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; startingElement
        }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    }.&lt;span class="pl-smi"&gt;predicate&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is the simpliest way to externally support &lt;code&gt;Predicate&lt;/code&gt; which allows easier
composition than the old Nimble matcher interface, with minimal effort to change.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-convert-to-use-predicate-type-with-old-matcher-constructor" class="anchor" aria-hidden="true" href="#convert-to-use-predicate-type-with-old-matcher-constructor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Convert to use &lt;code&gt;Predicate&lt;/code&gt; Type with Old Matcher Constructor&lt;/h3&gt;
&lt;p&gt;The second most convenient step is to utilize special constructors that
&lt;code&gt;Predicate&lt;/code&gt; supports that closely align to the constructors of the old Nimble
matcher types.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;beginWith&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;S&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Sequence&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;T&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Equatable&lt;/span&gt; &lt;/span&gt;&lt;span class="pl-k"&gt;where&lt;/span&gt; S.&lt;span class="pl-c1"&gt;Iterator&lt;/span&gt;.&lt;span class="pl-c1"&gt;Element&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; T&amp;gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;startingElement&lt;/span&gt;&lt;/span&gt;: T) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Predicate&amp;lt;S&amp;gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; Predicate.&lt;span class="pl-smi"&gt;fromDeprecatedClosure&lt;/span&gt; { actualExpression, failureMessage &lt;span class="pl-k"&gt;in&lt;/span&gt;
        failureMessage.&lt;span class="pl-smi"&gt;postfixMessage&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;begin with &amp;lt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;startingElement&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; actualValue &lt;span class="pl-k"&gt;=&lt;/span&gt; actualExpression.&lt;span class="pl-c1"&gt;evaluate&lt;/span&gt;() {
            &lt;span class="pl-k"&gt;var&lt;/span&gt; actualGenerator &lt;span class="pl-k"&gt;=&lt;/span&gt; actualValue.&lt;span class="pl-c1"&gt;makeIterator&lt;/span&gt;()
            &lt;span class="pl-k"&gt;return&lt;/span&gt; actualGenerator.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; startingElement
        }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allows you to completely drop the old types from your code, although the
intended behavior may alter slightly to what is desired.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-convert-to-predicate-type-with-preferred-constructor" class="anchor" aria-hidden="true" href="#convert-to-predicate-type-with-preferred-constructor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Convert to &lt;code&gt;Predicate&lt;/code&gt; Type with Preferred Constructor&lt;/h3&gt;
&lt;p&gt;Finally, you can convert to the native &lt;code&gt;Predicate&lt;/code&gt; format using one of the
constructors not used to assist in the migration.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deprecation-roadmap" class="anchor" aria-hidden="true" href="#deprecation-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deprecation Roadmap&lt;/h3&gt;
&lt;p&gt;Nimble 7 introduces &lt;code&gt;Predicate&lt;/code&gt; but will support the old types with warning
deprecations. A couple major releases of Nimble will remain backwards
compatible with the old matcher api, although new features may not be
backported.&lt;/p&gt;
&lt;p&gt;The deprecating plan is a 3 major versions removal. Which is as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Introduce new &lt;code&gt;Predicate&lt;/code&gt; API, deprecation warning for old matcher APIs.
(Nimble &lt;code&gt;v7.x.x&lt;/code&gt;, &lt;code&gt;v8.x.x&lt;/code&gt; and &lt;code&gt;v9.x.x&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Introduce warnings on migration-path features (&lt;code&gt;.predicate&lt;/code&gt;,
&lt;code&gt;Predicate&lt;/code&gt;-constructors with similar arguments to old API). (Nimble
&lt;code&gt;v10.x.x&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Remove old API. (Nimble &lt;code&gt;v11.x.x&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-installing-nimble" class="anchor" aria-hidden="true" href="#installing-nimble"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Nimble&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Nimble can be used on its own, or in conjunction with its sister
project, &lt;a href="https://github.com/Quick/Quick"&gt;Quick&lt;/a&gt;. To install both
Quick and Nimble, follow &lt;a href="https://github.com/Quick/Quick/blob/master/Documentation/en-us/InstallingQuick.md"&gt;the installation instructions in the Quick
Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nimble can currently be installed in one of two ways: using CocoaPods, or with
git submodules.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-nimble-as-a-submodule" class="anchor" aria-hidden="true" href="#installing-nimble-as-a-submodule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Nimble as a Submodule&lt;/h2&gt;
&lt;p&gt;To use Nimble as a submodule to test your macOS, iOS or tvOS applications, follow
these 4 easy steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone the Nimble repository&lt;/li&gt;
&lt;li&gt;Add Nimble.xcodeproj to the Xcode workspace for your project&lt;/li&gt;
&lt;li&gt;Link Nimble.framework to your test target&lt;/li&gt;
&lt;li&gt;Start writing expectations!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For more detailed instructions on each of these steps,
read &lt;a href="https://github.com/Quick/Quick#how-to-install-quick"&gt;How to Install Quick&lt;/a&gt;.
Ignore the steps involving adding Quick to your project in order to
install just Nimble.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-nimble-via-cocoapods" class="anchor" aria-hidden="true" href="#installing-nimble-via-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Nimble via CocoaPods&lt;/h2&gt;
&lt;p&gt;To use Nimble in CocoaPods to test your macOS, iOS or tvOS applications, add
Nimble to your podfile and add the &lt;code&gt;use_frameworks!&lt;/code&gt; line to enable Swift
support for CocoaPods.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Whatever pods you need for your app go here&lt;/span&gt;

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YOUR_APP_NAME_HERE_Tests&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:exclusive&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  use_frameworks!
  pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Nimble&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 6.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-nimble-via-accio" class="anchor" aria-hidden="true" href="#installing-nimble-via-accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Nimble via Accio&lt;/h2&gt;
&lt;p&gt;Add the following to your Package.swift:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Quick/Nimble.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;8.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, add &lt;code&gt;Nimble&lt;/code&gt; to your App targets dependencies like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;testTarget&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AppTests&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nimble&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    ]
),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;accio update&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-nimble-without-xctest" class="anchor" aria-hidden="true" href="#using-nimble-without-xctest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Nimble without XCTest&lt;/h2&gt;
&lt;p&gt;Nimble is integrated with XCTest to allow it work well when used in Xcode test
bundles, however it can also be used in a standalone app. After installing
Nimble using one of the above methods, there are two additional steps required
to make this work.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a custom assertion handler and assign an instance of it to the
global &lt;code&gt;NimbleAssertionHandler&lt;/code&gt; variable. For example:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyAssertionHandler&lt;/span&gt; : &lt;span class="pl-e"&gt;AssertionHandler &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;assert&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;assertion&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;message&lt;/span&gt;&lt;/span&gt;: FailureMessage, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;location&lt;/span&gt;&lt;/span&gt;: SourceLocation) {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;assertion) {
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Expectation failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;message.&lt;span class="pl-c1"&gt;stringValue&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Somewhere before you use any assertions&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;NimbleAssertionHandler &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyAssertionHandler&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Add a post-build action to fix an issue with the Swift XCTest support
library being unnecessarily copied into your app&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Edit your scheme in Xcode, and navigate to Build -&amp;gt; Post-actions&lt;/li&gt;
&lt;li&gt;Click the "+" icon and select "New Run Script Action"&lt;/li&gt;
&lt;li&gt;Open the "Provide build settings from" dropdown and select your target&lt;/li&gt;
&lt;li&gt;Enter the following script contents:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;rm "${SWIFT_STDLIB_TOOL_DESTINATION_DIR}/libswiftXCTest.dylib"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can now use Nimble assertions in your code and handle failures as you see
fit.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Quick</author><guid isPermaLink="false">https://github.com/Quick/Nimble</guid><pubDate>Sat, 21 Dec 2019 00:20:00 GMT</pubDate></item><item><title>krzyzanowskim/CryptoSwift #21 in Swift, Today</title><link>https://github.com/krzyzanowskim/CryptoSwift</link><description>&lt;p&gt;&lt;i&gt;CryptoSwift is a growing collection of standard and secure cryptographic algorithms implemented in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="#installation"&gt;&lt;img src="https://camo.githubusercontent.com/5d6fd4fa3c2ae6ccd8c57429e19bcdf7eff82c10/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f506c6174666f726d732d694f53253230253743253230416e64726f69642532302537436d61634f5325323025374325323077617463684f5325323025374325323074764f532532302537432532304c696e75782d3445344534452e7376673f636f6c6f72413d323861373435" alt="Platform" data-canonical-src="https://img.shields.io/badge/Platforms-iOS%20%7C%20Android%20%7CmacOS%20%7C%20watchOS%20%7C%20tvOS%20%7C%20Linux-4E4E4E.svg?colorA=28a745" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#swift-versions-support"&gt;&lt;img src="https://camo.githubusercontent.com/4abb73b9576bed1811b4a731d67b02ae0fc40818/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d332e31253230253743253230332e32253230253743253230342e30253230253743253230342e31253230253743253230342e32253230253743253230352e302d6c69676874677265792e7376673f636f6c6f72413d32386137343526636f6c6f72423d344534453445" alt="Swift support" data-canonical-src="https://img.shields.io/badge/Swift-3.1%20%7C%203.2%20%7C%204.0%20%7C%204.1%20%7C%204.2%20%7C%205.0-lightgrey.svg?colorA=28a745&amp;amp;colorB=4E4E4E" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/CryptoSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0013f7c1969f14de2754d7893f29bd758c02f678/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f43727970746f53776966742e7376673f7374796c653d666c6174266c6162656c3d436f636f61506f647326636f6c6f72413d3238613734352626636f6c6f72423d344534453445" alt="CocoaPods Compatible" data-canonical-src="https://img.shields.io/cocoapods/v/CryptoSwift.svg?style=flat&amp;amp;label=CocoaPods&amp;amp;colorA=28a745&amp;amp;&amp;amp;colorB=4E4E4E" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3e04d0d93df1860466bbf1f5f10a4fc468c66ec4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d627269676874677265656e2e7376673f7374796c653d666c617426636f6c6f72413d3238613734352626636f6c6f72423d344534453445" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-brightgreen.svg?style=flat&amp;amp;colorA=28a745&amp;amp;&amp;amp;colorB=4E4E4E" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/469f89a7f13dab2f5c38308ffb6915cd6f8fe1eb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d627269676874677265656e2e7376673f7374796c653d666c617426636f6c6f72413d3238613734352626636f6c6f72423d344534453445" alt="Accio supported" data-canonical-src="https://img.shields.io/badge/Accio-supported-brightgreen.svg?style=flat&amp;amp;colorA=28a745&amp;amp;&amp;amp;colorB=4E4E4E" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/apple/swift-package-manager"&gt;&lt;img src="https://camo.githubusercontent.com/9acb2f9e84086e44b2c133afc03953d0dc00ae38/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53504d2d636f6d70617469626c652d627269676874677265656e2e7376673f7374796c653d666c617426636f6c6f72413d3238613734352626636f6c6f72423d344534453445" alt="Swift Package Manager compatible" data-canonical-src="https://img.shields.io/badge/SPM-compatible-brightgreen.svg?style=flat&amp;amp;colorA=28a745&amp;amp;&amp;amp;colorB=4E4E4E" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://twitter.com/krzyzanowskim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9eae22ec29baf555031d77e5e70cd9243df21dc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f547769747465722d406b727a797a616e6f77736b696d2d626c75652e7376673f7374796c653d666c6174" alt="Twitter" data-canonical-src="https://img.shields.io/badge/Twitter-@krzyzanowskim-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-cryptoswift" class="anchor" aria-hidden="true" href="#cryptoswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CryptoSwift&lt;/h1&gt;
&lt;p&gt;Crypto related functions and helpers for &lt;a href="https://swift.org" rel="nofollow"&gt;Swift&lt;/a&gt; implemented in Swift. (&lt;a href="https://twitter.com/hashtag/pureswift" rel="nofollow"&gt;#PureSwift&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;master&lt;/code&gt; branch follows the latest currently released &lt;strong&gt;version of Swift&lt;/strong&gt;. If you need an earlier version for an older version of Swift, you can specify its version in your &lt;code&gt;Podfile&lt;/code&gt; or use the code on the branch for that version. Older branches are unsupported. Check &lt;a href="#swift-versions-support"&gt;versions&lt;/a&gt; for details.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt; | &lt;a href="#features"&gt;Features&lt;/a&gt; | &lt;a href="#contribution"&gt;Contribution&lt;/a&gt; | &lt;a href="#installation"&gt;Installation&lt;/a&gt; | &lt;a href="#swift-versions-support"&gt;Swift versions&lt;/a&gt; | &lt;a href="#how-to"&gt;How-to&lt;/a&gt; | &lt;a href="#author"&gt;Author&lt;/a&gt; | &lt;a href="#license"&gt;License&lt;/a&gt; | &lt;a href="#changelog"&gt;Changelog&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsorship" class="anchor" aria-hidden="true" href="#sponsorship"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsorship&lt;/h2&gt;
&lt;p&gt;If you (or your Company) use this work, please consider &lt;a href="https://github.com/users/krzyzanowskim/sponsorship"&gt;Sponsorship&lt;/a&gt;. This is the only option to keep the project alive, that is in your own best interrest.&lt;/p&gt;
&lt;p&gt;CryptoSwift isn't backed by a big company and is developer in my spare time that I also use to as a freelancer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Good mood&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Easy to use&lt;/li&gt;
&lt;li&gt;Convenient extensions for String and Data&lt;/li&gt;
&lt;li&gt;Support for incremental updates (stream, ...)&lt;/li&gt;
&lt;li&gt;iOS, Android, macOS, AppleTV, watchOS, Linux support&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-hash-digest" class="anchor" aria-hidden="true" href="#hash-digest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hash (Digest)&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://tools.ietf.org/html/rfc1321" rel="nofollow"&gt;MD5&lt;/a&gt;
| &lt;a href="http://tools.ietf.org/html/rfc3174" rel="nofollow"&gt;SHA1&lt;/a&gt;
| &lt;a href="http://tools.ietf.org/html/rfc6234" rel="nofollow"&gt;SHA224&lt;/a&gt;
| &lt;a href="http://tools.ietf.org/html/rfc6234" rel="nofollow"&gt;SHA256&lt;/a&gt;
| &lt;a href="http://tools.ietf.org/html/rfc6234" rel="nofollow"&gt;SHA384&lt;/a&gt;
| &lt;a href="http://tools.ietf.org/html/rfc6234" rel="nofollow"&gt;SHA512&lt;/a&gt;
| &lt;a href="http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf" rel="nofollow"&gt;SHA3&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cyclic-redundancy-check-crc" class="anchor" aria-hidden="true" href="#cyclic-redundancy-check-crc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cyclic Redundancy Check (CRC)&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Cyclic_redundancy_check" rel="nofollow"&gt;CRC32&lt;/a&gt;
| &lt;a href="http://en.wikipedia.org/wiki/Cyclic_redundancy_check" rel="nofollow"&gt;CRC32C&lt;/a&gt;
| &lt;a href="http://en.wikipedia.org/wiki/Cyclic_redundancy_check" rel="nofollow"&gt;CRC16&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cipher" class="anchor" aria-hidden="true" href="#cipher"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cipher&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf" rel="nofollow"&gt;AES-128, AES-192, AES-256&lt;/a&gt;
| &lt;a href="http://cr.yp.to/chacha/chacha-20080128.pdf" rel="nofollow"&gt;ChaCha20&lt;/a&gt;
| &lt;a href="https://tools.ietf.org/html/rfc4503" rel="nofollow"&gt;Rabbit&lt;/a&gt;
| &lt;a href="https://www.schneier.com/academic/blowfish/" rel="nofollow"&gt;Blowfish&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-message-authenticators" class="anchor" aria-hidden="true" href="#message-authenticators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Message authenticators&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://cr.yp.to/mac/poly1305-20050329.pdf" rel="nofollow"&gt;Poly1305&lt;/a&gt;
| &lt;a href="https://www.ietf.org/rfc/rfc2104.txt" rel="nofollow"&gt;HMAC (MD5, SHA1, SHA256)&lt;/a&gt;
| &lt;a href="https://tools.ietf.org/html/rfc4493" rel="nofollow"&gt;CMAC&lt;/a&gt;
| &lt;a href="https://en.wikipedia.org/wiki/CBC-MAC" rel="nofollow"&gt;CBC-MAC&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cipher-mode-of-operation" class="anchor" aria-hidden="true" href="#cipher-mode-of-operation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cipher mode of operation&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Electronic codebook (&lt;a href="http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Electronic_codebook_.28ECB.29" rel="nofollow"&gt;ECB&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cipher-block chaining (&lt;a href="http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher-block_chaining_.28CBC.29" rel="nofollow"&gt;CBC&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Propagating Cipher Block Chaining (&lt;a href="http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Propagating_Cipher_Block_Chaining_.28PCBC.29" rel="nofollow"&gt;PCBC&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cipher feedback (&lt;a href="http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_feedback_.28CFB.29" rel="nofollow"&gt;CFB&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Output Feedback (&lt;a href="http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Output_Feedback_.28OFB.29" rel="nofollow"&gt;OFB&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Counter Mode (&lt;a href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Counter_.28CTR.29" rel="nofollow"&gt;CTR&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Galois/Counter Mode (&lt;a href="https://csrc.nist.gov/publications/detail/sp/800-38d/final" rel="nofollow"&gt;GCM&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Counter with Cipher Block Chaining-Message Authentication Code (&lt;a href="https://csrc.nist.gov/publications/detail/sp/800-38c/final" rel="nofollow"&gt;CCM&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-password-based-key-derivation-function" class="anchor" aria-hidden="true" href="#password-based-key-derivation-function"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Password-Based Key Derivation Function&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tools.ietf.org/html/rfc2898#section-5.1" rel="nofollow"&gt;PBKDF1&lt;/a&gt; (Password-Based Key Derivation Function 1)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tools.ietf.org/html/rfc2898#section-5.2" rel="nofollow"&gt;PBKDF2&lt;/a&gt; (Password-Based Key Derivation Function 2)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tools.ietf.org/html/rfc5869" rel="nofollow"&gt;HKDF&lt;/a&gt; (HMAC-based Extract-and-Expand Key Derivation Function)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tools.ietf.org/html/rfc7914" rel="nofollow"&gt;Scrypt&lt;/a&gt; (The scrypt Password-Based Key Derivation Function)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-data-padding" class="anchor" aria-hidden="true" href="#data-padding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data padding&lt;/h4&gt;
&lt;p&gt;PKCS#5
| &lt;a href="http://tools.ietf.org/html/rfc5652#section-6.3" rel="nofollow"&gt;PKCS#7&lt;/a&gt;
| &lt;a href="https://en.wikipedia.org/wiki/Padding_(cryptography)#Zero_padding" rel="nofollow"&gt;Zero padding&lt;/a&gt;
| &lt;a href="http://www.embedx.com/pdfs/ISO_STD_7816/info_isoiec7816-4%7Bed21.0%7Den.pdf" rel="nofollow"&gt;ISO78164&lt;/a&gt;
| No padding&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-authenticated-encryption-with-associated-data-aead" class="anchor" aria-hidden="true" href="#authenticated-encryption-with-associated-data-aead"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authenticated Encryption with Associated Data (AEAD)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tools.ietf.org/html/rfc7539#section-2.8" rel="nofollow"&gt;AEAD_CHACHA20_POLY1305&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/krzyzanowskim/CryptoSwift/issues/5"&gt;Why?&lt;/a&gt; &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/issues/5#issuecomment-53379391"&gt;Because I can&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-do-i-get-involved" class="anchor" aria-hidden="true" href="#how-do-i-get-involved"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I get involved?&lt;/h2&gt;
&lt;p&gt;You want to help, great! Go ahead and fork our repo, make your changes and send us a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information on how to help with CryptoSwift.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you found a bug, &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/issues"&gt;open an issue&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you have a feature request, &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/issues"&gt;open an issue&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install CryptoSwift, add it as a submodule to your project (on the top level project directory):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git submodule add https://github.com/krzyzanowskim/CryptoSwift.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is recommended to enable &lt;a href="https://swift.org/blog/whole-module-optimizations/" rel="nofollow"&gt;Whole-Module Optimization&lt;/a&gt; to gain better performance. Non-optimized build results in significantly worse performance.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-embedded-framework" class="anchor" aria-hidden="true" href="#embedded-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded Framework&lt;/h4&gt;
&lt;p&gt;Embedded frameworks require a minimum deployment target of iOS 8 or OS X Mavericks (10.9). Drag the &lt;code&gt;CryptoSwift.xcodeproj&lt;/code&gt; file into your Xcode project, and add appropriate framework as a dependency to your target. Now select your App and choose the General tab for the app target. Find &lt;em&gt;Embedded Binaries&lt;/em&gt; and press "+", then select &lt;code&gt;CryptoSwift.framework&lt;/code&gt; (iOS, OS X, watchOS or tvOS)&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/758033/10834511/25a26852-7e9a-11e5-8c01-6cc8f1838459.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/758033/10834511/25a26852-7e9a-11e5-8c01-6cc8f1838459.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sometimes "embedded framework" option is not available. In that case, you have to add new build phase for the target&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/758033/18415615/d5edabb0-77f8-11e6-8c94-f41d9fc2b8cb.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/758033/18415615/d5edabb0-77f8-11e6-8c94-f41d9fc2b8cb.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-ios-macos-watchos-tvos" class="anchor" aria-hidden="true" href="#ios-macos-watchos-tvos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS, macOS, watchOS, tvOS&lt;/h5&gt;
&lt;p&gt;In the project, you'll find &lt;a href="https://mxcl.dev/PromiseKit/news/2016/08/Multiplatform-Single-Scheme-Xcode-Projects/" rel="nofollow"&gt;single scheme&lt;/a&gt; for all platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CryptoSwift&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-swift-versions-support" class="anchor" aria-hidden="true" href="#swift-versions-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift versions support&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Swift 1.2: branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift12"&gt;swift12&lt;/a&gt; version &amp;lt;= 0.0.13&lt;/li&gt;
&lt;li&gt;Swift 2.1: branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift21"&gt;swift21&lt;/a&gt; version &amp;lt;= 0.2.3&lt;/li&gt;
&lt;li&gt;Swift 2.2, 2.3: branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift2"&gt;swift2&lt;/a&gt; version &amp;lt;= 0.5.2&lt;/li&gt;
&lt;li&gt;Swift 3.1, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift3"&gt;swift3&lt;/a&gt; version &amp;lt;= 0.6.9&lt;/li&gt;
&lt;li&gt;Swift 3.2, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift32"&gt;swift32&lt;/a&gt; version = 0.7.0&lt;/li&gt;
&lt;li&gt;Swift 4.0, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift4"&gt;swift4&lt;/a&gt; version &amp;lt;= 0.12.0&lt;/li&gt;
&lt;li&gt;Swift 4.2, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift42"&gt;swift42&lt;/a&gt; version &amp;lt;= 0.15.0&lt;/li&gt;
&lt;li&gt;Swift 5.0, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/swift5"&gt;swift5&lt;/a&gt; version &amp;lt;= 1.2.0&lt;/li&gt;
&lt;li&gt;Swift 5.1 and newer, branch &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/tree/master"&gt;master&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h4&gt;
&lt;p&gt;You can use &lt;a href="https://cocoapods.org/pods/CryptoSwift" rel="nofollow"&gt;CocoaPods&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;CryptoSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bear in mind that CocoaPods will build CryptoSwift without &lt;a href="https://swift.org/blog/whole-module-optimizations/" rel="nofollow"&gt;Whole-Module Optimization&lt;/a&gt; that may impact performance. You can change it manually after installation, or use &lt;a href="https://github.com/jedlewison/cocoapods-wholemodule"&gt;cocoapods-wholemodule&lt;/a&gt; plugin.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h4&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;.
Specify in Cartfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;krzyzanowskim/CryptoSwift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;carthage&lt;/code&gt; to build the framework and drag the built CryptoSwift.framework into your Xcode project. Follow &lt;a href="https://github.com/Carthage/Carthage#getting-started"&gt;build instructions&lt;/a&gt;. &lt;a href="https://github.com/krzyzanowskim/CryptoSwift/issues/492#issuecomment-330822874"&gt;Common issues&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h4&gt;
&lt;p&gt;You can use &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; and specify dependency in &lt;code&gt;Package.swift&lt;/code&gt; by adding this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/krzyzanowskim/CryptoSwift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMinor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See: &lt;a href="http://blog.krzyzanowskim.com/2016/08/09/package-swift-manual/" rel="nofollow"&gt;Package.swift - manual&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-accio" class="anchor" aria-hidden="true" href="#accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accio&lt;/h4&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt;. Specify in &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/krzyzanowskim/CryptoSwift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;accio update&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-how-to" class="anchor" aria-hidden="true" href="#how-to"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How-to&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#basics"&gt;Basics (data types, conversion, ...)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calculate-digest"&gt;Digest (MD5, SHA...)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#message-authenticators-1"&gt;Message authenticators (HMAC, CMAC...)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#password-based-key-derivation-functions"&gt;Password-Based Key Derivation Function (PBKDF2, ...)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hmac-based-key-derivation-function"&gt;HMAC-based Key Derivation Function (HKDF)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-padding"&gt;Data Padding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chacha20"&gt;ChaCha20&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rabbit"&gt;Rabbit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#blowfish"&gt;Blowfish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aes"&gt;AES - Advanced Encryption Standard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aes-gcm"&gt;AES-GCM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aead"&gt;Authenticated Encryption with Associated Data (AEAD)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;also check &lt;a href="/CryptoSwift.playground/Contents.swift"&gt;Playground&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-basics" class="anchor" aria-hidden="true" href="#basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basics&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;CryptoSwift&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CryptoSwift uses array of bytes aka &lt;code&gt;Array&amp;lt;UInt8&amp;gt;&lt;/code&gt; as a base type for all operations. Every data may be converted to a stream of bytes. You will find convenience functions that accept &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;Data&lt;/code&gt;, and it will be internally converted to the array of bytes.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-data-types-conversion" class="anchor" aria-hidden="true" href="#data-types-conversion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data types conversion&lt;/h5&gt;
&lt;p&gt;For your convenience, &lt;strong&gt;CryptoSwift&lt;/strong&gt; provides two functions to easily convert an array of bytes to &lt;code&gt;Data&lt;/code&gt; or &lt;code&gt;Data&lt;/code&gt; to an array of bytes:&lt;/p&gt;
&lt;p&gt;Data from bytes:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Data&lt;/span&gt;( [&lt;span class="pl-c1"&gt;0x01&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x02&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x03&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Data&lt;/code&gt; to &lt;code&gt;Array&amp;lt;UInt8&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-smi"&gt;bytes&lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,2,3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Hexadecimal" rel="nofollow"&gt;Hexadecimal&lt;/a&gt; encoding:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;hex&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0x010203&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1,2,3]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hex   &lt;span class="pl-k"&gt;=&lt;/span&gt; bytes.&lt;span class="pl-c1"&gt;toHexString&lt;/span&gt;()            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "010203"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build bytes out of &lt;code&gt;String&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bytes&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cipherkey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;bytes&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Array("cipherkey".utf8)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also... check out helpers that work with &lt;strong&gt;Base64&lt;/strong&gt; encoded data:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;aPf/i9th9iX+vf49eR7PYk2q7S5xmm3jkRLejgzHNJs=&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;decryptBase64ToString&lt;/span&gt;(cipher)
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;aPf/i9th9iX+vf49eR7PYk2q7S5xmm3jkRLejgzHNJs=&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;decryptBase64&lt;/span&gt;(cipher)
bytes.&lt;span class="pl-c1"&gt;toBase64&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-calculate-digest" class="anchor" aria-hidden="true" href="#calculate-digest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calculate Digest&lt;/h5&gt;
&lt;p&gt;Hashing a data or array of bytes (aka &lt;code&gt;Array&amp;lt;UInt8&amp;gt;&lt;/code&gt;)&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Hash struct usage &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; bytes&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0x01&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x02&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x03&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; digest &lt;span class="pl-k"&gt;=&lt;/span&gt; input.&lt;span class="pl-c1"&gt;md5&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; digest &lt;span class="pl-k"&gt;=&lt;/span&gt; Digest.&lt;span class="pl-c1"&gt;md5&lt;/span&gt;(bytes)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Data&lt;/span&gt;( [&lt;span class="pl-c1"&gt;0x01&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x02&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x03&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;md5&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;sha1&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;sha224&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;sha256&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;sha384&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; data.&lt;span class="pl-c1"&gt;sha512&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; digest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MD5&lt;/span&gt;()
    &lt;span class="pl-k"&gt;let&lt;/span&gt; partial1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; digest.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-c1"&gt;withBytes&lt;/span&gt;: [&lt;span class="pl-c1"&gt;0x31&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x32&lt;/span&gt;])
    &lt;span class="pl-k"&gt;let&lt;/span&gt; partial2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; digest.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-c1"&gt;withBytes&lt;/span&gt;: [&lt;span class="pl-c1"&gt;0x33&lt;/span&gt;])
    &lt;span class="pl-k"&gt;let&lt;/span&gt; result &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; digest.&lt;span class="pl-c1"&gt;finish&lt;/span&gt;()
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; { }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hashing a String and printing result&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hash &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;md5&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "123".bytes.md5()&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-calculate-crc" class="anchor" aria-hidden="true" href="#calculate-crc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calculate CRC&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;bytes.&lt;span class="pl-c1"&gt;crc16&lt;/span&gt;()
data.&lt;span class="pl-c1"&gt;crc16&lt;/span&gt;()

bytes.&lt;span class="pl-c1"&gt;crc32&lt;/span&gt;()
data.&lt;span class="pl-c1"&gt;crc32&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-message-authenticators-1" class="anchor" aria-hidden="true" href="#message-authenticators-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Message authenticators&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Calculate Message Authentication Code (MAC) for message&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; key&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;9&lt;/span&gt;,&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-k"&gt;...&lt;/span&gt;]

&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Poly1305&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key).&lt;span class="pl-c1"&gt;authenticate&lt;/span&gt;(bytes)
&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;HMAC&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;variant&lt;/span&gt;: .&lt;span class="pl-smi"&gt;sha256&lt;/span&gt;).&lt;span class="pl-c1"&gt;authenticate&lt;/span&gt;(bytes)
&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;CMAC&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key).&lt;span class="pl-c1"&gt;authenticate&lt;/span&gt;(bytes)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-password-based-key-derivation-functions" class="anchor" aria-hidden="true" href="#password-based-key-derivation-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Password-Based Key Derivation Functions&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; password&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s33krit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; salt&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nacllcan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; PKCS5.&lt;span class="pl-c1"&gt;PBKDF2&lt;/span&gt;(&lt;span class="pl-c1"&gt;password&lt;/span&gt;: password, &lt;span class="pl-c1"&gt;salt&lt;/span&gt;: salt, &lt;span class="pl-c1"&gt;iterations&lt;/span&gt;: &lt;span class="pl-c1"&gt;4096&lt;/span&gt;, &lt;span class="pl-c1"&gt;keyLength&lt;/span&gt;: &lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-c1"&gt;variant&lt;/span&gt;: .&lt;span class="pl-smi"&gt;sha256&lt;/span&gt;).&lt;span class="pl-c1"&gt;calculate&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; password&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s33krit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; salt&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nacllcan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Scrypt implementation does not implement work parallelization, so `p` parameter will&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; increase the work time even in multicore systems&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Scrypt&lt;/span&gt;(&lt;span class="pl-c1"&gt;password&lt;/span&gt;: password, &lt;span class="pl-c1"&gt;salt&lt;/span&gt;: salt, &lt;span class="pl-c1"&gt;dkLen&lt;/span&gt;: &lt;span class="pl-c1"&gt;64&lt;/span&gt;, &lt;span class="pl-c1"&gt;N&lt;/span&gt;: &lt;span class="pl-c1"&gt;16384&lt;/span&gt;, &lt;span class="pl-c1"&gt;r&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;p&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;).&lt;span class="pl-c1"&gt;calculate&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-hmac-based-key-derivation-function" class="anchor" aria-hidden="true" href="#hmac-based-key-derivation-function"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HMAC-based Key Derivation Function&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; password&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s33krit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; salt&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nacllcan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;HKDF&lt;/span&gt;(&lt;span class="pl-c1"&gt;password&lt;/span&gt;: password, &lt;span class="pl-c1"&gt;salt&lt;/span&gt;: salt, &lt;span class="pl-c1"&gt;variant&lt;/span&gt;: .&lt;span class="pl-smi"&gt;sha256&lt;/span&gt;).&lt;span class="pl-c1"&gt;calculate&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-data-padding-1" class="anchor" aria-hidden="true" href="#data-padding-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Padding&lt;/h5&gt;
&lt;p&gt;Some content-encryption algorithms assume the input length is a multiple of &lt;code&gt;k&lt;/code&gt; octets, where &lt;code&gt;k&lt;/code&gt; is greater than one. For such algorithms, the input shall be padded.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Padding.&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: bytes, &lt;span class="pl-c1"&gt;blockSize&lt;/span&gt;: AES.&lt;span class="pl-smi"&gt;blockSize&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-working-with-ciphers" class="anchor" aria-hidden="true" href="#working-with-ciphers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working with Ciphers&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-chacha20" class="anchor" aria-hidden="true" href="#chacha20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ChaCha20&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;ChaCha20&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv).&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(message)
&lt;span class="pl-k"&gt;let&lt;/span&gt; decrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;ChaCha20&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv).&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-rabbit" class="anchor" aria-hidden="true" href="#rabbit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rabbit&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Rabbit&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv).&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(message)
&lt;span class="pl-k"&gt;let&lt;/span&gt; decrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Rabbit&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv).&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-blowfish" class="anchor" aria-hidden="true" href="#blowfish"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blowfish&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Blowfish&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;).&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(message)
&lt;span class="pl-k"&gt;let&lt;/span&gt; decrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Blowfish&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;).&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-aes" class="anchor" aria-hidden="true" href="#aes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AES&lt;/h5&gt;
&lt;p&gt;Notice regarding padding: &lt;em&gt;Manual padding of data is optional, and CryptoSwift is using PKCS7 padding by default. If you need to manually disable/enable padding, you can do this by setting parameter for &lt;strong&gt;AES&lt;/strong&gt; class&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Variant of AES encryption (AES-128, AES-192, AES-256) depends on given key length:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AES-128 = 16 bytes&lt;/li&gt;
&lt;li&gt;AES-192 = 24 bytes&lt;/li&gt;
&lt;li&gt;AES-256 = 32 bytes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AES-256 example&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-k"&gt;...&lt;/span&gt;,&lt;span class="pl-c1"&gt;32&lt;/span&gt;], &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-k"&gt;...&lt;/span&gt;,&lt;span class="pl-c1"&gt;16&lt;/span&gt;]), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-all-at-once" class="anchor" aria-hidden="true" href="#all-at-once"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;All at once&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; aes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;keykeykeykeykeyk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;drowssapdrowssap&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; aes128&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; ciphertext &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; aes.&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(&lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nullam quis risus eget urna mollis ornare vel eu leo.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;))
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; { }&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-incremental-updates" class="anchor" aria-hidden="true" href="#incremental-updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Incremental updates&lt;/h6&gt;
&lt;p&gt;Incremental operations use instance of Cryptor and encrypt/decrypt one part at a time, this way you can save on memory for large files.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; encryptor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;keykeykeykeykeyk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;drowssapdrowssap&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;makeEncryptor&lt;/span&gt;()

    &lt;span class="pl-k"&gt;var&lt;/span&gt; ciphertext &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; aggregate partial results&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    ciphertext &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; encryptor.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-c1"&gt;withBytes&lt;/span&gt;: &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nullam quis risus &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;))
    ciphertext &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; encryptor.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-c1"&gt;withBytes&lt;/span&gt;: &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;eget urna mollis &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;))
    ciphertext &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; encryptor.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-c1"&gt;withBytes&lt;/span&gt;: &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ornare vel eu leo.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;))
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; finish at the end&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    ciphertext &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; encryptor.&lt;span class="pl-c1"&gt;finish&lt;/span&gt;()

    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(ciphertext.&lt;span class="pl-c1"&gt;toHexString&lt;/span&gt;())
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="/CryptoSwift.playground/Contents.swift"&gt;Playground&lt;/a&gt; for sample code that work with stream.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-aes-advanced-usage" class="anchor" aria-hidden="true" href="#aes-advanced-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AES Advanced usage&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; input&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;9&lt;/span&gt;]

&lt;span class="pl-k"&gt;let&lt;/span&gt; key&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;,&lt;span class="pl-c1"&gt;0x00&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; iv&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Random bytes of `AES.blockSize` length&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;).&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(input)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; decrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;pkcs7&lt;/span&gt;).&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AES without data padding&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; input&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;9&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret0key000000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;), &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: &lt;span class="pl-c1"&gt;CBC&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0123456789012345&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;utf8&lt;/span&gt;)), &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;noPadding&lt;/span&gt;).&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(input)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using convenience extensions&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; plain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Data&lt;/span&gt;( [&lt;span class="pl-c1"&gt;0x01&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x02&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x03&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; plain.&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(&lt;span class="pl-c1"&gt;ChaCha20&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv))
&lt;span class="pl-k"&gt;let&lt;/span&gt; decrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; encrypted.&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(&lt;span class="pl-c1"&gt;ChaCha20&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv))&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-aes-gcm" class="anchor" aria-hidden="true" href="#aes-gcm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AES-GCM&lt;/h5&gt;
&lt;p&gt;The result of Galois/Counter Mode (GCM) encryption is ciphertext and &lt;strong&gt;authentication tag&lt;/strong&gt;, that is later used to decryption.&lt;/p&gt;
&lt;p&gt;encryption&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In combined mode, the authentication tag is directly appended to the encrypted message. This is usually what you want.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; gcm &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;GCM&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv, &lt;span class="pl-c1"&gt;mode&lt;/span&gt;: .&lt;span class="pl-smi"&gt;combined&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; aes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: gcm, &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;noPadding&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; encrypted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; aes.&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(plaintext)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; tag &lt;span class="pl-k"&gt;=&lt;/span&gt; gcm.&lt;span class="pl-smi"&gt;authenticationTag&lt;/span&gt;
&lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;decryption&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In combined mode, the authentication tag is appended to the encrypted message. This is usually what you want.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; gcm &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;GCM&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv, &lt;span class="pl-c1"&gt;mode&lt;/span&gt;: .&lt;span class="pl-smi"&gt;combined&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; aes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: gcm, &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;noPadding&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; aes.&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: GCM instance is not intended to be reused. So you can't use the same &lt;code&gt;GCM&lt;/code&gt; instance from encoding to also perform decoding.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-aes-ccm" class="anchor" aria-hidden="true" href="#aes-ccm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AES-CCM&lt;/h5&gt;
&lt;p&gt;The result of Counter with Cipher Block Chaining-Message Authentication Code encryption is ciphertext and &lt;strong&gt;authentication tag&lt;/strong&gt;, that is later used to decryption.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The authentication tag is appended to the encrypted message.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	&lt;span class="pl-k"&gt;let&lt;/span&gt; tagLength &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;
	&lt;span class="pl-k"&gt;let&lt;/span&gt; ccm &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CCM&lt;/span&gt;(&lt;span class="pl-c1"&gt;iv&lt;/span&gt;: iv, &lt;span class="pl-c1"&gt;tagLength&lt;/span&gt;: tagLength, &lt;span class="pl-c1"&gt;messageLength&lt;/span&gt;: ciphertext.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; tagLength, &lt;span class="pl-c1"&gt;additionalAuthenticatedData&lt;/span&gt;: data)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; aes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;AES&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;blockMode&lt;/span&gt;: ccm, &lt;span class="pl-c1"&gt;padding&lt;/span&gt;: .&lt;span class="pl-smi"&gt;noPadding&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; aes.&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(encrypted)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; failed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check documentation or CCM specification for valid parameters for CCM.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-aead" class="anchor" aria-hidden="true" href="#aead"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AEAD&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; encrypt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; AEADChaCha20Poly1305.&lt;span class="pl-c1"&gt;encrypt&lt;/span&gt;(plaintext, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: nonce, &lt;span class="pl-c1"&gt;authenticationHeader&lt;/span&gt;: header)
&lt;span class="pl-k"&gt;let&lt;/span&gt; decrypt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; AEADChaCha20Poly1305.&lt;span class="pl-c1"&gt;decrypt&lt;/span&gt;(ciphertext, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: key, &lt;span class="pl-c1"&gt;iv&lt;/span&gt;: nonce, &lt;span class="pl-c1"&gt;authenticationHeader&lt;/span&gt;: header, &lt;span class="pl-c1"&gt;authenticationTag&lt;/span&gt;: tagArr&lt;span class="pl-k"&gt;:&lt;/span&gt; tag)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;CryptoSwift is owned and maintained by &lt;a href="http://www.krzyzanowskim.com" rel="nofollow"&gt;Marcin Krzyżanowski&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can follow me on Twitter at &lt;a href="http://twitter.com/krzyzanowskim" rel="nofollow"&gt;@krzyzanowskim&lt;/a&gt; for project updates and releases.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-cryptography-notice" class="anchor" aria-hidden="true" href="#cryptography-notice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cryptography Notice&lt;/h1&gt;
&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href="http://www.wassenaar.org/" rel="nofollow"&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (C) 2014-2017 Marcin Krzyżanowski &lt;a href="mailto:marcin@krzyzanowskim.com"&gt;marcin@krzyzanowskim.com&lt;/a&gt;
This software is provided 'as-is', without any express or implied warranty.&lt;/p&gt;
&lt;p&gt;In no event will the authors be held liable for any damages arising from the use of this software.&lt;/p&gt;
&lt;p&gt;Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, &lt;strong&gt;an acknowledgment in the product documentation is required&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.&lt;/li&gt;
&lt;li&gt;This notice may not be removed or altered from any source or binary distribution.&lt;/li&gt;
&lt;li&gt;Redistributions of any form whatsoever must retain the following acknowledgment: 'This product includes software developed by the "Marcin Krzyzanowski" (&lt;a href="http://krzyzanowskim.com/" rel="nofollow"&gt;http://krzyzanowskim.com/&lt;/a&gt;).'&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;p&gt;See &lt;a href="./CHANGELOG"&gt;CHANGELOG&lt;/a&gt; file.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>krzyzanowskim</author><guid isPermaLink="false">https://github.com/krzyzanowskim/CryptoSwift</guid><pubDate>Sat, 21 Dec 2019 00:21:00 GMT</pubDate></item><item><title>kishikawakatsumi/KeychainAccess #22 in Swift, Today</title><link>https://github.com/kishikawakatsumi/KeychainAccess</link><description>&lt;p&gt;&lt;i&gt;Simple Swift wrapper for Keychain that works on iOS, watchOS, tvOS and macOS.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-keychainaccess" class="anchor" aria-hidden="true" href="#keychainaccess"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KeychainAccess&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/kishikawakatsumi/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/afdbd44171d9bfa54b62c676cb0eb3950338fe39/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6b697368696b6177616b617473756d692f4b6579636861696e4163636573732e737667" alt="CI Status" data-canonical-src="http://img.shields.io/travis/kishikawakatsumi/KeychainAccess.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/kishikawakatsumi/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/97a6fd2a7940f2bb66a4ab96e5dd915937af5127/68747470733a2f2f636f6465636f762e696f2f67682f6b697368696b6177616b617473756d692f4b6579636861696e4163636573732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/kishikawakatsumi/KeychainAccess/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/package-manager" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/378b1808fd201a4bb4c9a2e8f78ac6322bca15f2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53504d2d737570706f727465642d4445354334332e7376673f7374796c653d666c6174" alt="SPM supported" data-canonical-src="https://img.shields.io/badge/SPM-supported-DE5C43.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoadocs.org/docsets/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f820d6fc06ee07b623567703e759f2a050efe2db/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4b6579636861696e4163636573732e737667" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/KeychainAccess.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoadocs.org/docsets/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/059116fbd9f38b9b7deb2a0ab0d98b3dd2c80e14/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4b6579636861696e4163636573732e737667" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/KeychainAccess.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;KeychainAccess is a simple Swift wrapper for Keychain that works on iOS and OS X. Makes using Keychain APIs extremely easy and much more palatable to use in Swift.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/01.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/01.png" width="320px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/02.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/02.png" width="320px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/03.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/03.png" width="320px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bulb-features" class="anchor" aria-hidden="true" href="#bulb-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Simple interface&lt;/li&gt;
&lt;li&gt;Support access group&lt;/li&gt;
&lt;li&gt;&lt;a href="#accessibility"&gt;Support accessibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#icloud_sharing"&gt;Support iCloud sharing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#touch_id_integration"&gt;Support TouchID and Keychain integration (iOS 8+)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#shared_web_credentials"&gt;Support Shared Web Credentials (iOS 8+)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Works on both iOS &amp;amp; macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;watchOS and tvOS are supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#requirements"&gt;Mac Catalyst is supported&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#requirements"&gt;Swift 3, 4 and 5 compatible&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-book-usage" class="anchor" aria-hidden="true" href="#book-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; Usage&lt;/h2&gt;
&lt;h5&gt;&lt;a id="user-content-eyes-see-also" class="anchor" aria-hidden="true" href="#eyes-see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="eyes" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f440.png"&gt;👀&lt;/g-emoji&gt; See also:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kishikawakatsumi/KeychainAccess/tree/master/Examples/Example-iOS"&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; iOS Example Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-key-basics" class="anchor" aria-hidden="true" href="#key-basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Basics&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-saving-application-password" class="anchor" aria-hidden="true" href="#saving-application-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Saving Application Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-saving-internet-password" class="anchor" aria-hidden="true" href="#saving-internet-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Saving Internet Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)
keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-instantiation" class="anchor" aria-hidden="true" href="#key-instantiation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Instantiation&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-create-keychain-for-application-password" class="anchor" aria-hidden="true" href="#create-keychain-for-application-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Keychain for Application Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;accessGroup&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12ABCD3E4F.shared&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-create-keychain-for-internet-password" class="anchor" aria-hidden="true" href="#create-keychain-for-internet-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Keychain for Internet Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;, &lt;span class="pl-c1"&gt;authenticationType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;htmlForm&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-adding-an-item" class="anchor" aria-hidden="true" href="#key-adding-an-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Adding an item&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-subscripting" class="anchor" aria-hidden="true" href="#subscripting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-for-string" class="anchor" aria-hidden="true" href="#for-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for String&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-nsdata" class="anchor" aria-hidden="true" href="#for-nsdata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for NSData&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSData&lt;/span&gt;(&lt;span class="pl-c1"&gt;contentsOfFile&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret.bin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-set-method" class="anchor" aria-hidden="true" href="#set-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set method&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;error handling&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-obtaining-an-item" class="anchor" aria-hidden="true" href="#key-obtaining-an-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Obtaining an item&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-subscripting-1" class="anchor" aria-hidden="true" href="#subscripting-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-for-string-if-the-value-is-nsdata-attempt-to-convert-to-string" class="anchor" aria-hidden="true" href="#for-string-if-the-value-is-nsdata-attempt-to-convert-to-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for String (If the value is NSData, attempt to convert to String)&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-nsdata-1" class="anchor" aria-hidden="true" href="#for-nsdata-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for NSData&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; secretData &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-get-methods" class="anchor" aria-hidden="true" href="#get-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;get methods&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-as-string" class="anchor" aria-hidden="true" href="#as-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;as String&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;getString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-as-nsdata" class="anchor" aria-hidden="true" href="#as-nsdata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;as NSData&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;getData&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-removing-an-item" class="anchor" aria-hidden="true" href="#key-removing-an-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Removing an item&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-subscripting-2" class="anchor" aria-hidden="true" href="#subscripting-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-remove-method" class="anchor" aria-hidden="true" href="#remove-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;remove method&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-set-label-and-comment" class="anchor" aria-hidden="true" href="#key-set-label-and-comment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Set Label and Comment&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)
&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;label&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com (kishikawakatsumi)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;comment&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github access token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-obtaining-other-attributes" class="anchor" aria-hidden="true" href="#key-obtaining-other-attributes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Obtaining Other Attributes&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-persistentref" class="anchor" aria-hidden="true" href="#persistentref"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PersistentRef&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; persistentRef &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;attributes&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;persistentRef&lt;/span&gt;
&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-creation-date" class="anchor" aria-hidden="true" href="#creation-date"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creation Date&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; creationDate &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;attributes&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;creationDate&lt;/span&gt;
&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-all-attributes" class="anchor" aria-hidden="true" href="#all-attributes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;All Attributes&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; attributes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-c1"&gt;$0&lt;/span&gt; }
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;comment&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;label&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;creator&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-subscripting-3" class="anchor" aria-hidden="true" href="#subscripting-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; attributes &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;attributes&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes.&lt;span class="pl-smi"&gt;comment&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes.&lt;span class="pl-smi"&gt;label&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes.&lt;span class="pl-smi"&gt;creator&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-configuration-accessibility-sharing-icloud-sync" class="anchor" aria-hidden="true" href="#key-configuration-accessibility-sharing-icloud-sync"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Configuration (Accessibility, Sharing, iCloud Sync)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Provides fluent interfaces&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;label&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com (kishikawakatsumi)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;synchronizable&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;afterFirstUnlock&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content--accessibility" class="anchor" aria-hidden="true" href="#-accessibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-accessibility"&gt; Accessibility&lt;/a&gt;&lt;/h4&gt;&lt;a name="user-content-accessibility"&gt;
&lt;h5&gt;&lt;a id="user-content-default-accessibility-matches-background-application-ksecattraccessibleafterfirstunlock" class="anchor" aria-hidden="true" href="#default-accessibility-matches-background-application-ksecattraccessibleafterfirstunlock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default accessibility matches background application (=kSecAttrAccessibleAfterFirstUnlock)&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-background-application" class="anchor" aria-hidden="true" href="#for-background-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For background application&lt;/h5&gt;
&lt;h6&gt;&lt;a id="user-content-creating-instance" class="anchor" aria-hidden="true" href="#creating-instance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating instance&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;afterFirstUnlock&lt;/span&gt;)

keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-one-shot" class="anchor" aria-hidden="true" href="#one-shot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-shot&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;afterFirstUnlock&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-foreground-application" class="anchor" aria-hidden="true" href="#for-foreground-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For foreground application&lt;/h5&gt;
&lt;h6&gt;&lt;a id="user-content-creating-instance-1" class="anchor" aria-hidden="true" href="#creating-instance-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating instance&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenUnlocked&lt;/span&gt;)

keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-one-shot-1" class="anchor" aria-hidden="true" href="#one-shot-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-shot&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenUnlocked&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-couple-sharing-keychain-items" class="anchor" aria-hidden="true" href="#couple-sharing-keychain-items"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="couple" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f46b.png"&gt;👫&lt;/g-emoji&gt; Sharing Keychain items&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;accessGroup&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12ABCD3E4F.shared&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;h4&gt;&lt;a id="user-content--arrows_counterclockwise-synchronizing-keychain-items-with-icloud" class="anchor" aria-hidden="true" href="#-arrows_counterclockwise-synchronizing-keychain-items-with-icloud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-accessibility"&gt;&lt;/a&gt;&lt;a name="user-content-icloud_sharing"&gt; &lt;g-emoji class="g-emoji" alias="arrows_counterclockwise" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f504.png"&gt;🔄&lt;/g-emoji&gt; Synchronizing Keychain items with iCloud&lt;/a&gt;&lt;/h4&gt;&lt;a name="user-content-icloud_sharing"&gt;
&lt;h6&gt;&lt;a id="user-content-creating-instance-2" class="anchor" aria-hidden="true" href="#creating-instance-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating instance&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;synchronizable&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)

keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-one-shot-2" class="anchor" aria-hidden="true" href="#one-shot-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-shot&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;synchronizable&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;h3&gt;&lt;a id="user-content--fu-touch-id-face-id-integration" class="anchor" aria-hidden="true" href="#-fu-touch-id-face-id-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-icloud_sharing"&gt;&lt;/a&gt;&lt;a name="user-content-touch_id_integration"&gt; &lt;g-emoji class="g-emoji" alias="middle_finger" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f595.png"&gt;🖕&lt;/g-emoji&gt; Touch ID (Face ID) integration&lt;/a&gt;&lt;/h3&gt;&lt;a name="user-content-touch_id_integration"&gt;
&lt;p&gt;&lt;strong&gt;Any Operation that require authentication must be run in the background thread.&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;If you run in the main thread, UI thread will lock for the system to try to display the authentication dialog.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To use Face ID, add &lt;code&gt;NSFaceIDUsageDescription&lt;/code&gt; key to your &lt;code&gt;Info.plist&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-adding-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-adding-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Adding a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;If you want to store the Touch ID protected Keychain item, specify &lt;code&gt;accessibility&lt;/code&gt; and &lt;code&gt;authenticationPolicy&lt;/code&gt; attributes.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Should be the secret invalidated when passcode is removed? If not then use `.WhenUnlocked`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
            .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenPasscodeSetThisDeviceOnly&lt;/span&gt;, &lt;span class="pl-c1"&gt;authenticationPolicy&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userPresence&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-updating-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-updating-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Updating a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;The same way as when adding.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Do not run in the main thread if there is a possibility that the item you are trying to add already exists, and protected.&lt;/strong&gt;
&lt;strong&gt;Because updating protected items requires authentication.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Additionally, you want to show custom authentication prompt message when updating, specify an &lt;code&gt;authenticationPrompt&lt;/code&gt; attribute.
If the item not protected, the &lt;code&gt;authenticationPrompt&lt;/code&gt; parameter just be ignored.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Should be the secret invalidated when passcode is removed? If not then use `.WhenUnlocked`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
            .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenPasscodeSetThisDeviceOnly&lt;/span&gt;, &lt;span class="pl-c1"&gt;authenticationPolicy&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userPresence&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;authenticationPrompt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Authenticate to update your access token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-obtaining-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-obtaining-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Obtaining a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;The same way as when you get a normal item. It will be displayed automatically Touch ID or passcode authentication If the item you try to get is protected.&lt;br&gt;
If you want to show custom authentication prompt message, specify an &lt;code&gt;authenticationPrompt&lt;/code&gt; attribute.
If the item not protected, the &lt;code&gt;authenticationPrompt&lt;/code&gt; parameter just be ignored.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
            .&lt;span class="pl-c1"&gt;authenticationPrompt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Authenticate to login to server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;password: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;password&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-removing-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-removing-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Removing a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;The same way as when you remove a normal item.
There is no way to show Touch ID or passcode authentication when removing Keychain items.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;h3&gt;&lt;a id="user-content--key-shared-web-credentials" class="anchor" aria-hidden="true" href="#-key-shared-web-credentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-touch_id_integration"&gt;&lt;/a&gt;&lt;a name="user-content-shared_web_credentials"&gt; &lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Shared Web Credentials&lt;/a&gt;&lt;/h3&gt;&lt;a name="user-content-shared_web_credentials"&gt;
&lt;/a&gt;&lt;blockquote&gt;&lt;a name="user-content-shared_web_credentials"&gt;
&lt;/a&gt;&lt;p&gt;&lt;a name="user-content-shared_web_credentials"&gt;Shared web credentials is a programming interface that enables native iOS apps to share credentials with their website counterparts. For example, a user may log in to a website in Safari, entering a user name and password, and save those credentials using the iCloud Keychain. Later, the user may run a native app from the same developer, and instead of the app requiring the user to reenter a user name and password, shared web credentials gives it access to the credentials that were entered earlier in Safari. The user can also create new accounts, update passwords, or delete her account from within the app. These changes are then saved and used by Safari.&lt;br&gt;
&lt;/a&gt;&lt;a href="https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/" rel="nofollow"&gt;https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://www.kishikawakatsumi.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;HTTPS&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; username &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi@mac.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; First, check the credential in the app's Keychain&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(username) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If found password in the Keychain,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; then log into the server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If not found password in the Keychain,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; try to read from Shared Web Credentials&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    keychain.&lt;span class="pl-c1"&gt;getSharedPassword&lt;/span&gt;(username) { (password, error) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; () &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; password &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If found password in the Shared Web Credentials,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; then log into the server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and save the password to the Keychain&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            keychain[username] &lt;span class="pl-k"&gt;=&lt;/span&gt; password
        } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If not found password either in the Keychain also Shared Web Credentials,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prompt for username and password&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Log into server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If the login is successful,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; save the credentials to both the Keychain and the Shared Web Credentials.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            keychain[username] &lt;span class="pl-k"&gt;=&lt;/span&gt; inputPassword
            keychain.&lt;span class="pl-c1"&gt;setSharedPassword&lt;/span&gt;(inputPassword, &lt;span class="pl-c1"&gt;account&lt;/span&gt;: username)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-request-all-associated-domains-credentials" class="anchor" aria-hidden="true" href="#request-all-associated-domains-credentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Request all associated domain's credentials&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Keychain.&lt;span class="pl-smi"&gt;requestSharedWebCredential&lt;/span&gt; { (credentials, error) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; () &lt;span class="pl-k"&gt;in&lt;/span&gt;

}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-generate-strong-random-password" class="anchor" aria-hidden="true" href="#generate-strong-random-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate strong random password&lt;/h4&gt;
&lt;p&gt;Generate strong random password that is in the same format used by Safari autofill (xxx-xxx-xxx-xxx).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; password &lt;span class="pl-k"&gt;=&lt;/span&gt; Keychain.&lt;span class="pl-c1"&gt;generatePassword&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; =&amp;gt; Nhu-GKm-s3n-pMx&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-how-to-set-up-shared-web-credentials" class="anchor" aria-hidden="true" href="#how-to-set-up-shared-web-credentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to set up Shared Web Credentials&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add a com.apple.developer.associated-domains entitlement to your app. This entitlement must include all the domains with which you want to share credentials.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add an apple-app-site-association file to your website. This file must include application identifiers for all the apps with which the site wants to share credentials, and it must be properly signed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When the app is installed, the system downloads and verifies the site association file for each of its associated domains. If the verification is successful, the app is associated with the domain.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;More details:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/" rel="nofollow"&gt;https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-key-debugging" class="anchor" aria-hidden="true" href="#key-debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Debugging&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-display-all-stored-items-if-print-keychain-object" class="anchor" aria-hidden="true" href="#display-all-stored-items-if-print-keychain-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Display all stored items if print keychain object&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;keychain&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;=&amp;gt;
[
  [authenticationType: default, key: kishikawakatsumi, server: github.com, class: internetPassword, protocol: https]
  [authenticationType: default, key: hirohamada, server: github.com, class: internetPassword, protocol: https]
  [authenticationType: default, key: honeylemon, server: github.com, class: internetPassword, protocol: https]
]
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-obtaining-all-stored-keys" class="anchor" aria-hidden="true" href="#obtaining-all-stored-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obtaining all stored keys&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; keys &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;allKeys&lt;/span&gt;()
&lt;span class="pl-k"&gt;for&lt;/span&gt; key &lt;span class="pl-k"&gt;in&lt;/span&gt; keys {
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;key: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;key&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;=&amp;gt;
key: kishikawakatsumi
key: hirohamada
key: honeylemon
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-obtaining-all-stored-items" class="anchor" aria-hidden="true" href="#obtaining-all-stored-items"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obtaining all stored items&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; items &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;allItems&lt;/span&gt;()
&lt;span class="pl-k"&gt;for&lt;/span&gt; item &lt;span class="pl-k"&gt;in&lt;/span&gt; items {
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;item: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;=&amp;gt;
item: [authenticationType: Default, key: kishikawakatsumi, server: github.com, class: InternetPassword, protocol: https]
item: [authenticationType: Default, key: hirohamada, server: github.com, class: InternetPassword, protocol: https]
item: [authenticationType: Default, key: honeylemon, server: github.com, class: InternetPassword, protocol: https]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-keychain-sharing-capability" class="anchor" aria-hidden="true" href="#keychain-sharing-capability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keychain sharing capability&lt;/h2&gt;
&lt;p&gt;If you encounter the error below, you need to add an &lt;code&gt;Keychain.entitlements&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;OSStatus error:[-34018] Internal error when a required entitlement isn't present, client has neither application-identifier nor keychain-access-groups entitlements.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/40610/67627108-1a7f2f80-f891-11e9-97bc-7f7313cb63d1.png"&gt;&lt;img alt="Screen Shot 2019-10-27 at 8 08 50" src="https://user-images.githubusercontent.com/40610/67627108-1a7f2f80-f891-11e9-97bc-7f7313cb63d1.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/40610/67627072-333b1580-f890-11e9-9feb-bf507abc2724.png"&gt;&lt;img src="https://user-images.githubusercontent.com/40610/67627072-333b1580-f890-11e9-9feb-bf507abc2724.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;OS&lt;/th&gt;
&lt;th&gt;Swift&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v1.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+&lt;/td&gt;
&lt;td&gt;1.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v1.2.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+&lt;/td&gt;
&lt;td&gt;1.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.0.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+, watchOS 2+&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+, watchOS 2+&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.2.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;2.0, 2.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.3.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;2.0, 2.1, 2.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.4.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;2.2, 2.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v3.0.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;3.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v3.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v3.2.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2, 5.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v4.0.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2, 5.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v4.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 3+, tvOS 9+, Mac Catalyst 13+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2, 5.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;KeychainAccess is available through &lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;. To install
it, simply add the following lines to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;KeychainAccess&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;KeychainAccess is available through &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;. To install
it, simply add the following line to your Cartfile:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;github "kishikawakatsumi/KeychainAccess"&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;KeychainAccess is also available through &lt;a href="https://github.com/apple/swift-package-manager/"&gt;Swift Package Manager&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h4&gt;
&lt;p&gt;Select &lt;code&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency...&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/40610/67627000-2833b580-f88f-11e9-89ef-18819b1a6c67.png"&gt;&lt;img src="https://user-images.githubusercontent.com/40610/67627000-2833b580-f88f-11e9-89ef-18819b1a6c67.png" width="800px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cli" class="anchor" aria-hidden="true" href="#cli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CLI&lt;/h4&gt;
&lt;p&gt;First, create &lt;code&gt;Package.swift&lt;/code&gt; that its package declaration includes:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;products&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;library&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ],
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/kishikawakatsumi/KeychainAccess.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    ],
    &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;KeychainAccess&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, type&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-to-manually-add-to-your-project" class="anchor" aria-hidden="true" href="#to-manually-add-to-your-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To manually add to your project&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;Lib/KeychainAccess.xcodeproj&lt;/code&gt; to your project&lt;/li&gt;
&lt;li&gt;Link &lt;code&gt;KeychainAccess.framework&lt;/code&gt; with your target&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;Copy Files Build Phase&lt;/code&gt; to include the framework to your application bundle&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href="https://github.com/kishikawakatsumi/KeychainAccess/tree/master/Examples/Example-iOS"&gt;iOS Example Project&lt;/a&gt; as reference.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/Installation.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/Installation.png" width="800px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;kishikawa katsumi, &lt;a href="mailto:kishikawakatsumi@mac.com"&gt;kishikawakatsumi@mac.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;KeychainAccess is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kishikawakatsumi</author><guid isPermaLink="false">https://github.com/kishikawakatsumi/KeychainAccess</guid><pubDate>Sat, 21 Dec 2019 00:22:00 GMT</pubDate></item><item><title>stencilproject/Stencil #23 in Swift, Today</title><link>https://github.com/stencilproject/Stencil</link><description>&lt;p&gt;&lt;i&gt;Stencil is a simple and powerful template language for Swift.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-stencil" class="anchor" aria-hidden="true" href="#stencil"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stencil&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/stencilproject/Stencil" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e019a06a02423f0a63ab29c28ed5bd2d8a9af14/68747470733a2f2f7472617669732d63692e6f72672f7374656e63696c70726f6a6563742f5374656e63696c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/stencilproject/Stencil.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stencil is a simple and powerful template language for Swift. It provides a
syntax similar to Django and Mustache. If you're familiar with these, you will
feel right at home with Stencil.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;div class="highlight highlight-text-html-django"&gt;&lt;pre&gt;There are {{ articles.count }} articles.

&amp;lt;&lt;span class="pl-ent"&gt;ul&lt;/span&gt;&amp;gt;
  &lt;span class="pl-e"&gt;{%&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-s"&gt;article&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-s"&gt;articles&lt;/span&gt; &lt;span class="pl-e"&gt;%}&lt;/span&gt;
    &amp;lt;&lt;span class="pl-ent"&gt;li&lt;/span&gt;&amp;gt;{{ article.title }} by {{ article.author }}&amp;lt;/&lt;span class="pl-ent"&gt;li&lt;/span&gt;&amp;gt;
  &lt;span class="pl-e"&gt;{%&lt;/span&gt; &lt;span class="pl-k"&gt;endfor&lt;/span&gt; &lt;span class="pl-e"&gt;%}&lt;/span&gt;
&amp;lt;/&lt;span class="pl-ent"&gt;ul&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Stencil&lt;/span&gt;

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Article&lt;/span&gt; {
  &lt;span class="pl-k"&gt;let&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; author&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; context &lt;span class="pl-k"&gt;=&lt;/span&gt; [
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;articles&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    &lt;span class="pl-c1"&gt;Article&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Migrating from OCUnit to XCTest&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;author&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kyle Fuller&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;Article&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Memory Management with ARC&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;author&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kyle Fuller&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
  ]
]

&lt;span class="pl-k"&gt;let&lt;/span&gt; environment &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Environment&lt;/span&gt;(&lt;span class="pl-c1"&gt;loader&lt;/span&gt;: &lt;span class="pl-c1"&gt;FileSystemLoader&lt;/span&gt;(&lt;span class="pl-c1"&gt;paths&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;templates/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]))
&lt;span class="pl-k"&gt;let&lt;/span&gt; rendered &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; environment.&lt;span class="pl-c1"&gt;renderTemplate&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;article_list.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;context&lt;/span&gt;: context)

&lt;span class="pl-c1"&gt;print&lt;/span&gt;(rendered)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-philosophy" class="anchor" aria-hidden="true" href="#philosophy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Philosophy&lt;/h2&gt;
&lt;p&gt;Stencil follows the same philosophy of Django:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you have a background in programming, or if you’re used to languages which
mix programming code directly into HTML, you’ll want to bear in mind that the
Django template system is not simply Python embedded into HTML. This is by
design: the template system is meant to express presentation, not program
logic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-the-user-guide" class="anchor" aria-hidden="true" href="#the-user-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The User Guide&lt;/h2&gt;
&lt;p&gt;Resources for Stencil template authors to write Stencil templates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stencil.fuller.li/en/latest/templates.html" rel="nofollow"&gt;Language overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stencil.fuller.li/en/latest/builtins.html" rel="nofollow"&gt;Built-in template tags and filters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Resources to help you integrate Stencil into a Swift project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stencil.fuller.li/en/latest/installation.html" rel="nofollow"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stencil.fuller.li/en/latest/getting-started.html" rel="nofollow"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stencil.fuller.li/en/latest/api.html" rel="nofollow"&gt;API Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stencil.fuller.li/en/latest/custom-template-tags-and-filters.html" rel="nofollow"&gt;Custom Template Tags and Filters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-projects-that-use-stencil" class="anchor" aria-hidden="true" href="#projects-that-use-stencil"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects that use Stencil&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/krzysztofzablocki/Sourcery"&gt;Sourcery&lt;/a&gt;,
&lt;a href="https://github.com/SwiftGen/SwiftGen"&gt;SwiftGen&lt;/a&gt;,
&lt;a href="https://github.com/IBM-Swift/Kitura"&gt;Kitura&lt;/a&gt;,
&lt;a href="https://github.com/scribd/Weaver"&gt;Weaver&lt;/a&gt;,
&lt;a href="https://github.com/yonaskolb/Genesis"&gt;Genesis&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Stencil is licensed under the BSD license. See &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; for more
info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>stencilproject</author><guid isPermaLink="false">https://github.com/stencilproject/Stencil</guid><pubDate>Sat, 21 Dec 2019 00:23:00 GMT</pubDate></item><item><title>signalapp/Signal-iOS #24 in Swift, Today</title><link>https://github.com/signalapp/Signal-iOS</link><description>&lt;p&gt;&lt;i&gt;A private messenger for iOS.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-signal-ios" class="anchor" aria-hidden="true" href="#signal-ios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Signal iOS&lt;/h1&gt;
&lt;p&gt;Signal is a free, open source, messaging app for simple private communication with friends.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://itunes.apple.com/us/app/signal-private-messenger/id874139669?mt=8" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0a78ccbf1b05e5b4ca4b14d9e7757aca1b0556ae/687474703a2f2f636c2e6c792f576f75472f446f776e6c6f61645f6f6e5f7468655f4170705f53746f72655f42616467655f55532d554b5f3133357834302e737667" alt="Available on the App Store" data-canonical-src="http://cl.ly/WouG/Download_on_the_App_Store_Badge_US-UK_135x40.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also available on &lt;a href="https://github.com/signalapp/signal-android"&gt;Android&lt;/a&gt; and &lt;a href="https://github.com/signalapp/signal-desktop"&gt;Desktop&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-questions" class="anchor" aria-hidden="true" href="#questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions?&lt;/h2&gt;
&lt;p&gt;For troubleshooting and questions, please visit our &lt;a href="https://support.signal.org/" rel="nofollow"&gt;support center&lt;/a&gt; or &lt;a href="https://community.signalusers.org/" rel="nofollow"&gt;unofficial community forum&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-bug-reports" class="anchor" aria-hidden="true" href="#contributing-bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing Bug Reports&lt;/h2&gt;
&lt;p&gt;We use GitHub for bug tracking. Please search &lt;a href="https://github.com/signalapp/signal-ios/issues"&gt;existing issues&lt;/a&gt; and create a new one if the issue is not yet tracked. For Android users, please use the &lt;a href="https://github.com/signalapp/signal-android/issues"&gt;Signal for Android issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-translations" class="anchor" aria-hidden="true" href="#contributing-translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing Translations&lt;/h2&gt;
&lt;p&gt;Help us translate Signal! The translation effort happens on &lt;a href="https://www.transifex.com/signalapp/signal-ios/" rel="nofollow"&gt;Transifex&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-code" class="anchor" aria-hidden="true" href="#contributing-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing Code&lt;/h2&gt;
&lt;p&gt;Instructions on how to setup your development environment and build Signal-iOS can be found in &lt;a href="https://github.com/signalapp/Signal-iOS/blob/master/BUILDING.md"&gt;BUILDING.md&lt;/a&gt;. Other useful instructions for development can be found in the &lt;a href="https://github.com/signalapp/Signal-iOS/wiki/Development-Guide"&gt;Development Guide wiki page&lt;/a&gt;. We also recommend reading the &lt;a href="https://github.com/signalapp/Signal-iOS/blob/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-ideas" class="anchor" aria-hidden="true" href="#contributing-ideas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing Ideas&lt;/h2&gt;
&lt;p&gt;Have something you want to say about Signal Foundation projects or want to be part of the conversation? Get involved in the &lt;a href="https://community.signalusers.org" rel="nofollow"&gt;community forum&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cryptography-notice" class="anchor" aria-hidden="true" href="#cryptography-notice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cryptography Notice&lt;/h2&gt;
&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software.
BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted.
See &lt;a href="http://www.wassenaar.org/" rel="nofollow"&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms.
The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Licensed under &lt;a href="http://www.gnu.org/licenses/gpl-3.0.html" rel="nofollow"&gt;GPLv3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright 2014-2019 Open Whisper Systems&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Apple and the Apple logo are trademarks of Apple Inc., registered in the U.S. and other countries. App Store is a service mark of Apple Inc., registered in the U.S. and other countries.&lt;/em&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>signalapp</author><guid isPermaLink="false">https://github.com/signalapp/Signal-iOS</guid><pubDate>Sat, 21 Dec 2019 00:24:00 GMT</pubDate></item><item><title>danielgindi/Charts #25 in Swift, Today</title><link>https://github.com/danielgindi/Charts</link><description>&lt;p&gt;&lt;i&gt;Beautiful charts for iOS/tvOS/OSX! The Apple side of the crossplatform MPAndroidChart.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;Version 3.4.0&lt;/strong&gt;, synced to &lt;a href="https://github.com/PhilJay/MPAndroidChart/commit/f6a398b"&gt;MPAndroidChart #f6a398b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c6f7ce37a23ae05e72a70bf7e2978b0cd2ebdd6e/68747470733a2f2f7261772e6769746875622e636f6d2f64616e69656c67696e64692f4368617274732f6d61737465722f4173736574732f666561747572655f677261706869632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c6f7ce37a23ae05e72a70bf7e2978b0cd2ebdd6e/68747470733a2f2f7261772e6769746875622e636f6d2f64616e69656c67696e64692f4368617274732f6d61737465722f4173736574732f666561747572655f677261706869632e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/danielgindi/Charts/master/Assets/feature_graphic.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3ec53f843d26d0d0f8fc1c8b0c2d6ba12e9b527e/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4368617274732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/3ec53f843d26d0d0f8fc1c8b0c2d6ba12e9b527e/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4368617274732e737667" alt="Supported Platforms" data-canonical-src="https://img.shields.io/cocoapods/p/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/danielgindi/Charts/releases"&gt;&lt;img src="https://camo.githubusercontent.com/a337dd2eacabc7ca4739ae7a62711390a16910b1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f64616e69656c67696e64692f4368617274732e737667" alt="Releases" data-canonical-src="https://img.shields.io/github/release/danielgindi/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/pods/charts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7e5ddbe9672eed6ec4505b7f71ec5be7b5cfa27/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4368617274732e737667" alt="Latest pod release" data-canonical-src="https://img.shields.io/cocoapods/v/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/danielgindi/Charts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3868a63b91220618d8ff25b3bebe838c8213178/68747470733a2f2f7472617669732d63692e6f72672f64616e69656c67696e64692f4368617274732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/danielgindi/Charts.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/danielgindi/Charts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f55978bcf0a11ed1fbd5eca65b826d871e0d382/68747470733a2f2f636f6465636f762e696f2f67682f64616e69656c67696e64692f4368617274732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/danielgindi/Charts/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/danielgindi/Charts?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/734e5f07cb46b57180113a9faf97701418edf8e3/68747470733a2f2f6261646765732e6769747465722e696d2f64616e69656c67696e64692f4368617274732e737667" alt="Join the chat at https://gitter.im/danielgindi/Charts" data-canonical-src="https://badges.gitter.im/danielgindi/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-just-a-heads-up-charts-30-has-some-breaking-changes-please-read-the-releasemigration-notes" class="anchor" aria-hidden="true" href="#just-a-heads-up-charts-30-has-some-breaking-changes-please-read-the-releasemigration-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Just a heads up: Charts 3.0 has some breaking changes. Please read &lt;a href="https://github.com/danielgindi/Charts/releases/tag/v3.0.0"&gt;the release/migration notes&lt;/a&gt;.&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-another-heads-up-chartsrealm-is-now-in-a-separate-repo-pods-is-also-now-charts-and-chartsrealm-instead-of-chartscore-and-chartsrealm" class="anchor" aria-hidden="true" href="#another-heads-up-chartsrealm-is-now-in-a-separate-repo-pods-is-also-now-charts-and-chartsrealm-instead-of-chartscore-and-chartsrealm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Another heads up: ChartsRealm is now in a &lt;a href="https://github.com/danielgindi/ChartsRealm"&gt;separate repo&lt;/a&gt;. Pods is also now &lt;code&gt;Charts&lt;/code&gt; and &lt;code&gt;ChartsRealm&lt;/code&gt;, instead of &lt;del&gt;&lt;code&gt;Charts/Core&lt;/code&gt;&lt;/del&gt; and &lt;del&gt;&lt;code&gt;Charts/Realm&lt;/code&gt;&lt;/del&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-one-more-heads-up-as-swift-evolves-if-you-are-not-using-the-latest-swift-compiler-you-shouldnt-check-out-the-master-branch-instead-you-should-go-to-the-release-page-and-pick-up-whatever-suits-you" class="anchor" aria-hidden="true" href="#one-more-heads-up-as-swift-evolves-if-you-are-not-using-the-latest-swift-compiler-you-shouldnt-check-out-the-master-branch-instead-you-should-go-to-the-release-page-and-pick-up-whatever-suits-you"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One more heads up: As Swift evolves, if you are not using the latest Swift compiler, you shouldn't check out the master branch. Instead, you should go to the release page and pick up whatever suits you.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 11 / Swift 5 (master branch)&lt;/li&gt;
&lt;li&gt;iOS &amp;gt;= 8.0 (Use as an &lt;strong&gt;Embedded&lt;/strong&gt; Framework)&lt;/li&gt;
&lt;li&gt;tvOS &amp;gt;= 9.0&lt;/li&gt;
&lt;li&gt;macOS &amp;gt;= 10.11&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Okay so there's this beautiful library called &lt;a href="https://github.com/PhilJay/MPAndroidChart"&gt;MPAndroidChart&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/philippjahoda" rel="nofollow"&gt;Philipp Jahoda&lt;/a&gt; which has become very popular amongst Android developers, but there was no decent solution to create charts for iOS.&lt;/p&gt;
&lt;p&gt;I've chosen to write it in &lt;code&gt;Swift&lt;/code&gt; as it can be highly optimized by the compiler, and can be used in both &lt;code&gt;Swift&lt;/code&gt; and &lt;code&gt;ObjC&lt;/code&gt; project. The demo project is written in &lt;code&gt;ObjC&lt;/code&gt; to demonstrate how it works.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;An amazing feature&lt;/strong&gt; of this library now, for Android, iOS, tvOS and macOS, is the time it saves you when developing for both platforms, as the learning curve is singleton- it happens only once, and the code stays very similar so developers don't have to go around and re-invent the app to produce the same output with a different library. (And that's not even considering the fact that there's not really another good choice out there currently...)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-having-trouble-running-the-demo" class="anchor" aria-hidden="true" href="#having-trouble-running-the-demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Having trouble running the demo?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ChartsDemo/ChartsDemo.xcodeproj&lt;/code&gt; is the demo project for iOS/tvOS&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ChartsDemo-OSX/ChartsDemo-OSX.xcodeproj&lt;/code&gt; is the demo project for macOS&lt;/li&gt;
&lt;li&gt;Make sure you are running a supported version of Xcode.
&lt;ul&gt;
&lt;li&gt;Usually it is specified here a few lines above.&lt;/li&gt;
&lt;li&gt;In most cases it will be the latest Xcode version.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make sure that your project supports Swift 5.0&lt;/li&gt;
&lt;li&gt;Optional: Run &lt;code&gt;carthage checkout&lt;/code&gt; in the project folder, to fetch dependencies (i.e testing dependencies).
&lt;ul&gt;
&lt;li&gt;If you don't have Carthage - you can get it &lt;a href="https://github.com/Carthage/Carthage/releases"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;In order to correctly compile:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Drag the &lt;code&gt;Charts.xcodeproj&lt;/code&gt; to your project&lt;/li&gt;
&lt;li&gt;Go to your target's settings, hit the "+" under the "Embedded Binaries" section, and select the Charts.framework&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@import Charts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;When using Swift in an ObjC project:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;You need to import your Bridging Header. Usually it is "&lt;em&gt;YourProject-Swift.h&lt;/em&gt;", so in ChartsDemo it's "&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;". Do not try to actually include "&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;" in your project :-)&lt;/li&gt;
&lt;li&gt;(Xcode 8.1 and earlier) Under "Build Options", mark "Embedded Content Contains Swift Code"&lt;/li&gt;
&lt;li&gt;(Xcode 8.2+) Under "Build Options", mark "Always Embed Swift Standard Libraries"&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="5"&gt;
&lt;li&gt;When using &lt;a href="https://realm.io/" rel="nofollow"&gt;Realm.io&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;Note that the Realm framework is not linked with Charts - it is only there for &lt;em&gt;optional&lt;/em&gt; bindings. Which means that you need to have the framework in your project, and in a compatible version to whatever is compiled with Charts. We will do our best to always compile against the latest version.&lt;/li&gt;
&lt;li&gt;You'll need to add &lt;code&gt;ChartsRealm&lt;/code&gt; as a dependency too.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-3rd-party-tutorials" class="anchor" aria-hidden="true" href="#3rd-party-tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3rd party tutorials&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@skoli/using-realm-and-charts-with-swift-3-in-ios-10-40c42e3838c0#.2gyymwfh8" rel="nofollow"&gt;Using Realm and Charts with Swift 3 in iOS 10 (Sami Korpela)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@OsianSmith/creating-a-line-chart-in-swift-3-and-ios-10-2f647c95392e" rel="nofollow"&gt;Creating a Line Chart in Swift 3 and iOS 10 (Osian Smith)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/annalizhaz/ChartsForSwiftBasic"&gt;Beginning Set-up and Example Using Charts with Swift 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Want your tutorial to show here? Create a PR!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-cant-compile" class="anchor" aria-hidden="true" href="#cant-compile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can't compile?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Please note the difference between installing a compiled framework from CocoaPods or Carthage, and copying the source code.&lt;/li&gt;
&lt;li&gt;Please read the &lt;strong&gt;Usage&lt;/strong&gt; section again.&lt;/li&gt;
&lt;li&gt;Search in the issues&lt;/li&gt;
&lt;li&gt;Try to politely ask in the issues section&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-other-problems--feature-requests" class="anchor" aria-hidden="true" href="#other-problems--feature-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other problems / feature requests&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Search in the issues&lt;/li&gt;
&lt;li&gt;Try to politely ask in the issues section&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cocoapods-install" class="anchor" aria-hidden="true" href="#cocoapods-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods Install&lt;/h2&gt;
&lt;p&gt;Add &lt;code&gt;pod 'Charts'&lt;/code&gt; to your Podfile. "Charts" is the name of the library.&lt;br&gt;
For &lt;a href="https://realm.io/" rel="nofollow"&gt;Realm&lt;/a&gt; support, please add &lt;code&gt;pod 'ChartsRealm'&lt;/code&gt; too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;del&gt;&lt;code&gt;pod 'ios-charts'&lt;/code&gt;&lt;/del&gt; is not the correct library, and refers to a different project by someone else.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-carthage-install" class="anchor" aria-hidden="true" href="#carthage-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage Install&lt;/h2&gt;
&lt;p&gt;Charts now include Carthage prebuilt binaries.&lt;/p&gt;
&lt;pre lang="carthage"&gt;&lt;code&gt;github "danielgindi/Charts" == 3.4.0
github "danielgindi/Charts" ~&amp;gt; 3.4.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In order to build the binaries for a new release, use &lt;code&gt;carthage build --no-skip-current &amp;amp;&amp;amp; carthage archive Charts&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3rd-party-bindings" class="anchor" aria-hidden="true" href="#3rd-party-bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3rd party bindings&lt;/h2&gt;
&lt;p&gt;Xamarin (by @Flash3001): &lt;em&gt;iOS&lt;/em&gt; - &lt;a href="https://github.com/Flash3001/iOSCharts.Xamarin"&gt;GitHub&lt;/a&gt;/&lt;a href="https://www.nuget.org/packages/iOSCharts/" rel="nofollow"&gt;NuGet&lt;/a&gt;. &lt;em&gt;Android&lt;/em&gt; - &lt;a href="https://github.com/Flash3001/MPAndroidChart.Xamarin"&gt;GitHub&lt;/a&gt;/&lt;a href="https://www.nuget.org/packages/MPAndroidChart/" rel="nofollow"&gt;NuGet&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h2&gt;
&lt;p&gt;If you like what you see here, and want to support the work being done in this repository, you could:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contribute code, issues and pull requests&lt;/li&gt;
&lt;li&gt;Let people know this library exists (&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt; spread the word &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=68UL6Y8KUPS96" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="Donate" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt; (You can buy me a beer, or you can buy me dinner :-)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The author of &lt;a href="https://github.com/PhilJay/MPAndroidChart"&gt;MPAndroidChart&lt;/a&gt; is the reason that this library exists, and is accepting &lt;a href="https://github.com/PhilJay/MPAndroidChart#donations"&gt;donations&lt;/a&gt; on his page. He deserves them!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-questions--issues" class="anchor" aria-hidden="true" href="#questions--issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions &amp;amp; Issues&lt;/h2&gt;
&lt;p&gt;If you are having questions or problems, you should:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure you are using the latest version of the library. Check the &lt;a href="https://github.com/danielgindi/Charts/releases"&gt;&lt;strong&gt;release-section&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Study the Android version's &lt;a href="https://github.com/PhilJay/MPAndroidChart/wiki"&gt;&lt;strong&gt;Documentation-Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Study the (Still incomplete &lt;a href="http://cocoadocs.org/docsets/Charts/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c2cfb861972d8cf1f4a5ba62f1e4b8f3ad2a702d/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6d6574726963732f646f632d70657263656e742f4368617274732e737667" alt="Doc-Percent" data-canonical-src="https://img.shields.io/cocoapods/metrics/doc-percent/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt;) &lt;a href="http://cocoadocs.org/docsets/Charts/" rel="nofollow"&gt;&lt;strong&gt;Pod-Documentation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Search or open questions on &lt;a href="http://stackoverflow.com/questions/tagged/ios-charts" rel="nofollow"&gt;&lt;strong&gt;stackoverflow&lt;/strong&gt;&lt;/a&gt; with the &lt;code&gt;ios-charts&lt;/code&gt; tag&lt;/li&gt;
&lt;li&gt;Search &lt;a href="https://github.com/danielgindi/Charts/issues"&gt;&lt;strong&gt;known issues&lt;/strong&gt;&lt;/a&gt; for your problem (open and closed)&lt;/li&gt;
&lt;li&gt;Create new issues (please &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt; &lt;strong&gt;search known issues before&lt;/strong&gt; &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt;, do not create duplicate issues)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Core features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;8 different chart types&lt;/li&gt;
&lt;li&gt;Scaling on both axes (with touch-gesture, axes separately or pinch-zoom)&lt;/li&gt;
&lt;li&gt;Dragging / Panning (with touch-gesture)&lt;/li&gt;
&lt;li&gt;Combined-Charts (line-, bar-, scatter-, candle-stick-, bubble-)&lt;/li&gt;
&lt;li&gt;Dual (separate) Axes&lt;/li&gt;
&lt;li&gt;Customizable Axes (both x- and y-axis)&lt;/li&gt;
&lt;li&gt;Highlighting values (with customizable popup-views)&lt;/li&gt;
&lt;li&gt;Save chart to camera-roll / export to PNG/JPEG&lt;/li&gt;
&lt;li&gt;Predefined color templates&lt;/li&gt;
&lt;li&gt;Legends (generated automatically, customizable)&lt;/li&gt;
&lt;li&gt;Animations (build up animations, on both x- and y-axis)&lt;/li&gt;
&lt;li&gt;Limit lines (providing additional information, maximums, ...)&lt;/li&gt;
&lt;li&gt;Fully customizable (paints, typefaces, legends, colors, background, gestures, dashed lines, ...)&lt;/li&gt;
&lt;li&gt;Plotting data directly from &lt;a href="https://realm.io" rel="nofollow"&gt;&lt;strong&gt;Realm.io&lt;/strong&gt;&lt;/a&gt; mobile database (&lt;a href="https://github.com/danielgindi/ChartsRealm"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Chart types:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Screenshots are currently taken from the original repository, as they render exactly the same :-)&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a9eaa5fc7fb6c1e70b22acd09385055e0f5c4fe7/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274342e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a9eaa5fc7fb6c1e70b22acd09385055e0f5c4fe7/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274342e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart4.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8c1c9cf68af994a1e17690834603c450638cc62c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/8c1c9cf68af994a1e17690834603c450638cc62c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274332e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart3.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (cubic lines)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4e85ee91169c2ad5dc500b3b415a0c974766615d/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f63756269636c696e6563686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4e85ee91169c2ad5dc500b3b415a0c974766615d/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f63756269636c696e6563686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/cubiclinechart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (gradient fill)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e9f3408cc22c2896a897e9ed92a2fd2cbcf40493/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f6c696e655f63686172745f6772616469656e742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e9f3408cc22c2896a897e9ed92a2fd2cbcf40493/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f6c696e655f63686172745f6772616469656e742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/line_chart_gradient.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Combined-Chart (bar- and linechart in this case)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e29d8d3316203700965cc6cc56e67b779f2845bb/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f636f6d62696e65645f63686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e29d8d3316203700965cc6cc56e67b779f2845bb/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f636f6d62696e65645f63686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/combined_chart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;BarChart (with legend, simple design)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/78b4bc4e50e151970961daf56e81c4c0db72d27c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6261726368617274332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/78b4bc4e50e151970961daf56e81c4c0db72d27c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6261726368617274332e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_barchart3.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BarChart (grouped DataSets)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4bf136c2fd25bcbeac0bcf363bc8f48dae0651fc/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f67726f7570656462617263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4bf136c2fd25bcbeac0bcf363bc8f48dae0651fc/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f67726f7570656462617263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/groupedbarchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Horizontal-BarChart&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2ec281e0ac3013076bff1c3ac00d8d6de372d7a4/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f686f72697a6f6e74616c5f62617263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/2ec281e0ac3013076bff1c3ac00d8d6de372d7a4/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f686f72697a6f6e74616c5f62617263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/horizontal_barchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PieChart (with selection, ...)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7e8a4a3c938c21d032d44d999edd781b6e146f2a/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f7069656368617274312e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7e8a4a3c938c21d032d44d999edd781b6e146f2a/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f7069656368617274312e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/simpledesign_piechart1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ScatterChart&lt;/strong&gt; (with squares, triangles, circles, ... and more)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6b254aa699df7f9464967009129c3017de721b77/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f7363617474657263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6b254aa699df7f9464967009129c3017de721b77/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f7363617474657263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/scatterchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CandleStickChart&lt;/strong&gt; (for financial data)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6dbee4e35fde8691e5ac29417583dc8e16608895/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f63616e646c65737469636b63686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6dbee4e35fde8691e5ac29417583dc8e16608895/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f63616e646c65737469636b63686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/candlestickchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BubbleChart&lt;/strong&gt; (area covered by bubbles indicates the value)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6704c21e680e831c3c07d0bebf2676f5e99a3d41/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f627562626c6563686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6704c21e680e831c3c07d0bebf2676f5e99a3d41/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f627562626c6563686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/bubblechart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RadarChart&lt;/strong&gt; (spider web chart)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/782ded242133f98db56004fc94401570b8749620/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f726164617263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/782ded242133f98db56004fc94401570b8749620/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f726164617263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/radarchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;Currently there's no need for documentation for the iOS/tvOS/macOS version, as the API is &lt;strong&gt;95% the same&lt;/strong&gt; as on Android.&lt;br&gt;
You can read the official &lt;a href="https://github.com/PhilJay/MPAndroidChart"&gt;MPAndroidChart&lt;/a&gt; documentation here: &lt;a href="https://github.com/PhilJay/MPAndroidChart/wiki"&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Or you can see the Charts Demo project in both Objective-C and Swift (&lt;a href="https://github.com/danielgindi/Charts/tree/master/ChartsDemo-iOS"&gt;&lt;strong&gt;ChartsDemo-iOS&lt;/strong&gt;&lt;/a&gt;, as well as macOS &lt;a href="https://github.com/danielgindi/Charts/tree/master/ChartsDemo-macOS"&gt;&lt;strong&gt;ChartsDemo-macOS&lt;/strong&gt;&lt;/a&gt;) and learn the how-tos from it.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-special-thanks" class="anchor" aria-hidden="true" href="#special-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Thanks&lt;/h1&gt;
&lt;p&gt;Goes to &lt;a href="https://github.com/liuxuan30"&gt;@liuxuan30&lt;/a&gt;, &lt;a href="https://github.com/petester42"&gt;@petester42&lt;/a&gt; and  &lt;a href="https://github.com/AlBirdie"&gt;@AlBirdie&lt;/a&gt; for new features, bugfixes, and lots and lots of involvement in our open-sourced community! You guys are a huge help to all of those coming here with questions and issues, and I couldn't respond to all of those without you.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Copyright 2016 Daniel Cohen Gindi &amp;amp; Philipp Jahoda&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>danielgindi</author><guid isPermaLink="false">https://github.com/danielgindi/Charts</guid><pubDate>Sat, 21 Dec 2019 00:25:00 GMT</pubDate></item></channel></rss>