<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Julia, Today</title><link>https://github.com/trending/julia?since=daily</link><description>The top repositories on GitHub for julia, measured daily</description><pubDate>Tue, 07 Jan 2020 01:11:39 GMT</pubDate><lastBuildDate>Tue, 07 Jan 2020 01:11:39 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>JuliaLang/julia #1 in Julia, Today</title><link>https://github.com/JuliaLang/julia</link><description>&lt;p&gt;&lt;i&gt;The Julia Language: A fresh approach to technical computing.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a name="user-content-logo"&gt;
&lt;/a&gt;&lt;div align="center"&gt;&lt;a name="user-content-logo"&gt;
&lt;/a&gt;&lt;a href="https://julialang.org/" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/6d7260eaa159cfb838b45bf168ff77adecf8b198/68747470733a2f2f6a756c69616c616e672e6f72672f696d616765732f6c6f676f5f68697265732e706e67" alt="Julia Logo" width="210" height="142" data-canonical-src="https://julialang.org/images/logo_hires.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Code coverage:
&lt;a href="https://coveralls.io/r/JuliaLang/julia?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c19f8bfd330d4298726a46788b7dd210c6bbaee/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f4a756c69614c616e672f6a756c69612f6d61737465722e7376673f6c6162656c3d636f766572616c6c73" alt="coveralls" data-canonical-src="https://img.shields.io/coveralls/github/JuliaLang/julia/master.svg?label=coveralls" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/JuliaLang/julia?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f493f551264b08a932256740895accb8f2f1cf6/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f4a756c69614c616e672f6a756c69612f6d61737465722e7376673f6c6162656c3d636f6465636f76" alt="codecov" data-canonical-src="https://img.shields.io/codecov/c/github/JuliaLang/julia/master.svg?label=codecov" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Documentation:
&lt;a href="https://docs.julialang.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8bf08f7e402872de8d8969931a9b179f38d9496/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d76312d626c75652e737667" alt="version 1" data-canonical-src="https://img.shields.io/badge/docs-v1-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-julia-language" class="anchor" aria-hidden="true" href="#the-julia-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Julia Language&lt;/h2&gt;
&lt;p&gt;Julia is a high-level, high-performance dynamic language for technical
computing.  The main homepage for Julia can be found at
&lt;a href="https://julialang.org/" rel="nofollow"&gt;julialang.org&lt;/a&gt;.  This is the GitHub
repository of Julia source code, including instructions for compiling
and installing Julia, below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Homepage:&lt;/strong&gt; &lt;a href="https://julialang.org" rel="nofollow"&gt;https://julialang.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Binaries:&lt;/strong&gt; &lt;a href="https://julialang.org/downloads/" rel="nofollow"&gt;https://julialang.org/downloads/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source code:&lt;/strong&gt; &lt;a href="https://github.com/JuliaLang/julia"&gt;https://github.com/JuliaLang/julia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href="https://docs.julialang.org/" rel="nofollow"&gt;https://docs.julialang.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Packages:&lt;/strong&gt; &lt;a href="https://pkg.julialang.org/" rel="nofollow"&gt;https://pkg.julialang.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Discussion forum:&lt;/strong&gt; &lt;a href="https://discourse.julialang.org" rel="nofollow"&gt;https://discourse.julialang.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Slack:&lt;/strong&gt; &lt;a href="https://julialang.slack.com" rel="nofollow"&gt;https://julialang.slack.com&lt;/a&gt; (get an invite from &lt;a href="https://slackinvite.julialang.org" rel="nofollow"&gt;https://slackinvite.julialang.org&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;YouTube:&lt;/strong&gt; &lt;a href="https://www.youtube.com/user/JuliaLanguage" rel="nofollow"&gt;https://www.youtube.com/user/JuliaLanguage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Code coverage:&lt;/strong&gt; &lt;a href="https://coveralls.io/r/JuliaLang/julia" rel="nofollow"&gt;https://coveralls.io/r/JuliaLang/julia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;New developers may find the notes in
&lt;a href="https://github.com/JuliaLang/julia/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;
helpful to start contributing to the Julia codebase.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-external-resources" class="anchor" aria-hidden="true" href="#external-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/julia-lang" rel="nofollow"&gt;&lt;strong&gt;StackOverflow&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/JuliaLanguage" rel="nofollow"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://julia.meetup.com/" rel="nofollow"&gt;&lt;strong&gt;Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-binary-installation" class="anchor" aria-hidden="true" href="#binary-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binary Installation&lt;/h2&gt;
&lt;p&gt;If you would rather not compile the latest Julia from source,
platform-specific tarballs with pre-compiled binaries are also
&lt;a href="https://julialang.org/downloads/" rel="nofollow"&gt;available for download&lt;/a&gt;. The
downloads page also provides details on the
&lt;a href="https://julialang.org/downloads/#support-tiers" rel="nofollow"&gt;different tiers of support&lt;/a&gt;
for OS and platform combinations.&lt;/p&gt;
&lt;p&gt;If everything works correctly, you will see a Julia banner and an
interactive prompt into which you can enter expressions for
evaluation.  You can read about &lt;a href="https://julialang.org/manual/getting-started" rel="nofollow"&gt;getting
started&lt;/a&gt; in the manual.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Although some system package managers provide Julia, such
installations are neither maintained nor endorsed by the Julia
project. They may be outdated, broken and/or unmaintained. We
recommend you use the official Julia binaries instead.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-julia" class="anchor" aria-hidden="true" href="#building-julia"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Julia&lt;/h2&gt;
&lt;p&gt;First, make sure you have all the &lt;a href="https://github.com/JuliaLang/julia/blob/master/doc/build/build.md#required-build-tools-and-external-libraries"&gt;required
dependencies&lt;/a&gt; installed.
Then, acquire the source code by cloning the git repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git://github.com/JuliaLang/julia.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default you will be building the latest unstable version of
Julia. However, most users should use the most recent stable version
of Julia. You can get this version by changing to the Julia directory
and running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout v1.3.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now run &lt;code&gt;make&lt;/code&gt; to build the &lt;code&gt;julia&lt;/code&gt; executable.&lt;/p&gt;
&lt;p&gt;Building Julia requires 2GiB of disk space and approximately 4GiB of virtual memory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The build process will fail badly if any of the build directory's parent directories have spaces or other shell meta-characters such as &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;:&lt;/code&gt; in their names (this is due to a limitation in GNU make).&lt;/p&gt;
&lt;p&gt;Once it is built, you can run the &lt;code&gt;julia&lt;/code&gt; executable after you enter your julia directory and run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./julia
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Your first test of Julia determines whether your build is working
properly. From the UNIX/Windows command prompt inside the &lt;code&gt;julia&lt;/code&gt;
source directory, type &lt;code&gt;make testall&lt;/code&gt;. You should see output that
lists a series of running tests; if they complete without error, you
should be in good shape to start using Julia.&lt;/p&gt;
&lt;p&gt;You can read about &lt;a href="https://docs.julialang.org/en/v1/manual/getting-started/" rel="nofollow"&gt;getting
started&lt;/a&gt;
in the manual.&lt;/p&gt;
&lt;p&gt;In case this default build path did not work, detailed build instructions
are included in the &lt;a href="https://github.com/JuliaLang/julia/blob/master/doc/build"&gt;build documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uninstalling-julia" class="anchor" aria-hidden="true" href="#uninstalling-julia"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Uninstalling Julia&lt;/h3&gt;
&lt;p&gt;Julia does not install anything outside the directory it was cloned
into. Julia can be completely uninstalled by deleting this
directory. Julia packages are installed in &lt;code&gt;~/.julia&lt;/code&gt; by default, and
can be uninstalled by deleting &lt;code&gt;~/.julia&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-source-code-organization" class="anchor" aria-hidden="true" href="#source-code-organization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Code Organization&lt;/h2&gt;
&lt;p&gt;The Julia source code is organized as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;base/          source code for the Base module (part of Julia's standard library)
stdlib/        source code for other standard library packages
contrib/       editor support for Julia source, miscellaneous scripts
deps/          external dependencies
doc/src/manual source for the user manual
doc/build      detailed notes for building Julia
src/           source for Julia language core
test/          test suites
ui/            source for various front ends
usr/           binaries and shared libraries loaded by Julia's standard libraries
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-terminal-editors-and-ides" class="anchor" aria-hidden="true" href="#terminal-editors-and-ides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal, Editors and IDEs&lt;/h2&gt;
&lt;p&gt;The Julia REPL is quite powerful.  See the section in the manual on
&lt;a href="https://docs.julialang.org/en/latest/stdlib/REPL/" rel="nofollow"&gt;the Julia REPL&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;Support for editing Julia is available for many
&lt;a href="https://github.com/JuliaEditorSupport"&gt;widely used editors&lt;/a&gt;:
&lt;a href="https://github.com/JuliaEditorSupport/julia-emacs"&gt;Emacs&lt;/a&gt;,
&lt;a href="https://github.com/JuliaEditorSupport/julia-vim"&gt;Vim&lt;/a&gt;,
&lt;a href="https://github.com/JuliaEditorSupport/Julia-sublime"&gt;Sublime Text&lt;/a&gt;, and many
others.&lt;/p&gt;
&lt;p&gt;Supported IDEs include: &lt;a href="http://junolab.org/" rel="nofollow"&gt;Juno&lt;/a&gt; (Atom plugin),
&lt;a href="https://github.com/JuliaEditorSupport/julia-vscode"&gt;julia-vscode&lt;/a&gt; (VS
Code plugin), and
&lt;a href="https://github.com/JuliaEditorSupport/julia-intellij"&gt;julia-intellij&lt;/a&gt;
(IntelliJ IDEA plugin). The popular &lt;a href="https://jupyter.org/" rel="nofollow"&gt;Jupyter&lt;/a&gt;
notebook interface is available through
&lt;a href="https://github.com/JuliaLang/IJulia.jl"&gt;IJulia&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JuliaLang</author><guid isPermaLink="false">https://github.com/JuliaLang/julia</guid><pubDate>Tue, 07 Jan 2020 00:01:00 GMT</pubDate></item><item><title>FluxML/Flux.jl #2 in Julia, Today</title><link>https://github.com/FluxML/Flux.jl</link><description>&lt;p&gt;&lt;i&gt;Relax! Flux is the ML library that doesn't make you tensor&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/logo.png"&gt;&lt;img width="400px" src="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/FluxML/Flux.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b10e4a0832de887b8a542480f6a864b9d2ecfc0/68747470733a2f2f7472617669732d63692e6f72672f466c75784d4c2f466c75782e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/FluxML/Flux.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://fluxml.github.io/Flux.jl/stable/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://slackinvite.julialang.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24d16c31ff9f7628be0e050b793afd8b2458029c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e253230736c61636b2d79656c6c6f772e737667" alt="" data-canonical-src="https://img.shields.io/badge/chat-on%20slack-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://doi.org/10.21105/joss.00602" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33eb230ee6fb9c214eb02ee3f227e6d81e540911/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30303630322f7374617475732e737667" alt="DOI" data-canonical-src="https://joss.theoj.org/papers/10.21105/joss.00602/status.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Flux is an elegant approach to machine learning. It's a 100% pure-Julia stack, and provides lightweight abstractions on top of Julia's native GPU and AD support. Flux makes the easy things easy while remaining fully hackable.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;] add Flux&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;a href="https://fluxml.github.io/Flux.jl/" rel="nofollow"&gt;documentation&lt;/a&gt; or the &lt;a href="https://github.com/FluxML/model-zoo/"&gt;model zoo&lt;/a&gt; for examples.&lt;/p&gt;
&lt;p&gt;If you use Flux in your research, please &lt;a href="CITATION.bib"&gt;cite&lt;/a&gt; our work.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>FluxML</author><guid isPermaLink="false">https://github.com/FluxML/Flux.jl</guid><pubDate>Tue, 07 Jan 2020 00:02:00 GMT</pubDate></item><item><title>JuliaRegistries/General #3 in Julia, Today</title><link>https://github.com/JuliaRegistries/General</link><description>&lt;p&gt;&lt;i&gt;The official registry of general Julia packages&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-general" class="anchor" aria-hidden="true" href="#general"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General&lt;/h1&gt;
&lt;p&gt;General is the default Julia package registry. Package registries are used by Julia's
package manager &lt;a href="https://julialang.github.io/Pkg.jl/v1/" rel="nofollow"&gt;Pkg.jl&lt;/a&gt; and includes information about packages such as versions,
dependencies and compatibility constraints.&lt;/p&gt;
&lt;p&gt;The General registry is open for everyone to use and provides access to a large ecosystem
of packages.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-registering-a-package-in-general" class="anchor" aria-hidden="true" href="#registering-a-package-in-general"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Registering a package in General&lt;/h2&gt;
&lt;p&gt;New packages and new versions of packages are added the General registry by pull requests
against this GitHub repository. It is &lt;em&gt;highly recommended&lt;/em&gt; that you use
&lt;a href="https://github.com/JuliaRegistries/Registrator.jl"&gt;Registrator.jl&lt;/a&gt; to automate this process. Registrator can either be used as a
&lt;a href="https://github.com/JuliaRegistries/Registrator.jl#via-the-github-app"&gt;GitHub App&lt;/a&gt; or through a &lt;a href="https://github.com/JuliaRegistries/Registrator.jl#via-the-web-interface"&gt;web interface&lt;/a&gt;, as decribed in
the &lt;a href="https://github.com/JuliaRegistries/Registrator.jl/blob/master/README.md"&gt;Registrator README&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When Registrator is triggered a pull request is opened against this repository. Pull
requests that meet certain guidelines is merged automatically, see
&lt;a href="#automatic-merging-of-pull-requests"&gt;Automatic merging of pull requests&lt;/a&gt;. Other pull
requests need to be manually reviewed and merged by a human.&lt;/p&gt;
&lt;p&gt;It is recommended to also use &lt;a href="https://github.com/JuliaRegistries/TagBot"&gt;TagBot&lt;/a&gt;, which automatically tags a release in your
repository after the new release of your package is merged into the registry.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-automatic-merging-of-pull-requests" class="anchor" aria-hidden="true" href="#automatic-merging-of-pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatic merging of pull requests&lt;/h3&gt;
&lt;p&gt;Pull requests that meet certain criteria are automatically merged peridically.
Only pull requests that are opened by &lt;a href="https://github.com/JuliaRegistries/Registrator.jl"&gt;Registrator&lt;/a&gt; are candidates
for automatic merging.&lt;/p&gt;
&lt;p&gt;The following criteria are applied for all pull requests
(regardless if it is a new package or just a new version):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Version number: Should be a standard increment and not skip versions. This means
incrementing the patch/minor/major version with +1 compared to previous (if any)
releases. If, for example, &lt;code&gt;1.0.0&lt;/code&gt; and &lt;code&gt;1.1.0&lt;/code&gt; are existing versions, valid new
versions are &lt;code&gt;1.0.1&lt;/code&gt;, &lt;code&gt;1.1.1&lt;/code&gt;, &lt;code&gt;1.2.0&lt;/code&gt; and &lt;code&gt;2.0.0&lt;/code&gt;. Invalid new versions include
&lt;code&gt;1.0.2&lt;/code&gt; (skips &lt;code&gt;1.0.1&lt;/code&gt;), &lt;code&gt;1.3.0&lt;/code&gt; (skips &lt;code&gt;1.2.0&lt;/code&gt;), &lt;code&gt;3.0.0&lt;/code&gt; (skips &lt;code&gt;2.0.0&lt;/code&gt;) etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dependencies: All dependencies should have &lt;code&gt;[compat]&lt;/code&gt; entries that are upper bounded.
Examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-toml"&gt;&lt;pre&gt;[&lt;span class="pl-en"&gt;compat&lt;/span&gt;]
&lt;span class="pl-smi"&gt;PackageA&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [1.0.0, 2.0.0), has upper bound (good)&lt;/span&gt;
&lt;span class="pl-smi"&gt;PackageB&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.1, 0.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [0.1.0, 0.3.0), has upper bound (good)&lt;/span&gt;
&lt;span class="pl-smi"&gt;PackageB&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;gt;=3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [3.0.0, ∞), no upper bound (bad)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://julialang.github.io/Pkg.jl/v1/compatibility/" rel="nofollow"&gt;Pkg's documentation&lt;/a&gt; for specification of &lt;code&gt;[compat]&lt;/code&gt; entries in your
&lt;code&gt;Project.toml&lt;/code&gt; file.
(&lt;strong&gt;Note:&lt;/strong&gt; Standard libraries are excluded for this criterion since they are bundled
with Julia, and, hence, implicitly included in the &lt;code&gt;[compat]&lt;/code&gt; entry for Julia.
For the time being, JLL dependencies are also excluded for this criterion because they
often have non-standard version numbering schemes; however, this may change in the future.)&lt;/p&gt;
&lt;p&gt;You may find &lt;a href="https://github.com/bcbi/CompatHelper.jl"&gt;CompatHelper.jl&lt;/a&gt; helpful for maintaining up-to-date &lt;code&gt;[compat]&lt;/code&gt; entries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Package installation: The package should be installable (&lt;code&gt;Pkg.add("PackageName")&lt;/code&gt;),
and loadable (&lt;code&gt;import PackageName&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following list is applied for new package registrations, in addition to the previous
list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Package name: Should start with a capital letter, contain only ASCII alphanumeric
characters, and be at least 5 characters long.&lt;/li&gt;
&lt;li&gt;Version number: Should be a standard initial version number, e.g. &lt;code&gt;0.0.1&lt;/code&gt;, &lt;code&gt;0.1.0&lt;/code&gt;,
or &lt;code&gt;1.0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Repository URL: Should end with &lt;code&gt;$PackageName.jl.git&lt;/code&gt; where &lt;code&gt;PackageName&lt;/code&gt; is the package
name.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more details, see &lt;a href="https://github.com/JuliaRegistries/RegistryCI.jl#automatic-merging-guidelines"&gt;Automatic merging guidelines&lt;/a&gt;.
Please report issues with automatic merging to the &lt;a href="https://github.com/JuliaRegistries/RegistryCI.jl"&gt;RegistryCI repo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-my-pull-request-was-not-approved-for-automatic-merging-what-do-i-do" class="anchor" aria-hidden="true" href="#my-pull-request-was-not-approved-for-automatic-merging-what-do-i-do"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;My pull request was not approved for automatic merging, what do I do?&lt;/h4&gt;
&lt;p&gt;It is recommended that you fix the release to conform to the guidelines and
then retrigger Registrator on the branch/commit that includes the fix.&lt;/p&gt;
&lt;p&gt;If you for some reason can't (or won't) adhere to the guidelines you will have
to wait for a human to review/merge the pull request. You can contact a human
in the &lt;code&gt;#pkg-registration&lt;/code&gt; channel in the official Julia slack to expediate this process.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-my-pull-request-has-a-merge-conflict-what-do-i-do" class="anchor" aria-hidden="true" href="#my-pull-request-has-a-merge-conflict-what-do-i-do"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;My pull request has a merge conflict, what do I do?&lt;/h4&gt;
&lt;p&gt;Retrigger Registrator.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-how-do-i-retrigger-registrator-in-order-to-update-my-pull-request" class="anchor" aria-hidden="true" href="#how-do-i-retrigger-registrator-in-order-to-update-my-pull-request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I retrigger Registrator in order to update my pull request?&lt;/h4&gt;
&lt;p&gt;Do what you did when you triggered Registrator the first time.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-are-there-any-requirements-for-package-names-in-the-general-registry" class="anchor" aria-hidden="true" href="#are-there-any-requirements-for-package-names-in-the-general-registry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Are there any requirements for package names in the General registry?&lt;/h4&gt;
&lt;p&gt;There are no hard requirements, but it is &lt;em&gt;highly recommended&lt;/em&gt; to follow
the &lt;a href="https://julialang.github.io/Pkg.jl/v1/creating-packages/#Package-naming-guidelines-1" rel="nofollow"&gt;package naming guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-what-to-do-when-asked-to-reconsiderupdate-the-package-name" class="anchor" aria-hidden="true" href="#what-to-do-when-asked-to-reconsiderupdate-the-package-name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What to do when asked to reconsider/update the package name?&lt;/h4&gt;
&lt;p&gt;If someone comments on the name of your package when you first release it it is often
because it does not follow the &lt;a href="https://julialang.github.io/Pkg.jl/v1/creating-packages/#Package-naming-guidelines-1" rel="nofollow"&gt;naming guidelines&lt;/a&gt;. If you think that
your package should not follow those conventions for some reason or another, just explain
why. Otherwise, it is often a good idea to just rename the package -- it is more disruptive
to do so after it is already registered, and sticking to the conventions makes it easier
for users to navigate Julia's many varied packages.&lt;/p&gt;
&lt;p&gt;As long as the package is not yet registered, renaming the package from
&lt;code&gt;OldName.jl&lt;/code&gt; to &lt;code&gt;NewName.jl&lt;/code&gt; is reasonably straightforward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="github-rename"&gt;Rename the GitHub repository&lt;/a&gt; to &lt;code&gt;NewName.jl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rename the file &lt;code&gt;src/OldName.jl&lt;/code&gt; to &lt;code&gt;src/NewName.jl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rename the top-level module to &lt;code&gt;NewName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Update tests, documentation, etc, to reference the new name&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-how-do-i-rename-an-existing-registered-package" class="anchor" aria-hidden="true" href="#how-do-i-rename-an-existing-registered-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I rename an existing registered package?&lt;/h4&gt;
&lt;p&gt;Technically, you can't rename a package once registered, as this would break existing users.
But you can re-register the package again under a new name with a new UUID.
Which has basically the same effect.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Follow the instructions above for renaminging a package: rename on GitHub, rename files etc.&lt;/li&gt;
&lt;li&gt;Generate a new UUID for the Project.toml&lt;/li&gt;
&lt;li&gt;Increment the version in the Project.toml as a breaking change.&lt;/li&gt;
&lt;li&gt;&lt;a href="#registering-a-package-in-general"&gt;Register&lt;/a&gt; it as if it were a new package&lt;/li&gt;
&lt;li&gt;Comment on the PR, that this is a rename.&lt;/li&gt;
&lt;li&gt;It will have to go though the normal criteria for registring a new package.
&lt;ul&gt;
&lt;li&gt;In particular, even if you get it merged manually, it will need to wait 3 days from the PR being opened.&lt;/li&gt;
&lt;li&gt;This gives others and yourself the chance to point out any naming issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You also should let your users know about the rename, e.g. by placing a note in the README,
or opening PRs/issues on downstream packages to change over.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-how-do-i-transfer-a-package-to-an-organization-or-another-user" class="anchor" aria-hidden="true" href="#how-do-i-transfer-a-package-to-an-organization-or-another-user"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I transfer a package to an organization or another user?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Use the &lt;a href="github-transfer"&gt;GitHub transfer option&lt;/a&gt; in the settings.&lt;/li&gt;
&lt;li&gt;Manually, in the General edit the repo URL in package's &lt;code&gt;Package.toml&lt;/code&gt; file (e.g &lt;a href="https://github.com/JuliaRegistries/General/blob/master/E/Example/Package.toml#L3"&gt;E/Example/Package.toml&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Technically if you skip the second step things will keep working, because GitHub will redirect;
but it is best practice.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-where-do-i-report-a-problem-with-a-package-in-the-general-registry" class="anchor" aria-hidden="true" href="#where-do-i-report-a-problem-with-a-package-in-the-general-registry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where do I report a problem with a package in the General registry?&lt;/h4&gt;
&lt;p&gt;Report it to the package repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;The General registry is open for everyone to register packages in. The General registry is
not a curated list of Julia packages. In particular this means that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;packages included in the General registry are &lt;strong&gt;not&lt;/strong&gt; reviewed/scrutinized;&lt;/li&gt;
&lt;li&gt;packages included in the General registry are &lt;strong&gt;not&lt;/strong&gt; "official" packages and &lt;strong&gt;not&lt;/strong&gt;
endorsed/approved by the JuliaLang organization;&lt;/li&gt;
&lt;li&gt;the General registry and its maintainers are &lt;strong&gt;not&lt;/strong&gt; responsible for the package code
you install through the General registry -- you are responsible for reviewing your
code dependencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JuliaRegistries</author><guid isPermaLink="false">https://github.com/JuliaRegistries/General</guid><pubDate>Tue, 07 Jan 2020 00:03:00 GMT</pubDate></item><item><title>JuliaDiff/FiniteDiff.jl #4 in Julia, Today</title><link>https://github.com/JuliaDiff/FiniteDiff.jl</link><description>&lt;p&gt;&lt;i&gt;Fast non-allocating calculations of gradients, Jacobians, and Hessians with sparsity support&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-finitediff" class="anchor" aria-hidden="true" href="#finitediff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FiniteDiff&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/JuliaDiff/FiniteDiff.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d0d02c844b8e396825a76c59b78d1249302df425/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961446966662f46696e697465446966662e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaDiff/FiniteDiff.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/ChrisRackauckas/FiniteDiff-jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bab583840ff7f9f101b9684f6ffb24b8e0eaa160/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f743372697363393464326a71697064363f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/t3risc94d2jqipd6?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/JuliaDiff/FiniteDiff.jl?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/258aadecadc464b0f9616654438c1e9b065505cd/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c6961446966662f46696e697465446966662e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaDiff/FiniteDiff.jl/badge.svg?branch=master&amp;amp;service=github" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://codecov.io/github/JuliaDiff/FiniteDiff.jl?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33af4026f23cc1547aae2ef6993b887a6c6f011c/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c6961446966662f46696e697465446966662e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaDiff/FiniteDiff.jl/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This package is for calculating derivatives, gradients, Jacobians, Hessians,
etc. numerically. This library is for maximizing speed while giving a usable
interface to end users in a way that specializes on array types and sparsity.
Included is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fully non-allocating mutable forms for fast array support&lt;/li&gt;
&lt;li&gt;Fully non-mutating forms for static array support&lt;/li&gt;
&lt;li&gt;Coloring vectors for efficient calculation of sparse Jacobians&lt;/li&gt;
&lt;li&gt;GPU-compatible, to the extent that you can be with finite differencing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want the fastest versions, create a cache and repeatedly call the
differencing functions at different &lt;code&gt;x&lt;/code&gt; values (or with different &lt;code&gt;f&lt;/code&gt; functions),
while if you want a quick and dirty numerical answer, directly call a differencing
function.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For analogous sparse differentiation with automatic differentiation, see &lt;a href="https://github.com/JuliaDiff/SparseDiffTools.jl"&gt;SparseDiffTools.jl&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-finitediffjl-vs-finitedifferencesjl" class="anchor" aria-hidden="true" href="#finitediffjl-vs-finitedifferencesjl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FiniteDiff.jl vs FiniteDifferences.jl&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/JuliaDiff/FiniteDiff.jl"&gt;FiniteDiff.jl&lt;/a&gt; and &lt;a href="https://github.com/JuliaDiff/FiniteDifferences.jl"&gt;FiniteDifferences.jl&lt;/a&gt;
are similar libraries: both calculate approximate derivatives numerically.
You should definately use one or the other, rather than the legacy &lt;a href="https://github.com/JuliaMath/Calculus.jl"&gt;Calculus.jl&lt;/a&gt; finite differencing, or reimplementing it yourself.
At some point in the future they might merge, or one might depend on the other.
Right now here are the differences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FiniteDifferences.jl supports basically any type, where as FiniteDiff.jl supports only array-ish types&lt;/li&gt;
&lt;li&gt;FiniteDifferences.jl supports higher order approximation&lt;/li&gt;
&lt;li&gt;FiniteDiff.jl is carefully optimized to minimize allocations&lt;/li&gt;
&lt;li&gt;FiniteDiff.jl supports coloring vectors for efficient calculation of sparse Jacobians&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tutorials" class="anchor" aria-hidden="true" href="#tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorials&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-tutorial-1-fast-dense-jacobians" class="anchor" aria-hidden="true" href="#tutorial-1-fast-dense-jacobians"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorial 1: Fast Dense Jacobians&lt;/h3&gt;
&lt;p&gt;It's always fun to start out with a tutorial before jumping into the details!
Suppose we had the functions:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;fcalls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(dx,x) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; in-place&lt;/span&gt;
  &lt;span class="pl-k"&gt;global&lt;/span&gt; fcalls &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;length&lt;/span&gt;(x)&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
    dx[i] &lt;span class="pl-k"&gt;=&lt;/span&gt; x[i&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;x[i] &lt;span class="pl-k"&gt;+&lt;/span&gt; x[i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  dx[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;x[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;+&lt;/span&gt; x[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]
  dx[&lt;span class="pl-c1"&gt;end&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; x[&lt;span class="pl-c1"&gt;end&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;x[&lt;span class="pl-c1"&gt;end&lt;/span&gt;]
  &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-en"&gt;handleleft&lt;/span&gt;(x,i) &lt;span class="pl-k"&gt;=&lt;/span&gt; i&lt;span class="pl-k"&gt;==&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; ? &lt;span class="pl-c1"&gt;zero&lt;/span&gt;(&lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x)) : x[i&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
&lt;span class="pl-en"&gt;handleright&lt;/span&gt;(x,i) &lt;span class="pl-k"&gt;=&lt;/span&gt; i&lt;span class="pl-k"&gt;==&lt;/span&gt;&lt;span class="pl-c1"&gt;length&lt;/span&gt;(x) ? &lt;span class="pl-c1"&gt;zero&lt;/span&gt;(&lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x)) : x[i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;(x) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; out-of-place&lt;/span&gt;
  &lt;span class="pl-k"&gt;global&lt;/span&gt; fcalls &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
  &lt;span class="pl-c1"&gt;@SVector&lt;/span&gt; [&lt;span class="pl-c1"&gt;handleleft&lt;/span&gt;(x,i) &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;x[i] &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;handleright&lt;/span&gt;(x,i) &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;length&lt;/span&gt;(x)]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and we wanted to calculate the derivatives of them. The simplest thing we can
do is ask for the Jacobian. If we want to allocate the result, we'd use the
allocating function &lt;code&gt;finite_difference_jacobian&lt;/code&gt; on a 1-argument function &lt;code&gt;g&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; StaticArrays
x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;@SVector&lt;/span&gt; &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_jacobian&lt;/span&gt;(g,x)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#=&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;10×10 SArray{Tuple{10,10},Float64,2,100} with indices SOneTo(10)×SOneTo(10):&lt;/span&gt;
&lt;span class="pl-c"&gt; -2.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  1.0  -2.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   1.0  -2.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   1.0  -2.0   1.0   0.0   0.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   1.0  -2.0   1.0   0.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   0.0   1.0  -2.0   1.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   0.0   0.0   1.0  -2.0   1.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   0.0   0.0   0.0   1.0  -2.0   1.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0  -2.0   1.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0  -2.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;=#&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FiniteDiff.jl assumes you're a smart cookie, and so if you used an
out-of-place function then it'll not mutate vectors at all, and is thus compatible
with objects like StaticArrays and will give you a fast Jacobian.&lt;/p&gt;
&lt;p&gt;But if you wanted to use mutatiion, then we'd have to use the in-place function
&lt;code&gt;f&lt;/code&gt; and call the mutating form:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
output &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;zeros&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_jacobian!&lt;/span&gt;(output,f,x)
output

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#=&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;10×10 Array{Float64,2}:&lt;/span&gt;
&lt;span class="pl-c"&gt; -2.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  1.0  -2.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   1.0  -2.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   1.0  -2.0   1.0   0.0   0.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   1.0  -2.0   1.0   0.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   0.0   1.0  -2.0   1.0   0.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   0.0   0.0   1.0  -2.0   1.0   0.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   0.0   0.0   0.0   1.0  -2.0   1.0   0.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0  -2.0   1.0&lt;/span&gt;
&lt;span class="pl-c"&gt;  0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0  -2.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;=#&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But what if you want this to be completely non-allocating on your mutating form?
Then you need to preallocate a cache:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;cache &lt;span class="pl-k"&gt;=&lt;/span&gt; FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;JacobianCache&lt;/span&gt;(x)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and now using this cache avoids allocating:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;@time&lt;/span&gt; FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_jacobian!&lt;/span&gt;(output,f,x,cache) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 0.000008 seconds (7 allocations: 224 bytes)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that's pretty much it! Gradients and Hessians work similarly: out of place
doesn't index, and in-place avoids allocations. Either way, you're fast. GPUs
etc. all work.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tutorial-2-fast-sparse-jacobians" class="anchor" aria-hidden="true" href="#tutorial-2-fast-sparse-jacobians"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorial 2: Fast Sparse Jacobians&lt;/h3&gt;
&lt;p&gt;Now let's exploit sparsity. If we knew the sparsity pattern we could write it
down analytically as a sparse matrix, but let's assume we don't. Thus we can
use &lt;a href="https://github.com/JuliaDiffEq/SparsityDetection.jl"&gt;SparsityDetection.jl&lt;/a&gt;
to automatically get the sparsity pattern of the Jacobian as a sparse matrix:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; SparsityDetection, SparseArrays
in &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
out &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;similar&lt;/span&gt;(in)
sparsity_pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;sparsity!&lt;/span&gt;(f,out,in)
sparsejac &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Float64&lt;/span&gt;.(&lt;span class="pl-c1"&gt;sparse&lt;/span&gt;(sparsity_pattern))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we can use &lt;a href="https://github.com/JuliaDiffEq/SparseDiffTools.jl"&gt;SparseDiffTools.jl&lt;/a&gt;
to get the color vector:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; SparseDiffTools
colors &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;matrix_colors&lt;/span&gt;(sparsejac)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can do sparse differentiation by passing the color vector and the sparsity
pattern:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;sparsecache &lt;span class="pl-k"&gt;=&lt;/span&gt; FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;JacobianCache&lt;/span&gt;(x,colorvec&lt;span class="pl-k"&gt;=&lt;/span&gt;colors,sparsity&lt;span class="pl-k"&gt;=&lt;/span&gt;sparsejac)
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_jacobian!&lt;/span&gt;(sparsejac,f,x,sparsecache)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the number of &lt;code&gt;f&lt;/code&gt; evaluations to fill a Jacobian is &lt;code&gt;1+maximum(colors)&lt;/code&gt;.
By default, &lt;code&gt;colors=1:length(x)&lt;/code&gt;, so in this case we went from 10 function calls
to 4. The sparser the matrix, the more the gain! We can measure this as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;fcalls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_jacobian!&lt;/span&gt;(output,f,x,cache)
fcalls &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;11&lt;/span&gt;

fcalls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_jacobian!&lt;/span&gt;(sparsejac,f,x,sparsecache)
fcalls &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-tutorial-3-fast-tridiagonal-jacobians" class="anchor" aria-hidden="true" href="#tutorial-3-fast-tridiagonal-jacobians"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorial 3: Fast Tridiagonal Jacobians&lt;/h3&gt;
&lt;p&gt;Handling dense matrices? Easy. Handling sparse matrices? Cool stuff. Automatically
specializing on the exact structure of a matrix? Even better. FiniteDiff can
specialize on types which implement the
&lt;a href="https://github.com/JuliaDiffEq/ArrayInterface.jl"&gt;ArrayInterface.jl&lt;/a&gt; interface.
This includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Diagonal&lt;/li&gt;
&lt;li&gt;Bidiagonal&lt;/li&gt;
&lt;li&gt;UpperTriangular and LowerTriangular&lt;/li&gt;
&lt;li&gt;Tridiagonal and SymTridiagonal&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JuliaMatrices/BandedMatrices.jl"&gt;BandedMatrices.jl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JuliaMatrices/BlockBandedMatrices.jl"&gt;BlockBandedMatrices.jl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our previous example had a Tridiagonal Jacobian, so let's use this. If we just
do&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; ArrayInterface, LinearAlgebra
tridiagjac &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Tridiagonal&lt;/span&gt;(output)
colors &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;matrix_colors&lt;/span&gt;(jac)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;we get the analytical solution to the optimal matrix colors for our structured
Jacobian. Now we can use this in our differencing routines:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;tridiagcache &lt;span class="pl-k"&gt;=&lt;/span&gt; FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;JacobianCache&lt;/span&gt;(x,colorvec&lt;span class="pl-k"&gt;=&lt;/span&gt;colors,sparsity&lt;span class="pl-k"&gt;=&lt;/span&gt;tridiagjac)
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_jacobian!&lt;/span&gt;(tridiagjac,f,x,tridiagcache)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It'll use a special iteration scheme dependent on the matrix type to accelerate
it beyond general sparse usage.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tutorial-4-fast-block-banded-matrices" class="anchor" aria-hidden="true" href="#tutorial-4-fast-block-banded-matrices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorial 4: Fast Block Banded Matrices&lt;/h3&gt;
&lt;p&gt;Now let's showcase a difficult example. Say we had a large system of partial
differential equations, with a function like:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;pde&lt;/span&gt;(out, x)
	x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reshape&lt;/span&gt;(x, &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
	out &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reshape&lt;/span&gt;(out, &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
	&lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;
		&lt;span class="pl-k"&gt;for&lt;/span&gt; j &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;
			out[i, j] &lt;span class="pl-k"&gt;=&lt;/span&gt; x[i, j] &lt;span class="pl-k"&gt;+&lt;/span&gt; x[&lt;span class="pl-c1"&gt;max&lt;/span&gt;(i &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;), j] &lt;span class="pl-k"&gt;+&lt;/span&gt; x[&lt;span class="pl-c1"&gt;min&lt;/span&gt;(i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;size&lt;/span&gt;(x, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)), j] &lt;span class="pl-k"&gt;+&lt;/span&gt;  x[i, &lt;span class="pl-c1"&gt;max&lt;/span&gt;(j&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)]  &lt;span class="pl-k"&gt;+&lt;/span&gt; x[i, &lt;span class="pl-c1"&gt;min&lt;/span&gt;(j&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;size&lt;/span&gt;(x, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))]
		&lt;span class="pl-k"&gt;end&lt;/span&gt;
	&lt;span class="pl-k"&gt;end&lt;/span&gt;
	&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;vec&lt;/span&gt;(out)
&lt;span class="pl-k"&gt;end&lt;/span&gt;
x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;10000&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case, we can see that our sparsity pattern is a BlockBandedMatrix, so
let's specialize the Jacobian calculation on this fact:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; FillArrays, BlockBandedMatrices
Jbbb &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;BandedBlockBandedMatrix&lt;/span&gt;(&lt;span class="pl-c1"&gt;Ones&lt;/span&gt;(&lt;span class="pl-c1"&gt;10000&lt;/span&gt;, &lt;span class="pl-c1"&gt;10000&lt;/span&gt;), &lt;span class="pl-c1"&gt;fill&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;), &lt;span class="pl-c1"&gt;fill&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;), (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;), (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
colorsbbb &lt;span class="pl-k"&gt;=&lt;/span&gt; ArrayInterface&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;matrix_colors&lt;/span&gt;(Jbbb)
bbbcache &lt;span class="pl-k"&gt;=&lt;/span&gt; FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;JacobianCache&lt;/span&gt;(x,colorvec&lt;span class="pl-k"&gt;=&lt;/span&gt;colorsbbb,sparsity&lt;span class="pl-k"&gt;=&lt;/span&gt;Jbbb)
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_jacobian!&lt;/span&gt;(Jbbb, pde, x, colorvec&lt;span class="pl-k"&gt;=&lt;/span&gt;colorsbbb)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And boom, a fast Jacobian filling algorithm on your special matrix.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-general-structure" class="anchor" aria-hidden="true" href="#general-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General Structure&lt;/h2&gt;
&lt;p&gt;The general structure of the library is as follows. You can call the differencing
functions directly and this will allocate a temporary cache to solve the problem
with. To make this non-allocating for repeat calls, you can call the cache
construction functions. Each cache construction function has two possibilities:
one version where you give it prototype arrays and it generates the cache
variables, and one fully non-allocating version where you give it the cache
variables. This is summarized as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Just want a quick derivative? Calculating once? Call the differencing function.&lt;/li&gt;
&lt;li&gt;Going to calculate the derivative multiple times but don't have cache arrays
around? Use the allocating cache and then pass this into the differencing
function (this will allocate only in the one cache construction).&lt;/li&gt;
&lt;li&gt;Have cache variables around from your own algorithm and want to re-use them
in the differencing functions? Use the non-allocating cache construction
and pass the cache to the differencing function.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-f-definitions" class="anchor" aria-hidden="true" href="#f-definitions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;f Definitions&lt;/h2&gt;
&lt;p&gt;In all functions, the inplace form is &lt;code&gt;f!(dx,x)&lt;/code&gt; while the out of place form is &lt;code&gt;dx = f(x)&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-colorvec-vectors" class="anchor" aria-hidden="true" href="#colorvec-vectors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;colorvec Vectors&lt;/h2&gt;
&lt;p&gt;colorvec vectors are allowed to be supplied to the Jacobian routines, and these are
the directional derivatives for constructing the Jacobian. For example, an accurate
NxN tridiagonal Jacobian can be computed in just 4 &lt;code&gt;f&lt;/code&gt; calls by using
&lt;code&gt;colorvec=repeat(1:3,N÷3)&lt;/code&gt;. For information on automatically generating colorvec
vectors of sparse matrices, see &lt;a href="https://github.com/JuliaDiff/SparseDiffTools.jl"&gt;SparseDiffTools.jl&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hessian coloring support is coming soon!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-scalar-derivatives" class="anchor" aria-hidden="true" href="#scalar-derivatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scalar Derivatives&lt;/h2&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_derivative&lt;/span&gt;(f, x&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;, fdtype&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Val{&lt;span class="pl-c1"&gt;:central&lt;/span&gt;},
    returntype&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x), f_x&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Union{Nothing,T}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;nothing&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-multi-point-derivatives" class="anchor" aria-hidden="true" href="#multi-point-derivatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-Point Derivatives&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-differencing-calls" class="anchor" aria-hidden="true" href="#differencing-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differencing Calls&lt;/h3&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Cache-less but non-allocating if `fx` and `epsilon` are supplied&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; fx must be f(x)&lt;/span&gt;
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_derivative&lt;/span&gt;(
    f,
    x          &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    fdtype     &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; Val{&lt;span class="pl-c1"&gt;:central&lt;/span&gt;},
    returntype &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x),      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; return type of f&lt;/span&gt;
    fx         &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{Nothing,AbstractArray{&amp;lt;:Number}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;,
    epsilon    &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{Nothing,AbstractArray{&amp;lt;:Real}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;;
    [epsilon_factor])

FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_derivative!&lt;/span&gt;(
    df         &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    f,
    x          &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    fdtype     &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; Val{&lt;span class="pl-c1"&gt;:central&lt;/span&gt;},
    returntype &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x),
    fx         &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{Nothing,AbstractArray{&amp;lt;:Number}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;,
    epsilon    &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{Nothing,AbstractArray{&amp;lt;:Real}}&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;;
    [epsilon_factor])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Cached&lt;/span&gt;
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_derivative!&lt;/span&gt;(
    df&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    f,
    x&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    cache&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;DerivativeCache{T1,T2,fdtype,returntype}&lt;/span&gt;;
    [epsilon_factor])&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-allocating-and-non-allocating-constructor" class="anchor" aria-hidden="true" href="#allocating-and-non-allocating-constructor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Allocating and Non-Allocating Constructor&lt;/h3&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;DerivativeCache&lt;/span&gt;(
    x          &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    fx         &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{Nothing,AbstractArray{&amp;lt;:Number}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;,
    epsilon    &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{Nothing,AbstractArray{&amp;lt;:Real}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;,
    fdtype     &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; Val{&lt;span class="pl-c1"&gt;:central&lt;/span&gt;},
    returntype &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allocates either &lt;code&gt;fx&lt;/code&gt; or &lt;code&gt;epsilon&lt;/code&gt; if these are nothing and they are needed.
&lt;code&gt;fx&lt;/code&gt; is the current call of &lt;code&gt;f(x)&lt;/code&gt; and is required for forward-differencing
(otherwise is not necessary).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-gradients" class="anchor" aria-hidden="true" href="#gradients"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradients&lt;/h2&gt;
&lt;p&gt;Gradients are either a vector-&amp;gt;scalar map &lt;code&gt;f(x)&lt;/code&gt;, or a scalar-&amp;gt;vector map
&lt;code&gt;f(fx,x)&lt;/code&gt; if &lt;code&gt;inplace=Val{true}&lt;/code&gt; and &lt;code&gt;fx=f(x)&lt;/code&gt; if &lt;code&gt;inplace=Val{false}&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-differencing-calls-1" class="anchor" aria-hidden="true" href="#differencing-calls-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differencing Calls&lt;/h3&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Cache-less&lt;/span&gt;
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_gradient&lt;/span&gt;(
    f,
    x,
    fdtype&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Val{&lt;span class="pl-c1"&gt;:central&lt;/span&gt;},
    returntype&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x),
    inplace&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{Val{T3}}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Val{&lt;span class="pl-c1"&gt;true&lt;/span&gt;};
    [epsilon_factor])
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_gradient!&lt;/span&gt;(
    df,
    f,
    x,
    fdtype&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Val{&lt;span class="pl-c1"&gt;:central&lt;/span&gt;},
    returntype&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(df),
    inplace&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{Val{T3}}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Val{&lt;span class="pl-c1"&gt;true&lt;/span&gt;};
    [epsilon_factor])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Cached&lt;/span&gt;
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_gradient!&lt;/span&gt;(
    df&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    f,
    x&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    cache&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;GradientCache&lt;/span&gt;;
    [epsilon_factor])&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-allocating-cache-constructor" class="anchor" aria-hidden="true" href="#allocating-cache-constructor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Allocating Cache Constructor&lt;/h3&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;GradientCache&lt;/span&gt;(
    df         &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{&amp;lt;:Number,AbstractArray{&amp;lt;:Number}}&lt;/span&gt;,
    x          &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{&amp;lt;:Number, AbstractArray{&amp;lt;:Number}}&lt;/span&gt;,
    fdtype     &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; Val{&lt;span class="pl-c1"&gt;:central&lt;/span&gt;},
    returntype &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(df),
    inplace    &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{Val{T3}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; Val{&lt;span class="pl-c1"&gt;true&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-non-allocating-cache-constructor" class="anchor" aria-hidden="true" href="#non-allocating-cache-constructor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-Allocating Cache Constructor&lt;/h3&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;GradientCache&lt;/span&gt;(
    c1         &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{Nothing,AbstractArray{&amp;lt;:Number}}&lt;/span&gt;,
    c2         &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{Nothing,AbstractArray{&amp;lt;:Number}}&lt;/span&gt;,
    fx         &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{Nothing,&amp;lt;:Number,AbstractArray{&amp;lt;:Number}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;,
    fdtype     &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; Val{&lt;span class="pl-c1"&gt;:central&lt;/span&gt;},
    returntype &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(df),
    inplace    &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{Val{T3}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; Val{&lt;span class="pl-c1"&gt;true&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that here &lt;code&gt;fx&lt;/code&gt; is a cached function call of &lt;code&gt;f&lt;/code&gt;. If you provide &lt;code&gt;fx&lt;/code&gt;, then
&lt;code&gt;fx&lt;/code&gt; will be used in the forward differencing method to skip a function call.
It is on you to make sure that you update &lt;code&gt;cache.fx&lt;/code&gt; every time before
calling &lt;code&gt;FiniteDiff.finite_difference_gradient!&lt;/code&gt;. A good use of this is if you have a
cache array for the output of &lt;code&gt;fx&lt;/code&gt; already being used, you can make it alias
into the differencing algorithm here.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-jacobians" class="anchor" aria-hidden="true" href="#jacobians"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jacobians&lt;/h2&gt;
&lt;p&gt;Jacobians are for functions &lt;code&gt;f!(fx,x)&lt;/code&gt; when using in-place &lt;code&gt;finite_difference_jacobian!&lt;/code&gt;,
and &lt;code&gt;fx = f(x)&lt;/code&gt; when using out-of-place &lt;code&gt;finite_difference_jacobain&lt;/code&gt;. The out-of-place
jacobian will return a similar type as &lt;code&gt;jac_prototype&lt;/code&gt; if it is not a &lt;code&gt;nothing&lt;/code&gt;. For non-square
Jacobians, a cache which specifies the vector &lt;code&gt;fx&lt;/code&gt; is required.&lt;/p&gt;
&lt;p&gt;For sparse differentiation, pass a &lt;code&gt;colorvec&lt;/code&gt; of matrix colors. &lt;code&gt;sparsity&lt;/code&gt; should be a sparse
or structured matrix (&lt;code&gt;Tridiagonal&lt;/code&gt;, &lt;code&gt;Banded&lt;/code&gt;, etc. according to the ArrayInterface.jl specs)
to allow for decompression, otherwise the result will be the colorvec compressed Jacobian.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-differencing-calls-2" class="anchor" aria-hidden="true" href="#differencing-calls-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differencing Calls&lt;/h3&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Cache-less&lt;/span&gt;
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_jacobian&lt;/span&gt;(
    f,
    x          &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    fdtype     &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Val{&lt;span class="pl-c1"&gt;:central&lt;/span&gt;},
    returntype &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x),
    relstep&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;default_relstep&lt;/span&gt;(fdtype, &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x)),
    absstep&lt;span class="pl-k"&gt;=&lt;/span&gt;relstep,
    colorvec &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;length&lt;/span&gt;(x),
    sparsity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;,
    jac_prototype &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;)

&lt;span class="pl-c1"&gt;finite_difference_jacobian!&lt;/span&gt;(J&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;AbstractMatrix&lt;/span&gt;,
    f,
    x&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    fdtype     &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Val{&lt;span class="pl-c1"&gt;:forward&lt;/span&gt;},
    returntype &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x),
    f_in       &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Union{T2,Nothing}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;nothing&lt;/span&gt;;
    relstep&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;default_relstep&lt;/span&gt;(fdtype, &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x)),
    absstep&lt;span class="pl-k"&gt;=&lt;/span&gt;relstep,
    colorvec &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;length&lt;/span&gt;(x),
    sparsity &lt;span class="pl-k"&gt;=&lt;/span&gt; ArrayInterface&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;has_sparsestruct&lt;/span&gt;(J) ? J : &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Cached&lt;/span&gt;
FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_jacobian&lt;/span&gt;(
    f,
    x,
    cache&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;JacobianCache&lt;/span&gt;;
    relstep&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;default_relstep&lt;/span&gt;(fdtype, &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x)),
    absstep&lt;span class="pl-k"&gt;=&lt;/span&gt;relstep,
    colorvec &lt;span class="pl-k"&gt;=&lt;/span&gt; cache&lt;span class="pl-k"&gt;.&lt;/span&gt;colorvec,
    sparsity &lt;span class="pl-k"&gt;=&lt;/span&gt; cache&lt;span class="pl-k"&gt;.&lt;/span&gt;sparsity,
    jac_prototype &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;)

FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;finite_difference_jacobian!&lt;/span&gt;(
    J&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;AbstractMatrix{&amp;lt;:Number}&lt;/span&gt;,
    f,
    x&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    cache&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;JacobianCache&lt;/span&gt;;
    relstep&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;default_relstep&lt;/span&gt;(fdtype, &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x)),
    absstep&lt;span class="pl-k"&gt;=&lt;/span&gt;relstep,
    colorvec &lt;span class="pl-k"&gt;=&lt;/span&gt; cache&lt;span class="pl-k"&gt;.&lt;/span&gt;colorvec,
    sparsity &lt;span class="pl-k"&gt;=&lt;/span&gt; cache&lt;span class="pl-k"&gt;.&lt;/span&gt;sparsity)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-allocating-cache-constructor-1" class="anchor" aria-hidden="true" href="#allocating-cache-constructor-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Allocating Cache Constructor&lt;/h3&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;JacobianCache&lt;/span&gt;(
              x,
              fdtype     &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; Val{&lt;span class="pl-c1"&gt;:central&lt;/span&gt;},
              returntype &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x),
              colorvec &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;length&lt;/span&gt;(x)
              sparsity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This assumes the Jacobian is square.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-non-allocating-cache-constructor-1" class="anchor" aria-hidden="true" href="#non-allocating-cache-constructor-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-Allocating Cache Constructor&lt;/h3&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;FiniteDiff&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;JacobianCache&lt;/span&gt;(
              x1 ,
              fx ,
              fx1,
              fdtype     &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; Val{&lt;span class="pl-c1"&gt;:central&lt;/span&gt;},
              returntype &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T2}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(fx),
              colorvec &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;length&lt;/span&gt;(x),
              sparsity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-hessians" class="anchor" aria-hidden="true" href="#hessians"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hessians&lt;/h2&gt;
&lt;p&gt;Hessians are for functions &lt;code&gt;f(x)&lt;/code&gt; which return a scalar.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-differencing-calls-3" class="anchor" aria-hidden="true" href="#differencing-calls-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differencing Calls&lt;/h3&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Cacheless&lt;/span&gt;
&lt;span class="pl-c1"&gt;finite_difference_hessian&lt;/span&gt;(f, x&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    fdtype     &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Val{&lt;span class="pl-c1"&gt;:hcentral&lt;/span&gt;},
    inplace    &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{Val{T2}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; x &lt;span class="pl-k"&gt;isa&lt;/span&gt; StaticArray ? Val{&lt;span class="pl-c1"&gt;true&lt;/span&gt;} : Val{&lt;span class="pl-c1"&gt;false&lt;/span&gt;};
    relstep&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;default_relstep&lt;/span&gt;(fdtype, &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x)),
    absstep&lt;span class="pl-k"&gt;=&lt;/span&gt;relstep)

&lt;span class="pl-c1"&gt;finite_difference_hessian!&lt;/span&gt;(H&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;AbstractMatrix&lt;/span&gt;,f,
    x&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;AbstractArray{&amp;lt;:Number}&lt;/span&gt;,
    fdtype     &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Val{&lt;span class="pl-c1"&gt;:hcentral&lt;/span&gt;},
    inplace    &lt;span class="pl-k"&gt;::&lt;/span&gt; &lt;span class="pl-c1"&gt;Type{Val{T2}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; x &lt;span class="pl-k"&gt;isa&lt;/span&gt; StaticArray ? Val{&lt;span class="pl-c1"&gt;true&lt;/span&gt;} : Val{&lt;span class="pl-c1"&gt;false&lt;/span&gt;};
    relstep&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;default_relstep&lt;/span&gt;(fdtype, &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x)),
    absstep&lt;span class="pl-k"&gt;=&lt;/span&gt;relstep)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Cached&lt;/span&gt;
&lt;span class="pl-c1"&gt;finite_difference_hessian&lt;/span&gt;(
    f,x,
    cache&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;HessianCache{T,fdtype,inplace}&lt;/span&gt;;
    relstep&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;default_relstep&lt;/span&gt;(fdtype, &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x)),
    absstep&lt;span class="pl-k"&gt;=&lt;/span&gt;relstep)

&lt;span class="pl-c1"&gt;finite_difference_hessian!&lt;/span&gt;(H,f,x,
                           cache&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;HessianCache{T,fdtype,inplace}&lt;/span&gt;;
                           relstep &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;default_relstep&lt;/span&gt;(fdtype, &lt;span class="pl-c1"&gt;eltype&lt;/span&gt;(x)),
                           absstep &lt;span class="pl-k"&gt;=&lt;/span&gt; relstep)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-allocating-cache-calls" class="anchor" aria-hidden="true" href="#allocating-cache-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Allocating Cache Calls&lt;/h3&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;HessianCache&lt;/span&gt;(x,fdtype&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Val{&lt;span class="pl-c1"&gt;:hcentral&lt;/span&gt;},
                        inplace&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{Val{T2}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; x &lt;span class="pl-k"&gt;isa&lt;/span&gt; StaticArray ? Val{&lt;span class="pl-c1"&gt;true&lt;/span&gt;} : Val{&lt;span class="pl-c1"&gt;false&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-non-allocating-cache-calls" class="anchor" aria-hidden="true" href="#non-allocating-cache-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-Allocating Cache Calls&lt;/h3&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;HessianCache&lt;/span&gt;(xpp,xpm,xmp,xmm,
                      fdtype&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{T1}&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Val{&lt;span class="pl-c1"&gt;:hcentral&lt;/span&gt;},
                      inplace&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Type{Val{T2}}&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; x &lt;span class="pl-k"&gt;isa&lt;/span&gt; StaticArray ? Val{&lt;span class="pl-c1"&gt;true&lt;/span&gt;} : Val{&lt;span class="pl-c1"&gt;false&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JuliaDiff</author><guid isPermaLink="false">https://github.com/JuliaDiff/FiniteDiff.jl</guid><pubDate>Tue, 07 Jan 2020 00:04:00 GMT</pubDate></item><item><title>joshday/XKCD.jl #5 in Julia, Today</title><link>https://github.com/joshday/XKCD.jl</link><description>&lt;p&gt;&lt;i&gt;Retrieve data from the XKCD webcomic&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/joshday/XKCD.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4e976c5a3ab368e3a3e3d109f5bc746b553e2735/68747470733a2f2f7472617669732d63692e6f72672f6a6f73686461792f584b43442e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/joshday/XKCD.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-xkcd" class="anchor" aria-hidden="true" href="#xkcd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XKCD&lt;/h1&gt;
&lt;p&gt;A Julia package for retrieving data from the XKCD webcomic: &lt;a href="https://xkcd.com" rel="nofollow"&gt;xkcd.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;comic&lt;/code&gt; function retrieves the comic's data and optionally opens the image in a browser.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;using&lt;/span&gt; XKCD

XKCD&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;comic&lt;/span&gt;(&lt;span class="pl-c1"&gt;552&lt;/span&gt;; open&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;false&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; JSON3.Object{Base.CodeUnits{UInt8,JSON3.VectorString{Array{UInt8,1}}},Array{UInt64,1}} with 11 entries:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   :month      =&amp;gt; "3"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   :num        =&amp;gt; 552&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   :link       =&amp;gt; ""&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   :year       =&amp;gt; "2009"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   :news       =&amp;gt; ""&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   :safe_title =&amp;gt; "Correlation"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   :transcript =&amp;gt; "[[A man is talking to a woman]]\nMan: I used to think correlation implied causation.\nMan: Then I took a statistics class.  Now I don't…&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   :alt        =&amp;gt; "Correlation doesn't imply causation, but it does waggle its eyebrows suggestively and gesture furtively while mouthing 'look over there…&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   :img        =&amp;gt; "https://imgs.xkcd.com/comics/correlation.png"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   :title      =&amp;gt; "Correlation"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   :day        =&amp;gt; "6"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>joshday</author><guid isPermaLink="false">https://github.com/joshday/XKCD.jl</guid><pubDate>Tue, 07 Jan 2020 00:05:00 GMT</pubDate></item></channel></rss>