<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Julia, Today</title><link>https://github.com/trending/julia?since=daily</link><description>The top repositories on GitHub for julia, measured daily</description><pubDate>Sat, 01 Feb 2020 01:11:28 GMT</pubDate><lastBuildDate>Sat, 01 Feb 2020 01:11:28 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>caseykneale/VIMKiller #1 in Julia, Today</title><link>https://github.com/caseykneale/VIMKiller</link><description>&lt;p&gt;&lt;i&gt;Exiting VIM is hard; sometimes we need to take drastic measures&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vimkiller" class="anchor" aria-hidden="true" href="#vimkiller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VIMKiller&lt;/h1&gt;
&lt;p&gt;VI(M) is hard, and sometimes we need to take drastic measures. We understand your needs.
Maybe you're new on the job, and you forgot to set your default text editor to nano, emacs,
gedit, whatever. VIM pops up and now you have to make a choice...&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/screen.png"&gt;&lt;img src="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/screen.png" alt="alt text1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Google "how do I exit VIM" and let IT, or any passer-bys immediately know your VIM skill level.&lt;/li&gt;
&lt;li&gt;Ask for help. What are you? A collaborator type?&lt;/li&gt;
&lt;li&gt;Bring VIM Killer to work and look like a true pro!&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-vim-killer" class="anchor" aria-hidden="true" href="#what-is-vim-killer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is VIM Killer?&lt;/h2&gt;
&lt;p&gt;VIMKiller is a button on-top of an arduino wrapped in a 3-D printed enclosure. It is expertly crafted.
When the button is pressed it sends a message over your serial port to kill VIM. Now, at this point,
you need to have the Julia VIMKiller script running in the background. It may be best to have this script run at start-up (easy-fix). The Julia script listens for this serial message and returns in kind by killing all VIM processes on your Linux machine. Easy, and practical - right?&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/protectedbtn.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/protectedbtn.jpg" alt="alt text2" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/ready.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/ready.jpg" alt="alt text3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-update" class="anchor" aria-hidden="true" href="#important-update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important Update&lt;/h2&gt;
&lt;p&gt;A very notable missing feature has been suggested (&lt;a href="https://github.com/caseykneale/VIMKiller/issues/1"&gt;https://github.com/caseykneale/VIMKiller/issues/1&lt;/a&gt;). As github users have shown distinct interest in this most sincere project (soring past 50 stars now). I wanted you all to rest well and feel safe knowing that this will be worked on. May we all stay emotionally unharmed from VIM!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-in-this-repository" class="anchor" aria-hidden="true" href="#in-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In this repository&lt;/h2&gt;
&lt;p&gt;the CAD files (made in FreeCAD) for the enclosure are contained. The requisite code as well. The Arduino, solid core wire, 10kOhm resistor, 2mm diameter metal rod for the hinge cut to size, and clicky red button should be on your shelf. Who doesn't have those things?&lt;/p&gt;
&lt;p&gt;If not you can send the author 500,000 USD$ for a custom made VIMKiller solution. You might say "Hey this gadget is super practical, and will definitely help me advance in my career, but it is maybe a &lt;em&gt;little&lt;/em&gt; pricey." - think of this as an investment. Half a million, or learn VIM?&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disclosure" class="anchor" aria-hidden="true" href="#disclosure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclosure&lt;/h2&gt;
&lt;p&gt;This is a joke from julia slack. Seriously, don't take this seriously. Don't get me wrong, this actually does work. I made this in a day very sloppily to satisfy a fictional and satirical need to try to make some people laugh.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>caseykneale</author><guid isPermaLink="false">https://github.com/caseykneale/VIMKiller</guid><pubDate>Sat, 01 Feb 2020 00:01:00 GMT</pubDate></item><item><title>FluxML/Zygote.jl #2 in Julia, Today</title><link>https://github.com/FluxML/Zygote.jl</link><description>&lt;p&gt;&lt;i&gt;Intimate Affection Auditor&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/zygote.png"&gt;&lt;img width="400px" src="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/zygote.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/FluxML/Zygote.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a383c9b8923b8c02f50ec6a7cd2348f1a07df588/68747470733a2f2f7472617669732d63692e6f72672f466c75784d4c2f5a79676f74652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/FluxML/Zygote.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://fluxml.ai/Zygote.jl/dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev Docs" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;] add Zygote&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Zygote provides source-to-source automatic differentiation (AD) in Julia, and is the next-gen AD system for the &lt;a href="https://github.com/FluxML/Flux.jl"&gt;Flux&lt;/a&gt; differentiable programming framework. For more details and benchmarks of Zygote's technique, see &lt;a href="https://arxiv.org/abs/1810.07951" rel="nofollow"&gt;our paper&lt;/a&gt;. You may want to check out Flux for more interesting examples of Zygote usage; the documentation here focuses on internals and advanced AD usage.&lt;/p&gt;
&lt;p&gt;Zygote supports Julia 1.0 onwards, but we highly recommend using Julia 1.3 or later.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;using&lt;/span&gt; Zygote

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(x) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;x &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;f&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;), f&lt;span class="pl-k"&gt;'&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;53&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;)

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;@code_llvm&lt;/span&gt; f&lt;span class="pl-k"&gt;'&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
define i64 @&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;julia_#625_38792&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;(i64) {
top&lt;span class="pl-k"&gt;:&lt;/span&gt;
  ret i64 &lt;span class="pl-c1"&gt;5&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;"Source-to-source" means that Zygote hooks into Julia's compiler, and generates the backwards pass for you – as if you had written it by hand.&lt;/p&gt;
&lt;p&gt;Without compromising on performance, Zygote supports the full flexibility and dynamism of the Julia language, including control flow, recursion, closures, structs, dictionaries, and more.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; fs &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dict&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; sin, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cos&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; cos, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; tan);

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;gradient&lt;/span&gt;(x &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; fs[&lt;span class="pl-c1"&gt;readline&lt;/span&gt;()](x), &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
sin
&lt;span class="pl-c1"&gt;0.5403023058681398&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Defining custom gradients is a cinch, and errors have good stacktraces.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;using&lt;/span&gt; Zygote&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;@adjoint&lt;/span&gt;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(a, b) &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;@adjoint&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(a, b) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;add&lt;/span&gt;(a, b), Δ &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; (Δ, Δ)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To support large machine learning models with many parameters, Zygote can differentiate implicitly-used parameters, as opposed to just function arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; W, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;predict&lt;/span&gt;(x) &lt;span class="pl-k"&gt;=&lt;/span&gt; W&lt;span class="pl-k"&gt;*&lt;/span&gt;x &lt;span class="pl-k"&gt;.+&lt;/span&gt; b;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; g &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;gradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;Params&lt;/span&gt;([W, b])) &lt;span class="pl-k"&gt;do&lt;/span&gt;
         &lt;span class="pl-c1"&gt;sum&lt;/span&gt;(&lt;span class="pl-c1"&gt;predict&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;]))
       &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-c1"&gt;Grads&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; g[W], g[b]
([&lt;span class="pl-c1"&gt;1.0&lt;/span&gt; &lt;span class="pl-c1"&gt;2.0&lt;/span&gt; &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;; &lt;span class="pl-c1"&gt;1.0&lt;/span&gt; &lt;span class="pl-c1"&gt;2.0&lt;/span&gt; &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>FluxML</author><guid isPermaLink="false">https://github.com/FluxML/Zygote.jl</guid><pubDate>Sat, 01 Feb 2020 00:02:00 GMT</pubDate></item><item><title>lambdaclass/julia_koans #3 in Julia, Today</title><link>https://github.com/lambdaclass/julia_koans</link><description>&lt;p&gt;&lt;i&gt; Small exercises to get you used to reading and writing Julia code!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-julia-koans" class="anchor" aria-hidden="true" href="#julia-koans"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Julia Koans&lt;/h1&gt;
&lt;p&gt;Welcom to the Julia Koans, a set of Small exercises design to get you used to reading and writing Julia code!
These exercises are modeled on the Ruby Koans and Rustlings.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;Install Julia in your development environment.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-doing-exercises" class="anchor" aria-hidden="true" href="#doing-exercises"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Doing exercises&lt;/h2&gt;
&lt;p&gt;Clone this repo and run make, which will run the tests. You will notice that they fail immediately. You can find the tests in &lt;code&gt;tests/tests.jl&lt;/code&gt;. This file contains a number of test sets. Each test set uses a different module, which can be found in the &lt;code&gt;koans&lt;/code&gt; directory. Each module is located in a file with the corresponding name. The modules already have the required functions declared, but not implemented. To solve a koan, implement the function body and have it return values which make the tests pass. When you complete a test set, you can move on to the next.&lt;/p&gt;
&lt;p&gt;If you get stuck and need to take a peek, you can find the solved koans in the &lt;code&gt;solutions&lt;/code&gt; directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you would like to contribute exercises, fork this repo and issue a PR including the test set in &lt;code&gt;tests.jl&lt;/code&gt;, the module in &lt;code&gt;koans&lt;/code&gt; and the solved koan in &lt;code&gt;solutions&lt;/code&gt;. Please include some documentation or commentary and Make sure the exercise goal is understandable without the solution.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>lambdaclass</author><guid isPermaLink="false">https://github.com/lambdaclass/julia_koans</guid><pubDate>Sat, 01 Feb 2020 00:03:00 GMT</pubDate></item><item><title>JuliaGraphs/LightGraphs.jl #4 in Julia, Today</title><link>https://github.com/JuliaGraphs/LightGraphs.jl</link><description>&lt;p&gt;&lt;i&gt;An optimized graphs package for the Julia programming language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lightgraphs" class="anchor" aria-hidden="true" href="#lightgraphs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LightGraphs&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/JuliaGraphs/LightGraphs.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5459965519a6db1f7a9510706ae85a663c582d52/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614772617068732f4c696768744772617068732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaGraphs/LightGraphs.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://codecov.io/github/JuliaGraphs/LightGraphs.jl?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f9796d71062fcda5754777561634855b28f44571/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614772617068732f4c696768744772617068732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaGraphs/LightGraphs.jl/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://juliagraphs.github.io/LightGraphs.jl/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/JuliaGraphs/LightGraphs.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/JuliaGraphs/LightGraphs.jl" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://doi.org/10.5281/zenodo.889971" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0fc51ef8d10259b8d221f53db61242e85e9db42e/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e3838393937312e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.889971.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LightGraphs offers both (a) a set of simple, concrete graph implementations -- &lt;code&gt;Graph&lt;/code&gt;
(for undirected graphs) and &lt;code&gt;DiGraph&lt;/code&gt; (for directed graphs), and (b) an API for
the development of more sophisticated graph implementations under the &lt;code&gt;AbstractGraph&lt;/code&gt;
type.&lt;/p&gt;
&lt;p&gt;The project goal is to mirror the functionality of robust network and graph
analysis libraries such as &lt;a href="http://networkx.github.io" rel="nofollow"&gt;NetworkX&lt;/a&gt; while being
simpler to use and more efficient than existing Julian graph libraries such as
&lt;a href="https://github.com/JuliaLang/Graphs.jl"&gt;Graphs.jl&lt;/a&gt;. It is an explicit design
decision that any data not required for graph manipulation (attributes and
other information, for example) is expected to be stored outside of the graph
structure itself. Such data lends itself to storage in more traditional and
better-optimized mechanisms.&lt;/p&gt;
&lt;p&gt;Additional functionality may be found in a number of companion packages, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JuliaGraphs/LightGraphsExtras.jl"&gt;LightGraphsExtras.jl&lt;/a&gt;:
extra functions for graph analysis.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JuliaGraphs/MetaGraphs.jl"&gt;MetaGraphs.jl&lt;/a&gt;: graphs with
associated meta-data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JuliaGraphs/SimpleWeightedGraphs.jl"&gt;SimpleWeightedGraphs.jl&lt;/a&gt;:
weighted graphs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JuliaGraphs/GraphIO.jl"&gt;GraphIO.jl&lt;/a&gt;: tools for importing
and exporting graph objects using common file types like edgelists, GraphML,
Pajek NET, and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Full documentation is available at &lt;a href="https://juliagraphs.github.io/LightGraphs.jl/latest" rel="nofollow"&gt;GitHub Pages&lt;/a&gt;.
Documentation for methods is also available via the Julia REPL help system.
Additional tutorials can be found at &lt;a href="https://github.com/JuliaGraphs/JuliaGraphsTutorials"&gt;JuliaGraphsTutorials&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Installation is straightforward: enter Pkg mode by hitting &lt;code&gt;]&lt;/code&gt;, and then&lt;/p&gt;
&lt;pre lang="julia-repl"&gt;&lt;code&gt;(v1.0) pkg&amp;gt; add LightGraphs
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-supported-versions" class="anchor" aria-hidden="true" href="#supported-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Versions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;LightGraphs master is generally designed to work with the latest stable version of Julia (except during Julia version increments as we transition to the new version).&lt;/li&gt;
&lt;li&gt;Julia 0.3: LightGraphs v0.3.7 is the last version guaranteed to work with Julia 0.3.&lt;/li&gt;
&lt;li&gt;Julia 0.4: LightGraphs versions in the 0.6 series are designed to work with Julia 0.4.&lt;/li&gt;
&lt;li&gt;Julia 0.5: LightGraphs versions in the 0.7 series are designed to work with Julia 0.5.&lt;/li&gt;
&lt;li&gt;Julia 0.6: LightGraphs versions in the 0.8 through 0.12 series are designed to work with Julia 0.6.&lt;/li&gt;
&lt;li&gt;Julia 0.7 / 1.0: LightGraphs versions in the 1.x series are designed to work with Julia 0.7 and Julia 1.0.&lt;/li&gt;
&lt;li&gt;Later versions: Some functionality might not work with prerelease / unstable / nightly versions of Julia. If you run into a problem, please file an issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contributing-and-reporting-bugs" class="anchor" aria-hidden="true" href="#contributing-and-reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing and Reporting Bugs&lt;/h1&gt;
&lt;p&gt;We welcome contributions and bug reports! Please see &lt;a href="https://github.com/JuliaGraphs/LightGraphs.jl/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;
for guidance on development and bug reporting.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-citing" class="anchor" aria-hidden="true" href="#citing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citing&lt;/h1&gt;
&lt;p&gt;We encourage you to cite our work if you have used our libraries, tools or datasets.
Starring the repository on GitHub is also appreciated.
See the Zenodo badge above or refer to &lt;code&gt;CITATION.bib&lt;/code&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JuliaGraphs</author><guid isPermaLink="false">https://github.com/JuliaGraphs/LightGraphs.jl</guid><pubDate>Sat, 01 Feb 2020 00:04:00 GMT</pubDate></item></channel></rss>