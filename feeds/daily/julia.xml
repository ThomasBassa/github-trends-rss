<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Julia, Today</title><link>https://github.com/trending/julia?since=daily</link><description>The top repositories on GitHub for julia, measured daily</description><pubDate>Sun, 26 Jan 2020 01:04:23 GMT</pubDate><lastBuildDate>Sun, 26 Jan 2020 01:04:23 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>JuliaOpt/JuMP.jl #1 in Julia, Today</title><link>https://github.com/JuliaOpt/JuMP.jl</link><description>&lt;p&gt;&lt;i&gt;Modeling language for Mathematical Optimization (linear, mixed-integer, conic, semidefinite, nonlinear)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/31d60f762b44d0c3ea47cc16b785e042104a6e03/68747470733a2f2f7777772e6a756c69616f70742e6f72672f696d616765732f6a756d702d6c6f676f2d776974682d746578742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/31d60f762b44d0c3ea47cc16b785e042104a6e03/68747470733a2f2f7777772e6a756c69616f70742e6f72672f696d616765732f6a756d702d6c6f676f2d776974682d746578742e737667" alt="JuMP logo" title="JuMP logo" data-canonical-src="https://www.juliaopt.org/images/jump-logo-with-text.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://numfocus.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8484140207659af672a0a1784c5b9277647bb79/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706f776572656425323062792d4e756d464f4355532d6f72616e67652e7376673f7374796c653d666c617426636f6c6f72413d45313532334426636f6c6f72423d303037443841" alt="Powered by NumFOCUS" data-canonical-src="https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&amp;amp;colorA=E1523D&amp;amp;colorB=007D8A" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JuMP is a domain-specific modeling language for &lt;strong&gt;&lt;a href="http://en.wikipedia.org/wiki/Mathematical_optimization" rel="nofollow"&gt;mathematical optimization&lt;/a&gt;&lt;/strong&gt;
embedded in &lt;strong&gt;&lt;a href="http://julialang.org/" rel="nofollow"&gt;Julia&lt;/a&gt;&lt;/strong&gt;. It currently supports a number of open-source and
commercial solvers (&lt;a href="http://artelys.com/en/optimization-tools/knitro" rel="nofollow"&gt;Artelys Knitro&lt;/a&gt;, &lt;a href="http://archimedes.cheme.cmu.edu/?q=baron" rel="nofollow"&gt;BARON&lt;/a&gt;, &lt;a href="https://projects.coin-or.org/Bonmin" rel="nofollow"&gt;Bonmin&lt;/a&gt;, &lt;a href="https://github.com/coin-or/Cbc"&gt;Cbc&lt;/a&gt;, &lt;a href="https://github.com/oxfordcontrol/CDCS"&gt;CDCS&lt;/a&gt;, &lt;a href="https://github.com/cddlib/cddlib"&gt;CDD&lt;/a&gt;,
&lt;a href="https://github.com/coin-or/Clp"&gt;Clp&lt;/a&gt;, &lt;a href="https://github.com/oxfordcontrol/COSMO.jl"&gt;COSMO&lt;/a&gt;, &lt;a href="https://projects.coin-or.org/Couenne" rel="nofollow"&gt;Couenne&lt;/a&gt;, &lt;a href="http://www-01.ibm.com/software/commerce/optimization/cplex-optimizer/" rel="nofollow"&gt;CPLEX&lt;/a&gt;, &lt;a href="https://projects.coin-or.org/Csdp/" rel="nofollow"&gt;CSDP&lt;/a&gt;, &lt;a href="https://github.com/ifa-ethz/ecos"&gt;ECOS&lt;/a&gt;, &lt;a href="http://www.fico.com/en/products/fico-xpress-optimization-suite" rel="nofollow"&gt;FICO Xpress&lt;/a&gt;, &lt;a href="http://www.gnu.org/software/glpk/" rel="nofollow"&gt;GLPK&lt;/a&gt;,
&lt;a href="http://www.gurobi.com/" rel="nofollow"&gt;Gurobi&lt;/a&gt;, &lt;a href="https://github.com/coin-or/Ipopt"&gt;Ipopt&lt;/a&gt;, &lt;a href="https://github.com/lanl-ansi/Juniper.jl"&gt;Juniper&lt;/a&gt;, &lt;a href="http://mosek.com/" rel="nofollow"&gt;MOSEK&lt;/a&gt;, &lt;a href="http://ab-initio.mit.edu/wiki/index.php/NLopt" rel="nofollow"&gt;NLopt&lt;/a&gt;, &lt;a href="https://osqp.org/" rel="nofollow"&gt;OSQP&lt;/a&gt;, &lt;a href="https://github.com/mariohsouto/ProxSDP.jl"&gt;ProxSDP&lt;/a&gt;, &lt;a href="https://scip.zib.de/" rel="nofollow"&gt;SCIP&lt;/a&gt;,
&lt;a href="https://github.com/cvxgrp/scs"&gt;SCS&lt;/a&gt;, &lt;a href="http://sdpa.sourceforge.net/" rel="nofollow"&gt;SDPA&lt;/a&gt;, &lt;a href="https://blog.nus.edu.sg/mattohkc/softwares/sdpt3/" rel="nofollow"&gt;SDPT3&lt;/a&gt;, &lt;a href="http://sedumi.ie.lehigh.edu/" rel="nofollow"&gt;SeDuMi&lt;/a&gt;, &lt;a href="https://github.com/ds4dm/Tulip.jl"&gt;Tulip&lt;/a&gt;) for a variety of problem classes, including
&lt;strong&gt;&lt;a href="http://en.wikipedia.org/wiki/Linear_programming" rel="nofollow"&gt;linear programming&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="http://en.wikipedia.org/wiki/Integer_programming" rel="nofollow"&gt;(mixed) integer programming&lt;/a&gt;&lt;/strong&gt;,
&lt;strong&gt;&lt;a href="http://en.wikipedia.org/wiki/Second-order_cone_programming" rel="nofollow"&gt;second-order conic programming&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Semidefinite_programming" rel="nofollow"&gt;semidefinite programming&lt;/a&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;a href="http://en.wikipedia.org/wiki/Nonlinear_programming" rel="nofollow"&gt;nonlinear programming&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;JuMP makes it easy to specify and &lt;strong&gt;solve optimization problems without expert knowledge&lt;/strong&gt;, yet at the same time allows experts to implement advanced algorithmic techniques such as exploiting efficient hot-starts in linear programming or using callbacks to interact with branch-and-bound solvers. JuMP is also &lt;strong&gt;fast&lt;/strong&gt; - benchmarking has shown that it can create problems at similar speeds to special-purpose commercial tools such as AMPL while maintaining the expressiveness of a generic high-level programming language. JuMP can be easily embedded in complex work flows including simulations and web servers.&lt;/p&gt;
&lt;p&gt;Our documentation includes an installation guide, quick-start guide, and reference manual. The &lt;strong&gt;&lt;a href="https://github.com/JuliaOpt/juliaopt-notebooks"&gt;juliaopt-notebooks&lt;/a&gt;&lt;/strong&gt; repository contains a small but growing collection of contributed examples. Submissions are welcome!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See &lt;a href="https://github.com/JuliaOpt/JuMP.jl/tree/master/NEWS.md"&gt;NEWS&lt;/a&gt; for
a list of the significant breaking changes in the JuMP 0.19 release.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Latest Release&lt;/strong&gt;: 0.20.0 (&lt;code&gt;release-0.20&lt;/code&gt; branch)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.juliaopt.org/JuMP.jl/v0.20.0/" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JuliaOpt/JuMP.jl/tree/release-0.20/examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Testing status:
&lt;ul&gt;
&lt;li&gt;TravisCI: &lt;a href="https://travis-ci.org/JuliaOpt/JuMP.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/950ecaeaca1a32ba55dbe7e7b26aa1943c690316/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614f70742f4a754d502e6a6c2e7376673f6272616e63683d72656c656173652d302e3230" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaOpt/JuMP.jl.svg?branch=release-0.20" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Development version&lt;/strong&gt; (&lt;code&gt;master&lt;/code&gt; branch):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.juliaopt.org/JuMP.jl/dev/" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JuliaOpt/JuMP.jl/tree/master/examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Testing status:
&lt;ul&gt;
&lt;li&gt;TravisCI: &lt;a href="https://travis-ci.org/JuliaOpt/JuMP.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a16f706f7c26a63bb749c285dde7b1be03061049/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614f70742f4a754d502e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaOpt/JuMP.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test coverage:
&lt;a href="https://coveralls.io/r/JuliaOpt/JuMP.jl?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c0cf683b593102d4c439713a89cf50d84ccd682a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69614f70742f4a754d502e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaOpt/JuMP.jl/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/JuliaOpt/JuMP.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b294cf11b2b4126562fed1387d7f55c96643e62f/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614f70742f4a754d502e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaOpt/JuMP.jl/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Changes: see &lt;a href="https://github.com/JuliaOpt/JuMP.jl/tree/master/NEWS.md"&gt;NEWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitter.im/JuliaOpt/JuMP-dev" rel="nofollow"&gt;Developer chatroom&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;JuMP can be installed through the Julia package manager:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; Pkg&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JuMP&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For full installation instructions, including how to install solvers, see the documentation linked above.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-problem-classes" class="anchor" aria-hidden="true" href="#supported-problem-classes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported problem classes&lt;/h2&gt;
&lt;p&gt;Mathematical optimization encompasses a large variety of problem classes.
We list below what is currently supported. See the documentation for more information.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Objective types&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linear&lt;/li&gt;
&lt;li&gt;Convex Quadratic&lt;/li&gt;
&lt;li&gt;Nonlinear (convex and nonconvex)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Constraint types&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linear&lt;/li&gt;
&lt;li&gt;Convex Quadratic&lt;/li&gt;
&lt;li&gt;Second-order Conic&lt;/li&gt;
&lt;li&gt;Semidefinite&lt;/li&gt;
&lt;li&gt;Nonlinear (convex and nonconvex)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Variable types&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Continuous&lt;/li&gt;
&lt;li&gt;Integer-valued&lt;/li&gt;
&lt;li&gt;Semicontinuous&lt;/li&gt;
&lt;li&gt;Semi-integer&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports-and-support" class="anchor" aria-hidden="true" href="#bug-reports-and-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports and support&lt;/h2&gt;
&lt;p&gt;Please report any issues via the Github &lt;strong&gt;&lt;a href="https://github.com/JuliaOpt/JuMP.jl/issues"&gt;issue tracker&lt;/a&gt;&lt;/strong&gt;. All types of issues are welcome and encouraged; this includes bug reports, documentation typos, feature requests, etc. The &lt;strong&gt;&lt;a href="https://discourse.julialang.org/c/domain/opt" rel="nofollow"&gt;Optimization (Mathematical)&lt;/a&gt;&lt;/strong&gt; category on Discourse is appropriate for general discussion, including "how do I do this?" questions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citing-jump" class="anchor" aria-hidden="true" href="#citing-jump"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citing JuMP&lt;/h2&gt;
&lt;p&gt;If you find JuMP useful in your work, we kindly request that you cite the following paper (&lt;a href="https://mlubin.github.io/pdf/jump-sirev.pdf" rel="nofollow"&gt;pdf&lt;/a&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{DunningHuchetteLubin2017,
author = {Iain Dunning and Joey Huchette and Miles Lubin},
title = {JuMP: A Modeling Language for Mathematical Optimization},
journal = {SIAM Review},
volume = {59},
number = {2},
pages = {295-320},
year = {2017},
doi = {10.1137/15M1020575},
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For an earlier work where we presented a prototype implementation of JuMP, see &lt;a href="http://dx.doi.org/10.1287/ijoc.2014.0623" rel="nofollow"&gt;here&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{LubinDunningIJOC,
author = {Miles Lubin and Iain Dunning},
title = {Computing in Operations Research Using Julia},
journal = {INFORMS Journal on Computing},
volume = {27},
number = {2},
pages = {238-248},
year = {2015},
doi = {10.1287/ijoc.2014.0623},
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A preprint of this paper is &lt;a href="http://arxiv.org/abs/1312.1431" rel="nofollow"&gt;freely available&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/52421a454de390c43b986c5fd0f03c8fe3c1b496/687474703a2f2f7777772e6a756c69616f70742e6f72672f4a754d502e6a6c2f6465762f6173736574732f6e756d666f6375732d6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/52421a454de390c43b986c5fd0f03c8fe3c1b496/687474703a2f2f7777772e6a756c69616f70742e6f72672f4a754d502e6a6c2f6465762f6173736574732f6e756d666f6375732d6c6f676f2e706e67" alt="NumFOCUS logo" data-canonical-src="http://www.juliaopt.org/JuMP.jl/dev/assets/numfocus-logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JuMP is a Sponsored Project of NumFOCUS, a 501(c)(3) nonprofit charity in the
United States. NumFOCUS provides JuMP with fiscal, legal, and administrative
support to help ensure the health and sustainability of the project. Visit
&lt;a href="https://numfocus.org" rel="nofollow"&gt;numfocus.org&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;You can support JuMP by &lt;a href="https://numfocus.salsalabs.org/donate-to-jump/index.html" rel="nofollow"&gt;donating&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Donations to JuMP are managed by NumFOCUS. For donors in the United States,
your gift is tax-deductible to the extent provided by law. As with any donation,
you should consult with your tax adviser about your particular tax situation.&lt;/p&gt;
&lt;p&gt;JuMP's largest expense is the annual JuMP-dev workshop. Donations will help us
provide travel support for JuMP-dev attendees and take advantage of other
opportunities that arise to support JuMP development.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JuliaOpt</author><guid isPermaLink="false">https://github.com/JuliaOpt/JuMP.jl</guid><pubDate>Sun, 26 Jan 2020 00:01:00 GMT</pubDate></item><item><title>FluxML/Zygote.jl #2 in Julia, Today</title><link>https://github.com/FluxML/Zygote.jl</link><description>&lt;p&gt;&lt;i&gt;Intimate Affection Auditor&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/zygote.png"&gt;&lt;img width="400px" src="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/zygote.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/FluxML/Zygote.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a383c9b8923b8c02f50ec6a7cd2348f1a07df588/68747470733a2f2f7472617669732d63692e6f72672f466c75784d4c2f5a79676f74652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/FluxML/Zygote.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://fluxml.ai/Zygote.jl/dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev Docs" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;] add Zygote&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Zygote is a working prototype for source-to-source automatic differentiation (AD) in Julia, and the next-gen AD system for the &lt;a href="https://github.com/FluxML/Flux.jl"&gt;Flux&lt;/a&gt; differentiable programming framework. For more details and benchmarks of Zygote's technique, see &lt;a href="https://arxiv.org/abs/1810.07951" rel="nofollow"&gt;our paper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You probably don't want to use Zygote yet (except as a preview of the future). Instead use Flux's built-in AD, which is API-compatible, and at some point in the near future you'll get a free speed boost.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;using&lt;/span&gt; Zygote

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(x) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;x &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;f&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;), f&lt;span class="pl-k"&gt;'&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;53&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;)

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;@code_llvm&lt;/span&gt; f&lt;span class="pl-k"&gt;'&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
define i64 @&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;julia_#625_38792&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;(i64) {
top&lt;span class="pl-k"&gt;:&lt;/span&gt;
  ret i64 &lt;span class="pl-c1"&gt;5&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;"Source-to-source" means that Zygote hooks into Julia's compiler, and generates the backwards pass for you – as if you had written it by hand.&lt;/p&gt;
&lt;p&gt;Without compromising on performance, Zygote supports the full flexibility and dynamism of the Julia language, including control flow, recursion, closures, structs, dictionaries, and more.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; fs &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dict&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; sin, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cos&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; cos, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; tan);

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;gradient&lt;/span&gt;(x &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; fs[&lt;span class="pl-c1"&gt;readline&lt;/span&gt;()](x), &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
sin
&lt;span class="pl-c1"&gt;0.5403023058681398&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Defining custom gradients is a cinch, and errors have good stacktraces.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;using&lt;/span&gt; Zygote&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;@adjoint&lt;/span&gt;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(a, b) &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;@adjoint&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(a, b) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;add&lt;/span&gt;(a, b), Δ &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; (Δ, Δ)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To support large machine learning models with many parameters, Zygote can differentiate implicitly-used parameters, as opposed to just function arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; W, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;predict&lt;/span&gt;(x) &lt;span class="pl-k"&gt;=&lt;/span&gt; W&lt;span class="pl-k"&gt;*&lt;/span&gt;x &lt;span class="pl-k"&gt;.+&lt;/span&gt; b;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; g &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;gradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;Params&lt;/span&gt;([W, b])) &lt;span class="pl-k"&gt;do&lt;/span&gt;
         &lt;span class="pl-c1"&gt;sum&lt;/span&gt;(&lt;span class="pl-c1"&gt;predict&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;]))
       &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-c1"&gt;Grads&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; g[W], g[b]
([&lt;span class="pl-c1"&gt;1.0&lt;/span&gt; &lt;span class="pl-c1"&gt;2.0&lt;/span&gt; &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;; &lt;span class="pl-c1"&gt;1.0&lt;/span&gt; &lt;span class="pl-c1"&gt;2.0&lt;/span&gt; &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-caveat-emptor" class="anchor" aria-hidden="true" href="#caveat-emptor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveat Emptor&lt;/h2&gt;
&lt;p&gt;Zygote is in an early stage and may break, but issue reports and beta testing are welcome. In particular Zygote does not yet have comprehensive gradient definitions and may fail if it hits complex code in Base Julia.&lt;/p&gt;
&lt;p&gt;Zygote's runtime performance should generally be good, but compile times are not optimised, so calling &lt;code&gt;gradient&lt;/code&gt; the first time can have noticeable lag. &lt;a href="https://github.com/JuliaCI/BenchmarkTools.jl"&gt;BenchmarkTools&lt;/a&gt; is recommended to avoid measuring JIT time.&lt;/p&gt;
&lt;p&gt;A current limitation is that Zygote will not automatically see redefined functions (for example if you call &lt;code&gt;gradient(f, x)&lt;/code&gt;, then redefine &lt;code&gt;f&lt;/code&gt;, then take the gradient again). You can call &lt;code&gt;Zygote.refresh()&lt;/code&gt; to completely reset what Zygote sees. It's often useful to have this in your script/notebook after function definitions.&lt;/p&gt;
&lt;p&gt;The Julia compiler does not yet support all features needed to make Zygote fast, particularly in the presence of control flow. Until these are officially supported Zygote &lt;a href="https://github.com/FluxML/Zygote.jl/blob/5d7ea65ef0cdbd07c30584b5d66d13a66c7e0c21/src/Zygote.jl#L12"&gt;contains a flag&lt;/a&gt; to enable faster operation. If you can handle the additional caveats it's a good way to see Zygote's peak performance.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>FluxML</author><guid isPermaLink="false">https://github.com/FluxML/Zygote.jl</guid><pubDate>Sun, 26 Jan 2020 00:02:00 GMT</pubDate></item><item><title>JuliaPackaging/Yggdrasil #3 in Julia, Today</title><link>https://github.com/JuliaPackaging/Yggdrasil</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>JuliaPackaging</author><guid isPermaLink="false">https://github.com/JuliaPackaging/Yggdrasil</guid><pubDate>Sun, 26 Jan 2020 00:03:00 GMT</pubDate></item><item><title>ProbMLCourse/assignment_0 #4 in Julia, Today</title><link>https://github.com/ProbMLCourse/assignment_0</link><description>&lt;p&gt;&lt;i&gt;Assignment 0&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-assignment-0" class="anchor" aria-hidden="true" href="#assignment-0"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Assignment 0&lt;/h1&gt;
&lt;h4&gt;&lt;a id="user-content-due-1159pm-friday-jan-24" class="anchor" aria-hidden="true" href="#due-1159pm-friday-jan-24"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Due: 11:59pm Friday, Jan 24&lt;/h4&gt;
&lt;p&gt;This is the repository for assignment 0. It contains the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.gitignore&lt;/code&gt; - tells git to ignore certain kinds of files. This prevents you from submitting the auxiliary files created when producing LaTeX documents.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A0.jmd&lt;/code&gt; - the source code used to generate the assignment document, including examples of starter Julia code you may use for your own solutions. Feel free to fill in your answers directly into this file to produce your pdf writeup. Also feel free to try a more traditional workflow by writing your final writeup in a LaTeX &lt;code&gt;.tex&lt;/code&gt; document, and completing your code in a standard Julia &lt;code&gt;.jl&lt;/code&gt; file, or translate the starter code into a python &lt;code&gt;.py&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A0.pdf&lt;/code&gt; - the text of the assignment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Project.toml&lt;/code&gt; - the Julia environment, specifying packages and versions you can use to complete the programming questions. You can activate this environment by opening this project folder, and inside the Julia REPL typing: &lt;code&gt;] activate .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;README.md&lt;/code&gt; - the text you are currently reading.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make_pdf.jl&lt;/code&gt; - a short Julia script that contains the code used to produce A0.pdf from A0.jmd.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-submission-instructions" class="anchor" aria-hidden="true" href="#submission-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submission Instructions&lt;/h2&gt;
&lt;p&gt;We will be collecting assignments through Github Classroom.&lt;/p&gt;
&lt;p&gt;You will receive a link inviting you to complete the assignment.
Once you receive the link you &lt;strong&gt;must associate your Github Username to your UTORID&lt;/strong&gt; by selecting your UTORID from the list otherwise your assignment will not be graded.&lt;/p&gt;
&lt;p&gt;Once you select your UTORID and accept the assignment, we will automatically create a private repository for your solutions.&lt;/p&gt;
&lt;p&gt;Only the files that you successfully &lt;code&gt;git push&lt;/code&gt; to this repo will be assessed.&lt;/p&gt;
&lt;p&gt;Note: If you've already cloned the repo and started the assignment make sure you put your solutions in the repo we've automatically created for you, and that you push your changes to this repo before the due date.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-collaboration-and-github-private-repository" class="anchor" aria-hidden="true" href="#collaboration-and-github-private-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collaboration and Github Private Repository&lt;/h2&gt;
&lt;p&gt;Keep your solutions to this assignment, including your GitHub repo, private and in accordance with our collaboration and academic integrity policy.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ProbMLCourse</author><guid isPermaLink="false">https://github.com/ProbMLCourse/assignment_0</guid><pubDate>Sun, 26 Jan 2020 00:04:00 GMT</pubDate></item><item><title>TuringLang/Turing.jl #5 in Julia, Today</title><link>https://github.com/TuringLang/Turing.jl</link><description>&lt;p&gt;&lt;i&gt;A robust, efficient and modular library for general-purpose probabilistic AI.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-turingjl" class="anchor" aria-hidden="true" href="#turingjl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Turing.jl&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/TuringLang/Turing.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d308db1c94f3347ca560c8f8aa067758ff4e9e44/68747470733a2f2f7472617669732d63692e6f72672f547572696e674c616e672f547572696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/TuringLang/Turing.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/yebai/TuringLang/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9b4881c088221eb48f6323b6f35506d05c50f6e/68747470733a2f2f6465762e617a7572652e636f6d2f79656261692f547572696e674c616e672f5f617069732f6275696c642f7374617475732f547572696e674c616e672e547572696e672e6a6c3f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/yebai/TuringLang/_apis/build/status/TuringLang.Turing.jl?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/yebai/Turing.jl?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ad5bbfb794aac77d24cf58dc84b9d2566da35e6c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f79656261692f547572696e672e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/yebai/Turing.jl/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://turing.ml/dev/docs/using-turing/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dbe71bf5c13320c3c8feb1f2bed6e6e712bea120/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f632d6c61746573742d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/doc-latest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Turing.jl&lt;/strong&gt; is a Julia library for general-purpose &lt;a href="https://en.wikipedia.org/wiki/Probabilistic_programming_language" rel="nofollow"&gt;probabilistic programming&lt;/a&gt;. Turing allows the user to write models using standard Julia syntax, and provides a wide range of sampling-based inference methods for solving problems across probabilistic machine learning, Bayesian statistics, and data science. Compared to other probabilistic programming languages, Turing has a special focus on modularity, and decouples the modelling language (i.e. the compiler) and inference methods. This modular design, together with the use of a high-level numerical language Julia, makes Turing particularly extensible: new model families and inference methods can be easily added.&lt;/p&gt;
&lt;p&gt;Current features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://turing.ml/dev/tutorials/6-infinitemixturemodel/" rel="nofollow"&gt;General-purpose&lt;/a&gt; probabilistic programming with an &lt;a href="https://turing.ml/dev/tutorials/0-introduction/" rel="nofollow"&gt;intuitive modelling interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Robust, efficient &lt;a href="https://github.com/TuringLang/AdvancedHMC.jl"&gt;Hamiltonian Monte Carlo (HMC)&lt;/a&gt; sampling for differentiable posterior distributions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TuringLang/AdvancedPS.jl"&gt;Particle MCMC&lt;/a&gt; sampling for complex posterior distributions involving discrete variables and stochastic control flows&lt;/li&gt;
&lt;li&gt;Compositional inference via Gibbs sampling that combines particle MCMC, HMC, &lt;a href="https://github.com/TuringLang/AdvancedMH.jl"&gt;Random-Walk MH (RWMH)&lt;/a&gt; and &lt;a href="https://github.com/TuringLang/Turing.jl/blob/master/src/inference/ess.jl"&gt;Elliptical Slice Sampling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Advanced variational inference based on &lt;a href="https://github.com/TuringLang/AdvancedVI.jl"&gt;ADVI&lt;/a&gt; and &lt;a href="https://github.com/TuringLang/Bijectors.jl"&gt;Normalising Flows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Turing's home page, with links to everything you'll need to use Turing is:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://turing.ml/dev/docs/using-turing/get-started" rel="nofollow"&gt;https://turing.ml/dev/docs/using-turing/get-started&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-whats-changed-recently" class="anchor" aria-hidden="true" href="#whats-changed-recently"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's changed recently?&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/TuringLang/Turing.jl/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-want-to-contribute" class="anchor" aria-hidden="true" href="#want-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to contribute?&lt;/h2&gt;
&lt;p&gt;Turing was originally created and is now managed by Hong Ge. Current and past Turing team members include &lt;a href="http://mlg.eng.cam.ac.uk/hong/" rel="nofollow"&gt;Hong Ge&lt;/a&gt;, &lt;a href="http://mlg.eng.cam.ac.uk/?portfolio=kai-xu" rel="nofollow"&gt;Kai Xu&lt;/a&gt;, &lt;a href="http://martint.blog" rel="nofollow"&gt;Martin Trapp&lt;/a&gt;, &lt;a href="https://github.com/mohamed82008"&gt;Mohamed Tarek&lt;/a&gt;, &lt;a href="https://business.uoregon.edu/faculty/cameron-pfiffer" rel="nofollow"&gt;Cameron Pfiffer&lt;/a&gt;, &lt;a href="http://retiredparkingguard.com/about.html" rel="nofollow"&gt;Tor Fjelde&lt;/a&gt;.
You can see the full list of on Github: &lt;a href="https://github.com/TuringLang/Turing.jl/graphs/contributors"&gt;https://github.com/TuringLang/Turing.jl/graphs/contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Turing is an open source project so if you feel you have some relevant skills and are interested in contributing then please do get in touch. See the &lt;a href="http://turing.ml/docs/contributing/" rel="nofollow"&gt;Contributing&lt;/a&gt; page for details on the process. You can contribute by opening issues on Github or implementing things yourself and making a pull request. We would also appreciate example models written using Turing.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-slack" class="anchor" aria-hidden="true" href="#slack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Slack&lt;/h3&gt;
&lt;p&gt;Join &lt;a href="https://julialang.slack.com/messages/turing/" rel="nofollow"&gt;our channel&lt;/a&gt; (&lt;code&gt;#turing&lt;/code&gt;) in the Julia Slack chat for help, discussion, or general communication with the Turing team. If you do not already have an invitation to Julia's Slack, you can get one by going &lt;a href="https://slackinvite.julialang.org/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The Stan language for probabilistic programming - &lt;a href="https://github.com/StanJulia/Stan.jl"&gt;Stan.jl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bare-bones implementation of robust dynamic Hamiltonian Monte Carlo methods - &lt;a href="https://github.com/tpapp/DynamicHMC.jl"&gt;DynamicHMC.jl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Comparing performance and results of mcmc options using Julia - &lt;a href="https://github.com/StatisticalRethinkingJulia/MCMCBenchmarks.jl"&gt;MCMCBenchmarks.jl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-citing-turingjl" class="anchor" aria-hidden="true" href="#citing-turingjl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citing Turing.jl&lt;/h2&gt;
&lt;p&gt;If you use &lt;strong&gt;Turing&lt;/strong&gt; for your own research, please consider citing the following publication: Hong Ge, Kai Xu, and Zoubin Ghahramani: &lt;strong&gt;Turing: a language for flexible probabilistic inference.&lt;/strong&gt; AISTATS 2018 &lt;a href="http://proceedings.mlr.press/v84/ge18b.html" rel="nofollow"&gt;pdf&lt;/a&gt; &lt;a href="https://github.com/TuringLang/Turing.jl/blob/master/CITATION.bib"&gt;bibtex&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>TuringLang</author><guid isPermaLink="false">https://github.com/TuringLang/Turing.jl</guid><pubDate>Sun, 26 Jan 2020 00:05:00 GMT</pubDate></item></channel></rss>