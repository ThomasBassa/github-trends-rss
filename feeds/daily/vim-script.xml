<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Vim script, Today</title><link>https://github.com/trending/vim-script?since=daily</link><description>The top repositories on GitHub for vim-script, measured daily</description><pubDate>Sat, 02 Nov 2019 00:08:05 GMT</pubDate><lastBuildDate>Sat, 02 Nov 2019 00:08:05 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>1400</ttl><item><title>junegunn/vim-plug #1 in Vim script, Today</title><link>https://github.com/junegunn/vim-plug</link><description>&lt;p&gt;&lt;i&gt;:hibiscus: Minimalist Vim Plugin Manager&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.png"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.png" height="75" alt="vim-plug" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://travis-ci.org/junegunn/vim-plug" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8eb12d9521d9a2d8694d8cecd167589c72163050/68747470733a2f2f7472617669732d63692e6f72672f6a756e6567756e6e2f76696d2d706c75672e7376673f6272616e63683d6d6173746572" alt="travis-ci" data-canonical-src="https://travis-ci.org/junegunn/vim-plug.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;A minimalist Vim plugin manager.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/junegunn/i/master/vim-plug/installer.gif"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/vim-plug/installer.gif" height="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pros" class="anchor" aria-hidden="true" href="#pros"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pros.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Easier to setup: Single file. No boilerplate code required.&lt;/li&gt;
&lt;li&gt;Easier to use: Concise, intuitive syntax&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/i/master/vim-plug/40-in-4.gif" rel="nofollow"&gt;Super-fast&lt;/a&gt; parallel installation/update
(with any of &lt;code&gt;+job&lt;/code&gt;, &lt;code&gt;+python&lt;/code&gt;, &lt;code&gt;+python3&lt;/code&gt;, &lt;code&gt;+ruby&lt;/code&gt;, or &lt;a href="http://neovim.org/" rel="nofollow"&gt;Neovim&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Creates shallow clones to minimize disk space usage and download time&lt;/li&gt;
&lt;li&gt;On-demand loading for &lt;a href="https://github.com/junegunn/vim-startuptime-benchmark#result"&gt;faster startup time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Can review and rollback updates&lt;/li&gt;
&lt;li&gt;Branch/tag/commit support&lt;/li&gt;
&lt;li&gt;Post-update hooks&lt;/li&gt;
&lt;li&gt;Support for externally managed plugins&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim" rel="nofollow"&gt;Download plug.vim&lt;/a&gt;
and put it in the "autoload" directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-vim" class="anchor" aria-hidden="true" href="#vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim&lt;/h4&gt;
&lt;h6&gt;&lt;a id="user-content-unix" class="anchor" aria-hidden="true" href="#unix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unix&lt;/h6&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -fLo &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can automate the process by putting the command in your Vim configuration
file as suggested &lt;a href="https://github.com/junegunn/vim-plug/wiki/tips#automatic-installation"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-windows-powershell" class="anchor" aria-hidden="true" href="#windows-powershell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows (PowerShell)&lt;/h6&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;md ~\vimfiles\autoload
&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
(&lt;span class="pl-c1"&gt;New-Object&lt;/span&gt; Net.WebClient).DownloadFile(
  &lt;span class="pl-smi"&gt;$uri&lt;/span&gt;&lt;span class="pl-k"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;$ExecutionContext&lt;span class="pl-smi"&gt;.SessionState.Path.GetUnresolvedProviderPathFromPSPath&lt;/span&gt;&lt;/span&gt;(
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~\vimfiles\autoload\plug.vim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  )
)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-neovim" class="anchor" aria-hidden="true" href="#neovim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Neovim&lt;/h4&gt;
&lt;h6&gt;&lt;a id="user-content-unix-1" class="anchor" aria-hidden="true" href="#unix-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unix&lt;/h6&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -fLo &lt;span class="pl-k"&gt;~&lt;/span&gt;/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-windows-powershell-1" class="anchor" aria-hidden="true" href="#windows-powershell-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows (PowerShell)&lt;/h6&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;md ~\AppData\Local\nvim\autoload
&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
(&lt;span class="pl-c1"&gt;New-Object&lt;/span&gt; Net.WebClient).DownloadFile(
  &lt;span class="pl-smi"&gt;$uri&lt;/span&gt;&lt;span class="pl-k"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;$ExecutionContext&lt;span class="pl-smi"&gt;.SessionState.Path.GetUnresolvedProviderPathFromPSPath&lt;/span&gt;&lt;/span&gt;(
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~\AppData\Local\nvim\autoload\plug.vim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  )
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;See &lt;a href="https://github.com/junegunn/vim-plug/wiki/tutorial"&gt;tutorial&lt;/a&gt; page to learn the basics of vim-plug&lt;/li&gt;
&lt;li&gt;See &lt;a href="https://github.com/junegunn/vim-plug/wiki/tips"&gt;tips&lt;/a&gt; and &lt;a href="https://github.com/junegunn/vim-plug/wiki/faq"&gt;FAQ&lt;/a&gt; pages for common problems and questions&lt;/li&gt;
&lt;li&gt;See &lt;a href="https://github.com/junegunn/vim-plug/wiki/requirements"&gt;requirements&lt;/a&gt; page for debugging information &amp;amp; tested configurations&lt;/li&gt;
&lt;li&gt;Create an &lt;a href="https://github.com/junegunn/vim-plug/issues/new"&gt;issue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;Add a vim-plug section to your &lt;code&gt;~/.vimrc&lt;/code&gt; (or &lt;code&gt;stdpath('config') . '/init.vim'&lt;/code&gt; for Neovim)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Begin the section with &lt;code&gt;call plug#begin()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;List the plugins with &lt;code&gt;Plug&lt;/code&gt; commands&lt;/li&gt;
&lt;li&gt;&lt;code&gt;call plug#end()&lt;/code&gt; to update &lt;code&gt;&amp;amp;runtimepath&lt;/code&gt; and initialize plugin system
&lt;ul&gt;
&lt;li&gt;Automatically executes &lt;code&gt;filetype plugin indent on&lt;/code&gt; and &lt;code&gt;syntax enable&lt;/code&gt;.
You can revert the settings after the call. e.g. &lt;code&gt;filetype indent off&lt;/code&gt;, &lt;code&gt;syntax off&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h4&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Specify a directory for plugins&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; - For Neovim: stdpath('data') . '/plugged'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; - Avoid using standard Vim directory names like 'plugin'&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#begin&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.vim/plugged&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Make sure you use single quotes&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Shorthand notation; fetches https://github.com/junegunn/vim-easy-align&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/vim-easy-align&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Any valid git URL is allowed&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/junegunn/vim-github-dashboard.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Multiple Plug commands can be written in a single line using | separators&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SirVer/ultisnips&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; | Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;honza/vim-snippets&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; On-demand loading&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scrooloose/nerdtree&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NERDTreeToggle&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tpope/vim-fireplace&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clojure&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Using a non-master branch&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rdnetto/YCM-Generator&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;branch&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stable&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Using a tagged release; wildcard allowed (requires git 1.9.2 or above)&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fatih/vim-go&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tag&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Plugin options&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nsf/gocode&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tag&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v.20150303&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rtp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Plugin outside ~/.vim/plugged with post-update hook&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dir&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./install --all&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Unmanaged plugin (manually installed and updated)&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/my-prototype-plugin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Initialize plugin system&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#end&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reload .vimrc and &lt;code&gt;:PlugInstall&lt;/code&gt; to install plugins.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugInstall [name ...] [#threads]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Install plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugUpdate [name ...] [#threads]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Install or update plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugClean[!]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Remove unlisted plugins (bang version will clean without prompt)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugUpgrade&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Upgrade vim-plug itself&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugStatus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Check the status of plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugDiff&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Examine changes from the previous update and the pending changes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugSnapshot[!] [output path]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Generate script for restoring the current snapshot of the plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-plug-options" class="anchor" aria-hidden="true" href="#plug-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Plug&lt;/code&gt; options&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;branch&lt;/code&gt;/&lt;code&gt;tag&lt;/code&gt;/&lt;code&gt;commit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Branch/tag/commit of the repository to use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rtp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Subdirectory that contains Vim plugin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dir&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Custom directory for the plugin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;as&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use different name for the plugin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;do&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Post-update hook (string or funcref)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;on&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On-demand loading: Commands or &lt;code&gt;&amp;lt;Plug&amp;gt;&lt;/code&gt;-mappings&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;for&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On-demand loading: File types&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;frozen&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do not update unless explicitly specified&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-global-options" class="anchor" aria-hidden="true" href="#global-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global options&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Flag&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_threads&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;Default number of threads to use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_timeout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;Time limit of each task in seconds (&lt;em&gt;Ruby &amp;amp; Python&lt;/em&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_retries&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Number of retries in case of timeout (&lt;em&gt;Ruby &amp;amp; Python&lt;/em&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_shallow&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Use shallow clone&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_window&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vertical topleft new&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Command to open plug window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_pwindow&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;above 12new&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Command to open preview window in &lt;code&gt;PlugDiff&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_url_format&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;https://git::@github.com/%s.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;printf&lt;/code&gt; format to build repo URL (Only applies to the subsequent &lt;code&gt;Plug&lt;/code&gt; commands)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-keybindings" class="anchor" aria-hidden="true" href="#keybindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keybindings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt; - &lt;code&gt;PlugDiff&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;S&lt;/code&gt; - &lt;code&gt;PlugStatus&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;R&lt;/code&gt; - Retry failed update or installation tasks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;U&lt;/code&gt; - Update plugins in the selected range&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt; - Close the window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:PlugStatus&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;L&lt;/code&gt; - Load plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:PlugDiff&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X&lt;/code&gt; - Revert the update&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-example-a-small-sensible-vim-configuration" class="anchor" aria-hidden="true" href="#example-a-small-sensible-vim-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: A small &lt;a href="https://github.com/tpope/vim-sensible"&gt;sensible&lt;/a&gt; Vim configuration&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#begin&lt;/span&gt;()
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tpope/vim-sensible&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#end&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-on-demand-loading-of-plugins" class="anchor" aria-hidden="true" href="#on-demand-loading-of-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;On-demand loading of plugins&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; NERD tree will be loaded on the first invocation of NERDTreeToggle command&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scrooloose/nerdtree&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NERDTreeToggle&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Multiple commands&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/vim-github-dashboard&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GHDashboard&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GHActivity&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Loaded when clojure file is opened&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tpope/vim-fireplace&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clojure&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Multiple file types&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kovisoft/paredit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clojure&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scheme&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; On-demand loading on both conditions&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/vader.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,  { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Vader&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vader&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Code to execute when the plugin is lazily loaded on demand&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/goyo.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; goyo.&lt;span class="pl-c1"&gt;vim&lt;/span&gt; &lt;span class="pl-c1"&gt;echom&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Goyo is now loaded!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;for&lt;/code&gt; option is generally not needed as most plugins for specific file types
usually don't have too much code in &lt;code&gt;plugin&lt;/code&gt; directory. You might want to
examine the output of &lt;code&gt;vim --startuptime&lt;/code&gt; before applying the option.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-post-update-hooks" class="anchor" aria-hidden="true" href="#post-update-hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Post-update hooks&lt;/h3&gt;
&lt;p&gt;There are some plugins that require extra steps after installation or update.
In that case, use &lt;code&gt;do&lt;/code&gt; option to describe the task to be performed.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Shougo/vimproc.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;make&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ycm-core/YouCompleteMe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./install.py&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the value starts with &lt;code&gt;:&lt;/code&gt;, it will be recognized as a Vim command.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fatih/vim-go&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:GoInstallBinaries&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need more control, you can pass a reference to a Vim function that
takes a single argument.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;BuildYCM&lt;/span&gt;(info)
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; info is a dictionary with 3 fields&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; - name:   name of the plugin&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; - status: 'installed', 'updated', or 'unchanged'&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; - force:  set on PlugInstall! or PlugUpdate!&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;info&lt;/span&gt;.status &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;installed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;info&lt;/span&gt;.force
    &lt;span class="pl-k"&gt;!&lt;/span&gt;./install.&lt;span class="pl-c1"&gt;py&lt;/span&gt;
  &lt;span class="pl-k"&gt;endif&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ycm-core/YouCompleteMe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;BuildYCM&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both forms of post-update hook are executed inside the directory of the plugin
and only run when the repository has changed, but you can force it to run
unconditionally with the bang-versions of the commands: &lt;code&gt;PlugInstall!&lt;/code&gt; and
&lt;code&gt;PlugUpdate!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Make sure to escape BARs and double-quotes when you write &lt;code&gt;do&lt;/code&gt; option inline
as they are mistakenly recognized as command separator or the start of the
trailing comment.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;yes \| ./install&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But you can avoid the escaping if you extract the inline specification using a
variable (or any Vimscript expression) as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;fzf_install&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;yes | ./install&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;fzf_install&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-pluginstall-and-plugupdate" class="anchor" aria-hidden="true" href="#pluginstall-and-plugupdate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;PlugInstall!&lt;/code&gt; and &lt;code&gt;PlugUpdate!&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The installer takes the following steps when installing/updating a plugin:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git clone&lt;/code&gt; or &lt;code&gt;git fetch&lt;/code&gt; from its origin&lt;/li&gt;
&lt;li&gt;Check out branch, tag, or commit and optionally &lt;code&gt;git merge&lt;/code&gt; remote branch&lt;/li&gt;
&lt;li&gt;If the plugin was updated (or installed for the first time)
&lt;ol&gt;
&lt;li&gt;Update submodules&lt;/li&gt;
&lt;li&gt;Execute post-update hooks&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The commands with &lt;code&gt;!&lt;/code&gt; suffix ensure that all steps are run unconditionally.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-articles" class="anchor" aria-hidden="true" href="#articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://junegunn.kr/2013/09/writing-my-own-vim-plugin-manager" rel="nofollow"&gt;Writing my own Vim plugin manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://junegunn.kr/2014/07/vim-plugins-and-startup-time" rel="nofollow"&gt;Vim plugins and startup time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href="http://junegunn.kr/2013/09/thoughts-on-vim-plugin-dependency" rel="nofollow"&gt;Thoughts on Vim plugin dependency&lt;/a&gt;&lt;/del&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Support for Plugfile has been removed since 0.5.0&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-collaborators" class="anchor" aria-hidden="true" href="#collaborators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collaborators&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/janlazo"&gt;Jan Edmund Lazo&lt;/a&gt; - Windows support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/starcraftman"&gt;Jeremy Pallats&lt;/a&gt; - Python installer&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>junegunn</author><guid isPermaLink="false">https://github.com/junegunn/vim-plug</guid><pubDate>Sat, 02 Nov 2019 00:00:00 GMT</pubDate></item><item><title>SpaceVim/SpaceVim #2 in Vim script, Today</title><link>https://github.com/SpaceVim/SpaceVim</link><description>&lt;p&gt;&lt;i&gt;A community-driven modular vim distribution - The ultimate vim configuration&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://spacevim.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/73dd69d7837c503fb4690cfe6dbfc23305edf691/68747470733a2f2f737061636576696d2e6f72672f6c6f676f2e706e67" alt="SpaceVim" data-canonical-src="https://spacevim.org/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/SpaceVim/SpaceVim/wiki"&gt;Wiki&lt;/a&gt; |
&lt;a href="https://spacevim.org/documentation/" rel="nofollow"&gt;Documentation&lt;/a&gt; |
&lt;a href="https://twitter.com/SpaceVim" rel="nofollow"&gt;Twitter&lt;/a&gt; |
&lt;a href="https://spacevim.org/community/" rel="nofollow"&gt;Community&lt;/a&gt; |
&lt;a href="https://spacevim.org/sponsors/" rel="nofollow"&gt;Sponsors&lt;/a&gt; |
&lt;a href="https://gitter.im/SpaceVim/SpaceVim" rel="nofollow"&gt;Gitter &lt;strong&gt;Chat&lt;/strong&gt;&lt;/a&gt; |
&lt;a href="https://spacevim.org/cn/" rel="nofollow"&gt;中文官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/SpaceVim/SpaceVim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/007598b4f2e2bc1b91cbbba50b50f4ec2892dda5/68747470733a2f2f7472617669732d63692e6f72672f537061636556696d2f537061636556696d2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/SpaceVim/SpaceVim.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/wsdjeg/spacevim/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c24f62577665d00ff1dd8b3569f1456357709d26/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f65683374356f706837306162703636352f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/eh3t5oph70abp665/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/SpaceVim/SpaceVim/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4063b9d4232019157952efa7f765410e73b29330/68747470733a2f2f636f6465636f762e696f2f67682f537061636556696d2f537061636556696d2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/SpaceVim/SpaceVim/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bf633cad66d0389fae4d210328a4c12b5f5db6c9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d312e332e302d2d6465762d3837303046462e737667"&gt;&lt;img src="https://camo.githubusercontent.com/bf633cad66d0389fae4d210328a4c12b5f5db6c9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d312e332e302d2d6465762d3837303046462e737667" alt="Version" data-canonical-src="https://img.shields.io/badge/version-1.3.0--dev-8700FF.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/dcb3a3de32cb31ae6a7edf80d88747f989878809/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c76332d626c75652e737667" alt="GPLv3 License" data-canonical-src="https://img.shields.io/badge/license-GPLv3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="doc/SpaceVim.txt"&gt;&lt;img src="https://camo.githubusercontent.com/6819db8a4c4bc5ff7f7e5bae60e3d145dc9d8b3e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f632d25334168253230537061636556696d2d6f72616e67652e737667" alt="Doc" data-canonical-src="https://img.shields.io/badge/doc-%3Ah%20SpaceVim-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about-spacevim" class="anchor" aria-hidden="true" href="#about-spacevim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About SpaceVim&lt;/h2&gt;
&lt;p&gt;SpaceVim is a community-driven modular Vim distribution. It manages collections
of plugins in layers, which help to collect related packages together to provide IDE-like features.
SpaceVim is not just a vimrc but an ultimate Vim configuration, It contains many built-in features.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/61462920-0bd9d000-a9a6-11e9-8e1f-c70d6ec6ca1e.png"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/61462920-0bd9d000-a9a6-11e9-8e1f-c70d6ec6ca1e.png" alt="welcome-page" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The last release is v1.2.0, check out &lt;a href="https://github.com/SpaceVim/SpaceVim/wiki/Following-HEAD"&gt;following-HEAD&lt;/a&gt; page for what happened since last release.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-instructions" class="anchor" aria-hidden="true" href="#instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instructions&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;See the followings below for more information:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://spacevim.org/quick-start-guide/" rel="nofollow"&gt;Quick Start Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spacevim.org/documentation/" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spacevim.org/layers/" rel="nofollow"&gt;Available Layers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have any questions about SpaceVim, please follow the &lt;a href="https://github.com/SpaceVim/SpaceVim/wiki/Getting-help"&gt;Getting Help Guide&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#new-features"&gt;New Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#project-layout"&gt;Project layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#support-spacevim"&gt;Support SpaceVim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits--thanks"&gt;Credits &amp;amp; Thanks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a id="user-content-new-features" class="anchor" aria-hidden="true" href="#new-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New Features&lt;/h3&gt;
&lt;p&gt;This is a list of latest features implemented in SpaceVim:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use toml as default configuration&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is an example for using toml as SpaceVim config:&lt;/p&gt;
&lt;div class="highlight highlight-source-toml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This is basic configuration example for SpaceVim.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; All SpaceVim options below [options] snippet.&lt;/span&gt;
[&lt;span class="pl-en"&gt;options&lt;/span&gt;]
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Set SpaceVim theme. By default colorscheme layer is not loaded.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you want to use more colorschemes, please load the colorscheme&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; layer.&lt;/span&gt;
    &lt;span class="pl-smi"&gt;colorscheme&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gruvbox&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;colorscheme_bg&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dark&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Disable guicolors in basic mode, many terminal do not support 24bit&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; true colors&lt;/span&gt;
    &lt;span class="pl-smi"&gt;enable_guicolors&lt;/span&gt; = &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Disable statusline separator, if you want to use other value, please&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install nerd fonts&lt;/span&gt;
    &lt;span class="pl-smi"&gt;statusline_separator&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nil&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;statusline_inactive_separator&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;buffer_index_type&lt;/span&gt; = &lt;span class="pl-c1"&gt;4&lt;/span&gt;
    &lt;span class="pl-smi"&gt;windows_index_type&lt;/span&gt; = &lt;span class="pl-c1"&gt;3&lt;/span&gt;
    &lt;span class="pl-smi"&gt;enable_tabline_ft_icon&lt;/span&gt; = &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    &lt;span class="pl-smi"&gt;enable_statusline_mode&lt;/span&gt; = &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    &lt;span class="pl-smi"&gt;statusline_unicode_symbols&lt;/span&gt; = &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Enable Vim compatible mode, avoid changing origin Vim key bindings&lt;/span&gt;
    &lt;span class="pl-smi"&gt;vimcompatible&lt;/span&gt; = &lt;span class="pl-c1"&gt;true&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Enable autocomplete layer&lt;/span&gt;
[[&lt;span class="pl-en"&gt;layers&lt;/span&gt;]]
    &lt;span class="pl-smi"&gt;name&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;autocomplete&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;auto-completion-return-key-behavior&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;complete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;auto-completion-tab-key-behavior&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cycle&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

[[&lt;span class="pl-en"&gt;layers&lt;/span&gt;]]
    &lt;span class="pl-smi"&gt;name&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;shell&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;default_position&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;top&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;default_height&lt;/span&gt; = &lt;span class="pl-c1"&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Iedit mode&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SpaceVim uses a powerful iedit mode to quick edit multiple occurrences of a symbol or selection. Two new modes:&lt;code&gt;iedit-Normal&lt;/code&gt;/&lt;code&gt;iedit-Insert&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The default color for iedit is &lt;code&gt;red&lt;/code&gt;/&lt;code&gt;green&lt;/code&gt; which is based on the current colorscheme.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/44941560-be2a9800-add2-11e8-8fa5-e6118ff9ddcb.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/44941560-be2a9800-add2-11e8-8fa5-e6118ff9ddcb.gif" alt="iedit mode" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Highlight cursor symbol&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SpaceVim supports highlighting of the current symbol on demand and adds
a transient state to easily navigate and rename this symbol.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/36210381-e6dffde6-1163-11e8-9b35-0bf262e6f22b.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/36210381-e6dffde6-1163-11e8-9b35-0bf262e6f22b.gif" alt="highlight cursor symbol" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spacevim.org/grep-on-the-fly-in-spacevim/" rel="nofollow"&gt;&lt;strong&gt;Fly Grep in Vim&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With this feature, Vim will display the searching result as you type. Of course, it is running
asynchronously. Before using this feature, you need to install a searching tool. FlyGrep works
through search tools: &lt;code&gt;ag&lt;/code&gt;, &lt;code&gt;rg&lt;/code&gt;, &lt;code&gt;ack&lt;/code&gt;, &lt;code&gt;pt&lt;/code&gt; and &lt;code&gt;grep&lt;/code&gt;, Choose one you like.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/35278709-7856ed62-0010-11e8-8b1e-e6cc6374b0dc.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/35278709-7856ed62-0010-11e8-8b1e-e6cc6374b0dc.gif" alt="searching project" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spacevim.org/mnemonic-key-bindings-navigation/" rel="nofollow"&gt;&lt;strong&gt;Mnemonic key bindings navigation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You don't need to remember any key bindings, as the mapping guide will show up after the &lt;kbd&gt;SPC&lt;/kbd&gt; is pressed.
The mapping guide is also available for &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;z&lt;/code&gt;, and &lt;code&gt;s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/35568184-9a318082-058d-11e8-9d88-e0eafd1d498d.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/35568184-9a318082-058d-11e8-9d88-e0eafd1d498d.gif" alt="mapping guide" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spacevim.org/help-description-for-key-bindings/" rel="nofollow"&gt;&lt;strong&gt;Help description for key bindings&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;kbd&gt;SPC h d k&lt;/kbd&gt; to get the help description of a key binding, and &lt;code&gt;gd&lt;/code&gt; to find definition of key bindings.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/35568829-e3c8e74c-058f-11e8-8fa8-c0e046d8add3.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/35568829-e3c8e74c-058f-11e8-8fa8-c0e046d8add3.gif" alt="describe key bindings" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spacevim.org/Asynchronous-plugin-manager/" rel="nofollow"&gt;&lt;strong&gt;Asynchronous plugin manager&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Create an UI for &lt;a href="https://github.com/Shougo/dein.vim/"&gt;dein.vim&lt;/a&gt; - the best asynchronous vim plugin manager&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/34907332-903ae968-f842-11e7-8ac9-07fcc9940a53.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/34907332-903ae968-f842-11e7-8ac9-07fcc9940a53.gif" alt="UI for dein" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more features, please read &lt;a href="https://spacevim.org/blog/" rel="nofollow"&gt;SpaceVim's Blog&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-project-layout" class="anchor" aria-hidden="true" href="#project-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project layout&lt;/h3&gt;
&lt;pre lang="txt"&gt;&lt;code&gt;├─ .ci/                           build automation
├─ .github/                       issue/PR templates
├─ .SpaceVim.d/                   project specific configuration
├─ autoload/SpaceVim.vim          SpaceVim core file
├─ autoload/SpaceVim/api/         Public APIs
├─ autoload/SpaceVim/layers/      available layers
├─ autoload/SpaceVim/plugins/     buildin plugins
├─ autoload/SpaceVim/mapping/     mapping guide
├─ doc/                           help(cn/en)
├─ docs/                          website(cn/en)
├─ wiki/                          wiki(cn/en)
├─ bin/                           executable
└─ test/                          tests
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-support-spacevim" class="anchor" aria-hidden="true" href="#support-spacevim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support SpaceVim&lt;/h3&gt;
&lt;p&gt;The best way to support SpaceVim is to contribute to it either by reporting bugs.
Helping the community on the &lt;a href="https://gitter.im/SpaceVim/SpaceVim" rel="nofollow"&gt;Gitter Chat&lt;/a&gt; or sending pull requests.&lt;/p&gt;
&lt;p&gt;For more information please check our &lt;a href="https://spacevim.org/development/" rel="nofollow"&gt;development guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to show your support financially you can buy a drink for the maintainer by clicking following icon.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ko-fi.com/spacevim" rel="nofollow"&gt;&lt;img height="36" src="https://camo.githubusercontent.com/36f1700e51bb6878f6dbf43d34db37b38c23c91b/68747470733a2f2f617a3734333730322e766f2e6d7365636e642e6e65742f63646e2f6b6f6669342e706e673f763d66" border="0" alt="Buy Me a Coffee at ko-fi.com" data-canonical-src="https://az743702.vo.msecnd.net/cdn/kofi4.png?v=f" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;wechat&lt;/th&gt;
&lt;th&gt;alipay&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#support-spacevim"&gt;&lt;img src="https://camo.githubusercontent.com/d949f041945a20d96f39d0c984b26bb56f3b96f0/68747470733a2f2f737061636576696d2e6f72672f696d672f77656978696e2e706e67" height="150" width="150" data-canonical-src="https://spacevim.org/img/weixin.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#support-spacevim"&gt;&lt;img src="https://camo.githubusercontent.com/e4f235211e00a484f0440cddc57d8197d3330ab8/68747470733a2f2f737061636576696d2e6f72672f696d672f7a6869667562616f2e706e67" height="150" width="150" data-canonical-src="https://spacevim.org/img/zhifubao.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Bitcoin: 1DtuVeg81c2L9NEhDaVTAAbrCR3pN5xPFv&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-credits--thanks" class="anchor" aria-hidden="true" href="#credits--thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits &amp;amp; Thanks&lt;/h3&gt;
&lt;p&gt;This project exists to thank all the people who have &lt;a href="CONTRIBUTING.md"&gt;contributed&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/SpaceVim/SpaceVim/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/b4069eac40d0e90091336ef9f0603b1838c6a2e2/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f737061636576696d2f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/spacevim/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Gabirel"&gt;@Gabirel&lt;/a&gt; and his &lt;a href="https://github.com/Gabirel/Hack-SpaceVim"&gt;Hack-SpaceVim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/everettjf"&gt;@everettjf&lt;/a&gt; and his &lt;a href="https://everettjf.gitbooks.io/spacevimtutorial/content/" rel="nofollow"&gt;SpaceVimTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/vimdoc"&gt;vimdoc&lt;/a&gt; generate doc file for SpaceVim&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rafi"&gt;Rafael Bodill&lt;/a&gt; and his vim-config&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bling"&gt;Bailey Ling&lt;/a&gt; and his dotvim&lt;/li&gt;
&lt;li&gt;Authors of all the plugins used in SpaceVim.&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>SpaceVim</author><guid isPermaLink="false">https://github.com/SpaceVim/SpaceVim</guid><pubDate>Sat, 02 Nov 2019 00:00:00 GMT</pubDate></item><item><title>fatih/vim-go #3 in Vim script, Today</title><link>https://github.com/fatih/vim-go</link><description>&lt;p&gt;&lt;i&gt;Go development plugin for Vim&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vim-go-" class="anchor" aria-hidden="true" href="#vim-go-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vim-go &lt;a href="https://travis-ci.org/fatih/vim-go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/439ea3a95ba73ab9ef9e4c560159ee272ce10b5c/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f66617469682f76696d2d676f2e7376673f7374796c653d666c61742d737175617265" alt="Build Status" data-canonical-src="http://img.shields.io/travis/fatih/vim-go.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="assets/vim-go.png"&gt;&lt;img src="assets/vim-go.png" alt="Vim-go logo" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;This plugin adds Go language support for Vim, with the following main features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compile your package with &lt;code&gt;:GoBuild&lt;/code&gt;, install it with &lt;code&gt;:GoInstall&lt;/code&gt; or test it
with &lt;code&gt;:GoTest&lt;/code&gt;. Run a single test with &lt;code&gt;:GoTestFunc&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Quickly execute your current file(s) with &lt;code&gt;:GoRun&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Improved syntax highlighting and folding.&lt;/li&gt;
&lt;li&gt;Debug programs with integrated &lt;code&gt;delve&lt;/code&gt; support with &lt;code&gt;:GoDebugStart&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Completion support via &lt;code&gt;gocode&lt;/code&gt; and &lt;code&gt;gopls&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gofmt&lt;/code&gt; or &lt;code&gt;goimports&lt;/code&gt; on save keeps the cursor position and undo history.&lt;/li&gt;
&lt;li&gt;Go to symbol/declaration with &lt;code&gt;:GoDef&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Look up documentation with &lt;code&gt;:GoDoc&lt;/code&gt; or &lt;code&gt;:GoDocBrowser&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Easily import packages via &lt;code&gt;:GoImport&lt;/code&gt;, remove them via &lt;code&gt;:GoDrop&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Precise type-safe renaming of identifiers with &lt;code&gt;:GoRename&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;See which code is covered by tests with &lt;code&gt;:GoCoverage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Add or remove tags on struct fields with &lt;code&gt;:GoAddTags&lt;/code&gt; and &lt;code&gt;:GoRemoveTags&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Call &lt;code&gt;gometalinter&lt;/code&gt; with &lt;code&gt;:GoMetaLinter&lt;/code&gt; to invoke all possible linters
(&lt;code&gt;golint&lt;/code&gt;, &lt;code&gt;vet&lt;/code&gt;, &lt;code&gt;errcheck&lt;/code&gt;, &lt;code&gt;deadcode&lt;/code&gt;, etc.) and put the result in the
quickfix or location list.&lt;/li&gt;
&lt;li&gt;Lint your code with &lt;code&gt;:GoLint&lt;/code&gt;, run your code through &lt;code&gt;:GoVet&lt;/code&gt; to catch static
errors, or make sure errors are checked with &lt;code&gt;:GoErrCheck&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Advanced source analysis tools utilizing &lt;code&gt;guru&lt;/code&gt;, such as &lt;code&gt;:GoImplements&lt;/code&gt;,
&lt;code&gt;:GoCallees&lt;/code&gt;, and &lt;code&gt;:GoReferrers&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;... and many more! Please see &lt;a href="doc/vim-go.txt"&gt;doc/vim-go.txt&lt;/a&gt; for more
information.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;vim-go requires at least Vim 8.0.1453 or Neovim 0.3.1.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/fatih/vim-go/releases/latest"&gt;&lt;strong&gt;latest stable release&lt;/strong&gt;&lt;/a&gt; is the
recommended version to use. If you choose to use the master branch instead,
please do so with caution; it is a &lt;em&gt;development&lt;/em&gt; branch.&lt;/p&gt;
&lt;p&gt;vim-go follows the standard runtime path structure. Below are some helper lines
for popular package managers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://vimhelp.appspot.com/repeat.txt.html#packages" rel="nofollow"&gt;Vim 8 packages&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/fatih/vim-go.git ~/.vim/pack/plugins/start/vim-go&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tpope/vim-pathogen"&gt;Pathogen&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/fatih/vim-go.git ~/.vim/bundle/vim-go&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VundleVim/Vundle.vim"&gt;Vundle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Plugin 'fatih/vim-go'&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will also need to install all the necessary binaries. vim-go makes it easy
to install all of them by providing a command, &lt;code&gt;:GoInstallBinaries&lt;/code&gt;, which will
&lt;code&gt;go get&lt;/code&gt; all the required binaries.&lt;/p&gt;
&lt;p&gt;Check out the Install section in &lt;a href="doc/vim-go.txt"&gt;the documentation&lt;/a&gt; for more
detailed instructions (&lt;code&gt;:help go-install&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;The full documentation can be found at &lt;a href="doc/vim-go.txt"&gt;doc/vim-go.txt&lt;/a&gt;. You can
display it from within Vim with &lt;code&gt;:help vim-go&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Depending on your installation method, you may have to generate the plugin's
&lt;a href="http://vimhelp.appspot.com/helphelp.txt.html#%3Ahelptags" rel="nofollow"&gt;&lt;code&gt;help tags&lt;/code&gt;&lt;/a&gt;
manually (e.g. &lt;code&gt;:helptags ALL&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;We also have an &lt;a href="https://github.com/fatih/vim-go/wiki"&gt;official vim-go tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq-and-troubleshooting" class="anchor" aria-hidden="true" href="#faq-and-troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ and troubleshooting&lt;/h2&gt;
&lt;p&gt;The FAQ and troubleshooting tips are in the documentation and can be quickly
accessed using &lt;code&gt;:help go-troubleshooting&lt;/code&gt;. If you believe you've found a bug or
shortcoming in vim-go that is neither addressed by help nor in &lt;a href="https://github.com/fatih/vim-go/issues"&gt;existing
issues&lt;/a&gt;, please open an issue with
clear reproduction steps. &lt;code&gt;:GoReportGitHubIssue&lt;/code&gt; can be used pre-populate a lot
of the information needed when creating a new issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The BSD 3-Clause License - see &lt;a href="LICENSE"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for more details&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fatih</author><guid isPermaLink="false">https://github.com/fatih/vim-go</guid><pubDate>Sat, 02 Nov 2019 00:00:00 GMT</pubDate></item><item><title>mhinz/vim-galore #4 in Vim script, Today</title><link>https://github.com/mhinz/vim-galore</link><description>&lt;p&gt;&lt;i&gt;:mortar_board: All things Vim!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
  &lt;br&gt;&lt;br&gt;&lt;br&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/mhinz/vim-galore/master/static/images/logo-vim-galore.png"&gt;&lt;img src="https://raw.githubusercontent.com/mhinz/vim-galore/master/static/images/logo-vim-galore.png" alt="vim-galore logo" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
  &lt;div&gt;
    &lt;a href="https://github.com/wsdjeg/vim-galore-zh_cn"&gt;Chinese&lt;/a&gt; |
    &lt;a href="http://postd.cc/?s=vim-galore" rel="nofollow"&gt;Japanese&lt;/a&gt; |
    &lt;a href="https://github.com/lsrdg/vim-galore"&gt;Portuguese&lt;/a&gt; |
    &lt;a href="http://givi.olnd.ru/vim-galore/vim-galore-ru.html" rel="nofollow"&gt;Russian&lt;/a&gt;
    &lt;div&gt;
      &lt;br&gt;
      &lt;sub&gt;Licensed under &lt;a href="https://creativecommons.org/licenses/by-sa/4.0" rel="nofollow"&gt;CC BY-SA 4.0&lt;/a&gt;.&lt;/sub&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;br&gt;&lt;br&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-intro" class="anchor" aria-hidden="true" href="#intro"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#intro-1"&gt;Intro&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-vim"&gt;What is Vim?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-vim-philosophy"&gt;The Vim Philosophy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#first-steps"&gt;First steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#minimal-vimrc"&gt;Minimal vimrc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-kind-of-vim-am-i-running"&gt;What kind of Vim am I running?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cheatsheets"&gt;Cheatsheets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-basics" class="anchor" aria-hidden="true" href="#basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#basics-1"&gt;Basics&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#buffers-windows-tabs"&gt;Buffers, windows, tabs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#active-loaded-listed-named-buffers"&gt;Active, loaded, listed, named buffers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#argument-list"&gt;Argument list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mappings"&gt;Mappings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mapleader"&gt;Mapleader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#registers"&gt;Registers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ranges"&gt;Ranges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#marks"&gt;Marks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#completion"&gt;Completion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#motions-operators-text-objects"&gt;Motions, operators, text objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#autocmds"&gt;Autocmds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changelist-jumplist"&gt;Changelist, jumplist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#undo-tree"&gt;Undo tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#quickfix-and-location-lists"&gt;Quickfix and location lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#macros"&gt;Macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#colorschemes"&gt;Colorschemes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#folding"&gt;Folding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sessions"&gt;Sessions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#locality"&gt;Locality&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#usage-1"&gt;Usage&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-help-offline"&gt;Getting help offline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help-offline-alternative"&gt;Getting help offline (alternative)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help-online"&gt;Getting help online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#autocmds-in-practice"&gt;Autocmds in practice&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#user-events"&gt;User events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nested-autocmds"&gt;Nested autocmds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#clipboard"&gt;Clipboard&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#clipboard-usage-windows-macos"&gt;Clipboard usage (Windows, macOS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#clipboard-usage-linux-bsd-"&gt;Clipboard usage (Linux, BSD, ...)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#restore-cursor-position-when-opening-file"&gt;Restore cursor position when opening file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#temporary-files"&gt;Temporary files&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#backup-files"&gt;Backup files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swap-files"&gt;Swap files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#undo-files"&gt;Undo files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#viminfo-files"&gt;Viminfo files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#example-configuration-for-temporary-files"&gt;Example configuration for temporary files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#editing-remote-files"&gt;Editing remote files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#managing-plugins"&gt;Managing plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#block-insert"&gt;Block insert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#running-external-programs-and-using-filters"&gt;Running external programs and using filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cscope"&gt;Cscope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#matchit"&gt;MatchIt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#true-colors"&gt;True colors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-tips" class="anchor" aria-hidden="true" href="#tips"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#tips-1"&gt;Tips&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#go-to-other-end-of-selected-text"&gt;Go to other end of selected text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#saner-behavior-of-n-and-n"&gt;Saner behavior of n and N&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#saner-command-line-history"&gt;Saner command-line history&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#saner-ctrl-l"&gt;Saner CTRL-L&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#disable-audible-and-visual-bells"&gt;Disable audible and visual bells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#quickly-move-current-line"&gt;Quickly move current line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#quickly-add-empty-lines"&gt;Quickly add empty lines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#quickly-edit-your-macros"&gt;Quickly edit your macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#quickly-jump-to-header-or-source-file"&gt;Quickly jump to header or source file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#quickly-change-font-size-in-gui"&gt;Quickly change font size in GUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#change-cursor-style-dependent-on-mode"&gt;Change cursor style dependent on mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dont-lose-selection-when-shifting-sidewards"&gt;Don't lose selection when shifting sidewards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reload-a-file-on-saving"&gt;Reload a file on saving&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#smarter-cursorline"&gt;Smarter cursorline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faster-keyword-completion"&gt;Faster keyword completion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cosmetic-changes-to-colorschemes"&gt;Cosmetic changes to colorschemes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#commands-1"&gt;Commands&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#global-and-vglobal"&gt;:global and :vglobal&lt;/a&gt; - Execute a command on all matching lines.&lt;/li&gt;
&lt;li&gt;&lt;a href="#normal-and-execute"&gt;:normal and :execute&lt;/a&gt; - The scripting dream team.&lt;/li&gt;
&lt;li&gt;&lt;a href="#redir-and-execute"&gt;:redir and execute()&lt;/a&gt; - Capture command output.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#debugging-1"&gt;Debugging&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#general-tips"&gt;General tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#verbosity"&gt;Verbosity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#profiling-startup-time"&gt;Profiling startup time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#profiling-at-runtime"&gt;Profiling at runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debugging-vim-scripts"&gt;Debugging Vim scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debugging-syntax-files"&gt;Debugging syntax files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-miscellaneous" class="anchor" aria-hidden="true" href="#miscellaneous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#miscellaneous-1"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#additional-resources"&gt;Additional resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vim-distributions"&gt;Vim distributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#standard-plugins"&gt;Standard plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#map-capslock-to-control"&gt;Map CapsLock to Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#generating-html-from-buffer"&gt;Generating HTML from buffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#easter-eggs"&gt;Easter eggs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-hjkl-for-navigation"&gt;Why hjkl for navigation?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-common-problems" class="anchor" aria-hidden="true" href="#common-problems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#common-problems-1"&gt;Common problems&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#editing-small-files-is-slow"&gt;Editing small files is slow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#editing-huge-files-is-slow"&gt;Editing huge files is slow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bracketed-paste-or-why-do-i-have-to-set-paste-all-the-time"&gt;Bracketed paste (or why do I have to set 'paste' all the time?)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#delays-when-using-escape-key-in-terminal"&gt;Delays when using escape key in terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#function-search-undo"&gt;Function search undo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-technical-quirks" class="anchor" aria-hidden="true" href="#technical-quirks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#technical-quirks-1"&gt;Technical quirks&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#newline-used-for-nul"&gt;Newline used for NUL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-terminology" class="anchor" aria-hidden="true" href="#terminology"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#terminology-1"&gt;Terminology&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#vim-script-vimscript-viml"&gt;Vim script? Vimscript? VimL?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-list-of-colorschemes" class="anchor" aria-hidden="true" href="#list-of-colorschemes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="PLUGINS.md#colorschemes-1"&gt;List of colorschemes&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-list-of-plugins" class="anchor" aria-hidden="true" href="#list-of-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="PLUGINS.md"&gt;List of plugins&lt;/a&gt;&lt;/h3&gt;
&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content-intro-1" class="anchor" aria-hidden="true" href="#intro-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intro&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-vim" class="anchor" aria-hidden="true" href="#what-is-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Vim?&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.vim.org" rel="nofollow"&gt;Vim&lt;/a&gt; is a text editor with a long line of ancestors that
goes back to &lt;a href="https://en.wikipedia.org/wiki/QED_(text_editor)" rel="nofollow"&gt;qed&lt;/a&gt;. &lt;a href="https://en.wikipedia.org/wiki/Bram_Moolenaar" rel="nofollow"&gt;Bram
Moolenaar&lt;/a&gt; released it in 1991.&lt;/p&gt;
&lt;p&gt;The project is hosted online at &lt;a href="http://www.vim.org/index.php" rel="nofollow"&gt;vim.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Getting Vim: Use your favourite package manager or visit the &lt;a href="http://www.vim.org/download.php" rel="nofollow"&gt;download
page&lt;/a&gt; from vim.org.&lt;/p&gt;
&lt;p&gt;Discussions and user questions are best done on the
&lt;a href="https://groups.google.com/forum/#!forum/vim_use" rel="nofollow"&gt;vim_use&lt;/a&gt; mailing list or using
IRC (&lt;a href="https://freenode.net" rel="nofollow"&gt;Freenode&lt;/a&gt;) in the &lt;code&gt;#vim&lt;/code&gt; channel.&lt;/p&gt;
&lt;p&gt;Development happens on &lt;a href="https://github.com/vim/vim"&gt;GitHub&lt;/a&gt;, discussions on the
&lt;a href="https://groups.google.com/forum/#!forum/vim_dev" rel="nofollow"&gt;vim_dev&lt;/a&gt; mailing list.&lt;/p&gt;
&lt;p&gt;Read &lt;a href="http://www.viemu.com/a-why-vi-vim.html" rel="nofollow"&gt;Why, oh WHY, do those #?@! nutheads use
vi?&lt;/a&gt; to see common misconceptions about
Vim explained.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-vim-philosophy" class="anchor" aria-hidden="true" href="#the-vim-philosophy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Vim Philosophy&lt;/h2&gt;
&lt;p&gt;Vim adheres to the modal editing philosophy. This means that it provides
multiple modes and the meaning of keys changes according to the mode. You
navigate files in &lt;em&gt;normal mode&lt;/em&gt;, you insert text in &lt;em&gt;insert mode&lt;/em&gt;, you select
lines in &lt;em&gt;visual mode&lt;/em&gt;, you access commands in &lt;em&gt;command-line mode&lt;/em&gt; and so on.
This might sound complicated at first, but has a huge advantage: you don't have
to break your fingers by holding several keys at once, most of the time you
simply press them one after the other. The more common the task, the fewer keys
are needed.&lt;/p&gt;
&lt;p&gt;A related concept that works well with modal editing are operators and motions.
&lt;em&gt;Operators&lt;/em&gt; start a certain action, e.g. changing, removing, or selecting text.
Afterwards you specify the region of text you want to act on using a &lt;em&gt;motion&lt;/em&gt;.
To change everything between parentheses, use &lt;code&gt;ci(&lt;/code&gt; (read &lt;em&gt;change inner
parentheses&lt;/em&gt;). To remove an entire paragraph of text, use &lt;code&gt;dap&lt;/code&gt; (read &lt;em&gt;delete
around paragraph&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;If you see advanced Vim users working, you'll notice that they speak the
&lt;em&gt;language of Vim&lt;/em&gt; as well as pianists handle their instruments. Complex
operations are done using only a few key presses. They don't even think about it
anymore as &lt;a href="https://en.wikipedia.org/wiki/Muscle_memory" rel="nofollow"&gt;muscle memory&lt;/a&gt; took
over already. This reduces &lt;a href="https://en.wikipedia.org/wiki/Cognitive_load" rel="nofollow"&gt;cognitive
load&lt;/a&gt; and helps to focus on the
actual task.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-first-steps" class="anchor" aria-hidden="true" href="#first-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;First steps&lt;/h2&gt;
&lt;p&gt;Vim comes bundled with an interactive tutorial that teaches the most basic
things you need to know about. You can start it from the shell:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vimtutor
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Don't be put off by how boring it looks like and work through the exercises. The
editors or IDEs you used before were most probably all non-modal, so working by
switching modes will seem awkward at first, but the more you use Vim, the more
it becomes &lt;a href="https://en.wikipedia.org/wiki/Muscle_memory" rel="nofollow"&gt;muscle memory&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Vim was bolted on &lt;a href="https://en.wikipedia.org/wiki/Stevie_(text_editor)" rel="nofollow"&gt;Stevie&lt;/a&gt;, a
&lt;a href="https://en.wikipedia.org/wiki/Vi" rel="nofollow"&gt;vi&lt;/a&gt; clone, and supports two operating modes:
"compatible" and "nocompatible". Using Vim in compatible mode means using vi
defaults for all options, opposed to Vim defaults. As long as you didn't create
a user vimrc yet or started Vim with &lt;code&gt;vim -N&lt;/code&gt;, compatible mode is assumed! Don't
use Vim in compatible mode. Just don't.&lt;/p&gt;
&lt;p&gt;Next steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create your own &lt;a href="#minimal-vimrc"&gt;vimrc&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Have some &lt;a href="#cheatsheets"&gt;cheatsheets&lt;/a&gt; ready for the first weeks.&lt;/li&gt;
&lt;li&gt;Read through the &lt;a href="#basics-1"&gt;basics&lt;/a&gt; section to learn what is even possible.&lt;/li&gt;
&lt;li&gt;Learn on demand! You never finish learning Vim. If you encounter any
problems, just look for it on the internet. Your problem was solved already.
Vim comes with great documentation and knowing how to navigate it is a must:
&lt;a href="#getting-help-offline"&gt;Getting help offline&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Have a look at the &lt;a href="#additional-resources"&gt;additional resources&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;One last advice: Please learn how to use Vim properly before starting to add all
kinds of hyped &lt;a href="#managing-plugins"&gt;plugins&lt;/a&gt; that only implement features that
Vim already supports natively.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-minimal-vimrc" class="anchor" aria-hidden="true" href="#minimal-vimrc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Minimal vimrc&lt;/h2&gt;
&lt;p&gt;The user vimrc can be put into &lt;code&gt;~/.vimrc&lt;/code&gt; or for the sake of better separation
into &lt;code&gt;~/.vim/vimrc&lt;/code&gt;. The latter makes it easy to put the entire configuration
under version control and upload it to, let's say GitHub.&lt;/p&gt;
&lt;p&gt;You find many "minimal vimrcs" all over the net, and maybe my version isn't as
minimal as it should be, but it provides a good set of sane settings that I deem
to be useful for starting out.&lt;/p&gt;
&lt;p&gt;Eventually you have to read up on all the mentioned settings anyway and decide
for yourself. :-)&lt;/p&gt;
&lt;p&gt;So here it is: &lt;a href="static/minimal-vimrc.vim"&gt;minimal-vimrc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In case you're interested, here's
&lt;a href="https://github.com/mhinz/dotfiles/blob/master/.vim/vimrc"&gt;my vimrc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt;: Most plugin authors maintain several plugins and also publish their
vimrc on GitHub (often in a repository called "vim-config" or "dotfiles"), so
whenever you find a plugin you like, look up its maintainer's GitHub page and
look through the repositories.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-kind-of-vim-am-i-running" class="anchor" aria-hidden="true" href="#what-kind-of-vim-am-i-running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What kind of Vim am I running?&lt;/h2&gt;
&lt;p&gt;Looking at &lt;code&gt;:version&lt;/code&gt; will give you all the information you need to know about
how the currently running Vim binary was compiled.&lt;/p&gt;
&lt;p&gt;The first line tells you when the binary was compiled and the version, e.g. 7.4.
One of the next lines states &lt;code&gt;Included patches: 1-1051&lt;/code&gt;, which is the patch
level. Thus, your exact Vim version is 7.4.1051.&lt;/p&gt;
&lt;p&gt;Another line states something like &lt;code&gt;Tiny version without GUI&lt;/code&gt; or &lt;code&gt;Huge version with GUI&lt;/code&gt;. The obvious information from that is whether your Vim includes GUI
support, e.g. for starting &lt;code&gt;gvim&lt;/code&gt; from the shell or running &lt;code&gt;:gui&lt;/code&gt; from Vim
within a terminal emulator. The other important information is the &lt;code&gt;Tiny&lt;/code&gt; and
&lt;code&gt;Huge&lt;/code&gt;. Vim distinguishes between feature sets called &lt;code&gt;tiny&lt;/code&gt;, &lt;code&gt;small&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;,
&lt;code&gt;big&lt;/code&gt;, and &lt;code&gt;huge&lt;/code&gt;, all enabling different subsets of features.&lt;/p&gt;
&lt;p&gt;The majority of &lt;code&gt;:version&lt;/code&gt; output is consumed by the feature list itself.
&lt;code&gt;+clipboard&lt;/code&gt; means the clipboard feature was compiled in, &lt;code&gt;-clipboard&lt;/code&gt; means it
wasn't compiled in.&lt;/p&gt;
&lt;p&gt;A few Vim features need to be compiled in for them to work. E.g. for &lt;code&gt;:prof&lt;/code&gt; to
work, you need a Vim with a huge feature set, because that set enables the
&lt;code&gt;+profile&lt;/code&gt; feature.&lt;/p&gt;
&lt;p&gt;If that's not the case and you installed Vim from a package manager, make sure
to install a package called &lt;code&gt;vim-x&lt;/code&gt;, &lt;code&gt;vim-x11&lt;/code&gt;, &lt;code&gt;vim-gtk&lt;/code&gt;, &lt;code&gt;vim-gnome&lt;/code&gt; or
similar, since these packages usually come with the huge feature set.&lt;/p&gt;
&lt;p&gt;You can also test for the version or features programmatically:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Do something if running at least Vim 7.4.42 with +profile enabled.&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;version&lt;/span&gt;&lt;span class="pl-k"&gt; &amp;gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;704&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;version&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;704&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;has&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;patch42&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;has&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;profile&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; do stuff&lt;/span&gt;
&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h :version
:h feature-list
:h +feature-list
:h has-patch
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-cheatsheets" class="anchor" aria-hidden="true" href="#cheatsheets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cheatsheets&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://people.csail.mit.edu/vgod/vim/vim-cheat-sheet-en.png" rel="nofollow"&gt;http://people.csail.mit.edu/vgod/vim/vim-cheat-sheet-en.png&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cdn.shopify.com/s/files/1/0165/4168/files/preview.png" rel="nofollow"&gt;https://cdn.shopify.com/s/files/1/0165/4168/files/preview.png&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://michael.peopleofhonoronly.com/vim/vim_cheat_sheet_for_programmers_screen.png" rel="nofollow"&gt;http://michael.peopleofhonoronly.com/vim/vim_cheat_sheet_for_programmers_screen.png&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rosipov.com/images/posts/vim-movement-commands-cheatsheet.png" rel="nofollow"&gt;http://www.rosipov.com/images/posts/vim-movement-commands-cheatsheet.png&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or quickly open a cheatsheet from within Vim: &lt;a href="https://github.com/lifepillar/vim-cheat40"&gt;vim-cheat40&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-basics-1" class="anchor" aria-hidden="true" href="#basics-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basics&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-buffers-windows-tabs" class="anchor" aria-hidden="true" href="#buffers-windows-tabs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Buffers, windows, tabs&lt;/h2&gt;
&lt;p&gt;Vim is a text editor. Every time text is shown, the text is part of a
&lt;strong&gt;buffer&lt;/strong&gt;. Each file will be opened in its own buffer. Plugins show stuff in
their own buffers etc.&lt;/p&gt;
&lt;p&gt;Buffers have many attributes, e.g. whether the text it contains is modifiable,
or whether it is associated with a file and thus needs to be synchronized to
disk on saving.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt; are viewports &lt;em&gt;onto&lt;/em&gt; buffers. If you want to view several files at
the same time or even different locations of the same file, you use windows.&lt;/p&gt;
&lt;p&gt;And please, please don't call them &lt;em&gt;splits&lt;/em&gt;. You can split a window in two, but
that doesn't make them &lt;em&gt;splits&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Windows can be split vertically or horizontally and the heights and widths of
existing windows can be altered, too. Therefore, you can use whatever window
layout you prefer.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;tab page&lt;/strong&gt; (or just tab) is a collection of windows. Thus, if you want to
use multiple window layouts, use tabs.&lt;/p&gt;
&lt;p&gt;Putting it in a nutshell, if you start Vim without arguments, you'll have one
tab page that holds one window that shows one buffer.&lt;/p&gt;
&lt;p&gt;By the way, the buffer list is global and you can access any buffer from any
tab.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-active-loaded-listed-named-buffers" class="anchor" aria-hidden="true" href="#active-loaded-listed-named-buffers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Active, loaded, listed, named buffers&lt;/h2&gt;
&lt;p&gt;Run Vim like this &lt;code&gt;vim file1&lt;/code&gt;. The file's content will be loaded into a buffer.
You have a &lt;strong&gt;loaded buffer&lt;/strong&gt; now. The content of the buffer is only synchronized
to disk (written back to the file) if you save it within Vim.&lt;/p&gt;
&lt;p&gt;Since the buffer is also shown in a window, it's also an &lt;strong&gt;active buffer&lt;/strong&gt;. Now
if you load another file via &lt;code&gt;:e file2&lt;/code&gt;, &lt;code&gt;file1&lt;/code&gt; will become a &lt;strong&gt;hidden buffer&lt;/strong&gt;
and &lt;code&gt;file2&lt;/code&gt; the active one.&lt;/p&gt;
&lt;p&gt;Both buffers are also &lt;strong&gt;listed&lt;/strong&gt;, thus they will get listed in the output of
&lt;code&gt;:ls&lt;/code&gt;. Plugin buffers or help buffers are often marked as unlisted, since
they're not regular files you usually edit with a text editor. Listed and
unlisted buffers can be shown via &lt;code&gt;:ls!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unnamed buffers&lt;/strong&gt;, also often used by plugins, are buffers that don't have an
associated filename. E.g. &lt;code&gt;:enew&lt;/code&gt; will create an unnamed scratch buffer. Add
some text and write it to disk via &lt;code&gt;:w /tmp/foo&lt;/code&gt;, and it will become a named
buffer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-argument-list" class="anchor" aria-hidden="true" href="#argument-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Argument list&lt;/h2&gt;
&lt;p&gt;The &lt;a href="#buffers-windows-tabs"&gt;global buffer list&lt;/a&gt; is a Vim thing. Before that, in
vi, there only used to be the argument list, which is also available in Vim.&lt;/p&gt;
&lt;p&gt;Every filename given to Vim on the shell command-line, is remembered in the
argument list. There can be multiple argument lists: by default all arguments
are put into the global argument list, but you can use &lt;code&gt;:arglocal&lt;/code&gt; to create a
new argument list that is local to the window.&lt;/p&gt;
&lt;p&gt;List the current arguments with &lt;code&gt;:args&lt;/code&gt;. Switch between files from the argument
list with &lt;code&gt;:next&lt;/code&gt;, &lt;code&gt;:previous&lt;/code&gt;, &lt;code&gt;:first&lt;/code&gt;, &lt;code&gt;:last&lt;/code&gt; and friends. Alter it with
&lt;code&gt;:argadd&lt;/code&gt;, &lt;code&gt;:argdelete&lt;/code&gt; or &lt;code&gt;:args&lt;/code&gt; with a list of files.&lt;/p&gt;
&lt;p&gt;If you should prefer using the buffer or argument list for working with files is
a matter of taste. My impression is that most people use the buffer list
exclusively.&lt;/p&gt;
&lt;p&gt;Nevertheless, there is one huge use case for the argument list: batch processing
via &lt;code&gt;:argdo&lt;/code&gt;! A simple refactoring example:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;args&lt;/span&gt; &lt;span class="pl-k"&gt;**&lt;/span&gt;/&lt;span class="pl-k"&gt;*&lt;/span&gt;.[&lt;span class="pl-c1"&gt;ch&lt;/span&gt;]
:&lt;span class="pl-c1"&gt;argdo&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt;&lt;span class="pl-c1"&gt;s&lt;/span&gt;&lt;span class="pl-sr"&gt;/foo/&lt;/span&gt;&lt;span class="pl-c1"&gt;bar&lt;/span&gt;/ge | &lt;span class="pl-c1"&gt;update&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This replaces all occurrences of "foo" by "bar" in all C source and header files
from the current directory and below.&lt;/p&gt;
&lt;p&gt;Help: &lt;code&gt;:h argument-list&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mappings" class="anchor" aria-hidden="true" href="#mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mappings&lt;/h2&gt;
&lt;p&gt;You can define your own mappings with the &lt;code&gt;:map&lt;/code&gt; family of commands. Each
command of that family defines a mapping for a certain set of modes. Technically
Vim comes with a whopping 12 modes, 6 of them can be mapped. Additionally, some
commands act on multiple modes at once.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Recursive&lt;/th&gt;
&lt;th&gt;Non-recursive&lt;/th&gt;
&lt;th&gt;Unmap&lt;/th&gt;
&lt;th&gt;Modes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:map&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:noremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:unmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;normal, visual, operator-pending&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:nmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:nnoremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:nunmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;normal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:xmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:xnoremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:xunmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;visual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:cnoremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:cunmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;command-line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:omap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:onoremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:ounmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;operator-pending&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:imap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:inoremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:iunmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;insert&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;E.g. this defines the mapping for normal mode only:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;space&amp;gt;&lt;/span&gt; :&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unmap it again by using &lt;code&gt;:nunmap &amp;lt;space&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For a few more but rather uncommon modes (or combinations of them), see &lt;code&gt;:h map-modes&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So far, so good. There's only one problem that can be pretty confusing to
beginners: &lt;code&gt;:nmap&lt;/code&gt; is &lt;em&gt;recursive&lt;/em&gt;! That is, the right-hand side takes other
mappings into account.&lt;/p&gt;
&lt;p&gt;So you defined a mapping that simply echoes "Foo":&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;b&lt;/span&gt; :&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But what if you want to map the default behavior of &lt;code&gt;b&lt;/code&gt; (going one word back) to
another key?&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;a&lt;/span&gt; &lt;span class="pl-c1"&gt;b&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you hit &lt;kbd&gt;a&lt;/kbd&gt;, we expect the cursor to go back a word, but instead
"Foo" is printed in the command-line! Because the right-hand side, &lt;code&gt;b&lt;/code&gt;, was
mapped to another action already, namely &lt;code&gt;:echo "Foo"&amp;lt;cr&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The proper way to resolve this problem is to use a &lt;em&gt;non-recursive&lt;/em&gt; mapping
instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;a&lt;/span&gt; &lt;span class="pl-c1"&gt;b&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rule of thumb: Always use non-recursive mappings unless recursing is actually
desired.&lt;/p&gt;
&lt;p&gt;Look up your mappings by not giving a right-hand side. E.g. &lt;code&gt;:nmap&lt;/code&gt; shows all
normal mappings and &lt;code&gt;:nmap &amp;lt;leader&amp;gt;&lt;/code&gt; shows all normal mappings that start with
the mapleader.&lt;/p&gt;
&lt;p&gt;If you want to disable a standard mapping, map them to the special &lt;code&gt;&amp;lt;nop&amp;gt;&lt;/code&gt;
character, e.g. &lt;code&gt;:noremap &amp;lt;left&amp;gt; &amp;lt;nop&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h key-notation
:h mapping
:h 05.3
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-mapleader" class="anchor" aria-hidden="true" href="#mapleader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mapleader&lt;/h2&gt;
&lt;p&gt;The mapleader is simply a placeholder than can be used with custom mappings and
is set to &lt;code&gt;\&lt;/code&gt; by default.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;h&lt;/span&gt; :&lt;span class="pl-c1"&gt;helpgrep&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;space&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This mapping is triggered by &lt;code&gt;\h&lt;/code&gt;. If you want to use &lt;code&gt;&amp;lt;space&amp;gt;h&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; mapleader &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;h&lt;/span&gt; :&lt;span class="pl-c1"&gt;helpgrep&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;space&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Moreover, there is &lt;code&gt;&amp;lt;localleader&amp;gt;&lt;/code&gt; that is the local counterpart to &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt;
and is supposed to be used for mappings that are local to the buffer, eg.
filetype-specific plugins. It also defaults to &lt;code&gt;\&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Set the mapleaders before mappings! All leader mappings that are in
effect already, won't change just because the mapleader was changed. &lt;code&gt;:nmap &amp;lt;leader&amp;gt;&lt;/code&gt; will show all normal mode leader mappings with the mapleader resolved
already, so use it to double-check your mappings.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:h mapleader&lt;/code&gt; and &lt;code&gt;:h maplocalleader&lt;/code&gt; for more.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-registers" class="anchor" aria-hidden="true" href="#registers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Registers&lt;/h2&gt;
&lt;p&gt;Registers are slots that save text. Copying text into a register is called
&lt;strong&gt;yanking&lt;/strong&gt; and extracting text from a register is called &lt;strong&gt;pasting&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Vim provides the following registers:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Character&lt;/th&gt;
&lt;th&gt;Filled by?&lt;/th&gt;
&lt;th&gt;Readonly?&lt;/th&gt;
&lt;th&gt;Contains text from?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Unnamed&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;[ ]&lt;/td&gt;
&lt;td&gt;Last yank or deletion. (&lt;code&gt;d&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Numbered&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;[ ]&lt;/td&gt;
&lt;td&gt;Register &lt;code&gt;0&lt;/code&gt;: Last yank. Register &lt;code&gt;1&lt;/code&gt;: Last deletion. Register &lt;code&gt;2&lt;/code&gt;: Second last deletion. And so on. Think of registers &lt;code&gt;1&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt; as a read-only &lt;a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)" rel="nofollow"&gt;queue&lt;/a&gt; with 9 elements.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Small delete&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;[ ]&lt;/td&gt;
&lt;td&gt;Last deletion that was less than one line.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Named&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt; to &lt;code&gt;z&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;Z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;user&lt;/td&gt;
&lt;td&gt;[ ]&lt;/td&gt;
&lt;td&gt;If you yank to register &lt;code&gt;a&lt;/code&gt;, you replace its text. If you yank to register &lt;code&gt;A&lt;/code&gt;, you append to the text in register &lt;code&gt;a&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read-only&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;[x]&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:&lt;/code&gt;: Last command, &lt;code&gt;.&lt;/code&gt;: Last inserted text, &lt;code&gt;%&lt;/code&gt;: Current filename.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alternate buffer&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;[ ]&lt;/td&gt;
&lt;td&gt;Most of the time the previously visited buffer of the current window. See &lt;code&gt;:h alternate-file&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Expression&lt;/td&gt;
&lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;user&lt;/td&gt;
&lt;td&gt;[ ]&lt;/td&gt;
&lt;td&gt;Evaluation of the VimL expression that was yanked. E.g. do this in insert mode: &lt;code&gt;&amp;lt;c-r&amp;gt;=5+5&amp;lt;cr&amp;gt;&lt;/code&gt; and "10" will be inserted in the buffer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Selection&lt;/td&gt;
&lt;td&gt;&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;[ ]&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*&lt;/code&gt; and &lt;code&gt;+&lt;/code&gt; are the &lt;a href="#clipboard"&gt;clipboard&lt;/a&gt; registers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Drop&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;[x]&lt;/td&gt;
&lt;td&gt;From last drag'n'drop.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Black hole&lt;/td&gt;
&lt;td&gt;&lt;code&gt;_&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;[ ]&lt;/td&gt;
&lt;td&gt;If you don't want any other registers implicitly affected. E.g. &lt;code&gt;"_dd&lt;/code&gt; deletes the current line without affecting registers &lt;code&gt;"&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Last search pattern&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;[ ]&lt;/td&gt;
&lt;td&gt;Last pattern used with &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;:global&lt;/code&gt;, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Each register that is not readonly can be set by the user:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;@/&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;register&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Afterwards &lt;kbd&gt;n&lt;/kbd&gt; would jump to the next occurrence of "register".&lt;/p&gt;
&lt;p&gt;There are numerous exceptions when registers get implicitly filled, so be sure
to read &lt;code&gt;:h registers&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Yank with &lt;code&gt;y&lt;/code&gt; and paste with &lt;code&gt;p&lt;/code&gt;/&lt;code&gt;P&lt;/code&gt;, but mind that Vim distinguishes between
characterwise and linewise visual selections. See &lt;code&gt;:h linewise&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example: linewise&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yy&lt;/code&gt; (or just &lt;code&gt;Y&lt;/code&gt;) yanks the current line, move the cursor somewhere else, use
&lt;code&gt;p&lt;/code&gt; to paste below the current line &lt;code&gt;P&lt;/code&gt; for pasting above it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example: charwise&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Yank the first word with &lt;code&gt;0yw&lt;/code&gt;, move somewhere else, paste after the cursor on
the current line with &lt;code&gt;p&lt;/code&gt; and before the cursor with &lt;code&gt;P&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example: explicit naming of register&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;"aY&lt;/code&gt; yanks the current line into register &lt;code&gt;a&lt;/code&gt;. Move to another line. &lt;code&gt;"AY&lt;/code&gt;
appends the current line to register &lt;code&gt;a&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I suggest playing around with all these registers a bit and constantly checking
&lt;code&gt;:reg&lt;/code&gt;, so you can see what's actually happening.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fun fact&lt;/strong&gt;: In Emacs "yanking" stands for pasting (or &lt;em&gt;reinserting previously
killed text&lt;/em&gt;) not copying.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ranges" class="anchor" aria-hidden="true" href="#ranges"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ranges&lt;/h2&gt;
&lt;p&gt;Ranges are pretty easy to understand, but many Vimmers don't know about their
full potential.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Many commands take ranges.&lt;/li&gt;
&lt;li&gt;An address denotes a certain line.&lt;/li&gt;
&lt;li&gt;A range is either a single address or a pair of addresses separated by either
&lt;code&gt;,&lt;/code&gt; or &lt;code&gt;;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Ranges tell commands which lines to act on.&lt;/li&gt;
&lt;li&gt;Most commands act only on the current line by default. Notable exceptions are
&lt;code&gt;:write&lt;/code&gt; and &lt;code&gt;:global&lt;/code&gt; which act on all lines.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The usage of ranges is pretty intuitive, so here are some examples (using &lt;code&gt;:d&lt;/code&gt;
as short form of &lt;code&gt;:delete&lt;/code&gt;):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Lines acted on&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current line.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:.d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current line.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:1d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;First line.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:$d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Last line.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:1,$d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;All lines.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:%d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;All lines (syntactic sugar for &lt;code&gt;1,$&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:.,5d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current line to line 5.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,5d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Also current line to line 5.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,+3d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current line and the next 3 lines.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:1,+3d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;First line to current line + 3.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,-3d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current line and the last 3 lines. (Vim will prompt you, since this is a reversed range.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:3,'xdelete&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Lines 3 to the line marked by &lt;a href="#marks"&gt;mark&lt;/a&gt; x.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:/^foo/,$delete&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;From the next line that starts with "foo" to the end.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:/^foo/+1,$delete&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;From the line after the line that starts with "foo" to the end.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note that instead of &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt; can be used as a separator. The difference is that
in the case of &lt;code&gt;from,to&lt;/code&gt;, the &lt;em&gt;to&lt;/em&gt; is relative to the current line, but when
using &lt;code&gt;from;to&lt;/code&gt;, the &lt;em&gt;to&lt;/em&gt; is relative to the address of &lt;em&gt;from&lt;/em&gt;! Assuming you're
on line 5, &lt;code&gt;:1,+1d&lt;/code&gt; would delete lines 1 to 6, whereas &lt;code&gt;:1;+1d&lt;/code&gt; would only
delete lines 1 and 2.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;/&lt;/code&gt; address can be preceded with another address. This allows you to &lt;em&gt;stack&lt;/em&gt;
patterns, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-sr"&gt;/foo//bar//quux/&lt;/span&gt;&lt;span class="pl-c1"&gt;d&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would delete the first line containing "quux" after the first line
containing "bar" after the first line containing "foo" after the current line.&lt;/p&gt;
&lt;p&gt;Sometimes Vim automatically prepends the command-line with a range. E.g. start a
visual line selection with &lt;code&gt;V&lt;/code&gt;, select some lines and type &lt;code&gt;:&lt;/code&gt;. The command-line
will be populated with the range &lt;code&gt;'&amp;lt;,'&amp;gt;&lt;/code&gt;, which means the following command will
use the previously selected lines as a range. (This is also why you sometimes
see mappings like &lt;code&gt;:vnoremap foo :&amp;lt;c-u&amp;gt;command&lt;/code&gt;. Here &lt;code&gt;&amp;lt;c-u&amp;gt;&lt;/code&gt; is used to remove
the range, because Vim will throw an error when giving a range to a command that
doesn't support it.)&lt;/p&gt;
&lt;p&gt;Another example is using &lt;code&gt;!!&lt;/code&gt; in normal mode. This will populate the
command-line with &lt;code&gt;:.!&lt;/code&gt;. If followed by an external program, that program's
output would replace the current line. So you could replace the current
paragraph with the output of ls by using &lt;code&gt;:?^$?+1,/^$/-1!ls&lt;/code&gt;. Fancy!&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h cmdline-ranges
:h 10.3
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-marks" class="anchor" aria-hidden="true" href="#marks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marks&lt;/h2&gt;
&lt;p&gt;You use marks to remember a position, that is line number and column, in a file.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Marks&lt;/th&gt;
&lt;th&gt;Set by..&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;User&lt;/td&gt;
&lt;td&gt;Local to file, thus only valid within one file. Jumping to a lowercase mark, means jumping within the current file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;A&lt;/code&gt; - &lt;code&gt;Z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;User&lt;/td&gt;
&lt;td&gt;Global, thus valid between files. Also called &lt;em&gt;file marks&lt;/em&gt;. Jumping to a file mark may switch to another buffer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;viminfo&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt; is the position when the viminfo file was written last. In practice this means when the last Vim process ended. &lt;code&gt;1&lt;/code&gt; is the position of when the second last Vim process ended and so on.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Put &lt;code&gt;'&lt;/code&gt;/&lt;code&gt;g'&lt;/code&gt; or &lt;code&gt;`&lt;/code&gt;/&lt;code&gt;g`&lt;/code&gt; in front of a mark to form a motion.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;mm&lt;/code&gt; to remember the current position with mark "m". Move around the file
and then jump back via &lt;code&gt;'m&lt;/code&gt; (first non-blank) or &lt;code&gt;`m&lt;/code&gt; (exact column).
Lowercase marks will be remembered after exiting Vim, if you tell your viminfo
file to do so, see &lt;code&gt;:h viminfo-'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;mM&lt;/code&gt; to remember the current position with file mark "M". Switch to another
buffer and switch back via &lt;code&gt;'M&lt;/code&gt; or &lt;code&gt;`M&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other motions include:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Motion&lt;/th&gt;
&lt;th&gt;Jump to..&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'[&lt;/code&gt;, &lt;code&gt;`[&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;First line or character of previously changed or yanked text.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;']&lt;/code&gt;, &lt;code&gt;`]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Last line or character of previously changed or yanked text.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'&amp;lt;&lt;/code&gt;, &lt;code&gt;`&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Beginning line or character of last visual selection.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'&amp;gt;&lt;/code&gt;, &lt;code&gt;`&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Ending line or character of last visual selection.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;''&lt;/code&gt;, &lt;code&gt;``&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Position before the latest jump.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'"&lt;/code&gt;, &lt;code&gt;`"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Position when last exiting the current buffer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'^&lt;/code&gt;, &lt;code&gt;`^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Position where last insertion stopped.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'.&lt;/code&gt;, &lt;code&gt;`.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Position where last change was made.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'(&lt;/code&gt;, &lt;code&gt;`(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Start of current sentence.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;')&lt;/code&gt;, &lt;code&gt;`)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;End of current sentence.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'{&lt;/code&gt;, &lt;code&gt;`{&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Start of current paragraph.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'}&lt;/code&gt;, &lt;code&gt;`}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;End of current paragraph.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Marks can also be used in a &lt;a href="#ranges"&gt;range&lt;/a&gt;. You probably saw this before and
wondered what it means: Select some text in visual mode and do &lt;code&gt;:&lt;/code&gt;, the
command-line will be prepended with &lt;code&gt;:'&amp;lt;,'&amp;gt;&lt;/code&gt;, which means the following command
would get a range that denotes the visual selection.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;:marks&lt;/code&gt; to list all marks. Read everything in &lt;code&gt;:h mark-motions&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-completion" class="anchor" aria-hidden="true" href="#completion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Completion&lt;/h2&gt;
&lt;p&gt;Vim provides many kinds of insert mode completions. If there are multiple
matches, a popup menu will let you navigate to the match of your choice.&lt;/p&gt;
&lt;p&gt;Typical kinds of completion are tags, functions from imported modules or
libraries, file names, dictionary or simply words from the current buffer.&lt;/p&gt;
&lt;p&gt;Vim provides a mapping for each kind of completion and they all start with
&lt;code&gt;&amp;lt;c-x&amp;gt;&lt;/code&gt; (remember to use them in insert mode):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Mapping&lt;/th&gt;
&lt;th&gt;Kind&lt;/th&gt;
&lt;th&gt;Help&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-l&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;whole lines&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^l&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-n&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;keywords from current file&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^n&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-k&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;keywords from &lt;code&gt;'dictionary'&lt;/code&gt; option&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^k&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-t&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;keywords from &lt;code&gt;'thesaurus'&lt;/code&gt; option&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-i&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;keywords from current and included files&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^i&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-]&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;tags&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-f&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;file names&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-d&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;definitions or macros&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^d&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-v&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Vim commands&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^v&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-u&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;user defined (as specified in &lt;code&gt;'completefunc'&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^u&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-o&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;omni completion (as specified in &lt;code&gt;'omnifunc'&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^o&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;spelling suggestions&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^Xs&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;People might be confused about the difference between user defined completion
and omni completion, but technically they do the same thing. They take a
function that inspects the current position and return a list of suggestions.
User defined completion is defined by the user for their own personal purposes.
(Surprise!) It could be anything. Omni completion is meant for filetype-specific
purposes, like completing struct members or class methods, and is often set by
filetype plugins.&lt;/p&gt;
&lt;p&gt;Vim also allows for completing multiple kinds at once by setting the
&lt;code&gt;'complete'&lt;/code&gt; option. By default that option includes quite a lot, so be sure to
trim it to your taste. You can trigger this completion by using either &lt;code&gt;&amp;lt;c-n&amp;gt;&lt;/code&gt;
(next) and &lt;code&gt;&amp;lt;c-p&amp;gt;&lt;/code&gt; (previous), which also happen to be the keys used for
choosing entries in the popup menu. See &lt;code&gt;:h i^n&lt;/code&gt; and &lt;code&gt;:h 'complete'&lt;/code&gt; for more on
this.&lt;/p&gt;
&lt;p&gt;Be sure to check out &lt;code&gt;:h 'completeopt'&lt;/code&gt; for configuring the behaviour of the
popup menu. The default is quite sane, but I prefer adding "noselect" as well.&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h ins-completion
:h popupmenu-keys
:h new-omni-completion
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-motions-operators-text-objects" class="anchor" aria-hidden="true" href="#motions-operators-text-objects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motions, operators, text objects&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Motions&lt;/strong&gt; move the cursor. You all know &lt;code&gt;h&lt;/code&gt;/&lt;code&gt;j&lt;/code&gt;/&lt;code&gt;k&lt;/code&gt;/&lt;code&gt;l&lt;/code&gt;. Or &lt;code&gt;w&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. Even
&lt;code&gt;/&lt;/code&gt; is a motion. They also take a count. &lt;code&gt;2?the&amp;lt;cr&amp;gt;&lt;/code&gt; jumps to the second last
occurrence of "the".&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:h navigation&lt;/code&gt; and everything below for all available motions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Operators&lt;/strong&gt; act on a region of text, e.g. &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;gU&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; to name just a
few. They get used in two contexts, either in normal or visual mode. In normal
mode, operators come first followed by a motion, e.g. &lt;code&gt;&amp;gt;j&lt;/code&gt;. In visual mode,
operators simply act on the selection, e.g. &lt;code&gt;Vjd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Like motions, operators take a count, e.g. &lt;code&gt;2gUw&lt;/code&gt; makes the rest of the current
word and the next one uppercase. Since motions and operators take counts,
&lt;code&gt;2gU2w&lt;/code&gt; works just as well and executes &lt;code&gt;gU2w&lt;/code&gt; twice.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:h operator&lt;/code&gt; for all available operators. Use &lt;code&gt;:set tildeop&lt;/code&gt; to make &lt;code&gt;~&lt;/code&gt;
act as an operator.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Text objects&lt;/strong&gt; act on the surrounding area, opposed to motions that act into
one direction. Actually they work on objects, e.g. a whole word, a whole
sentence, everything between parentheses, and so on.&lt;/p&gt;
&lt;p&gt;Text objects can't be used to move the cursor in normal mode, because even the
most-skilled cursors can't jump into two directions at the same time. It works
in visual mode though, because then one side of the object is already selected
and the cursor simply jumps to the other side.&lt;/p&gt;
&lt;p&gt;Text objects start with either &lt;code&gt;i&lt;/code&gt; (think &lt;em&gt;inner&lt;/em&gt;) or &lt;code&gt;a&lt;/code&gt; (think &lt;em&gt;around&lt;/em&gt;)
followed by a character denoting the object. With &lt;code&gt;i&lt;/code&gt; it only acts on the object
itself, with &lt;code&gt;a&lt;/code&gt; on the object plus trailing whitespace. E.g. &lt;code&gt;diw&lt;/code&gt; deletes the
current word and &lt;code&gt;ci(&lt;/code&gt; changes everything between parentheses.&lt;/p&gt;
&lt;p&gt;Text objects take a count. Imagine &lt;code&gt;((( )))&lt;/code&gt; and the cursor on or between the
most inner parentheses, then &lt;code&gt;d2a(&lt;/code&gt; will remove the 2 inner pairs of parentheses
and everything in between.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:h text-objects&lt;/code&gt; for all available text objects.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-autocmds" class="anchor" aria-hidden="true" href="#autocmds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Autocmds&lt;/h2&gt;
&lt;p&gt;You can trigger an action after many events in Vim, such as a buffer being
saved or Vim having started up, by so-called &lt;em&gt;autocmds&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Vim relies extensively on autocmds. Don't believe me? Check &lt;code&gt;:au&lt;/code&gt;, but don't let
the output overwhelm you. These are all the autocmds that are in effect right
now!&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:h {event}&lt;/code&gt; for a quick overview of all available events and &lt;code&gt;:h autocmd-events-abc&lt;/code&gt; for more details.&lt;/p&gt;
&lt;p&gt;A typical example would be filetype-specific settings:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;FileType&lt;/span&gt; &lt;span class="pl-c1"&gt;ruby&lt;/span&gt; &lt;span class="pl-c1"&gt;setlocal&lt;/span&gt; &lt;span class="pl-c1"&gt;shiftwidth&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;softtabstop&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;comments&lt;/span&gt;&lt;span class="pl-k"&gt;-=&lt;/span&gt;:#&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But how does a buffer even know that it contains Ruby code? Because another
autocmd detected it as that and set the filetype accordingly which again
triggered the &lt;code&gt;FileType&lt;/code&gt; event.&lt;/p&gt;
&lt;p&gt;One of the first things everyone adds to their vimrc is &lt;code&gt;filetype on&lt;/code&gt;. This
simply means that &lt;code&gt;filetype.vim&lt;/code&gt; is read at startup which sets autocmds for
almost all filetypes under the sun.&lt;/p&gt;
&lt;p&gt;If you're brave enough, have a look at it: &lt;code&gt;:e $VIMRUNTIME/filetype.vim&lt;/code&gt;. Search
for "Ruby" and you'll find that Vim simply uses the file extension &lt;code&gt;.rb&lt;/code&gt; to
detect Ruby files:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Autocmds of the same event are executed in the order they were
created. &lt;code&gt;:au&lt;/code&gt; shows them in the correct order.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;au&lt;/span&gt; &lt;span class="pl-c1"&gt;BufNewFile&lt;/span&gt;,&lt;span class="pl-c1"&gt;BufRead&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.rb,&lt;span class="pl-k"&gt;*&lt;/span&gt;.rbw  &lt;span class="pl-c1"&gt;setf&lt;/span&gt; &lt;span class="pl-c1"&gt;ruby&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;BufNewFile&lt;/code&gt; and &lt;code&gt;BufRead&lt;/code&gt; events in this case are hardcoded in the C
sources of Vim and get emitted everytime you open a file via &lt;code&gt;:e&lt;/code&gt; and similar
commands. Afterwards all the hundreds of filetypes from &lt;code&gt;filetype.vim&lt;/code&gt; are
tested for.&lt;/p&gt;
&lt;p&gt;Putting it in a nutshell, Vim makes heavy use of events and autocmds but also
exposes a clean interface to hook into that event-driven system for
customization.&lt;/p&gt;
&lt;p&gt;Help: &lt;code&gt;:h autocommand&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelist-jumplist" class="anchor" aria-hidden="true" href="#changelist-jumplist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelist, jumplist&lt;/h2&gt;
&lt;p&gt;The positions of the last 100 changes are kept in the &lt;strong&gt;changelist&lt;/strong&gt;. Several
small changes on the same line will be merged together, but the position will be
that of the last change nevertheless (in case you added something in the middle
of the line).&lt;/p&gt;
&lt;p&gt;Every time you jump, the position &lt;em&gt;before&lt;/em&gt; the jump is remembered in the
&lt;strong&gt;jumplist&lt;/strong&gt;. A jumplist has up to 100 entries. Each window has its own
jumplist. When you split a window, the jumplist is copied.&lt;/p&gt;
&lt;p&gt;A jump is one of the following commands: &lt;code&gt;'&lt;/code&gt;, &lt;code&gt;`&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;N&lt;/code&gt;,
&lt;code&gt;%&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;[[&lt;/code&gt;, &lt;code&gt;]]&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;, &lt;code&gt;:s&lt;/code&gt;, &lt;code&gt;:tag&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt;, &lt;code&gt;H&lt;/code&gt; and commands
that start editing a new file.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;List&lt;/th&gt;
&lt;th&gt;List all entries&lt;/th&gt;
&lt;th&gt;Go to older position&lt;/th&gt;
&lt;th&gt;Go to newer position&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;jumplist&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:jumps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[count]&amp;lt;c-o&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[count]&amp;lt;c-i&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;changelist&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:changes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[count]g;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[count]g,&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;When you list all entries, a marker &lt;code&gt;&amp;gt;&lt;/code&gt; will be used to show the current
position. Usually that will be below position 1, the latest position.&lt;/p&gt;
&lt;p&gt;If you want both lists to persist after restarting Vim, you need to use the
viminfo file and &lt;code&gt;:h viminfo-'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The position before the latest jump is also kept as a &lt;a href="#marks"&gt;mark&lt;/a&gt;
and can be jumped to via &lt;code&gt;``&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h changelist
:h jumplist
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-undo-tree" class="anchor" aria-hidden="true" href="#undo-tree"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Undo tree&lt;/h2&gt;
&lt;p&gt;The latest changes to the text state are remembered. You can use &lt;em&gt;undo&lt;/em&gt; to
revert changes and &lt;em&gt;redo&lt;/em&gt; to reapply previously reverted changes.&lt;/p&gt;
&lt;p&gt;The important bit to understand it that the data structure holding recent
changes is not a
&lt;a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)" rel="nofollow"&gt;queue&lt;/a&gt; but a
&lt;a href="https://en.wikipedia.org/wiki/Tree_(data_structure)" rel="nofollow"&gt;tree&lt;/a&gt;! Your changes are
nodes in the tree and each (but the top node) has a parent node. Each node keeps
information about the changed text and time. A branch is a series of nodes that
starts from any node and goes up to the top node. New branches get created when
you undo a change and then insert something else.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ifoo&amp;lt;esc&amp;gt;
obar&amp;lt;esc&amp;gt;
obaz&amp;lt;esc&amp;gt;
u
oquux&amp;lt;esc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you have 3 lines and the undo tree looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;     foo(1)
       /
    bar(2)
   /      \
baz(3)   quux(4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The undo tree has 4 changes. The numbers represent the &lt;em&gt;time&lt;/em&gt; the nodes were
created.&lt;/p&gt;
&lt;p&gt;Now there are two ways to traverse this tree, let's call them &lt;em&gt;branch-wise&lt;/em&gt; and
&lt;em&gt;time-wise&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Undo (&lt;code&gt;u&lt;/code&gt;) and redo (&lt;code&gt;&amp;lt;c-r&amp;gt;&lt;/code&gt;) work branch-wise. They go up and down the current
branch. &lt;code&gt;u&lt;/code&gt; will revert the text state to the one of node "bar". Another &lt;code&gt;u&lt;/code&gt;
will revert the text state even further, to the one of node "foo". Now &lt;code&gt;&amp;lt;c-r&amp;gt;&lt;/code&gt;
goes back to the state of node "bar" and another &lt;code&gt;&amp;lt;c-r&amp;gt;&lt;/code&gt; to the state of node
"quux". (There's no way to reach node "baz" using branch-wise commands anymore.)&lt;/p&gt;
&lt;p&gt;Opposed to this, &lt;code&gt;g-&lt;/code&gt; and &lt;code&gt;g+&lt;/code&gt; work time-wise. Thus, &lt;code&gt;g-&lt;/code&gt; won't revert to the
state of node "bar", like &lt;code&gt;u&lt;/code&gt; does, but to the chronologically previous state,
node "baz". Another &lt;code&gt;g-&lt;/code&gt; would revert the state to the one of node "bar" and so
on. Thus, &lt;code&gt;g-&lt;/code&gt; and &lt;code&gt;g+&lt;/code&gt; simply go back and forth in time, respectively.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command / Mapping&lt;/th&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[count]u&lt;/code&gt;, &lt;code&gt;:undo [count]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Undo [count] changes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[count]&amp;lt;c-r&amp;gt;&lt;/code&gt;, &lt;code&gt;:redo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Redo [count] changes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;U&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Undo all changes to the line of the latest change.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[count]g-&lt;/code&gt;, &lt;code&gt;:earlier [count]?&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Go to older text state [count] times. The "?" can be either "s", "m", "h", "d", or "f". E.g. &lt;code&gt;:earlier 2d&lt;/code&gt; goes to the text state from 2 days ago. &lt;code&gt;:earlier 1f&lt;/code&gt; will go to the state of the latest file save.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[count]g+&lt;/code&gt;, &lt;code&gt;:later [count]?&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Same as above, but other direction.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The undo tree is kept in memory and will be lost when Vim quits. See &lt;a href="#undo-files"&gt;Undo
files&lt;/a&gt; for how to enable persistent undo.&lt;/p&gt;
&lt;p&gt;If you're confused by the undo tree,
&lt;a href="https://github.com/mbbill/undotree"&gt;undotree&lt;/a&gt; does a great job at visualizing
it.&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h undo.txt
:h usr_32
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-quickfix-and-location-lists" class="anchor" aria-hidden="true" href="#quickfix-and-location-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickfix and location lists&lt;/h2&gt;
&lt;p&gt;The quickfix list is a data structure that holds file positions. Essentially,
each entry in the quickfix list consists of a file path, a line number and
optional column, and a description.&lt;/p&gt;
&lt;p&gt;Typical use cases are assembling compiler errors or results of a grep tool.&lt;/p&gt;
&lt;p&gt;Vim has a special type of buffer for showing the quickfix list: the quickfix
buffer. Each line in the quickfix buffer shows one entry from the quickfix list.&lt;/p&gt;
&lt;p&gt;Usually you open a new window to display the quickfix list: the quickfix window.
When that happens, the last window gets associated with the quickfix window.&lt;/p&gt;
&lt;p&gt;In the quickfix buffer &lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt; opens the selected entry in the associated window
and &lt;code&gt;&amp;lt;c-w&amp;gt;&amp;lt;cr&amp;gt;&lt;/code&gt; in a new window.&lt;/p&gt;
&lt;p&gt;The quickfix list was named after the "quick fix" feature from the &lt;a href="https://en.wikipedia.org/wiki/Aztec_C" rel="nofollow"&gt;Aztec C
compiler&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Actually there are two kinds of lists: quickfix and location lists. They behave
almost the same, but have the follwing differences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There is only one quickfix list. There can be multiple location lists; one per
window.&lt;/li&gt;
&lt;li&gt;They use slightly different commands for navigation.&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;th&gt;Quickfix&lt;/th&gt;
&lt;th&gt;Location&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;open window&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:copen&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lopen&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;close window&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:cclose&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lclose&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;next entry&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:cnext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lnext&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;previous entry&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:cprevious&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lprevious&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;first entry&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:cfirst&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lfirst&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;last entry&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:clast&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:llast&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Mind that the quickfix and location windows don't need to be open for these
commands to work.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:h quickfix&lt;/code&gt; for more information and a full list of commands.&lt;/p&gt;
&lt;p&gt;For conciseness, &lt;em&gt;quickfix&lt;/em&gt; and &lt;em&gt;location&lt;/em&gt; are often abbreviated as &lt;em&gt;qf&lt;/em&gt; and
&lt;em&gt;loc&lt;/em&gt; respectively.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Let us use our good old friend &lt;code&gt;grep&lt;/code&gt; for searching the files in the current
directory recursively for a certain query and put the results in the quickfix
list.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;grepprg&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;grep -Rn $* .&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
:&lt;span class="pl-c1"&gt;grep&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; foo
&lt;span class="pl-c1"&gt;&amp;lt;grep output - hit enter&amp;gt;&lt;/span&gt;
:&lt;span class="pl-c1"&gt;copen&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming any files contained the string "foo", it should be shown now in the
quickfix window.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-macros" class="anchor" aria-hidden="true" href="#macros"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Macros&lt;/h2&gt;
&lt;p&gt;Vim allows &lt;em&gt;recording&lt;/em&gt; typed characters into a &lt;a href="#registers"&gt;register&lt;/a&gt;. It's a
great way to automate certain tasks on the fly. (For more elaborate tasks, Vim
scripting should be used instead.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start recording by typing &lt;code&gt;q&lt;/code&gt; followed by the register, e.g. &lt;code&gt;q&lt;/code&gt;. (The
command-line will signify this via "recording @q".)&lt;/li&gt;
&lt;li&gt;Stop recording by hitting &lt;code&gt;q&lt;/code&gt; once again.&lt;/li&gt;
&lt;li&gt;Execute the macro via &lt;code&gt;[count]@q&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Repeat the last used macro via &lt;code&gt;[count]@@&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Insert a line and repeat it 10 times:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;qq
iabc&amp;lt;cr&amp;gt;&amp;lt;esc&amp;gt;
q
10@q
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(The same could be done without macros: &lt;code&gt;oabc&amp;lt;esc&amp;gt;10.&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For adding line numbers in front of all lines, start on the first line and add
"1. " to it manually. Increment the number under the cursor by using &lt;code&gt;&amp;lt;c-a&amp;gt;&lt;/code&gt;,
displayed as &lt;code&gt;^A&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;qq
0yf jP0^A
q
1000@q
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we simply hope that the file doesn't contain more than 1000 lines when
using &lt;code&gt;1000@q&lt;/code&gt;, but we can also use a &lt;em&gt;recursive macro&lt;/em&gt;, which executes until
the macro can't be applied to a line anymore:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;qq
0yf jP0^A@q
q
@q
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(The same could be done without macros: &lt;code&gt;:%s/^/\=line('.') . '. '&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;Mind that I also show how to achieve the same without using macros, but this
mostly works only for such simple examples. For more complex automation, macros
are the bomb!&lt;/p&gt;
&lt;p&gt;Also see: &lt;a href="#quickly-edit-your-macros"&gt;Quickly edit your macros&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h recording
:h 'lazyredraw'
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-colorschemes" class="anchor" aria-hidden="true" href="#colorschemes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Colorschemes&lt;/h2&gt;
&lt;p&gt;Colorschemes are the way to style your Vim. Vim consists of many components and
each of those can be customized with different colors for the foreground,
background and a few other attributes like bold text etc. They can be set like
this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;Normal&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; guibg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;red&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would paint the background of the editor red. See &lt;code&gt;:h :highlight&lt;/code&gt; for more
information.&lt;/p&gt;
&lt;p&gt;So, colorschemes are mostly collections of &lt;code&gt;:highlight&lt;/code&gt; commands.&lt;/p&gt;
&lt;p&gt;Actually, most colorschemes are really 2 colorschemes! The example above sets
colors via &lt;code&gt;ctermbg&lt;/code&gt; and &lt;code&gt;guibg&lt;/code&gt;. The former definition (&lt;code&gt;cterm*&lt;/code&gt;) will only be
used if Vim was started in a terminal emulator, e.g. xterm. The latter (&lt;code&gt;gui*&lt;/code&gt;)
will be used in graphical environments like gvim or MacVim.&lt;/p&gt;
&lt;p&gt;If you ever happen to use a colorscheme in terminal Vim and the colors don't
look like the ones in the screenshot at all, chances are that the colorscheme
only defines colors for the GUI. Conversely, if you use a graphical Vim (e.g.
gvim or MacVim) and the colors look off, the colorscheme might only define
colors for the terminal.&lt;/p&gt;
&lt;p&gt;The latter case can be "solved" by enabling true colors in Neovim or Vim
7.4.1830 and newer. This makes terminal Vim use the GUI definitions instead, but
also requires the terminal emulator itself and all software in between (e.g.
tmux) to be capable of handling true colors. (&lt;a href="https://gist.github.com/XVilka/8346728"&gt;This
gist&lt;/a&gt; gives a good overview about the
topic.)&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:h 'termguicolors'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="PLUGINS.md#colorschemes-1"&gt;List of colorschemes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cosmetic-changes-to-colorschemes"&gt;Cosmetic changes to colorschemes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-folding" class="anchor" aria-hidden="true" href="#folding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Folding&lt;/h2&gt;
&lt;p&gt;Every text (or source code) has a certain structure. If you have a structure, it
means you have regions of logically separated text. Folding allows to "fold"
such a region into a single line and displaying a short description. There are
many commands that act on these regions called &lt;em&gt;folds&lt;/em&gt;. Folds can be nested.&lt;/p&gt;
&lt;p&gt;Vim distinguishes between several types of fold methods:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;'foldmethod'&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;diff&lt;/td&gt;
&lt;td&gt;Used in diff windows to fold unchanged text.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;expr&lt;/td&gt;
&lt;td&gt;Uses &lt;code&gt;'foldexpr'&lt;/code&gt; to basically create a new fold method.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;indent&lt;/td&gt;
&lt;td&gt;Folds based on indentation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;manual&lt;/td&gt;
&lt;td&gt;Create folds yourself via &lt;code&gt;zf&lt;/code&gt;, &lt;code&gt;zF&lt;/code&gt;, and &lt;code&gt;:fold&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;marker&lt;/td&gt;
&lt;td&gt;Folds based on markers in the text (often in comments).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;syntax&lt;/td&gt;
&lt;td&gt;Folds based on syntax, e.g. folding &lt;code&gt;if&lt;/code&gt; blocks.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Folding can be computationally intensive! If you experience any
performance drawbacks (small delays when typing), have a look at
&lt;a href="https://github.com/Konfekt/FastFold"&gt;FastFold&lt;/a&gt;, which prevents Vim from
updating folds when it's not needed.&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h usr_28
:h folds
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-sessions" class="anchor" aria-hidden="true" href="#sessions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sessions&lt;/h2&gt;
&lt;p&gt;If you save a &lt;strong&gt;view&lt;/strong&gt; (&lt;code&gt;:h :mkview&lt;/code&gt;), the current state of the window (and
options and mappings) gets saved for later use (&lt;code&gt;:h :loadview&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;session&lt;/strong&gt; saves the views of all windows plus global settings. It basically
makes a snapshot of your current Vim instance and saves it in a session file.
Let me stress this: it saves the current state; everything done after saving a
session won't be part of the session file. To "update" a session, simply write
it out again.&lt;/p&gt;
&lt;p&gt;This makes it perfect for saving your &lt;em&gt;projects&lt;/em&gt; and easy to switch between
them.&lt;/p&gt;
&lt;p&gt;Try it right now! Open a few windows and tabs and do &lt;code&gt;:mksession Foo.vim&lt;/code&gt;. If
you omit the filename, &lt;code&gt;Session.vim&lt;/code&gt; will be assumed. The file will be saved to
the current working directory, check &lt;code&gt;:pwd&lt;/code&gt;. Restart Vim and do &lt;code&gt;:source Foo.vim&lt;/code&gt; and voilà, the buffer list, window layout, mappings, working directory
etc. should all be the same as before you saved the session. Do some more work
and update the session by overwriting the already existing session file with
&lt;code&gt;:mksession! Foo.vim&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that a session file is really just a collection of Vim commands that are
supposed to restore a certain state of a Vim instance, so feel free to take a
look at it: &lt;code&gt;:vs Foo.vim&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can tell Vim what things to save in a session by setting &lt;code&gt;'sessionoptions'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For scripting purposes Vim keeps the name of the last sourced or written session
in the internal variable &lt;code&gt;v:this_session&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h Session
:h 'sessionoptions'
:h v:this_session
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-locality" class="anchor" aria-hidden="true" href="#locality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Locality&lt;/h2&gt;
&lt;p&gt;Many of the concepts mentioned above also have &lt;em&gt;local&lt;/em&gt; counterparts:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Global&lt;/th&gt;
&lt;th&gt;Local&lt;/th&gt;
&lt;th&gt;Scope&lt;/th&gt;
&lt;th&gt;Help&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:setlocal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;buffer or window&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h local-options&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:map&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:map &amp;lt;buffer&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;buffer&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h :map-local&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:autocmd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:autocmd * &amp;lt;buffer&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;buffer&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h autocmd-buflocal&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lcd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;window&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h :lcd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;localleader&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;buffer&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h maplocalleader&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://vimhelp.appspot.com/usr_41.txt.html#41.2" rel="nofollow"&gt;Variables also have different scopes&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-usage-1" class="anchor" aria-hidden="true" href="#usage-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help-offline" class="anchor" aria-hidden="true" href="#getting-help-offline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting help offline&lt;/h2&gt;
&lt;p&gt;Vim comes with great documentation in the form of single text files with a
special layout. Vim uses a system based on tags for accessing certain parts of
those help files.&lt;/p&gt;
&lt;p&gt;First of all, read this: &lt;code&gt;:help :help&lt;/code&gt;. This will open the file
&lt;code&gt;$VIMRUNTIME/doc/helphelp.txt&lt;/code&gt; in a new window and jump to the &lt;code&gt;:help&lt;/code&gt; tag
within that file.&lt;/p&gt;
&lt;p&gt;A few simple rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;options are enclosed in single quotes, e.g. &lt;code&gt;:h 'textwidth'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;VimL functions end in &lt;code&gt;()&lt;/code&gt;, e.g. &lt;code&gt;:h reverse()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;commands start with &lt;code&gt;:&lt;/code&gt;, e.g. &lt;code&gt;:h :echo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can use &lt;code&gt;&amp;lt;c-d&amp;gt;&lt;/code&gt; (this is &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;d&lt;/kbd&gt;) to list all tags that
match the currently entered query. E.g. &lt;code&gt;:h tab&amp;lt;c-d&amp;gt;&lt;/code&gt; will get you a list of all
tags from &lt;code&gt;tab&lt;/code&gt; over &lt;code&gt;'softtabstop'&lt;/code&gt; to &lt;code&gt;setting-guitablabel&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You want to list all VimL functions? Simple: &lt;code&gt;:h ()&amp;lt;c-d&amp;gt;&lt;/code&gt;. You want to list all
VimL functions that concern windows? &lt;code&gt;:h win*()&amp;lt;c-d&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This quickly becomes second nature, but especially in the beginning, you
sometimes don't know any part of the tag you are looking for. You can only
imagine some keywords that could be involved. &lt;code&gt;:helpgrep&lt;/code&gt; to the rescue!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:helpgrep backwards
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will look for "backwards" in all documentation files and jump to the first
match. The matches will be assembled in the quickfix list. Use &lt;code&gt;:cn&lt;/code&gt;/&lt;code&gt;:cp&lt;/code&gt; to
jump to the next/previous match. Or use &lt;code&gt;:copen&lt;/code&gt; to open the quickfix window,
navigate to an entry and hit &lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt; to jump to that match. See &lt;code&gt;:h quickfix&lt;/code&gt; for
the whole truth.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help-offline-alternative" class="anchor" aria-hidden="true" href="#getting-help-offline-alternative"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting help offline (alternative)&lt;/h2&gt;
&lt;p&gt;This list was compiled by @chrisbra, one of the most active Vim developers, and
posted to &lt;a href="https://groups.google.com/forum/#!forum/vim_dev" rel="nofollow"&gt;vim_dev&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's reposted here with minor changes.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;If you know what you are looking for, it is usually easier to search for it
using the help system, because the subjects follow a certain style guide.&lt;/p&gt;
&lt;p&gt;Also, the help has the advantage of belonging to your particular Vim version, so
that obsolete topics or topics that have been added later won't turn up.&lt;/p&gt;
&lt;p&gt;Therefore, it is essential to learn the help system and the language it uses.
Here are some examples (not necessarily complete and I might have forgotten
something).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Options are enclosed in single quotes. So you would use &lt;code&gt;:h 'list'&lt;/code&gt; to go to
the help topic for the list option. If you only know, you are looking for a
certain option, you can also do &lt;code&gt;:h options.txt&lt;/code&gt; to open the help page which
describes all option handling and then you can search using regular
expressions e.g. &lt;code&gt;/width&lt;/code&gt;. Certain options have their own namespace, e.g. &lt;code&gt;:h cpo-a&lt;/code&gt;, &lt;code&gt;:h cpo-A&lt;/code&gt;, &lt;code&gt;:h cpo-b&lt;/code&gt;, and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Normal mode commands are just that. Use &lt;code&gt;:h gt&lt;/code&gt; to go to the help page for
the "gt" command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Regexp items always start with "/", so &lt;code&gt;:h /\+&lt;/code&gt; takes you to the help item
for the "+" quantifier in Vim regexes. If you need to know anything about
regular expressions, start reading at &lt;code&gt;:h pattern.txt&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Key combinations. They usually start with a single letter indicating the mode
for which they can be used. E.g. &lt;code&gt;:h i_CTRL-X&lt;/code&gt; takes you to the family of
CTRL-X commands for insert mode which can be used to auto complete different
things. Note that certain keys will always be written the same, e.g. Control
will always be CTRL. Note, for normal mode commands, the "n" is left away,
e.g. &lt;code&gt;:h CTRL-A&lt;/code&gt;. In contrast, &lt;code&gt;:h c_CTRL-R&lt;/code&gt; will describe what CTRL-R does
when entering commands in the command line and &lt;code&gt;:h v_Ctrl-A&lt;/code&gt; talks about
incrementing numbers in visual mode and &lt;code&gt;:h g_CTRL-A&lt;/code&gt; talks about the g
command (thus you have to press "g" then ). Here the "g" stand for
the normal command "g" which always expect a second key before doing
something similar to the commands starting with "z".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Registers always start with "quote" so use &lt;code&gt;:h quote&lt;/code&gt; to find out about the
special ":" register.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vim script (VimL) is available at &lt;code&gt;:h eval.txt&lt;/code&gt;. Certain aspects of the
language are available at &lt;code&gt;:h expr-X&lt;/code&gt; where 'X' is a single letter, e.g. &lt;code&gt;:h expr-!&lt;/code&gt; will take you to the topic describing the '!' (Not) operator for
VimL. Also important, see &lt;code&gt;:h function-list&lt;/code&gt; to find a short description of
all functions available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mappings are talked about in the help page &lt;code&gt;:h map.txt&lt;/code&gt;. Use &lt;code&gt;:h mapmode-i&lt;/code&gt;
to find out about the &lt;code&gt;:imap&lt;/code&gt; command. Also use &lt;code&gt;:map-topic&lt;/code&gt; to find out
about certain subtopics particular for mappings (e.g. &lt;code&gt;:h :map-local&lt;/code&gt; for
buffer-local mappings or &lt;code&gt;:h map_bar&lt;/code&gt; for how the '|' is handled in mappings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Command definitions are talked about at &lt;code&gt;:h command-*&lt;/code&gt;, so use :h command-bar
to find out about the '!' argument for custom commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Window management commands always start with CTRL-W, so you find the
corresponding help at &lt;code&gt;:h CTRL-W_*&lt;/code&gt; (e.g. &lt;code&gt;:h CTRL-W_p&lt;/code&gt; for switch to the
previously accessed window). You can also access &lt;code&gt;:h windows.txt&lt;/code&gt; and read
your way through, if you are looking for window handling command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ex commands always start with ":", so &lt;code&gt;:h :s&lt;/code&gt; covers the ":s" command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use CTRL-D after typing a topic and let Vim try to complete to all available
topics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;:helpgrep&lt;/code&gt; to search in all help pages (usually also includes help
pages by installed plugins). See &lt;code&gt;:h :helpgrep&lt;/code&gt; for how to use it. Once you
have searched for a topic, all matches are available in the quickfix (or
location) window which can be opened with &lt;code&gt;:copen&lt;/code&gt; or &lt;code&gt;:lopen&lt;/code&gt;. There you
can also use &lt;code&gt;/&lt;/code&gt; to further filter the matches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:h helphelp&lt;/code&gt; contains some information on how to use the help.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The user manual. This describes help topics for beginners in a rather
friendly way. Start at &lt;code&gt;:h usr_toc.txt&lt;/code&gt; to find the table of content (as you
might have guessed). Skimming over that help to find certain topics, .e.g
you will find an entry "Digraphs" and "Entering special characters" in
chapter 24 (so use &lt;code&gt;:h usr_24.txt&lt;/code&gt; to go to that particular help page).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Highlighting groups always start with &lt;code&gt;hl-*&lt;/code&gt;. E.g. &lt;code&gt;:h hl-WarningMsg&lt;/code&gt; talks
about the "WarningMsg" highlighting group.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Syntax highlighting is namespaced to ":syn-topic", e.g. &lt;code&gt;:h :syn-conceal&lt;/code&gt;
talks about the conceal argument for the :syn command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quickfix commands usually start with ":c", while location list commands
usually start with ":l".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:h BufWinLeave&lt;/code&gt; talks about the BufWinLeave autocmd. Also, &lt;code&gt;:h autocommands-events&lt;/code&gt; talks about all possible events.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Startup arguments always start with "-", so &lt;code&gt;:h -f&lt;/code&gt; takes you to the help of
the "-f" command switch of Vim.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compiled extra features always start with "+", so &lt;code&gt;:h +conceal&lt;/code&gt; talks about
the conceal support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Error codes can be looked up directly in the help. &lt;code&gt;:h E297&lt;/code&gt; takes you
exactly to the description of the error message. Sometimes however, those
error codes are not described, but rather are listed at the Vim command that
usually causes this. E.g. &lt;code&gt;:h hE128&lt;/code&gt; takes you directly to the &lt;code&gt;:function&lt;/code&gt;
command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation for included syntax files is usually available at &lt;code&gt;:h ft-*-syntax&lt;/code&gt;. E.g. &lt;code&gt;:h ft-c-syntax&lt;/code&gt; talks about the C syntax file and the
options it provides. Sometimes, additional sections for omni completion (&lt;code&gt;:h ft-php-omni&lt;/code&gt;) or filetype plugins (&lt;code&gt;:h ft-tex-plugin&lt;/code&gt;) are available.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Also, a link to the user documentation (which describes certain commands more
from a user perspective and less detailed) will be mentioned at the top of help
pages if they are available. So &lt;code&gt;:h pattern.txt&lt;/code&gt; mentions the user guide topics
&lt;code&gt;:h 03.9&lt;/code&gt; and &lt;code&gt;:h usr_27&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help-online" class="anchor" aria-hidden="true" href="#getting-help-online"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting help online&lt;/h2&gt;
&lt;p&gt;If you have an issue you can't resolve or are in need of general guidance, see
the &lt;a href="https://groups.google.com/forum/#!forum/vim_use" rel="nofollow"&gt;vim_use&lt;/a&gt; mailing list.
Another great resource is using
&lt;a href="https://de.wikipedia.org/wiki/Internet_Relay_Chat" rel="nofollow"&gt;IRC&lt;/a&gt;. The channel &lt;code&gt;#vim&lt;/code&gt; on
&lt;a href="https://freenode.net" rel="nofollow"&gt;Freenode&lt;/a&gt; is huge and usually full of helpful people.&lt;/p&gt;
&lt;p&gt;If you want to report a Vim bug, use the
&lt;a href="https://groups.google.com/forum/#!forum/vim_dev" rel="nofollow"&gt;vim_dev&lt;/a&gt; mailing list.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-autocmds-in-practice" class="anchor" aria-hidden="true" href="#autocmds-in-practice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Autocmds in practice&lt;/h2&gt;
&lt;p&gt;You can trigger any event right now: &lt;code&gt;:doautocmd BufRead&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-user-events" class="anchor" aria-hidden="true" href="#user-events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User events&lt;/h3&gt;
&lt;p&gt;Especially for plugins it's useful to create your own "User" events:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;Chibby&lt;/span&gt;()
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; A lot of stuff is happening here.&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; And at last..&lt;/span&gt;
  doautocmd &lt;span class="pl-c1"&gt;User&lt;/span&gt; ChibbyExit
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now users of your plugin can execute anything when Chibby finishes running:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; ChibbyExit &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;ChibbyCleanup&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By the way, if there's no "catching" :autocmd, :doautocmd will output a pesky
"No matching autocommands" message. That's why many plugins use &lt;code&gt;silent doautocmd ...&lt;/code&gt; instead. But this has the disadvantage, that you can't simply use
&lt;code&gt;echo "foo"&lt;/code&gt; in the :autocmd, you have to use &lt;code&gt;unsilent echo "foo"&lt;/code&gt; instead..&lt;/p&gt;
&lt;p&gt;That's why it's better to check if there even is a receiving autocmd and not
bothering emitting the event otherwise:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#User#ChibbyExit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  doautocmd &lt;span class="pl-c1"&gt;User&lt;/span&gt; ChibbyExit
&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Help: &lt;code&gt;:h User&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-nested-autocmds" class="anchor" aria-hidden="true" href="#nested-autocmds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nested autocmds&lt;/h3&gt;
&lt;p&gt;By default, autocmds do not nest! If an autocmd executes a command, which in
turn would usually trigger another event, it won't happen.&lt;/p&gt;
&lt;p&gt;Let's say every time you start Vim, you want to automatically open your vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;VimEnter&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;edit&lt;/span&gt; &lt;span class="pl-c1"&gt;$MYVIMRC&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you now start Vim, it will open your vimrc, but the first thing you'll
notice is that there won't be any highlighting although usually there would be.&lt;/p&gt;
&lt;p&gt;The problem is that &lt;code&gt;:edit&lt;/code&gt; in your non-nested autocmd won't trigger the
"BufRead" event, so the filetype never gets set to "vim" and
&lt;code&gt;$VIMRUNTIME/syntax/vim.vim&lt;/code&gt; never sourced. See &lt;code&gt;:au BufRead *.vim&lt;/code&gt;. Use this
instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;VimEnter&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; nested &lt;span class="pl-c1"&gt;edit&lt;/span&gt; &lt;span class="pl-c1"&gt;$MYVIMRC&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Help: &lt;code&gt;:h autocmd-nested&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-clipboard" class="anchor" aria-hidden="true" href="#clipboard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clipboard&lt;/h2&gt;
&lt;p&gt;Required &lt;a href="#what-kind-of-vim-am-i-running"&gt;features&lt;/a&gt;: &lt;code&gt;+clipboard&lt;/code&gt; and optionally
&lt;code&gt;+xterm_clipboard&lt;/code&gt; if you want to use the &lt;code&gt;'clipboard'&lt;/code&gt; option on a Unix system
with a Vim that doesn't have GUI support.&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h 'clipboard'
:h gui-clipboard
:h gui-selections
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also see: &lt;a href="#bracketed-paste-or-why-do-i-have-to-set-paste-all-the-time"&gt;Bracketed paste (or why do I have to set 'paste' all the
time?)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-clipboard-usage-windows-macos" class="anchor" aria-hidden="true" href="#clipboard-usage-windows-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clipboard usage (Windows, macOS)&lt;/h3&gt;
&lt;p&gt;Windows comes with a
&lt;a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms649012(v=vs.85).aspx" rel="nofollow"&gt;clipboard&lt;/a&gt;
and macOS comes with a
&lt;a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/PasteboardGuide106/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008100-SW1" rel="nofollow"&gt;pasteboard&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Both work like most users would expect them to work. You copy selected text with
&lt;code&gt;ctrl+c&lt;/code&gt;/&lt;code&gt;cmd+c&lt;/code&gt; and paste them in another application with &lt;code&gt;ctrl+v&lt;/code&gt;/&lt;code&gt;cmd+v&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that copied text is actually transferred to the clipboard, so you can close
the application you copied from before pasting in another application without
problems.&lt;/p&gt;
&lt;p&gt;Whenever this happens, the clipboard register &lt;code&gt;*&lt;/code&gt; gets filled with the
selection. From Vim use &lt;code&gt;"*y&lt;/code&gt; and &lt;code&gt;"*p&lt;/code&gt; to yank and paste from the clipboard
respectively.&lt;/p&gt;
&lt;p&gt;If you don't even want to specify the &lt;code&gt;*&lt;/code&gt; register all the time, put this in
your vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;unnamed&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Usually all yank/delete/put operations fill the &lt;code&gt;"&lt;/code&gt; register, now the &lt;code&gt;*&lt;/code&gt;
register is used for the same operations, therefore simply &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt; will be
enough.&lt;/p&gt;
&lt;p&gt;Let me repeat: Using the option above means that every yank/paste, even when
only used in the same Vim window, will alter the clipboard. Decide for yourself
if this is useful or not.&lt;/p&gt;
&lt;p&gt;If you're even too lazy to type &lt;code&gt;y&lt;/code&gt;, you can send every visual selection to the
clipboard by using these settings:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;unnamed,autoselect
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;guioptions&lt;/span&gt;&lt;span class="pl-k"&gt;+=&lt;/span&gt;&lt;span class="pl-c1"&gt;a&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h clipboard-unnamed
:h autoselect
:h 'go_a'
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-clipboard-usage-linux-bsd-" class="anchor" aria-hidden="true" href="#clipboard-usage-linux-bsd-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clipboard usage (Linux, BSD, ...)&lt;/h3&gt;
&lt;p&gt;If your OS uses &lt;a href="http://www.x.org/wiki" rel="nofollow"&gt;X&lt;/a&gt;, things work a bit different. X
implements the &lt;a href="http://www.x.org/releases/X11R7.7/doc/xproto/x11protocol.html" rel="nofollow"&gt;X Window System
Protocol&lt;/a&gt; which
happens to be at major version 11 since 1987, hence X is also often called X11.&lt;/p&gt;
&lt;p&gt;Prior, in X10, &lt;a href="http://www.x.org/releases/X11R7.7/doc/xorg-docs/icccm/icccm.html#Peer_to_Peer_Communication_by_Means_of_Cut_Buffers" rel="nofollow"&gt;cut
buffers&lt;/a&gt;
were introduced that kind of worked like a &lt;em&gt;clipboard&lt;/em&gt; as in copied text was
actually held by X and it was accessible by all other applications. This
mechanism still exists in X, but its use is deprecated now and most software
doesn't use it anymore.&lt;/p&gt;
&lt;p&gt;Nowadays data is transferred between applications by the means of
&lt;a href="http://www.x.org/releases/X11R7.7/doc/xorg-docs/icccm/icccm.html#Peer_to_Peer_Communication_by_Means_of_Selections" rel="nofollow"&gt;selections&lt;/a&gt;.
From the 3 &lt;em&gt;selection atoms&lt;/em&gt; defined, only 2 are used in practice: PRIMARY and
CLIPBOARD.&lt;/p&gt;
&lt;p&gt;Selections work roughly like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Program A: &amp;lt;ctrl+c&amp;gt;
Program A: assert ownership of CLIPBOARD
Program B: &amp;lt;ctrl+v&amp;gt;
Program B: note that ownership of CLIPBOARD is hold by Program A
Program B: request data from Program A
Program A: respond to request and send data to Program B
Program B: receives data from Program A and inserts it into the window
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Selection&lt;/th&gt;
&lt;th&gt;When used?&lt;/th&gt;
&lt;th&gt;How to paste?&lt;/th&gt;
&lt;th&gt;How to access from Vim?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PRIMARY&lt;/td&gt;
&lt;td&gt;Selecting text&lt;/td&gt;
&lt;td&gt;&lt;code&gt;middle-click&lt;/code&gt;, &lt;code&gt;shift+insert&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*&lt;/code&gt; register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CLIPBOARD&lt;/td&gt;
&lt;td&gt;Selecting text and &lt;code&gt;ctrl+c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ctrl+v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;+&lt;/code&gt; register&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Selections (no, not even the CLIPBOARD selection) are never kept in
the X server! Thus, you lose the data copied with &lt;code&gt;ctrl+c&lt;/code&gt; when the application
closes.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;"*p&lt;/code&gt; to paste the PRIMARY selection or &lt;code&gt;"+y1G&lt;/code&gt; to yank the entire file to
the CLIPBOARD selection.&lt;/p&gt;
&lt;p&gt;If you happen to access one of the two registers all the time, consider using:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;^&lt;span class="pl-k"&gt;=&lt;/span&gt;unnamed&lt;span class="pl-c"&gt;      &lt;span class="pl-c"&gt;"&lt;/span&gt; * register&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; or&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;^&lt;span class="pl-k"&gt;=&lt;/span&gt;unnamedplus&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; + register&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(The &lt;code&gt;^=&lt;/code&gt; is used to prepend to the default value, &lt;code&gt;:h :set^=&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;This will make all yank/delete/put operations use either &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt; instead of
the unnamed register &lt;code&gt;"&lt;/code&gt;. Afterwards you can simply use &lt;code&gt;y&lt;/code&gt; or &lt;code&gt;p&lt;/code&gt; for accessing
your chosen X selection.&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;unnamed
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;unnamedplus&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-restore-cursor-position-when-opening-file" class="anchor" aria-hidden="true" href="#restore-cursor-position-when-opening-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Restore cursor position when opening file&lt;/h2&gt;
&lt;p&gt;When you open a file, the cursor will be positioned at line 1, column 1.
Fortunately the viminfo file remembers &lt;a href="#marks"&gt;marks&lt;/a&gt;. The &lt;code&gt;"&lt;/code&gt; mark contains
the position in the buffer where you left off.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufReadPost&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt; &amp;gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) |
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-c1"&gt;execute&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;normal! g`&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; |
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Read: If the mark &lt;code&gt;"&lt;/code&gt; contains a line number greater than line 1 but not greater
than the last line in the file, jump to it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h viminfo-'
:h `quote
:h g`
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-temporary-files" class="anchor" aria-hidden="true" href="#temporary-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Temporary files&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-backup-files" class="anchor" aria-hidden="true" href="#backup-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backup files&lt;/h3&gt;
&lt;p&gt;Before saving a file, Vim creates a backup file. If writing to disk was
successful, the backup file will be deleted.&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;:set backup&lt;/code&gt;, the backup will persist. This means, the backup file will
always have the same content as the original file &lt;em&gt;before&lt;/em&gt; the most recent save.
It's up to you to decide whether this is useful or not.&lt;/p&gt;
&lt;p&gt;You can disable backups entirely with &lt;code&gt;:set nobackup nowritebackup&lt;/code&gt;, but you
shouldn't need to nowadays. &lt;code&gt;'writebackup'&lt;/code&gt; is a security feature that makes
sure that you don't lose the original file in case saving it should ever fail,
no matter whether you keep the backup file afterwards or not.&lt;/p&gt;
&lt;p&gt;If you frequently use Vim to edit huge files, &lt;a href="#editing-huge-files-is-slow"&gt;and you probably
shouldn't&lt;/a&gt;, you can exclude those from backups with
&lt;code&gt;'backupskip'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Vim knows different ways to create a backup: &lt;em&gt;copying&lt;/em&gt; and &lt;em&gt;renaming&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Copying&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;A full copy of the original file is created and used as backup.&lt;/li&gt;
&lt;li&gt;The original file gets emptied and then filled with the content of the
Vim buffer.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Renaming&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;The original file is renamed to the backup file.&lt;/li&gt;
&lt;li&gt;The content of the Vim buffer gets written to a new file with the name of
the original file.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;code&gt;:h 'backupcopy'&lt;/code&gt; for all the nitty-gritty details.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Demo:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;backup&lt;/span&gt; &lt;span class="pl-c1"&gt;backupskip&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;backupdir&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;. &lt;span class="pl-c1"&gt;backupext&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;backup&lt;/span&gt;
:&lt;span class="pl-c1"&gt;e&lt;/span&gt; &lt;span class="pl-sr"&gt;/tmp/&lt;/span&gt;foo
ifoo&lt;span class="pl-c1"&gt;&amp;lt;esc&amp;gt;&lt;/span&gt;
:&lt;span class="pl-c1"&gt;w&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; original file gets created, no need for backup file&lt;/span&gt;
obar&lt;span class="pl-c1"&gt;&amp;lt;esc&amp;gt;&lt;/span&gt;
:&lt;span class="pl-c1"&gt;w&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; backup file is created, original file gets updated&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-diff"&gt;&lt;pre&gt;$ diff -u /tmp/foo-backup /tmp/foo
&lt;span class="pl-md"&gt;--- /tmp/foo-backup     2017-04-22 15:05:13.000000000 +0200&lt;/span&gt;
&lt;span class="pl-mi1"&gt;+++ /tmp/foo    2017-04-22 15:05:25.000000000 +0200&lt;/span&gt;
&lt;span class="pl-mdr"&gt;@@ -1 +1,2 @@&lt;/span&gt;
 foo
&lt;span class="pl-mi1"&gt;&lt;span class="pl-mi1"&gt;+&lt;/span&gt;bar&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;:h backup
:h write-fail
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swap-files" class="anchor" aria-hidden="true" href="#swap-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swap files&lt;/h3&gt;
&lt;p&gt;When editing a file, unsaved changes get written to a swap file.&lt;/p&gt;
&lt;p&gt;Get the name of the current swap file with &lt;code&gt;:swapname&lt;/code&gt;. Disable them with &lt;code&gt;:set noswapfile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A swap file gets updated either all 200 characters or when nothing was typed for
4 seconds. They get deleted when you stop editing the file. You can change these
numbers with &lt;code&gt;:h 'updatecount'&lt;/code&gt; and &lt;code&gt;:h 'updatetime'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If Vim gets killed (e.g. power outage), you lose all changes since the last time
the file was written to disk, but the swap file won't be deleted. Now, if you
edit the file again, Vim will offer the chance to recover the file from the swap
file.&lt;/p&gt;
&lt;p&gt;When two people try to edit the same file, the second person will get a notice
that the swap file already exists. It prevents people from trying to save
different versions of a file. If you don't want that behaviour, see &lt;code&gt;:h 'directory'&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h swap-file
:h usr_11
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-undo-files" class="anchor" aria-hidden="true" href="#undo-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Undo files&lt;/h3&gt;
&lt;p&gt;The &lt;a href="#undo-tree"&gt;undo tree&lt;/a&gt; is kept in memory and will be lost when Vim quits.
If you want it to persist, &lt;code&gt;:set undofile&lt;/code&gt;. This will save the undo file for
&lt;code&gt;~/foo.c&lt;/code&gt; in &lt;code&gt;~/foo.c.un~&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h 'undofile'
:h undo-persistence
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-viminfo-files" class="anchor" aria-hidden="true" href="#viminfo-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Viminfo files&lt;/h3&gt;
&lt;p&gt;When backup, swap, and undo files are all about text state, viminfo files are
used for saving everything else that would otherwise be lost when quitting Vim.
The viminfo file keeps histories (command line, search, input), registers,
marks, buffer list, global variables etc.&lt;/p&gt;
&lt;p&gt;By default, the viminfo is written to &lt;code&gt;~/.viminfo&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h viminfo
:h 'viminfo'
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-example-configuration-for-temporary-files" class="anchor" aria-hidden="true" href="#example-configuration-for-temporary-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example configuration for temporary files&lt;/h3&gt;
&lt;p&gt;Put all temporary files in their own directory under &lt;code&gt;~/.vim/files&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; create directory if needed&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;isdirectory&lt;/span&gt;(&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/.vim/files&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*mkdir&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;mkdir&lt;/span&gt;(&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/.vim/files&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;endif&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; backup files&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;backup&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;backupdir&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;&lt;span class="pl-sr"&gt;/.vim/&lt;/span&gt;&lt;span class="pl-c1"&gt;files&lt;/span&gt;&lt;span class="pl-sr"&gt;/backup/&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;backupext&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;vimbackup
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;backupskip&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; swap files&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;directory&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;&lt;span class="pl-sr"&gt;/.vim/&lt;/span&gt;&lt;span class="pl-c1"&gt;files&lt;/span&gt;&lt;span class="pl-sr"&gt;/swap/&lt;/span&gt;/
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;updatecount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; undo files&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;undofile&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;undodir&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;&lt;span class="pl-sr"&gt;/.vim/&lt;/span&gt;&lt;span class="pl-c1"&gt;files&lt;/span&gt;&lt;span class="pl-sr"&gt;/undo/&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; viminfo files&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;viminfo&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt;'&lt;span class="pl-c1"&gt;100&lt;/span&gt;,&lt;span class="pl-c1"&gt;n&lt;/span&gt;&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;&lt;span class="pl-sr"&gt;/.vim/&lt;/span&gt;&lt;span class="pl-c1"&gt;files&lt;/span&gt;&lt;span class="pl-sr"&gt;/info/&lt;/span&gt;&lt;span class="pl-c1"&gt;viminfo&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-editing-remote-files" class="anchor" aria-hidden="true" href="#editing-remote-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editing remote files&lt;/h2&gt;
&lt;p&gt;Vim comes with the netrw plugin that enables editing remote files. Actually it
transfers the remote file to a local temporary file via scp, opens a buffer
using that file, and writes the changes back to the remote file on saving.&lt;/p&gt;
&lt;p&gt;This is extremely useful if you want to use your local configuration opposed to
ssh'ing into a server and use whatever the admins want you to use.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:e scp://bram@awesome.site.com/.vimrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you have a &lt;code&gt;~/.ssh/config&lt;/code&gt; set up already, this gets used automatically:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host awesome
    HostName awesome.site.com
    Port 1234
    User bram
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Assuming the above content in &lt;code&gt;~/.ssh/config&lt;/code&gt;, this works just as well:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:e scp://awesome/.vimrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Similar can be done with a &lt;code&gt;~/.netrc&lt;/code&gt;, see &lt;code&gt;:h netrw-netrc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Make sure to read &lt;code&gt;:h netrw-ssh-hack&lt;/code&gt; and &lt;code&gt;:h g:netrw_ssh_cmd&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Another possibility is using &lt;a href="https://wiki.archlinux.org/index.php/Sshfs" rel="nofollow"&gt;sshfs&lt;/a&gt;
which uses &lt;a href="https://en.wikipedia.org/wiki/Filesystem_in_Userspace" rel="nofollow"&gt;FUSE&lt;/a&gt; to
mount a remote filesystem into your local filesystem.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-managing-plugins" class="anchor" aria-hidden="true" href="#managing-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing plugins&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/tpope/vim-pathogen"&gt;Pathogen&lt;/a&gt; was the first popular tool for
managing plugins. Actually it just adjusts the &lt;em&gt;runtimepath&lt;/em&gt; (&lt;code&gt;:h 'rtp'&lt;/code&gt;) to
include all the things put under a certain directory. You have to clone the
repositories of the plugins there yourself.&lt;/p&gt;
&lt;p&gt;Real plugin managers expose commands that help you to install and update plugins
from within Vim.&lt;/p&gt;
&lt;p&gt;&lt;a href="PLUGINS.md#plugin-managers"&gt;List of plugin managers&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-block-insert" class="anchor" aria-hidden="true" href="#block-insert"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Block insert&lt;/h2&gt;
&lt;p&gt;This is a technique to insert the same text on multiple consecutive lines at the
same time. See this
&lt;a href="https://raw.githubusercontent.com/mhinz/vim-galore/master/static/images/content-block_insert.gif" rel="nofollow"&gt;demo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Switch to visual block mode with &lt;code&gt;&amp;lt;c-v&amp;gt;&lt;/code&gt;. Afterwards go down for a few lines.
Hit &lt;code&gt;I&lt;/code&gt; or &lt;code&gt;A&lt;/code&gt; and start entering your text.&lt;/p&gt;
&lt;p&gt;It might be a bit confusing at first, but text is always entered for the current
line and only after finishing the current insertion, the same text will be
applied to all other lines of the prior visual selection.&lt;/p&gt;
&lt;p&gt;So a simple example is &lt;code&gt;&amp;lt;c-v&amp;gt;3jItext&amp;lt;esc&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you have lines of different length and want to append the same text right
after the end of each line, do this: &lt;code&gt;&amp;lt;c-v&amp;gt;3j$Atext&amp;lt;esc&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Sometime you need to place the cursor somewhere after the end of the current
line. You can't do that by default, but you can set the &lt;code&gt;virtualedit&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;virtualedit&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;all&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Afterwards &lt;code&gt;$10l&lt;/code&gt; or &lt;code&gt;90|&lt;/code&gt; work even after the end of the line.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:h blockwise-examples&lt;/code&gt; for more info. It might seem complicated at first,
but quickly becomes second nature.&lt;/p&gt;
&lt;p&gt;If you want to get real fancy, have a look at
&lt;a href="https://github.com/terryma/vim-multiple-cursors"&gt;multiple-cursors&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-external-programs-and-using-filters" class="anchor" aria-hidden="true" href="#running-external-programs-and-using-filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running external programs and using filters&lt;/h2&gt;
&lt;p&gt;Disclaimer: Vim is single-threaded, so running an external program in the
foreground will block everything else. Sure, you can use one of Vim's
programming interfaces, e.g. Lua, and use its thread support, but during that
time the Vim process is blocked nevertheless. Neovim fixed that by adding a
proper job API.&lt;/p&gt;
&lt;p&gt;(Apparently Bram is thinking about adding job control to Vim as well. If you
have a very recent version, see &lt;code&gt;:helpgrep startjob&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;:!&lt;/code&gt; to start a job. If you want to list the files in the current working
directory, use &lt;code&gt;:!ls&lt;/code&gt;. Use &lt;code&gt;|&lt;/code&gt; for piping in the shell as usual, e.g. &lt;code&gt;:!ls -1 | sort | tail -n5&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Without a range, the output of &lt;code&gt;:!&lt;/code&gt; will be shown in a scrollable window. On the
other hand, if a range is given, these lines will be
&lt;a href="https://en.wikipedia.org/wiki/Filter_(software)" rel="nofollow"&gt;filtered&lt;/a&gt;. This means they
will be piped to the
&lt;a href="https://en.wikipedia.org/wiki/Standard_streams#Standard_input_.28stdin.29" rel="nofollow"&gt;stdin&lt;/a&gt;
of the filter program and after processing be replaced by the
&lt;a href="https://en.wikipedia.org/wiki/Standard_streams#Standard_output_.28stdout.29" rel="nofollow"&gt;stdout&lt;/a&gt;
of the filter. E.g. for prepending numbers to the next 5 lines, use this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:.,+4!nl -ba -w1 -s' '
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since manually adding the range is quite burdensome, Vim also provides some
helpers for convenience. As always with ranges, you can also select lines in
visual mode and then hit &lt;code&gt;:&lt;/code&gt;. There's also an operator &lt;code&gt;!&lt;/code&gt; that takes a motion.
E.g. &lt;code&gt;!ip!sort&lt;/code&gt; will sort the lines of the current paragraph.&lt;/p&gt;
&lt;p&gt;A good use case for filtering is the &lt;a href="https://golang.org" rel="nofollow"&gt;Go programming
language&lt;/a&gt;. The indentation is pretty opinionated, it even
comes with a filter called &lt;code&gt;gofmt&lt;/code&gt; for indenting Go source code properly. So
plugins for Go often provide helper commands called &lt;code&gt;:Fmt&lt;/code&gt; that basically do
&lt;code&gt;:%!gofmt&lt;/code&gt;, so they indent all lines in the file.&lt;/p&gt;
&lt;p&gt;People often use &lt;code&gt;:r !prog&lt;/code&gt; to put the output of prog below the current line,
which is fine for scripts, but when doing it on the fly, I find it easier to use
&lt;code&gt;!!ls&lt;/code&gt; instead, which replaces the current line.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h filter
:h :read!
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-cscope" class="anchor" aria-hidden="true" href="#cscope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cscope&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://cscope.sourceforge.net/" rel="nofollow"&gt;Cscope&lt;/a&gt; does more things than
&lt;a href="http://ctags.sourceforge.net/" rel="nofollow"&gt;ctags&lt;/a&gt;, but only supports C (and C++ and Java to
some extent).&lt;/p&gt;
&lt;p&gt;Whereas a tags file only knows where a symbol was defined, a cscope database
knows much more about your data:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Where is this symbol defined?&lt;/li&gt;
&lt;li&gt;Where is this symbol used?&lt;/li&gt;
&lt;li&gt;What is this global symbol's definition?&lt;/li&gt;
&lt;li&gt;Where did this variable get its value?&lt;/li&gt;
&lt;li&gt;Where is this function in the source files?&lt;/li&gt;
&lt;li&gt;What functions call this function?&lt;/li&gt;
&lt;li&gt;What functions are called by this function?&lt;/li&gt;
&lt;li&gt;Where does the message "out of space" come from?&lt;/li&gt;
&lt;li&gt;Where is this source file in the directory structure?&lt;/li&gt;
&lt;li&gt;What files include this header file?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-1-build-the-database" class="anchor" aria-hidden="true" href="#1-build-the-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Build the database&lt;/h3&gt;
&lt;p&gt;Do this in the root of your project:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ cscope -bqR&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will create 3 files: &lt;code&gt;cscope{,.in,.po}.out&lt;/code&gt; in the current working
directory. Think of them as your database.&lt;/p&gt;
&lt;p&gt;Unfortunately &lt;code&gt;cscope&lt;/code&gt; only analyzes &lt;code&gt;*.[c|h|y|l]&lt;/code&gt; files by default. If you want
to use cscope for a Java project instead, do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*.java&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; cscope.files
$ cscope -bq&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-2-add-the-database" class="anchor" aria-hidden="true" href="#2-add-the-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Add the database&lt;/h3&gt;
&lt;p&gt;Open a connection to your freshly built database:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;cs&lt;/span&gt; &lt;span class="pl-c1"&gt;add&lt;/span&gt; &lt;span class="pl-c1"&gt;cscope&lt;/span&gt;.out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verify that the connection was made:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;cs&lt;/span&gt; show&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Yes, you can add multiple connections.)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3-query-the-database" class="anchor" aria-hidden="true" href="#3-query-the-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Query the database&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;cs&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;kind&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;query&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;E.g. &lt;code&gt;:cs find d foo&lt;/code&gt; will list all functions that are called by &lt;code&gt;foo(...)&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Kind&lt;/th&gt;
&lt;th&gt;Explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;s&lt;/strong&gt;ymbol: find all references to the token&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;g&lt;/strong&gt;lobal: find global definition(s) of the token&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;c&lt;/strong&gt;alls: find all calls to the function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;t&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;t&lt;/strong&gt;ext: find all instances of the text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;e&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;e&lt;/strong&gt;grep: egrep search for the word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;f&lt;/strong&gt;ile: open the filename&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;i&lt;/strong&gt;ncludes: find files that include the filename&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;d&lt;/strong&gt;epends: find functions called by this function&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I suggest some convenience mappings e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;cs&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;cg&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;g&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;cc&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;c&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;ct :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;ce&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;e&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;cf&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;f&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cfile&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;ci&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;i&lt;/span&gt; ^&lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cfile&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;span class="pl-smi"&gt;$&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;d&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, when &lt;code&gt;:tag&lt;/code&gt; (or &lt;code&gt;&amp;lt;c-]&amp;gt;&lt;/code&gt;) jumps to a definition from the tags file, &lt;code&gt;:cstag&lt;/code&gt;
does the same, but also takes connected cscope databases into account. The
option &lt;code&gt;'cscopetag'&lt;/code&gt; makes &lt;code&gt;:tag&lt;/code&gt; act like &lt;code&gt;:cstag&lt;/code&gt; automatically. This is very
convenient if you already have tag-related mappings.&lt;/p&gt;
&lt;p&gt;Help: &lt;code&gt;:h cscope&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-matchit" class="anchor" aria-hidden="true" href="#matchit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MatchIt&lt;/h2&gt;
&lt;p&gt;Since Vim is written in C, a lot of features assume C-like syntax. By default,
if your cursor is on &lt;code&gt;{&lt;/code&gt; or &lt;code&gt;#endif&lt;/code&gt;, you can use &lt;code&gt;%&lt;/code&gt; to jump to the
corresponding &lt;code&gt;}&lt;/code&gt; or &lt;code&gt;#ifdef&lt;/code&gt; respectively.&lt;/p&gt;
&lt;p&gt;Vim comes bundled with a plugin called matchit.vim which is not enabled by
default. It makes &lt;code&gt;%&lt;/code&gt; also cycle through HTML tags, if/else/endif constructs in
VimL etc. and introduces a few new commands.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-installation-for-vim-8" class="anchor" aria-hidden="true" href="#installation-for-vim-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation for Vim 8&lt;/h4&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; vimrc&lt;/span&gt;
&lt;span class="pl-c1"&gt;packadd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; matchit&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-installation-for-vim-7-and-older" class="anchor" aria-hidden="true" href="#installation-for-vim-7-and-older"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation for Vim 7 and older&lt;/h4&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; vimrc&lt;/span&gt;
&lt;span class="pl-c1"&gt;runtime&lt;/span&gt; macros/matchit.&lt;span class="pl-c1"&gt;vim&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since the documentation of matchit is pretty extensive, I suggest also doing the
following once:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-c1"&gt;mkdir&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;p&lt;/span&gt; &lt;span class="pl-c1"&gt;~/.vim/doc&lt;/span&gt;
:&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-c1"&gt;cp&lt;/span&gt; &lt;span class="pl-c1"&gt;$VIMRUNTIME&lt;/span&gt;&lt;span class="pl-sr"&gt;/macros/&lt;/span&gt;matchit.txt &lt;span class="pl-c1"&gt;~/.vim/doc&lt;/span&gt;
:&lt;span class="pl-c1"&gt;helptags&lt;/span&gt; &lt;span class="pl-c1"&gt;~/.vim/doc&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-small-intro" class="anchor" aria-hidden="true" href="#small-intro"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Small intro&lt;/h4&gt;
&lt;p&gt;The plugin is ready to use now. See &lt;code&gt;:h matchit-intro&lt;/code&gt; for the supported
commands and &lt;code&gt;:h matchit-languages&lt;/code&gt; for the supported languages.&lt;/p&gt;
&lt;p&gt;That said, it's easy to define your own matching pairs:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;FileType&lt;/span&gt; &lt;span class="pl-c1"&gt;python&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;match_words&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\&amp;lt;if\&amp;gt;:\&amp;lt;elif\&amp;gt;:\&amp;lt;else\&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Afterwards you can cycle through these 3 statements in any Python file by using
&lt;code&gt;%&lt;/code&gt; (forward) or &lt;code&gt;g%&lt;/code&gt; (backward).&lt;/p&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h matchit-install
:h matchit
:h b:match_words
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-true-colors" class="anchor" aria-hidden="true" href="#true-colors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;True colors&lt;/h2&gt;
&lt;p&gt;Using true colors in a terminal emulator means being able to use 24 bits for RGB
colors. That makes 16777216 (2^24) colors instead of the usual 256.&lt;/p&gt;
&lt;p&gt;As explained &lt;a href="#colorschemes"&gt;here&lt;/a&gt;, colorschemes can actually be &lt;em&gt;two&lt;/em&gt;
colorschemes by having definitions for terminals (xterm) and for GUIs (gvim).
This made sense before terminal emulators learned about true colors.&lt;/p&gt;
&lt;p&gt;After &lt;code&gt;:set termguicolors&lt;/code&gt;, Vim starts emitting escape sequences only understood
by a terminal emulator that supports true colors. When your colors look weird,
chances are your terminal emulator doesn't support true colors or your
colorcheme has no GUI colors defined.&lt;/p&gt;
&lt;p&gt;Many people use the terminal multiplexer
&lt;a href="https://github.com/tmux/tmux/wiki"&gt;tmux&lt;/a&gt; which basically sits in between the
terminal emulator and Vim. To make tmux &lt;em&gt;forward&lt;/em&gt; the true color escape
sequences emitted by Vim, you have to put the following in the user's
&lt;code&gt;.tmux.conf&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set-option -g  default-terminal 'tmux-256color'
set-option -ga terminal-overrides ',xterm-256color:Tc'
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;The first line should be the same for most people and denotes the &lt;code&gt;$TERM&lt;/code&gt; to
be used &lt;em&gt;within&lt;/em&gt; tmux.&lt;/li&gt;
&lt;li&gt;The second line adds the tmux-specific &lt;code&gt;Tc&lt;/code&gt; (true color) capability to the
other terminfo entries of &lt;code&gt;xterm-256color&lt;/code&gt;. Obviously this assumes that the
user is using &lt;code&gt;TERM=xterm-256color&lt;/code&gt; &lt;em&gt;outside&lt;/em&gt; of tmux.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, here is the checklist for enabling true colors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read &lt;code&gt;:h 'termguicolors'&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;set termguicolors&lt;/code&gt; in your vimrc.&lt;/li&gt;
&lt;li&gt;Make sure your colorscheme has color definitions for GUIs. (It should contain
lines with &lt;code&gt;guifg&lt;/code&gt; and &lt;code&gt;guibg&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;Make sure your terminal emulator of choice supports true colors.&lt;/li&gt;
&lt;li&gt;Using tmux? Configure it to add the &lt;code&gt;Tc&lt;/code&gt; capability.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A popular reference for colors in the terminal:
&lt;a href="https://gist.github.com/XVilka/8346728"&gt;https://gist.github.com/XVilka/8346728&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-tips-1" class="anchor" aria-hidden="true" href="#tips-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tips&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-go-to-other-end-of-selected-text" class="anchor" aria-hidden="true" href="#go-to-other-end-of-selected-text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Go to other end of selected text&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;o&lt;/code&gt; and &lt;code&gt;O&lt;/code&gt; in a visual selection make the cursor go to the other end. Try with
blockwise selection to see the difference. This is useful for quickly changing
the size of the selected text.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h v_o
:h v_O
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-saner-behavior-of-n-and-n" class="anchor" aria-hidden="true" href="#saner-behavior-of-n-and-n"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Saner behavior of n and N&lt;/h2&gt;
&lt;p&gt;The direction of &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; depends on whether &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt; was used for
searching forward or backward respectively. This is pretty confusing to me.&lt;/p&gt;
&lt;p&gt;If you want &lt;code&gt;n&lt;/code&gt; to always search forward and &lt;code&gt;N&lt;/code&gt; backward, use this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;n&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Nn&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;[&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;searchforward&lt;/span&gt;]
&lt;span class="pl-c1"&gt;xnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;n&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Nn&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;[&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;searchforward&lt;/span&gt;]
&lt;span class="pl-c1"&gt;onoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;n&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Nn&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;[&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;searchforward&lt;/span&gt;]

&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;N&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nN&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;[&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;searchforward&lt;/span&gt;]
&lt;span class="pl-c1"&gt;xnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;N&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nN&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;[&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;searchforward&lt;/span&gt;]
&lt;span class="pl-c1"&gt;onoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;N&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nN&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;[&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;searchforward&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-saner-command-line-history" class="anchor" aria-hidden="true" href="#saner-command-line-history"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Saner command-line history&lt;/h2&gt;
&lt;p&gt;If you're anything like me, you're used to going to next and previous items via
&lt;code&gt;&amp;lt;c-n&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;c-p&amp;gt;&lt;/code&gt; respectively. By default, this also works in the
command-line and recalls older or more recent command-lines from history.&lt;/p&gt;
&lt;p&gt;So far, so good. But &lt;code&gt;&amp;lt;up&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;down&amp;gt;&lt;/code&gt; are even smarter! They recall the
command-line whose beginning matches the current command-line. E.g. &lt;code&gt;:echo &amp;lt;up&amp;gt;&lt;/code&gt;
may change to &lt;code&gt;:echo "Vim rocks!"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Of course, I don't want you to reach to the arrow keys, just map it instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-n&amp;gt;&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;down&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;cnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-p&amp;gt;&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;up&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I depend on this behaviour several times a day.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-saner-ctrl-l" class="anchor" aria-hidden="true" href="#saner-ctrl-l"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Saner CTRL-L&lt;/h2&gt;
&lt;p&gt;By default, &lt;code&gt;&amp;lt;c-l&amp;gt;&lt;/code&gt; clears and redraws the screen (like &lt;code&gt;:redraw!&lt;/code&gt;). The
following mapping does the same, plus de-highlighting the matches found via &lt;code&gt;/&lt;/code&gt;,
&lt;code&gt;?&lt;/code&gt; etc., plus fixing syntax highlighting (sometimes Vim loses highlighting due
to complex highlighting rules), plus force updating the syntax highlighting in
diff mode:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;l&lt;/span&gt; :&lt;span class="pl-c1"&gt;nohlsearch&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;diffupdate&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;syntax&lt;/span&gt; &lt;span class="pl-c1"&gt;sync&lt;/span&gt; &lt;span class="pl-c1"&gt;fromstart&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;c-l&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-disable-audible-and-visual-bells" class="anchor" aria-hidden="true" href="#disable-audible-and-visual-bells"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disable audible and visual bells&lt;/h2&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;noerrorbells&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;novisualbell&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;t_vb&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="http://vim.wikia.com/wiki/Disable_beeping" rel="nofollow"&gt;Vim Wiki: Disable beeping&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickly-move-current-line" class="anchor" aria-hidden="true" href="#quickly-move-current-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickly move current line&lt;/h2&gt;
&lt;p&gt;Sometimes I need a quick way to move the current line above or below:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; [&lt;span class="pl-c1"&gt;e&lt;/span&gt;  :&lt;span class="pl-c1"&gt;&amp;lt;c-u&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;execute&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;move -1-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;. &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;count1&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; ]&lt;span class="pl-c1"&gt;e&lt;/span&gt;  :&lt;span class="pl-c1"&gt;&amp;lt;c-u&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;execute&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;move +&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;. &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;count1&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These mappings also take a count, so &lt;code&gt;2]e&lt;/code&gt; moves the current line 2 lines below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickly-add-empty-lines" class="anchor" aria-hidden="true" href="#quickly-add-empty-lines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickly add empty lines&lt;/h2&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; [&lt;span class="pl-c1"&gt;&amp;lt;space&amp;gt;&lt;/span&gt;  :&lt;span class="pl-c1"&gt;&amp;lt;c-u&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;put&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;repeat&lt;/span&gt;(&lt;span class="pl-en"&gt;nr2char&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;), &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;count1&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;'[
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; ]&lt;span class="pl-c1"&gt;&amp;lt;space&amp;gt;&lt;/span&gt;  :&lt;span class="pl-c1"&gt;&amp;lt;c-u&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;put&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;repeat&lt;/span&gt;(&lt;span class="pl-en"&gt;nr2char&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;), &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;count1&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now &lt;code&gt;5[&amp;lt;space&amp;gt;&lt;/code&gt; inserts 5 blank lines above the current line.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickly-edit-your-macros" class="anchor" aria-hidden="true" href="#quickly-edit-your-macros"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickly edit your macros&lt;/h2&gt;
&lt;p&gt;This is a real gem! The mapping takes a register (or &lt;code&gt;*&lt;/code&gt; by default) and opens
it in the cmdline-window. Hit &lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt; when you're done editing for setting the
register.&lt;/p&gt;
&lt;p&gt;I often use this to correct typos I did while recording a macro.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;m&lt;/span&gt;  :&lt;span class="pl-c1"&gt;&amp;lt;c-u&amp;gt;&amp;lt;c-r&amp;gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;let @&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;. &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;register&lt;/span&gt; .&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;. &lt;span class="pl-en"&gt;string&lt;/span&gt;(&lt;span class="pl-en"&gt;getreg&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;register&lt;/span&gt;))&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;c-f&amp;gt;&amp;lt;left&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use it like this &lt;code&gt;&amp;lt;leader&amp;gt;m&lt;/code&gt; or &lt;code&gt;"q&amp;lt;leader&amp;gt;m&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Notice the use of &lt;code&gt;&amp;lt;c-r&amp;gt;&amp;lt;c-r&amp;gt;&lt;/code&gt; to make sure that the &lt;code&gt;&amp;lt;c-r&amp;gt;&lt;/code&gt; is inserted
literally. See &lt;code&gt;:h c_^R^R&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickly-jump-to-header-or-source-file" class="anchor" aria-hidden="true" href="#quickly-jump-to-header-or-source-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickly jump to header or source file&lt;/h2&gt;
&lt;p&gt;This technique can probably be applied to many filetypes. It sets &lt;em&gt;file marks&lt;/em&gt;
(see &lt;code&gt;:h marks&lt;/code&gt;) when leaving a source or header file, so you can quickly jump
back to the last accessed one by using &lt;code&gt;'C&lt;/code&gt; or &lt;code&gt;'H&lt;/code&gt; (see &lt;code&gt;:h 'A&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufLeave&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.{&lt;span class="pl-c1"&gt;c&lt;/span&gt;,cpp} &lt;span class="pl-c1"&gt;mark&lt;/span&gt; C
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufLeave&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.&lt;span class="pl-c1"&gt;h&lt;/span&gt;       &lt;span class="pl-c1"&gt;mark&lt;/span&gt; H&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The info is saved in the viminfo file, so make sure that &lt;code&gt;:set viminfo?&lt;/code&gt; includes &lt;code&gt;:h viminfo-'&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickly-change-font-size-in-gui" class="anchor" aria-hidden="true" href="#quickly-change-font-size-in-gui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickly change font size in GUI&lt;/h2&gt;
&lt;p&gt;I think this was taken from tpope's config:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; Bigger  :&lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;guifont&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;substitute&lt;/span&gt;(&amp;amp;&lt;span class="pl-c1"&gt;guifont&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\d\+$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\=submatch(0)+1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; Smaller :&lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;guifont&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;substitute&lt;/span&gt;(&amp;amp;&lt;span class="pl-c1"&gt;guifont&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\d\+$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\=submatch(0)-1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-change-cursor-style-dependent-on-mode" class="anchor" aria-hidden="true" href="#change-cursor-style-dependent-on-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change cursor style dependent on mode&lt;/h2&gt;
&lt;p&gt;I like to use a block cursor in normal mode, i-beam cursor in insert mode, and
underline cursor in replace mode.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;empty&lt;/span&gt;(&lt;span class="pl-c1"&gt;$TMUX&lt;/span&gt;)
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_SI&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=1&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_EI&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=0&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_SR&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=2&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;else&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_SI&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;Ptmux;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=1&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_EI&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;Ptmux;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=0&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_SR&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;Ptmux;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=2&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This simply tells Vim to print a certain sequence of characters (&lt;a href="https://en.wikipedia.org/wiki/Escape_sequence" rel="nofollow"&gt;escape
sequence&lt;/a&gt;) when entering/leaving
insert mode. The underlying terminal, or programs like
&lt;a href="https://tmux.github.io" rel="nofollow"&gt;tmux&lt;/a&gt; that sit between Vim and the terminal, will
process and evaluate it.&lt;/p&gt;
&lt;p&gt;There's one drawback though: there are many terminal emulator implementations
and not all use the same sequences for doing the same things. The sequences used
above might not work with your implementation. Your implementation might not
even support different cursor styles. Check the documentation.&lt;/p&gt;
&lt;p&gt;The example above works with iTerm2.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dont-lose-selection-when-shifting-sidewards" class="anchor" aria-hidden="true" href="#dont-lose-selection-when-shifting-sidewards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Don't lose selection when shifting sidewards&lt;/h2&gt;
&lt;p&gt;If you select one or more lines, you can use &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt; for shifting them
sidewards. Unfortunately you immediately lose the selection afterwards.&lt;/p&gt;
&lt;p&gt;You can use &lt;code&gt;gv&lt;/code&gt; to reselect the last selection (see &lt;code&gt;:h gv&lt;/code&gt;), thus you can work
around it like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;xnoremap&lt;/span&gt;&lt;span class="pl-k"&gt; &amp;lt; &lt;/span&gt; &amp;lt;gv
&lt;span class="pl-c1"&gt;xnoremap&lt;/span&gt;&lt;span class="pl-k"&gt; &amp;gt; &lt;/span&gt; &amp;gt;gv&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can use &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; on your visual selection without any problems.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The same can be achieved using &lt;code&gt;.&lt;/code&gt;, which repeats the last change.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reload-a-file-on-saving" class="anchor" aria-hidden="true" href="#reload-a-file-on-saving"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reload a file on saving&lt;/h2&gt;
&lt;p&gt;Using &lt;a href="#autocmds"&gt;autocmds&lt;/a&gt; you can do anything on saving a file, e.g. sourcing
it in case of a dotfile or running a linter to check for syntactical errors in
your source code.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufWritePost&lt;/span&gt; &lt;span class="pl-c1"&gt;$MYVIMRC&lt;/span&gt; &lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-c1"&gt;$MYVIMRC&lt;/span&gt;
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufWritePost&lt;/span&gt; &lt;span class="pl-c1"&gt;~/.Xdefaults&lt;/span&gt; &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;system&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xrdb ~/.Xdefaults&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-smarter-cursorline" class="anchor" aria-hidden="true" href="#smarter-cursorline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Smarter cursorline&lt;/h2&gt;
&lt;p&gt;I love the cursorline, but I only want to use it in the current window and not
when being in insert mode:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;InsertLeave&lt;/span&gt;,&lt;span class="pl-c1"&gt;WinEnter&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;cursorline&lt;/span&gt;
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;InsertEnter&lt;/span&gt;,&lt;span class="pl-c1"&gt;WinLeave&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;nocursorline&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faster-keyword-completion" class="anchor" aria-hidden="true" href="#faster-keyword-completion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Faster keyword completion&lt;/h2&gt;
&lt;p&gt;The keyword completion (&lt;code&gt;&amp;lt;c-n&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;c-p&amp;gt;&lt;/code&gt;) tries completing whatever is listed in
the &lt;code&gt;'complete'&lt;/code&gt; option. By default, this also includes tags (which can be
annoying) and scanning all included files (which can be very slow). If you can
live without these things, disable them:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;complete&lt;/span&gt;&lt;span class="pl-k"&gt;-=&lt;/span&gt;&lt;span class="pl-c1"&gt;i&lt;/span&gt;&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;"&lt;/span&gt; disable scanning included files&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;complete&lt;/span&gt;&lt;span class="pl-k"&gt;-=&lt;/span&gt;&lt;span class="pl-c1"&gt;t&lt;/span&gt;&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;"&lt;/span&gt; disable searching tags&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-cosmetic-changes-to-colorschemes" class="anchor" aria-hidden="true" href="#cosmetic-changes-to-colorschemes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cosmetic changes to colorschemes&lt;/h2&gt;
&lt;p&gt;Always use a dark gray statusline, no matter what colorscheme is chosen:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;ColorScheme&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;StatusLine&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;darkgray&lt;/span&gt; cterm&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;NONE&lt;/span&gt; guibg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;darkgray&lt;/span&gt; &lt;span class="pl-c1"&gt;gui&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;NONE&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This triggers every time you use &lt;code&gt;:colorscheme ...&lt;/code&gt;. If you want it to trigger
only for a certain colorscheme:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;ColorScheme&lt;/span&gt; desert &lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;StatusLine&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;darkgray&lt;/span&gt; cterm&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;NONE&lt;/span&gt; guibg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;darkgray&lt;/span&gt; &lt;span class="pl-c1"&gt;gui&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;NONE&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This triggers only for &lt;code&gt;:colorscheme desert&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-commands-1" class="anchor" aria-hidden="true" href="#commands-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h1&gt;
&lt;p&gt;Useful commands that are good to know. Use &lt;code&gt;:h :&amp;lt;command name&amp;gt;&lt;/code&gt; to learn more
about them, e.g. &lt;code&gt;:h :global&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-global-and-vglobal" class="anchor" aria-hidden="true" href="#global-and-vglobal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:global and :vglobal&lt;/h2&gt;
&lt;p&gt;Execute a command on all matching lines. E.g. &lt;code&gt;:global /regexp/ print&lt;/code&gt; will use
&lt;code&gt;:print&lt;/code&gt; on all lines that contain "regexp".&lt;/p&gt;
&lt;p&gt;Fun fact: You probably all know good old grep, the filter program written by Ken
Thompson. What does it do? It prints all lines matching a certain regular
expression! Now guess the short form of &lt;code&gt;:global /regexp/ print&lt;/code&gt;? That's right!
It's &lt;code&gt;:g/re/p&lt;/code&gt;. Ken Thompson was inspired by vi's &lt;code&gt;:global&lt;/code&gt; when he wrote grep.&lt;/p&gt;
&lt;p&gt;Despite its name, &lt;code&gt;:global&lt;/code&gt; only acts on all lines by default, but it also takes
a range. Assume you want use &lt;code&gt;:delete&lt;/code&gt; on all lines from the current line to the
next blank line (matched by the regular expression &lt;code&gt;^$&lt;/code&gt;) that contain "foo":&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:,&lt;span class="pl-sr"&gt;/^$/&lt;/span&gt;&lt;span class="pl-c1"&gt;g&lt;/span&gt;&lt;span class="pl-sr"&gt;/foo/&lt;/span&gt;&lt;span class="pl-c1"&gt;d&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For executing commands on all lines that do &lt;em&gt;not&lt;/em&gt; match a given pattern, use
&lt;code&gt;:global!&lt;/code&gt; or its alias &lt;code&gt;:vglobal&lt;/code&gt; (think &lt;em&gt;inVerse&lt;/em&gt;) instead.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-normal-and-execute" class="anchor" aria-hidden="true" href="#normal-and-execute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:normal and :execute&lt;/h2&gt;
&lt;p&gt;These commands are commonly used in Vim scripts.&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;:normal&lt;/code&gt; you can do normal mode mappings from the command-line. E.g.
&lt;code&gt;:normal! 4j&lt;/code&gt; will make the cursor go down 4 lines (without using any custom
mapping for "j" due to the "!").&lt;/p&gt;
&lt;p&gt;Mind that &lt;code&gt;:normal&lt;/code&gt; also takes a &lt;a href="#ranges"&gt;range&lt;/a&gt;, so &lt;code&gt;:%norm! Iabc&lt;/code&gt; would
prepend "abc" to every line.&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;:execute&lt;/code&gt; you can mix commands with expressions. Assume you edit a C
source file and want to switch to its header file:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;execute&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;edit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fnamemodify&lt;/span&gt;(&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:r&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) . &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.h&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both commands are often used together. Assume you want to make the cursor go
down "n" lines:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;
:&lt;span class="pl-c1"&gt;execute&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;normal!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;n&lt;/span&gt; . &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;j&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-redir-and-execute" class="anchor" aria-hidden="true" href="#redir-and-execute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:redir and execute()&lt;/h2&gt;
&lt;p&gt;Many commands print messages and &lt;code&gt;:redir&lt;/code&gt; allows to redirect that output. You
can redirect to files, &lt;a href="#registers"&gt;registers&lt;/a&gt; or variables.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;redir&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="pl-c1"&gt;var&lt;/span&gt;
:&lt;span class="pl-c1"&gt;reg&lt;/span&gt;
:&lt;span class="pl-c1"&gt;redir&lt;/span&gt; END
:&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-c1"&gt;var&lt;/span&gt;
:&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; For fun let's also put it onto the current buffer.&lt;/span&gt;
:&lt;span class="pl-c1"&gt;put&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;var&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Vim 8 there is an even shorter way:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;put&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;execute&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;reg&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Help:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h :redir
:h execute()
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-debugging-1" class="anchor" aria-hidden="true" href="#debugging-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-general-tips" class="anchor" aria-hidden="true" href="#general-tips"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General tips&lt;/h2&gt;
&lt;p&gt;If you encounter a strange behaviour, try reproducing it like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim -u NONE -N
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will start Vim without vimrc (thus default settings) and in nocompatible
mode (which makes it use Vim defaults instead of vi defaults). (See &lt;code&gt;:h --noplugin&lt;/code&gt; for other combinations of what to load at start.)&lt;/p&gt;
&lt;p&gt;If you can still reproduce it now, it's most likely a bug in Vim itself! Report
it to the &lt;a href="https://groups.google.com/forum/#!forum/vim_dev" rel="nofollow"&gt;vim_dev&lt;/a&gt; mailing
list. Most of the time the issue won't be resolved at this time and you'll have
to further investigate.&lt;/p&gt;
&lt;p&gt;Plugins often introduce new/changed/faulty behaviour. E.g. if it happens on
saving, check &lt;code&gt;:verb au BufWritePost&lt;/code&gt; to get a list of potential culprits.&lt;/p&gt;
&lt;p&gt;If you're using a plugin manager, comment them out until you find the culprit.&lt;/p&gt;
&lt;p&gt;Issue is still not resolved? If it's not a plugin, it must be your other
settings, so maybe your options or autocmds etc.&lt;/p&gt;
&lt;p&gt;Time to use binary search. Repeatedly split the search space in two until you
find the culprit line. Due to the nature of binary division, it won't take many
steps.&lt;/p&gt;
&lt;p&gt;In practice, it works like this: Put the &lt;code&gt;:finish&lt;/code&gt; command in the middle of your
vimrc. Vim will skip everything after it. If it still happens, the problem is in
the active upper half. Move the &lt;code&gt;:finish&lt;/code&gt; to the middle of &lt;em&gt;that&lt;/em&gt; half.
Otherwise, the issue is in the inactive lower half. Move the &lt;code&gt;:finish&lt;/code&gt; to the
middle of &lt;em&gt;that&lt;/em&gt; half. And so on.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-verbosity" class="anchor" aria-hidden="true" href="#verbosity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verbosity&lt;/h2&gt;
&lt;p&gt;Another useful way for observing what Vim is currently doing is increasing the
verbosity level. Currently Vim supports 9 different levels. See &lt;code&gt;:h 'verbose'&lt;/code&gt;
for the full list.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;e&lt;/span&gt; &lt;span class="pl-sr"&gt;/tmp/&lt;/span&gt;foo
:&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;verbose&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;
:&lt;span class="pl-c1"&gt;w&lt;/span&gt;
:&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;verbose&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would show all the files that get sourced, e.g. the undo file or various
plugins that act on saving.&lt;/p&gt;
&lt;p&gt;If you only want increase verbosity for a single command, there's also
&lt;code&gt;:verbose&lt;/code&gt;, which simply gets put in front of any other command. It takes the
verbosity level as count and defaults to 1:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;verb&lt;/span&gt; &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;verbose&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt;  verbose=1&lt;/span&gt;
:&lt;span class="pl-c1"&gt;10&lt;/span&gt;verb &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;verbose&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt;  verbose=10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's very often used with its default verbosity level 1 to show where an option
was set last:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;verb&lt;/span&gt; &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;ai&lt;/span&gt;?
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt;      Last set from ~/.vim/vimrc&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Naturally, the higher the verbosity level the more overwhelming the output. But
fear no more, you can simply redirect the output to a file:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;verbosefile&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-sr"&gt;/tmp/&lt;/span&gt;foo | &lt;span class="pl-c1"&gt;15&lt;/span&gt;verbose &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; | &lt;span class="pl-c1"&gt;vsplit&lt;/span&gt; &lt;span class="pl-sr"&gt;/tmp/&lt;/span&gt;foo&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also enable verbosity at starting time, with the &lt;code&gt;-V&lt;/code&gt; option. It
defaults to verbosity level 10. E.g. &lt;code&gt;vim -V5&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-profiling-startup-time" class="anchor" aria-hidden="true" href="#profiling-startup-time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Profiling startup time&lt;/h2&gt;
&lt;p&gt;Vim startup feels slow? Time to crunch some numbers:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim --startuptime /tmp/startup.log +q &amp;amp;&amp;amp; vim /tmp/startup.log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first column is the most important as it shows the elapsed absolute time. If
there is a big jump in time between two lines, the second line is either a very
big file or a file with faulty VimL code that is worth investigating.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-profiling-at-runtime" class="anchor" aria-hidden="true" href="#profiling-at-runtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Profiling at runtime&lt;/h2&gt;
&lt;p&gt;Required &lt;a href="#what-kind-of-vim-am-i-running"&gt;feature&lt;/a&gt;: &lt;code&gt;+profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Vim provides a built-in capability for profiling at runtime and is a great way
to find slow code in your environment.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;:profile&lt;/code&gt; command takes a bunch of sub-commands for specifying what to
profile.&lt;/p&gt;
&lt;p&gt;If you want to profile &lt;em&gt;everything&lt;/em&gt;, do this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:profile start /tmp/profile.log
:profile file *
:profile func *
&amp;lt;do something in Vim&amp;gt;
:qa
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vim keeps the profiling information in memory and only writes it out to the
logfile on exit. (Neovim has fixed this using &lt;code&gt;:profile dump&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Have a look at &lt;code&gt;/tmp/profile.log&lt;/code&gt;. All code that was executed during profiling
will be shown. Every line, how often it was executed and how much time it took.&lt;/p&gt;
&lt;p&gt;Jump to the bottom of the log. Here are two different sections &lt;code&gt;FUNCTIONS SORTED ON TOTAL TIME&lt;/code&gt; and &lt;code&gt;FUNCTIONS SORTED ON SELF TIME&lt;/code&gt; that are worth gold. At a
quick glance you can see which functions are taking the longest.&lt;/p&gt;
&lt;p&gt;You can use &lt;code&gt;:profile&lt;/code&gt; during startup as well:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vim --cmd 'prof start prof.log | prof file * | prof func *' test.c
:q
$ tail -50 prof.log
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-debugging-vim-scripts" class="anchor" aria-hidden="true" href="#debugging-vim-scripts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging Vim scripts&lt;/h2&gt;
&lt;p&gt;If you ever used a command-line debugger before, &lt;code&gt;:debug&lt;/code&gt; will quickly feel
familiar.&lt;/p&gt;
&lt;p&gt;Simply prepend &lt;code&gt;:debug&lt;/code&gt; to any other command and you'll be put into debug mode.
That is, the execution will stop at the first line about to be executed and that
line will be displayed.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:h &amp;gt;cont&lt;/code&gt; and below for the 6 available debugger commands and note that,
like in gdb and similar debuggers, you can also use their short forms: &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;q&lt;/code&gt;,
&lt;code&gt;n&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, and &lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Apart from that those, you're free to use any Vim command, e.g. &lt;code&gt;:echo myvar&lt;/code&gt;,
which gets executed in the context of the current position in the code.&lt;/p&gt;
&lt;p&gt;You basically get a
&lt;a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop" rel="nofollow"&gt;REPL&lt;/a&gt; by
simply using &lt;code&gt;:debug 1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It would be a pain if you had to single-step through every single line, so of
course we can define breakpoints, too. (Breakpoints are called breakpoints,
because the execution stops when they're hit, thus you can simply skip code
you're not interested in.) See &lt;code&gt;:h :breakadd&lt;/code&gt;, &lt;code&gt;:h :breakdel&lt;/code&gt;, and &lt;code&gt;:h :breaklist&lt;/code&gt; for further details.&lt;/p&gt;
&lt;p&gt;Let's assume you want to know what code is run every time you save a file:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;au&lt;/span&gt; &lt;span class="pl-c1"&gt;BufWritePost&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; signify  BufWritePost&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt;     *         call sy#start()&lt;/span&gt;
:&lt;span class="pl-c1"&gt;breakadd&lt;/span&gt; func &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;start&lt;/span&gt;
:&lt;span class="pl-c1"&gt;w&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Breakpoint in "sy#start" line 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Entering Debug mode.  Type "cont" to continue.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; function sy#start&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; line 1: if g:signify_locked&lt;/span&gt;
&amp;gt;&lt;span class="pl-c1"&gt;s&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; function sy#start&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; line 3: endif&lt;/span&gt;
&amp;gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; function sy#start&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; line 5: let sy_path = resolve(expand('%:p'))&lt;/span&gt;
&amp;gt;&lt;span class="pl-c1"&gt;q&lt;/span&gt;
:&lt;span class="pl-c1"&gt;breakdel&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, using &lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt; will repeat the previous debugger command, &lt;code&gt;s&lt;/code&gt; in
this case.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:debug&lt;/code&gt; can be used in combination with the &lt;a href="#verbosity"&gt;verbose&lt;/a&gt; option.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-debugging-syntax-files" class="anchor" aria-hidden="true" href="#debugging-syntax-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging syntax files&lt;/h2&gt;
&lt;p&gt;Syntax files are often the cause for slowdowns due to wrong and/or complex
regular expressions. If the &lt;code&gt;+profile&lt;/code&gt; &lt;a href="#what-kind-of-vim-am-i-running"&gt;feature&lt;/a&gt;
is compiled in, Vim provides the super useful &lt;code&gt;:syntime&lt;/code&gt; command.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;syntime&lt;/span&gt; &lt;span class="pl-c1"&gt;on&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; hit &amp;lt;c-l&amp;gt; a few times to redraw the window which causes the syntax rules to get applied again&lt;/span&gt;
:&lt;span class="pl-c1"&gt;syntime&lt;/span&gt; &lt;span class="pl-c1"&gt;off&lt;/span&gt;
:&lt;span class="pl-c1"&gt;syntime&lt;/span&gt; &lt;span class="pl-c1"&gt;report&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output contains important metrics. E.g. you can see which regexp takes too
long and should be optimized or which regexps are used all the time but never
even match.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:h :syntime&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-miscellaneous-1" class="anchor" aria-hidden="true" href="#miscellaneous-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Miscellaneous&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-additional-resources" class="anchor" aria-hidden="true" href="#additional-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional resources&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Resource&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.moolenaar.net/habits.html" rel="nofollow"&gt;Seven habits of effective text editing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;By Bram Moolenaar, the author of Vim.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.moolenaar.net/habits_2007.pdf" rel="nofollow"&gt;Seven habits of effective text editing 2.0 (PDF)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;See above.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.ibm.com/developerworks/views/linux/libraryview.jsp?sort_order=asc&amp;amp;sort_by=Title&amp;amp;search_by=scripting+the+vim+editor" rel="nofollow"&gt;IBM DeveloperWorks: Scripting the Vim editor&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Five-part series on Vim scripting.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://learnvimscriptthehardway.stevelosh.com" rel="nofollow"&gt;Learn Vimscript the Hard Way&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Develop a Vim plugin from scratch.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.amazon.com/Practical-Vim-Edit-Speed-Thought/dp/1680501275/" rel="nofollow"&gt;Practical Vim (2nd Edition)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hands down the best book about Vim.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.viemu.com/a-why-vi-vim.html" rel="nofollow"&gt;Why, oh WHY, do those #?@! nutheads use vi?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Common misconceptions explained.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://stackoverflow.com/a/1220118" rel="nofollow"&gt;Your problem with Vim is that you don't grok vi&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Concise, informative and correct. A real gem.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-screencasts" class="anchor" aria-hidden="true" href="#screencasts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screencasts&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://vimcasts.org/episodes/archive" rel="nofollow"&gt;vimcasts.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCXPHFM88IlFn68OmLwtPmZA" rel="nofollow"&gt;By wincent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://derekwyatt.org/vim/tutorials/index.html" rel="nofollow"&gt;By Derek Wyatt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-vim-distributions" class="anchor" aria-hidden="true" href="#vim-distributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim distributions&lt;/h2&gt;
&lt;p&gt;Vim distributions are bundles of custom settings and plugins for Vim.&lt;/p&gt;
&lt;p&gt;More advanced users know how to configure their editor anyway, so distributions
are mostly targeted at beginners. If you think about that, it's quite
paradoxical though: Making it easier by adding even more things to learn about?&lt;/p&gt;
&lt;p&gt;I know that many people don't want to spend hours and hours on customizing an
editor (and actually you never stop customizing your vimrc when you finally got
hooked), but eventually you only get efficient in Vim when you take the time to
learn it properly.&lt;/p&gt;
&lt;p&gt;Repeat after me: "A programmer should know their tools."&lt;/p&gt;
&lt;p&gt;Anyway, if you know what you're doing, you might draw some inspiration from
looking at a few distributions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cream.sourceforge.net" rel="nofollow"&gt;cream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carlhuda/janus.git"&gt;janus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SpaceVim/SpaceVim"&gt;spacevim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spf13/spf13-vim"&gt;spf13&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-standard-plugins" class="anchor" aria-hidden="true" href="#standard-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Standard plugins&lt;/h2&gt;
&lt;p&gt;Many people are surprised by the fact that Vim comes with a handful of standard
plugins. Some get loaded by default (&lt;code&gt;:e $VIMRUNTIME/plugin&lt;/code&gt;) and some are not
(&lt;code&gt;:e $VIMRUNTIME/pack/dist/opt&lt;/code&gt;). Read &lt;code&gt;:h pack-add&lt;/code&gt; on how to source the
latter.&lt;/p&gt;
&lt;p&gt;Most of the plugins that get loaded by default will never get used, though.
Disable them as you see fit. They will still be shown as sourced
(&lt;code&gt;:scriptnames&lt;/code&gt;), but only the first lines actually get read before Vim bails
out. No further code (mappings, commands, logic) will be processed.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Plugin&lt;/th&gt;
&lt;th&gt;Disable it using..&lt;/th&gt;
&lt;th&gt;Help&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2html&lt;/td&gt;
&lt;td&gt;&lt;code&gt;let g:loaded_2html_plugin = 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h 2html&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getscript&lt;/td&gt;
&lt;td&gt;&lt;code&gt;let g:loaded_getscriptPlugin = 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h pi_getscript&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gzip&lt;/td&gt;
&lt;td&gt;&lt;code&gt;let g:loaded_gzip = 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h pi_gzip&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;logipat&lt;/td&gt;
&lt;td&gt;&lt;code&gt;let g:loaded_logipat = 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h pi_logipat&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;matchparen&lt;/td&gt;
&lt;td&gt;&lt;code&gt;let g:loaded_matchparen = 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h pi_paren&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;netrw&lt;/td&gt;
&lt;td&gt;&lt;code&gt;let g:loaded_netrwPlugin = 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h pi_netrw&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rrhelper&lt;/td&gt;
&lt;td&gt;&lt;code&gt;let g:loaded_rrhelper = 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:e $VIMRUNTIME/plugin/rrhelper.vim&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spellfile&lt;/td&gt;
&lt;td&gt;&lt;code&gt;let g:loaded_spellfile_plugin = 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h spellfile.vim&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tar&lt;/td&gt;
&lt;td&gt;&lt;code&gt;let g:loaded_tarPlugin = 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h pi_tar&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vimball&lt;/td&gt;
&lt;td&gt;&lt;code&gt;let g:loaded_vimballPlugin = 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h pi_vimball&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zip&lt;/td&gt;
&lt;td&gt;&lt;code&gt;let g:loaded_zipPlugin = 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h pi_zip&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-map-capslock-to-control" class="anchor" aria-hidden="true" href="#map-capslock-to-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Map CapsLock to Control&lt;/h2&gt;
&lt;p&gt;CapsLock belongs to the most useless keys on your keyboard, but it's much easier
to reach than the Control key, since it lies on your &lt;a href="https://raw.githubusercontent.com/mhinz/vim-galore/master/static/images/content-homerow.png" rel="nofollow"&gt;home
row&lt;/a&gt;.
Mapping CapsLock to Control is a great way to prevent or at least reduce
&lt;a href="https://de.wikipedia.org/wiki/Repetitive-Strain-Injury-Syndrom" rel="nofollow"&gt;RSI&lt;/a&gt; if you
program a lot.&lt;/p&gt;
&lt;p&gt;Attention: When you get used to it, you can't live without it anymore.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;System Preferences -&amp;gt; Keyboard -&amp;gt; Keyboard Tab -&amp;gt; Modifier Keys&lt;/code&gt;. Change
"CapsLock" to "Control".&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;To change the keys in X, put this in your &lt;code&gt;~/.xmodmap&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;remove Lock = Caps_Lock
keysym Caps_Lock = Control_L
add Control = Control_L
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Afterwards source it via &lt;code&gt;$ xmodmap ~/.xmodmap&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;An alternative would be using &lt;a href="https://github.com/oblitum/caps2esc"&gt;caps2esc&lt;/a&gt; or
&lt;a href="https://github.com/alols/xcape"&gt;xcape&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;See &lt;a href="http://superuser.com/questions/764782/map-caps-lock-to-control-in-windows-8-1" rel="nofollow"&gt;superuser.com: Map Caps-Lock to Control in Windows
8.1&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-generating-html-from-buffer" class="anchor" aria-hidden="true" href="#generating-html-from-buffer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generating HTML from buffer&lt;/h2&gt;
&lt;p&gt;Generate HTML from any buffer using &lt;code&gt;:TOhtml&lt;/code&gt; from the 2html &lt;a href="#standard-plugins"&gt;standard
plugin&lt;/a&gt;. The output can be used for printing or easy web
publishing.&lt;/p&gt;
&lt;p&gt;The command creates a new buffer of the same name with &lt;code&gt;.html&lt;/code&gt; appended. The
colors are the same as seen in Vim. They depend on the
&lt;a href="#colorschemes"&gt;colorscheme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The plugin knows several options to finetune the output, e.g. for setting the
encoding and font.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:h :TOhtml&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-easter-eggs" class="anchor" aria-hidden="true" href="#easter-eggs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Easter eggs&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Ni!&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Do you demand a shrubbery?&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:h 'sm'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;NOTE: Use of the short form is rated PG.&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:h 42&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;What is the meaning of life, the universe and everything? Douglas Adams, the only person who knew what this question really was about is now dead, unfortunately.  So now you might wonder what the meaning of death is...&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:h UserGettingBored&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;When the user presses the same key 42 times. Just kidding! :-)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:h bar&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ceci n'est pas une pipe.&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:h holy-grail&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;You found it, Arthur!&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:h map-modes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:nunmap can also be used outside of a monastery.&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:help!&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;E478: Don't panic!&lt;/code&gt; (Glitch? When used in a help buffer (&lt;code&gt;buftype=help&lt;/code&gt;) this works like &lt;code&gt;:h help.txt&lt;/code&gt; instead.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:smile&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Try it out yourself. ;-) Added in 7.4.1005.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-why-hjkl-for-navigation" class="anchor" aria-hidden="true" href="#why-hjkl-for-navigation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why hjkl for navigation?&lt;/h2&gt;
&lt;p&gt;When &lt;a href="https://en.wikipedia.org/wiki/Bill_Joy" rel="nofollow"&gt;Bill Joy&lt;/a&gt; created
&lt;a href="https://en.wikipedia.org/wiki/Vi" rel="nofollow"&gt;vi&lt;/a&gt;, a predecessor of Vim, he did it on a
&lt;a href="https://en.wikipedia.org/wiki/ADM-3A" rel="nofollow"&gt;ADM-3A&lt;/a&gt; which had no extra cursor buttons
but used, you might already guessed it, hjkl instead.&lt;/p&gt;
&lt;p&gt;Keyboard layout: &lt;a href="https://raw.githubusercontent.com/mhinz/vim-galore/master/static/images/content-adm-3a-layout.jpg" rel="nofollow"&gt;click&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This also shows why &lt;code&gt;~&lt;/code&gt; is used to denote the home directory on Unix systems.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-common-problems-1" class="anchor" aria-hidden="true" href="#common-problems-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common problems&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-editing-small-files-is-slow" class="anchor" aria-hidden="true" href="#editing-small-files-is-slow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editing small files is slow&lt;/h2&gt;
&lt;p&gt;There are two things which can have a huge impact on performance:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Complex &lt;strong&gt;regular expressions&lt;/strong&gt;. Particular the Ruby syntax file caused
people to have slowdowns in the past. (Also see &lt;a href="#debugging-syntax-files"&gt;Debugging syntax files&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Screen redraws&lt;/strong&gt;. Some features force all lines to redraw.&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Typical culprit&lt;/th&gt;
&lt;th&gt;Why?&lt;/th&gt;
&lt;th&gt;Solution?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set cursorline&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Causes all lines to redraw.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:set nocursorline&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set cursorcolumn&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Causes all lines to redraw.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:set nocursorcolumn&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set relativenumber&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Causes all lines to redraw.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:set norelativenumber&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set foldmethod=syntax&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If the syntax file is slow already, this makes it even worse.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:set foldmethod=manual&lt;/code&gt;, &lt;code&gt;:set foldmethod=marker&lt;/code&gt; or &lt;a href="https://github.com/Konfekt/FastFold"&gt;FastFold&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set synmaxcol=3000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Due to internal representation, Vim has problems with long lines in general. Highlights columns till column 3000.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:set synmaxcol=200&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;matchparen.vim&lt;/td&gt;
&lt;td&gt;Loaded by default. Uses regular expressions to find the accompanying parenthesis.&lt;/td&gt;
&lt;td&gt;Disable plugin: &lt;code&gt;:h matchparen&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: You only need to do this if you experience actual performance
drawbacks. In most cases using the things mentioned above is absolutely fine.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-editing-huge-files-is-slow" class="anchor" aria-hidden="true" href="#editing-huge-files-is-slow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editing huge files is slow&lt;/h2&gt;
&lt;p&gt;The biggest issue with big files is, that Vim reads the whole file at once. This
is done due to how buffers are represented internally.
(&lt;a href="https://groups.google.com/forum/#!topic/vim_dev/oY3i8rqYGD4/discussion" rel="nofollow"&gt;Discussion on vim_dev@&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;If you only want to read, &lt;code&gt;tail hugefile | vim -&lt;/code&gt; is a good workaround.&lt;/p&gt;
&lt;p&gt;If you can live without syntax, settings and plugins for the moment:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vim -u NONE -N
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This should make navigation quite a lot faster, especially since no expensive
regular expressions for syntax highlighting are used. You should also tell Vim
not to use swapfiles and viminfo files to avoid long delays on writing:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vim -n -u NONE -i NONE -N
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Putting it in a nutshell, try to avoid using Vim when intending to write really
huge files. :\&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bracketed-paste-or-why-do-i-have-to-set-paste-all-the-time" class="anchor" aria-hidden="true" href="#bracketed-paste-or-why-do-i-have-to-set-paste-all-the-time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bracketed paste (or why do I have to set 'paste' all the time?)&lt;/h2&gt;
&lt;p&gt;Bracketed paste mode allows terminal emulators to distinguish between typed text
and pasted text.&lt;/p&gt;
&lt;p&gt;Did you ever tried pasting code into Vim and afterwards everything seemed messed
up?&lt;/p&gt;
&lt;p&gt;This only happens if you paste via &lt;code&gt;cmd+v&lt;/code&gt;, &lt;code&gt;shift-insert&lt;/code&gt;, &lt;code&gt;middle-click&lt;/code&gt; etc.
because then you're just throwing text at the terminal emulator. Vim doesn't
know that you just pasted the text, it thinks you're an extremely fast typist.
Accordingly, it tries to indent the lines and fails.&lt;/p&gt;
&lt;p&gt;Obviously this is not an issue, if you paste using Vim's registers, e.g. &lt;code&gt;"+p&lt;/code&gt;,
because then Vim knows that you're actually pasting.&lt;/p&gt;
&lt;p&gt;To workaround this, you have to &lt;code&gt;:set paste&lt;/code&gt;, so it gets pasted as-is. See &lt;code&gt;:h 'paste'&lt;/code&gt; and &lt;code&gt;:h 'pastetoggle'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you're fed up with toggling &lt;code&gt;'paste'&lt;/code&gt; all the time, have a look at this fine
plugin that does it for you:
&lt;a href="https://github.com/ConradIrwin/vim-bracketed-paste"&gt;bracketed-paste&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Additional read from the same author as the plugin:
&lt;a href="http://cirw.in/blog/bracketed-paste" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Neovim&lt;/strong&gt;: Neovim tries to make all of this much more seamless and sets
bracketed paste mode automatically if the terminal emulator supports it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-delays-when-using-escape-key-in-terminal" class="anchor" aria-hidden="true" href="#delays-when-using-escape-key-in-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Delays when using escape key in terminal&lt;/h2&gt;
&lt;p&gt;If you live in the command-line, you probably use a so-called &lt;em&gt;terminal
emulator&lt;/em&gt; like xterm, gnome-terminal, iTerm2, etc. (opposed to a real
&lt;a href="https://en.wikipedia.org/wiki/Computer_terminal" rel="nofollow"&gt;terminal&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Like their ancestors, terminal emulators use &lt;a href="https://en.wikipedia.org/wiki/Escape_sequence" rel="nofollow"&gt;escape
sequences&lt;/a&gt; (or &lt;em&gt;control
sequences&lt;/em&gt;) to control things like moving the cursor, changing text colors, etc.
They're simply strings of ASCII characters starting with an escape character
(displayed in &lt;a href="https://en.wikipedia.org/wiki/Caret_notation" rel="nofollow"&gt;caret notation&lt;/a&gt; as
&lt;code&gt;^[&lt;/code&gt;). When such a string arrives, the terminal emulator looks up the
accompanying action in the &lt;a href="https://en.wikipedia.org/wiki/Terminfo" rel="nofollow"&gt;terminfo&lt;/a&gt;
database.&lt;/p&gt;
&lt;p&gt;To make the problem clearer, I'll explain mapping timeouts first. They always
happen when there's ambiguity between mappings:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; ,&lt;span class="pl-c1"&gt;a&lt;/span&gt;  :&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
:&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; ,&lt;span class="pl-c1"&gt;ab&lt;/span&gt; :&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both mappings work as expected, but when typing &lt;code&gt;,a&lt;/code&gt;, there will be a delay of 1
second, because Vim waits whether the user keys in another &lt;code&gt;b&lt;/code&gt; or not.&lt;/p&gt;
&lt;p&gt;Escape sequences pose the same problem:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;esc&amp;gt;&lt;/code&gt; is used a lot for returning to normal mode or quitting an action.&lt;/li&gt;
&lt;li&gt;Cursor keys are encoded using escape sequences.&lt;/li&gt;
&lt;li&gt;Vim expects &lt;kbd&gt;Alt&lt;/kbd&gt; (also called &lt;em&gt;Meta key&lt;/em&gt;) to send a proper 8-bit
encoding with the high bit set, but many terminal emulators don't support it
(or don't enable it by default) and send an escape sequence instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can test the above like this: &lt;code&gt;vim -u NONE -N&lt;/code&gt; and type &lt;code&gt;i&amp;lt;c-v&amp;gt;&amp;lt;left&amp;gt;&lt;/code&gt; and
you'll see a sequence inserted that starts with &lt;code&gt;^[&lt;/code&gt; which denotes the escape
character.&lt;/p&gt;
&lt;p&gt;Putting it in a nutshell, Vim has a hard time distinguishing between a typed
&lt;code&gt;&amp;lt;esc&amp;gt;&lt;/code&gt; character and a proper escape sequence.&lt;/p&gt;
&lt;p&gt;By default, Vim uses &lt;code&gt;:set timeout timeoutlen=1000&lt;/code&gt;, so it delays on ambiguity
of mappings &lt;em&gt;and&lt;/em&gt; key codes by 1 second. This is a sane value for mappings, but
you can define the key code timeout on its own which is the most common
workaround for this entire issue:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;timeout&lt;/span&gt;&lt;span class="pl-c"&gt;           &lt;span class="pl-c"&gt;"&lt;/span&gt; for mappings&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;timeoutlen&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;"&lt;/span&gt; default value&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;ttimeout&lt;/span&gt;&lt;span class="pl-c"&gt;          &lt;span class="pl-c"&gt;"&lt;/span&gt; for key codes&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;ttimeoutlen&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;&lt;span class="pl-c"&gt;    &lt;span class="pl-c"&gt;"&lt;/span&gt; unnoticeable small value&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Under &lt;code&gt;:h ttimeout&lt;/code&gt; you find a small table showing the relationship between
these options.&lt;/p&gt;
&lt;p&gt;If you're using tmux between Vim and your terminal emulator, also put this in
your &lt;code&gt;~/.tmux.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; -sg escape-time 0&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-function-search-undo" class="anchor" aria-hidden="true" href="#function-search-undo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Function search undo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A search pattern in a command (&lt;code&gt;/&lt;/code&gt;, &lt;code&gt;:substitute&lt;/code&gt;, ...) changes the "last used
search pattern". (It's saved in the &lt;code&gt;/&lt;/code&gt; register; print it with &lt;code&gt;:echo @/&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;A simple text change can be redone with &lt;code&gt;.&lt;/code&gt;. (It's saved in the &lt;code&gt;.&lt;/code&gt; register;
print it with &lt;code&gt;:echo @.&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both things are &lt;em&gt;not&lt;/em&gt; the case, if you do them from a function, though! Thus you
can't easily highlight words from a function or redo the text changes made by
it.&lt;/p&gt;
&lt;p&gt;Help: &lt;code&gt;:h function-search-undo&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-technical-quirks-1" class="anchor" aria-hidden="true" href="#technical-quirks-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technical quirks&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-newline-used-for-nul" class="anchor" aria-hidden="true" href="#newline-used-for-nul"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Newline used for NUL&lt;/h2&gt;
&lt;p&gt;NUL characters (&lt;code&gt;\0&lt;/code&gt;) in a file, are stored as newline (&lt;code&gt;\n&lt;/code&gt;) in memory and
displayed in a buffer as &lt;code&gt;^@&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;man 7 ascii&lt;/code&gt; and &lt;code&gt;:h NL-used-for-Nul&lt;/code&gt; for more information.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-terminology-1" class="anchor" aria-hidden="true" href="#terminology-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminology&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-vim-script-vimscript-viml" class="anchor" aria-hidden="true" href="#vim-script-vimscript-viml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim script? Vimscript? VimL?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Vim script&lt;/code&gt;, &lt;code&gt;Vimscript&lt;/code&gt;, and &lt;code&gt;VimL&lt;/code&gt; all refer to the same thing: The
programming language used for scripting Vim. Even though
&lt;a href="https://github.com/vim/vim/commit/b544f3c81f1e6a50322855681ac266ffaa8e313c"&gt;8.0.360&lt;/a&gt;
changed all references to &lt;code&gt;VimL&lt;/code&gt; to &lt;code&gt;Vim script&lt;/code&gt;, which can now be considered
the official term, &lt;code&gt;VimL&lt;/code&gt; is still widespread all over the internet.&lt;/p&gt;
&lt;p&gt;No matter which term you use, everyone will understand it.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mhinz</author><guid isPermaLink="false">https://github.com/mhinz/vim-galore</guid><pubDate>Sat, 02 Nov 2019 00:00:00 GMT</pubDate></item><item><title>terryma/vim-multiple-cursors #5 in Vim script, Today</title><link>https://github.com/terryma/vim-multiple-cursors</link><description>&lt;p&gt;&lt;i&gt;True Sublime Text style multiple selections for Vim&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vim-multiple-cursors" class="anchor" aria-hidden="true" href="#vim-multiple-cursors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vim-multiple-cursors&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/terryma/vim-multiple-cursors" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1931d6e1f8c34944c6aae4e2ee0287cea82b3365/68747470733a2f2f7472617669732d63692e6f72672f74657272796d612f76696d2d6d756c7469706c652d637572736f72732e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/terryma/vim-multiple-cursors.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#about"&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mapping"&gt;Mapping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#settings"&gt;Settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#interactions-with-other-plugins"&gt;Interactions with other plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#highlight"&gt;Highlight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credit"&gt;Credit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/paradigm/vim-multicursor"&gt;There&lt;/a&gt; &lt;a href="https://github.com/felixr/vim-multiedit"&gt;have&lt;/a&gt; &lt;a href="https://github.com/hlissner/vim-multiedit"&gt;been&lt;/a&gt; &lt;a href="https://github.com/adinapoli/vim-markmultiple"&gt;many&lt;/a&gt; &lt;a href="https://github.com/AndrewRadev/multichange.vim"&gt;attempts&lt;/a&gt; at bringing Sublime Text's awesome &lt;a href="http://www.sublimetext.com/docs/2/multiple_selection_with_the_keyboard.html" rel="nofollow"&gt;multiple selection&lt;/a&gt; feature into Vim, but none so far have been in my opinion a faithful port that is simplistic to use, yet powerful and intuitive enough for an existing Vim user. &lt;a href="http://github.com/terryma/vim-multiple-cursors"&gt;vim-multiple-cursors&lt;/a&gt; is yet another attempt at that.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-its-great-for-quick-refactoring" class="anchor" aria-hidden="true" href="#its-great-for-quick-refactoring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;It's great for quick refactoring&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/example1.gif?raw=true"&gt;&lt;img src="assets/example1.gif?raw=true" alt="Example1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vim command sequence: &lt;code&gt;fp&amp;lt;C-n&amp;gt;&amp;lt;C-n&amp;gt;&amp;lt;C-n&amp;gt;cname&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-add-a-cursor-to-each-line-of-your-visual-selection" class="anchor" aria-hidden="true" href="#add-a-cursor-to-each-line-of-your-visual-selection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add a cursor to each line of your visual selection&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/example2.gif?raw=true"&gt;&lt;img src="assets/example2.gif?raw=true" alt="Example2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vim command sequence: &lt;code&gt;vip&amp;lt;C-n&amp;gt;i"&amp;lt;Right&amp;gt;&amp;lt;Right&amp;gt;&amp;lt;Right&amp;gt;",&amp;lt;Esc&amp;gt;vipgJ$r]Idays = [&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-match-characters-from-visual-selection" class="anchor" aria-hidden="true" href="#match-characters-from-visual-selection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Match characters from visual selection&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/example3.gif?raw=true"&gt;&lt;img src="assets/example3.gif?raw=true" alt="Example3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vim command sequence: &lt;code&gt;df[$r,0f,v&amp;lt;C-n&amp;gt;…&amp;lt;C-n&amp;gt;c&amp;lt;CR&amp;gt;&amp;lt;Up&amp;gt;&amp;lt;Del&amp;gt;&amp;lt;Right&amp;gt;&amp;lt;Right&amp;gt;&amp;lt;Right&amp;gt;&amp;lt;Del&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-use-the-command-to-match-regexp" class="anchor" aria-hidden="true" href="#use-the-command-to-match-regexp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use the command to match regexp&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/example4.gif?raw=true"&gt;&lt;img src="assets/example4.gif?raw=true" alt="Example4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To see what keystrokes are used for the above examples, see &lt;a href="https://github.com/terryma/vim-multiple-cursors/wiki/Keystrokes-for-example-gifs"&gt;the wiki page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Install using &lt;a href="http://github.com/tpope/vim-pathogen"&gt;Pathogen&lt;/a&gt;, &lt;a href="http://github.com/gmarik/vundle"&gt;Vundle&lt;/a&gt;, &lt;a href="http://github.com/Shougo/neobundle.vim"&gt;Neobundle&lt;/a&gt;, &lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;, or your favorite Vim package manager.&lt;/p&gt;
&lt;p&gt;Requires vim 7.4 or newer for full functionality.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-vim-plug-instructions" class="anchor" aria-hidden="true" href="#vim-plug-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vim-plug instructions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Paste this block into the top of &lt;code&gt;~/.vimrc&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#begin&lt;/span&gt;()

Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;terryma/vim-multiple-cursors&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#end&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Start vim and execute &lt;code&gt;:PlugInstall&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-normal-mode--visual-mode" class="anchor" aria-hidden="true" href="#normal-mode--visual-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;normal mode / visual mode&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;start:          &lt;code&gt;&amp;lt;C-n&amp;gt;&lt;/code&gt; start multicursor and add a &lt;em&gt;virtual cursor + selection&lt;/em&gt; on the match
&lt;ul&gt;
&lt;li&gt;next:         &lt;code&gt;&amp;lt;C-n&amp;gt;&lt;/code&gt; add a new &lt;em&gt;virtual cursor + selection&lt;/em&gt; on the next match&lt;/li&gt;
&lt;li&gt;skip:         &lt;code&gt;&amp;lt;C-x&amp;gt;&lt;/code&gt; skip the next match&lt;/li&gt;
&lt;li&gt;prev:         &lt;code&gt;&amp;lt;C-p&amp;gt;&lt;/code&gt; remove current &lt;em&gt;virtual cursor + selection&lt;/em&gt; and go back on previous match&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;select all:     &lt;code&gt;&amp;lt;A-n&amp;gt;&lt;/code&gt; start multicursor and directly select all matches&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can now change the &lt;em&gt;virtual cursors + selection&lt;/em&gt; with &lt;strong&gt;visual mode&lt;/strong&gt; commands.
For instance: &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;I&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt; work without any issues.
You could also go to &lt;strong&gt;normal mode&lt;/strong&gt; by pressing &lt;code&gt;v&lt;/code&gt; and use normal commands there.&lt;/p&gt;
&lt;p&gt;At any time, you can press &lt;code&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt; to exit back to regular Vim.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: start with &lt;code&gt;g&amp;lt;C-n&amp;gt;&lt;/code&gt; to match without boundaries (behaves like &lt;code&gt;g*&lt;/code&gt; instead of &lt;code&gt;*&lt;/code&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-visual-mode-when-multiple-lines-are-selected" class="anchor" aria-hidden="true" href="#visual-mode-when-multiple-lines-are-selected"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;visual mode when multiple lines are selected&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;start: &lt;code&gt;&amp;lt;C-n&amp;gt;&lt;/code&gt; add &lt;em&gt;virtual cursors&lt;/em&gt; on each line&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can now change the &lt;em&gt;virtual cursors&lt;/em&gt; with &lt;strong&gt;normal mode&lt;/strong&gt; commands.
For instance: &lt;code&gt;ciw&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-command" class="anchor" aria-hidden="true" href="#command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;command&lt;/h3&gt;
&lt;p&gt;The command &lt;code&gt;MultipleCursorsFind&lt;/code&gt; accepts a range and a pattern (regexp), it creates a &lt;em&gt;visual cursor&lt;/em&gt; at the end of each match.
If no range is passed in, then it defaults to the entire buffer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mapping" class="anchor" aria-hidden="true" href="#mapping"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mapping&lt;/h2&gt;
&lt;p&gt;If you don't like the plugin taking over your key bindings, you can turn it off and reassign them the way you want:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_use_default_mapping&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Default mapping&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_start_word_key&lt;/span&gt;      &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;C-n&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_select_all_word_key&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;A-n&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_start_key&lt;/span&gt;           &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;g&amp;lt;C-n&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_select_all_key&lt;/span&gt;      &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;g&amp;lt;A-n&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_next_key&lt;/span&gt;            &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;C-n&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_prev_key&lt;/span&gt;            &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;C-p&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_skip_key&lt;/span&gt;            &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;C-x&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_quit_key&lt;/span&gt;            &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;Esc&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Please make sure to always map something to &lt;code&gt;g:multi_cursor_quit_key&lt;/code&gt;, otherwise you'll have a tough time quitting from multicursor mode.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-settings" class="anchor" aria-hidden="true" href="#settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Settings&lt;/h2&gt;
&lt;p&gt;Currently there are four additional global settings one can tweak:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gmulti_cursor_exit_from_visual_mode-default-0" class="anchor" aria-hidden="true" href="#gmulti_cursor_exit_from_visual_mode-default-0"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;g:multi_cursor_exit_from_visual_mode&lt;/code&gt; (Default: 0)&lt;/h3&gt;
&lt;p&gt;If set to 1, then pressing &lt;code&gt;g:multi_cursor_quit_key&lt;/code&gt; in &lt;em&gt;Visual&lt;/em&gt; mode will quit and
delete all existing cursors, just skipping normal mode with multiple cursors.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gmulti_cursor_exit_from_insert_mode-default-0" class="anchor" aria-hidden="true" href="#gmulti_cursor_exit_from_insert_mode-default-0"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;g:multi_cursor_exit_from_insert_mode&lt;/code&gt; (Default: 0)&lt;/h3&gt;
&lt;p&gt;If set to 1, then pressing &lt;code&gt;g:multi_cursor_quit_key&lt;/code&gt; in &lt;em&gt;Insert&lt;/em&gt; mode will quit and
delete all existing cursors, just skipping normal mode with multiple cursors.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gmulti_cursor_normal_maps-default-see-below" class="anchor" aria-hidden="true" href="#gmulti_cursor_normal_maps-default-see-below"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;g:multi_cursor_normal_maps&lt;/code&gt; (Default: see below)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;{'@': 1, 'F': 1, 'T': 1, '[': 1, '\': 1, ']': 1, '!': 1, '"': 1, 'c': 1, 'd': 1, 'f': 1, 'g': 1, 'm': 1, 'q': 1, 'r': 1, 't': 1, 'y': 1, 'z': 1, '&amp;lt;': 1, '=': 1, '&amp;gt;': 1}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Any key in this map (values are ignored) will cause multi-cursor &lt;em&gt;Normal&lt;/em&gt; mode
to pause for map completion just like normal vim. Otherwise keys mapped in
normal mode will "fail to replay" when multiple cursors are active.
For example: &lt;code&gt;{'d':1}&lt;/code&gt; makes normal-mode command &lt;code&gt;dw&lt;/code&gt; work in multi-cursor mode.&lt;/p&gt;
&lt;p&gt;The default list contents should work for anybody, unless they have remapped a
key from an operator-pending command to a non-operator-pending command or
vice versa.&lt;/p&gt;
&lt;p&gt;These keys must be manually listed because vim doesn't provide a way to
automatically see which keys &lt;em&gt;start&lt;/em&gt; mappings, and trying to run motion commands
such as &lt;code&gt;j&lt;/code&gt; as if they were operator-pending commands can break things.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gmulti_cursor_visual_maps-default-see-below" class="anchor" aria-hidden="true" href="#gmulti_cursor_visual_maps-default-see-below"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;g:multi_cursor_visual_maps&lt;/code&gt; (Default: see below)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;{'T': 1, 'a': 1, 't': 1, 'F': 1, 'f': 1, 'i': 1}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Same principle as &lt;code&gt;g:multi_cursor_normal_maps&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-interactions-with-other-plugins" class="anchor" aria-hidden="true" href="#interactions-with-other-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interactions with other plugins&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-multiple_cursors_beforemultiple_cursors_after-default-nothing" class="anchor" aria-hidden="true" href="#multiple_cursors_beforemultiple_cursors_after-default-nothing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Multiple_cursors_before/Multiple_cursors_after&lt;/code&gt; (Default: &lt;code&gt;nothing&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;Other plugins may be incompatible in insert mode.
That is why we provide hooks to disable those plug-ins when vim-multiple-cursors is active:&lt;/p&gt;
&lt;p&gt;For example, if you are using &lt;a href="https://github.com/Shougo/neocomplete.vim"&gt;Neocomplete&lt;/a&gt;,
add this to your vimrc to prevent conflict:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;Multiple_cursors_before&lt;/span&gt;()
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:NeoCompleteLock&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;==&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;
    &lt;span class="pl-c1"&gt;exe&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NeoCompleteLock&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;endif&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;Multiple_cursors_after&lt;/span&gt;()
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:NeoCompleteUnlock&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;==&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;
    &lt;span class="pl-c1"&gt;exe&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NeoCompleteUnlock&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;endif&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Plugins themselves can register &lt;code&gt;User&lt;/code&gt; autocommands on &lt;code&gt;MultipleCursorsPre&lt;/code&gt; and
&lt;code&gt;MultipleCursorsPost&lt;/code&gt; for automatic integration.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-highlight" class="anchor" aria-hidden="true" href="#highlight"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Highlight&lt;/h3&gt;
&lt;p&gt;The plugin uses the highlight group &lt;code&gt;multiple_cursors_cursor&lt;/code&gt; and &lt;code&gt;multiple_cursors_visual&lt;/code&gt; to highlight the virtual cursors and their visual selections respectively. You can customize them by putting something similar like the following in your vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Default highlighting (see help :highlight and help :highlight-link)&lt;/span&gt;
&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; multiple_cursors_cursor &lt;span class="pl-c1"&gt;term&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;reverse&lt;/span&gt; cterm&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;reverse&lt;/span&gt; &lt;span class="pl-c1"&gt;gui&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;reverse&lt;/span&gt;
&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt; &lt;span class="pl-v"&gt;multiple_cursors_visual&lt;/span&gt; &lt;span class="pl-v"&gt;Visual&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-q-altn-doesnt-seem-to-work-in-vim-but-works-in-gvim-why" class="anchor" aria-hidden="true" href="#q-altn-doesnt-seem-to-work-in-vim-but-works-in-gvim-why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Q&lt;/strong&gt; &lt;kbd&gt;ALT&lt;/kbd&gt;+&lt;kbd&gt;n&lt;/kbd&gt; doesn't seem to work in VIM but works in gVIM, why?&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt; This is a well known terminal/Vim &lt;a href="http://vim.wikia.com/wiki/Get_Alt_key_to_work_in_terminal" rel="nofollow"&gt;issue&lt;/a&gt;, different terminal have different ways to send &lt;code&gt;Alt+key&lt;/code&gt;.
Try adding this in your &lt;code&gt;.vimrc&lt;/code&gt; and &lt;strong&gt;make sure to replace the string&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;has&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gui_running&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;in Insert mode, type Ctrl+v Alt+n here&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;A-n&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or remap the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_start_key&lt;/span&gt;
&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_select_all_key&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-q-ctrln-doesnt-seem-to-work-in-gvim" class="anchor" aria-hidden="true" href="#q-ctrln-doesnt-seem-to-work-in-gvim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Q&lt;/strong&gt; &lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;n&lt;/kbd&gt; doesn't seem to work in gVIM?&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt; Try setting &lt;code&gt;set selection=inclusive&lt;/code&gt; in your &lt;code&gt;~/.gvimrc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt; Alternatively, you can just temporarily disable &lt;em&gt;exclusive&lt;/em&gt; selection whenever the plugin is active:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;augroup&lt;/span&gt; &lt;span class="pl-en"&gt;MultipleCursorsSelectionFix&lt;/span&gt;
    &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; MultipleCursorsPre  &lt;span class="pl-k"&gt;if&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;selection&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt;# &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;exclusive&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; | &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_save_selection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;selection&lt;/span&gt; | &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;selection&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;inclusive | &lt;span class="pl-k"&gt;endif&lt;/span&gt;
    &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; MultipleCursorsPost &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;g:multi_cursor_save_selection&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) | &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;selection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_save_selection&lt;/span&gt; | &lt;span class="pl-k"&gt;unlet&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;multi_cursor_save_selection&lt;/span&gt; | &lt;span class="pl-k"&gt;endif&lt;/span&gt;
&lt;span class="pl-k"&gt;augroup&lt;/span&gt; &lt;span class="pl-k"&gt;END&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-q-deoplete-insert-giberrish-how-to-fix-this" class="anchor" aria-hidden="true" href="#q-deoplete-insert-giberrish-how-to-fix-this"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Q&lt;/strong&gt; deoplete insert giberrish, how to fix this?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt; use the &lt;code&gt;Multiple_cursors&lt;/code&gt; functions, add this in your vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;    func&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;Multiple_cursors_before&lt;/span&gt;()
      &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;deoplete#is_enabled&lt;/span&gt;()
        &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;deoplete#disable&lt;/span&gt;()
        &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;deoplete_is_enable_before_multi_cursors&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
      &lt;span class="pl-k"&gt;else&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;deoplete_is_enable_before_multi_cursors&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
      &lt;span class="pl-k"&gt;endif&lt;/span&gt;
    endfunc
    func&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;Multiple_cursors_after&lt;/span&gt;()
      &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;deoplete_is_enable_before_multi_cursors&lt;/span&gt;
        &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;deoplete#enable&lt;/span&gt;()
      &lt;span class="pl-k"&gt;endif&lt;/span&gt;
    endfunc&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-q-is-it-also-working-on-mac" class="anchor" aria-hidden="true" href="#q-is-it-also-working-on-mac"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Q&lt;/strong&gt; is it also working on Mac?&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt; On Mac OS, &lt;a href="https://code.google.com/p/macvim/" rel="nofollow"&gt;MacVim&lt;/a&gt; is known to work.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-q-how-can-i-select-n-keywords-with-several-keystrokes-200c-n-does-not-work" class="anchor" aria-hidden="true" href="#q-how-can-i-select-n-keywords-with-several-keystrokes-200c-n-does-not-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Q&lt;/strong&gt; How can I select &lt;code&gt;n&lt;/code&gt; keywords with several keystrokes? &lt;code&gt;200&amp;lt;C-n&amp;gt;&lt;/code&gt; does not work.&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt; You can use :MultipleCursorsFind keyword. I have this binding in my vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;M-j&amp;gt;&lt;/span&gt; :MultipleCursorsFind &lt;span class="pl-c1"&gt;&amp;lt;C-R&amp;gt;&lt;/span&gt;/&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;vnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;M-j&amp;gt;&lt;/span&gt; :MultipleCursorsFind &lt;span class="pl-c1"&gt;&amp;lt;C-R&amp;gt;&lt;/span&gt;/&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allows one to search for the keyword using &lt;code&gt;*&lt;/code&gt; and turn search results into cursors with &lt;code&gt;Alt-j&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Patches and suggestions are always welcome! A list of open feature requests can be found &lt;a href="https://github.com/terryma/vim-multiple-cursors/labels/pull%20request%20welcome"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issue-creation" class="anchor" aria-hidden="true" href="#issue-creation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issue Creation&lt;/h3&gt;
&lt;p&gt;Contributor's time is precious and limited. Please ensure it meets the requirements outlined in &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pull-requests" class="anchor" aria-hidden="true" href="#pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pull Requests&lt;/h3&gt;
&lt;p&gt;Running the test suite requires ruby and rake as well as vim of course. Before submitting PR, please ensure the checks are passing:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; vim-multiple-cursors/spec/
bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h3&gt;
&lt;p&gt;This is a community supported project. Here is the list of all the &lt;a href="https://github.com/terryma/vim-multiple-cursors/graphs/contributors"&gt;Contributors&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credit" class="anchor" aria-hidden="true" href="#credit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credit&lt;/h2&gt;
&lt;p&gt;Obviously inspired by Sublime Text's &lt;a href="http://www.sublimetext.com/docs/2/multiple_selection_with_the_keyboard.html" rel="nofollow"&gt;multiple selection&lt;/a&gt; feature, also encouraged by Emac's &lt;a href="https://github.com/magnars/multiple-cursors.el"&gt;multiple cursors&lt;/a&gt; implementation by Magnar Sveen&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>terryma</author><guid isPermaLink="false">https://github.com/terryma/vim-multiple-cursors</guid><pubDate>Sat, 02 Nov 2019 00:00:00 GMT</pubDate></item><item><title>scrooloose/nerdtree #6 in Vim script, Today</title><link>https://github.com/scrooloose/nerdtree</link><description>&lt;p&gt;&lt;i&gt;A tree explorer plugin for vim.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-the-nerdtree" class="anchor" aria-hidden="true" href="#the-nerdtree"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The NERDTree&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The NERDTree is a file system explorer for the Vim editor. Using this plugin,
users can visually browse complex directory hierarchies, quickly open files for
reading or editing, and perform basic file system operations.&lt;/p&gt;
&lt;p&gt;This plugin can also be extended with custom mappings using a special API. The
details of this API and of other NERDTree features are described in the
included documentation.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/scrooloose/nerdtree/raw/master/screenshot.png"&gt;&lt;img src="https://github.com/scrooloose/nerdtree/raw/master/screenshot.png" alt="NERDTree Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Below are just some of the methods for installing NERDTree. Do not follow all of these instructions; just pick your favorite one. Other plugin managers exist, and NERDTree should install just fine with any of them.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-vim-8-packages" class="anchor" aria-hidden="true" href="#vim-8-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim 8+ packages&lt;/h4&gt;
&lt;p&gt;If you are using VIM version 8 or higher you can use its built-in package management; see &lt;code&gt;:help packages&lt;/code&gt; for more information. Just run these commands in your terminal:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/scrooloose/nerdtree.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/pack/vendor/start/nerdtree
vim -u NONE -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;helptags ~/.vim/pack/vendor/start/nerdtree/doc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; -c q&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Otherwise, these are some of the several 3rd-party plugin managers you can choose from. Be sure you read the instructions for your chosen plugin, as there typically are additional steps you nee d to take.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-pathogenvim" class="anchor" aria-hidden="true" href="#pathogenvim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/tpope/vim-pathogen"&gt;pathogen.vim&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In the terminal,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/scrooloose/nerdtree.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/bundle/nerdtree&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In your vimrc,&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;pathogen#infect&lt;/span&gt;()
&lt;span class="pl-c1"&gt;syntax&lt;/span&gt; &lt;span class="pl-c1"&gt;on&lt;/span&gt;
&lt;span class="pl-c1"&gt;filetype&lt;/span&gt; &lt;span class="pl-c1"&gt;plugin&lt;/span&gt; &lt;span class="pl-c1"&gt;indent&lt;/span&gt; &lt;span class="pl-c1"&gt;on&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then reload vim, run &lt;code&gt;:helptags ~/.vim/bundle/nerdtree/doc/&lt;/code&gt; or &lt;code&gt;:Helptags&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-vundlevim" class="anchor" aria-hidden="true" href="#vundlevim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/VundleVim/Vundle.vim"&gt;Vundle.vim&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;vundle#begin&lt;/span&gt;()
&lt;span class="pl-c1"&gt;Plugin&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scrooloose/nerdtree&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;vundle#end&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-vim-plug" class="anchor" aria-hidden="true" href="#vim-plug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#begin&lt;/span&gt;()
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scrooloose/nerdtree&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#end&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-apt-vim" class="anchor" aria-hidden="true" href="#apt-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/egalpin/apt-vim"&gt;apt-vim&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;apt-vim install -y https://github.com/scrooloose/nerdtree.git&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faq-here-and-in-the-wiki" class="anchor" aria-hidden="true" href="#faq-here-and-in-the-wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;F.A.Q. (here, and in the &lt;a href="https://github.com/scrooloose/nerdtree/wiki"&gt;Wiki&lt;/a&gt;)&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-is-there-any-support-for-git-flags" class="anchor" aria-hidden="true" href="#is-there-any-support-for-git-flags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Is there any support for &lt;code&gt;git&lt;/code&gt; flags?&lt;/h4&gt;
&lt;p&gt;Yes, install &lt;a href="https://github.com/Xuyuanp/nerdtree-git-plugin"&gt;nerdtree-git-plugin&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-can-i-have-the-nerdtree-on-every-tab-automatically" class="anchor" aria-hidden="true" href="#can-i-have-the-nerdtree-on-every-tab-automatically"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I have the nerdtree on every tab automatically?&lt;/h4&gt;
&lt;p&gt;Nope. If this is something you want then chances are you aren't using tabs and
buffers as they were intended to be used. Read this
&lt;a href="http://stackoverflow.com/questions/102384/using-vims-tabs-like-buffers" rel="nofollow"&gt;http://stackoverflow.com/questions/102384/using-vims-tabs-like-buffers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are interested in this behaviour then consider &lt;a href="https://github.com/jistr/vim-nerdtree-tabs"&gt;vim-nerdtree-tabs&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-how-can-i-open-a-nerdtree-automatically-when-vim-starts-up" class="anchor" aria-hidden="true" href="#how-can-i-open-a-nerdtree-automatically-when-vim-starts-up"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can I open a NERDTree automatically when vim starts up?&lt;/h4&gt;
&lt;p&gt;Stick this in your vimrc: &lt;code&gt;autocmd vimenter * NERDTree&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-how-can-i-open-a-nerdtree-automatically-when-vim-starts-up-if-no-files-were-specified" class="anchor" aria-hidden="true" href="#how-can-i-open-a-nerdtree-automatically-when-vim-starts-up-if-no-files-were-specified"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can I open a NERDTree automatically when vim starts up if no files were specified?&lt;/h4&gt;
&lt;p&gt;Stick this in your vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;StdinReadPre&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;std_in&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;VimEnter&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;argc&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s:std_in&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) | NERDTree | &lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: Now start vim with plain &lt;code&gt;vim&lt;/code&gt;, not &lt;code&gt;vim .&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-what-if-im-also-opening-a-saved-session-for-example-vim--s-session_filevim-i-dont-want-nerdtree-to-open-in-that-scenario" class="anchor" aria-hidden="true" href="#what-if-im-also-opening-a-saved-session-for-example-vim--s-session_filevim-i-dont-want-nerdtree-to-open-in-that-scenario"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What if I'm also opening a saved session, for example &lt;code&gt;vim -S session_file.vim&lt;/code&gt;? I don't want NERDTree to open in that scenario.&lt;/h4&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;StdinReadPre&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;std_in&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;VimEnter&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;argc&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s:std_in&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;this_session&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; | NERDTree | &lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-how-can-i-open-nerdtree-automatically-when-vim-starts-up-on-opening-a-directory" class="anchor" aria-hidden="true" href="#how-can-i-open-nerdtree-automatically-when-vim-starts-up-on-opening-a-directory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can I open NERDTree automatically when vim starts up on opening a directory?&lt;/h4&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;StdinReadPre&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;std_in&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;VimEnter&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;argc&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;isdirectory&lt;/span&gt;(&lt;span class="pl-en"&gt;argv&lt;/span&gt;()[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s:std_in&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) | &lt;span class="pl-c1"&gt;exe&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NERDTree&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-en"&gt;argv&lt;/span&gt;()[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] | &lt;span class="pl-c1"&gt;wincmd&lt;/span&gt; &lt;span class="pl-c1"&gt;p&lt;/span&gt; | &lt;span class="pl-c1"&gt;ene&lt;/span&gt; | &lt;span class="pl-c1"&gt;exe&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cd &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-en"&gt;argv&lt;/span&gt;()[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] | &lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This window is tab-specific, meaning it's used by all windows in the tab. This trick also prevents NERDTree from hiding when first selecting a file.&lt;/p&gt;
&lt;p&gt;Note: Executing &lt;code&gt;vim ~/some-directory&lt;/code&gt; will open NERDTree and a new edit window. &lt;code&gt;exe 'cd '.argv()[0]&lt;/code&gt; sets the &lt;code&gt;pwd&lt;/code&gt; of the new edit window to &lt;code&gt;~/some-directory&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-how-can-i-map-a-specific-key-or-shortcut-to-open-nerdtree" class="anchor" aria-hidden="true" href="#how-can-i-map-a-specific-key-or-shortcut-to-open-nerdtree"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can I map a specific key or shortcut to open NERDTree?&lt;/h4&gt;
&lt;p&gt;Stick this in your vimrc to open NERDTree with &lt;code&gt;Ctrl+n&lt;/code&gt; (you can set whatever key you want):&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;C-n&amp;gt;&lt;/span&gt; :NERDTreeToggle&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-how-can-i-close-vim-if-the-only-window-left-open-is-a-nerdtree" class="anchor" aria-hidden="true" href="#how-can-i-close-vim-if-the-only-window-left-open-is-a-nerdtree"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can I close vim if the only window left open is a NERDTree?&lt;/h4&gt;
&lt;p&gt;Stick this in your vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;bufenter&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-en"&gt;winnr&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b:NERDTree&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;NERDTree&lt;/span&gt;.&lt;span class="pl-en"&gt;isTabTree&lt;/span&gt;()) | &lt;span class="pl-c1"&gt;q&lt;/span&gt; | &lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-can-i-have-different-highlighting-for-different-file-extensions" class="anchor" aria-hidden="true" href="#can-i-have-different-highlighting-for-different-file-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I have different highlighting for different file extensions?&lt;/h4&gt;
&lt;p&gt;See here: &lt;a href="https://github.com/scrooloose/nerdtree/issues/433#issuecomment-92590696"&gt;https://github.com/scrooloose/nerdtree/issues/433#issuecomment-92590696&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-how-can-i-change-default-arrows" class="anchor" aria-hidden="true" href="#how-can-i-change-default-arrows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can I change default arrows?&lt;/h4&gt;
&lt;p&gt;Use these variables in your vimrc. Note that below are default arrow symbols&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;NERDTreeDirArrowExpandable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;▸&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;NERDTreeDirArrowCollapsible&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;▾&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>scrooloose</author><guid isPermaLink="false">https://github.com/scrooloose/nerdtree</guid><pubDate>Sat, 02 Nov 2019 00:00:00 GMT</pubDate></item><item><title>chxuan/vimplus #7 in Vim script, Today</title><link>https://github.com/chxuan/vimplus</link><description>&lt;p&gt;&lt;i&gt;:rocket:An automatic configuration program for vim&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/chxuan/vimplus/master/screenshots/vimplus-logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/chxuan/vimplus/master/screenshots/vimplus-logo.png" alt="vimplus-logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-an-automatic-configuration-program-for-vim" class="anchor" aria-hidden="true" href="#an-automatic-configuration-program-for-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;An automatic configuration program for vim&lt;/h1&gt;
&lt;p align="center"&gt;
    &lt;a href="#build" alt="build"&gt;&lt;img src="https://camo.githubusercontent.com/474a2feaf657f12a6d2f1109a07886ba92fe3d31/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6275696c642d70617373696e672d627269676874677265656e2e737667" data-canonical-src="https://img.shields.io/badge/build-passing-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="#安装" alt="platform"&gt;&lt;img src="https://camo.githubusercontent.com/e4d37b18f798006203a4419456c68592a697fca8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d4d61634f53582532302537432532304c696e75782532303634626974253230253743253230446f636b657225323025374325323057534c2d627269676874677265656e2e737667" data-canonical-src="https://img.shields.io/badge/platform-MacOSX%20%7C%20Linux%2064bit%20%7C%20Docker%20%7C%20WSL-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/chxuan/vimplus/stargazers" alt="stars"&gt;&lt;img src="https://camo.githubusercontent.com/fe7be0e84f828fd6549893ab8f9df398cdef6c34/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f63687875616e2f76696d706c75732e7376673f7374796c653d706f706f7574266c6162656c3d7374617273" data-canonical-src="https://img.shields.io/github/stars/chxuan/vimplus.svg?style=popout&amp;amp;label=stars" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/chxuan/vimplus/forks" alt="forks"&gt;&lt;img src="https://camo.githubusercontent.com/d4bbb25285403fab2621195d4e9d2896fd0f72dc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f63687875616e2f76696d706c75732e7376673f7374796c653d706f706f7574266c6162656c3d666f726b73" data-canonical-src="https://img.shields.io/github/forks/chxuan/vimplus.svg?style=popout&amp;amp;label=forks" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/chxuan/vimplus/graphs/contributors" alt="contributors"&gt;&lt;img src="https://camo.githubusercontent.com/085071fbfdd34f80392e49bb9f9bd4cc2acd413a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f63687875616e2f76696d706c7573" data-canonical-src="https://img.shields.io/github/contributors/chxuan/vimplus" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/chxuan/vimplus/blob/master/LICENSE" alt="lincense"&gt;&lt;img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/chxuan/vimplus/master/screenshots/main.png"&gt;&lt;img src="https://raw.githubusercontent.com/chxuan/vimplus/master/screenshots/main.png" alt="main" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-安装" class="anchor" aria-hidden="true" href="#安装"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安装&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-mac-os-x" class="anchor" aria-hidden="true" href="#mac-os-x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac OS X&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-安装homebrew" class="anchor" aria-hidden="true" href="#安装homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安装&lt;a href="https://brew.sh/" rel="nofollow"&gt;HomeBrew&lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-安装vimplus" class="anchor" aria-hidden="true" href="#安装vimplus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安装vimplus&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/chxuan/vimplus.git ~/.vimplus
cd ~/.vimplus
./install.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-设置nerd-font" class="anchor" aria-hidden="true" href="#设置nerd-font"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;设置Nerd Font&lt;/h4&gt;
&lt;p&gt;为防止vimplus显示乱码，需设置mac终端字体为&lt;code&gt;Droid Sans Mono Nerd Font&lt;/code&gt;。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-更新vimplus" class="anchor" aria-hidden="true" href="#更新vimplus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;更新vimplus&lt;/h4&gt;
&lt;p&gt;紧跟vimplus的步伐，尝鲜新特性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./update.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-linux-64-bit" class="anchor" aria-hidden="true" href="#linux-64-bit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux 64-bit&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-支持以下发行版" class="anchor" aria-hidden="true" href="#支持以下发行版"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;支持以下发行版&lt;/h4&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=ubuntu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/de0844c7f8fad93066a3bdd7d4f5c50b7a549af1/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f7562756e74752e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/ubuntu.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=ubuntukylin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e6e9c2de13e87314a5e9aad9831d6d9b4ede593/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f7562756e74756b796c696e2e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/ubuntukylin.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=debian" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/95c8913431844ef63535561bcbd49bc41c413f63/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f64656269616e2e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/debian.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=kali" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a2b48d1383223abce3ff6b399f4c3d484c77fc62/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f6b616c692e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/kali.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=deepin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7cff69a2241262862c04b303513c0273476eef48/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f64656570696e2e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/deepin.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=mint" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c751a02dde97ff4a357527519d3c45330b661f9/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f6d696e742e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/mint.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=elementary" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f63de97865f9b5d6dc356eae0b8df1fb7c2703f0/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f656c656d656e746172792e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/elementary.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=centos" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1eb75b68d1f62a2cc943de0073c6d27cc026622b/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f63656e746f732e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/centos.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=fedora" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/329249a967ccef701e493692c99e8d318ab2b65e/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f6665646f72612e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/fedora.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=arch" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/46cca5f938e477a2d03d786fb77f5f427de25b53/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f617263682e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/arch.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=manjaro" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a107b02b70b15ea11f48a90e1c2a9f6abab9ebbb/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f6d616e6a61726f2e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/manjaro.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=opensuse" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f74a83cc44c829bf0e09e7bc318a291fa4c50c5b/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f6f70656e737573652e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/opensuse.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-安装vimplus-1" class="anchor" aria-hidden="true" href="#安装vimplus-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安装vimplus&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/chxuan/vimplus.git ~/.vimplus
cd ~/.vimplus
./install.sh //不加sudo
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-设置nerd-font-1" class="anchor" aria-hidden="true" href="#设置nerd-font-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;设置Nerd Font&lt;/h4&gt;
&lt;p&gt;为防止vimplus显示乱码，需设置linux终端字体为&lt;code&gt;Droid Sans Mono Nerd Font&lt;/code&gt;。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-多用户支持" class="anchor" aria-hidden="true" href="#多用户支持"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;多用户支持&lt;/h4&gt;
&lt;p&gt;将vimplus在某个用户下安装好后，若需要在其他用户也能够使用vimplus，则执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ./install_to_user.sh username1 username2 //替换为真实用户名
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-更新vimplus-1" class="anchor" aria-hidden="true" href="#更新vimplus-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;更新vimplus&lt;/h4&gt;
&lt;p&gt;紧跟vimplus的步伐，尝鲜新特性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./update.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/chxuan/ubuntu-vimplus" rel="nofollow"&gt;ubuntu-vimplus&lt;/a&gt;是vimplus基于ubuntu18.04的docker镜像，无需安装vimplus，即可快速体验vimplus带来的快乐&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it chxuan/ubuntu-vimplus
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-自定义" class="anchor" aria-hidden="true" href="#自定义"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自定义&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;~/.vimrc&lt;/code&gt;为vimplus的默认配置，一般不做修改，若要增加插件，请修改 &lt;code&gt;~/.vimrc.plugins&lt;/code&gt;，其他配置请放入&lt;code&gt;~/.vimrc.config&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-插件列表" class="anchor" aria-hidden="true" href="#插件列表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;插件列表&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;插件&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/cpp-mode"&gt;cpp-mode&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;提供生成函数实现、函数声明/实现跳转、.h .cpp切换等功能(I'm author&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/vim-edit"&gt;vim-edit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;方便的文本编辑插件(I'm author&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/change-colorscheme"&gt;change-colorscheme&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;随心所欲切换主题(I'm author&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/prepare-code"&gt;prepare-code&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;新建文件时，生成预定义代码片段(I'm author&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/vim-buffer"&gt;vim-buffer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;vim缓存操作(I'm author&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/vimplus-startify"&gt;vimplus-startify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;vimplus开始页面(修改自&lt;a href="https://github.com/mhinz/vim-startify"&gt;mhinz/vim-startify&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/tagbar"&gt;tagbar&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;使用&lt;a href="https://github.com/majutsushi/tagbar"&gt;majutsushi/tagbar&lt;/a&gt;的v2.3版本，&lt;a href="https://github.com/vim-scripts/taglist.vim"&gt;taglist&lt;/a&gt;的替代品，显示类/方法/变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;比&lt;a href="https://github.com/VundleVim/Vundle.vim"&gt;Vundle&lt;/a&gt;下载更快的插件管理软件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Valloric/YouCompleteMe"&gt;YouCompleteMe&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;史上最强大的基于语义的自动补全插件，支持C/C++、C#、Python、PHP等语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/scrooloose/nerdtree"&gt;NerdTree&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;代码资源管理器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tiagofumo/vim-nerdtree-syntax-highlight"&gt;vim-nerdtree-syntax-highlight&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;NerdTree文件类型高亮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Xuyuanp/nerdtree-git-plugin"&gt;nerdtree-git-plugin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;NerdTree显示git状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ryanoasis/vim-devicons"&gt;vim-devicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;显示文件类型图标&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/vim-airline/vim-airline"&gt;Airline&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;可以取代&lt;a href="https://github.com/powerline/powerline"&gt;powerline&lt;/a&gt;的状态栏美化插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jiangmiao/auto-pairs"&gt;auto-pairs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;自动补全引号、圆括号、花括号等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Yggdroot/LeaderF"&gt;LeaderF&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;比&lt;a href="https://github.com/ctrlpvim/ctrlp.vim"&gt;ctrlp&lt;/a&gt;更强大的文件的模糊搜索工具&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/mileszs/ack.vim"&gt;ack&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;强大的文本搜索工具&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-surround"&gt;vim-surround&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;自动增加、替换配对符的插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-commentary"&gt;vim-commentary&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;快速注释代码插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-repeat"&gt;vim-repeat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;重复上一次操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-endwise"&gt;vim-endwise&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;if/end/endif/endfunction补全&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/godlygeek/tabular"&gt;tabular&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;代码、注释、表格对齐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/easymotion/vim-easymotion"&gt;vim-easymotion&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;强大的光标快速移动工具，强大到颠覆你的插件观&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/haya14busa/incsearch.vim"&gt;incsearch.vim&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;模糊字符搜索插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-fugitive"&gt;vim-fugitive&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;集成Git&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/junegunn/gv.vim"&gt;gv&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;显示git提交记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/junegunn/vim-slash"&gt;vim-slash&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;优化搜索，移动光标后清除高亮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Shougo/echodoc.vim"&gt;echodoc&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;补全函数时在命令栏显示函数签名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/terryma/vim-smooth-scroll"&gt;vim-smooth-scroll&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;让翻页更顺畅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/rhysd/clever-f.vim"&gt;clever-f.vim&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;强化f和F键&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-快捷键" class="anchor" aria-hidden="true" href="#快捷键"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;快捷键&lt;/h2&gt;
&lt;p&gt;以下是部分快捷键，可通过vimplus的&lt;code&gt;,h&lt;/code&gt;命令查看&lt;a href="https://github.com/chxuan/vimplus/blob/master/help.md"&gt;vimplus帮助文档&lt;/a&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Leader Key&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;打开/关闭代码资源管理器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;打开/关闭函数列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;.h .cpp 文件切换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;转到函数声明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;U&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;转到函数实现&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;转到变量声明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;打开include文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;拷贝函数声明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;p&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;生成函数实现&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;w&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;单词跳转&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;搜索~目录下的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;F&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;搜索当前目录下的文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;g&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示git仓库提交记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;G&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示当前文件提交记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示当前文件在某个commit下的完整内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ff&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;语法错误自动修复(FixIt)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-p&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到上一个buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-n&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到下一个buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除当前buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;D&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除当前buffer外的所有buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vim&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;运行vim编辑器时,默认启动开始页面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;F5&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示语法错误提示窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;F9&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示上一主题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;F10&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示下一主题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;l&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;按竖线对齐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;按等号对齐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ya&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;复制行文本到字母a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Da&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;剪切行文本到字母a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ca&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;改写行文本到字母a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;替换文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;r&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全局替换，目前只支持单个文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;gcc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;注释代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;gcap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;注释段落&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vif&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;选中函数内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dif&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除函数内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cif&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;改写函数内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vaf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;选中函数内容（包括函数名 花括号）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;daf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除函数内容（包括函数名 花括号）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;caf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;改写函数内容（包括函数名 花括号）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fa&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查找字母a，然后再按f键查找下一个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;e&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;快速编辑vimrc文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;重新加载vimrc文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;打开vimplus帮助文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;H&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;打开当前光标所在单词的vim帮助文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;复制当前选中到系统剪切板&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;i&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;安装插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;更新插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除插件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;vimplus安装脚本会在自己电脑上安装哪些软件？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;网络良好情况下，vimplus只需30分钟左右即可将vim cpp环境配置好，vimplus真正的做到了一键配置，不让用户操心。vimplus会安装一些必备软件，比如说python、cmake、gcc、fontconfig等，vimplus也考虑到了有些系统的vim不支持python，它会自动去下载vim源码将python支持编译进去，vimplus也会安装nerd-font不让vim显示出现乱码，最最重要的是vimplus实现了ycm自动编译安装，给折腾了几天ycm都没有安装好的用户带来了新的希望，而且vimplus也支持macos和linux众多发行版，让linux发烧友频繁切换发行版而不用操心vim环境配置。最后说了这么多，不如看&lt;a href="https://github.com/chxuan/vimplus/blob/master/install.sh"&gt;vimplus安装脚本&lt;/a&gt;来的直接&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;插件安装界面显示YouCompleteMe安装失败，Invalid URL: https://gitee.com/chxuan/YouCompleteMe.git,Expected: https://github.com/Valloric/YouCompleteMe.git,PlugClean: required&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在执行install.sh安装脚本时，ycm比其他插件早安装，当用户看到插件安装界面显示ycm安装失败时，其实ycm已经提前安装好了，忽略掉该错误即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;插件安装界面不更新进度，一直显示进度Installing plugins (24/40)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vimplus使用vim-plug作为插件管理器，vim-plug可能由于界面没有刷新（其实在安装），所以进度一直停留在&lt;code&gt;Installing plugins (24/40)&lt;/code&gt;，用户只需要耐心等待所有插件安装完成即可，或者直接&lt;code&gt;Ctrl+C&lt;/code&gt;终止安装，通过vim打开&lt;code&gt;~/.vimrc&lt;/code&gt;并执行&lt;code&gt;:PlugInstall&lt;/code&gt;命令安装剩余插件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;vimplus不支持目前用户正在使用的系统怎么办？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以给作者提&lt;a href="https://github.com/chxuan/vimplus/issues"&gt;Issues&lt;/a&gt;，或者自己fork vimplus来修改，并提交pr，贡献自己的一份力量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;安装vimplus后Airline等插件有乱码，怎么解决？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;linux和mac系统需设置终端字体为&lt;code&gt;Droid Sans Mono Nerd Font&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;xshell连接远程主机不能使用vim-devicons或乱码。&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;windows系统安装&lt;a href="https://github.com/ryanoasis/nerd-fonts"&gt;Nerd Font&lt;/a&gt;字体后并更改xshell字体即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ubuntu18.04安装了nerd font但通过终端属性并没有看到该字体。&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以试试dconf-editor软件来设置，可以参考&lt;a href="https://blog.csdn.net/wang73ying/article/details/82491993" rel="nofollow"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;使用第三方库时怎么让ycm补全第三方库API？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vimplus安装完毕之后，&lt;code&gt;~&lt;/code&gt;目录下将会生成两个隐藏文件分别是.vimrc和.ycm_extra_conf.py，其中.vimrc是vim的配置文件，.ycm_extra_conf.py是ycm插件的配置文件，当你需要创建一个project时，需要将.ycm_extra_conf.py拷贝到project的顶层目录，通过修改该配置文件里面的&lt;code&gt;flags&lt;/code&gt;变量来添加你的第三方库路径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;怎么自定义文件头，比如说添加作者、创建时间？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你可以修改&lt;a href="https://github.com/chxuan/prepare-code"&gt;chxuan/prepare-code&lt;/a&gt;插件来达到目的，可以参考&lt;a href="https://blog.csdn.net/liuyangbo121/article/details/82971736" rel="nofollow"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;安装vimplus在“[ 95%] Building CXX object ycm/CMakeFiles/ycm_core.dir/ycm_core.cpp.o”等进度时出现编译报错&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编译ycm需要消耗较大内存，建议内存大于1G，实在不行也可以开启linux swap分区。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;以上没有我遇到的问题怎么办？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;您可以通过上网找解决方法，或提&lt;a href="https://github.com/chxuan/vimplus/issues"&gt;Issues&lt;/a&gt;，也可以通过加QQ&lt;code&gt;787280310&lt;/code&gt;、发邮件方式&lt;code&gt;787280310@qq.com&lt;/code&gt;一起讨论解决方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;vimplus用起来真的太棒了，怎么办？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那就麻烦您打赏一颗&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;吧，给予我继续维护的动力。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-代码贡献者" class="anchor" aria-hidden="true" href="#代码贡献者"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码贡献者&lt;/h2&gt;
&lt;a href="https://github.com/chxuan" title="chxuan"&gt;
&lt;img src="https://github.com/chxuan.png?size=64" width="64" height="64" alt="chxuan" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/dofy" title="dofy"&gt;
&lt;img src="https://github.com/dofy.png?size=64" width="64" height="64" alt="dofy" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/urain39" title="urain39"&gt;
&lt;img src="https://github.com/urain39.png?size=64" width="64" height="64" alt="urain39" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/freedomDR" title="freedomDR"&gt;
&lt;img src="https://github.com/freedomDR.png?size=64" width="64" height="64" alt="freedomDR" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/starifly" title="starifly"&gt;
&lt;img src="https://github.com/starifly.png?size=64" width="64" height="64" alt="starifly" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Shaloc" title="Shaloc"&gt;
&lt;img src="https://github.com/Shaloc.png?size=64" width="64" height="64" alt="Shaloc" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/jokerkeny" title="jokerkeny"&gt;
&lt;img src="https://github.com/jokerkeny.png?size=64" width="64" height="64" alt="jokerkeny" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/xuthus5" title="xuthus5"&gt;
&lt;img src="https://github.com/xuthus5.png?size=64" width="64" height="64" alt="xuthus5" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/zhoumengkang" title="zhoumengkang"&gt;
&lt;img src="https://github.com/zhoumengkang.png?size=64" width="64" height="64" alt="zhoumengkang" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Titubery" title="Titubery"&gt;
&lt;img src="https://github.com/Titubery.png?size=64" width="64" height="64" alt="Titubery" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-支持开源heart" class="anchor" aria-hidden="true" href="#支持开源heart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;支持开源&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;wechat&lt;/th&gt;
&lt;th&gt;alipay&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#支持开源"&gt;&lt;img src="https://github.com/chxuan/vimplus/raw/master/screenshots/wechat.png" height="150" width="150" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#支持开源"&gt;&lt;img src="https://github.com/chxuan/vimplus/raw/master/screenshots/alipay.png" height="150" width="150" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;支持者&lt;/th&gt;
&lt;th&gt;RMB&lt;/th&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zhoumengkang"&gt;zhoumengkang&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;¥50&lt;/td&gt;
&lt;td&gt;2019-09-28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zhoumengkang"&gt;zhoumengkang&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;¥50&lt;/td&gt;
&lt;td&gt;2019-09-29&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-vimplusstar趋势图" class="anchor" aria-hidden="true" href="#vimplusstar趋势图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vimplus&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;趋势图&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://stars.medv.io/chxuan/vimplus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d94b8ddf255fe58c5f6b4f7a65c50241511d6f7/68747470733a2f2f73746172732e6d6564762e696f2f63687875616e2f76696d706c75732e737667" alt="Sparkline" data-canonical-src="https://stars.medv.io/chxuan/vimplus.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This software is licensed under the &lt;a href="https://github.com/chxuan/vimplus/blob/master/LICENSE"&gt;MIT license&lt;/a&gt;. © 2016 chxuan&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>chxuan</author><guid isPermaLink="false">https://github.com/chxuan/vimplus</guid><pubDate>Sat, 02 Nov 2019 00:00:00 GMT</pubDate></item><item><title>wsdjeg/vim-galore-zh_cn #8 in Vim script, Today</title><link>https://github.com/wsdjeg/vim-galore-zh_cn</link><description>&lt;p&gt;&lt;i&gt;Vim 从入门到精通&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vim-从入门到精通" class="anchor" aria-hidden="true" href="#vim-从入门到精通"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim 从入门到精通&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;本文主要在翻译 &lt;a href="https://github.com/mhinz/vim-galore"&gt;mhinz/vim-galore&lt;/a&gt;
的基础添加了一些我在使用 Vim 及开发 Vim 插件的过程中积累的一些知识和常用插件列表。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Vim 中文同步聊天室&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;telegram： &lt;a href="https://t.me/VimHub" rel="nofollow"&gt;@VimHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gitter: &lt;a href="https://gitter.im/vim-china/Lobby" rel="nofollow"&gt;vim-china/Lobby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IRC: &lt;a href="https://webchat.freenode.net/?channels=vim-china" rel="nofollow"&gt;#vim-china&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%AE%80%E4%BB%8B"&gt;简介&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E4%BB%80%E4%B9%88%E6%98%AF-vim"&gt;什么是 Vim？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vim-%E5%93%B2%E5%AD%A6"&gt;Vim 哲学&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%85%A5%E9%97%A8"&gt;入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%B2%BE%E7%AE%80%E7%9A%84-vimrc"&gt;精简的 vimrc&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#windows-%E7%B3%BB%E7%BB%9F"&gt;Windows 系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linux-%E6%88%96%E8%80%85-mac-os"&gt;Linux 或者 Mac OS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%88%91%E6%AD%A3%E5%9C%A8%E4%BD%BF%E7%94%A8%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84-vim"&gt;我正在使用什么样的 Vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%A4%87%E5%BF%98%E5%BD%95"&gt;备忘录&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9F%BA%E7%A1%80"&gt;基础&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%BC%93%E5%86%B2%E5%8C%BA%E7%AA%97%E5%8F%A3%E6%A0%87%E7%AD%BE"&gt;缓冲区，窗口，标签&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B7%B2%E6%BF%80%E6%B4%BB%E5%B7%B2%E8%BD%BD%E5%85%A5%E5%B7%B2%E5%88%97%E5%87%BA%E5%B7%B2%E5%91%BD%E5%90%8D%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA"&gt;已激活、已载入、已列出、已命名的缓冲区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8"&gt;参数列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8C%89%E9%94%AE%E6%98%A0%E5%B0%84"&gt;按键映射&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%98%A0%E5%B0%84%E5%89%8D%E7%BD%AE%E9%94%AE"&gt;映射前置键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AF%84%E5%AD%98%E5%99%A8"&gt;寄存器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%8C%83%E5%9B%B4"&gt;范围&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A0%87%E6%B3%A8"&gt;标注&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%A1%A5%E5%85%A8"&gt;补全&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%8A%A8%E4%BD%9C%E6%93%8D%E4%BD%9C%E7%AC%A6%E6%96%87%E6%9C%AC%E5%AF%B9%E8%B1%A1"&gt;动作，操作符，文本对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%87%AA%E5%8A%A8%E5%91%BD%E4%BB%A4"&gt;自动命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%8F%98%E6%9B%B4%E5%8E%86%E5%8F%B2%E8%B7%B3%E8%BD%AC%E5%8E%86%E5%8F%B2"&gt;变更历史，跳转历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%86%85%E5%AE%B9%E5%8F%98%E6%9B%B4%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95"&gt;内容变更历史记录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%85%A8%E5%B1%80%E4%BD%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E8%A1%A8%E5%B1%80%E9%83%A8%E4%BD%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E8%A1%A8"&gt;全局位置信息表，局部位置信息表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AE%8F"&gt;宏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%A2%9C%E8%89%B2%E4%B8%BB%E9%A2%98"&gt;颜色主题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8A%98%E5%8F%A0"&gt;折叠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BC%9A%E8%AF%9D"&gt;会话&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B1%80%E9%83%A8%E5%8C%96"&gt;局部化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%94%A8%E6%B3%95"&gt;用法&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%8E%B7%E5%8F%96%E7%A6%BB%E7%BA%BF%E5%B8%AE%E5%8A%A9"&gt;获取离线帮助&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%8E%B7%E5%8F%96%E7%A6%BB%E7%BA%BF%E5%B8%AE%E5%8A%A9%E8%A1%A5%E5%85%85"&gt;获取离线帮助（补充）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%8E%B7%E5%8F%96%E5%9C%A8%E7%BA%BF%E5%B8%AE%E5%8A%A9"&gt;获取在线帮助&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%89%A7%E8%A1%8C%E8%87%AA%E5%8A%A8%E5%91%BD%E4%BB%A4"&gt;执行自动命令&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%94%A8%E6%88%B7%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6"&gt;用户自定义事件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BA%8B%E4%BB%B6%E5%B5%8C%E5%A5%97"&gt;事件嵌套&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%89%AA%E5%88%87%E6%9D%BF"&gt;剪切板&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%89%AA%E8%B4%B4%E6%9D%BF%E7%9A%84%E4%BD%BF%E7%94%A8windows-osx"&gt;剪贴板的使用（Windows, OSX）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%89%AA%E8%B4%B4%E6%9D%BF%E7%9A%84%E4%BD%BF%E7%94%A8linux-bsd-"&gt;剪贴板的使用（Linux, BSD, ...）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E6%97%B6%E6%81%A2%E5%A4%8D%E5%85%89%E6%A0%87%E4%BD%8D%E7%BD%AE"&gt;打开文件时恢复光标位置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6"&gt;临时文件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6"&gt;备份文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BA%A4%E6%8D%A2%E6%96%87%E4%BB%B6"&gt;交换文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%92%A4%E9%94%80%E6%96%87%E4%BB%B6"&gt;撤销文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#viminfo-%E6%96%87%E4%BB%B6"&gt;viminfo 文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E8%AE%BE%E7%BD%AE%E7%A4%BA%E4%BE%8B"&gt;临时文件管理设置示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%BC%96%E8%BE%91%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6"&gt;编辑远程文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86"&gt;插件管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%A4%9A%E8%A1%8C%E7%BC%96%E8%BE%91"&gt;多行编辑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8%E7%A8%8B%E5%BA%8F%E5%92%8C%E8%BF%87%E6%BB%A4%E5%99%A8"&gt;使用外部程序和过滤器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cscope"&gt;Cscope&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-%E6%9E%84%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93"&gt;1. 构建数据库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%E5%BA%93"&gt;2. 添加数据库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E5%BA%93"&gt;3. 查询数据库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#matchit"&gt;MatchIt&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%9C%A8-vim-8-%E4%B8%AD%E5%AE%89%E8%A3%85"&gt;在 Vim 8 中安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9C%A8-vim-7-%E6%88%96%E8%80%85%E6%9B%B4%E6%97%A9%E7%9A%84%E7%89%88%E6%9C%AC%E4%B8%AD%E5%AE%89%E8%A3%85"&gt;在 Vim 7 或者更早的版本中安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%AE%80%E7%9F%AD%E7%9A%84%E4%BB%8B%E7%BB%8D"&gt;简短的介绍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8A%80%E5%B7%A7"&gt;技巧&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%B7%B3%E8%87%B3%E9%80%89%E6%8B%A9%E7%9A%84%E5%8C%BA%E5%9F%9F%E5%8F%A6%E4%B8%80%E7%AB%AF"&gt;跳至选择的区域另一端&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%81%AA%E6%98%8E%E5%9C%B0%E4%BD%BF%E7%94%A8-n-%E5%92%8C-n"&gt;聪明地使用 n 和 N&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%81%AA%E6%98%8E%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8E%86%E5%8F%B2"&gt;聪明地使用命令行历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%99%BA%E8%83%BD-ctrl-l"&gt;智能 Ctrl-l&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%A6%81%E7%94%A8%E9%94%99%E8%AF%AF%E6%8A%A5%E8%AD%A6%E5%A3%B0%E9%9F%B3%E5%92%8C%E5%9B%BE%E6%A0%87"&gt;禁用错误报警声音和图标&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BF%AB%E9%80%9F%E7%A7%BB%E5%8A%A8%E5%BD%93%E5%89%8D%E8%A1%8C"&gt;快速移动当前行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BF%AB%E9%80%9F%E6%B7%BB%E5%8A%A0%E7%A9%BA%E8%A1%8C"&gt;快速添加空行&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%BF%90%E8%A1%8C%E6%97%B6%E6%A3%80%E6%B5%8B"&gt;运行时检测&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9F%A5%E7%9C%8B%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4"&gt;查看启动时间&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#nul-%E7%AC%A6%E7%94%A8%E6%96%B0%E8%A1%8C%E8%A1%A8%E7%A4%BA"&gt;NUL 符用新行表示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BF%AB%E9%80%9F%E7%BC%96%E8%BE%91%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%8F"&gt;快速编辑自定义宏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BF%AB%E9%80%9F%E8%B7%B3%E8%BD%AC%E5%88%B0%E6%BA%90%E5%A4%B4%E6%96%87%E4%BB%B6"&gt;快速跳转到源(头)文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9C%A8-gui-%E4%B8%AD%E5%BF%AB%E9%80%9F%E6%94%B9%E5%8F%98%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F"&gt;在 GUI 中快速改变字体大小&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A0%B9%E6%8D%AE%E6%A8%A1%E5%BC%8F%E6%94%B9%E5%8F%98%E5%85%89%E6%A0%87%E7%B1%BB%E5%9E%8B"&gt;根据模式改变光标类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%98%B2%E6%AD%A2%E6%B0%B4%E5%B9%B3%E6%BB%91%E5%8A%A8%E7%9A%84%E6%97%B6%E5%80%99%E5%A4%B1%E5%8E%BB%E9%80%89%E6%8B%A9"&gt;防止水平滑动的时候失去选择&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%80%89%E6%8B%A9%E5%BD%93%E5%89%8D%E8%A1%8C%E8%87%B3%E7%BB%93%E5%B0%BE%E6%8E%92%E9%99%A4%E6%8D%A2%E8%A1%8C%E7%AC%A6"&gt;选择当前行至结尾，排除换行符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%96%B0%E8%BD%BD%E5%85%A5%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6"&gt;重新载入保存文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9B%B4%E5%8A%A0%E6%99%BA%E8%83%BD%E7%9A%84%E5%BD%93%E5%89%8D%E8%A1%8C%E9%AB%98%E4%BA%AE"&gt;更加智能的当前行高亮&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9B%B4%E5%BF%AB%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E8%A1%A5%E5%85%A8"&gt;更快的关键字补全&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%94%B9%E5%8F%98%E9%A2%9C%E8%89%B2%E4%B8%BB%E9%A2%98%E7%9A%84%E9%BB%98%E8%AE%A4%E5%A4%96%E8%A7%82"&gt;改变颜色主题的默认外观&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%91%BD%E4%BB%A4"&gt;命令&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#global-%E5%92%8C-vglobal---%E5%9C%A8%E6%89%80%E6%9C%89%E5%8C%B9%E9%85%8D%E8%A1%8C%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4"&gt;:global 和 :vglobal - 在所有匹配行执行命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#normal-%E5%92%8C-execute---%E8%84%9A%E6%9C%AC%E6%A2%A6%E4%B9%8B%E9%98%9F"&gt;:normal 和 :execute - 脚本梦之队&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E5%AE%9A%E5%90%91%E6%B6%88%E6%81%AF"&gt;重定向消息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%B0%83%E8%AF%95"&gt;调试&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%B8%B8%E8%A7%84%E5%BB%BA%E8%AE%AE"&gt;常规建议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%B0%83%E6%95%B4%E6%97%A5%E5%BF%97%E7%AD%89%E7%BA%A7"&gt;调整日志等级&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9F%A5%E7%9C%8B%E5%90%AF%E5%8A%A8%E6%97%A5%E5%BF%97"&gt;查看启动日志&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9F%A5%E7%9C%8B%E8%BF%90%E8%A1%8C%E6%97%B6%E6%97%A5%E5%BF%97"&gt;查看运行时日志&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vim-%E8%84%9A%E6%9C%AC%E8%B0%83%E8%AF%95"&gt;Vim 脚本调试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AF%AD%E6%B3%95%E6%96%87%E4%BB%B6%E8%B0%83%E8%AF%95"&gt;语法文件调试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9D%82%E9%A1%B9"&gt;杂项&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%99%84%E5%8A%A0%E8%B5%84%E6%BA%90"&gt;附加资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vim-%E9%85%8D%E7%BD%AE%E9%9B%86%E5%90%88"&gt;Vim 配置集合&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98"&gt;常见问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%BC%96%E8%BE%91%E5%B0%8F%E6%96%87%E4%BB%B6%E6%97%B6%E5%BE%88%E6%85%A2"&gt;编辑小文件时很慢&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%BC%96%E8%BE%91%E5%A4%A7%E6%96%87%E4%BB%B6%E7%9A%84%E6%97%B6%E5%80%99%E5%BE%88%E6%85%A2"&gt;编辑大文件的时候很慢&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8C%81%E7%BB%AD%E7%B2%98%E8%B4%B4%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E6%AF%8F%E6%AC%A1%E9%83%BD%E8%A6%81%E8%AE%BE%E7%BD%AE-paste-%E6%A8%A1%E5%BC%8F"&gt;持续粘贴（为什么我每次都要设置 'paste' 模式）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9C%A8%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%8C%89-esc-%E5%90%8E%E6%9C%89%E5%BB%B6%E6%97%B6"&gt;在终端中按 ESC 后有延时&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%97%A0%E6%B3%95%E9%87%8D%E5%A4%8D%E5%87%BD%E6%95%B0%E4%B8%AD%E6%89%A7%E8%A1%8C%E7%9A%84%E6%90%9C%E7%B4%A2"&gt;无法重复函数中执行的搜索&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%BF%9B%E9%98%B6%E9%98%85%E8%AF%BB"&gt;进阶阅读&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%8A%A0%E5%85%A5%E6%88%91%E4%BB%AC"&gt;加入我们&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99"&gt;参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a id="user-content-简介" class="anchor" aria-hidden="true" href="#简介"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;简介&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-什么是-vim" class="anchor" aria-hidden="true" href="#什么是-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;什么是 Vim？&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/vim/vim"&gt;Vim&lt;/a&gt; 是一个历史悠久的文本编辑器，可以追溯到
&lt;a href="https://en.wikipedia.org/wiki/QED_(text_editor)" rel="nofollow"&gt;qed&lt;/a&gt;。
&lt;a href="https://en.wikipedia.org/wiki/Bram_Moolenaar" rel="nofollow"&gt;Bram Moolenaar&lt;/a&gt; 于
1991 年发布初始版本。&lt;/p&gt;
&lt;p&gt;Linux、Mac 用户，可以使用包管理器安装 Vim，对于 Windows 用户，可以从
&lt;a href="https://share.weiyun.com/da2be5937ac0e2bd3abc26355fad1204" rel="nofollow"&gt;我的网盘&lt;/a&gt; 下载。
该版本可轻易添加 &lt;code&gt;python&lt;/code&gt; 、&lt;code&gt;python3&lt;/code&gt; 、&lt;code&gt;lua&lt;/code&gt; 等支持，只需要安装 python、lua
即可。&lt;/p&gt;
&lt;p&gt;项目在 &lt;a href="https://github.com/vim/vim"&gt;Github&lt;/a&gt; 上开发，项目讨论请订阅
&lt;a href="https://groups.google.com/forum/#!forum/vim_dev" rel="nofollow"&gt;&lt;code&gt;vim_dev&lt;/code&gt;&lt;/a&gt; 邮件列表。&lt;/p&gt;
&lt;p&gt;通过阅读 &lt;a href="http://www.viemu.com/a-why-vi-vim.html" rel="nofollow"&gt;Why, oh WHY, do those #?@! nutheads use vi?&lt;/a&gt;
来对 Vim 进行大致的了解。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-vim-哲学" class="anchor" aria-hidden="true" href="#vim-哲学"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim 哲学&lt;/h2&gt;
&lt;p&gt;Vim 采用模式编辑的理念，即它提供了多种模式，按键在不同的模式下作用不同。
你可以在&lt;strong&gt;普通模式&lt;/strong&gt; 下浏览文件，在&lt;strong&gt;插入模式&lt;/strong&gt;下插入文本，
在&lt;strong&gt;可视模式&lt;/strong&gt;下选择行，在&lt;strong&gt;命令模式&lt;/strong&gt;下执行命令等等。起初这听起来可能很复杂，
但是这有一个很大的优点：不需要通过同时按住多个键来完成操作，
大多数时候你只需要依次按下这些按键即可。越常用的操作，所需要的按键数量越少。&lt;/p&gt;
&lt;p&gt;和模式编辑紧密相连的概念是 &lt;strong&gt;操作符&lt;/strong&gt; 和 &lt;strong&gt;动作&lt;/strong&gt;。&lt;strong&gt;操作符&lt;/strong&gt; 指的是开始某个行为，
例如：修改、删除或者选择文本，之后你要用一个 &lt;strong&gt;动作&lt;/strong&gt; 来指定需要操作的文本区域。
比如，要改变括号内的文本，需要执行 &lt;code&gt;ci(&lt;/code&gt; （读做 &lt;code&gt;change inner parentheses&lt;/code&gt;）；
删除整个段落的内容，需要执行 &lt;code&gt;dap&lt;/code&gt; （读做：&lt;code&gt;delete around paragraph&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;如果你能看见 Vim 老司机操作，你会发现他们使用 Vim 脚本语言就如同钢琴师弹钢琴一样。复杂的操作只需要几个按键就能完成。他们甚至不用刻意去想，因为这已经成为&lt;a href="https://en.wikipedia.org/wiki/Muscle_memory" rel="nofollow"&gt;肌肉记忆&lt;/a&gt;了。这减少&lt;a href="https://en.wikipedia.org/wiki/Cognitive_load" rel="nofollow"&gt;认识负荷&lt;/a&gt;并帮助人们专注于实际任务。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-入门" class="anchor" aria-hidden="true" href="#入门"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;入门&lt;/h2&gt;
&lt;p&gt;Vim 自带一个交互式的教程，内含你需要了解的最基础的信息，你可以通过终端运行以下命令打开教程：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vimtutor
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不要因为这个看上去很无聊而跳过，按照此教程多练习。你以前用的 IDE 或者其他编辑器很少是有“模式”概念的，因此一开始你会很难适应模式切换。但是你 Vim 使用的越多，&lt;a href="https://en.wikipedia.org/wiki/Muscle_memory" rel="nofollow"&gt;肌肉记忆&lt;/a&gt; 将越容易形成。&lt;/p&gt;
&lt;p&gt;Vim 基于一个 &lt;a href="https://en.wikipedia.org/wiki/Vi" rel="nofollow"&gt;vi&lt;/a&gt; 克隆，叫做 &lt;a href="https://en.wikipedia.org/wiki/Stevie_(text_editor)" rel="nofollow"&gt;Stevie&lt;/a&gt;，支持两种运行模式："compatible" 和 "nocompatible"。在兼容模式下运行 Vim 意味着使用 vi 的默认设置，而不是 Vim 的默认设置。除非你新建一个用户的 &lt;code&gt;vimrc&lt;/code&gt; 或者使用 &lt;code&gt;vim -N&lt;/code&gt; 命令启动 Vim，否则就是在兼容模式下运行 Vim！请大家不要在兼容模式下运行 Vim。&lt;/p&gt;
&lt;p&gt;下一步&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建你自己的 &lt;a href="#%E7%B2%BE%E7%AE%80%E7%9A%84-vimrc"&gt;vimrc&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;在第一周准备&lt;a href="#%E5%A4%87%E5%BF%98%E5%BD%95"&gt;备忘录&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;通读&lt;a href="#%E5%9F%BA%E7%A1%80-1"&gt;基础&lt;/a&gt;章节了解 Vim 还有哪些功能。&lt;/li&gt;
&lt;li&gt;按需学习！Vim 是学不完的。如果你遇到了问题，先上网寻找解决方案，你的问题可能已经被解决了。Vim 拥有大量的参考文档，知道如何利用这些参考文档很有必要：&lt;a href="#%E8%8E%B7%E5%8F%96%E7%A6%BB%E7%BA%BF%E5%B8%AE%E5%8A%A9"&gt;获取离线帮助&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;浏览&lt;a href="#%E9%99%84%E5%8A%A0%E8%B5%84%E6%BA%90"&gt;附加资源&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后一个建议：使用&lt;a href="#%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86"&gt;插件&lt;/a&gt;之前，请先掌握 Vim 的基本操作。很多插件都只是对 Vim 自带功能的封装。&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E7%AE%80%E4%BB%8B"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-精简的-vimrc" class="anchor" aria-hidden="true" href="#精简的-vimrc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;精简的 vimrc&lt;/h2&gt;
&lt;p&gt;Vim 启动是会按照一定的优先顺序来搜索配置文件，这个顺序，可以通过 &lt;code&gt;:version&lt;/code&gt; 命令查看。下面分 Windows 系统，
和 *niux 系统分别来说明 Vim 是如何载入配置文件的。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows-系统" class="anchor" aria-hidden="true" href="#windows-系统"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows 系统&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;   system vimrc file: "$VIM\vimrc"
     user vimrc file: "$HOME\_vimrc"
 2nd user vimrc file: "$HOME\vimfiles\vimrc"
 3rd user vimrc file: "$VIM\_vimrc"
      user exrc file: "$HOME\_exrc"
  2nd user exrc file: "$VIM\_exrc"
  system gvimrc file: "$VIM\gvimrc"
    user gvimrc file: "$HOME\_gvimrc"
2nd user gvimrc file: "$HOME\vimfiles\gvimrc"
3rd user gvimrc file: "$VIM\_gvimrc"
       defaults file: "$VIMRUNTIME\defaults.vim"
    system menu file: "$VIMRUNTIME\menu.vim"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们们只看上面这一段，Vim 会优先读取 user vimrc file: &lt;code&gt;$HOME\_vimrc&lt;/code&gt;, 当这一文件不存在是，
Vim 再去寻找 2nd user vimrc file: &lt;code&gt;$HOME\vimfiles\vimrc&lt;/code&gt;; 倘若这个文件还是不存在，那么 Vim
会去继续寻找 3rd user vimrc file: &lt;code&gt;$VIM\_vimrc&lt;/code&gt;。 了解以上顺序后，就不会再因为 Vim
总是不读取配置文件而感到烦恼了。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-linux-或者-mac-os" class="anchor" aria-hidden="true" href="#linux-或者-mac-os"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux 或者 Mac OS&lt;/h3&gt;
&lt;p&gt;同 Windows 系统类似，也可以使用 &lt;code&gt;:version&lt;/code&gt; 命令查看 vim 载入配置的优先顺序。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;     系统 vimrc 文件: "/etc/vimrc"
     用户 vimrc 文件: "$HOME/.vimrc"
 第二用户 vimrc 文件: "~/.vim/vimrc"
      用户 exrc 文件: "$HOME/.exrc"
       defaults file: "$VIMRUNTIME/defaults.vim"
         $VIM 预设值: "/etc"
  $VIMRUNTIME 预设值: "/usr/share/vim/vim81"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你可以在网上找到许多精简的 vimrc 配置文件，我的版本可能并不是最简单的版本，但是我的版本提供了一套我认为良好的，非常适合入门的设置。&lt;/p&gt;
&lt;p&gt;最终你需要阅读完那些设置，然后自行决定需要使用哪些。:-)&lt;/p&gt;
&lt;p&gt;精简的 vimrc 地址：&lt;a href="contents/minimal-vimrc.vim"&gt;minimal-vimrc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你有兴趣，这里是我（原作者）的 &lt;a href="https://github.com/mhinz/dotfiles/blob/master/.vim/vimrc"&gt;vimrc&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;建议&lt;/strong&gt;：大多数插件作者都维护不止一个插件并且将他们的 vimrc 放在 Github 上展示（通常放在叫做 "vim-config" 或者 "dotfiles" 的仓库中），所以当你发现你喜欢的插件时，去插件维护者的 Github 主页看看有没有这样的仓库。&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E7%AE%80%E4%BB%8B"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-我正在使用什么样的-vim" class="anchor" aria-hidden="true" href="#我正在使用什么样的-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;我正在使用什么样的 Vim&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;:version&lt;/code&gt; 命令将向你展示当前正在运行的 Vim 的所有相关信息，包括它是如何编译的。&lt;/p&gt;
&lt;p&gt;第一行告诉你这个二进制文件的编译时间和版本号，比如：7.4。接下来的一行呈现 &lt;code&gt;Included patches: 1-1051&lt;/code&gt;，这是补丁版本包。因此你 Vim 确切的版本号是 7.4.1051。&lt;/p&gt;
&lt;p&gt;另一行显示着一些像 &lt;code&gt;Tiny version without GUI&lt;/code&gt; 或者 &lt;code&gt;Huge version with GUI&lt;/code&gt; 的信息。很显然这些信息告诉你当前的 Vim 是否支持 GUI，例如：从终端中运行 &lt;code&gt;gvim&lt;/code&gt; 或者从终端模拟器中的 Vim 内运行 &lt;code&gt;:gui&lt;/code&gt; 命令。另一个重要的信息是 &lt;code&gt;Tiny&lt;/code&gt; 和 &lt;code&gt;Huge&lt;/code&gt;。Vim 的特性集区分被叫做 &lt;code&gt;tiny&lt;/code&gt;，&lt;code&gt;small&lt;/code&gt;，&lt;code&gt;normal&lt;/code&gt;，&lt;code&gt;big&lt;/code&gt; and &lt;code&gt;huge&lt;/code&gt;，所有的都实现不同的功能子集。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:version&lt;/code&gt; 主要的输出内容是特性列表。&lt;code&gt;+clipboard&lt;/code&gt; 意味这剪贴板功能被编译支持了，&lt;code&gt;-clipboard&lt;/code&gt; 意味着剪贴板特性没有被编译支持。&lt;/p&gt;
&lt;p&gt;一些功能特性需要编译支持才能正常工作。例如：为了让 &lt;code&gt;:prof&lt;/code&gt; 工作，你需要使用 &lt;code&gt;huge&lt;/code&gt; 模式编译的 Vim，因为那种模式启用了 &lt;code&gt;+profile&lt;/code&gt; 特性。&lt;/p&gt;
&lt;p&gt;如果你的输出情况并不是那样，并且你是从包管理器安装 Vim 的，确保你安装了 &lt;code&gt;vim-x&lt;/code&gt;，&lt;code&gt;vim-x11&lt;/code&gt;，&lt;code&gt;vim-gtk&lt;/code&gt;，&lt;code&gt;vim-gnome&lt;/code&gt; 这些包或者相似的，因为这些包通常都是 &lt;code&gt;huge&lt;/code&gt; 模式编译的。&lt;/p&gt;
&lt;p&gt;你也可以运行下面这段代码来测试 Vim 版本以及功能支持：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Do something if running at least Vim 7.4.42 with +profile enabled.&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;version&lt;/span&gt;&lt;span class="pl-k"&gt; &amp;gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;704&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;version&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;704&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;has&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;patch42&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;has&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;profile&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; do stuff&lt;/span&gt;
&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;相关帮助：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h :version
:h feature-list
:h +feature-list
:h has-patch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E7%AE%80%E4%BB%8B"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-备忘录" class="anchor" aria-hidden="true" href="#备忘录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;备忘录&lt;/h2&gt;
&lt;p&gt;为了避免版权问题，我只贴出链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://people.csail.mit.edu/vgod/vim/vim-cheat-sheet-en.png" rel="nofollow"&gt;http://people.csail.mit.edu/vgod/vim/vim-cheat-sheet-en.png&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cdn.shopify.com/s/files/1/0165/4168/files/preview.png" rel="nofollow"&gt;https://cdn.shopify.com/s/files/1/0165/4168/files/preview.png&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.nathael.org/Data/vi-vim-cheat-sheet.svg" rel="nofollow"&gt;http://www.nathael.org/Data/vi-vim-cheat-sheet.svg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://michael.peopleofhonoronly.com/vim/vim_cheat_sheet_for_programmers_screen.png" rel="nofollow"&gt;http://michael.peopleofhonoronly.com/vim/vim_cheat_sheet_for_programmers_screen.png&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rosipov.com/images/posts/vim-movement-commands-cheatsheet.png" rel="nofollow"&gt;http://www.rosipov.com/images/posts/vim-movement-commands-cheatsheet.png&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;或者在 Vim 中快速打开备忘录：&lt;a href="https://github.com/lifepillar/vim-cheat40"&gt;vim-cheat40&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E7%AE%80%E4%BB%8B"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-基础" class="anchor" aria-hidden="true" href="#基础"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基础&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-缓冲区窗口标签" class="anchor" aria-hidden="true" href="#缓冲区窗口标签"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;缓冲区，窗口，标签&lt;/h2&gt;
&lt;p&gt;Vim 是一个文本编辑器。每次文本都是作为&lt;strong&gt;缓冲区&lt;/strong&gt;的一部分显示的。每一份文件都是在他们自己独有的缓冲区打开的，插件显示的内容也在它们自己的缓冲区中。&lt;/p&gt;
&lt;p&gt;缓冲区有很多属性，比如这个缓冲区的内容是否可以修改，或者这个缓冲区是否和文件相关联，是否需要同步保存到磁盘上。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;窗口&lt;/strong&gt; 是缓冲区上一层的视窗。如果你想同时查看几个文件或者查看同一文件的不同位置，那样你会需要窗口。&lt;/p&gt;
&lt;p&gt;请别把他们叫做 &lt;em&gt;分屏&lt;/em&gt; 。你可以把一个窗口分割成两个，但是这并没有让这两个窗口完全 &lt;em&gt;分离&lt;/em&gt; 。&lt;/p&gt;
&lt;p&gt;窗口可以水平或者竖直分割并且现有窗口的高度和宽度都是可以被调节设置的，因此，如果你需要多种窗口布局，请考虑使用标签。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;标签页&lt;/strong&gt; （标签）是窗口的集合。因此当你想使用多种窗口布局时候请使用标签。&lt;/p&gt;
&lt;p&gt;简单的说，如果你启动 Vim 的时候没有附带任何参数，你会得到一个包含着一个呈现一个缓冲区的窗口的标签。&lt;/p&gt;
&lt;p&gt;顺带提一下，缓冲区列表是全局可见的，你可以在任何标签中访问任何一个缓冲区。&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-已激活已载入已列出已命名的缓冲区" class="anchor" aria-hidden="true" href="#已激活已载入已列出已命名的缓冲区"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;已激活、已载入、已列出、已命名的缓冲区&lt;/h2&gt;
&lt;p&gt;用类似 &lt;code&gt;vim file1&lt;/code&gt; 的命令启动 Vim 。这个文件的内容将会被加载到缓冲区中，你现在有一个&lt;strong&gt;已载入的缓冲区&lt;/strong&gt;。如果你在 Vim 中保存这个文件，缓冲区内容将会被同步到磁盘上（写回文件中）。&lt;/p&gt;
&lt;p&gt;由于这个缓冲区也在一个窗口上显示，所以他也是一个&lt;strong&gt;已激活的缓冲区&lt;/strong&gt;。如果你现在通过 &lt;code&gt;:e file2&lt;/code&gt; 命令加载另一个文件，&lt;code&gt;file1&lt;/code&gt; 将会变成一个&lt;strong&gt;隐藏的缓冲区&lt;/strong&gt;，并且 &lt;code&gt;file2&lt;/code&gt; 变成已激活缓冲区。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;:ls&lt;/code&gt; 我们能够列出所有可以列出的缓冲区。插件缓冲区和帮助缓冲区通常被标记为不可以列出的缓冲区，因为那并不是你经常需要在编辑器中编辑的常规文件。通过 &lt;code&gt;:ls!&lt;/code&gt; 命令可以显示被放入缓冲区列表的和未被放入列表的缓冲区。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;未命名的缓冲区&lt;/strong&gt;是一种没有关联特定文件的缓冲区，这种缓冲区经常被插件使用。比如 &lt;code&gt;:enew&lt;/code&gt; 将会创建一个无名临时缓冲区。添加一些文本然后使用 &lt;code&gt;:w /tmp/foo&lt;/code&gt; 将他写入到磁盘，这样这个缓冲区就会变成一个&lt;strong&gt;已命名的缓冲区&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-参数列表" class="anchor" aria-hidden="true" href="#参数列表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;参数列表&lt;/h2&gt;
&lt;p&gt;&lt;a href="#%E7%BC%93%E5%86%B2%E5%8C%BA%E7%AA%97%E5%8F%A3%E6%A0%87%E7%AD%BE"&gt;全局缓冲区列表&lt;/a&gt;是 Vim 的特性。在这之前的 vi 中，仅仅只有参数列表，参数列表在 Vim 中依旧可以使用。&lt;/p&gt;
&lt;p&gt;每一个通过 shell 命令传递给 Vim 的文件名都被记录在一个参数列表中。可以有多个参数列表：默认情况下所有参数都被放在全局参数列表下，但是你可以使用 &lt;code&gt;:arglocal&lt;/code&gt; 命令去创建一个新的本地窗口的参数列表。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;:args&lt;/code&gt; 命令可以列出当前参数。使用 &lt;code&gt;:next&lt;/code&gt;，&lt;code&gt;:previous&lt;/code&gt;，&lt;code&gt;:first&lt;/code&gt;，&lt;code&gt;:last&lt;/code&gt; 命令可以在切换在参数列表中的文件。通过使用 &lt;code&gt;:argadd&lt;/code&gt;，&lt;code&gt;:argdelete&lt;/code&gt; 或者 &lt;code&gt;:args&lt;/code&gt; 等命令加上一个文件列表可以改变参数列表。&lt;/p&gt;
&lt;p&gt;偏爱缓冲区列表还是参数列表完全是个人选择，我的印象中大多数人都是使用缓冲区列表的。&lt;/p&gt;
&lt;p&gt;然而参数列表在有些情况下被大量使用：批处理
使用 &lt;code&gt;:argdo&lt;/code&gt;！ 一个简单的重构例子：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;args&lt;/span&gt; &lt;span class="pl-k"&gt;**&lt;/span&gt;/&lt;span class="pl-k"&gt;*&lt;/span&gt;.[&lt;span class="pl-c1"&gt;ch&lt;/span&gt;]
:&lt;span class="pl-c1"&gt;argdo&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt;&lt;span class="pl-c1"&gt;s&lt;/span&gt;&lt;span class="pl-sr"&gt;/foo/&lt;/span&gt;&lt;span class="pl-c1"&gt;bar&lt;/span&gt;/ge | &lt;span class="pl-c1"&gt;update&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这条命令将替换掉当前目录下以及当前目录的子目录中所有的 C 源文件和头文件中的“foo”，并用“bar”代替。&lt;/p&gt;
&lt;p&gt;相关帮助：&lt;code&gt;:h argument-list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-按键映射" class="anchor" aria-hidden="true" href="#按键映射"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;按键映射&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;:map&lt;/code&gt; 命令家族你可以定义属于你自己的快捷键。该家族的每一个命令都限定在特定的模式下。从技术上来说 Vim 自带高达 12 中模式，其中 6 种可以被映射。另外一些命令作用于多种模式：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;  递归  &lt;/th&gt;
&lt;th&gt;  非递归    &lt;/th&gt;
&lt;th&gt;模式                          &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:map&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:noremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;normal, visual, operator-pending&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:nmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:nnoremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;normal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:xmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:xnoremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;visual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:cnoremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;command-line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:omap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:onoremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;operator-pending&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:imap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:inoremap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;insert&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;例如：这个自定义的快捷键只在普通模式下工作。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;space&amp;gt;&lt;/span&gt; :&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用 &lt;code&gt;:nunmap &amp;lt;space&amp;gt;&lt;/code&gt; 可以取消这个映射。&lt;/p&gt;
&lt;p&gt;对于更少数，不常见的模式（或者他们的组合），查看 &lt;code&gt;:h map-modes&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;到现在为止还好，对新手而言有一个问题会困扰他们：&lt;code&gt;:nmap&lt;/code&gt; 是&lt;strong&gt;递归执行&lt;/strong&gt;的！结果是，右边执行可能的映射。&lt;/p&gt;
&lt;p&gt;你自定义了一个简单的映射去输出“Foo”：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;b&lt;/span&gt; :&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是如果你想要映射 &lt;code&gt;b&lt;/code&gt; （回退一个单词）的默认功能到一个键上呢？&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;a&lt;/span&gt; &lt;span class="pl-c1"&gt;b&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你敲击&lt;kbd&gt;a&lt;/kbd&gt;，我们期望着光标回退到上一个单词，但是实际情况是“Foo”被输出到命令行里！因为在右边，&lt;code&gt;b&lt;/code&gt; 已经被映射到别的行为上了，换句话说就是 &lt;code&gt;:echo "Foo"&amp;lt;cr&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;解决此问题的正确方法是使用一种 &lt;em&gt;非递归&lt;/em&gt; 的映射代替：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;a&lt;/span&gt; &lt;span class="pl-c1"&gt;b&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;经验法则：除非递归是必须的，否则总是使用非递归映射。&lt;/p&gt;
&lt;p&gt;通过不给一个右值来检查你的映射。比如&lt;code&gt;:nmap&lt;/code&gt; 显示所以普通模式下的映射，&lt;code&gt;:nmap &amp;lt;leader&amp;gt;&lt;/code&gt; 显示所有以 &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; 键开头的普通模式下的映射。&lt;/p&gt;
&lt;p&gt;如果你想禁止用标准映射，把他们映射到特殊字符 &lt;code&gt;&amp;lt;nop&amp;gt;&lt;/code&gt; 上，例如：&lt;code&gt;:noremap &amp;lt;left&amp;gt; &amp;lt;nop&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;相关帮助：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;notation
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;mapping&lt;/span&gt;
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;05.3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-映射前置键" class="anchor" aria-hidden="true" href="#映射前置键"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;映射前置键&lt;/h2&gt;
&lt;p&gt;映射前置键（Leader 键）本身就是一个按键映射，默认为 &lt;kbd&gt;\&lt;/kbd&gt;。我们可以通过在 &lt;code&gt;map&lt;/code&gt; 中调用 &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; 来为把它添加到其他按键映射中。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;h&lt;/span&gt; :&lt;span class="pl-c1"&gt;helpgrep&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;space&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样，我们只需要先按 &lt;kbd&gt;\&lt;/kbd&gt; 然后连续按 &lt;kbd&gt;\h&lt;/kbd&gt; 就可以激活这个映射 &lt;code&gt;:helpgrep&amp;lt;space&amp;gt;&lt;/code&gt;。如果你想通过先按 &lt;kbd&gt;空格&lt;/kbd&gt; 键来触发，只需要这样做：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;mapleader&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;h&lt;/span&gt; :&lt;span class="pl-c1"&gt;helpgrep&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;space&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此处建议使用 &lt;code&gt;g:mapleader&lt;/code&gt;，因为在 Vim 脚本中，函数外的变量缺省的作用域是全局变量，但是在函数内缺省作用域是局部变量，而设置快捷键前缀需要修改全局变量 &lt;code&gt;g:mapleader&lt;/code&gt; 的值。&lt;/p&gt;
&lt;p&gt;另外，还有一个叫 &lt;code&gt;&amp;lt;localleader&amp;gt;&lt;/code&gt; 的，可以把它理解为局部环境中的 &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt;，默认值依然为 &lt;kbd&gt;\&lt;/kbd&gt;。当我们需要只对某一个条件下（比如，特定文件类型的插件）的缓冲区设置特别的 &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; 键，那么我们就可以通过修改当前环境下的 &lt;code&gt;&amp;lt;localleader&amp;gt;&lt;/code&gt; 来实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：如果你打算设置 Leader 键，请确保在设置按键映射之前，先设置好 Leader 键。如果你先设置了含有 Leader 键的映射，然后又修改了 Leader 键，那么之前映射内的 Leader 键是不会因此而改变的。你可以通过执行 &lt;code&gt;:nmap &amp;lt;leader&amp;gt;&lt;/code&gt; 来查看普通模式中已绑定给 Leader 键的所有映射。&lt;/p&gt;
&lt;p&gt;请参阅 &lt;code&gt;:h mapleader&lt;/code&gt; 与 &lt;code&gt;:h maploacalleader&lt;/code&gt; 来获取更多帮助。&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-寄存器" class="anchor" aria-hidden="true" href="#寄存器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;寄存器&lt;/h2&gt;
&lt;p&gt;寄存器就是存储文本的地方。我们常用的「复制」操作就是把文本存储到寄存器，「 粘贴」 操作就是把文本从寄存器中读出来。顺便，在 Vim 中复制的快捷键是 &lt;kbd&gt;y&lt;/kbd&gt;，粘贴的快捷键是 &lt;kbd&gt;p&lt;/kbd&gt;。&lt;/p&gt;
&lt;p&gt;Vim 为我们提供了如下的寄存器：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;标识&lt;/th&gt;
&lt;th&gt;读写者&lt;/th&gt;
&lt;th&gt;是否为只读&lt;/th&gt;
&lt;th&gt;包含的字符来源&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Unnamed&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;最近一次的复制或删除操作 (&lt;code&gt;d&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Numbered&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;至&lt;code&gt;9&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;寄存器 &lt;code&gt;0&lt;/code&gt;: 最近一次复制。寄存器 &lt;code&gt;1&lt;/code&gt;: 最近一次删除。寄存器 &lt;code&gt;2&lt;/code&gt;: 倒数第二次删除，以此类推。对于寄存器 &lt;code&gt;1&lt;/code&gt; 至 &lt;code&gt;9&lt;/code&gt;，他们其实是只读的最多包含 9 个元素的队列。这里的队列即为数据类型 &lt;a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)" rel="nofollow"&gt;queue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Small delete&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;最近一次行内删除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Named&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt;至&lt;code&gt;z&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;至&lt;code&gt;Z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用户&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;如果你通过复制操作存储文本至寄存器 &lt;code&gt;a&lt;/code&gt;，那么 &lt;code&gt;a&lt;/code&gt; 中的文本就会被完全覆盖。如果你存储至 &lt;code&gt;A&lt;/code&gt;，那么会将文本添加给寄存器 &lt;code&gt;a&lt;/code&gt;，不会覆盖之前已有的文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read-only&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:&lt;/code&gt;与&lt;code&gt;.&lt;/code&gt;和&lt;code&gt;%&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:&lt;/code&gt;: 最近一次使用的命令，&lt;code&gt;.&lt;/code&gt;: 最近一次添加的文本，&lt;code&gt;%&lt;/code&gt;: 当前的文件名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alternate buffer&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;大部分情况下，这个寄存器是当前窗口中，上一次访问的缓冲区。请参阅 &lt;code&gt;:h alternate-file&lt;/code&gt; 来获取更多帮助&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Expression&lt;/td&gt;
&lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用户&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;复制 VimL 代码时，这个寄存器用于存储代码片段的执行结果。比如，在插入模式下复制 &lt;code&gt;&amp;lt;c-r&amp;gt;=5+5&amp;lt;cr&amp;gt;&lt;/code&gt;，那么这个寄存器就会存入 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Selection&lt;/td&gt;
&lt;td&gt;&lt;code&gt;+&lt;/code&gt;和&lt;code&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*&lt;/code&gt; 和 &lt;code&gt;+&lt;/code&gt; 是 &lt;a href="#%E5%89%AA%E8%B4%B4%E6%9D%BF"&gt;剪贴板&lt;/a&gt; 寄存器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Drop&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;最后一次拖拽添加至 Vim 的文本（需要 "+dnd" 支持，暂时只支持 GTK GUI。请参阅 &lt;code&gt;:help dnd&lt;/code&gt; 及 &lt;code&gt;:help quote~&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Black hole&lt;/td&gt;
&lt;td&gt;&lt;code&gt;_&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;一般称为黑洞寄存器。对于当前操作，如果你不希望在其他寄存器中保留文本，那就在命令前加上 &lt;code&gt;_&lt;/code&gt;。比如，&lt;code&gt;"_dd&lt;/code&gt; 命令不会将文本放到寄存器 &lt;code&gt;"&lt;/code&gt;、&lt;code&gt;1&lt;/code&gt;、&lt;code&gt;+&lt;/code&gt; 或 &lt;code&gt;*&lt;/code&gt; 中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Last search pattern&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;最近一次通过 &lt;code&gt;/&lt;/code&gt;、&lt;code&gt;?&lt;/code&gt; 或 &lt;code&gt;:global&lt;/code&gt; 等命令调用的匹配条件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;只要不是只读的寄存器，用户都有权限修改它的内容，比如：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;@/&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;register&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样，我们按 &lt;kbd&gt;n&lt;/kbd&gt; 的时候就会跳转到单词"register" 出现的地方。&lt;/p&gt;
&lt;p&gt;有些时候，你的操作可能已经修改了寄存器，而你没有察觉到。请参阅 &lt;code&gt;:h registers&lt;/code&gt; 获取更多帮助。&lt;/p&gt;
&lt;p&gt;上面提到过，复制的命令是 &lt;kbd&gt;y&lt;/kbd&gt;，粘贴的命令是 &lt;kbd&gt;p&lt;/kbd&gt; 或者 &lt;kbd&gt;P&lt;/kbd&gt;。但请注意，Vim 会区分「字符选取」与「行选取」。请参阅 &lt;code&gt;:h linewise&lt;/code&gt; 获取更多帮助。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;行选取&lt;/strong&gt;：
命令 &lt;code&gt;yy&lt;/code&gt; 或 &lt;code&gt;Y&lt;/code&gt; 都是复制当前行。这时移动光标至其他位置，按下 &lt;code&gt;p&lt;/code&gt; 就可以在光标下方粘贴复制的行，按下 &lt;code&gt;P&lt;/code&gt; 就可以在光标上方粘贴至复制的行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;字符选取&lt;/strong&gt;：
命令 &lt;code&gt;0yw&lt;/code&gt; 可以复制第一个单词。这时移动光标至其他位置，按下 &lt;code&gt;p&lt;/code&gt; 就可以在当前行、光标后的位置粘贴单词，按下 &lt;code&gt;P&lt;/code&gt; 就可以在当前行、光标前的位置粘贴单词。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将文本存到指定的寄存器中&lt;/strong&gt;：
命令 &lt;code&gt;"aY&lt;/code&gt; 可以将当前行复制，并存储到寄存器 &lt;code&gt;a&lt;/code&gt; 中。这时移动光标至其他位置，通过命令 &lt;code&gt;"AY&lt;/code&gt; 就可以把这一行的内容扩展到寄存器 &lt;code&gt;a&lt;/code&gt; 中，而之前存储的内容也不会丢失。&lt;/p&gt;
&lt;p&gt;为了便于理解和记忆，建议大家现在就试一试上面提到的这些操作。操作过程中，你可以随时通过 &lt;code&gt;:reg&lt;/code&gt; 来查看寄存器的变化。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有趣的是&lt;/strong&gt;：
在 Vim 中，&lt;code&gt;y&lt;/code&gt; 是复制命令，源于单词 "yanking"。而在 Emacs 中，"yanking" 代表的是粘贴（或者说，重新插入刚才删掉的内容），而并不是复制。&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-范围" class="anchor" aria-hidden="true" href="#范围"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;范围&lt;/h2&gt;
&lt;p&gt;范围 (Ranges) 其实很好理解，但很多 Vim 用户的理解不到位。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;很多命令都可以加一个数字，用于指明操作范围&lt;/li&gt;
&lt;li&gt;范围可以是一个行号，用于指定某一行&lt;/li&gt;
&lt;li&gt;范围也可以是一对通过 &lt;code&gt;,&lt;/code&gt; 或 &lt;code&gt;;&lt;/code&gt; 分割的行号&lt;/li&gt;
&lt;li&gt;大部分命令，默认只作用于当前行&lt;/li&gt;
&lt;li&gt;只有 &lt;code&gt;:write&lt;/code&gt; 和 &lt;code&gt;:global&lt;/code&gt; 是默认作用于所有行的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;范围的使用是十分直观的。以下为一些例子（其中，&lt;code&gt;:d&lt;/code&gt; 为 &lt;code&gt;:delete&lt;/code&gt; 的缩写）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;操作的行&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:.d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:1d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:$d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最后一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:1,$d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;所有行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:%d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;所有行（这是 &lt;code&gt;1,$&lt;/code&gt; 的语法糖）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:.,5d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前行至第 5 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,5d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;同样是当前行至第 5 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,+3d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前行及接下来的 3 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:1,+3d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第一行至当前行再加 3 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,-3d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前行及向上的 3 行（Vim 会弹出提示信息，因为这是一个保留的范围）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:3,'xdelete&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第三行至&lt;a href="#%E6%A0%87%E6%B3%A8"&gt;标注&lt;/a&gt; 为 x 的那一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:/^foo/,$delete&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前行以下，以字符 "foo" 开头的那一行至结尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:/^foo/+1,$delete&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前行以下，以字符 "foo" 开头的那一行的下一行至结尾&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;需要注意的是，&lt;code&gt;;&lt;/code&gt; 也可以用于表示范围。区别在于，&lt;code&gt;a,b&lt;/code&gt; 的 &lt;code&gt;b&lt;/code&gt; 是以当前行作为参考的。而 &lt;code&gt;a;b&lt;/code&gt; 的 &lt;code&gt;b&lt;/code&gt; 是以 &lt;code&gt;a&lt;/code&gt; 行作为参考的。举个例子，现在你的光标在第 5 行。这时 &lt;code&gt;:1,+1d&lt;/code&gt; 会删除第 1 行至第 6 行，而 &lt;code&gt;:1;+1d&lt;/code&gt; 会删除第 1 行和第 2 行。&lt;/p&gt;
&lt;p&gt;如果你想设置多个寻找条件，只需要在条件前加上 &lt;code&gt;/&lt;/code&gt;，比如：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-sr"&gt;/foo//bar//quux/&lt;/span&gt;&lt;span class="pl-c1"&gt;d&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这就会删除当前行之后的某一行。定位方式是，先在当前行之后寻找第一个包含 "foo" 字符的那一行，然后在找到的这一行之后寻找第一个包含 "bar" 字符的那一行，然后再在找到的这一行之后寻找第一个包含 "quux" 的那一行。删除的就是最后找到的这一行。&lt;/p&gt;
&lt;p&gt;有时，Vim 会在命令前自动添加范围。举个例子，如果你先通过 &lt;code&gt;V&lt;/code&gt; 命令进入行选取模式，选中一些行后按下 &lt;code&gt;:&lt;/code&gt; 进入命令模式，这时候你会发现 Vim 自动添加了 &lt;code&gt;'&amp;lt;,'&amp;gt;&lt;/code&gt; 范围。这表示，接下来的命令会使用之前选取的行号作为范围。但如果后续命令不支持范围，Vim 就会报错。为了避免这样的情况发生，有些人会设置这样的按键映射：&lt;code&gt;:vnoremap foo :&amp;lt;c-u&amp;gt;command&lt;/code&gt;，组合键 &lt;kbd&gt;Ctrl + u&lt;/kbd&gt; 可以清除当前命令行中的内容。&lt;/p&gt;
&lt;p&gt;另一个例子是在普通模式中按下 &lt;code&gt;!!&lt;/code&gt;，命令行中会出现 &lt;code&gt;:.!&lt;/code&gt;。如果这时你如果输入一个外部命令，那么当前行的内容就会被这个外部命令的输出替换。你也可以通过命令 &lt;code&gt;:?^$?+1,/^$/-1!ls&lt;/code&gt; 把当前段落的内容替换成外部命令 &lt;code&gt;ls&lt;/code&gt; 的输出，原理是向前和向后各搜索一个空白行，删除这两个空白行之间的内容，并将外部命令 &lt;code&gt;ls&lt;/code&gt; 的输出放到这两个空白行之间。&lt;/p&gt;
&lt;p&gt;请参阅以下两个命令来获取更多帮助：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; cmdline&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;ranges&lt;/span&gt;
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;10.3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-标注" class="anchor" aria-hidden="true" href="#标注"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;标注&lt;/h2&gt;
&lt;p&gt;你可以使用标注功能来标记一个位置，也就是记录文件某行的某个位置。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标注&lt;/th&gt;
&lt;th&gt;设置者&lt;/th&gt;
&lt;th&gt;使用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用户&lt;/td&gt;
&lt;td&gt;仅对当前的一个文件生效，也就意味着只可以在当前文件中跳转&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用户&lt;/td&gt;
&lt;td&gt;全局标注，可以作用于不同文件。大写标注也称为「文件标注」。跳转时有可能会切换到另一个缓冲区&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;viminfo&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt; 代表 viminfo 最后一次被写入的位置。实际使用中，就代表 Vim 进程最后一次结束的位置。&lt;code&gt;1&lt;/code&gt; 代表 Vim 进程倒数第二次结束的位置，以此类推&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果想跳转到指定的标注，你可以先按下 &lt;code&gt;'&lt;/code&gt; / &lt;code&gt;g'&lt;/code&gt; 或者 &lt;code&gt;`&lt;/code&gt; / &lt;code&gt;g`&lt;/code&gt; 然后按下标注名。&lt;/p&gt;
&lt;p&gt;如果你想定义当前文件中的标注，可以先按下 &lt;code&gt;m&lt;/code&gt; 再按下标注名。比如，按下 &lt;code&gt;mm&lt;/code&gt; 就可以把当前位置标注为 &lt;code&gt;m&lt;/code&gt;。在这之后，如果你的光标切换到了文件的其他位置，只需要通过 &lt;code&gt;'m&lt;/code&gt; 或者 &lt;code&gt;`m&lt;/code&gt;即可回到刚才标注的行。区别在于，&lt;code&gt;'m&lt;/code&gt;会跳转回被标记行的第一个非空字符，而&lt;code&gt;`m&lt;/code&gt;会跳转回被标记行的被标记列。根据 viminfo 的设置，你可以在退出 Vim 的时候保留小写字符标注。请参阅&lt;code&gt;:h viminfo-'&lt;/code&gt; 来获取更多帮助。&lt;/p&gt;
&lt;p&gt;如果你想定义全局的标注，可以先按下 &lt;code&gt;m&lt;/code&gt; 再按下大写英文字符。比如，按下 &lt;code&gt;mM&lt;/code&gt; 就可以把当前文件的当前位置标注为 &lt;code&gt;M&lt;/code&gt;。在这之后，就算你切换到其他的缓冲区，依然可以通过 &lt;code&gt;'M&lt;/code&gt; 或 &lt;code&gt;`M&lt;/code&gt; 跳转回来。&lt;/p&gt;
&lt;p&gt;关于跳转，还有以下的方式：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;按键&lt;/th&gt;
&lt;th&gt;跳转至&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'[&lt;/code&gt; 与 &lt;code&gt;`[&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上一次修改或复制的第一行或第一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;']&lt;/code&gt; 与 &lt;code&gt;`]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上一次修改或复制的最后一行或最后一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'&amp;lt;&lt;/code&gt; 与 &lt;code&gt;`&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上一次在可视模式下选取的第一行或第一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'&amp;gt;&lt;/code&gt; 与 &lt;code&gt;`&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上一次在可视模式下选取的最后一行或最后一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;''&lt;/code&gt; 与 &lt;code&gt;`'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上一次跳转之前的光标位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'"&lt;/code&gt; 与 &lt;code&gt;`"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上一次关闭当前缓冲区时的光标位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'^&lt;/code&gt; 与 &lt;code&gt;`^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上一次插入字符后的光标位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'.&lt;/code&gt; 与 &lt;code&gt;`.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上一次修改文本后的光标位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'(&lt;/code&gt; 与 &lt;code&gt;`(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前句子的开头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;')&lt;/code&gt; 与 &lt;code&gt;`)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前句子的结尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'{&lt;/code&gt; 与 &lt;code&gt;`{&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前段落的开头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;'}&lt;/code&gt; 与 &lt;code&gt;`}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前段落的结尾&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;标注也可以搭配 &lt;a href="#%E8%8C%83%E5%9B%B4"&gt;范围&lt;/a&gt; 一起使用。前面提到过，如果你在可视模式下选取一些文本，然后按下 &lt;code&gt;:&lt;/code&gt;，这时候你会发现命令行已经被填充了 &lt;code&gt;:'&amp;lt;,'&amp;gt;&lt;/code&gt;。对照上面的表格，现在你应该明白了，这段代表的就是可视模式下选取的范围。&lt;/p&gt;
&lt;p&gt;请使用 &lt;code&gt;:marks&lt;/code&gt; 命令来显示所有的标注，参阅 &lt;code&gt;:h mark-motions&lt;/code&gt; 来获取关于标注的更多帮助。&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-补全" class="anchor" aria-hidden="true" href="#补全"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;补全&lt;/h2&gt;
&lt;p&gt;Vim 在插入模式中为我们提供了多种补全方案。如果有多个补全结果，Vim 会弹出一个菜单供你选择。&lt;/p&gt;
&lt;p&gt;常见的补全有标签、项目中引入的模块或库中的方法名、文件名、字典及当前缓冲区的字段。&lt;/p&gt;
&lt;p&gt;针对不同的补全方案，Vim 为我们提供了不同的按键映射。这些映射都是在&lt;strong&gt;插入模式中&lt;/strong&gt;通过 &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;x&lt;/kbd&gt; 来触发：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;映射&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;帮助文档&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-l&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;整行&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^l&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-n&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前缓冲区中的关键字&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^n&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-k&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;字典（请参阅 &lt;code&gt;:h 'dictionary'&lt;/code&gt;）中的关键字&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^k&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-t&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;同义词字典（请参阅 &lt;code&gt;:h 'thesaurus'&lt;/code&gt;）中的关键字&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-i&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前文件以及包含的文件中的关键字&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^i&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-]&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;标签&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-f&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文件名&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-d&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;定义或宏定义&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^d&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-v&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Vim 命令&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^v&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-u&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用户自定义补全（通过 &lt;code&gt;'completefunc'&lt;/code&gt; 定义）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^u&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-o&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Omni Completion（通过 &lt;code&gt;'omnifunc'&lt;/code&gt; 定义）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^x^o&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;拼写建议&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h i^Xs&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;尽管用户自定义补全与 Omni Completion 是不同的，但他们做的事情基本一致。共同点在于，他们都是一个监听当前光标位置的函数，返回值为一系列的补全建议。用户自定义补全是由用户定义的，基于用户的个人用途，因此你可以根据自己的喜好和需求随意定制。而 Omni Completion 是针对文件类型的补全，比如在 C 语言中补全一个结构体（struct）的成员（members），或者补全一个类的方法，因而它通常都是由文件类型插件设置和调用的。&lt;/p&gt;
&lt;p&gt;如果你设置了 &lt;code&gt;'complete'&lt;/code&gt; 选项，那么你就可以在一次操作中采用多种补全方案。这个选项默认包含了多种可能性，因此请按照自己的需求来配置。你可以通过 &lt;code&gt;&amp;lt;c-n&amp;gt;&lt;/code&gt; 来调用下一个补全建议，或通过 &lt;code&gt;&amp;lt;c-p&amp;gt;&lt;/code&gt; 来调用上一个补全建议。当然，这两个映射同样可以直接调用补全函数。请参阅 &lt;code&gt;:h i^n&lt;/code&gt; 与 &lt;code&gt;:h 'complete'&lt;/code&gt; 来获得更多帮助。&lt;/p&gt;
&lt;p&gt;如果你想配置弹出菜单的行为，请一定要看一看 &lt;code&gt;:h 'completeopt'&lt;/code&gt; 这篇帮助文档。默认的配置已经不错了，但我个人（原作者）更倾向于把 "noselect" 加上。&lt;/p&gt;
&lt;p&gt;请参阅以下文档获取更多帮助：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; ins&lt;span class="pl-k"&gt;-&lt;/span&gt;completion
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; popupmenu&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;keys&lt;/span&gt;
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;new&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;omni&lt;span class="pl-k"&gt;-&lt;/span&gt;completion&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-动作操作符文本对象" class="anchor" aria-hidden="true" href="#动作操作符文本对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;动作，操作符，文本对象&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;动作&lt;/strong&gt;也就是指移动光标的操作，你肯定很熟悉 &lt;code&gt;h&lt;/code&gt;、&lt;code&gt;j&lt;/code&gt;、&lt;code&gt;k&lt;/code&gt; 和 &lt;code&gt;l&lt;/code&gt;，以及 &lt;code&gt;w&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt;。但其实，&lt;code&gt;/&lt;/code&gt; 也是一个动作。他们都可以搭配数字使用，比如 &lt;code&gt;2?the&amp;lt;cr&amp;gt;&lt;/code&gt; 可以将光标移动到倒数第二个 "the" 出现的位置。&lt;/p&gt;
&lt;p&gt;以下会列出一些常用的动作。你也可以通过 &lt;code&gt;:h navigation&lt;/code&gt; 来获取更多的帮助。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;操作符&lt;/strong&gt;是对某个区域文本执行的操作。比如，&lt;code&gt;d&lt;/code&gt;、&lt;code&gt;~&lt;/code&gt;、&lt;code&gt;gU&lt;/code&gt; 和 &lt;code&gt;&amp;gt;&lt;/code&gt; 都是操作符。这些操作符既可以在普通模式下使用，也可以在可视模式下使用。在普通模式中，顺序是先按操作符，再按动作指令，比如 &lt;code&gt;&amp;gt;j&lt;/code&gt;。在可视模式中，选中区域后直接按操作符就可以，比如 &lt;code&gt;Vjd&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;与动作一样，操作符也可以搭配数字使用，比如 &lt;code&gt;2gUw&lt;/code&gt; 可以将当前单词以及下一个单词转成大写。由于动作和操作符都可以搭配数字使用，因此 &lt;code&gt;2gU2w&lt;/code&gt; 与执行两次 &lt;code&gt;gU2w&lt;/code&gt; 效果是相同的。&lt;/p&gt;
&lt;p&gt;请参阅 &lt;code&gt;:h operator&lt;/code&gt; 来查看所有的操作符。你也可以通过 &lt;code&gt;:set tildeop&lt;/code&gt; 命令把 &lt;code&gt;~&lt;/code&gt; 也变成一个操作符&lt;/p&gt;
&lt;p&gt;值得注意的是，动作是单向的，而&lt;strong&gt;文本对象&lt;/strong&gt;是双向的。文本对象不仅作用于符号（比如括号、中括号和大括号等）标记的范围内，也作用于整个单词、整个句子等其他情况。&lt;/p&gt;
&lt;p&gt;文本对象不能用于普通模式中移动光标的操作，因为光标还没有智能到可以向两个方向同时跳转。但这个功能可以在可视模式中实现，因为在对象的一端选中的情况下，光标只需要跳转到另一端就可以了。&lt;/p&gt;
&lt;p&gt;文本对象操作一般用 &lt;code&gt;i&lt;/code&gt; 或 &lt;code&gt;a&lt;/code&gt; 加上对象标识符操作，其中 &lt;code&gt;i&lt;/code&gt; 表示在对象内（英文 inner）操作，&lt;code&gt;a&lt;/code&gt; 表示对整个对象（英文 around）操作，这时开头和结尾的空格都会被考虑进来。举个例子，&lt;code&gt;diw&lt;/code&gt; 可以删除当前单词，&lt;code&gt;ci(&lt;/code&gt; 可以改变括号中的内容。&lt;/p&gt;
&lt;p&gt;文本对象同样可以与数字搭配使用。比如，像 &lt;code&gt;((( )))&lt;/code&gt; 这样的文本，假如光标位于最内层的括号上或最内层的括号内，那么 &lt;code&gt;d2a(&lt;/code&gt; 将会删除从最内层开始的两对括号，以及他们之间的所有内容。其实，&lt;code&gt;d2a(&lt;/code&gt; 这个操作等同于 &lt;code&gt;2da(&lt;/code&gt;。在 Vim 的命令中，如果有两处都可以接收数字作为参数，那么最终结果就等同于两个数字相乘。在这里，&lt;code&gt;d&lt;/code&gt; 与 &lt;code&gt;a(&lt;/code&gt; 都是可以接收参数的，一个参数是 1，另一个是 2，我们可以把它们相乘然后放到最前面。&lt;/p&gt;
&lt;p&gt;请参阅 &lt;code&gt;:h text-objects&lt;/code&gt; 来获取更多关于文本对象的帮助。&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-自动命令" class="anchor" aria-hidden="true" href="#自动命令"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自动命令&lt;/h2&gt;
&lt;p&gt;在特定的情况下，Vim 会传出事件。如果你想针对这些事件执行回调方法，那么就需要用到自动命令这个功能。&lt;/p&gt;
&lt;p&gt;如果没有了自动命令，那你基本上是用不了 Vim 的。自动命令一直都在执行，只是很多时候你没有注意到。不信的话，可以执行命令 &lt;code&gt;:au&lt;/code&gt; ，不要被结果吓到，这些是当前有效的所有自动命令。&lt;/p&gt;
&lt;p&gt;请使用 &lt;code&gt;:h {event}&lt;/code&gt; 来查看 Vim 中所有事件的列表，你也可以参考 &lt;code&gt;:h autocmd-events-abc&lt;/code&gt; 来获取关于事件的更多帮助。&lt;/p&gt;
&lt;p&gt;一个很常用的例子，就是针对文件类型执行某些设置：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;FileType&lt;/span&gt; &lt;span class="pl-c1"&gt;ruby&lt;/span&gt; &lt;span class="pl-c1"&gt;setlocal&lt;/span&gt; &lt;span class="pl-c1"&gt;shiftwidth&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;softtabstop&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;comments&lt;/span&gt;&lt;span class="pl-k"&gt;-=&lt;/span&gt;:#&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是缓冲区是如何知道当前的文件中包含 Ruby 代码呢？这其实是另一个自动命令检测的到的，然后把文件类型设置成为 Ruby，这样就触发了上面的 &lt;code&gt;FileType&lt;/code&gt; 事件。&lt;/p&gt;
&lt;p&gt;在配置 vimrc 的时候，一般第一行加进去的就是 &lt;code&gt;filetype on&lt;/code&gt;。这就意味着，Vim 启动时会读取 &lt;code&gt;filetype.vim&lt;/code&gt; 文件，然后根据文件类型来触发相应的自动命令。&lt;/p&gt;
&lt;p&gt;如果你勇于尝试，可以查看下 &lt;code&gt;:e $VIMRUNTIME/filetype.vim&lt;/code&gt;，然后在输出中搜索 "Ruby"。这样，你就会发现其实 Vim 只是通过文件扩展名 &lt;code&gt;.rb&lt;/code&gt; 判断某个文件是不是 Ruby 的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：对于相同事件，如果有多个自动命令，那么自动命令会按照定义时的顺序执行。通过 &lt;code&gt;:au&lt;/code&gt; 就可以查看它们的执行顺序。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;au&lt;/span&gt; &lt;span class="pl-c1"&gt;BufNewFile&lt;/span&gt;,&lt;span class="pl-c1"&gt;BufRead&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.rb,&lt;span class="pl-k"&gt;*&lt;/span&gt;.rbw &lt;span class="pl-c1"&gt;setf&lt;/span&gt; &lt;span class="pl-c1"&gt;ruby&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;BufNewFile&lt;/code&gt; 与 &lt;code&gt;BufRead&lt;/code&gt; 事件是被写在 Vim 源文件中的。因此，每当你通过 &lt;code&gt;:e&lt;/code&gt; 或者类似的命令打开文件，这两个事件都会触发。然后，就是读取 &lt;code&gt;filetype.vim&lt;/code&gt; 文件来判断打开的文件类型。&lt;/p&gt;
&lt;p&gt;简单来说，事件和自动命令在 Vim 中的应用十分广泛。而且，Vim 为我们留出了一些易用的接口，方便用户配置适合自己的事件驱动回调。&lt;/p&gt;
&lt;p&gt;请参阅 &lt;code&gt;:h autocommand&lt;/code&gt; 来获取更多帮助&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-变更历史跳转历史" class="anchor" aria-hidden="true" href="#变更历史跳转历史"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;变更历史，跳转历史&lt;/h2&gt;
&lt;p&gt;在 Vim 中，用户最近 100 次的文字改动都会被保存在&lt;strong&gt;变更历史&lt;/strong&gt;中。如果在同一行有多个小改动，那么 Vim 会把它们合并成一个。尽管内容改动会合并，但作用的位置还是会只记录下最后一次改动的位置。&lt;/p&gt;
&lt;p&gt;在你移动光标或跳转的时候，每一次的移动或跳转前的位置会被记录到&lt;strong&gt;跳转历史&lt;/strong&gt;中。类似地，跳转历史也可以最多保存 100 条记录。对于每个窗口，跳转记录是独立的。但当你分离窗口时（比如使用 &lt;code&gt;:split&lt;/code&gt; 命令），跳转历史会被复制过去。&lt;/p&gt;
&lt;p&gt;Vim 中的跳转命令，包括 &lt;code&gt;'&lt;/code&gt;、&lt;code&gt;`&lt;/code&gt;、&lt;code&gt;G&lt;/code&gt;、&lt;code&gt;/&lt;/code&gt;、&lt;code&gt;?&lt;/code&gt;、&lt;code&gt;n&lt;/code&gt;、&lt;code&gt;N&lt;/code&gt;、&lt;code&gt;%&lt;/code&gt;、&lt;code&gt;(&lt;/code&gt;、&lt;code&gt;)&lt;/code&gt;、&lt;code&gt;[[&lt;/code&gt;、&lt;code&gt;]]&lt;/code&gt;、&lt;code&gt;{&lt;/code&gt;、&lt;code&gt;}&lt;/code&gt;、&lt;code&gt;:s&lt;/code&gt;、&lt;code&gt;:tag&lt;/code&gt;、&lt;code&gt;L&lt;/code&gt;、&lt;code&gt;M&lt;/code&gt;、&lt;code&gt;H&lt;/code&gt; 以及开始编辑一个新文件的命令。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;列表&lt;/th&gt;
&lt;th&gt;显示所有条目&lt;/th&gt;
&lt;th&gt;跳转到上一个位置&lt;/th&gt;
&lt;th&gt;跳转到下一个位置&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;跳转历史&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:jumps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[count]&amp;lt;c-o&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[count]&amp;lt;c-i&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;变更历史&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:changes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[count]g;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[count]g,&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果你执行第二列的命令显示所有条目，这时 Vim 会用 &lt;code&gt;&amp;gt;&lt;/code&gt; 标记来为你指示当前位置。通常这个标记位于 1 的下方，也就代表最后一次的位置。&lt;/p&gt;
&lt;p&gt;如果你希望关闭 Vim 之后还保留这些条目，请参阅 &lt;code&gt;:h viminfo-'&lt;/code&gt; 来获取更多帮助。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：上面提到过，最后一次跳转前的位置也会记录在&lt;a href="#%E6%A0%87%E6%B3%A8"&gt;标注&lt;/a&gt;中，也可以通过连按 &lt;kbd&gt;``&lt;/kbd&gt; 或 &lt;kbd&gt;''&lt;/kbd&gt; 跳转到那个位置&lt;/p&gt;
&lt;p&gt;请参阅以下两个命令来获取更多帮助：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; changelist
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; jumplist&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-内容变更历史记录" class="anchor" aria-hidden="true" href="#内容变更历史记录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;内容变更历史记录&lt;/h2&gt;
&lt;p&gt;Vim 会记录文本改变之前的状态。因此，你可以使用「撤销」操作 &lt;kbd&gt;u&lt;/kbd&gt; 来取消更改，也可以通过「重做」操作 &lt;kbd&gt;Ctrl + r&lt;/kbd&gt; 来恢复更改。&lt;/p&gt;
&lt;p&gt;值得注意的是，Vim 采用 &lt;a href="https://en.wikipedia.org/wiki/Tree_(data_structure)" rel="nofollow"&gt;tree&lt;/a&gt; 数据结构来存储内容变更的历史记录，而不是采用 &lt;a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)" rel="nofollow"&gt;queue&lt;/a&gt;。你的每次改动都会成为存储为树的节点。而且，除了第一次改动（根节点），之后的每次改动都可以找到一个对应的父节点。每一个节点都会记录改动的内容和时间。其中，「分支」代表从任一节点到根节点的路径。当你进行了撤销操作，然后又输入了新的内容，这时候就相当于创建了分支。这个原理和 git 中的 branch（分支）十分类似。&lt;/p&gt;
&lt;p&gt;考虑以下这一系列按键操作：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;ifoo&lt;span class="pl-c1"&gt;&amp;lt;esc&amp;gt;&lt;/span&gt;
obar&lt;span class="pl-c1"&gt;&amp;lt;esc&amp;gt;&lt;/span&gt;
obaz&lt;span class="pl-c1"&gt;&amp;lt;esc&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;u&lt;/span&gt;
oquux&lt;span class="pl-c1"&gt;&amp;lt;exc&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那么现在，Vim 中会显示三行文本，分别是 "foo"、"bar" 和 "quux"。这时候，存储的树形结构如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;     foo(1)
       /
    bar(2)
   /      \
baz(3)   quux(4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个树形结构共包含四次改动，括号中的数字就代表时间顺序。&lt;/p&gt;
&lt;p&gt;现在，我们有两种方式遍历这个树结构。一种叫「按分支遍历」，一种叫「按时间遍历」。&lt;/p&gt;
&lt;p&gt;撤销 &lt;kbd&gt;u&lt;/kbd&gt; 与重做 &lt;kbd&gt;Ctrl + r&lt;/kbd&gt; 操作是按分支遍历。对于上面的例子，现在我们有三行字符。这时候按 &lt;kbd&gt;u&lt;/kbd&gt; 会回退到 "bar" 节点，如果再按一次 &lt;kbd&gt;u&lt;/kbd&gt; 则会回退到 "foo" 节点。这时，如果我们按下 &lt;kbd&gt;Ctrl + r&lt;/kbd&gt; 就会前进至 "bar" 节点，再按一次就回前进至 "quux" 节点。在这种方式下，我们无法访问到兄弟节点（即 "baz" 节点）。&lt;/p&gt;
&lt;p&gt;与之对应的是按时间遍历，对应的按键是 &lt;code&gt;g-&lt;/code&gt; 和 &lt;code&gt;g+&lt;/code&gt;。对于上面的例子，按下 &lt;code&gt;g-&lt;/code&gt; 会首先回退到 "baz" 节点。再次按下 &lt;code&gt;g-&lt;/code&gt; 会回退到 "bar" 节点。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令/按键&lt;/th&gt;
&lt;th&gt;执行效果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[count]u&lt;/code&gt; 或 &lt;code&gt;:undo [count]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;回退到 &lt;code&gt;[count]&lt;/code&gt; 次改动之前&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[count]&amp;lt;c-r&amp;gt;&lt;/code&gt; 或 &lt;code&gt;:redo [count]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;重做 &lt;code&gt;[count]&lt;/code&gt; 次改动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;U&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;回退至最新的改动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[count]g-&lt;/code&gt; 或 &lt;code&gt;:earlier [count]?&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据时间回退到 &lt;code&gt;[count]&lt;/code&gt; 次改动之前。"?" 为 "s"、"m"、"h"、"d" 或 "f"之一。例如，&lt;code&gt;:earlier 2d&lt;/code&gt; 会回退到两天之前。&lt;code&gt;:earlier 1f&lt;/code&gt; 则会回退到最近一次文件保存时的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[count]g+&lt;/code&gt; 或 &lt;code&gt;:later [count]?&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;类似 &lt;code&gt;g-&lt;/code&gt;，但方向相反&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;内容变更记录会储存在内存中，当 Vim 退出时就会清空。如果需要持久化存储内容变更记录，请参阅&lt;a href="#%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%BA%A4%E6%8D%A2%E6%96%87%E4%BB%B6%E6%92%A4%E9%94%80%E6%96%87%E4%BB%B6%E4%BB%A5%E5%8F%8Aviminfo%E6%96%87%E4%BB%B6%E7%9A%84%E5%A4%84%E7%90%86"&gt;备份文件，交换文件，撤销文件以及 viminfo 文件的处理&lt;/a&gt;章节的内容。&lt;/p&gt;
&lt;p&gt;如果你觉得这一部分的内容难以理解，请参阅 &lt;a href="https://github.com/mbbill/undotree"&gt;undotree&lt;/a&gt;，这是一个可视化管理内容变更历史记录的插件。类似的还有 &lt;a href="https://github.com/simnalamburt/vim-mundo"&gt;vim-mundo&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;请参阅以下链接获取更多帮助：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;undo&lt;/span&gt;.txt
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; usr_32&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-全局位置信息表局部位置信息表" class="anchor" aria-hidden="true" href="#全局位置信息表局部位置信息表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;全局位置信息表，局部位置信息表&lt;/h2&gt;
&lt;p&gt;在某一个动作返回一系列「位置」的时候，我们可以利用「全局位置信息表」和「局部位置信息表」来存储这些位置信息，方便以后跳转回对应的位置。每一个存储的位置包括文件名、行号和列号。&lt;/p&gt;
&lt;p&gt;比如，编译代码是出现错误，这时候我们就可以把错误的位置直接显示在全局位置信息表，或者通过外部抓取工具使位置显示在局部位置信息表中。&lt;/p&gt;
&lt;p&gt;尽管我们也可以把这些信息显示到一个空格缓冲区中，但用这两个信息表显示的好处在于接口调用很方便，而且也便于浏览输出。&lt;/p&gt;
&lt;p&gt;Vim 中，全局位置信息表只能有一个，但每一个窗口都可以有自己的局部位置信息表。这两个信息表的外观看上去很类似，但在操作上会稍有不同。&lt;/p&gt;
&lt;p&gt;以下为两者的操作比较：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;动作&lt;/th&gt;
&lt;th&gt;全局位置信息表&lt;/th&gt;
&lt;th&gt;局部位置信息表&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;打开窗口&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:copen&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lopen&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;关闭窗口&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:cclose&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lclose&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;下一个条目&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:cnext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lnext&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;上一个条目&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:cprevious&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lprevious&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;第一个条目&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:cfirst&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lfirst&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;最后一个条目&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:clast&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:llast&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;请参阅 &lt;code&gt;:h :cc&lt;/code&gt; 以及底下的内容，来获取更多命令的帮助。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;应用实例&lt;/strong&gt;：
如果我们想用 &lt;code&gt;grep&lt;/code&gt; 递归地在当前文件夹中寻找某个关键词，然后把输出结果放到全局位置信息表中，只需要这样：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;grepprg&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;grep -Rn $* .&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
:&lt;span class="pl-c1"&gt;grep&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; foo
&lt;span class="pl-c1"&gt;&amp;lt;grep output - hit enter&amp;gt;&lt;/span&gt;
:&lt;span class="pl-c1"&gt;copen&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行了上面的代码，你就能看到所有包含字符串 "foo" 的文件名以及匹配到的相关字段都会显示在全局位置信息表中。&lt;/p&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-宏" class="anchor" aria-hidden="true" href="#宏"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;宏&lt;/h2&gt;
&lt;p&gt;你可以在 Vim 中录制一系列按键，并把他们存储到&lt;a href="#%E5%AF%84%E5%AD%98%E5%99%A8"&gt;寄存器&lt;/a&gt;中。对于一些需要临时使用多次的一系列操作，把它们作为宏保存起来会显著地提升效率。对于一些复杂的操作，建议使用 Vim 脚本来实现。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先，按下 &lt;kbd&gt;q&lt;/kbd&gt;，然后按下你想要保存的寄存器，任何小写字母都可以。比如我们来把它保存到 &lt;code&gt;q&lt;/code&gt; 这个寄存器中。按下 &lt;code&gt;qq&lt;/code&gt;，你会发现命令行里已经显示了 "recording @q"。&lt;/li&gt;
&lt;li&gt;如果你已经录制完成，那么只需要再按一次 &lt;kbd&gt;q&lt;/kbd&gt; 就可以结束录制。&lt;/li&gt;
&lt;li&gt;如果你想调用刚才录制的宏，只需要 &lt;code&gt;[count]@q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果你想调用上一次使用的宏，只需要 &lt;code&gt;[count]@@&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实例 1&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;一个插入字符串 "abc" 后换行的宏，重复调用十次：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;qq
&lt;span class="pl-c1"&gt;iabc&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;esc&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;q&lt;/span&gt;
&lt;span class="pl-c1"&gt;10&lt;/span&gt;&lt;span class="pl-smi"&gt;@q&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（对于上面这个功能，你同样可以通过如下的按键： &lt;kbd&gt;o&lt;/kbd&gt;&lt;kbd&gt;a&lt;/kbd&gt;&lt;kbd&gt;b&lt;/kbd&gt;&lt;kbd&gt;c&lt;/kbd&gt; 然后 &lt;kbd&gt;ESC&lt;/kbd&gt; 然后 &lt;kbd&gt;1&lt;/kbd&gt;&lt;kbd&gt;0&lt;/kbd&gt;&lt;kbd&gt;.&lt;/kbd&gt; 来实现）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实例 2&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;一个在每行前都加上行号的宏。从第一行开始，行号为 1，后面依次递增。我们可以通过 &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; 来实现递增的行号，在定义宏的时候，它会显示成 &lt;code&gt;^A&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;qq
&lt;span class="pl-c1"&gt;0&lt;/span&gt;yf jP0^A
&lt;span class="pl-c1"&gt;q&lt;/span&gt;
&lt;span class="pl-c1"&gt;1000&lt;/span&gt; &lt;span class="pl-smi"&gt;@q&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里能实现功能，是因为我们假定了文件最多只有 1000 行。但更好的方式是使用「递归」宏，它会一直执行，知道不能执行为止：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;qq
&lt;span class="pl-c1"&gt;0&lt;/span&gt;yf jP0^A&lt;span class="pl-smi"&gt;@q&lt;/span&gt;
&lt;span class="pl-c1"&gt;q&lt;/span&gt;
&lt;span class="pl-smi"&gt;@q&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（对于上面这个插入行号的功能，如果你不愿意使用宏，同样可以通过这段按键操作来实现：&lt;code&gt;:%s/^/\=line('.') . '. '&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;这里向大家展示了如何不用宏来达到相应的效果，但要注意，这些不用宏的实现方式只适用于这些简单的示例。对于一些比较复杂的自动化操作，你确实应该考虑使用宏。&lt;/p&gt;
&lt;p&gt;请参阅以下文档获取更多帮助：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; recording
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lazyredraw&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-颜色主题" class="anchor" aria-hidden="true" href="#颜色主题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;颜色主题&lt;/h2&gt;
&lt;p&gt;颜色主题可以把你的 Vim 变得更漂亮。Vim 是由多个组件构成的，我们可以给每一个组件都设置不同的文字颜色、背景颜色以及文字加粗等等。比如，我们可以通过这个命令来设置背景颜色：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;Normal&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; guibg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;red&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行后你会发现，现在背景颜色变成红色了。请参阅 &lt;code&gt;:h :highlight&lt;/code&gt; 来获取更多帮助。&lt;/p&gt;
&lt;p&gt;其实，颜色主题就是一系列的 &lt;code&gt;:highlight&lt;/code&gt; 命令的集合。&lt;/p&gt;
&lt;p&gt;事实上，大部分颜色主题都包含两套配置。一套适用于例如 xterm 和 iTerm 这样的终端环境（使用前缀 &lt;code&gt;cterm&lt;/code&gt;），另一套适用于例如 gvim 和 MacVim 的图形界面环境（使用前缀 &lt;code&gt;gui&lt;/code&gt;）。对于上面的例子，&lt;code&gt;ctermbg&lt;/code&gt; 就是针对终端环境的，而 &lt;code&gt;guibg&lt;/code&gt; 就是针对图形界面环境的。&lt;/p&gt;
&lt;p&gt;如果你下载了一个颜色主题，并且在终端环境中打开了 Vim，然后发现显示的颜色与主题截图中差别很大，那很可能是配置文件只设置了图形界面环境的颜色。反之同理，如果你使用的是图形界面环境，发现显示颜色有问题，那就很可能是配置文件只设置了终端环境的颜色。&lt;/p&gt;
&lt;p&gt;第二种情况（图形界面环境的显示问题）其实不难解决。如果你使用的是 Neovim 或者 Vim 7.4.1830 的后续版本，可以通过打开&lt;a href="https://zh.wikipedia.org/wiki/%E7%9C%9F%E5%BD%A9%E8%89%B2" rel="nofollow"&gt;真彩色&lt;/a&gt;设置来解决显示问题。这就可以让终端环境的 Vim 使用 GUI 的颜色定义，但首先，你要确认一下你的终端环境和环境内的组件（比如 tmux）是否都支持真彩色。可以看一下&lt;a href="https://gist.github.com/XVilka/8346728"&gt;这篇文档&lt;/a&gt;，描述的十分详细。&lt;/p&gt;
&lt;p&gt;请参阅以下文档或链接来获取更多帮助：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:h 'termguicolors'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%B8%BB%E9%A2%98%E5%88%97%E8%A1%A8"&gt;主题列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E4%B8%AD%E7%9A%84%E9%A2%9C%E8%89%B2"&gt;自定义主题中的颜色&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回主目录 &lt;a href="#%E5%9F%BA%E7%A1%80"&gt;&lt;g-emoji class="g-emoji" alias="arrow_heading_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2934.png"&gt;⤴️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-折叠" class="anchor" aria-hidden="true" href="#折叠"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;折叠&lt;/h2&gt;
&lt;p&gt;每一部分文字（或者代码）都会有特定的结构。对于存在结构的文字和代码，也就意味着它们可以按照一定的逻辑分割成不同区域。Vim 中的折叠功能，就是按照特定的逻辑把文字和代码折叠成一行，并显示一些简短的描述。折叠功能涉及到很多操作，而且折叠功能可以嵌套使用。&lt;/p&gt;
&lt;p&gt;在 Vim 中，有以下 6 中折叠类型：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;折叠方式&lt;/th&gt;
&lt;th&gt;概述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;diff&lt;/td&gt;
&lt;td&gt;在「比较窗口」中折叠未改变的文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;expr&lt;/td&gt;
&lt;td&gt;使用 &lt;code&gt;'foldexpr'&lt;/code&gt; 来创建新的折叠逻辑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;indent&lt;/td&gt;
&lt;td&gt;基于缩进折叠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;manual&lt;/td&gt;
&lt;td&gt;使用 &lt;code&gt;zf&lt;/code&gt;、&lt;code&gt;zF&lt;/code&gt; 或 &lt;code&gt;:fold&lt;/code&gt; 来自定义折叠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;marker&lt;/td&gt;
&lt;td&gt;根据特定的文本标记折叠（通常用于代码注释）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;syntax&lt;/td&gt;
&lt;td&gt;根据语法折叠，比如折叠 &lt;code&gt;if&lt;/code&gt; 代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：折叠功能可能会显著地影响性能。如果你在使用折叠功能的时候出现了打字卡顿之类的问题，请考虑使用 &lt;a href="https://github.com/Konfekt/FastFold"&gt;FastFold 插件&lt;/a&gt;。这个插件可以让 Vim 按需更新折叠内容，而不是一直调用。&lt;/p&gt;
&lt;p&gt;请参阅以下文档获取更多帮助：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; usr_28
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; folds&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-会话" class="anchor" aria-hidden="true" href="#会话"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;会话&lt;/h2&gt;
&lt;p&gt;如果你保存了当前的「视图」（请参阅 &lt;code&gt;:h :mkview&lt;/code&gt;），那么当前窗口、配置和按键映射都会被保存下来（请参阅 &lt;code&gt;:h :loadview&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;「会话」就是存储所有窗口的相关设置，以及全局设置。简单来说，就是给当前的 Vim 运行实例拍个照，然后把相关信息存储到会话文件中。存储之后的改动就不会在会话文件中显示，你只需要在改动后更新一下会话文件就可以了。&lt;/p&gt;
&lt;p&gt;你可以把当前工作的「项目」存储起来，然后可以在不同的「项目」之间切换。&lt;/p&gt;
&lt;p&gt;现在就来试试吧。打开几个窗口和标签，然后执行 &lt;code&gt;:mksession Foo.vim&lt;/code&gt;。如果你没有指定文件名，那就会默认保存为 &lt;code&gt;Session.vim&lt;/code&gt;。这个文件会保存在当前的目录下，你可以通过 &lt;code&gt;:pwd&lt;/code&gt; 来显示当前路径。重启 Vim 之后，你只需要执行 &lt;code&gt;:source Foo.vim&lt;/code&gt;，就可以恢复刚才的会话了。所有的缓冲区、窗口布局、按键映射以及工作路径都会恢复到保存时的状态。&lt;/p&gt;
&lt;p&gt;其实 Vim 的会话文件就只是 Vim 命令的集合。你可以通过命令 &lt;code&gt;:vs Foo.vim&lt;/code&gt; 来看看会话文件中究竟有什么。&lt;/p&gt;
&lt;p&gt;你可以决定 Vim 会话中究竟要保存哪些配置，只需要设置一下 &lt;code&gt;'sessionoptions'&lt;/code&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;为了方便开发，Vim 把最后一次调用或写入的会话赋值给了一个内部变量 &lt;code&gt;v:this_session&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;请参阅以下文档来获取更多帮助：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; Session
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sessionoptions&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;this_session&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-局部化" class="anchor" aria-hidden="true" href="#局部化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;局部化&lt;/h2&gt;
&lt;p&gt;以上提到的很多概念，都有一个局部化（非全局）的版本：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;全局&lt;/th&gt;
&lt;th&gt;局部&lt;/th&gt;
&lt;th&gt;作用域&lt;/th&gt;
&lt;th&gt;帮助文档&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:setlocal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;缓冲区或窗口&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h local-options&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:map&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:map &amp;lt;buffer&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;缓冲区&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h :map-local&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:autocmd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:autocmd * &amp;lt;buffer&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;缓冲区&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h autocmd-buflocal&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:lcd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;窗口&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h :lcd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:&amp;lt;leader&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:&amp;lt;localleader&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;缓冲区&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:h maploacalleader&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;变量也有不同的作用域，详细内容请参考 &lt;a href="http://vimdoc.sourceforge.net/htmldoc/usr_41.html" rel="nofollow"&gt;Vim scripting 的文档&lt;/a&gt;。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-用法" class="anchor" aria-hidden="true" href="#用法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;用法&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-获取离线帮助" class="anchor" aria-hidden="true" href="#获取离线帮助"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;获取离线帮助&lt;/h2&gt;
&lt;p&gt;Vim 自带了一套很完善的帮助文档，它们是一个个有固定排版格式的文本文件，通过标签可以访问这些文件的特定位置。&lt;/p&gt;
&lt;p&gt;在开始之前先读一下这个章节：&lt;code&gt;:help :help&lt;/code&gt;。执行这个命令以后会在新窗口打开 &lt;code&gt;$VIMRUNTIME/doc/helphelp.txt&lt;/code&gt; 文件并跳转到这个文件中 &lt;code&gt;:help&lt;/code&gt; 标签的位置。&lt;/p&gt;
&lt;p&gt;一些关于帮助主题的简单规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用单引号把文本包起来表示选项，如：&lt;code&gt;:h 'textwidth'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;以小括号结尾表示 VimL 函数，如：&lt;code&gt;:h reverse()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;以英文冒号开头表示命令，如：&lt;code&gt;:h :echo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用快捷键 &lt;code&gt;&amp;lt;c-d&amp;gt;&lt;/code&gt; （这是 &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;d&lt;/kbd&gt;）来列出所有包含你当前输入的内容的帮助主题。如：&lt;code&gt;:h tab&amp;lt;c-d&amp;gt;&lt;/code&gt; 会列出所有包含 &lt;code&gt;tab&lt;/code&gt; 主题，从 &lt;code&gt;softtabstop&lt;/code&gt; 到 &lt;code&gt;setting-guitablabel&lt;/code&gt; （译者注：根据安装的插件不同列出的选项也会不同）。&lt;/p&gt;
&lt;p&gt;你想查看所有的 VimL 方法吗？很简单，只要输入：&lt;code&gt;:h ()&amp;lt;c-d&amp;gt;&lt;/code&gt; 就可以了。你想查看所有与窗口相关的函数吗？输入 &lt;code&gt;:h win*()&amp;lt;c-d&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;相信你很快就能掌握这些技巧，但是在刚开始的时候，你可能对于该通过什么进行查找一点线索都没有。这时你可以想象一些与要查找的内容相关的关键字，再让 &lt;code&gt;:helpgrep&lt;/code&gt; 来帮忙。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;helpgrep&lt;/span&gt; backwards&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面的命令会在所有的帮助文件中搜索“backwards”，然后跳转到第一个匹配的位置。所有的匹配位置都会被添加到全局位置信息表，用 &lt;code&gt;:cp / :cn&lt;/code&gt; 可以在匹配位置之间进行切换。或者用 &lt;code&gt;:copen&lt;/code&gt; 命令来打开全局位置信息表，将光标定位到你想要的位置，再按 回车就可以跳转到该匹配项。详细说明请参考 &lt;code&gt;:h quickfix&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-获取离线帮助补充" class="anchor" aria-hidden="true" href="#获取离线帮助补充"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;获取离线帮助（补充）&lt;/h2&gt;
&lt;p&gt;这个列表最初发表在 &lt;a href="https://groups.google.com/forum/#!forum/vim_dev" rel="nofollow"&gt;vim_dev&lt;/a&gt;，由 @chrisbra 编辑的，他是 Vim 开发人员中最活跃的一个。&lt;/p&gt;
&lt;p&gt;经过一些微小的改动后，重新发布到了这里。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;如果你知道你想要找什么，使用帮助系统的搜索会更简单一些，因为搜索出的主题都带有固定的格式。&lt;/p&gt;
&lt;p&gt;而且帮助系统中的主题包含了你当前使用的 Vim 版本的所特有特性，而网上那些已经过时或者是早期发布的话题是不会包含这些的。&lt;/p&gt;
&lt;p&gt;因此学习使用帮助系统以及它所用的语言是很有必要的。这里是一些例子（不一定全，我有可能忘了一些什么）。&lt;/p&gt;
&lt;p&gt;（译者注：下面列表中提及的都是如何指定搜索主题以便快速准确的找到你想要的帮助）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;选项要用单引号引起来。用 &lt;code&gt;:h 'list'&lt;/code&gt; 来查看列表选项帮助。只有你明确的知道你要找这么一个选项的时候才可以这么做，不然的话你可以用 &lt;code&gt;:h options.txt&lt;/code&gt; 来打开所有选项的帮助页面，再用正则表达式进行搜索，如：&lt;code&gt;/width&lt;/code&gt;。某些选项有它们自己的命名空间，如：&lt;code&gt;:h cpo-a&lt;/code&gt;，&lt;code&gt;:h cpo-A&lt;/code&gt;， &lt;code&gt;:h cpo-b&lt;/code&gt; 等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;普通模式的命令不能用冒号作为前缀。使用 &lt;code&gt;:h gt&lt;/code&gt; 来转到“gt”命令的帮助页面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;正则表达式以“/”开头，所以 &lt;code&gt;:h /\+&lt;/code&gt; 会带你到正则表达式中量词“+”的帮助页面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组合键经常以一个字母开头表示它们可以在哪些模式中使用。如：&lt;code&gt;:h i_CTRL-X&lt;/code&gt; 会带你到插入模式下的 CTRL-X 命令的用法帮助页面，这是一个自动完成类的组合键。需要注意的是某些键是有固定写法的，如 Control 键写成 CTRL。还有，查找普通模式下的组合键帮助时，可以省略开头的字母“n”，如：&lt;code&gt;:h CTRL-A&lt;/code&gt;。而 &lt;code&gt;:h c_CTRL-A&lt;/code&gt;（译者注：原文为 &lt;code&gt;:h c_CRTL-R&lt;/code&gt;，感觉改为 A 更符合上下文语境）会解释 CTRL-A 在命令模式下输入命令时的作用；&lt;code&gt;:h v_CTRL-A&lt;/code&gt; 说的是在可见模式下把光标所在处的数字加 1；&lt;code&gt;:h g_CTRL-A&lt;/code&gt; 则说的是 g 命令（你需要先按 "g" 的命令）。这里的 "g" 代表一个普通的命令，这个命令总是与其它的按键组合使用才生效，与 "z" 开始的命令相似。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;寄存器是以 "quote" 开头的。如：&lt;code&gt;:h quote:&lt;/code&gt; （译者注：原文为&lt;code&gt;:h quote&lt;/code&gt;，感觉作者想以":"来举例）来查看关于":"寄存器的说明。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于 Vim 脚本（VimL）的帮助都在 &lt;code&gt;:h eval.txt&lt;/code&gt; 里。而某些方面的语言可以使用 &lt;code&gt;:h expr-X&lt;/code&gt; 获取帮助，其中的 'X' 是一个特定的字符，如：&lt;code&gt;:h expr-!&lt;/code&gt; 会跳转到描述 VimL 中'!'（非）的章节。另外一个重要提示，可以使用 &lt;code&gt;:h function-list&lt;/code&gt; 来查看所有函数的简要描述，列表中包括函数名和一句话描述。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于映射都可以在 &lt;code&gt;:h map.txt&lt;/code&gt; 中找到。通过 &lt;code&gt;:h mapmode-i&lt;/code&gt; 来查找 &lt;code&gt;:imap&lt;/code&gt; 命令的相关信息；通过 &lt;code&gt;:h map-topic&lt;/code&gt; 来查找专门针对映射的帮助（译者注：topic 为一个占位符，正如上面的字符 'X' 一样，在实际使用中需要替换成相应的单词）（如：&lt;code&gt;:h :map-local&lt;/code&gt; 查询本地 buffer 的映射，&lt;code&gt;:h map-bar&lt;/code&gt; 查询如何在映射中处理'|')。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命令定义用 "command-" 开头，如用 &lt;code&gt;:h command-bar&lt;/code&gt; 来查看自定义命令中'!'的作用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;窗口管理类的命令是以 "CTRL-W" 开头的，所以你可以用 &lt;code&gt;:h CTRL-W_*&lt;/code&gt; 来查找相应的帮助（译者注：'*'同样为占位符）（如：&lt;code&gt;:h CTRL-W_p&lt;/code&gt; 查看切换到之前访问的窗口命令的解释）。如果你想找窗口处理的命令，还可以通过访问 &lt;code&gt;:h windows.txt&lt;/code&gt; 并逐行向下浏览，所有窗口管理的命令都在这里了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行类的命令以":"开头，即：&lt;code&gt;:h :s&lt;/code&gt; 讲的是 ":s" 命令。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在输入某个话题时按 CTRL-D，让 Vim 列出所有的近似项辅助你输入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用 &lt;code&gt;:helpgrep&lt;/code&gt; 在所有的帮助页面（通常还包括了已安装的插件的帮助页面）中进行搜索。参考 &lt;code&gt;:h :helpgrep&lt;/code&gt; 来了解如何使用。当你搜索了一个话题之后，所有的匹配结果都被保存到了全局位置信息表（或局部位置信息表）当中，可以通过 &lt;code&gt;:copen&lt;/code&gt; 或 &lt;code&gt;:lopen&lt;/code&gt; 打开。在打开的窗口中可能通过 &lt;code&gt;/&lt;/code&gt; 对搜索结果进行进一步的过滤。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:h helphelp&lt;/code&gt; 里介绍了如何使用帮助系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户手册。它采用了一种对初学者更加友好的方式来展示帮助话题。用 &lt;code&gt;:h usr_toc.txt&lt;/code&gt; 打开目录（你可能已经猜到这个命令的用处了）。浏览用户手册能帮助你找出某些你想了解的话题，如你可以在第 24 章看到关于“复合字符”以及“输入特殊字符”的讲解（用 &lt;code&gt;:h usr_24.txt&lt;/code&gt; 可以快速打开相关章节）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高亮分组的帮助以 &lt;code&gt;hl-&lt;/code&gt; 开头。如：&lt;code&gt;:h hl-WarningMsg&lt;/code&gt; 说的是警告信息分组的高亮。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;语法高亮以&lt;code&gt;:syc-&lt;/code&gt; 开头，如：&lt;code&gt;:h :syn-conceal&lt;/code&gt; 讲的是 &lt;code&gt;:syn&lt;/code&gt; 命令的对于隐藏字符是如何显示的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快速修复命令以 &lt;code&gt;:c&lt;/code&gt; 开头，而位置列表命令以 &lt;code&gt;:l&lt;/code&gt; 开头。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:h BufWinLeave&lt;/code&gt; 讲的是 BufWinLeave 自动命令。还有，&lt;code&gt;:h autocommand-events&lt;/code&gt; （译者注：原文是 &lt;code&gt;:h autocommands-events&lt;/code&gt;，但是没有该帮助）讲的是所有可用的事件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动参数都以“-”开头，如：&lt;code&gt;:h -f&lt;/code&gt; 会告诉你 Vim 中 “-f” 参数的作用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;额外的特性都以“+”开头，如：&lt;code&gt;:h +conceal&lt;/code&gt; 讲的是关于隐藏字符的支持。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;错误代码可以在帮助系统中直接查到。&lt;code&gt;:h E297&lt;/code&gt; 会带你到关于这一错误的详细解释。但是有时并没有转到错误描述，而是列出了经常导出这一错误的 Vim 命令，如 &lt;code&gt;:h E128&lt;/code&gt; （译者注：原文为&lt;code&gt;:h hE128&lt;/code&gt;，但是并没有该帮助）会直接跳转到 &lt;code&gt;:function&lt;/code&gt; 命令。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于包含的语法文件的文档的帮助话题格式是 &lt;code&gt;:h ft-*-syntax&lt;/code&gt;。如：&lt;code&gt;:h ft-c-syntax&lt;/code&gt; 说的就是 C 语言语法文件以及它所提供的选项。有的语法文件还会带有自动完成（&lt;code&gt;:h ft-php-omni&lt;/code&gt;）或文件类型插件（&lt;code&gt;:h ft-tex-plugin&lt;/code&gt;）相关的章节可以查看。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另外在每个帮助页的顶端通常会包含一个用户文档链接（更多的从从用户的角度出发来主角命令的功能和用法，不涉及那么多细节）。如：&lt;code&gt;:h pattern.txt&lt;/code&gt; 里包含了 &lt;code&gt;:h 03.9&lt;/code&gt; 和 &lt;code&gt;:h usr_27&lt;/code&gt; 两个章节的链接。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-获取在线帮助" class="anchor" aria-hidden="true" href="#获取在线帮助"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;获取在线帮助&lt;/h2&gt;
&lt;p&gt;如果你遇到了无法解决的问题，或者需要指引的话，可以参考 &lt;a href="https://groups.google.com/forum/#!forum/vim_use" rel="nofollow"&gt;Vim 使用&lt;/a&gt;邮件列表。 &lt;a href="https://de.wikipedia.org/wiki/Internet_Relay_Chat" rel="nofollow"&gt;IRC&lt;/a&gt; 也是一个很不错的资源。 &lt;a href="https://freenode.net/" rel="nofollow"&gt;Freenode&lt;/a&gt; 上的 &lt;code&gt;#vim&lt;/code&gt; 频道很庞大，并且里面有许多乐于助人的人。&lt;/p&gt;
&lt;p&gt;如果你想给 Vim 提交 Bug 的话，可以使用 &lt;a href="https://groups.google.com/forum/#!forum/vim_dev" rel="nofollow"&gt;vim_dev&lt;/a&gt; 邮件列表。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-执行自动命令" class="anchor" aria-hidden="true" href="#执行自动命令"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;执行自动命令&lt;/h2&gt;
&lt;p&gt;你可以触发任何事件，如：&lt;code&gt;:doautocmd BufRead&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-用户自定义事件" class="anchor" aria-hidden="true" href="#用户自定义事件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;用户自定义事件&lt;/h3&gt;
&lt;p&gt;对于插件而言，创建你自己的自定义事件有时非常有用。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;Chibby&lt;/span&gt;()
&lt;span class="pl-c"&gt;    &lt;span class="pl-c"&gt;"&lt;/span&gt; A lot of stuff is happening here.&lt;/span&gt;
&lt;span class="pl-c"&gt;    &lt;span class="pl-c"&gt;"&lt;/span&gt; And at last..&lt;/span&gt;
    doautocmd &lt;span class="pl-c1"&gt;User&lt;/span&gt; ChibbyExit
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在你插件的用户可以在 Chibby 执行完成之后做任何他想做的事情：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; ChibbyExit &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;ChibbyCleanup&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;顺便提一句，如果在使用 &lt;code&gt;:autocmd&lt;/code&gt; 或 &lt;code&gt;:doautocmd&lt;/code&gt; 时没有捕捉异常，那么会输出 "No matching autocommands" 信息。这也是为什么许多插件用 &lt;code&gt;silent doautocmd ...&lt;/code&gt; 的原因。但是这也会有不足，那就是你不能再在 :autocmd 中使用 &lt;code&gt;echo "foo"&lt;/code&gt; 了，取而代之的是你要使用 &lt;code&gt;unsilent echo "foo"&lt;/code&gt; 来输出。&lt;/p&gt;
&lt;p&gt;这就是为什么要在触发事件之前先判断事件是否存在的原因，&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#User#ChibbyExit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  doautocmd &lt;span class="pl-c1"&gt;User&lt;/span&gt; ChibbyExit
&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;帮助文档：&lt;code&gt;:h User&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-事件嵌套" class="anchor" aria-hidden="true" href="#事件嵌套"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;事件嵌套&lt;/h3&gt;
&lt;p&gt;默认情况下，自动命令不能嵌套！如果某个自动命令执行了一个命令，这个命令再依次触发其它的事件，这是不可能的。&lt;/p&gt;
&lt;p&gt;例如你想在每次启动 Vim 的时候自动打开你的 vimrc 文件：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;VimEnter&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;edit&lt;/span&gt; &lt;span class="pl-c1"&gt;$MYVIMRC&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当你启动 Vim 的时候，它会帮你打开你的 vimrc 文件，但是你很快会注意到这个文件没有任何的高亮，尽管平时它是正常可以高亮的。&lt;/p&gt;
&lt;p&gt;问题在于你的非嵌套自动命令 &lt;code&gt;:edit&lt;/code&gt; 不会触发“BufRead”事件，所以并不会把文件类型设置成“vim”，进而 &lt;code&gt;$VIMRUNTIME/syntax/vim.vim&lt;/code&gt; 永远不会被引入。详细信息请参考：&lt;code&gt;:au BufRead *.vim&lt;/code&gt;。要想完成上面所说的需求，使用下面这个命令：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;VimEnter&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; nested &lt;span class="pl-c1"&gt;edit&lt;/span&gt; &lt;span class="pl-c1"&gt;$MYVIMRC&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;帮助文档：&lt;code&gt;:h autocmd-nested&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-剪切板" class="anchor" aria-hidden="true" href="#剪切板"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;剪切板&lt;/h2&gt;
&lt;p&gt;如果你想在没有 GUI 支持的 Unix 系统中使用 Vim 的 &lt;code&gt;'clipboard'&lt;/code&gt; 选项，则需要 &lt;code&gt;+clipboard&lt;/code&gt; 以及可选的 &lt;code&gt;+xterm_clipboard&lt;/code&gt; 两个&lt;a href="#what-kind-of-vim-am-i-running"&gt;特性&lt;/a&gt;支持。&lt;/p&gt;
&lt;p&gt;帮助文档：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clipboard&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;gui&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;gui&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;selections&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外请参考：&lt;a href="#%E6%8C%81%E7%BB%AD%E7%B2%98%E8%B4%B4%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E6%AF%8F%E6%AC%A1%E9%83%BD%E8%A6%81%E8%AE%BE%E7%BD%AE-paste-%E6%A8%A1%E5%BC%8F"&gt;持续粘贴（为什么我每次都要设置 'paste' 模式&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-剪贴板的使用windows-osx" class="anchor" aria-hidden="true" href="#剪贴板的使用windows-osx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;剪贴板的使用（Windows, OSX）&lt;/h3&gt;
&lt;p&gt;Windows 自带了&lt;a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms649012(v=vs.85).aspx" rel="nofollow"&gt;剪贴板&lt;/a&gt;，OSX 则带了一个&lt;a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/PasteboardGuide106/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008100-SW1" rel="nofollow"&gt;粘贴板&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在这两个系统中都可以用大家习惯用的 &lt;code&gt;ctrl+c / cmd+c&lt;/code&gt; 复制选择的文本，然后在另外一个应用中用 &lt;code&gt;ctrl+v / cmd+v&lt;/code&gt; 进行粘贴。&lt;/p&gt;
&lt;p&gt;需要注意的是复制的文本已经被发送到了剪贴板，所以你在粘贴复制的内容之前关闭这个应用是没有任何问题的。&lt;/p&gt;
&lt;p&gt;每次复制的时候，都会向剪贴板寄存器 &lt;code&gt;*&lt;/code&gt; 中写入数据。 而在 Vim 中分别使用 &lt;code&gt;"*y&lt;/code&gt; 和 &lt;code&gt;"*p&lt;/code&gt; 来进行复制（yank) 和 粘贴（paste)。&lt;/p&gt;
&lt;p&gt;如果你不想每次操作都要指定 &lt;code&gt;*&lt;/code&gt; 寄存器，可以在你的 vimrc 中添加如下配置：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;unnamed&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通常情况下复制/删除/放入操作会往 &lt;code&gt;"&lt;/code&gt; 寄存器中写入数据，而加上了上面的配置之后 &lt;code&gt;*&lt;/code&gt; 寄存器也会被写入同样数据，因此简单的使用 &lt;code&gt;y&lt;/code&gt; 和 &lt;code&gt;p&lt;/code&gt; 就可以复制粘贴了。&lt;/p&gt;
&lt;p&gt;我再说一遍：使用上面的选项意味着每一次的复制/粘贴，即使在同一个 Vim 窗口里，都会修改剪贴板的内容。你自己决定上面的选项是否适合。&lt;/p&gt;
&lt;p&gt;如果你觉得输入 &lt;code&gt;y&lt;/code&gt; 还是太麻烦的话，可以使用下面的设置把在可视模式下选择的内容发送到剪贴板：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;unnamed,autoselect
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;guioptions&lt;/span&gt;&lt;span class="pl-k"&gt;+=&lt;/span&gt;&lt;span class="pl-c1"&gt;a&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;帮助文档：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;unnamed
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; autoselect
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;go_a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-剪贴板的使用linux-bsd-" class="anchor" aria-hidden="true" href="#剪贴板的使用linux-bsd-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;剪贴板的使用（Linux, BSD, ...）&lt;/h3&gt;
&lt;p&gt;如果你的系统使用了 &lt;a href="http://www.x.org/wiki" rel="nofollow"&gt;X 图形界面&lt;/a&gt;，事情会变得有一点不同。X 图形界面实现了 &lt;a href="http://www.x.org/releases/X11R7.7/doc/xproto/x11protocol.html" rel="nofollow"&gt;X 窗口系统协议&lt;/a&gt;, 这个协议在 1987 年发布的主版本 11，因此 X 也通常被称为 X11。&lt;/p&gt;
&lt;p&gt;在 X10 版本中，&lt;a href="http://www.x.org/releases/X11R7.7/doc/xorg-docs/icccm/icccm.html#Peer_to_Peer_Communication_by_Means_of_Cut_Buffers" rel="nofollow"&gt;剪贴缓冲区&lt;/a&gt;被用来实现像 &lt;em&gt;clipboard&lt;/em&gt; 一样由 X 来复制文本，并且可以被所有的程序访问。现在这个机制在 X 中还存在，但是已经过时了，很多程序都不再使用这一机制。&lt;/p&gt;
&lt;p&gt;近年来数据在程序之间是通过&lt;a href="http://www.x.org/releases/X11R7.7/doc/xorg-docs/icccm/icccm.html#Peer_to_Peer_Communication_by_Means_of_Selections" rel="nofollow"&gt;选择&lt;/a&gt;进行传递的。一共有三种选择，经常用到的有两种：PRIMARY 和 CLIPBOARD。&lt;/p&gt;
&lt;p&gt;选择的工作工模大致是这样的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Program A：&amp;lt;ctrl+c&amp;gt;
Program A：声称对 CLIPBOARD 的所有权
Program B：&amp;lt;ctrl+v&amp;gt;
Program B：发现CLIPBOARD的所有权被Program A持有
Program B：从Program A请求数据
Program A：响应这个请求并发送数据给Program B
Program B：从Program A接收数据并插入到窗口中
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择&lt;/th&gt;
&lt;th&gt;何时使用&lt;/th&gt;
&lt;th&gt;如何粘贴&lt;/th&gt;
&lt;th&gt;如何在 Vim 中访问&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PRIMARY&lt;/td&gt;
&lt;td&gt;选择文本&lt;/td&gt;
&lt;td&gt;鼠标中键, shift+insert&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*&lt;/code&gt; 寄存器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CLIPBOARD&lt;/td&gt;
&lt;td&gt;选择文本并按 &lt;code&gt;ctrl+c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ctrl+v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;+&lt;/code&gt;寄存器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：X 服务器并不会保存选择（不仅仅是 CLIPBOARD 选择）！因此在关闭了相应的程序后，你用 &lt;code&gt;ctrl+c&lt;/code&gt; 复制的内容将丢失。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;"*p&lt;/code&gt; 来贴粘 PRIMARY 选择中的内容，或者使用 &lt;code&gt;"+y1G&lt;/code&gt; 来将整个文件的内容复制到 CLIPBOARD 选择。&lt;/p&gt;
&lt;p&gt;如果你需要经常访问这两个寄存器，可以考虑使用如下配置：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;^&lt;span class="pl-k"&gt;=&lt;/span&gt;unnamed&lt;span class="pl-c"&gt;          &lt;span class="pl-c"&gt;"&lt;/span&gt; * 寄存器&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; 或者&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;^&lt;span class="pl-k"&gt;=&lt;/span&gt;unnamedplus&lt;span class="pl-c"&gt;      &lt;span class="pl-c"&gt;"&lt;/span&gt; + 寄存器&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（&lt;code&gt;^=&lt;/code&gt; 用来将设置的值加到默认值之前，详见：&lt;code&gt;:h :set^=&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;这会使得所有复制/删除/放入操作使用 &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;+&lt;/code&gt; 寄存器代替默认的未命令寄存器 &lt;code&gt;"&lt;/code&gt;。之后你就可以直接使用 &lt;code&gt;y&lt;/code&gt; 或 &lt;code&gt;p&lt;/code&gt; 访问你的 X 选择了。&lt;/p&gt;
&lt;p&gt;帮助文档：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;unnamed
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;clipboard&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;unnamedplus&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-打开文件时恢复光标位置" class="anchor" aria-hidden="true" href="#打开文件时恢复光标位置"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;打开文件时恢复光标位置&lt;/h2&gt;
&lt;p&gt;如果没有这个设置，每次打开文件时光标都将定位在第一行。而加入了这个设置以后，你就可以恢复到上次关闭文件时光标所在的位置了。&lt;/p&gt;
&lt;p&gt;将下面的配置添加到你的 vimrc 文件：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufReadPost&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt; &amp;gt; &lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) |
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-c1"&gt;exe&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;normal! g`&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; |
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是通过判断之前的光标位置是否存在（文件可能被其它程序修改而导致所记录的位置已经不存在了），如果存在的话就执行 &lt;code&gt;g`"&lt;/code&gt; （转到你离开时的光标位置但是不更改跳转列表）。&lt;/p&gt;
&lt;p&gt;这需要使用 viminfo 文件：&lt;code&gt;:h viminfo-&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-临时文件" class="anchor" aria-hidden="true" href="#临时文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;临时文件&lt;/h2&gt;
&lt;p&gt;根据选项的不同， Vim 最多会创建 4 种工作文件。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-备份文件" class="anchor" aria-hidden="true" href="#备份文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;备份文件&lt;/h3&gt;
&lt;p&gt;你可以让 Vim 在将修改写入到文件之前先备份原文件。默认情况下， Vim 会保存一个备份文件但是当修改成功写入后会立即删除它（&lt;code&gt;:set writebackup&lt;/code&gt;）。如果你想一直保留这个备份文件的话，可以使用 &lt;code&gt;:set backup&lt;/code&gt;。而如果你想禁用备份功能的话，可以使用 &lt;code&gt;:set nobackup nowritebackup&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;咱们来看一下上次我在 vimrc 中改了什么：&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ diff &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/vimrc &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/files/backup/vimrc-vimbackup
390d389
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; command&lt;span class="pl-k"&gt;!&lt;/span&gt; -bar -nargs=&lt;span class="pl-k"&gt;*&lt;/span&gt; -complete=help H helpgrep &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;args&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;帮助文档：&lt;code&gt;:h backup&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-交换文件" class="anchor" aria-hidden="true" href="#交换文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;交换文件&lt;/h3&gt;
&lt;p&gt;假设你有一个非常棒的科幻小说的构思。在按照故事情节已经写了好几个小时几十万字的时候..忽然停电了！而那时你才想起来你上次保存 &lt;code&gt;~/来自外太空的邪恶入侵者.txt&lt;/code&gt; 是在.. 好吧，你从来没有保存过。&lt;/p&gt;
&lt;p&gt;但是并非没有希望了！在编辑某个文件的时候， Vim 会创建一个交换文件，里面保存的是对当前文件所有未保存的修改。自己试一下，打开任意的文件，并使用 &lt;code&gt;:swapname&lt;/code&gt; 获得当前的交换文件的保存路径。你也可以将 &lt;code&gt;:set noswapfile&lt;/code&gt; 加入到 vimrc 中来禁用交换文件。&lt;/p&gt;
&lt;p&gt;默认情况下，交换文件会自动保存在被编辑文件所在的目录下，文件名以 &lt;code&gt;.file.swp&lt;/code&gt; 后缀结尾，每当你修改了超过 200 个字符或是在之前 4 秒内没有任何动作时更新它的内容，在你不再编辑这个文件的时候会被删除。你可以自己修改这些数字，详见：&lt;code&gt;:h 'updatecount'&lt;/code&gt; 和 &lt;code&gt;:h 'updatetime'&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;而在断电时，交换文件并不会被删除。当你再次打开 &lt;code&gt;vim ~/来自外太空的邪恶入侵者.txt&lt;/code&gt; 时， Vim 会提示你恢复这个文件。&lt;/p&gt;
&lt;p&gt;帮助文档：&lt;code&gt;:h swap-file&lt;/code&gt; 和 &lt;code&gt;:h usr_11&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-撤销文件" class="anchor" aria-hidden="true" href="#撤销文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;撤销文件&lt;/h3&gt;
&lt;p&gt;&lt;a href="#%E5%86%85%E5%AE%B9%E5%8F%98%E6%9B%B4%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95"&gt;内容变更历史记录&lt;/a&gt;是保存在内存中的，并且会在 Vim 退出时清空。如果你想让它持久化到磁盘中，可以设置 &lt;code&gt;:set undofile&lt;/code&gt;。这会把文件 &lt;code&gt;~/foo.c&lt;/code&gt; 的撤销文件保存在 &lt;code&gt;~/foo.c.un~&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;帮助文档：&lt;code&gt;:h 'undofile'&lt;/code&gt; 和 &lt;code&gt;:h undo-persistence&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-viminfo-文件" class="anchor" aria-hidden="true" href="#viminfo-文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;viminfo 文件&lt;/h3&gt;
&lt;p&gt;备份文件、交换文件和撤销文件都是与文本状态相关的，而 viminfo 文件是用来保存在 Vim 退出时可能会丢失的其它的信息的。包括历史记录（命令历史、搜索历史、输入历史）、寄存器内容、标注、缓冲区列表、全局变量等等。&lt;/p&gt;
&lt;p&gt;默认情况下，viminfo 被保存在 &lt;code&gt;~/.viminfo&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;帮助文档：&lt;code&gt;:h viminfo&lt;/code&gt; 和 &lt;code&gt;:h 'viminfo'&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-临时文件管理设置示例" class="anchor" aria-hidden="true" href="#临时文件管理设置示例"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;临时文件管理设置示例&lt;/h3&gt;
&lt;p&gt;如果你跟我一样，也喜欢把这些文件放到一个位置（如：&lt;code&gt;~/.vim/files&lt;/code&gt;）的话，可以使用下面的配置：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; 如果文件夹不存在，则新建文件夹&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;isdirectory&lt;/span&gt;(&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/.vim/files&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*mkdir&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;mkdir&lt;/span&gt;(&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;.&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/.vim/files&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;endif&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; 备份文件&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;backup&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;backupdir&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;&lt;span class="pl-sr"&gt;/.vim/&lt;/span&gt;&lt;span class="pl-c1"&gt;files&lt;/span&gt;&lt;span class="pl-sr"&gt;/backup/&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;backupext&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;vimbackup
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;backupskip&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; 交换文件&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;directory&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;&lt;span class="pl-sr"&gt;/.vim/&lt;/span&gt;&lt;span class="pl-c1"&gt;files&lt;/span&gt;&lt;span class="pl-sr"&gt;/swap/&lt;/span&gt;/
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;updatecount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; 撤销文件&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;undofile&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;undodir&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;&lt;span class="pl-sr"&gt;/.vim/&lt;/span&gt;&lt;span class="pl-c1"&gt;files&lt;/span&gt;&lt;span class="pl-sr"&gt;/undo/&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; viminfo 文件&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;viminfo&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt;'&lt;span class="pl-c1"&gt;100&lt;/span&gt;,&lt;span class="pl-c1"&gt;n&lt;/span&gt;&lt;span class="pl-c1"&gt;$HOME&lt;/span&gt;&lt;span class="pl-sr"&gt;/.vim/&lt;/span&gt;&lt;span class="pl-c1"&gt;files&lt;/span&gt;&lt;span class="pl-sr"&gt;/info/&lt;/span&gt;&lt;span class="pl-c1"&gt;viminfo&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意：如果你在一个多用户系统中编辑某个文件时， Vim 提示你交换文件已经存在的话，可能是因为有其他的用户此时正在编辑这个文件。而如果将交换文件放到自己的 home 目录的话，这个功能就失效了。因此服务器非常不建议将这些文件修改到 HOME 目录，避免多人同时编辑一个文件，却没有任何警告。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-编辑远程文件" class="anchor" aria-hidden="true" href="#编辑远程文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;编辑远程文件&lt;/h2&gt;
&lt;p&gt;Vim 自带的 netrw 插件支持对远程文件的编辑。实际上它将远程的文件通过 scp 复制到本地的临时文件中，再用那个文件打开一个缓冲区，然后在保存时把文件再复制回远程位置。&lt;/p&gt;
&lt;p&gt;下面的命令在你本地的 VIM 配置与 SSH 远程服务器上管理员想让你使用的配置有冲突时尤其有用：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;e&lt;/span&gt; &lt;span class="pl-c1"&gt;scp&lt;/span&gt;:&lt;span class="pl-sr"&gt;//&lt;/span&gt;bram&lt;span class="pl-smi"&gt;@a&lt;/span&gt;wesome.site.&lt;span class="pl-c1"&gt;com&lt;/span&gt;/.vimrc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你已经设置了 &lt;code&gt;~/.ssh/config&lt;/code&gt;，SSH 会自动读取这里的配置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host awesome
    HostName awesome.site.com
    Port 1234
    User bram
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果你的 &lt;code&gt;~/.ssh/config&lt;/code&gt; 中有以上的内容，那么下面的命令就可以正常执行了：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;e&lt;/span&gt; &lt;span class="pl-c1"&gt;scp&lt;/span&gt;:&lt;span class="pl-sr"&gt;//&lt;/span&gt;awesome/.vimrc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以用同样的方法编辑 &lt;code&gt;~/.netrc&lt;/code&gt;, 详见：&lt;code&gt;:h netrc-netrc&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;确保你已经看过了 &lt;code&gt;:h netrw-ssh-hack&lt;/code&gt; 和 &lt;code&gt;:h g:netrw_ssh_cmd&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;另外一种编辑远程文件的方法是使用 &lt;a href="https://wiki.archlinux.org/index.php/Sshfs" rel="nofollow"&gt;sshfs&lt;/a&gt;，它会用 &lt;a href="https://en.wikipedia.org/wiki/Filesystem_in_Userspace" rel="nofollow"&gt;FUSE&lt;/a&gt; 来挂载远程的文件系统到你本地的系统当中。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-插件管理" class="anchor" aria-hidden="true" href="#插件管理"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;插件管理&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/tpope/vim-pathogen"&gt;Pathogen&lt;/a&gt;是第一个比较流行的插件管理工具。实际上它只是修改了 &lt;em&gt;runtimepath&lt;/em&gt; （&lt;code&gt;:h 'rtp'&lt;/code&gt;） 来引入所有放到该目录下的文件。你需要自己克隆插件的代码仓库到那个目录。&lt;/p&gt;
&lt;p&gt;真正的插件管理工具会在 Vim 中提供帮助你安装或更新插件的命令。以下是一些常用的插件管理工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Shougo/dein.vim"&gt;dein&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/junegunn/vim-plug"&gt;plug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MarcWeber/vim-addon-manager"&gt;vim-addon-manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VundleVim/Vundle.vim"&gt;vundle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-多行编辑" class="anchor" aria-hidden="true" href="#多行编辑"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;多行编辑&lt;/h2&gt;
&lt;p&gt;这是一种可以同时输入多行连续文本的技术。参考这个&lt;a href="https://raw.githubusercontent.com/mhinz/vim-galore/master/contents/images/content-block_insert.gif" rel="nofollow"&gt;示例&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;用 &lt;code&gt;&amp;lt;c-v&amp;gt;&lt;/code&gt; 切换到可视块模式。然后向下选中几行，按 &lt;code&gt;I&lt;/code&gt; 或 &lt;code&gt;A&lt;/code&gt; （译者注：大写字母，即 shift+i 或 shift+a）然后开始输入你想要输入的文本。&lt;/p&gt;
&lt;p&gt;在刚开始的时候可能会有些迷惑，因为文本只出现在了当前编辑的行，只有在当前的插入动作结束后，之前选中的其它行才会出现插入的文本。&lt;/p&gt;
&lt;p&gt;举一个简单的例子：&lt;code&gt;&amp;lt;c-v&amp;gt;3jItext&amp;lt;esc&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果你要编辑的行长度不同，但是你想在他们后面追加相同的内容的话，可以试一下这个：&lt;code&gt;&amp;lt;c-v&amp;gt;3j$Atext&amp;lt;esc&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;有时你可能需要把光标放到当前行末尾之后，默认情况下你是不可能做到的，但是可能通过设置 &lt;code&gt;virtualedit&lt;/code&gt; 选项达到目的：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;virtualedit&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;all&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置之后 &lt;code&gt;$10l&lt;/code&gt; 或 &lt;code&gt;90|&lt;/code&gt; 都会生效，即使超过了行尾的长度。&lt;/p&gt;
&lt;p&gt;详见 &lt;code&gt;:h blockwise-examples&lt;/code&gt;。在开始的时候可能会觉得有些复杂，但是它很快就会成为你的第二天性的。&lt;/p&gt;
&lt;p&gt;如果你想探索更有趣的事情，可以看看&lt;a href="https://github.com/terryma/vim-multiple-cursors"&gt;多光标&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-使用外部程序和过滤器" class="anchor" aria-hidden="true" href="#使用外部程序和过滤器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用外部程序和过滤器&lt;/h2&gt;
&lt;p&gt;免责声明：Vim 是单线程的，因此在 Vim 中以前端进程执行其它的程序时会阻止其它的一切。当然你可以使用 Vim 程序接口，如 Lua，并且使用它的多线程支持，但是在那期间， Vim 的处理还是被阻止了。Neovim 添加了任务 API 解决了此问题。&lt;/p&gt;
&lt;p&gt;（据说 Bram 正在考虑在 Vim 中也添加任务控制。如果你使用了较新版本的的 Vim ，可以看一下 &lt;code&gt;:helpgrep startjob&lt;/code&gt;。）&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;:!&lt;/code&gt; 启动一个新任务。如果你想列出当前工作目录下的所有文件，可以使用 &lt;code&gt;:!ls&lt;/code&gt;。 用 &lt;code&gt;|&lt;/code&gt; 来将结果通过管道重定向，如：&lt;code&gt;:!ls -l | sort | tail -n5&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;没有使用范围时（译者注：范围就是 &lt;code&gt;:&lt;/code&gt; 和 &lt;code&gt;!&lt;/code&gt; 之间的内容，&lt;code&gt;.&lt;/code&gt; 表示当前行，&lt;code&gt;+4&lt;/code&gt; 表示向下偏移 4 行，&lt;code&gt;$&lt;/code&gt; 表示最末行等，多行时用 &lt;code&gt;,&lt;/code&gt; 将它们分开，如 &lt;code&gt;.,$&lt;/code&gt; 表示从当前行到末行），&lt;code&gt;:!&lt;/code&gt; 会显示在一个可滚动的窗口中（译者注：在 GVim 和在终端里运行的结果稍有不同）。相反的，如果指定了范围，这些行会被&lt;a href="https://en.wikipedia.org/wiki/Filter_(software)" rel="nofollow"&gt;过滤&lt;/a&gt;。这意味着它们会通过管道被重定向到过滤程序的 &lt;a href="https://en.wikipedia.org/wiki/Standard_streams#Standard_input_.28stdin.29" rel="nofollow"&gt;stdin&lt;/a&gt;，在处理后再通过过滤程序的 &lt;a href="https://en.wikipedia.org/wiki/Standard_streams#Standard_output_.28stdout.29" rel="nofollow"&gt;stdout&lt;/a&gt; 输出，用输出结果替换范围内的文本。例如：为接下来的 5 行文本添加行号，可以使用：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:.,&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;nl &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;ba&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;w1 &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;s&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于手动添加范围很麻烦， Vim 提供了一些辅助方法以方便的添加范围。如果需要经常带着范围的话，你可以在可见模式中先选择，然后再按 &lt;code&gt;:&lt;/code&gt; （译者注：选中后再按 &lt;code&gt;!&lt;/code&gt; 更方便）。还可以使用 &lt;code&gt;!&lt;/code&gt; 来取用一个 motion 的范围，如 &lt;code&gt;!ipsort&lt;/code&gt; （译者注：原文为 &lt;code&gt;!ip!sort&lt;/code&gt; ，但经过实验发现该命令执行报错，可能是因为 Vim 版本的原因造成的，新版本使用 &lt;code&gt;ip&lt;/code&gt; 选择当前段落后自动在命令后添加了 &lt;code&gt;!&lt;/code&gt; ，按照作者的写法来看，可能之前的版本没有自动添加 &lt;code&gt;!&lt;/code&gt; ）可以将当前段落的所有行按字母表顺序进行排序。&lt;/p&gt;
&lt;p&gt;一个使用过滤器比较好的案例是&lt;a href="https://golang.org/" rel="nofollow"&gt;Go 语言&lt;/a&gt;。它的缩进语法非常个性，甚至还专门提供了一个名为 &lt;code&gt;gofmt&lt;/code&gt; 的过滤器来对 Go 语言的源文件进行正确的缩进。Go 语言的插件通常会提供一个名为 &lt;code&gt;:Fmt&lt;/code&gt; 的函数，这个函数就是执行了 &lt;code&gt;:%!gofmt&lt;/code&gt; 来对整个文件进行缩进。&lt;/p&gt;
&lt;p&gt;人们常用 &lt;code&gt;:r !prog&lt;/code&gt; 将 prog 程序的插入放到当前行的下面，这对于脚本来说是很不错的选择，但是在使用的过程中我发现 &lt;code&gt;!!ls&lt;/code&gt; 更加方便，它会用输出结果替换当前行的内容。（译者注：前面命令中的 &lt;code&gt;prog&lt;/code&gt; 只是个占位符，在实际使用中需要替换成其它的程序，如 &lt;code&gt;:r !ls&lt;/code&gt;，这就与后面的 &lt;code&gt;!!ls&lt;/code&gt; 相对应了，两者唯一的不同是第一个命令不会覆盖当前行内容，但是第二个命令会）&lt;/p&gt;
&lt;p&gt;帮助文档：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;filter&lt;/span&gt;
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; :&lt;span class="pl-c1"&gt;read&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-cscope" class="anchor" aria-hidden="true" href="#cscope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cscope&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://cscope.sourceforge.net/" rel="nofollow"&gt;Cscope&lt;/a&gt; 的功能比 &lt;a href="http://ctags.sourceforge.net/" rel="nofollow"&gt;ctags&lt;/a&gt; 要完善，但是只支持 C（通过设置 cscope.files 后同样支持 C++以及 Java）。&lt;/p&gt;
&lt;p&gt;鉴于 Tag 文件只是知道某个符号是在哪里定义的，cscope 的数据库里的数据信息就多的多了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;符号是在哪里定义的？&lt;/li&gt;
&lt;li&gt;符号是在哪里被使用的？&lt;/li&gt;
&lt;li&gt;这个全局符号定义了什么？&lt;/li&gt;
&lt;li&gt;这个变量是在哪里被赋值的？&lt;/li&gt;
&lt;li&gt;这个函数在源文件的哪个位置？&lt;/li&gt;
&lt;li&gt;哪些函数调用了这个函数？&lt;/li&gt;
&lt;li&gt;这个函数调用了哪些函数？&lt;/li&gt;
&lt;li&gt;"out of space"消息是从哪来的？&lt;/li&gt;
&lt;li&gt;在目录结构中当前的源文件在哪个位置？&lt;/li&gt;
&lt;li&gt;哪些文件引用了这个头文件？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-1-构建数据库" class="anchor" aria-hidden="true" href="#1-构建数据库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 构建数据库&lt;/h3&gt;
&lt;p&gt;在你项目的根目录执行下面的命令：&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ cscope -bqR&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这条命令会在当前目录下创建三个文件：&lt;code&gt;cscope{,.in,.po}.out&lt;/code&gt; 。把它们想象成你的数据库。&lt;/p&gt;
&lt;p&gt;不幸的时 &lt;code&gt;cscope&lt;/code&gt; 默认只分析 &lt;code&gt;*.[c|h|y|l]&lt;/code&gt; 文件。如果你想在 Java 项目中使用 cscope ，需要这样做：&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*.java&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; cscope.files
$ cscope -bq&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-2-添加数据库" class="anchor" aria-hidden="true" href="#2-添加数据库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 添加数据库&lt;/h3&gt;
&lt;p&gt;打开你新创建的数据库连接：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;cs&lt;/span&gt; &lt;span class="pl-c1"&gt;add&lt;/span&gt; &lt;span class="pl-c1"&gt;cscope&lt;/span&gt;.out&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;检查连接已经创建成功：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;cs&lt;/span&gt; show&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（当然你可以添加多个连接。）&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3-查询数据库" class="anchor" aria-hidden="true" href="#3-查询数据库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 查询数据库&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;cs&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;kind&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;query&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如：&lt;code&gt;:cs find d foo&lt;/code&gt; 会列出 &lt;code&gt;foo(...)&lt;/code&gt; 调用的所有函数。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Kind&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;s&lt;/strong&gt;ymbol：查找使用该符号的引用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;g&lt;/strong&gt;lobal：查找该全局符号的定义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;c&lt;/strong&gt;alls：查找调用当前方法的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;t&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;t&lt;/strong&gt;ext：查找出现该文本的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;e&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;e&lt;/strong&gt;grep：使用 egrep 搜索当前单词&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;f&lt;/strong&gt;ile：打开文件名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;i&lt;/strong&gt;ncludes：查询引入了当前文件的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;d&lt;/strong&gt;epends：查找当前方法调用的方法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;推荐一些比较方便的映射，如：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;cs&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;cg&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;g&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;cc&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;c&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;ct :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;ce&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;e&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;cf&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;f&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cfile&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;ci&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;i&lt;/span&gt; ^&lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cfile&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;span class="pl-smi"&gt;$&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; :&lt;span class="pl-c1"&gt;cscope&lt;/span&gt; &lt;span class="pl-c1"&gt;find&lt;/span&gt; &lt;span class="pl-c1"&gt;d&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;cword&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所以 &lt;code&gt;:tag&lt;/code&gt; （或 &lt;code&gt;&amp;lt;c-]&amp;gt;&lt;/code&gt;）跳转到标签定义的文件，而 &lt;code&gt;:cstag&lt;/code&gt; 可以达到同样的目的，同时还会打开 cscope 的数据库连接。&lt;code&gt;'cscopetag'&lt;/code&gt; 选项使得 &lt;code&gt;:tag&lt;/code&gt; 命令自动的像 &lt;code&gt;:cstag&lt;/code&gt; 一样工作。这在你已经使用了基于标签的映射时会非常方便。&lt;/p&gt;
&lt;p&gt;帮助文档：&lt;code&gt;:h cscope&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-matchit" class="anchor" aria-hidden="true" href="#matchit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MatchIt&lt;/h2&gt;
&lt;p&gt;由于 Vim 是用 C 语言编写的，因此许多功能都假设使用类似 C 语言的语法。默认情况下，如果你的光标在 &lt;code&gt;{&lt;/code&gt; 或 &lt;code&gt;#endif&lt;/code&gt; , 就可以使用 &lt;code&gt;%&lt;/code&gt; 跳转到与之匹配的 &lt;code&gt;}&lt;/code&gt; 或 &lt;code&gt;#ifdef&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;Vim 自带了一个名为 matchit.vim 的插件，但是默认没有启用。启用后可以用 &lt;code&gt;%&lt;/code&gt; 在 HTML 相匹配的标签或 VimL 的 if/else/endif 块之间进行跳转，它还带来了一些新的命令。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-在-vim-8-中安装" class="anchor" aria-hidden="true" href="#在-vim-8-中安装"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;在 Vim 8 中安装&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; vimrc&lt;/span&gt;
&lt;span class="pl-c1"&gt;packadd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; matchit&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-在-vim-7-或者更早的版本中安装" class="anchor" aria-hidden="true" href="#在-vim-7-或者更早的版本中安装"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;在 Vim 7 或者更早的版本中安装&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt;vimrc&lt;/span&gt;
&lt;span class="pl-c1"&gt;runtime&lt;/span&gt; macros/matchit.&lt;span class="pl-c1"&gt;vim&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于 matchit 的文档很全面，我建议安装以后执行一次下面的命令：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-c1"&gt;mkdir&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;p&lt;/span&gt; &lt;span class="pl-c1"&gt;~/.vim/doc&lt;/span&gt;
:&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-c1"&gt;cp&lt;/span&gt; &lt;span class="pl-c1"&gt;$VIMRUNTIME&lt;/span&gt;&lt;span class="pl-sr"&gt;/macros/&lt;/span&gt;matchit.&lt;span class="pl-c1"&gt;vim&lt;/span&gt; &lt;span class="pl-c1"&gt;~/.vim/doc&lt;/span&gt;
:&lt;span class="pl-c1"&gt;helptags&lt;/span&gt; &lt;span class="pl-c1"&gt;~/.vim/doc&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-简短的介绍" class="anchor" aria-hidden="true" href="#简短的介绍"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;简短的介绍&lt;/h3&gt;
&lt;p&gt;至此这个插件已经可以使用了。 参考 &lt;code&gt;:h matchit-intro&lt;/code&gt; 来获得支持的命令以及 &lt;code&gt;:h matchit-languages&lt;/code&gt; 来获得支持的语言。&lt;/p&gt;
&lt;p&gt;你可以很方便的定义自己的匹配对，如：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;FileType&lt;/span&gt; &lt;span class="pl-c1"&gt;python&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;match_words&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\&amp;lt;if\&amp;gt;:\&amp;lt;elif\&amp;gt;:\&amp;lt;else\&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;之后你就可以在任何的 Python 文件中使用 &lt;code&gt;%&lt;/code&gt; （向前）或 &lt;code&gt;g%&lt;/code&gt; （向后）在这三个片断之间跳转了。&lt;/p&gt;
&lt;p&gt;帮助文档：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt; matchit&lt;span class="pl-k"&gt;-&lt;/span&gt;install
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; matchit
:&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;match_words&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-技巧" class="anchor" aria-hidden="true" href="#技巧"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技巧&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-跳至选择的区域另一端" class="anchor" aria-hidden="true" href="#跳至选择的区域另一端"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;跳至选择的区域另一端&lt;/h2&gt;
&lt;p&gt;在使用 &lt;code&gt;v&lt;/code&gt; 或者 &lt;code&gt;V&lt;/code&gt; 选择某段文字后，可以用 &lt;code&gt;o&lt;/code&gt; 或者 &lt;code&gt;O&lt;/code&gt; 按键跳至选择区域的开头或者结尾。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:h v_o
:h v_O
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-聪明地使用-n-和-n" class="anchor" aria-hidden="true" href="#聪明地使用-n-和-n"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;聪明地使用 n 和 N&lt;/h2&gt;
&lt;p&gt;&lt;kbd&gt;n&lt;/kbd&gt; 与 &lt;kbd&gt;N&lt;/kbd&gt; 的实际跳转方向取决于使用 &lt;code&gt;/&lt;/code&gt; 还是 &lt;code&gt;?&lt;/code&gt; 来执行搜索，其中 &lt;code&gt;/&lt;/code&gt; 是向后搜索，&lt;code&gt;?&lt;/code&gt; 是向前搜索。一开始我（原作者）觉得这里很难理解。&lt;/p&gt;
&lt;p&gt;如果你希望 &lt;kbd&gt;n&lt;/kbd&gt; 始终为向后搜索，&lt;kbd&gt;N&lt;/kbd&gt; 始终为向前搜索，那么只需要这样设置：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;n&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Nn&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;[&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;searchforward&lt;/span&gt;]
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;N&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nN&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;[&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;searchforward&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-聪明地使用命令行历史" class="anchor" aria-hidden="true" href="#聪明地使用命令行历史"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;聪明地使用命令行历史&lt;/h2&gt;
&lt;p&gt;我（原作者）习惯用 &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;p&lt;/kbd&gt; 和 &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;n&lt;/kbd&gt; 来跳转到上一个/下一个条目。其实这个操作也可以用在命令行中，快速调出之前执行过的命令。&lt;/p&gt;
&lt;p&gt;不仅如此，你会发现 &lt;kbd&gt;上&lt;/kbd&gt; 和 &lt;kbd&gt;下&lt;/kbd&gt; 其实更智能。如果命令行中已经存在了一些文字，我们可以通过按方向键来匹配已经存在的内容。比如，命令行中现在是 &lt;code&gt;:echo&lt;/code&gt;，这时候我们按 &lt;kbd&gt;上&lt;/kbd&gt;，就会帮我们补全成 &lt;code&gt;:echo "Vim rocks!"&lt;/code&gt;（前提是，之前输入过这段命令）。&lt;/p&gt;
&lt;p&gt;当然，Vim 用户都不愿意去按方向键，事实上我们也不需要去按，只需要设置这样的映射：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-n&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;down&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;cnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-p&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;up&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个功能，我（原作者）每天都要用很多次。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-智能-ctrl-l" class="anchor" aria-hidden="true" href="#智能-ctrl-l"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;智能 Ctrl-l&lt;/h2&gt;
&lt;p&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;l&lt;/kbd&gt; 的默认功能是清空并「重新绘制」当前的屏幕，就和 &lt;code&gt;:redraw!&lt;/code&gt; 的功能一样。下面的这个映射就是执行重新绘制，并且取消通过 &lt;code&gt;/&lt;/code&gt; 和 &lt;code&gt;?&lt;/code&gt; 匹配字符的高亮，而且还可以修复代码高亮问题（有时候，由于多个代码高亮的脚本重叠，或者规则过于复杂，Vim 的代码高亮显示会出现问题）。不仅如此，还可以刷新「比较模式」（请参阅 &lt;code&gt;:help diff-mode&lt;/code&gt;）的代码高亮：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;l&lt;/span&gt; :&lt;span class="pl-c1"&gt;nohlsearch&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;diffupdate&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;syntax&lt;/span&gt; &lt;span class="pl-c1"&gt;sync&lt;/span&gt; &lt;span class="pl-c1"&gt;fromstart&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;c-l&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-禁用错误报警声音和图标" class="anchor" aria-hidden="true" href="#禁用错误报警声音和图标"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;禁用错误报警声音和图标&lt;/h2&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;noerrorbells&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;novisualbell&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;t_vb&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请参阅 &lt;a href="http://vim.wikia.com/wiki/Disable_beeping" rel="nofollow"&gt;Vim Wiki: Disable beeping&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-快速移动当前行" class="anchor" aria-hidden="true" href="#快速移动当前行"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;快速移动当前行&lt;/h2&gt;
&lt;p&gt;有时，我（原作者）想要快速把当前行上移或下移一行，只需要这样设置映射：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; [&lt;span class="pl-c1"&gt;e&lt;/span&gt;  :&lt;span class="pl-c1"&gt;&amp;lt;c-u&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;execute&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;move -1-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;. &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;count1&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; ]&lt;span class="pl-c1"&gt;e&lt;/span&gt;  :&lt;span class="pl-c1"&gt;&amp;lt;c-u&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;execute&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;move +&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;. &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;count1&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个映射，同样可以搭配数字使用，比如连续按下 &lt;kbd&gt;2&lt;/kbd&gt; &lt;kbd&gt;]&lt;/kbd&gt; &lt;kbd&gt;e&lt;/kbd&gt; 就可以把当前行向下移动两行。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-快速添加空行" class="anchor" aria-hidden="true" href="#快速添加空行"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;快速添加空行&lt;/h2&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; [&lt;span class="pl-c1"&gt;&amp;lt;space&amp;gt;&lt;/span&gt;  :&lt;span class="pl-c1"&gt;&amp;lt;c-u&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;put&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;repeat&lt;/span&gt;(&lt;span class="pl-en"&gt;nr2char&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;), &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;count1&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;'[
&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; ]&lt;span class="pl-c1"&gt;&amp;lt;space&amp;gt;&lt;/span&gt;  :&lt;span class="pl-c1"&gt;&amp;lt;c-u&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;put&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;repeat&lt;/span&gt;(&lt;span class="pl-en"&gt;nr2char&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;), &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;count1&lt;/span&gt;)&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置之后，连续按下 &lt;kbd&gt;5&lt;/kbd&gt; &lt;kbd&gt;[&lt;/kbd&gt; &lt;kbd&gt;空格&lt;/kbd&gt; 在当前行上方插入 5 个空行。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-运行时检测" class="anchor" aria-hidden="true" href="#运行时检测"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;运行时检测&lt;/h3&gt;
&lt;p&gt;需要的特性：+profile&lt;/p&gt;
&lt;p&gt;Vim 提供了一个内置的运行时检查功能，能够找出运行慢的代码。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:profile&lt;/code&gt; 命令后面跟着子命令来确定要查看什么。&lt;/p&gt;
&lt;p&gt;如果你想查看所有的：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;profile&lt;/span&gt; &lt;span class="pl-c1"&gt;start&lt;/span&gt; &lt;span class="pl-sr"&gt;/tmp/&lt;/span&gt;&lt;span class="pl-c1"&gt;profile&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;
:&lt;span class="pl-c1"&gt;profile&lt;/span&gt; &lt;span class="pl-c1"&gt;file&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;
:&lt;span class="pl-c1"&gt;profile&lt;/span&gt; func &lt;span class="pl-k"&gt;*&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;do something in Vim&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;quit Vim&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vim 不断地在内存中检查信息，只在退出的时候输出出来。（Neovim 已经解决了这个问题用 &lt;code&gt;:profile dump&lt;/code&gt; 命令）&lt;/p&gt;
&lt;p&gt;看一下 &lt;code&gt;/tmp/profile.log&lt;/code&gt; 文件，检查时运行的所有代码都会被显示出来，包括每一行代码运行的频率和时间。&lt;/p&gt;
&lt;p&gt;大多数代码都是用户不熟悉的插件代码，如果你是在解决一个确切的问题，
直接跳到这个日志文件的末尾，那里有 &lt;code&gt;FUNCTIONS SORTED ON TOTAL TIME&lt;/code&gt; 和 &lt;code&gt;FUNCTIONS SORTED ON SELF TIME&lt;/code&gt; 两个部分，如果某个 function 运行时间过长一眼就可以看到。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-查看启动时间" class="anchor" aria-hidden="true" href="#查看启动时间"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;查看启动时间&lt;/h3&gt;
&lt;p&gt;感觉 Vim 启动的慢？到了研究几个数字的时候了：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;vim&lt;/span&gt; &lt;span class="pl-k"&gt;--&lt;/span&gt;startuptime &lt;span class="pl-sr"&gt;/tmp/&lt;/span&gt;startup.&lt;span class="pl-c1"&gt;log&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;q&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;vim&lt;/span&gt; &lt;span class="pl-sr"&gt;/tmp/&lt;/span&gt;startup.&lt;span class="pl-c1"&gt;log&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第一栏是最重要的因为它显示了&lt;strong&gt;绝对运行时间&lt;/strong&gt;，如果在前后两行之间时间差有很大的跳跃，那么是第二个文件太大或者含有需要检查的错误的 VimL 代码。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-nul-符用新行表示" class="anchor" aria-hidden="true" href="#nul-符用新行表示"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NUL 符用新行表示&lt;/h2&gt;
&lt;p&gt;文件中的 NUL 符 （&lt;code&gt;\0&lt;/code&gt;），在内存中被以新行（&lt;code&gt;\n&lt;/code&gt;）保存，在缓存空间中显示为 &lt;code&gt;^@&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;更多信息请参看 &lt;code&gt;man 7 ascii&lt;/code&gt; 和 &lt;code&gt;:h NL-used-for-Nul&lt;/code&gt; 。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-快速编辑自定义宏" class="anchor" aria-hidden="true" href="#快速编辑自定义宏"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;快速编辑自定义宏&lt;/h2&gt;
&lt;p&gt;这个功能真的很实用！下面的映射，就是在一个新的命令行窗口中读取某一个寄存器（默认为 &lt;code&gt;*&lt;/code&gt;）。当你设置完成后，只需要按下 &lt;kbd&gt;回车&lt;/kbd&gt; 即可让它生效。&lt;/p&gt;
&lt;p&gt;在录制宏的时候，我经常用这个来更改拼写错误。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;m&lt;/span&gt;  :&lt;span class="pl-c1"&gt;&amp;lt;c-u&amp;gt;&amp;lt;c-r&amp;gt;&amp;lt;c-r&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;let @&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;. &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;register&lt;/span&gt; .&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;. &lt;span class="pl-en"&gt;string&lt;/span&gt;(&lt;span class="pl-en"&gt;getreg&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;register&lt;/span&gt;))&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&amp;lt;c-f&amp;gt;&amp;lt;left&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;只需要连续按下 &lt;kbd&gt;leader&lt;/kbd&gt; &lt;kbd&gt;m&lt;/kbd&gt; 或者 &lt;kbd&gt;"&lt;/kbd&gt; &lt;kbd&gt;leader&lt;/kbd&gt; &lt;kbd&gt;m&lt;/kbd&gt; 就可以调用了。&lt;/p&gt;
&lt;p&gt;请注意，这里之所以要写成 &lt;code&gt;&amp;lt;c-r&amp;gt;&amp;lt;c-r&amp;gt;&lt;/code&gt; 是为了确保 &lt;code&gt;&amp;lt;c-r&amp;gt;&lt;/code&gt; 执行了。请参阅 &lt;code&gt;:h c_^R^R&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-快速跳转到源头文件" class="anchor" aria-hidden="true" href="#快速跳转到源头文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;快速跳转到源(头)文件&lt;/h2&gt;
&lt;p&gt;这个技巧可以用在多种文件类型中。当你从源文件或者头文件中切换到其他文件的时候，这个技巧可以设置「文件标记」（请参阅 &lt;code&gt;:h marks&lt;/code&gt;），然后你就可以通过连续按下 &lt;kbd&gt;'&lt;/kbd&gt; &lt;kbd&gt;C&lt;/kbd&gt; 或者 &lt;kbd&gt;'&lt;/kbd&gt; &lt;kbd&gt;H&lt;/kbd&gt; 快速跳转回去（请参阅 &lt;code&gt;:h 'A&lt;/code&gt;）。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufLeave&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.{&lt;span class="pl-c1"&gt;c&lt;/span&gt;,cpp} &lt;span class="pl-c1"&gt;mark&lt;/span&gt; C
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufLeave&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.&lt;span class="pl-c1"&gt;h&lt;/span&gt;       &lt;span class="pl-c1"&gt;mark&lt;/span&gt; H&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：由于这个标记是设置在 viminfo 文件中，因此请先确认 &lt;code&gt;:set viminfo?&lt;/code&gt; 中包含了 &lt;code&gt;:h viminfo-'&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-在-gui-中快速改变字体大小" class="anchor" aria-hidden="true" href="#在-gui-中快速改变字体大小"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;在 GUI 中快速改变字体大小&lt;/h2&gt;
&lt;p&gt;印象中，我（原作者）记得一下代码是来自 tpope's 的配置文件：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; Bigger  :&lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;guifont&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;substitute&lt;/span&gt;(&amp;amp;&lt;span class="pl-c1"&gt;guifont&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\d\+$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\=submatch(0)+1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; Smaller :&lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;guifont&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;substitute&lt;/span&gt;(&amp;amp;&lt;span class="pl-c1"&gt;guifont&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\d\+$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\=submatch(0)-1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-根据模式改变光标类型" class="anchor" aria-hidden="true" href="#根据模式改变光标类型"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;根据模式改变光标类型&lt;/h2&gt;
&lt;p&gt;我（原作者）习惯在普通模式下用块状光标，在插入模式下用条状光标（形状类似英文 "I" 的样子），然后在替换模式中使用下划线形状的光标。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;empty&lt;/span&gt;(&lt;span class="pl-c1"&gt;$TMUX&lt;/span&gt;)
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_SI&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=1&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_EI&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=0&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_SR&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=2&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;else&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_SI&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;Ptmux;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=1&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_EI&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;Ptmux;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=0&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &amp;amp;&lt;span class="pl-c1"&gt;t_SR&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;Ptmux;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;]50;CursorShape=2&lt;span class="pl-cce"&gt;\x&lt;/span&gt;7&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;Esc&amp;gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;原理很简单，就是让 Vim 在进入和离开插入模式的时候，输出一些序列，请参考 &lt;a href="https://en.wikipedia.org/wiki/Escape_sequence" rel="nofollow"&gt;escape sequence&lt;/a&gt;。Vim 与终端之间的中间层，比如 &lt;a href="https://tmux.github.io" rel="nofollow"&gt;tmux&lt;/a&gt; 会处理并执行上面的代码。&lt;/p&gt;
&lt;p&gt;但上面这个还是有一个缺点的。终端环境的内部原理不尽相同，对于序列的处理方式也稍有不同。因此，上面的代码可能无法在你的环境中运行。甚至，你的运行环境也有可能不支持其他光标形状，请参阅你的 Vim 运行环境的文档。&lt;/p&gt;
&lt;p&gt;好消息是，上面这个代码，可以在 iTerm2 中完美运行。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-防止水平滑动的时候失去选择" class="anchor" aria-hidden="true" href="#防止水平滑动的时候失去选择"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;防止水平滑动的时候失去选择&lt;/h2&gt;
&lt;p&gt;如果你选中了一行或多行，那么你可以用 &lt;kbd&gt;&amp;lt;&lt;/kbd&gt; 或 &lt;kbd&gt;&amp;gt;&lt;/kbd&gt; 来调整他们的缩进。但在调整之后就不会保持选中状态了。&lt;/p&gt;
&lt;p&gt;你可以连续按下 &lt;kbd&gt;g&lt;/kbd&gt; &lt;kbd&gt;v&lt;/kbd&gt; 来重新选中他们，请参考 &lt;code&gt;:h gv&lt;/code&gt;。因此，你可以这样来配置映射：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;xnoremap&lt;/span&gt;&lt;span class="pl-k"&gt; &amp;lt; &lt;/span&gt; &amp;lt;gv
&lt;span class="pl-c1"&gt;xnoremap&lt;/span&gt;&lt;span class="pl-k"&gt; &amp;gt; &lt;/span&gt; &amp;gt;gv&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置好之后，在可视模式中使用 &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 就不会再出现上面提到的问题了。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-选择当前行至结尾排除换行符" class="anchor" aria-hidden="true" href="#选择当前行至结尾排除换行符"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;选择当前行至结尾，排除换行符&lt;/h2&gt;
&lt;p&gt;在 Vim 里，我们可以同过 &lt;code&gt;v$&lt;/code&gt; 选择当前行至结尾，但此时会把最后一个换行符也选中，通常需要按额外的 &lt;code&gt;h&lt;/code&gt; 来取消最后选中最后一个换行符号。
Vim 提供了一个 &lt;code&gt;g_&lt;/code&gt; 快捷键，可以移动光标至最后一个非空字符。因此，为达到次效果，可以使用 &lt;code&gt;vg_&lt;/code&gt;。当然，如果觉得按三个键比较麻烦，
可以添加一个映射：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; L g_&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样就可以通过 &lt;code&gt;vL&lt;/code&gt; 达到一样的效果了。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-重新载入保存文件" class="anchor" aria-hidden="true" href="#重新载入保存文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重新载入保存文件&lt;/h2&gt;
&lt;p&gt;通过&lt;a href="#%E8%87%AA%E5%8A%A8%E5%91%BD%E4%BB%A4"&gt;自动命令&lt;/a&gt;，你可以在保存文件的同时触发一些其他功能。比如，如果这个文件是一个配置文件，那么就重新载入；或者你还可以对这个文件进行代码风格检查。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufWritePost&lt;/span&gt; &lt;span class="pl-c1"&gt;$MYVIMRC&lt;/span&gt; &lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-c1"&gt;$MYVIMRC&lt;/span&gt;
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufWritePost&lt;/span&gt; &lt;span class="pl-c1"&gt;~/.Xdefaults&lt;/span&gt; &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;system&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xrdb ~/.Xdefaults&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-更加智能的当前行高亮" class="anchor" aria-hidden="true" href="#更加智能的当前行高亮"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;更加智能的当前行高亮&lt;/h2&gt;
&lt;p&gt;我（原作者）很喜欢「当前行高亮」（请参阅 &lt;code&gt;:h cursorline&lt;/code&gt;）这个功能，但我只想让这个效果出现在当前窗口，而且在插入模式中关闭这个效果：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;InsertLeave&lt;/span&gt;,&lt;span class="pl-c1"&gt;WinEnter&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;cursorline&lt;/span&gt;
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;InsertEnter&lt;/span&gt;,&lt;span class="pl-c1"&gt;WinLeave&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;nocursorline&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-更快的关键字补全" class="anchor" aria-hidden="true" href="#更快的关键字补全"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;更快的关键字补全&lt;/h2&gt;
&lt;p&gt;关键字补全（&lt;code&gt;&amp;lt;c-n&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;c-p&amp;gt;&lt;/code&gt;）功能的工作方式是，无论 &lt;code&gt;'complete'&lt;/code&gt; 设置中有什么，它都会尝试着去补全。这样，一些我们用不到的标签也会出现在补全列表中。而且，它会扫描很多文件，有时候运行起来非常慢。如果你不需要这些，那么完全可以像这样把它们禁用掉：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;complete&lt;/span&gt;&lt;span class="pl-k"&gt;-=&lt;/span&gt;&lt;span class="pl-c1"&gt;i&lt;/span&gt;&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;"&lt;/span&gt; disable scanning included files&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;complete&lt;/span&gt;&lt;span class="pl-k"&gt;-=&lt;/span&gt;&lt;span class="pl-c1"&gt;t&lt;/span&gt;&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;"&lt;/span&gt; disable searching tags&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-改变颜色主题的默认外观" class="anchor" aria-hidden="true" href="#改变颜色主题的默认外观"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;改变颜色主题的默认外观&lt;/h2&gt;
&lt;p&gt;如果你想让状态栏在颜色主题更改后依然保持灰色，那么只需要这样设置：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;ColorScheme&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;StatusLine&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;darkgray&lt;/span&gt; cterm&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;NONE&lt;/span&gt; guibg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;darkgray&lt;/span&gt; &lt;span class="pl-c1"&gt;gui&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;NONE&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同理，如果你想让某一个颜色主题（比如 "lucius"）的状态栏为灰色（请使用 &lt;code&gt;:echo color_name&lt;/code&gt; 来查看当前可用的所有颜色主题）：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;ColorScheme&lt;/span&gt; lucius &lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;StatusLine&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;darkgray&lt;/span&gt; cterm&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;NONE&lt;/span&gt; guibg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;darkgray&lt;/span&gt; &lt;span class="pl-c1"&gt;gui&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;NONE&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-命令" class="anchor" aria-hidden="true" href="#命令"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;命令&lt;/h2&gt;
&lt;p&gt;下面的命令都比较有用，最好了解一下。用 &lt;code&gt;:h :&amp;lt;command name&amp;gt;&lt;/code&gt; 来了解更多关于它们的信息，如：&lt;code&gt;:h :global&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-global-和-vglobal---在所有匹配行执行命令" class="anchor" aria-hidden="true" href="#global-和-vglobal---在所有匹配行执行命令"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:global 和 :vglobal - 在所有匹配行执行命令&lt;/h3&gt;
&lt;p&gt;在所有符合条件的行上执行某个命令。如： &lt;code&gt;:global /regexp/ print&lt;/code&gt; 会在所有包含 "regexp" 的行上执行 &lt;code&gt;print&lt;/code&gt; 命令（译者注：regexp 有正则表达式的意思，该命令同样支持正则表达式，在所有符合正则表达式的行上执行指定的命令）。&lt;/p&gt;
&lt;p&gt;趣闻：你们可能都知道老牌的 grep 命令，一个由 Ken Thompson 编写的过滤程序。它是干什么用的呢？它会输出所有匹配指定正则表达式的行！现在猜一下 &lt;code&gt;:global /regexp/ print&lt;/code&gt; 的简写形式是什么？没错！就是 &lt;code&gt;:g/re/p&lt;/code&gt; 。 Ken Thompsom 在编写 grep 程序的时候是受了 vi &lt;code&gt;:global&lt;/code&gt; 的启发。（译者注： &lt;a href="https://robots.thoughtbot.com/how-grep-got-its-name%EF%BC%89" rel="nofollow"&gt;https://robots.thoughtbot.com/how-grep-got-its-name）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;既然它的名字是 &lt;code&gt;:global&lt;/code&gt;，理应仅作用在所有行上，但是它也是可以带范围限制的。假设你想使用 &lt;code&gt;:delete&lt;/code&gt; 命令删除从当前行到下一个空行（由正则表达式 &lt;code&gt;^$&lt;/code&gt; 匹配）范围内所有包含 "foo" 的行：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:,&lt;span class="pl-sr"&gt;/^$/&lt;/span&gt;&lt;span class="pl-c1"&gt;g&lt;/span&gt;&lt;span class="pl-sr"&gt;/foo/&lt;/span&gt;&lt;span class="pl-c1"&gt;d&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果要在所有 &lt;em&gt;不&lt;/em&gt; 匹配的行上执行命令的话，可以使用 &lt;code&gt;:global!&lt;/code&gt; 或是它的别名 &lt;code&gt;:vglobal&lt;/code&gt; （ V 代表的是 inVerse ）。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-normal-和-execute---脚本梦之队" class="anchor" aria-hidden="true" href="#normal-和-execute---脚本梦之队"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:normal 和 :execute - 脚本梦之队&lt;/h3&gt;
&lt;p&gt;这两个命令经常在 Vim 的脚本里使用。&lt;/p&gt;
&lt;p&gt;借助于 &lt;code&gt;:normal&lt;/code&gt; 可以在命令行里进行普通模式的映射。如：&lt;code&gt;:normal! 4j&lt;/code&gt; 会令光标下移 4 行（由于加了"!"，所以不会使用自定义的映射 "j"）。&lt;/p&gt;
&lt;p&gt;需要注意的是 &lt;code&gt;:normal&lt;/code&gt; 同样可以使用范围数（译者注：参考 &lt;code&gt;:h range&lt;/code&gt; 和 &lt;code&gt;:h :normal-range&lt;/code&gt; 了解更多），故 &lt;code&gt;:%norm! Iabc&lt;/code&gt; 会在所有行前加上 "abc"。&lt;/p&gt;
&lt;p&gt;借助于 &lt;code&gt;:execute&lt;/code&gt; 可以将命令和表达式混合在一起使用。假设你正在编辑一个 C 语言的文件，想切换到它的头文件：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;execute&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;edit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fnamemodify&lt;/span&gt;(&lt;span class="pl-en"&gt;expand&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:r&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) . &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.h&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（译者注：头文件为与与源文件同名但是扩展名为 &lt;code&gt;.h&lt;/code&gt; 的文件。上面的命令中 expand 获得当前文件的名称，fnamemodify 获取不带扩展名的文件名，再连上 '.h' 就是头文件的文件名了，最后在使用 edit 命令打开这个头文件。）&lt;/p&gt;
&lt;p&gt;这两个命令经常一起使用。假设你想让光标下移 n 行：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;
:&lt;span class="pl-c1"&gt;execute&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;normal!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;n&lt;/span&gt; . &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;j&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-重定向消息" class="anchor" aria-hidden="true" href="#重定向消息"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重定向消息&lt;/h3&gt;
&lt;p&gt;许多命令都会输出消息，&lt;code&gt;:redir&lt;/code&gt; 用来重定向这些消息。它可以将消息输出到文件、&lt;a href="#%E5%AF%84%E5%AD%98%E5%99%A8"&gt;寄存器&lt;/a&gt;或是某个变量中。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; 将消息重定向到变量 `neatvar` 中&lt;/span&gt;
:&lt;span class="pl-c1"&gt;redir&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&amp;gt; neatvar
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; 打印所有寄存器的内容&lt;/span&gt;
:&lt;span class="pl-c1"&gt;reg&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; 结束重定向&lt;/span&gt;
:&lt;span class="pl-c1"&gt;redir&lt;/span&gt; END
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; 输出变量&lt;/span&gt;
:&lt;span class="pl-c1"&gt;echo&lt;/span&gt; neatvar
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; 恶搞一下，我们把它输出到当前缓冲区&lt;/span&gt;
:&lt;span class="pl-c1"&gt;put&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;neatvar&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再 Vim 8 中，可以更简单的方式即位：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:put =execute('reg')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;（译者注：原文最后一条命令是 &lt;code&gt;:put =nicevar&lt;/code&gt; 但是实际会报变量未定义的错误）
（实测 neovim/vim8 下没问题）&lt;/p&gt;
&lt;p&gt;帮助文档：&lt;code&gt;:h :redir&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-调试" class="anchor" aria-hidden="true" href="#调试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;调试&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-常规建议" class="anchor" aria-hidden="true" href="#常规建议"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;常规建议&lt;/h2&gt;
&lt;p&gt;如果你遇到了奇怪的行为，尝试用这个命令重现它：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim -u NONE -N
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样会在不引用 vimrc（默认设置）的情况下重启 vim，并且在 &lt;strong&gt;nocompatible&lt;/strong&gt; 模式下（使用 vim 默认设置而不是 vi 的）。（搜索 &lt;code&gt;:h --noplugin&lt;/code&gt; 命令了解更多启动加载方式）&lt;/p&gt;
&lt;p&gt;如果仍旧能够出现该错误，那么这极有可能是 vim 本身的 bug，请给 vim_dev 发送邮件反馈错误，多数情况下问题不会立刻解决，你还需要进一步研究&lt;/p&gt;
&lt;p&gt;许多插件经常会提供新的（默认的/自动的）操作。如果在保存的时候发生了，那么请用 &lt;code&gt;:verb au BufWritePost&lt;/code&gt; 命令检查潜在的问题&lt;/p&gt;
&lt;p&gt;如果你在使用一个插件管理工具，将插件行注释调，再进行调试。&lt;/p&gt;
&lt;p&gt;问题还没有解决？如果不是插件的问题，那么肯定是你的自定义的设置的问题，可能是你的 options 或 autocmd 等等。&lt;/p&gt;
&lt;p&gt;到了一行行代码检查的时候了，不断地排除缩小检查范围知道你找出错误，根据二分法的原理你不会花费太多时间的。&lt;/p&gt;
&lt;p&gt;在实践过程中，可能就是这样，把 &lt;code&gt;:finish&lt;/code&gt; 放在你的 &lt;strong&gt;vimrc&lt;/strong&gt; 文件中间，Vim 会跳过它之后的设置。如果问题还在，那么问题就出在&lt;code&gt;:finish&lt;/code&gt;之前的设置中，再把&lt;code&gt;:finish&lt;/code&gt;放到前一部分设置的中间位置。否则问题就出现在它后面的半部分设置，那么就把&lt;code&gt;:finish&lt;/code&gt;放到后半部分的中间位置。不断的重复即可找到。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-调整日志等级" class="anchor" aria-hidden="true" href="#调整日志等级"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;调整日志等级&lt;/h2&gt;
&lt;p&gt;Vim 现在正在使用的另一个比较有用的方法是增加 debug 信息输出详细等级。现在 Vim 支持 9 个等级，可以用&lt;code&gt;:h 'verbose'&lt;/code&gt;命令查看。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;e&lt;/span&gt; &lt;span class="pl-sr"&gt;/tmp/&lt;/span&gt;foo
:&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;verbose&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;
:&lt;span class="pl-c1"&gt;w&lt;/span&gt;
:&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;verbose&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这可以显示出所有引用的文件、没有变化的文件或者各种各样的作用于保存的插件。&lt;/p&gt;
&lt;p&gt;如果你只是想用简单的命令来提高等级，也是用 &lt;code&gt;:verbose&lt;/code&gt; ，放在其他命令之前，通过计数来指明等级，默认是 1.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;verb&lt;/span&gt; &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;verbose&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt;  verbose=1&lt;/span&gt;
:&lt;span class="pl-c1"&gt;10&lt;/span&gt;verb &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;verbose&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt;  verbose=10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通常用等级 1 来显示上次从哪里设置的选项&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;verb&lt;/span&gt; &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;ai&lt;/span&gt;?
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt;      Last set from ~/.vim/vimrc&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一般等级越高输出信息月详细。但是不要害怕，亦可以把输出导入到文件中：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;verbosefile&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-sr"&gt;/tmp/&lt;/span&gt;foo | &lt;span class="pl-c1"&gt;15&lt;/span&gt;verbose &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; | &lt;span class="pl-c1"&gt;vsplit&lt;/span&gt; &lt;span class="pl-sr"&gt;/tmp/&lt;/span&gt;foo&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你可以一开始的时候就打开 verbosity，用 &lt;code&gt;-V&lt;/code&gt; 选项，它默认设置调试等级为 10。 例如：&lt;code&gt;vim -V5&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-查看启动日志" class="anchor" aria-hidden="true" href="#查看启动日志"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;查看启动日志&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-查看运行时日志" class="anchor" aria-hidden="true" href="#查看运行时日志"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;查看运行时日志&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-vim-脚本调试" class="anchor" aria-hidden="true" href="#vim-脚本调试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim 脚本调试&lt;/h2&gt;
&lt;p&gt;如果你以前使用过命令行调试器的话，对于&lt;code&gt;:debug&lt;/code&gt;命令你很快就会感到熟悉。&lt;/p&gt;
&lt;p&gt;只需要在任何其他命令之前加上&lt;code&gt;:debug&lt;/code&gt;就会让你进入调试模式。也就是，被调试的 Vim 脚本会在第一行停止运行，同时该行会被显示出来。&lt;/p&gt;
&lt;p&gt;想了解可用的 6 个调试命令，可以查阅&lt;code&gt;:h &amp;gt;cont&lt;/code&gt;和阅读下面内容。需要指出的是，类似 gdb 和其他相似调试器，调试命令可以使用它们的简短形式：&lt;code&gt;c&lt;/code&gt;、 &lt;code&gt;q&lt;/code&gt;、&lt;code&gt;n&lt;/code&gt;、&lt;code&gt;s&lt;/code&gt;、 &lt;code&gt;i&lt;/code&gt;和 &lt;code&gt;f&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;除了上面的之外，你还可以自由地使用任何 Vim 的命令。比如，&lt;code&gt;:echo myvar&lt;/code&gt;，该命令会在当前的脚本代码位置和上下文上被执行。&lt;/p&gt;
&lt;p&gt;只需要简单使用&lt;code&gt;:debug 1&lt;/code&gt;，你就获得了&lt;a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop" rel="nofollow"&gt;REPL&lt;/a&gt;调试特性。&lt;/p&gt;
&lt;p&gt;当然，调试模式下是可以定义断点的，不然的话每一行都去单步调试就会十分痛苦。（断点之所以被叫做断点，是因为运行到它们的时候，运行就会停止下来。因此，你可以利用断点跳过自己不感兴趣的代码区域）。请查阅&lt;code&gt;:h :breakadd&lt;/code&gt;、 &lt;code&gt;:h :breakdel&lt;/code&gt;和 &lt;code&gt;:h :breaklist&lt;/code&gt;获取更多细节。&lt;/p&gt;
&lt;p&gt;假设你需要知道你每次在保存一个文件的时候有哪些代码在运行：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;au&lt;/span&gt; &lt;span class="pl-c1"&gt;BufWritePost&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; signify  BufWritePost&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt;     *         call sy#start()&lt;/span&gt;
:&lt;span class="pl-c1"&gt;breakadd&lt;/span&gt; func &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;start&lt;/span&gt;
:&lt;span class="pl-c1"&gt;w&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Breakpoint in "sy#start" line 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Entering Debug mode.  Type "cont" to continue.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; function sy#start&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; line 1: if g:signify_locked&lt;/span&gt;
&amp;gt;&lt;span class="pl-c1"&gt;s&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; function sy#start&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; line 3: endif&lt;/span&gt;
&amp;gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; function sy#start&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; line 5: let sy_path = resolve(expand('%:p'))&lt;/span&gt;
&amp;gt;&lt;span class="pl-c1"&gt;q&lt;/span&gt;
:&lt;span class="pl-c1"&gt;breakdel&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正如你所见，使用&lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt;命令会重复之前的调试命令，也就是在该例子中的&lt;code&gt;s&lt;/code&gt;命令。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:debug&lt;/code&gt;命令可以和&lt;a href="#verbosity"&gt;verbose&lt;/a&gt;选项一起使用。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-语法文件调试" class="anchor" aria-hidden="true" href="#语法文件调试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;语法文件调试&lt;/h2&gt;
&lt;p&gt;语法文件由于包含错误的或者复制的正则表达式，常常会使得 Vim 的运行较慢。如果 Vim 在编译的时候包含了&lt;code&gt;+profile&lt;/code&gt; &lt;a href="#what-kind-of-vim-am-i-running"&gt;feature&lt;/a&gt;特性，就可以给用户提供一个超级好用的&lt;code&gt;:syntime&lt;/code&gt;命令。&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;syntime&lt;/span&gt; &lt;span class="pl-c1"&gt;on&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; 多次敲击&amp;lt;c-l&amp;gt;来重绘窗口，这样的话就会使得相应的语法规则被重新应用一次&lt;/span&gt;
:&lt;span class="pl-c1"&gt;syntime&lt;/span&gt; &lt;span class="pl-c1"&gt;off&lt;/span&gt;
:&lt;span class="pl-c1"&gt;syntime&lt;/span&gt; &lt;span class="pl-c1"&gt;report&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果包含了很多的度量维度。比如，你可以通过结果知道哪些正则表达式耗时太久需要被优化；哪些正则表达式一直在别使用但重来没有一次成功匹配。&lt;/p&gt;
&lt;p&gt;请查阅&lt;code&gt;:h :syntime&lt;/code&gt;。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-杂项" class="anchor" aria-hidden="true" href="#杂项"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;杂项&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-附加资源" class="anchor" aria-hidden="true" href="#附加资源"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;附加资源&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;资源名称&lt;/th&gt;
&lt;th&gt;简介&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.moolenaar.net/habits.html" rel="nofollow"&gt;七个高效的文本编辑习惯&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;作者：Bram Moolenaar（即 Vim 的作者）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.moolenaar.net/habits_2007.pdf" rel="nofollow"&gt;七个高效的文本编辑习惯 2.0（PDF 版）&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;同上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.ibm.com/developerworks/views/linux/libraryview.jsp?sort_order=asc&amp;amp;sort_by=Title&amp;amp;search_by=scripting+the+vim+editor" rel="nofollow"&gt;IBM DeveloperWorks: 使用脚本编写 Vim 编辑器&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Vim 脚本编写五辑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://learnvimscriptthehardway.stevelosh.com" rel="nofollow"&gt;《漫漫 Vim 路》&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;使用魔抓定制 Vim 插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.amazon.com/Practical-Vim-Edit-Speed-Thought/dp/1680501275/" rel="nofollow"&gt;《 Vim 实践 (第 2 版)》&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;轻取 Vim 最佳书籍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://vimcasts.org/episodes/archive" rel="nofollow"&gt;Vimcasts.org&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Vim 录屏演示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.viemu.com/a-why-vi-vim.html" rel="nofollow"&gt;为什么是个脚本都用 vi？&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;常见误区释疑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://stackoverflow.com/a/1220118" rel="nofollow"&gt;你不爱 vi，所以你不懂 Vim &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;简明,扼要,准确的干货&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-vim-配置集合" class="anchor" aria-hidden="true" href="#vim-配置集合"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim 配置集合&lt;/h2&gt;
&lt;p&gt;目前，网上有很多流行 Vim 配置集合，对于 Vim 配置集合，个人认为有利有弊。
对于维护的比较好的配置，比如 &lt;a href="http://spacevim.org/cn/" rel="nofollow"&gt;SpaceVim&lt;/a&gt; 还是值得尝试的，可以节省很多自行配置的时间。
当然，网上还有很多其他很流行的配置，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wklken/k-vim"&gt;k-vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amix/vimrc"&gt;amix's vimrc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carlhuda/janus"&gt;janus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-常见问题" class="anchor" aria-hidden="true" href="#常见问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;常见问题&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-编辑小文件时很慢" class="anchor" aria-hidden="true" href="#编辑小文件时很慢"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;编辑小文件时很慢&lt;/h3&gt;
&lt;p&gt;有两个因素对性能影响非常大：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;过于复杂的 &lt;strong&gt;正则表达式&lt;/strong&gt; 。尤其是 Ruby 的语法文件，以前会造成性能下降。（见&lt;a href="#debugging-syntax-files"&gt;调试语法文件&lt;/a&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;屏幕重绘&lt;/strong&gt; 。有一些功能会强制重绘所有行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;典型肇事者&lt;/th&gt;
&lt;th&gt;原因&lt;/th&gt;
&lt;th&gt;解决方案&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set cursorline&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;会导致所有行重绘&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:set nocursorline&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set cursorcolumn&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;会导致所有行重绘&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:set nocursorcolumn&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set relativenumber&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;会导致所有行重绘&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:set norelativenumber&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set foldmethod=syntax&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;如果语法文件已经很慢了，这只会变得更慢&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:set foldmethod=manual&lt;/code&gt;，&lt;code&gt;:set foldmethod=marker&lt;/code&gt; 或者使用&lt;a href="https://github.com/Konfekt/FastFold"&gt;快速折叠&lt;/a&gt;插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:set synmaxcol=3000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;由于内部表示法，Vim 处理比较长的行时会有问题。让它高亮到 3000 列……&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:set synmaxcol=200&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;matchparen.vim&lt;/td&gt;
&lt;td&gt;Vim 默认加载的插件，用正则表达式查找配对的括号&lt;/td&gt;
&lt;td&gt;禁用插件：&lt;code&gt;:h matchparen&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：只有在你真正遇到性能问题的时候才需要做上面的调整。在大多数情况下使用上面提到的选项是完全没有问题的。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-编辑大文件的时候很慢" class="anchor" aria-hidden="true" href="#编辑大文件的时候很慢"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;编辑大文件的时候很慢&lt;/h3&gt;
&lt;p&gt;Vim 处理大文件最大的问题就是它会一次性读取整个文件。这么做是由于缓冲区的内部机理导致的（在 &lt;a href="https://groups.google.com/forum/#!topic/vim_dev/oY3i8rqYGD4/discussion" rel="nofollow"&gt;vim_dev&lt;/a&gt; 中讨论）。&lt;/p&gt;
&lt;p&gt;如果只是想查看的话，&lt;code&gt;tail hugefile | vim -&lt;/code&gt; 是一个不错的选择。&lt;/p&gt;
&lt;p&gt;如果你能接受没有语法高亮，并且禁用所有插件和设置的话，使用：&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ vim -u NONE -N&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这将会使得跳转变快很多，尤其是省去了基于很耗费资源的正则表达式的语法高亮。你还可以告诉 Vim 不要使用交换文件和 viminfo 文件，以避免由于写这些文件而造成的延时：&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ vim -n -u NONE -i NONE -N&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;简而言之，尽量避免使用 Vim 写过大的文件。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-持续粘贴为什么我每次都要设置-paste-模式" class="anchor" aria-hidden="true" href="#持续粘贴为什么我每次都要设置-paste-模式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;持续粘贴（为什么我每次都要设置 'paste' 模式）&lt;/h3&gt;
&lt;p&gt;持续粘贴模式让终端模拟器可以区分输入内容与粘贴内容。&lt;/p&gt;
&lt;p&gt;你有没有遇到过往 Vim 里粘贴代码之后被搞的一团糟？&lt;/p&gt;
&lt;p&gt;这在你使用 &lt;code&gt;cmd+v&lt;/code&gt;、&lt;code&gt;shirt-insert&lt;/code&gt;、&lt;code&gt;middle-click&lt;/code&gt; 等进行粘贴的时候才会发生。
因为那样的话你只是向终端模拟器扔了一大堆的文本。
Vim 并不知道你刚刚是粘贴的文本，它以为你在飞速的输入。
于是它想缩进这些行但是失败了。&lt;/p&gt;
&lt;p&gt;这明显不是个问题，如果你用 Vim 的寄存器粘贴，如：&lt;code&gt;"+p&lt;/code&gt; ，这时 Vim 就知道了你在粘贴，就不会导致格式错乱了。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;:set paste&lt;/code&gt; 就可以解决这个问题正常进行粘贴。见 &lt;code&gt;:h 'paste'&lt;/code&gt; 和 &lt;code&gt;:h 'pastetoggle'&lt;/code&gt; 获取更多信息。&lt;/p&gt;
&lt;p&gt;如果你受够了每次都要设置 &lt;code&gt;'paste'&lt;/code&gt; 的话，看看这个能帮你自动设置的插件：&lt;a href="https://github.com/ConradIrwin/vim-bracketed-paste"&gt;bracketed-paste&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cirw.in/blog/bracketed-paste" rel="nofollow"&gt;点此&lt;/a&gt;查看该作者对于这个插件的更多描述。&lt;/p&gt;
&lt;p&gt;Neovim 尝试把这些变得更顺畅，如果终端支持的话，它会自动开启持续粘贴模式，无须再手动进行切换。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-在终端中按-esc-后有延时" class="anchor" aria-hidden="true" href="#在终端中按-esc-后有延时"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;在终端中按 ESC 后有延时&lt;/h3&gt;
&lt;p&gt;如果你经常使用命令行，那么肯定要接触 &lt;em&gt;终端模拟器&lt;/em&gt; ，如 xterm、gnome-terminal、iTerm2 等等（与实际的&lt;a href="https://en.wikipedia.org/wiki/Computer_terminal" rel="nofollow"&gt;终端&lt;/a&gt;不同）。&lt;/p&gt;
&lt;p&gt;终端模拟器与他们的祖辈一样，使用 &lt;a href="https://zh.wikipedia.org/wiki/%E8%BD%AC%E4%B9%89%E5%BA%8F%E5%88%97" rel="nofollow"&gt;转义序列&lt;/a&gt; （也叫 &lt;em&gt;控制序列&lt;/em&gt; ）来控制光标移动、改变文本颜色等。转义序列就是以转义字符开头的 ASCII 字符串（用&lt;a href="https://zh.wikipedia.org/wiki/%E8%84%B1%E5%AD%97%E7%AC%A6%E8%A1%A8%E7%A4%BA%E6%B3%95" rel="nofollow"&gt;脱字符表示法&lt;/a&gt;表示成 &lt;code&gt;^[&lt;/code&gt; ）。当遇到这样的字符串后，终端模拟器会从&lt;a href="https://en.wikipedia.org/wiki/Terminfo" rel="nofollow"&gt;终端信息&lt;/a&gt;数据库中查找对应的动作。&lt;/p&gt;
&lt;p&gt;为了使用问题更加清晰，我会先来解释一下什么是映射超时。在映射存在歧义的时候就会产生映射超时：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; ,&lt;span class="pl-c1"&gt;a&lt;/span&gt; :&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;
:&lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; ,&lt;span class="pl-c1"&gt;ab&lt;/span&gt; :&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面的例子中两个映射都能正常工作，但是当输入 &lt;code&gt;,a&lt;/code&gt; 之后，Vim 会延时 1 秒，因为它要确认用户是否还要输入那个 &lt;code&gt;b&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;转义序列会产生同样的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;esc&amp;gt;&lt;/code&gt; 作为返回普通模式或取消某个动作的按键而被大量使用&lt;/li&gt;
&lt;li&gt;光标键使用转义序列进行的编码&lt;/li&gt;
&lt;li&gt;Vim 期望 &lt;kbd&gt;Alt&lt;/kbd&gt; （也叫作 &lt;em&gt;Mate Key&lt;/em&gt; ）会发送一个正确的 8-bit 编码的高位，但是许多终端模拟器并不支持这个（也可能默认没有启用），而只是发送一个转义序列作为代替。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你可以这样测试上面所提到的事情： &lt;code&gt;vim -u NONE -N&lt;/code&gt; 然后输入 &lt;code&gt;i&amp;lt;c-v&amp;gt;&amp;lt;left&amp;gt;&lt;/code&gt; ，你会看到一个以 &lt;code&gt;^[&lt;/code&gt; 开头的字符串，表明这是一个转义序列，&lt;code&gt;^[&lt;/code&gt; 就是转义字符。&lt;/p&gt;
&lt;p&gt;简而言之，Vim 在区分录入的 &lt;code&gt;&amp;lt;esc&amp;gt;&lt;/code&gt; 和转义序列的时候需要一定的时间。&lt;/p&gt;
&lt;p&gt;默认情况下，Vim 用 &lt;code&gt;:set timeout timeoutlen=1000&lt;/code&gt;，就是说它会用 1 秒的时间来区分有歧义的映射 &lt;em&gt;以及&lt;/em&gt; 按键编码。这对于映射来说是一个比较合理的值，但是你可以自行定义按键延时的长短，这是解决该问题最根本的办法：&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;timeout&lt;/span&gt;&lt;span class="pl-c"&gt;           &lt;span class="pl-c"&gt;"&lt;/span&gt; for mappings&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;timeoutlen&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;"&lt;/span&gt; default value&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;ttimeout&lt;/span&gt;&lt;span class="pl-c"&gt;          &lt;span class="pl-c"&gt;"&lt;/span&gt; for key codes&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;ttimeoutlen&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;&lt;span class="pl-c"&gt;    &lt;span class="pl-c"&gt;"&lt;/span&gt; unnoticeable small value&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在 &lt;code&gt;:h ttimeout&lt;/code&gt; 里你可以找到一个关于这些选项之间关系的小表格。&lt;/p&gt;
&lt;p&gt;而如果你在 tmux 中使用 Vim 的话，别忘了把下面的配置加入到你的 &lt;code&gt;~/.tmux.conf&lt;/code&gt;文件中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set -sg escape-time 0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-无法重复函数中执行的搜索" class="anchor" aria-hidden="true" href="#无法重复函数中执行的搜索"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;无法重复函数中执行的搜索&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在命令中的搜索（&lt;code&gt;/&lt;/code&gt;、&lt;code&gt;:substitute&lt;/code&gt; 等）内容会改变“上次使用的搜索内容”。（它保存在&lt;code&gt;/&lt;/code&gt;寄存器中，用 &lt;code&gt;:echo @/&lt;/code&gt; 可以输出它里面的内容）&lt;/li&gt;
&lt;li&gt;简单的文本变化可以通过 &lt;code&gt;.&lt;/code&gt; 重做。（它保存在 &lt;code&gt;.&lt;/code&gt; 寄存器，用 &lt;code&gt;:echo @.&lt;/code&gt; 可以输出它的内容）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而在你在函数中进行这些操作的时候，一切就会变得不同。因此你不能用 N/n 查找某个函数刚刚查找的内容，也不能重做函数中对文本的修改。&lt;/p&gt;
&lt;p&gt;帮助文档：&lt;code&gt;:h function-search-undo&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-进阶阅读" class="anchor" aria-hidden="true" href="#进阶阅读"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;进阶阅读&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wsdjeg/vim-plugin-dev-guide"&gt;Vim 插件开发指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="PLUGINS.md"&gt;常用插件列表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-加入我们" class="anchor" aria-hidden="true" href="#加入我们"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;加入我们&lt;/h2&gt;
&lt;p&gt;可以协助我们核对翻译，或者从&lt;a href="CONTRIBUTING.md"&gt;章节列表&lt;/a&gt;中认领章节进行翻译。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-参考资料" class="anchor" aria-hidden="true" href="#参考资料"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/" rel="nofollow"&gt;Nifty Little Nvim Techniques to Make My Life Easier -- Series 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>wsdjeg</author><guid isPermaLink="false">https://github.com/wsdjeg/vim-galore-zh_cn</guid><pubDate>Sat, 02 Nov 2019 00:00:00 GMT</pubDate></item></channel></rss>