<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Vim script, Today</title><link>https://github.com/trending/vim-script?since=daily</link><description>The top repositories on GitHub for vim-script, measured daily</description><pubDate>Sat, 01 Feb 2020 01:11:28 GMT</pubDate><lastBuildDate>Sat, 01 Feb 2020 01:11:28 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>yangyangwithgnu/use_vim_as_ide #1 in Vim script, Today</title><link>https://github.com/yangyangwithgnu/use_vim_as_ide</link><description>&lt;p&gt;&lt;i&gt;use vim as IDE&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content-所需即所获像-ide-一样使用-vim" class="anchor" aria-hidden="true" href="#所需即所获像-ide-一样使用-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;所需即所获：像 IDE 一样使用 vim&lt;/h1&gt;
yangyangwithgnu@yeah.net  
2016-03-30 16:39:33
&lt;p&gt;##【谢谢】&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;捐赠：支付宝 &lt;a href="mailto:yangyangwithgnu@yeah.net"&gt;yangyangwithgnu@yeah.net&lt;/a&gt; ，支付宝二维码（左），微信二维码（右）&lt;/strong&gt;&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/yangyangwithgnu/yangyangwithgnu.github.io/master/pics/alipay_donate_qr.png"&gt;&lt;img src="https://raw.githubusercontent.com/yangyangwithgnu/yangyangwithgnu.github.io/master/pics/alipay_donate_qr.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/yangyangwithgnu/yangyangwithgnu.github.io/master/pics/wechat_donate_qr.png"&gt;&lt;img src="https://raw.githubusercontent.com/yangyangwithgnu/yangyangwithgnu.github.io/master/pics/wechat_donate_qr.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;二手书&lt;/strong&gt;：书，我提高开发技能的重要手段之一，随着职业生涯的发展，书籍也在不断增多，对我而言，一本书最多读三遍，再往后，几乎没有什么营养吸收，这部分书对我已基本无用，但对其他人可能仍有价值，所以，为合理利用资源，我决定低价出售这些书，希望达到两个目的：0）用售出的钱购买更多新书（没当过雷锋的朋友 (๑´ڡ`๑)）；1）你低价购得需要的书（虽然二手）。到 &lt;a href="https://github.com/yangyangwithgnu/used_books"&gt;https://github.com/yangyangwithgnu/used_books&lt;/a&gt; 看看有无你钟意的。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-公告" class="anchor" aria-hidden="true" href="#公告"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;##【公告】&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;帮助：英译版编制。github.com 上搜索 vim ide 关键字后第一匹配项便是本文，洋人浏览到本文的次数非常多，常常收到要求同步发表英文版的邮件，但是，你知道，这 80+ 页的中文已经耗费我大量业余时间，所以，如果可能，希望有精力的朋友可以将其翻译为英文，感谢！&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;讨论&lt;/strong&gt;：任何意见建议移步 &lt;a href="http://www.v2ex.com/t/138696" rel="nofollow"&gt;http://www.v2ex.com/t/138696&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-版本" class="anchor" aria-hidden="true" href="#版本"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;##【版本】&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;v0.1.5，2016-03-30，新增/优化：0）采用 vundle 作为插件管理器，并统一采用各插件在 github.com 的地址；1）C++11/14 语法高亮插件从 STL-Syntax 换为 vim-cpp-enhanced-highlight，后者支持 STL 以及自行编写函数、容器、模版等的高亮；2）接口文件（MyClass.h）与实现文件（MyClass.cpp）快捷切换的插件，从 a.vim 换为 vim-fswitch；3）增加标签系统和语义系统的介绍；4）其他调整；&lt;/li&gt;
&lt;li&gt;v0.1.4，2016-02-16，优化：0）为规避快捷键前导字符重复导致操作等待的问题，优化光标快速移至行首/行尾的快捷键，优化结对符间快速移动的快捷键；1）增加代码折叠的环境恢复。&lt;/li&gt;
&lt;li&gt;v0.1.3，2015-11-08，新增：0）光标快速移至行首的快捷键 lh 与光标右移键 l 冲突，导致光标左移操作等待，现添加 &amp;lt;Leader&amp;gt; 规避该问题；1）中文输入状态导致命令模式无效，借助插件解决该问题。&lt;/li&gt;
&lt;li&gt;v0.1.2，2015-01-18，新增：0）重写“内容查找”，让匹配项具备上下文提醒能力；1）“快速输入结对符”扩充快速选中结对符内文本的相关知识；2）增加支持分支 undo 的介绍；3）增加持久化保存 undo 历史的介绍；4）全文结构调整，将“内容查找”和“内容替换”移至“4 代码分析”，将“快速输入结对符”更名为“快速编辑结对符”，并移至“8 其他辅助”。&lt;/li&gt;
&lt;li&gt;v0.1.1，2014-12-27，新增/修正：0）重写“代码收藏”章节，停用过时的 visual mark，启用用户体验更优的 vim-signature（@arcticlion，谢谢）；1）新增“基于语义的导航”章节，YCM 新增该项功能；2）调整“5.2 模板补全”章节结构，UltiSnips 不再提供预定义代码模板；3）protodef 插件更新，修复 protodef 生成成员函数实现的返回语句错误的问题；4）给出安装插件 vim-instant-markdown 的详细步骤。&lt;/li&gt;
&lt;li&gt;v0.1.0，2014-10-13，新增。发布初始版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-目录" class="anchor" aria-hidden="true" href="#目录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;##【目录】&lt;/h2&gt;
&lt;p&gt;&lt;a href="#0"&gt;0 vim 必知会 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#0.1"&gt;0.1 .vimrc 文件 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#0.2"&gt;0.2 .vim/ 目录 &lt;/a&gt;&lt;br&gt;
&lt;a href="#1"&gt;1 源码安装编辑器 vim &lt;/a&gt;&lt;br&gt;
&lt;a href="#2"&gt;2 插件管理 &lt;/a&gt;&lt;br&gt;
&lt;a href="#3"&gt;3 界面美化 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#3.1"&gt;3.1 主题风格 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#3.2"&gt;3.2 营造专注氛围 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#3.3"&gt;3.3 添加辅助信息 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#3.4"&gt;3.4 其他 &lt;/a&gt;&lt;br&gt;
&lt;a href="#4"&gt;4 代码分析 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#4.1"&gt;4.1 语法高亮 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#4.2"&gt;4.2 代码缩进 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#4.3"&gt;4.3 代码折叠 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#4.4"&gt;4.4 接口与实现快速切换 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#4.5"&gt;4.5 代码收藏 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#4.6"&gt;4.6 标识符列表 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#4.6.1"&gt;标签系统 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#4.6.2"&gt;语义系统 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#4.6.3"&gt;基于标签的标识符列表 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#4.7"&gt;4.7 声明/定义跳转 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#4.7.1"&gt;基于标签的声明/定义跳转 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#4.7.2"&gt;基于语义的声明/定义跳转 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#4.8"&gt;4.8 内容查找 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#4.9"&gt;4.9 内容替换 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#4.9.1"&gt;快捷替换 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#4.9.2"&gt;精确替换 &lt;/a&gt;&lt;br&gt;
&lt;a href="#5"&gt;5 代码开发 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#5.1"&gt;5.1 快速开关注释 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#5.2"&gt;5.2 模板补全 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#5.4"&gt;5.3 智能补全 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#5.3.1"&gt;基于标签的智能补全 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#5.3.2"&gt;基于语义的智能补全 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#5.4"&gt;5.4 由接口快速生成实现框架 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#5.5"&gt;5.5 库信息参考 &lt;/a&gt;&lt;br&gt;
&lt;a href="#6"&gt;6 工程管理 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#6.1"&gt;6.1 工程文件浏览 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#6.2"&gt;6.2 多文档编辑 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#6.3"&gt;6.3 环境恢复 &lt;/a&gt;&lt;br&gt;
&lt;a href="#7"&gt;7 工具链集成 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#7.1"&gt;7.1 构建工具集成 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#7.1.1"&gt;代码编译 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#7.1.2"&gt;系统构建 &lt;/a&gt;&lt;br&gt;
................&lt;a href="#7.1.3"&gt;一键编译 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#7.2"&gt;7.2 静态分析器集成 &lt;/a&gt;&lt;br&gt;
&lt;a href="#8"&gt;8 其他辅助 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#8.1"&gt;8.1 快速编辑结对符 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#8.2"&gt;8.2 支持分支的 undo &lt;/a&gt;&lt;br&gt;
........&lt;a href="#8.3"&gt;8.3 快速移动 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#8.4"&gt;8.4 markdown 即时预览 &lt;/a&gt;&lt;br&gt;
........&lt;a href="#8.5"&gt;8.5 中/英输入平滑切换 &lt;/a&gt;&lt;br&gt;
&lt;a href="#9"&gt;9 尾声&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-正文" class="anchor" aria-hidden="true" href="#正文"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;##【正文】&lt;/h2&gt;
&lt;p&gt;开始前，我假设你：0）具备基本的 vim 操作能力，清楚如何打开/编辑/保存文档、命令与插入模式间切换；1）希望将 vim 打造成 C/C++ 语言的 IDE，而非其他语言。&lt;/p&gt;
&lt;p&gt;关于 vim 的优点，你在网上能查到 128+ 项，对我而言，只有两项：0）所思即所得，让手输入的速度跟上大脑思考的速度，1）所需即所获，只有你想不到的功能、没有实现不了的插件。希望获得前者的能力，你需要两本教程深入学习，《Practical Vim: Edit Text at the Speed of Thought》和《vim user manual》；要想拥有后者的能力，通读本文 -。-#。对于 vim 的喜爱，献上湿哥哥以表景仰之情：&lt;/p&gt;
&lt;div align="center"&gt;
vi 之大道如我心之禅，&lt;br&gt;
  vi 之漫路即为禅修，&lt;br&gt; 
  vi 之命令禅印于心，&lt;br&gt;
 未得此道者视之怪诞，&lt;br&gt;
 与之为伴者洞其真谛，&lt;br&gt;
 长修此道者巨变人生。&lt;br&gt;
&lt;/div&gt;
&lt;div align="right"&gt;
作：reddy@lion.austin.com&lt;br&gt;
译：yangyangwithgnu@yeah.net&lt;br&gt;
&lt;/div&gt;&lt;br&gt;  
&lt;p&gt;言归正传，说说 vim 用于代码编写提供了哪些直接和间接功能支撑。vim 用户手册中，50％ 的例子都是在讲 vim 如何高效编写代码，由此可见，vim 是一款面向于程序员的编辑器，即使某些功能 vim 无法直接完成，借助其丰富的插件资源，必定可以达成目标，这就是所需即所获。&lt;/p&gt;
&lt;p&gt;我是个目标驱动的信奉者，本文内容，我会先给出优秀 C/C++ IDE 应具备哪些功能，再去探索如何通过 vim 的操作或插件来达到目标。最终至少要像这个样子：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%9B%BE%E5%BD%A2%E7%8E%AF%E5%A2%83%E4%B8%8B%20IDE%20%E6%80%BB%E6%8F%BD.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%9B%BE%E5%BD%A2%E7%8E%AF%E5%A2%83%E4%B8%8B%20IDE%20%E6%80%BB%E6%8F%BD.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（图形环境下 IDE 总揽）
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E7%BA%AF%E5%AD%97%E7%AC%A6%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%80%BB%E8%A7%88.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E7%BA%AF%E5%AD%97%E7%AC%A6%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%80%BB%E8%A7%88.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（纯字符模式下 IDE 总揽）
&lt;/div&gt;
&lt;h2 name="user-content-0"&gt;&lt;a id="user-content-0-vim-必知会" class="anchor" aria-hidden="true" href="#0-vim-必知会"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0 vim 必知会&lt;/h2&gt;
&lt;p&gt;在正式开始前先介绍几个 vim 的必知会，这不是关于如何使用而是如何配置 vim 的要点，这对理解后续相关配置非常有帮助。&lt;/p&gt;
&lt;h3 name="user-content-0.1"&gt;&lt;a id="user-content-01-vimrc-文件" class="anchor" aria-hidden="true" href="#01-vimrc-文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0.1 .vimrc 文件&lt;/h3&gt;
&lt;p&gt;.vimrc 是控制 vim 行为的配置文件，位于 ~/.vimrc，不论 vim 窗口外观、显示字体，还是操作方式、快捷键、插件属性均可通过编辑该配置文件将 vim 调教成最适合你的编辑器。&lt;/p&gt;
&lt;p&gt;很多人之所以觉得 vim 难用，是因为 vim 缺少默认设置，甚至安装完后你连配置文件自身都找不到，不进行任何配置的 vim 的确难看、难用。不论用于代码还是普通文本编辑，有必要将如下基本配置加入 .vimrc 中。&lt;/p&gt;
&lt;p&gt;前缀键。各类 vim 插件帮助文档中经常出现 &amp;lt;leader&amp;gt;，即，前缀键。vim 自带有很多快捷键，再加上各类插件的快捷键，大量快捷键出现在单层空间中难免引起冲突，为缓解该问题，引入了前缀键 &amp;lt;leader&amp;gt;，这样，键 r 可以配置成 r、&amp;lt;leader&amp;gt;r、&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;r 等等多个快捷键。前缀键是 vim 使用率较高的一个键（最高的当属 Esc），选一个最方便输入的键作为前缀键，将有助于提高编辑效率。找个无须眼睛查找、无须移动手指的键 —— 分号键，挺方便的，就在你右手小指处：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 定义快捷键的前缀，即&amp;lt;Leader&amp;gt;
let mapleader=";"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;既然前缀键是为快捷键服务的，那随便说下快捷键设定原则：不同快捷键尽量不要有同序的相同字符。比如，&amp;lt;leader&amp;gt;e 执行操作 0 和 &amp;lt;leader&amp;gt;eb 执行操作 1，在你键入 &amp;lt;leader&amp;gt;e 后，vim 不会立即执行操作 0，而是继续等待用户键入 b，即便你只想键入 &amp;lt;leader&amp;gt;e，vim 也不得不花时间等待输入以确认是哪个快捷键，显然，这让 &amp;lt;leader&amp;gt;e 响应速度变慢。&amp;lt;leader&amp;gt;ea 和 &amp;lt;leader&amp;gt;eb 就没问题。&lt;/p&gt;
&lt;p&gt;文件类型侦测。允许基于不同语言加载不同插件（如，C++ 的语法高亮插件与 python 的不同）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 开启文件类型侦测
filetype on
" 根据侦测到的不同类型加载对应的插件
filetype plugin on
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;快捷键。把 vim（非插件）常用操作设定成快捷键，提升效率：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 定义快捷键到行首和行尾
nmap LB 0
nmap LE $
" 设置快捷键将选中文本块复制至系统剪贴板
vnoremap &amp;lt;Leader&amp;gt;y "+y
" 设置快捷键将系统剪贴板内容粘贴至 vim
nmap &amp;lt;Leader&amp;gt;p "+p
" 定义快捷键关闭当前分割窗口
nmap &amp;lt;Leader&amp;gt;q :q&amp;lt;CR&amp;gt;
" 定义快捷键保存当前窗口内容
nmap &amp;lt;Leader&amp;gt;w :w&amp;lt;CR&amp;gt;
" 定义快捷键保存所有窗口内容并退出 vim
nmap &amp;lt;Leader&amp;gt;WQ :wa&amp;lt;CR&amp;gt;:q&amp;lt;CR&amp;gt;
" 不做任何保存，直接退出 vim
nmap &amp;lt;Leader&amp;gt;Q :qa!&amp;lt;CR&amp;gt;
" 依次遍历子窗口
nnoremap nw &amp;lt;C-W&amp;gt;&amp;lt;C-W&amp;gt;
" 跳转至右方的窗口
nnoremap &amp;lt;Leader&amp;gt;lw &amp;lt;C-W&amp;gt;l
" 跳转至左方的窗口
nnoremap &amp;lt;Leader&amp;gt;hw &amp;lt;C-W&amp;gt;h
" 跳转至上方的子窗口
nnoremap &amp;lt;Leader&amp;gt;kw &amp;lt;C-W&amp;gt;k
" 跳转至下方的子窗口
nnoremap &amp;lt;Leader&amp;gt;jw &amp;lt;C-W&amp;gt;j
" 定义快捷键在结对符之间跳转
nmap &amp;lt;Leader&amp;gt;M %
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;立即生效。全文频繁变更 .vimrc，要让变更内容生效，一般的做法是先保存 .vimrc 再重启 vim，太繁琐了，增加如下设置，可以实现保存 .vimrc 时自动重启加载它：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 让配置变更立即生效
autocmd BufWritePost $MYVIMRC source $MYVIMRC
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;比如，我可以随时切换配色方案：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E9%85%8D%E7%BD%AE%E5%8F%98%E6%9B%B4%E7%AB%8B%E5%8D%B3%E7%94%9F%E6%95%88.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E9%85%8D%E7%BD%AE%E5%8F%98%E6%9B%B4%E7%AB%8B%E5%8D%B3%E7%94%9F%E6%95%88.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（配置变更立即生效）
&lt;/div&gt;
&lt;p&gt;其他。搜索、vim 命令补全等设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 开启实时搜索功能
set incsearch
" 搜索时大小写不敏感
set ignorecase
" 关闭兼容模式
set nocompatible
" vim 自身命令行模式智能补全
set wildmenu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上的四类配置不仅影响 vim，而且影响插件是否能正常运行。很多插件不仅要在 .vimrc 中添加各自特有的配置信息，还要增加 vim 自身的配置信息，在后文的各类插件介绍中，我只介绍对应插件特有配置信息，当你发现按文中介绍操作后插件未生效，很可能是 vim 自身配置信息未添加，所以一定要把上述配置拷贝至到你的 .vimrc 中，再对照本文介绍一步步操作。.vimrc 完整配置信息参见附录，每个配置项都有对应注释。另外，由于有些插件还未来得及安装，在你实验前面的插件是否生效时，vim 可能有报错信息提示，先别理会，安装完所有插件后自然对了。&lt;/p&gt;
&lt;h3 name="user-content-0.2"&gt;&lt;a id="user-content-02-vim-目录" class="anchor" aria-hidden="true" href="#02-vim-目录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0.2 .vim/ 目录&lt;/h3&gt;
&lt;p&gt;.vim/ 目录是存放所有插件的地方。vim 有一套自己的脚本语言 vimscript，通过这种脚本语言可以实现与 vim 交互，达到功能扩展的目的。一组 vimscript 就是一个 vim 插件，vim 的很多功能都由各式插件实现。此外，vim 还支持 perl、python、lua、ruby 等主流脚本语言编写的插件，前提是 vim 源码编译时增加 ---enable-perlinterp、--enable-pythoninterp、--enable-luainterp、--enable-rubyinterp 等选项。vim.org 和 github.com 有丰富的插件资源，任何你想得到的功能，如果 vim 无法直接支持，那一般都有对应的插件为你服务，有需求时可以去逛逛。&lt;/p&gt;
&lt;p&gt;vim 插件目前分为 *.vim 和 *.vba 两类，前者是传统格式的插件，实际上就是一个文本文件，通常 someplugin.vim（插件脚本）与 someplugin.txt（插件帮助文件）并存在一个打包文件中，解包后将 someplugin.vim 拷贝到 ~/.vim/plugin/ 目录，someplugin.txt 拷贝到 ~/.vim/doc/ 目录即可完成安装，重启 vim 后刚安装的插件就已经生效，但帮助文件需执行 :helptags ~/.vim/doc/ 才能生效，可通过 :h someplugin 查看插件帮助信息。传统格式插件需要解包和两次拷贝才能完成安装，相对较繁琐，所以后来又出现了 *.vba 格式插件，安装便捷，只需在 shell 中依次执行如下命令即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim someplugin.vba
:so %
:q
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不论是直接拷贝插件到目录，还是通过 *.vba 安装，都不便于插件卸载、升级，后来又出现了管理插件的插件 vundle。&lt;/p&gt;
&lt;p&gt;后面就正式开始了喽，文中前后内容顺序敏感，请依次查阅。&lt;/p&gt;
&lt;h2 name="user-content-1"&gt;&lt;a id="user-content-1-源码安装编辑器-vim" class="anchor" aria-hidden="true" href="#1-源码安装编辑器-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 源码安装编辑器 vim&lt;/h2&gt;
&lt;p&gt;发行套件的软件源中预编译的 vim 要么不是最新版本，要么功能有阉割，有必要升级成全功能的最新版，当然，源码安装必须滴：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:vim/vim.git
cd vim/
./configure --with-features=huge --enable-pythoninterp --enable-rubyinterp --enable-luainterp --enable-perlinterp --with-python-config-dir=/usr/lib/python2.7/config/ --enable-gui=gtk2 --enable-cscope --prefix=/usr
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中，--enable-pythoninterp、--enable-rubyinterp、--enable-perlinterp、--enable-luainterp 等分别表示支持 ruby、python、perl、lua 编写的插件，--enable-gui=gtk2 表示生成采用 GNOME2 风格的 gvim，--enable-cscope 支持 cscope，--with-python-config-dir=/usr/lib/python2.7/config/ 指定 python 路径（先自行安装 python 的头文件 python-devel），这几个特性非常重要，影响后面各类插件的使用。注意，你得预先安装相关依赖库的头文件，python-devel、python3-devel、ruby-devel、lua-devel、libX11-devel、gtk-devel、gtk2-devel、gtk3-devel、ncurses-devel，如果缺失，源码构建过程虽不会报错，但最终生成的 vim 很可能缺失某些功能。构建完成后在 vim 中执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:echo has('python')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;若输出 1 则表示构建出的 vim 已支持 python，反之，0 则不支持。&lt;/p&gt;
&lt;h2 name="user-content-2"&gt;&lt;a id="user-content-2-插件管理" class="anchor" aria-hidden="true" href="#2-插件管理"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 插件管理&lt;/h2&gt;
&lt;p&gt;既然本文主旨在于讲解如何通过插件将 vim 打造成中意的 C/C++ IDE，那么高效管理插件是首要解决的问题。&lt;/p&gt;
&lt;p&gt;vim 自身希望通过在 .vim/ 目录中预定义子目录管理所有插件（比如，子目录 doc/ 存放插件帮助文档、plugin/ 存放通用插件脚本），vim 的各插件打包文档中通常也包含上述两个（甚至更多）子目录，用户将插件打包文档中的对应子目录拷贝至 .vim/ 目录即可完成插件的安装。一般情况下这种方式没问题，但我等重度插件用户，.vim/ 将变得混乱不堪，至少存在如下几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插件名字冲突。所有插件的帮助文档都在 doc/ 子目录、插件脚本都在 plugin/ 子目录，同个名字空间下必然引发名字冲突；&lt;/li&gt;
&lt;li&gt;插件卸载易误。你需要先知道 doc/ 和 plugin/ 子目录下哪些文件是属于该插件的，再逐一删除，容易多删/漏删。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我希望每个插件在 .vim/ 下都有各自独立子目录，这样需要升级、卸载插件时，直接找到对应插件目录变更即可；另外，我希望所有插件清单能在某个配置文件中集中罗列，通过某种机制实现批量自动安装/更新/升级所有插件。vundle（&lt;a href="https://github.com/VundleVim/Vundle.vim"&gt;https://github.com/VundleVim/Vundle.vim&lt;/a&gt; ）为此而生，它让管理插件变得更清晰、智能。&lt;/p&gt;
&lt;p&gt;vundle 会接管 .vim/ 下的所有原生目录，所以先清空该目录，再通过如下命令安装 vundle：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来在 .vimrc 增加相关配置信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" vundle 环境设置
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
" vundle 管理的插件列表必须位于 vundle#begin() 和 vundle#end() 之间
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'tomasr/molokai'
Plugin 'vim-scripts/phd'
Plugin 'Lokaltog/vim-powerline'
Plugin 'octol/vim-cpp-enhanced-highlight'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'derekwyatt/vim-fswitch'
Plugin 'kshenoy/vim-signature'
Plugin 'vim-scripts/BOOKMARKS--Mark-and-Highlight-Full-Lines'
Plugin 'majutsushi/tagbar'
Plugin 'vim-scripts/indexer.tar.gz'
Plugin 'vim-scripts/DfrankUtil'
Plugin 'vim-scripts/vimprj'
Plugin 'dyng/ctrlsf.vim'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'scrooloose/nerdcommenter'
Plugin 'vim-scripts/DrawIt'
Plugin 'SirVer/ultisnips'
Plugin 'Valloric/YouCompleteMe'
Plugin 'derekwyatt/vim-protodef'
Plugin 'scrooloose/nerdtree'
Plugin 'fholgado/minibufexpl.vim'
Plugin 'gcmt/wildfire.vim'
Plugin 'sjl/gundo.vim'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'suan/vim-instant-markdown'
Plugin 'lilydjwg/fcitx.vim'
" 插件列表结束
call vundle#end()
filetype plugin indent on
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中，每项&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Plugin 'dyng/ctrlsf.vim'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对应一个插件（这与 go 语言管理不同代码库的机制类似），后续若有新增插件，只需追加至该列表中即可。vundle 支持源码托管在 &lt;a href="https://github.com/"&gt;https://github.com/&lt;/a&gt; 的插件，同时 vim 官网 &lt;a href="http://www.vim.org/" rel="nofollow"&gt;http://www.vim.org/&lt;/a&gt; 上的所有插件均在 &lt;a href="https://github.com/vim-scripts/"&gt;https://github.com/vim-scripts/&lt;/a&gt; 有镜像，所以，基本上主流插件都可以纳入 vundle 管理。具体而言，仍以 ctrlsf.vim 为例，它在 .vimrc 中配置信息为 dyng/ctrlsf.vim，vundle 很容易构造出其真实下载地址 &lt;a href="https://github.com/dyng/ctrlsf.vim.git"&gt;https://github.com/dyng/ctrlsf.vim.git&lt;/a&gt; ，然后借助 git 工具进行下载及安装。&lt;/p&gt;
&lt;p&gt;此后，需要安装插件，先找到其在 github.com 的地址，再将配置信息其加入 .vimrc 中的call vundle#begin() 和 call vundle#end() 之间，最后进入 vim 执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:PluginInstall
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;便可通知 vundle 自动安装该插件及其帮助文档。比如，我在 .vimrc 中添加了 4 个插件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Plugin 'VundleVim/Vundle.vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'Lokaltog/vim-powerline'
Plugin 'octol/vim-cpp-enhanced-highlight'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当前，.vim/ 为空，当我在 vim 中执行 :PluginInstall 时，整个自动安装过程便开始了：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/vundle%20%E6%89%B9%E9%87%8F%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/vundle%20%E6%89%B9%E9%87%8F%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（vundle 批量安装插件）
&lt;/div&gt;
要卸载插件，先在 .vimrc 中注释或者删除对应插件配置信息，然后在 vim 中执行
&lt;pre&gt;&lt;code&gt;:PluginClean
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;即可删除对应插件。插件更新频率较高，差不多每隔一个月你应该看看哪些插件有推出新版本，批量更新，只需执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:PluginUpdate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;即可。&lt;/p&gt;
&lt;p&gt;你得注意插件的下载源。同名插件在 github.com 上可能有多个，比如，indexer 插件，至少就有 &lt;a href="https://github.com/vim-scripts/indexer.tar.gz"&gt;https://github.com/vim-scripts/indexer.tar.gz&lt;/a&gt; 、&lt;a href="https://github.com/everzet/vim-indexer"&gt;https://github.com/everzet/vim-indexer&lt;/a&gt; 、&lt;a href="https://github.com/shemerey/vim-indexer"&gt;https://github.com/shemerey/vim-indexer&lt;/a&gt; 等三个，到底应该选哪个呢？以我的经验来看，对于钟意的插件，我会先找其作者的个人网站，上面通常会罗列出托管在 github.com 的具体地址；若没有，我会找该插件在 vim.org 的页面，上面也会有 github.com 托管地址；若还是没有，再以 github 和插件名作为关键字搜索，点赞数多的，通常是你想找的。为节约你找插件地址的时间，本文中出现的每个插件我都会附上其地址。非特殊情况，后文介绍到的插件不再累述如何安装。&lt;/p&gt;
&lt;p&gt;通过 vundle 管理插件后，切勿通过发行套件自带的软件管理工具安装任何插件，不然 .vim/ 又要混乱了。&lt;/p&gt;
&lt;h2 name="user-content-3"&gt;&lt;a id="user-content-3-界面美化" class="anchor" aria-hidden="true" href="#3-界面美化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 界面美化&lt;/h2&gt;
&lt;p&gt;玉不琢不成器，vim 不配不算美。刚安装好的 vim 朴素得吓人，这是与我同时代的软件么？&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E9%BB%98%E8%AE%A4%20vim%20%E7%95%8C%E9%9D%A2.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E9%BB%98%E8%AE%A4%20vim%20%E7%95%8C%E9%9D%A2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（默认 vim 界面）
&lt;/div&gt;
就我的审美观而言，至少有几个问题：语法高亮太单薄、主题风格太简陋、窗口元素太冗余、辅助信息太欠缺。
&lt;h3 name="user-content-3.1"&gt;&lt;a id="user-content-31-主题风格" class="anchor" aria-hidden="true" href="#31-主题风格"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.1 主题风格&lt;/h3&gt;
&lt;p&gt;一套好的配色方案绝对会影响你的编码效率，vim 内置了 10 多种配色方案供你选择，GUI 下，可以通过菜单（Edit -&amp;gt; Color Scheme）试用不同方案，字符模式下，需要你手工调整配置信息，再重启 vim 查看效果（csExplorer 插件，可在字符模式下不用重启即可查看效果）。不满意，可以去 &lt;a href="http://vimcolorschemetest.googlecode.com/svn/html/index-c.html" rel="nofollow"&gt;http://vimcolorschemetest.googlecode.com/svn/html/index-c.html&lt;/a&gt; 慢慢选。我自认为“阅美无数”，目前最夯三甲：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;素雅 solarized（&lt;a href="https://github.com/altercation/vim-colors-solarized"&gt;https://github.com/altercation/vim-colors-solarized&lt;/a&gt; ）&lt;/li&gt;
&lt;li&gt;多彩 molokai（&lt;a href="https://github.com/tomasr/molokai"&gt;https://github.com/tomasr/molokai&lt;/a&gt; ）&lt;/li&gt;
&lt;li&gt;复古 phd（&lt;a href="http://www.vim.org/scripts/script.php?script_id=3139" rel="nofollow"&gt;http://www.vim.org/scripts/script.php?script_id=3139&lt;/a&gt; ）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 .vimrc 中选用某个主题：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 配色方案
set background=dark
colorscheme solarized
"colorscheme molokai
"colorscheme phd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中，不同主题都有暗/亮色系之分，这样三种主题六种风格，久不久换一换，给你不一样的心情：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/solarized%20%E4%B8%BB%E9%A2%98%E9%A3%8E%E6%A0%BC.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/solarized%20%E4%B8%BB%E9%A2%98%E9%A3%8E%E6%A0%BC.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（solarized 主题风格）
&lt;/div&gt;
&lt;h3 name="user-content-3.2"&gt;&lt;a id="user-content-32-营造专注氛围" class="anchor" aria-hidden="true" href="#32-营造专注氛围"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.2 营造专注氛围&lt;/h3&gt;
&lt;p&gt;如今的 UX 设计讲究的是内容至上，从 GNOME3 的变化就能看出。编辑器界面展示的应全是代码，不应该有工具条、菜单、滚动条浪费空间的元素，另外，编程是种精神高度集中的脑力劳动，不应出现闪烁光标、花哨鼠标这些分散注意力的东东。配置如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 禁止光标闪烁
set gcr=a:block-blinkon0
" 禁止显示滚动条
set guioptions-=l
set guioptions-=L
set guioptions-=r
set guioptions-=R
" 禁止显示菜单和工具条
set guioptions-=m
set guioptions-=T
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启 vim 后效果如下：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%8E%BB%E9%99%A4%E5%86%97%E4%BD%99%E7%AA%97%E5%8F%A3%E5%85%83%E7%B4%A0.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%8E%BB%E9%99%A4%E5%86%97%E4%BD%99%E7%AA%97%E5%8F%A3%E5%85%83%E7%B4%A0.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（去除冗余窗口元素）
&lt;/div&gt;
&lt;p&gt;还容易分神？好吧，我们把 vim 弄成全屏模式。vim 自身无法实现全屏，必须借助第三方工具 wmctrl，一个控制窗口 XYZ 坐标、窗口尺寸的命令行工具。先自行安装 wmctrl，再在 .vimrc 中增加如下信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 将外部命令 wmctrl 控制窗口最大化的命令行参数封装成一个 vim 的函数
fun! ToggleFullscreen()
	call system("wmctrl -ir " . v:windowid . " -b toggle,fullscreen")
endf
" 全屏开/关快捷键
map &amp;lt;silent&amp;gt; &amp;lt;F11&amp;gt; :call ToggleFullscreen()&amp;lt;CR&amp;gt;
" 启动 vim 时自动全屏
autocmd VimEnter * call ToggleFullscreen()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上面是一段简单的 vimscript 脚本，外部命令 wmctrl 及其命令行参数控制将指定窗口 windowid（即，vim）全屏，绑定快捷键 F11 实现全屏/窗口模式切换（linux 下各 GUI 软件约定使用 F11 全屏，最好遵守约定），最后配置启动时自动全屏。&lt;/p&gt;
&lt;h3 name="user-content-3.3"&gt;&lt;a id="user-content-33-添加辅助信息" class="anchor" aria-hidden="true" href="#33-添加辅助信息"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.3 添加辅助信息&lt;/h3&gt;
&lt;p&gt;去除了冗余元素让 vim 界面清爽多了，为那些实用辅助信息腾出了空间。光标当前位置、显示行号、高亮当前行/列等等都很有用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 总是显示状态栏
set laststatus=2
" 显示光标当前位置
set ruler
" 开启行号显示
set number
" 高亮显示当前行/列
set cursorline
set cursorcolumn
" 高亮显示搜索结果
set hlsearch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E6%B7%BB%E5%8A%A0%E8%BE%85%E5%8A%A9%E4%BF%A1%E6%81%AF.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E6%B7%BB%E5%8A%A0%E8%BE%85%E5%8A%A9%E4%BF%A1%E6%81%AF.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（添加辅助信息）
&lt;/div&gt;
&lt;h3 name="user-content-3.4"&gt;&lt;a id="user-content-34-其他美化" class="anchor" aria-hidden="true" href="#34-其他美化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.4 其他美化&lt;/h3&gt;
&lt;p&gt;默认字体不好看，挑个自己喜欢的，前提是你得先安装好该字体。中文字体，我喜欢饱满方正的（微软雅黑），英文字体喜欢圆润的（Consolas），vim 无法同时使用两种字体，怎么办？有人制作发布了一款中文字体用微软雅黑、英文字体用 Consolas 的混合字体 —— yahei consolas hybrid 字体，号称最适合中国程序员使用的字体，效果非常不错（本文全文采用该字体）。在 .vimrc 中设置下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 设置 gvim 显示字体
set guifont=YaHei\ Consolas\ Hybrid\ 11.5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中，由于字体名存在空格，需要用转义符“\”进行转义；最后的 11.5 用于指定字体大小。&lt;/p&gt;
&lt;p&gt;代码折行也不太美观，禁止掉：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 禁止折行
set nowrap
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;前面介绍的主题风格对状态栏不起作用，需要借助插件 Powerline（&lt;a href="https://github.com/Lokaltog/vim-powerline"&gt;https://github.com/Lokaltog/vim-powerline&lt;/a&gt; ）美化状态栏，在 .vimrc 中设定状态栏主题风格：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 设置状态栏主题风格
let g:Powerline_colorscheme='solarized256'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E7%95%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%9C%80%E7%BB%88%E6%95%88%E6%9E%9C.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E7%95%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%9C%80%E7%BB%88%E6%95%88%E6%9E%9C.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（界面美化最终效果）
&lt;/div&gt;
图中，中英文混合字体看着是不是很舒服哈；增强后的状态栏，不仅界面漂亮多了，而且多了好些辅助信息（所在函数名、文件编码格式、文件类型）。
&lt;h2 name="user-content-4"&gt;&lt;a id="user-content-4-代码分析" class="anchor" aria-hidden="true" href="#4-代码分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4 代码分析&lt;/h2&gt;
&lt;p&gt;阅读优秀开源项目源码是提高能力的重要手段，营造舒适、便利的阅读环境至关重要。&lt;/p&gt;
&lt;h3 name="user-content-4.1"&gt;&lt;a id="user-content-41-语法高亮" class="anchor" aria-hidden="true" href="#41-语法高亮"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.1 语法高亮&lt;/h3&gt;
&lt;p&gt;代码只有一种颜色的编辑器，就好像红绿灯只有一种颜色的路口，全然无指引。现在已是千禧年后的十年了，早已告别上世纪六、七十年代黑底白字的时代，即使在字符模式下编程（感谢伟大的 fbterm），我也需要语法高亮。所幸 vim 自身支持语法高亮，只需显式打开即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 开启语法高亮功能
syntax enable
" 允许用指定语法高亮配色方案替换默认方案
syntax on
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（语法高亮）
&lt;/div&gt;
上图中 STL 容器模板类 unordered\_multimap 并未高亮，对滴，vim 对 C++ 语法高亮支持不够好（特别是 C++11/14 新增元素），必须借由插件 vim-cpp-enhanced-highlight（&lt;a href="https://github.com/octol/vim-cpp-enhanced-highlight"&gt;https://github.com/octol/vim-cpp-enhanced-highlight&lt;/a&gt; ）进行增强。效果如下：
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%A2%9E%E5%BC%BA%20C%2B%2B11%20%E5%8F%8A%20STL%20%E7%9A%84%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%A2%9E%E5%BC%BA%20C%2B%2B11%20%E5%8F%8A%20STL%20%E7%9A%84%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（增强 C++11 及 STL 的语法高亮）
&lt;/div&gt;
vim-cpp-enhanced-highlight 主要通过 .vim/bundle/vim-cpp-enhanced-highlight/after/syntax/cpp.vim 控制高亮关键字及规则，所以，当你发现某个 STL 容器类型未高亮，那么将该类型追加进 cpp.vim 即可。如，initializer_list 默认并不会高亮，需要添加
&lt;pre&gt;&lt;code&gt;syntax keyword cppSTLtype initializer_list
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 name="user-content-4.2"&gt;&lt;a id="user-content-42-代码缩进" class="anchor" aria-hidden="true" href="#42-代码缩进"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.2 代码缩进&lt;/h3&gt;
&lt;p&gt;C/C++ 中的代码执行流由复合语句控制，如 if(){} 判断复合语句、for(){} 循环符号语句等等，这势必出现大量缩进。缩进虽然不影响语法正确性，但对提升代码清晰度有不可替代的功效。&lt;/p&gt;
&lt;p&gt;在 vim 中有两类缩进表示法，一类是用 1 个制表符（'\t'），一类是用多个空格（' '）。两者并无本质区别，只是源码文件存储的字符不同而已，但，缩进可视化插件对两类缩进显示方式不同，前者只能显示为粗块，后者可显示为细条，就我的审美观而言，选后者。增加如下配置信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 自适应不同语言的智能缩进
filetype indent on
" 将制表符扩展为空格
set expandtab
" 设置编辑时制表符占用空格数
set tabstop=4
" 设置格式化时制表符占用空格数
set shiftwidth=4
" 让 vim 把连续数量的空格视为一个制表符
set softtabstop=4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中，注意下 expandtab、tabstop 与 shiftwidth、softtabstop、retab：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;expandtab，把制表符转换为多个空格，具体空格数量参考 tabstop 和 shiftwidth 变量；&lt;/li&gt;
&lt;li&gt;tabstop 与 shiftwidth 是有区别的。tabstop 指定我们在插入模式下输入一个制表符占据的空格数量，linux 内核编码规范建议是 8，看个人需要；shiftwidth 指定在进行缩进格式化源码时制表符占据的空格数。所谓缩进格式化，指的是通过 vim 命令由 vim 自动对源码进行缩进处理，比如其他人的代码不满足你的缩进要求，你就可以对其进行缩进格式化。缩进格式化，需要先选中指定行，要么键入 = 让 vim 对该行进行智能缩进格式化，要么按需键入多次 &amp;lt; 或 &amp;gt; 手工缩进格式化；&lt;/li&gt;
&lt;li&gt;softtabstop，如何处理连续多个空格。因为 expandtab 已经把制表符转换为空格，当你要删除制表符时你得连续删除多个空格，该设置就是告诉 vim 把连续数量的空格视为一个制表符，即，只删一个字符即可。通常应将这tabstop、shiftwidth、softtabstop 三个变量设置为相同值；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，你总会阅读其他人的代码吧，他们对制表符定义规则与你不同，这时你可以手工执行 vim 的 retab 命令，让 vim 按上述规则重新处理制表符与空格关系。&lt;/p&gt;
&lt;p&gt;很多编码规范建议缩进（代码嵌套类似）最多不能超过 4 层，但难免有更多层的情况，缩进一多，我那个晕啊：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%A4%9A%E5%B1%82%E7%BC%A9%E8%BF%9B.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%A4%9A%E5%B1%82%E7%BC%A9%E8%BF%9B.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（多层缩进）
&lt;/div&gt;
&lt;p&gt;我希望有种可视化的方式能将相同缩进的代码关联起来，Indent Guides（&lt;a href="https://github.com/nathanaelkane/vim-indent-guides"&gt;https://github.com/nathanaelkane/vim-indent-guides&lt;/a&gt; ）来了。安装好该插件后，增加如下配置信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 随 vim 自启动
let g:indent_guides_enable_on_vim_startup=1
" 从第二层开始可视化显示缩进
let g:indent_guides_start_level=2
" 色块宽度
let g:indent_guides_guide_size=1
" 快捷键 i 开/关缩进可视化
:nmap &amp;lt;silent&amp;gt; &amp;lt;Leader&amp;gt;i &amp;lt;Plug&amp;gt;IndentGuidesToggle
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启 vim 效果如下：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E4%B8%8D%E8%BF%9E%E7%BB%AD%E7%9A%84%E7%BC%A9%E8%BF%9B%E5%8F%AF%E8%A7%86%E5%8C%96.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E4%B8%8D%E8%BF%9E%E7%BB%AD%E7%9A%84%E7%BC%A9%E8%BF%9B%E5%8F%AF%E8%A7%86%E5%8C%96.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（不连续的缩进可视化）
&lt;/div&gt;
断节？Indent Guides 通过识别制表符来绘制缩进连接线，断节处是空行，没有制表符，自然绘制不出来，算是个小 bug，但瑕不掩瑜，有个小技巧可以解决，换行-空格-退格：
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%AE%8C%E7%BE%8E%E5%8F%AF%E8%A7%86%E5%8C%96%E7%BC%A9%E8%BF%9B.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%AE%8C%E7%BE%8E%E5%8F%AF%E8%A7%86%E5%8C%96%E7%BC%A9%E8%BF%9B.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（完美可视化缩进）
&lt;/div&gt;
&lt;h3 name="user-content-4.3"&gt;&lt;a id="user-content-43-代码折叠" class="anchor" aria-hidden="true" href="#43-代码折叠"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.3 代码折叠&lt;/h3&gt;
&lt;p&gt;有时为了去除干扰，集中精力在某部分代码片段上，我会把不关注部分代码折叠起来。vim 自身支持多种折叠：手动建立折叠（manual）、基于缩进进行折叠（indent）、基于语法进行折叠（syntax）、未更改文本构成折叠（diff）等等，其中，indent、syntax 比较适合编程，按需选用。增加如下配置信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 基于缩进或语法进行代码折叠
"set foldmethod=indent
set foldmethod=syntax
" 启动 vim 时关闭折叠代码
set nofoldenable
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;操作：za，打开或关闭当前折叠；zM，关闭所有折叠；zR，打开所有折叠。效果如下：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E4%BB%A3%E7%A0%81%E6%8A%98%E5%8F%A0.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E4%BB%A3%E7%A0%81%E6%8A%98%E5%8F%A0.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（代码折叠）
&lt;/div&gt;
&lt;h3 name="user-content-4.4"&gt;&lt;a id="user-content-44-接口与实现快速切换" class="anchor" aria-hidden="true" href="#44-接口与实现快速切换"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.4 接口与实现快速切换&lt;/h3&gt;
&lt;p&gt;我习惯把类的接口和实现分在不同文件中，常有在接口文件（MyClass.h）和实现文件（MyClass.cpp）中来回切换的操作。你当然可以先分别打开接口文件和实现文件，再手动切换，但效率不高。我希望，假如在接口文件中，vim 自动帮我找到对应的实现文件，当键入快捷键，在新 buffer 中打开对应实现文件。&lt;/p&gt;
&lt;p&gt;vim-fswitch（&lt;a href="https://github.com/derekwyatt/vim-fswitch"&gt;https://github.com/derekwyatt/vim-fswitch&lt;/a&gt; ）来了。安装后增加配置信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" *.cpp 和 *.h 间切换
nmap &amp;lt;silent&amp;gt; &amp;lt;Leader&amp;gt;sw :FSHere&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样，键入 ;sw 就能在实现文件和接口文件间切换。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E6%8E%A5%E5%8F%A3%E6%96%87%E4%BB%B6%E4%B8%8E%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E5%88%87%E6%8D%A2.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E6%8E%A5%E5%8F%A3%E6%96%87%E4%BB%B6%E4%B8%8E%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E5%88%87%E6%8D%A2.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（接口文件与实现文件切换）
&lt;/div&gt;
上图中，初始状态先打开了接口文件 MyClass.h，键入 ;sw 后，vim 在新 buffer 中打开实现文件 MyClass.cpp，并在当前窗口中显示；再次键入 ;sw 后，当前窗口切回接口文件。
&lt;h3 name="user-content-4.5"&gt;&lt;a id="user-content-45-代码收藏" class="anchor" aria-hidden="true" href="#45-代码收藏"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.5 代码收藏&lt;/h3&gt;
&lt;p&gt;源码分析过程中，常常需要在不同代码间来回跳转，我需要“收藏”分散在不同处的代码行，以便需要查看时能快速跳转过去，这时，vim 的书签（mark）功能派上大用途了。&lt;/p&gt;
&lt;p&gt;vim 书签的使用很简单，在你需要收藏的代码行键入 mm，这样就收藏好了，你试试，没反应？不会吧，难道你 linux 内核编译参数有问题，或者，vim 的编译参数没给全，让我想想，别急，喔，对了，你是指看不到书签？好吧，我承认这是 vim 最大的坑，书签所在行与普通行外观上没任何差别，肉眼，你是找不到他滴。这可不行，得来个让书签可视化的插件，vim-signature（&lt;a href="https://github.com/kshenoy/vim-signature"&gt;https://github.com/kshenoy/vim-signature&lt;/a&gt; ）。vim-signature 通过在书签所在行的前面添加字符的形式，以此可视化书签，这就要求你源码安装的 vim 具备 signs 特性，具体可在 vim 命令模式下键入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:echo has('signs')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;若显示 1 则具备该特性，反之 0 则不具备该特性，需参考“1 源码安装编辑器 vim ”重新编译 vim。&lt;/p&gt;
&lt;p&gt;vim 的书签分为两类，独立书签和分类书签。独立书签，书签名只能由字母（a-zA-Z）组成，长度最多不超过 2 个字母，并且，同个文件中，不同独立书签名中不能含有相同字母，比如，a 和 bD 可以同时出现在同个文件在，而 Fc 和 c 则不行。分类书签，书签名只能由可打印特殊字符（!@#$%^&amp;amp;*()）组成，长度只能有 1 个字符，同个文件中，你可以把不同行设置成同名书签，这样，这些行在逻辑上就归类成相同类型的书签了。下图定义了名为 a 和 dF 两个独立书签（分别 259 行和 261 行）、名为 # 的一类分类书签（含 256 行和 264 行）、名为 @ 的一类分类书签（257 行），如下所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E7%8B%AC%E7%AB%8B%E4%B9%A6%E7%AD%BE%E5%92%8C%E5%88%86%E7%B1%BB%E4%B9%A6%E7%AD%BE.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E7%8B%AC%E7%AB%8B%E4%B9%A6%E7%AD%BE%E5%92%8C%E5%88%86%E7%B1%BB%E4%B9%A6%E7%AD%BE.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（独立书签和分类书签）
&lt;/div&gt;
&lt;p&gt;两种形式的书签完全分布在各自不同的空间中，所以，它俩的任何操作都是互不相同的，比如，你无法遍历所有书签，要么只能在各个独立书签间遍历，要么只能在分类书签间遍历。显然，两种形式的书签都有各自的使用场景，就我而言，只使用独立书签，原因有二：一是独立书签可保存，当我设置好独立书签后关闭文档，下次重新打开该文档时，先前的独立书签仍然有效，而分类书签没有该特性（其他文档环境恢复参见“6.3 环境恢复”）；一是减少记忆快捷键，光是独立书签就有 8 种遍历方式，每种遍历对应一种快捷键，太难记了。&lt;/p&gt;
&lt;p&gt;vim-signature 快捷键如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:SignatureMap = {
        \ 'Leader'             :  "m",
        \ 'PlaceNextMark'      :  "m,",
        \ 'ToggleMarkAtLine'   :  "m.",
        \ 'PurgeMarksAtLine'   :  "m-",
        \ 'DeleteMark'         :  "dm",
        \ 'PurgeMarks'         :  "mda",
        \ 'PurgeMarkers'       :  "m&amp;lt;BS&amp;gt;",
        \ 'GotoNextLineAlpha'  :  "']",
        \ 'GotoPrevLineAlpha'  :  "'[",
        \ 'GotoNextSpotAlpha'  :  "`]",
        \ 'GotoPrevSpotAlpha'  :  "`[",
        \ 'GotoNextLineByPos'  :  "]'",
        \ 'GotoPrevLineByPos'  :  "['",
        \ 'GotoNextSpotByPos'  :  "mn",
        \ 'GotoPrevSpotByPos'  :  "mp",
        \ 'GotoNextMarker'     :  "[+",
        \ 'GotoPrevMarker'     :  "[-",
        \ 'GotoNextMarkerAny'  :  "]=",
        \ 'GotoPrevMarkerAny'  :  "[=",
        \ 'ListLocalMarks'     :  "ms",
        \ 'ListLocalMarkers'   :  "m?"
        \ }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;够多了吧，粗体部分是按个人习惯重新定义的快捷键，请添加进 .vimrc 中。&lt;/p&gt;
&lt;p&gt;常用的操作也就如下几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;书签设定。mx，设定/取消当前行名为 x 的标签；m,，自动设定下一个可用书签名，前面提说，独立书签名是不能重复的，在你已经有了多个独立书签，当想再设置书签时，需要记住已经设定的所有书签名，否则很可能会将已有的书签冲掉，这可不好，所以，vim-signature 为你提供了 m, 快捷键，自动帮你选定下一个可用独立书签名；mda，删除当前文件中所有独立书签。&lt;/li&gt;
&lt;li&gt;书签罗列。m?，罗列出当前文件中所有书签，选中后回车可直接跳转；&lt;/li&gt;
&lt;li&gt;书签跳转。mn，按行号前后顺序，跳转至下个独立书签；mp，按行号前后顺序，跳转至前个独立书签。书签跳转方式很多，除了这里说的行号前后顺序，还可以基于书签名字母顺序跳转、分类书签同类跳转、分类书签不同类间跳转等等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%A6%E7%AD%BE.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%A6%E7%AD%BE.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（可视化书签）
&lt;/div&gt;
&lt;p&gt;我虽然选用了 vim-signature，但不代表它完美了，对我而言，无法在不同文件的书签间跳转绝对算是硬伤。另外，如果觉得收藏的代码行只有行首符号来表示不够醒目，你可以考虑 BOOKMARKS--Mark-and-Highlight-Full-Lines 这个插件（&lt;a href="https://github.com/vim-scripts/BOOKMARKS--Mark-and-Highlight-Full-Lines"&gt;https://github.com/vim-scripts/BOOKMARKS--Mark-and-Highlight-Full-Lines&lt;/a&gt; ），它可以让书签行高亮，如下是它的快捷键：，高亮所有书签行；，关闭所有书签行高亮；，清除 [a-z] 的所有书签；，收藏当前行；，取消收藏当前行。&lt;/p&gt;
&lt;h3 name="user-content-4.6"&gt;&lt;a id="user-content-46-标识符列表" class="anchor" aria-hidden="true" href="#46-标识符列表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.6 标识符列表&lt;/h3&gt;
&lt;p&gt;本节之前的内容，虽说与代码开发有些关系，但最多也只能算作用户体验层面的，真正提升生产效率的内容将从此开始。&lt;/p&gt;
&lt;p&gt;本文主题是探讨如何将 vim 打造成高效的 C/C++ 开发环境，希望实现标识符列表、定义跳转、声明提示、实时诊断、代码补全等等系列功能，这些都需要 vim 能够很好地理解我们的代码（不论是 vim 自身还是借助插件甚至第三方工具），如何帮助 vim 理解代码？基本上，有两种主流方式：标签系统和语义系统。至于优劣，简单来说，标签系统配置简单，而语义系统效果精准，后者是趋势。目前对于高阶 IDE 功能，部分已经有对应基于语义的插件支撑，而部分仍只能通过基于标签的方式实现，若同个功能既有语义插件又有标签插件，优选语义。&lt;/p&gt;
&lt;h4 name="user-content-4.6.1"&gt;&lt;a id="user-content-标签系统" class="anchor" aria-hidden="true" href="#标签系统"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;标签系统&lt;/h4&gt;
&lt;p&gt;代码中的类、结构、类成员、函数、对象、宏等等这些统称为标识符，每个标识符的定义、所在文件中的行位置、所在文件的路径等等信息就是标签（tag）。&lt;/p&gt;
&lt;p&gt;Exuberant Ctags（&lt;a href="http://ctags.sourceforge.net/" rel="nofollow"&gt;http://ctags.sourceforge.net/&lt;/a&gt; ，后简称 ctags）就是一款经典的用于生成代码标签信息的工具 。ctags 最初只支持生成 C/C++ 语言，目前已支持 41 种语言，具体列表运行如下命令获取：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctags --list-languages
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;学习知识最好方式就是动手实践。我们以 main.cpp、my_class.h、my_class.cpp 三个文件为例：&lt;/p&gt;
&lt;p&gt;第一步，准备代码文件。创建演示目录 /data/workplace/example/、库子目录 /data/workplace/example/lib/，创建如下内容的 main.cpp：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostring&amp;gt; 
#include &amp;lt;string&amp;gt; 
#include "lib/my_class.h" 
using namespace std; 
int g_num = 128; 
// 重载函数 
static void 
printMsg (char ch) 
{ 
	std::cout &amp;lt;&amp;lt; ch &amp;lt;&amp;lt; std::endl; 
} 
int 
main (void) 
{ 
	// 局部对象
	const string	name = "yangyang.gnu"; 
	// 类 
	MyClass	one; 
	// 成员函数 
	one.printMsg(); 
	// 使用局部对象 
	cout &amp;lt;&amp;lt; g_num &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl; 
	return	(EXIT_SUCCESS); 
} 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;创建如下内容的 my_class.h：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#pragma once 
class MyClass 
{ 
	public: 
		void printMsg(void); 	 
	private: 
		; 
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;创建如下内容的 my_class.cpp：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include "my_class.h" 
// 重载函数 
static void 
printMsg (int i) 
{ 
	std::cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; std::endl; 
} 
void 
MyClass::printMsg (void) 
{ 
	std::cout &amp;lt;&amp;lt; "I'M MyClass!" &amp;lt;&amp;lt; std::endl; 
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第二步，生成标签文件。现在运行 ctags 生成标签文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /data/workplace/example/
ctags -R --c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v --fields=+liaS --extra=+q --language-force=c++
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;命令行参数较多，主要关注 --c++-kinds，ctags 默认并不会提取所有标签，运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctags --list-kinds=c++ 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可看到 ctags 支持生成标签类型的全量列表：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;c  classes 
d  macro definitions 
e  enumerators (values inside an enumeration) 
f  function definitions 
g  enumeration names 
l  local variables [off] 
m  class, struct, and union members 
n  namespaces 
p  function prototypes [off] 
s  structure names 
t  typedefs 
u  union names 
v  variable definitions 
x  external and forward variable declarations [off] 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中，标为 off 的局部对象、函数声明、外部对象等类型默认不会生成标签，所以我显式加上所有类型。运行完后，example/ 下多了个文件 tags，内容大致如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/ 
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/ 
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/ 
!_TAG_PROGRAM_NAME	Exuberant Ctags	// 
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/ 
!_TAG_PROGRAM_VERSION	5.8	// 
MyClass	lib/my_class.h	/^class MyClass $/;"	c 
MyClass::printMsg	lib/my_class.cpp	/^MyClass::printMsg (void) $/;"	f	class:MyClass	signature:(void) 
MyClass::printMsg	lib/my_class.h	/^		void printMsg(void);$/;"	p	class:MyClass	access:public	signature:(void) 
endl	lib/my_class.cpp	/^	std::cout &amp;lt;&amp;lt; "I'M MyClass!" &amp;lt;&amp;lt; std::endl;$/;"	m	class:std	file: 
endl	lib/my_class.cpp	/^	std::cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; std::endl;$/;"	m	class:std	file: 
endl	main.cpp	/^	cout &amp;lt;&amp;lt; g_num &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;$/;"	l 
endl	main.cpp	/^	std::cout &amp;lt;&amp;lt; ch &amp;lt;&amp;lt; std::endl;$/;"	m	class:std	file: 
g_num	main.cpp	/^int g_num = 128;$/;"	v 
main	main.cpp	/^main (void) $/;"	f	signature:(void) 
name	main.cpp	/^	const string	name = "yangyang.gnu";$/;"	l 
one	main.cpp	/^	MyClass	one;$/;"	l 
printMsg	lib/my_class.cpp	/^MyClass::printMsg (void) $/;"	f	class:MyClass	signature:(void) 
printMsg	lib/my_class.cpp	/^printMsg (int i) $/;"	f	file:	signature:(int i) 
printMsg	lib/my_class.h	/^		void printMsg(void);$/;"	p	class:MyClass	access:public	signature:(void) 
printMsg	main.cpp	/^	one.printMsg();$/;"	p	file:	signature:() 
printMsg	main.cpp	/^printMsg (char ch) $/;"	f	file:	signature:(char ch) 
std::endl	lib/my_class.cpp	/^	std::cout &amp;lt;&amp;lt; "I'M MyClass!" &amp;lt;&amp;lt; std::endl;$/;"	m	class:std	file: 
std::endl	lib/my_class.cpp	/^	std::cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; std::endl;$/;"	m	class:std	file: 
std::endl	main.cpp	/^	std::cout &amp;lt;&amp;lt; ch &amp;lt;&amp;lt; std::endl;$/;"	m	class:std	file:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中，! 开头的几行是 ctags 生成的软件信息忽略之，下面的就是我们需要的标签，每个标签项至少有如下字段（命令行参数不同标签项的字段数不同）：标识符名、标识符所在的文件名（也是该文件的相对路径）、标识符所在行的内容、标识符类型（如，l 表示局部对象），另外，若是函数，则有函数签名字段，若是成员函数，则有访问属型字段等等。&lt;/p&gt;
&lt;h4 name="user-content-4.6.2"&gt;&lt;a id="user-content-语义系统" class="anchor" aria-hidden="true" href="#语义系统"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;语义系统&lt;/h4&gt;
&lt;p&gt;通过 ctags 这类标签系统在一定程度上助力 vim 理解我们的代码，对于 C 语言这类简单语言来说，差不多也够了。近几年，随着 C++11/14 的推出，诸如类型推导、lamda 表达式、模版等等新特性，标签系统显得有心无力，这个星球最了解代码的工具非编译器莫属，如果编译器能在语义这个高度帮助 vim 理解代码，那么我们需要的各项 IDE 功能肯定能达到另一个高度。&lt;/p&gt;
&lt;p&gt;语义系统，编译器必不可少。GCC 和 clang 两大主流 C/C++ 编译器，作为语义系统的支撑工具，我选择后者，除了 clang 对新标准支持及时、错误诊断信息清晰这些优点之外，更重要的是，它在高内聚、低耦合方面做得非常好，各类插件可以调用 libclang 获取非常完整的代码分析结果，从而轻松且优雅地实现高阶 IDE 功能。你对语义系统肯定还是比较懵懂，紧接着的“基于语义的声明/定义跳转”会让你有更为直观的了解，现在，请跳转至“7.1 编译器/构建工具集成”，一是了解 clang 相较 GCC 的优势，二是安装好最新版 clang 及其标准库，之后再回来。&lt;/p&gt;
&lt;h4 name="user-content-4.6.3"&gt;&lt;a id="user-content-基于标签的标识符列表" class="anchor" aria-hidden="true" href="#基于标签的标识符列表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基于标签的标识符列表&lt;/h4&gt;
&lt;p&gt;在阅读代码时，经常分析指定函数实现细节，我希望有个插件能把从当前代码文件中提取出的所有标识符放在一个侧边子窗口中，并且能能按语法规则将标识符进行归类，tagbar （&lt;a href="https://github.com/majutsushi/tagbar"&gt;https://github.com/majutsushi/tagbar&lt;/a&gt; ）是一款基于标签的标识符列表插件，它自动周期性调用 ctags 获取标签信息（仅保留在内存，不落地成文件）。安装完 tagbar 后，在 .vimrc 中增加如下信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 设置 tagbar 子窗口的位置出现在主编辑区的左边 
let tagbar_left=1 
" 设置显示／隐藏标签列表子窗口的快捷键。速记：identifier list by tag
nnoremap &amp;lt;Leader&amp;gt;ilt :TagbarToggle&amp;lt;CR&amp;gt; 
" 设置标签子窗口的宽度 
let tagbar_width=32 
" tagbar 子窗口中不显示冗余帮助信息 
let g:tagbar_compact=1
" 设置 ctags 对哪些代码标识符生成标签
let g:tagbar_type_cpp = {
    \ 'kinds' : [
         \ 'c:classes:0:1',
         \ 'd:macros:0:1',
         \ 'e:enumerators:0:0', 
         \ 'f:functions:0:1',
         \ 'g:enumeration:0:1',
         \ 'l:local:0:1',
         \ 'm:members:0:1',
         \ 'n:namespaces:0:1',
         \ 'p:functions_prototypes:0:1',
         \ 's:structs:0:1',
         \ 't:typedefs:0:1',
         \ 'u:unions:0:1',
         \ 'v:global:0:1',
         \ 'x:external:0:1'
     \ ],
     \ 'sro'        : '::',
     \ 'kind2scope' : {
         \ 'g' : 'enum',
         \ 'n' : 'namespace',
         \ 'c' : 'class',
         \ 's' : 'struct',
         \ 'u' : 'union'
     \ },
     \ 'scope2kind' : {
         \ 'enum'      : 'g',
         \ 'namespace' : 'n',
         \ 'class'     : 'c',
         \ 'struct'    : 's',
         \ 'union'     : 'u'
     \ }
\ }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;前面提过，ctags 默认并不会提取局部对象、函数声明、外部对象等类型的标签，我必须让 tagbar 告诉 ctags 改变默认参数，这是 tagbar_type_cpp 变量存在的主要目的，所以前面的配置信息中将局部对象、函数声明、外部对象等显式将其加进该变量的 kinds 域中。具体格式为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{short}:{long}[:{fold}[:{stl}]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;用于描述函数、变量、结构体等等不同类型的标识符，每种类型对应一行。其中，short 将作为 ctags 的 --c++-kinds 命令行选项的参数，类似：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;long 将作为 short 的简要描述展示在 vim 的 tagbar 子窗口中；fold 表示这种类型的标识符是否折叠显示；stl 指定是否在 vim 状态栏中显示附加信息。&lt;/p&gt;
&lt;p&gt;重启 vim 后，打开一个 C/C++ 源码文件，键入 ilt，将在左侧的 tagbar 窗口中将可看到标签列表：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%9F%BA%E4%BA%8E%E6%A0%87%E7%AD%BE%E7%9A%84%E6%A0%87%E8%AF%86%E7%AC%A6%E5%88%97%E8%A1%A8.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%9F%BA%E4%BA%8E%E6%A0%87%E7%AD%BE%E7%9A%84%E6%A0%87%E8%AF%86%E7%AC%A6%E5%88%97%E8%A1%A8.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（基于标签的标识符列表）
&lt;/div&gt;
从上图可知 tagbar 的几个特点：
* 按作用域归类不同标签。按名字空间 n_foo、类 Foo 进行归类，在内部有声明、有定义；
* 显示标签类型。名字空间、类、函数等等；
* 显示完整函数原型；
* 图形化显示共有成员（+）、私有成员（-）、保护成员（#）；
&lt;p&gt;在标识符列表中选中对应标识符后回车即可跳至源码中对应位置；在源码中停顿几秒，tagbar 将高亮对应标识符；每次保存文件时或者切换到不同代码文件时 tagbar 自动调用 ctags 更是标签数据库；tagbar 有两种排序方式，一是按标签名字母先后顺序、一是按标签在源码中出现的先后顺序，在 .vimrc 中我配置选用后者，键入 s 切换不同不同排序方式。&lt;/p&gt;
&lt;h3 name="user-content-4.7"&gt;&lt;a id="user-content-47-声明定义跳转" class="anchor" aria-hidden="true" href="#47-声明定义跳转"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.7 声明/定义跳转&lt;/h3&gt;
&lt;p&gt;假设你正在分析某个开源项目源码，在 main.cpp 中遇到调用函数 func()，想要查看它如何实现，一种方式：在 main.cpp 中查找 -&amp;gt; 若没有在工程内查找 -&amp;gt; 找到后打开对应文件 -&amp;gt; 文件内查找其所在行 -&amp;gt; 移动光标到该行 -&amp;gt; 分析完后切换会先前文件，不仅效率太低更要命的是影响我的思维连续性。我需要另外高效的方式，就像真正函数调用一样：光标选中调用处的 func() -&amp;gt; 键入某个快捷键自动转换到 func() 实现处 -&amp;gt; 键入某个键又回到 func() 调用处，这就是所谓的定义跳转。&lt;/p&gt;
&lt;p&gt;基本上，vim 世界存在两类导航：基于标签的跳转和基于语义的跳转。&lt;/p&gt;
&lt;h4 name="user-content-4.7.1"&gt;&lt;a id="user-content-基于标签的声明定义跳转" class="anchor" aria-hidden="true" href="#基于标签的声明定义跳转"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基于标签的声明/定义跳转&lt;/h4&gt;
&lt;p&gt;继续延用前面接收标签系统的例子文件 main.cpp、my_class.h、my_class.cpp，第二步已经生成好了标签文件，那么要实现声明/定义跳转，需要第三步，引入标签文件。这让 vim 知晓标签文件的路径。在 /data/workplace/example/ 目录下用 vim 打开 main.cpp，在 vim 中执行如下目录引入标签文件 tags：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:set tags+=/data/workplace/example/tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;既然 vim 有个专门的命令来引入标签，说明 vim 能识别标签。虽然标签文件中并无行号，但已经有标签所在文件，以及标签所在行的完整内容，vim 只需切换至对应文件，再在文件内作内容查找即可找到对应行。换言之，只要有对应的标签文件，vim 就能根据标签跳转至标签定义处。&lt;/p&gt;
&lt;p&gt;这时，你可以体验下初级的声明/定义跳转功能。把光标移到 main.cpp 的 one.printMsg() 那行的 printMsg 上，键入快捷键 g]，vim 将罗列出名为 printMsg 的所有标签候选列表，按需选择键入编号即可跳转进入。如下图：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%BE%85%E9%80%89%E6%A0%87%E7%AD%BE.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%BE%85%E9%80%89%E6%A0%87%E7%AD%BE.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（待选标签）
&lt;/div&gt;
&lt;p&gt;目前为止，离我预期还有差距。&lt;/p&gt;
&lt;p&gt;第一，选择候选列表影响思维连续性。首先得明白为何会出现待选列表。前面说过，vim 做的事情很简单，就是把光标所在单词放到标签文件中查找，如果只有一个，当然你可以直接跳转过去，大部分时候会找到多项匹配标签，比如，函数声明、函数定义、函数调用、函数重载等等都会导致同个函数名出现在多个标签中，vim 无法知道你要查看哪项，只能让你自己选择。其实，因为标签文件中已经包含了函数签名属性，vim 的查找机制如果不是基于关键字，而是基于语义的话，那也可以直接命中，期待后续 vim 有此功能吧。既然无法直接解决，换个思路，我不想选择列表，但可以接受遍历匹配标签。就是说，我不想输入数字选择第几项，但可以接受键入正向快捷键后遍历第一个匹配标签，再次键入快捷键遍历第二个，直到最后一个，键入反向快捷键逆序遍历。这下事情简单了，命令 :tnext 和 :tprevious 分别先后和向前遍历匹配标签，定义两个快捷键搞定：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 正向遍历同名标签
nmap &amp;lt;Leader&amp;gt;tn :tnext&amp;lt;CR&amp;gt;
" 反向遍历同名标签
nmap &amp;lt;Leader&amp;gt;tp :tprevious&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;等等，这还不行，vim 中有个叫标签栈（tags stack）的机制，:tnext、:tprevious 只能遍历已经压入标签栈内的标签，所以，你在遍历前需要通过快捷键 ctrl-] 将光标所在单词匹配的所有标签压入标签栈中，然后才能遍历。不说复杂了，以后你只需先键入 ctrl-]，若没跳转至需要的标签，再键入 tn 往后或者 tp 往前遍历即可。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%9F%BA%E4%BA%8E%E6%A0%87%E7%AD%BE%E7%9A%84%E8%B7%B3%E8%BD%AC.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%9F%BA%E4%BA%8E%E6%A0%87%E7%AD%BE%E7%9A%84%E8%B7%B3%E8%BD%AC.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（基于标签的跳转）
&lt;/div&gt;
&lt;p&gt;第二，如何返回先前位置。当分析完函数实现后，我需要返回先前调用处，可以键入 vim 快捷键 ctrl-t 返回，如果想再次进入，可以用前面介绍的方式，或者键入 ctrl-i。另外，注意，ctrl-o 以是一种返回快捷键，但与 ctrl-t 的返回不同，前者是返回上次光标停留行、后者返回上个标签。&lt;/p&gt;
&lt;p&gt;第三，如何自动生成标签并引入。开发时代码不停在变更，每次还要手动执行 ctags 命令生成新的标签文件，太麻烦了，得想个法周期性针对这个工程自动生成标签文件，并通知 vim 引人该标签文件，嘿，还真有这样的插件 —— indexer（&lt;a href="https://github.com/vim-scripts/indexer.tar.gz"&gt;https://github.com/vim-scripts/indexer.tar.gz&lt;/a&gt; ）。indexer 依赖 DfrankUtil（&lt;a href="https://github.com/vim-scripts/DfrankUtil"&gt;https://github.com/vim-scripts/DfrankUtil&lt;/a&gt; ）、vimprj（&lt;a href="https://github.com/vim-scripts/vimprj"&gt;https://github.com/vim-scripts/vimprj&lt;/a&gt; ）两个插件，请一并安装。请在 .vimrc 中增加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 设置插件 indexer 调用 ctags 的参数
" 默认 --c++-kinds=+p+l，重新设置为 --c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v
" 默认 --fields=+iaS 不满足 YCM 要求，需改为 --fields=+iaSl
let g:indexer_ctagsCommandLineOptions="--c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v --fields=+iaSl --extra=+q"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;另外，indexer 还有个自己的配置文件，用于设定各个工程的根目录路径，配置文件位于 ~/.indexer_files，内容可以设定为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--------------- ~/.indexer_files ---------------  
[foo] 
/data/workplace/foo/src/
[bar] 
/data/workplace/bar/src/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上例设定了两个工程的根目录，方括号内是对应工程名，路径为工程的代码目录，不要包含构建目录、文档目录，以避免将产生非代码文件的标签信息。这样，从以上目录打开任何代码文件时，indexer 便对整个目录创建标签文件，若代码文件有更新，那么在文件保存时，indexer 将自动调用 ctags 更新标签文件，indexer 生成的标签文件以工程名命名，位于 ~/.indexer_files_tags/，并自动引入进 vim 中，那么&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:set tags+=/data/workplace/example/tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一步也省了。好了，解决了这三个问题后，vim 的代码导航基本已经达到我的预期。&lt;/p&gt;
&lt;h4 name="user-content-4.7.2"&gt;&lt;a id="user-content-基于语义的声明定义跳转" class="anchor" aria-hidden="true" href="#基于语义的声明定义跳转"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基于语义的声明/定义跳转&lt;/h4&gt;
&lt;p&gt;有个 vim 插件叫 YCM，有个 C++ 编译器叫 clang，只要正确使用它俩，你将获得无与伦比的代码导航用户体验，以及，代码补全。当然，代价是相对复杂的配置，涉及几个后续章节知识点（“基于语义的智能补全”和“编译器/构建工具集成”），正因如此，此时我只给出快捷键设置，在看完“基于语义的智能补全”后请返回此处，重新查阅。&lt;/p&gt;
&lt;p&gt;请增加如下快捷键到 .vimrc 中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nnoremap &amp;lt;leader&amp;gt;jc :YcmCompleter GoToDeclaration&amp;lt;CR&amp;gt;
" 只能是 #include 或已打开的文件
nnoremap &amp;lt;leader&amp;gt;jd :YcmCompleter GoToDefinition&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%9F%BA%E4%BA%8E%E8%AF%AD%E4%B9%89%E7%9A%84%E8%B7%B3%E8%BD%AC.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%9F%BA%E4%BA%8E%E8%AF%AD%E4%B9%89%E7%9A%84%E8%B7%B3%E8%BD%AC.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（基于语义的跳转）
&lt;/div&gt;
&lt;p&gt;另外，基于标签的调整建议你也要了解，有助于你熟悉标签系统，毕竟，使用标签的插件很有几个。&lt;/p&gt;
&lt;h3 name="user-content-4.8"&gt;&lt;a id="user-content-48-内容查找" class="anchor" aria-hidden="true" href="#48-内容查找"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.8 内容查找&lt;/h3&gt;
&lt;p&gt;vim 支持正则表达式，那么已经具有强劲的查供能力，在当前文件内查找，vim 的 / 和 ? 查找命令非常好用，但工程内查找，自带的查找用户体验还无法达到我的预期。&lt;/p&gt;
&lt;p&gt;内容查找，你第一反应会想到 grep 和 ack 两个工具，没错，它俩强大的正则处理能力无需质疑，如果有插件能在 vim 中集成两个工具之一，那么任何查找任务均可轻松搞定，为此，出现了 grep.vim（&lt;a href="https://github.com/yegappan/grep"&gt;https://github.com/yegappan/grep&lt;/a&gt; ）和 ack.vim（&lt;a href="https://github.com/mileszs/ack.vim"&gt;https://github.com/mileszs/ack.vim&lt;/a&gt; ）两个插件，通过它们，你可以在 vim 中自在地使用高度整合的 grep 或 ack 两个外部命令，就像 vim 的内部命令一样：查找时，把光标定位到待查找关键字上后，通过快捷键立即查找该关键字，查询结果通过列表形式将关键字所在行罗列出来，选择后就能跳转到对应位置。很好，这全部都是我想要的，但是，不是我想要的全部。&lt;/p&gt;
&lt;p&gt;你知道，在分析源码时，同个关键字会在不同文件的不同位置多次出现，grep.vim 和 ack.vim 只能“将关键字所在行罗列出来”，如果关键字出现的那几行完全相同，那么，我单凭这个列表是无法确定哪行是我需要的，比如，我查找关键字 cnt，代码中，cnt 在 4 行出现过、64 行、128 行、1024 行都出现过，且每行内容均为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;++cnt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这时，即便 grep.vim 或 ack.vim 在一个有四个选项的列表中为你罗列出相关行，因为完全相同，所以你也无法确定到底应该查看第几项。换言之，除了罗列关键字所在行之外，我还需要看到所在行的上下几行，这样，有了上下文，我就可以最终决定哪一行是我需要的了。ctrlsf.vim（&lt;a href="https://github.com/dyng/ctrlsf.vim"&gt;https://github.com/dyng/ctrlsf.vim&lt;/a&gt; ）为此而生。&lt;/p&gt;
&lt;p&gt;ctrlsf.vim 后端调用 ack，所以你得提前自行安装，版本不得低于 v2.0，openSUSE 用户可以&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;zypper --no-refresh in ack
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;进行安装。ctrlsf.vim 支持 ack 所有选项，要查找某个关键字（如，yangyang），你可以想让光标定位在该关键字上面，然后命令模式下键入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:CtrlSF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将自动提取光标所在关键字进行查找，你也可以指定 ack 的选项&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:CtrlSF -i -C 1 [pattern] /my/path/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;为方便操作，我设定了快捷键：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 使用 ctrlsf.vim 插件在工程内全局查找光标所在关键字，设置快捷键。快捷键速记法：search in project
nnoremap &amp;lt;Leader&amp;gt;sp :CtrlSF&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;避免手工键入命令的麻烦。查找结果将以子窗口在左侧呈现，不仅罗列出所有匹配项，而且给出匹配项的上下文。如果从上下文中你还觉得信息量不够，没事，可以键入 p 键，将在右侧子窗口中给出该匹配项的完整代码，而不再仅有前后几行。不想跳至任何匹配项，可以直接键入 q 退出 ctrlsf.vim；如果有钟意的匹配项，光标定位该项后回车，立即跳至新 buffer 中对应位置。&lt;/p&gt;
&lt;p&gt;太性感了，以关键字 CmdlineOption 为例，如下所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%86%85%E5%AE%B9%E6%9F%A5%E6%89%BE.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%86%85%E5%AE%B9%E6%9F%A5%E6%89%BE.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（内容查找）
&lt;/div&gt;
&lt;h3 name="user-content-4.9"&gt;&lt;a id="user-content-49-内容替换" class="anchor" aria-hidden="true" href="#49-内容替换"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4.9 内容替换&lt;/h3&gt;
&lt;p&gt;有个名为 iFoo 的全局变量，被工程中 16 个文件引用过，由于你岳母觉得匈牙利命名法严重、异常、绝对以及十分万恶，为讨岳母欢心，不得不将该变量更名为 foo，怎么办？依次打开每个文件，逐一查找后替换？对我而言，内容替换存在两种场景：快捷替换和精确替换。&lt;/p&gt;
&lt;h4 name="user-content-4.9.1"&gt;&lt;a id="user-content-快捷替换" class="anchor" aria-hidden="true" href="#快捷替换"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;快捷替换&lt;/h4&gt;
&lt;p&gt;前面介绍的 ctrlsf 已经把匹配的字符串汇总在侧边子窗口中显示了，同时，它还允许我们直接在该子窗口中进行编辑操作，在这种环境下，如果我们能快捷选中所有匹配字符串，那么就可以先批量删除再在原位插入新的字符串，这岂不是我们需要的替换功能么？&lt;/p&gt;
&lt;p&gt;快捷选中 ctrlsf 子窗口中的多个匹配项，关键还是这些匹配项分散在不同行的不同位置，这就需要多光标编辑功能，vim-multiple-cursors 插件（&lt;a href="https://github.com/terryma/vim-multiple-cursors"&gt;https://github.com/terryma/vim-multiple-cursors&lt;/a&gt; ）为此而生。装好 vim-multiple-cursors 后，你随便编辑个文档，随便输入多个相同的字符串，先在可视化模式下选中其中一个，接着键入 ctrl-n，你会发现第二个该字符串也被选中了，持续键入 ctrl-n，你可以选中所有相同的字符串，把这个功能与 ctrlsf 结合，你来感受下：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%BF%AB%E6%8D%B7%E6%9B%BF%E6%8D%A2.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%BF%AB%E6%8D%B7%E6%9B%BF%E6%8D%A2.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（快捷替换）
&lt;/div&gt;
上图中，我想将 prtHelpInfo() 更名为 showHelpInfo()，先通过 ctrlsf 找到工程中所有 prtHelpInfo，然后直接在 ctrlsf 子窗口中选中第一个 ptr，再通过 vim-multiple-cursors 选中第二个 ptr，接着统一删除 ptr 并统一键入 show，最后保存并重新加载替换后的文件。
&lt;p&gt;vim-multiple-cursors 默认快捷键与我系统中其他软件的快捷键冲突，按各自习惯重新设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:multi_cursor_next_key='&amp;lt;S-n&amp;gt;'
let g:multi_cursor_skip_key='&amp;lt;S-k&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 name="user-content-4.9.2"&gt;&lt;a id="user-content-精确替换" class="anchor" aria-hidden="true" href="#精确替换"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;精确替换&lt;/h4&gt;
&lt;p&gt;vim 有强大的内容替换命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:[range]s/{pattern}/{string}/[flags]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在进行内容替换操作时，我关注几个因素：如何指定替换文件范围、是否整词匹配、是否逐一确认后再替换。&lt;/p&gt;
&lt;p&gt;如何指定替换文件范围？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果在当前文件内替换，[range] 不用指定，默认就在当前文件内；&lt;/li&gt;
&lt;li&gt;如果在当前选中区域，[range] 也不用指定，在你键入替换命令时，vim 自动将生成如下命令：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;:'&amp;lt;,'&amp;gt;s/{pattern}/{string}/[flags]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;你也可以指定行范围，如，第三行到第五行：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;:3,5s/{pattern}/{string}/[flags]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;如果对打开文件进行替换，你需要先通过 :bufdo 命令显式告知 vim 范围，再执行替换；&lt;/li&gt;
&lt;li&gt;如果对工程内所有文件进行替换，先 :args **/&lt;em&gt;.cpp **/&lt;/em&gt;.h 告知 vim 范围，再执行替换；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是否整词匹配？{pattern} 用于指定匹配模式。如果需要整词匹配，则该字段应由 &amp;lt; 和 &amp;gt; 修饰待替换字符串（如，&amp;lt;iFoo&amp;gt;）；无须整词匹配则不用修饰，直接给定该字符串即可；&lt;/p&gt;
&lt;p&gt;是否逐一确认后再替换？[flags] 可用于指定是否需要确认。若无须确认，该字段设定为 ge 即可；有时不见得所有匹配的字符串都需替换，若在每次替换前进行确认，该字段设定为 gec 即可。&lt;/p&gt;
&lt;p&gt;是否整词匹配和是否确认两个条件叠加就有 4 种组合：非整词且不确认、非整词且确认、整词且不确认、整词且确认，每次手工输入这些命令真是麻烦；我把这些组合封装到一个函数中，如下 Replace() 所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 替换函数。参数说明：
" confirm：是否替换前逐一确认
" wholeword：是否整词匹配
" replace：被替换字符串
function! Replace(confirm, wholeword, replace)
    wa
    let flag = ''
    if a:confirm
        let flag .= 'gec'
    else
        let flag .= 'ge'
    endif
    let search = ''
    if a:wholeword
        let search .= '\&amp;lt;' . escape(expand('&amp;lt;cword&amp;gt;'), '/\.*$^~[') . '\&amp;gt;'
    else
        let search .= expand('&amp;lt;cword&amp;gt;')
    endif
    let replace = escape(a:replace, '/\&amp;amp;~')
    execute 'argdo %s/' . search . '/' . replace . '/' . flag . '| update'
endfunction
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;为最大程度减少手工输入，Replace() 还能自动提取待替换字符串（只要把光标移至待替换字符串上），同时，替换完成后自动为你保存更改的文件。现在要做的就是赋予 confirm、wholeword 不同实参实现 4 种组合，再绑定 4 个快捷键即可。如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 不确认、非整词
nnoremap &amp;lt;Leader&amp;gt;R :call Replace(0, 0, input('Replace '.expand('&amp;lt;cword&amp;gt;').' with: '))&amp;lt;CR&amp;gt;
" 不确认、整词
nnoremap &amp;lt;Leader&amp;gt;rw :call Replace(0, 1, input('Replace '.expand('&amp;lt;cword&amp;gt;').' with: '))&amp;lt;CR&amp;gt;
" 确认、非整词
nnoremap &amp;lt;Leader&amp;gt;rc :call Replace(1, 0, input('Replace '.expand('&amp;lt;cword&amp;gt;').' with: '))&amp;lt;CR&amp;gt;
" 确认、整词
nnoremap &amp;lt;Leader&amp;gt;rcw :call Replace(1, 1, input('Replace '.expand('&amp;lt;cword&amp;gt;').' with: '))&amp;lt;CR&amp;gt;
nnoremap &amp;lt;Leader&amp;gt;rwc :call Replace(1, 1, input('Replace '.expand('&amp;lt;cword&amp;gt;').' with: '))&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我平时用的最多的无须确认但整词匹配的替换模式，即 &amp;lt;leader&amp;gt;rw。&lt;/p&gt;
&lt;p&gt;请将完整配置信息添加进 .vimrc 中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 替换函数。参数说明：
" confirm：是否替换前逐一确认
" wholeword：是否整词匹配
" replace：被替换字符串
function! Replace(confirm, wholeword, replace)
    wa
    let flag = ''
    if a:confirm
        let flag .= 'gec'
    else
        let flag .= 'ge'
    endif
    let search = ''
    if a:wholeword
        let search .= '\&amp;lt;' . escape(expand('&amp;lt;cword&amp;gt;'), '/\.*$^~[') . '\&amp;gt;'
    else
        let search .= expand('&amp;lt;cword&amp;gt;')
    endif
    let replace = escape(a:replace, '/\&amp;amp;~')
    execute 'argdo %s/' . search . '/' . replace . '/' . flag . '| update'
endfunction
" 不确认、非整词
nnoremap &amp;lt;Leader&amp;gt;R :call Replace(0, 0, input('Replace '.expand('&amp;lt;cword&amp;gt;').' with: '))&amp;lt;CR&amp;gt;
" 不确认、整词
nnoremap &amp;lt;Leader&amp;gt;rw :call Replace(0, 1, input('Replace '.expand('&amp;lt;cword&amp;gt;').' with: '))&amp;lt;CR&amp;gt;
" 确认、非整词
nnoremap &amp;lt;Leader&amp;gt;rc :call Replace(1, 0, input('Replace '.expand('&amp;lt;cword&amp;gt;').' with: '))&amp;lt;CR&amp;gt;
" 确认、整词
nnoremap &amp;lt;Leader&amp;gt;rcw :call Replace(1, 1, input('Replace '.expand('&amp;lt;cword&amp;gt;').' with: '))&amp;lt;CR&amp;gt;
nnoremap &amp;lt;Leader&amp;gt;rwc :call Replace(1, 1, input('Replace '.expand('&amp;lt;cword&amp;gt;').' with: '))&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;比如，我将工程的所有 *.cpp 和 *.h 中的关键字 MyClassA 按不确认且整词匹配模式替换成 MyClass，所以注释中的关键字不会被替换掉。如下所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E4%B8%8D%E7%A1%AE%E8%AE%A4%E4%B8%94%E6%95%B4%E8%AF%8D%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%9B%BF%E6%8D%A2.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E4%B8%8D%E7%A1%AE%E8%AE%A4%E4%B8%94%E6%95%B4%E8%AF%8D%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%9B%BF%E6%8D%A2.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（不确认且整词匹配模式的替换）
&lt;/div&gt;
又比如，对当前文件采用需确认且无须整词匹配的模式进行替换，你会看到注释中的关键字也被替换了：
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E7%A1%AE%E8%AE%A4%E4%B8%94%E6%97%A0%E9%A1%BB%E6%95%B4%E8%AF%8D%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%9B%BF%E6%8D%A2.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E7%A1%AE%E8%AE%A4%E4%B8%94%E6%97%A0%E9%A1%BB%E6%95%B4%E8%AF%8D%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%9B%BF%E6%8D%A2.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（确认且无须整词匹配模式的替换）
&lt;/div&gt;
&lt;h2 name="user-content-5"&gt;&lt;a id="user-content-5-代码开发" class="anchor" aria-hidden="true" href="#5-代码开发"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5 代码开发&lt;/h2&gt;
&lt;p&gt;在具体编码过程中，我需要一系列提高生产力的功能：批量开/关注释、快速输入代码模板、代码智能补全、路径智能补全、从接口生成实现、查看参考库信息等等，我们逐一来实现。&lt;/p&gt;
&lt;h3 name="user-content-5.1"&gt;&lt;a id="user-content-51-快速开关注释" class="anchor" aria-hidden="true" href="#51-快速开关注释"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.1 快速开关注释&lt;/h3&gt;
&lt;p&gt;需要注释时，到每行代码前输入 //，取消注释时再删除 //，这种方式不是现代人的行为。IDE 应该支持对选中文本块批量（每行）添加注释符号，反之，可批量取消。本来 vim 通过宏方式可以支持该功能，但每次注释时要自己录制宏，关闭 vim 后宏无法保存，所以有人专门编写了一款插件 NERD Commenter（&lt;a href="https://github.com/scrooloose/nerdcommenter"&gt;https://github.com/scrooloose/nerdcommenter&lt;/a&gt; ），NERD Commenter 根据编辑文档的扩展名自适应采用何种注释风格，如，文档名 x.cpp 则采用 // 注释风格，而 x.c 则是 /**/ 注释风格；另外，如果选中的代码并非整行，那么该插件将用 /**/ 只注释选中部分。&lt;/p&gt;
&lt;p&gt;常用操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;leader&amp;gt;cc，注释当前选中文本，如果选中的是整行则在每行首添加 //，如果选中一行的部分内容则在选中部分前后添加分别 /&lt;em&gt;、&lt;/em&gt;/；&lt;/li&gt;
&lt;li&gt;&amp;lt;leader&amp;gt;cu，取消选中文本块的注释。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%85%B3%E6%B3%A8%E9%87%8A.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%85%B3%E6%B3%A8%E9%87%8A.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（快速开/关注释）
&lt;/div&gt;
&lt;p&gt;另外，有时需要 ASCII art 风格的注释，可用 DrawIt!（&lt;a href="https://github.com/vim-scripts/DrawIt"&gt;https://github.com/vim-scripts/DrawIt&lt;/a&gt; ），它可以让你用方向键快速绘制出。&lt;/p&gt;
&lt;p&gt;常用操作就两个，:Distart，开始绘制，可用方向键绘制线条，空格键绘制或擦除字符；:Distop，停止绘制。&lt;/p&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/ASCII%20art%20%E9%A3%8E%E6%A0%BC%E6%B3%A8%E9%87%8A.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/ASCII%20art%20%E9%A3%8E%E6%A0%BC%E6%B3%A8%E9%87%8A.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（ASCII art 风格注释）
&lt;/div&gt;
&lt;h3 name="user-content-5.2"&gt;&lt;a id="user-content-52-模板补全" class="anchor" aria-hidden="true" href="#52-模板补全"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.2 模板补全&lt;/h3&gt;
&lt;p&gt;开发时，我经常要输入相同的代码片断，比如 if-else、switch 语句，如果每个字符全由手工键入，我可吃不了这个苦，我想要简单的键入就能自动帮我完成代码模板的输入，并且光标停留在需要我编辑的位置，比如键入 if，vim 自动完成&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (/* condition */) {
    TODO
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而且帮我选中 /* condition */ 部分，不会影响编码连续性 —— UltiSnips（&lt;a href="https://github.com/SirVer/ultisnips"&gt;https://github.com/SirVer/ultisnips&lt;/a&gt; ），我的选择。&lt;/p&gt;
&lt;p&gt;在进行模板补全时，你是先键入模板名（如，if），接着键入补全快捷键（默认 &amp;lt;tab&amp;gt;），然后 UltiSnips 根据你键入的模板名在代码模板文件中搜索匹配的“模板名-模板”，找到对应模板后，将模板在光标当前位置展开。&lt;/p&gt;
&lt;p&gt;UltiSnips 有一套自己的代码模板语法规则，类似：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;snippet if "if statement" i
if (${1:/* condition */}) { 
    ${2:TODO} 
} 
endsnippet
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中，snippet 和 endsnippet 用于表示模板的开始和结束；if 是模板名；"if statement" 是模板描述，你可以把多个模板的模板名定义成一样（如，if () {} 和 if () {} else {} 两模板都定义成相同模板名 if），在模板描述中加以区分（如，分别对应 "if statement" 和 "if-else statement"），这样，在 YCM（重量级智能补全插件） 的补全列表中可以根据模板描述区分选项不同模板；i 是模板控制参数，用于控制模板补全行为，具体参见“快速编辑结对符”一节；${1}、${2} 是 &amp;lt;tab&amp;gt; 跳转的先后顺序。&lt;/p&gt;
&lt;p&gt;新版 UltiSnips 并未自带预定义的代码模板，你可以从 &lt;a href="https://github.com/honza/vim-snippets"&gt;https://github.com/honza/vim-snippets&lt;/a&gt; 获取各类语言丰富的代码模板，也可以重新写一套符合自己编码风格的模板。无论哪种方式，你需要在 .vimrc 中设定该模板所在目录名，以便 UltiSnips 寻找到。比如，我自定义的代码模板文件 cpp.snippets，路径为 ~/.vim/bundle/ultisnips/mysnippets/cpp.snippets，对应设置如下：
let g:UltiSnipsSnippetDirectories=["mysnippets"]
其中，目录名切勿取为 snippets，这是 UltiSnips 内部保留关键字；另外，目录一定要是 ~/.vim/bundle/ 下的子目录，也就是 vim 的运行时目录。&lt;/p&gt;
&lt;p&gt;完整 cpp.snippets 内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#================================= 
#预处理 
#================================= 
# #include "..." 
snippet INC 
#include "${1:TODO}"${2} 
endsnippet 
# #include &amp;lt;...&amp;gt; 
snippet inc 
#include &amp;lt;${1:TODO}&amp;gt;${2} 
endsnippet 
#================================= 
#结构语句 
#================================= 
# if 
snippet if 
if (${1:/* condition */}) { 
    ${2:TODO} 
} 
endsnippet 
# else if 
snippet ei 
else if (${1:/* condition */}) { 
    ${2:TODO} 
} 
endsnippet 
# else 
snippet el 
else { 
    ${1:TODO} 
} 
endsnippet 
# return 
snippet re 
return(${1:/* condition */}); 
endsnippet 
# Do While Loop 
snippet do 
do { 
    ${2:TODO} 
} while (${1:/* condition */}); 
endsnippet 
# While Loop 
snippet wh 
while (${1:/* condition */}) { 
    ${2:TODO} 
} 
endsnippet 
# switch 
snippet sw 
switch (${1:/* condition */}) { 
    case ${2:c}: { 
    } 
    break; 

    default: { 
    } 
    break; 
} 
endsnippet 
# 通过迭代器遍历容器（可读写） 
snippet for 
for (auto ${2:iter} = ${1:c}.begin(); ${3:$2} != $1.end(); ${4:++iter}) {
    ${5:TODO} 
} 
endsnippet 
# 通过迭代器遍历容器（只读） 
snippet cfor 
for (auto ${2:citer} = ${1:c}.cbegin(); ${3:$2} != $1.cend(); ${4:++citer}) { 
    ${5:TODO} 
} 
endsnippet 
# 通过下标遍历容器 
snippet For 
for (decltype($1.size()) ${2:i} = 0; $2 != ${1}.size(); ${3:++}$2) { 
    ${4:TODO} 
} 
endsnippet 
# C++11风格for循环遍历（可读写） 
snippet F 
for (auto&amp;amp; e : ${1:c}) { 
} 
endsnippet 
# C++11风格for循环遍历（只读） 
snippet CF 
for (const auto&amp;amp; e : ${1:c}) { 
} 
endsnippet 
# For Loop 
snippet FOR 
for (unsigned ${2:i} = 0; $2 &amp;lt; ${1:count}; ${3:++}$2) { 
    ${4:TODO} 
} 
endsnippet 
# try-catch 
snippet try 
try { 
} catch (${1:/* condition */}) { 
} 
endsnippet 
snippet ca 
catch (${1:/* condition */}) { 
} 
endsnippet 
snippet throw 
th (${1:/* condition */}); 
endsnippet 
#================================= 
#容器 
#================================= 
# std::vector 
snippet vec 
vector&amp;lt;${1:char}&amp;gt;	v${2}; 
endsnippet 
# std::list 
snippet lst 
list&amp;lt;${1:char}&amp;gt;	l${2}; 
endsnippet 
# std::set 
snippet set 
set&amp;lt;${1:key}&amp;gt;	s${2}; 
endsnippet 
# std::map 
snippet map 
map&amp;lt;${1:key}, ${2:value}&amp;gt;	m${3}; 
endsnippet 
#================================= 
#语言扩展 
#================================= 
# Class 
snippet cl 
class ${1:`Filename('$1_t', 'name')`} 
{ 
    public: 
        $1 (); 
        virtual ~$1 (); 
         
    private: 
}; 
endsnippet 
#================================= 
#结对符 
#================================= 
 # 括号 bracket 
snippet b "bracket" i 
(${1})${2} 
endsnippet 
# 方括号 square bracket，设定为 st 而非 sb，避免与 b 冲突
snippet st "square bracket" i 
[${1}]${2} 
endsnippet 
# 大括号 brace 
snippet br "brace" i 
{ 
    ${1} 
}${2} 
endsnippet 
# 单引号 single quote，设定为 se 而非 sq，避免与 q 冲突
snippet se "single quote" I
'${1}'${2}
endsnippet
# 双引号 quote
snippet q "quote" I
"${1}"${2}
endsnippet
# 指针符号 arrow 
snippet ar "arrow" i 
-&amp;gt;${1} 
endsnippet 
# dot 
snippet d "dot" i 
.${1} 
endsnippet 
# 作用域 scope 
snippet s "scope" i 
::${1} 
endsnippet
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;默认情况下，UltiSnips 模板补全快捷键是 &amp;lt;tab&amp;gt;，与后面介绍的 YCM 快捷键有冲突，所有须在 .vimrc 中重新设定：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" UltiSnips 的 tab 键与 YCM 冲突，重新设定
let g:UltiSnipsExpandTrigger="&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;"
let g:UltiSnipsJumpForwardTrigger="&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;"
let g:UltiSnipsJumpBackwardTrigger="&amp;lt;leader&amp;gt;&amp;lt;s-tab&amp;gt;"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E6%A8%A1%E6%9D%BF%E8%A1%A5%E5%85%A8.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E6%A8%A1%E6%9D%BF%E8%A1%A5%E5%85%A8.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（模板补全）
&lt;/div&gt;
&lt;h3 name="user-content-5.3"&gt;&lt;a id="user-content-53-智能补全" class="anchor" aria-hidden="true" href="#53-智能补全"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.3 智能补全&lt;/h3&gt;
&lt;p&gt;真的，这绝对是 G 点。智能补全是提升编码效率的杀手锏。试想下，有个函数叫 getCountAndSizeFromRemotefile()，当你输入 get 后 IDE 自动帮你输入完整的函数名，又如，有个文件 ~/this/is/a/deep/dir/file.txt，就像在 shell 中一样，键入 tab 键自动补全文件路径那是何等惬意！&lt;/p&gt;
&lt;p&gt;智能补全有两类实现方式：基于标签的、基于语义的。&lt;/p&gt;
&lt;h4 name="user-content-5.3.1"&gt;&lt;a id="user-content-基于标签的智能补全" class="anchor" aria-hidden="true" href="#基于标签的智能补全"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基于标签的智能补全&lt;/h4&gt;
&lt;p&gt;前面代码导航时介绍过标签，每个标签项含有标签名、作用域等等信息，当键入某几个字符时，基于标签的补全插件就在标签文件中搜索匹配的标签项，并罗列出来，你选择中意的，这与前面代码导航类似，一个是用于跳转、一个用于输入。基于标签的补全，后端 ctags 先生成标签文件，前端采用插件 new-omni-completion（内置）进行识别。这种方式操作简单、效果不错，一般来说两步搞定。&lt;/p&gt;
&lt;p&gt;第一步，生成标签文件。在工程目录的根目录执行 ctags，该目录下会多出个 tags 文件；&lt;/p&gt;
&lt;p&gt;第二步，引入标签文件。在 vim 中引入标签文件，在 vim 中执行命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:set tags+=/home/your_proj/tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;后续，在编码时，键入标签的前几个字符后依次键入 ctrl-x ctrl-o 将罗列匹配标签列表、若依次键入 ctrl-x ctrl-i 则文件名补全、ctrl-x ctrl-f 则路径补全。&lt;/p&gt;
&lt;p&gt;举个例子，演示如何智能补全 C++ 标准库。与前面介绍的一般步骤一样，先调用 ctags 生成标准库的标签文件，再在 vim 中引入即可，最后编码时由相应插件实时搜索标签文件中的类或模板，显示匹配项：&lt;/p&gt;
&lt;p&gt;首先，获取 C++ 标准库源码文件。安装的 GNU C++ 标准库源码文件，openSUSE 可用如下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;zypper install libstdc++48-devel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装成功后，在 /usr/include/c++/4.8/ 可见到所有源码文件；&lt;/p&gt;
&lt;p&gt;接着，执行 ctags 生成标准库的标签文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /usr/include/c++/4.8
ctags -R --c++-kinds=+l+x+p --fields=+iaSl --extra=+q --language-force=c++ -f stdcpp.tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后，让 OmniCppComplete 成功识别标签文件中的标准库接口。C++ 标准库源码文件中使用了 _GLIBCXX_STD 名字空间（GNU C++ 标准库的实现是这样，如果你使用其他版本的标准库，需要自行查找对应的名字空间名称），标签文件里面的各个标签都嵌套在该名字空间下，所以，要让 OmniCppComplete 正确识别这些标签，必须显式告知 OmniCppComplete 相应的名字空间名称。在.vimrc中增加如下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let OmniCpp_DefaultNamespaces = ["_GLIBCXX_STD"]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后，在 vim 中引入该标签文件。在 .vimrc 中增加如下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set tags+=/usr/include/c++/4.8/stdcpp.tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;后续你就可以进行 C++ 标准库的代码补全，比如，在某个 string 对象名输入 . 时，vim 自动显示成员列表。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%9F%BA%E4%BA%8E%E6%A0%87%E7%AD%BE%E7%9A%84%20C%2B%2B%20%E6%A0%87%E5%87%86%E5%BA%93%E8%A1%A5%E5%85%A8.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%9F%BA%E4%BA%8E%E6%A0%87%E7%AD%BE%E7%9A%84%20C%2B%2B%20%E6%A0%87%E5%87%86%E5%BA%93%E8%A1%A5%E5%85%A8.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（基于标签的 C++ 标准库补全）
&lt;/div&gt;
&lt;p&gt;没明白？ -。-# 咱再来个例子，看看如何补全 linux 系统 API。与前面的标准库补全类似，唯一需要注意，linux 系统 API 头文件中使用了 GCC 编译器扩展语法，必须告诉 ctags 在生成标签时忽略之，否则将生产错误的标签索引。&lt;/p&gt;
&lt;p&gt;首先，获取 linux 系统 API 头文件。openSUSE 可用如下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;zypper install linux-glibc-devel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装成功后，在 /usr/include/ 中可见相关头文件；&lt;/p&gt;
&lt;p&gt;接着，执行 ctags 生成系统 API 的标签文件。linux 内核采用 GCC 编译，为提高内核运行效率，linux 源码文件中大量采用 GCC 扩展语法，这影响 ctags 生成正确的标签，必须借由 ctags 的 -I 命令参数告之忽略某些标签，若有多个忽略字符串之间用逗号分割。比如，在文件 unistd.h 中几乎每个API声明中都会出现 __THROW、__nonnull 关键字，前者目的是告诉 GCC 这些函数不会抛异常，尽量多、尽量深地优化这些函数，后者目的告诉 GCC 凡是发现调用这些函数时第一个实参为 nullptr 指针则将其视为语法错误，的确，使用这些扩展语法方便了我们编码，但却影响了 ctags 正常解析，这时可用 -I __THROW,__nonnull 命令行参数让 ctags 忽略这些语法扩展关键字：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /usr/include/
ctags -R --c-kinds=+l+x+p --fields=+lS -I __THROW,__nonnull -f sys.tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后，在 vim 中引入该标签文件。在 .vimrc 中增加如下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set tags+=/usr/include/sys.tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;从以上两个例子来看，不论是 C++ 标准库、boost、ACE这些重量级开发库，还是 linux 系统 API 均可遵循“下载源码（至少包括头文件）-执行 ctags 生产标签文件-引入标签文件”的流程实现基于标签的智能补全，若有异常，唯有如下两种可能：一是源码中使用了名字空间，借助 OmniCppComplete 插件的 OmniCpp_DefaultNamespaces 配置项解决；一是源码中使用了编译器扩展语法，借助 ctags 的 -I 参数解决（上例仅列举了少量 GCC 扩展语法，此外还有 _&lt;em&gt;attribute_malloc&lt;/em&gt;_、__wur 等等大量扩展语法，具体请参见 GCC 手册。以后，如果发现某个系统函数无法自动补全，十有八九是头文件中使用使用了扩展语法，先找到该函数完整声明，再将其使用的扩展语法加入 -I 列表中，最后运行 ctags 重新生产新标签文件即可）。&lt;/p&gt;
&lt;h4 name="user-content-5.3.2"&gt;&lt;a id="user-content-基于语义的智能补全" class="anchor" aria-hidden="true" href="#基于语义的智能补全"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基于语义的智能补全&lt;/h4&gt;
&lt;p&gt;对于智能补全只有轻度需求的用户来说，基于标签的补全能够很好地满足需求，但对于我这类重度需求用户来说，但凡涉及标签，就存在以下几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题一，必须定期调用 ctags 生成标签文件。代码在不停更新，每次智能补全前你得先手动生成标签文件，这还好，你可以借助前面的 indexer 在保存文件时更新标签文件；麻烦的是，你代码中要用到 C++ 标准库中的接口吧，那么事前你先得对整个标准库生成标签文件，这也还好，无非多个步骤；更昏人的是，你得使用了编译器语法扩展的库，你还得一条条找出具体使用了哪些扩展语言，再让 ctags 忽略执行语法关键字，真有够麻烦的；&lt;/li&gt;
&lt;li&gt;问题二，ctags 本身对 C++ 支持有限。面对函数形参、重载操作符、括号初始化的对象，ctags 有心无力；对于 C++11 新增 lambda 表达式、auto 类型推导更是不认识。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我需要更优的补全机制 —— 基于语义的智能补全。语义补全，实时探测你是否有补全需求，无须你定期生成标签，可解决问题一；语义补全，是借助编译器进行代码分析，只要编译器对 C++ 规范支持度高，不论标准库、类型推导，还是 boost 库中的智能指针都能补全。什么是语义分析补全？看下图：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90%E8%A1%A5%E5%85%A8.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90%E8%A1%A5%E5%85%A8.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（语义分析补全）
&lt;/div&gt;
代码中定义的 TCandyBar 类型只包括 3 个成员，但 clang_complete 能补全编译器根据 C++ 规范自动添加的两个重载操作符、一个默认构造函数、一个析构函数，这就是基于语义分析的智能补全。
&lt;p&gt;要进行语义分析，编译器必不可少。linux 上 GCC 和 clang 两大主流 C++ 编译器，基于不同编译器，开源社区分别创造出 GCCSense 和 clang_complete 两个语义补全插件，又得纠结选哪个 -。- ... &amp;lt;穿越&amp;gt; 请跳转至“源码安装编译器 clang”部分做两件事，一是按介绍安装好最新版 clang 及其标准库，二是看明白 clang 相较 GCC 的优势 &amp;lt;/穿越&amp;gt; ...&lt;/p&gt;
&lt;p&gt;我选 clang_complete，原因如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用难度低。clang 采用低耦合设计，语义分析结果（也就是 AST）能以接口形式供外围程序使用，无须任何调整，clang_complete 便能能轻松拿到 clang 输出的语义分析结果；而 GCC 采用高耦合设计，你必须结合补丁重新源码编译 GCC，才能让 GCCSense 接收到它的语义分析结果；&lt;/li&gt;
&lt;li&gt;维护时间长。clang_complete 最新更新为 13 年上，而 GCCSense 则是 09 年下；&lt;/li&gt;
&lt;li&gt;支持跨平台。clang_complete 支持所有平台，而 GCCSense 支持 UNIX-like，不支持 windows。（好啦，这点是我凑数的，我又不用 windows &amp;lt;_&amp;lt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;clang_complete 使用简单，在 vim 输入模式下，依次键入要补全的字符，需要弹出补全列表时，手工输入 &amp;lt;leader&amp;gt;tab。比如有如下代码片断：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;string name_yang = "yangyang.gnu";
string name_wang = "wangwang";
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我要补全这两个对象，可以先键入 n &amp;lt;leader&amp;gt;tab，这时 clang_complete 将罗列出所有以 n 开头的待选项，接着输入 ame_ 后剩下 name_yang 和 name_wang 两项，按需选择即可。&lt;/p&gt;
&lt;p&gt;到这个节目眼上，我应该先给出 clang_complete 的下载地址，再告诉你如何配置 .vimrc，然后给个截图收工，但是、但是，你知道我是个纠结症+完美症重度患者，虽然 clang_complete 相较 ctags+new-omni-completion 的模式有了质的飞跃，仍有雕琢余地：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法随键而全。补全动作有感知，要弹出候选列表菜单还得键入 &amp;lt;leader&amp;gt;tab，我希望插件能自动感知我的补全需求；&lt;/li&gt;
&lt;li&gt;无法模糊搜索。上例中，键入的字符要是少了那要出来一堆待选项，选起来眼睛累，多键入几个字符倒是可以让选项少些，但输入多了手又累。这是由于 clang_complete 采用的顺序匹配算法，只要改用子序列匹配算法（模糊搜索算法的一种）即可搞定，这样，我键入 ny 就只出现 name_yang，键入 nw 出现 name_wang；&lt;/li&gt;
&lt;li&gt;无法高速补全。补全列表速度不够快，clang_complete 由 python 编写，生成补全列表的速度有一定影响，再加上整个补全动作是在 vim GUI 主线程中执行，所以有时会导致 GUI 假死，我需要由静态语言编写插件内核、动态语言作为粘合剂的补全插件，提升效率；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;什么叫所需即所获？就是当你需要什么功能，它就能给你什么功能。YouCompleteMe（后简称 YCM，&lt;a href="https://github.com/Valloric/YouCompleteMe"&gt;https://github.com/Valloric/YouCompleteMe&lt;/a&gt; ），一个随键而全的、支持模糊搜索的、高速补全的插件，太棒了！YCM 由 google 公司搜索项目组的软件工程师 Strahinja Val Markovic 所开发，YCM 后端调用 libclang（以获取 AST，当然还有其他语言的语义分析库，我不关注）、前端由 C++ 开发（以提升补全效率）、外层由 python 封装（以成为 vim 插件），它可能是我见过安装最复杂的 vim 插件了。有了 YCM，基本上 clang_complete、AutoComplPop、Supertab、neocomplcache、UltiSnips、 Syntastic 可以再见了。&lt;/p&gt;
&lt;p&gt;要运行 YCM，需要 vim 版本至少达到 7.3.598，且支持 python2/3，参照“源码安装编辑器 vim”部分可满足；&lt;/p&gt;
&lt;p&gt;YCM 含有与 vim 交互的插件部分，以及与 libclang 交互的自身共享库两部分，整个安装过程如下：&lt;/p&gt;
&lt;p&gt;第一步，通过 vundle 安装 YCM 插件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Plugin 'Valloric/YouCompleteMe'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;随后进入 vim 执行 :PluginInstall。&lt;/p&gt;
&lt;p&gt;第二步，下载 libclang。你系统中可能已有现成的 libclang（自行源码编译或者发行套件中自带的），最好别用，YCM 作者强烈建议你下载 LLVM 官网的提供预编译二进制文件，以避免各种妖人问题。在 &lt;a href="http://llvm.org/releases/download.html" rel="nofollow"&gt;http://llvm.org/releases/download.html&lt;/a&gt; 找到最新版 LLVM，Pre-built Binaries 下选择适合你发行套件的最新版预编译二进制文件，下载并解压至 ~/downloads/clang+llvm；&lt;/p&gt;
&lt;p&gt;第三步，编译 YCM 共享库：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;zypper --no-refresh se python-devel python3-devel boost-devel llvm-clang-devel
cd ~/downloads/ 
mkdir ycm_build 
cd ycm_build 
cmake -G "Unix Makefiles" -DUSE_SYSTEM_BOOST=ON -DPATH_TO_LLVM_ROOT=~/downloads/clang+llvm/ .\
 ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp
cmake --build . --target ycm_core
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在 ~/.vim/bundle/YouCompleteMe/third_party/ycmd 中将生成 ycm_client_support.so、ycm_core.so、libclang.so 等三个共享库文件；&lt;/p&gt;
&lt;p&gt;按照惯例，我该介绍 YCM 的设置。&lt;/p&gt;
&lt;p&gt;设置一，YCM 后端调用 libclang 进行语义分析，而 libclang 有很多参数选项（如，是否支持 C++11 的 -std=c++11、是否把警告视为错误的 -Werror），必须有个渠道让 YCM 能告知 libclang，这可以在 .vimrc 中增加一个全局配置，但我有多个工程，每个工程使用的 libclang 参数选项不同岂不是每次都要调整 .vimrc？！YCM 采用更具弹性的方式，每个工程有一个名为 .ycm_extra_conf.py 的私有配置文件，在此文件中写入工程的编译参数选项。下面是个完整的例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import os 
import ycm_core 
flags = [ 
    '-std=c++11', 
    '-O0', 
    '-Werror', 
    '-Weverything', 
    '-Wno-documentation', 
    '-Wno-deprecated-declarations', 
    '-Wno-disabled-macro-expansion', 
    '-Wno-float-equal', 
    '-Wno-c++98-compat', 
    '-Wno-c++98-compat-pedantic', 
    '-Wno-global-constructors', 
    '-Wno-exit-time-destructors', 
    '-Wno-missing-prototypes', 
    '-Wno-padded', 
    '-Wno-old-style-cast',
    '-Wno-weak-vtables',
    '-x', 
    'c++', 
    '-I', 
    '.', 
    '-isystem', 
    '/usr/include/', 
] 
compilation_database_folder = '' 
if compilation_database_folder: 
  database = ycm_core.CompilationDatabase( compilation_database_folder ) 
else: 
  database = None 
SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ] 
def DirectoryOfThisScript(): 
  return os.path.dirname( os.path.abspath( __file__ ) ) 
def MakeRelativePathsInFlagsAbsolute( flags, working_directory ): 
  if not working_directory: 
    return list( flags ) 
  new_flags = [] 
  make_next_absolute = False 
  path_flags = [ '-isystem', '-I', '-iquote', '--sysroot=' ] 
  for flag in flags: 
    new_flag = flag 
    if make_next_absolute: 
      make_next_absolute = False 
      if not flag.startswith( '/' ): 
        new_flag = os.path.join( working_directory, flag ) 
    for path_flag in path_flags: 
      if flag == path_flag: 
        make_next_absolute = True 
        break 
     if flag.startswith( path_flag ): 
        path = flag[ len( path_flag ): ] 
        new_flag = path_flag + os.path.join( working_directory, path ) 
        break 
   if new_flag: 
      new_flags.append( new_flag ) 
  return new_flags 
def IsHeaderFile( filename ): 
  extension = os.path.splitext( filename )[ 1 ] 
  return extension in [ '.h', '.hxx', '.hpp', '.hh' ] 
def GetCompilationInfoForFile( filename ): 
  if IsHeaderFile( filename ): 
    basename = os.path.splitext( filename )[ 0 ] 
    for extension in SOURCE_EXTENSIONS: 
      replacement_file = basename + extension 
      if os.path.exists( replacement_file ): 
        compilation_info = database.GetCompilationInfoForFile( replacement_file ) 
        if compilation_info.compiler_flags_: 
          return compilation_info 
    return None 
  return database.GetCompilationInfoForFile( filename ) 
def FlagsForFile( filename, \*\*kwargs ): 
  if database: 
    compilation_info = GetCompilationInfoForFile( filename ) 
    if not compilation_info: 
      return None 
   final_flags = MakeRelativePathsInFlagsAbsolute( 
      compilation_info.compiler_flags_, 
      compilation_info.compiler_working_dir_ ) 
  else: 
    relative_to = DirectoryOfThisScript() 
    final_flags = MakeRelativePathsInFlagsAbsolute( flags, relative_to ) 
 return { 
    'flags': final_flags, 
    'do_cache': True 
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;基本上，根据你工程情况只需调整 .ycm_extra_conf.py 的 flags 部分，前面说过， flags 用于 YCM 调用 libclang 时指定的参数，通常应与构建脚本保持一致（如，CMakeLists.txt）。flags 会产生两方面影响，一是影响 YCM 的补全内容、一是影响代码静态分析插件 syntastic 的显示结果（详见后文“静态分析器集成”）。另外，你得注意，该配置文件其实就是个 python 脚本，python 把缩进视为语法，如果你是直接拷贝文中的 .ycm_extra_conf.py 小心缩进部分。&lt;/p&gt;
&lt;p&gt;设置二，在 .vimrc 中增加如下配置信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" YCM 补全菜单配色
" 菜单
highlight Pmenu ctermfg=2 ctermbg=3 guifg=#005f87 guibg=#EEE8D5
" 选中项
highlight PmenuSel ctermfg=2 ctermbg=3 guifg=#AFD700 guibg=#106900
" 补全功能在注释中同样有效
let g:ycm_complete_in_comments=1
" 允许 vim 加载 .ycm_extra_conf.py 文件，不再提示
let g:ycm_confirm_extra_conf=0
" 开启 YCM 标签补全引擎
let g:ycm_collect_identifiers_from_tags_files=1
" 引入 C++ 标准库tags
set tags+=/data/misc/software/misc./vim/stdcpp.tags
" YCM 集成 OmniCppComplete 补全引擎，设置其快捷键
inoremap &amp;lt;leader&amp;gt;; &amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;
" 补全内容不以分割子窗口形式出现，只显示补全列表
set completeopt-=preview
" 从第一个键入字符就开始罗列匹配项
let g:ycm_min_num_of_chars_for_completion=1
" 禁止缓存匹配项，每次都重新生成匹配项
let g:ycm_cache_omnifunc=0
" 语法关键字补全			
let g:ycm_seed_identifiers_with_syntax=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中大部分内容从注释就能了解，粗体配置项见下文。&lt;/p&gt;
&lt;p&gt;YCM 集成了多种补全引擎：语义补全引擎、标签补全引擎、OmniCppComplete 补全引擎、其他补全引擎。&lt;/p&gt;
&lt;p&gt;YCM 的语义补全。YCM 不会在每次键入事件上触发语义补全，YCM 作者认为这会影响补全效率而且没什么必要（我持保留意见），YCM 只在如下两种场景下触发语义补全：一是补全标识符所在文件必须在 buffer 中（即，文件已打开）；一是在对象后键入 .、指针后键入 -&amp;gt;、名字空间后键入 ::。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/YCM%20%E7%9A%84%E8%AF%AD%E4%B9%89%E8%A1%A5%E5%85%A8.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/YCM%20%E7%9A%84%E8%AF%AD%E4%B9%89%E8%A1%A5%E5%85%A8.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（YCM 的语义补全）
&lt;/div&gt;
上图中，我先尝试补全类 MyClass 失败，接着我把 MyClass 所在的文件 MyClass.h 打开后切回 main.cpp 再次补全类 MyClass 成功，然后在对象 mc 后键入 . 进行成员补全；
&lt;p&gt;YCM 的标签补全。语义补全的确强大，但受限挺多，如果我要补全 STL 中的泛型算法 count_if() 岂不是还要先打开库头文件 algorithm？不用，YCM 也支持标签补全。要使用标签补全，你需要做两件事：一是让 YCM 启用标签补全引擎、二是引入 tag 文件，具体设置如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 开启 YCM 标签引擎
let g:ycm_collect_identifiers_from_tags_files=1
" 引入 C++ 标准库tags
set tags+=/data/misc/software/misc./vim/stdcpp.tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中，工程自身代码的标签可借助 indexer 插件自动生成自动引入，但由于 YCM 要求 tag 文件中必须含有 language:&amp;lt;X&amp;gt; 字段（ctags 的命令行参数 --fields 必须含有 l 选项），所有必须通过 indexer_ctagsCommandLineOptions 告知 indexer 调用 ctags 时注意生成该字段，具体设置参见“代码导航”章节；前面章节介绍过如何生成、引入 C++ 标准库的 tag 文件，设置成正确路径即可。另外，由于引入过多 tag 文件会导致 vim 变得非常缓慢，我的经验是，只引入工程自身（indexer 自动引入）和 C++ 标准库的标签（上面配置的最后一行）。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/YCM%20%E7%9A%84%E6%A0%87%E7%AD%BE%E8%A1%A5%E5%85%A8.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/YCM%20%E7%9A%84%E6%A0%87%E7%AD%BE%E8%A1%A5%E5%85%A8.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（YCM 的标签补全）
&lt;/div&gt;
&lt;p&gt;YCM 的 OmniCppComplete 补全引擎。我要进行 linux 系统开发，打开系统函数头文件觉得麻烦（也就无法使用 YCM 的语义补全），引入系统函数 tag 文件又影响 vim 速度（也就无法使用 YCM 的标签补全），这种情况又如何让 YCM 补全呢？WOW，别担心，YCM 还有 OmniCppComplete 补全引擎，只要你在当前代码文件中 #include 了该标识符所在头文件即可。通过 OmniCppComplete 补全无法使用 YCM 的随键而全的特性，你需要手工告知 YCM 需要补全，OmniCppComplete 的默认补全快捷键为 &amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;，不太方便，我重新设定为 &amp;lt;leader&amp;gt;;，如前面配置所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;inoremap &amp;lt;leader&amp;gt;; &amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;比如，我要补全 fork()，该函数所在头文件为 unistd.h，正确添加 #include &amp;lt;unistd.h&amp;gt; 后即可补全。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/YCM_%E7%9A%84_OmniCppComplete%20%E8%A1%A5%E5%85%A8%E5%BC%95%E6%93%8E.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/YCM_%E7%9A%84_OmniCppComplete%20%E8%A1%A5%E5%85%A8%E5%BC%95%E6%93%8E.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（YCM 的 OmniCppComplete 补全引擎）
&lt;/div&gt;
其实，只要你正确插入头文件，YCM 的 OmniCppComplete 补全引擎可以替代语义引擎和标签引擎，比如，上面的 MyClass 在不打开 MyClass.h 情况下也可由OmniCppComplete（键入 \;）补全：
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/OmniCppComplete%20%E6%9B%BF%E4%BB%A3%E8%AF%AD%E4%B9%89%E3%80%81%E6%A0%87%E7%AD%BE%E8%A1%A5%E5%85%A8.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/OmniCppComplete%20%E6%9B%BF%E4%BB%A3%E8%AF%AD%E4%B9%89%E3%80%81%E6%A0%87%E7%AD%BE%E8%A1%A5%E5%85%A8.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（OmniCppComplete 替代语义、标签补全）
&lt;/div&gt;
&lt;p&gt;YCM 的其他补全。YCM 还集成了其他辅助补全引擎，可以补全路径、头文件、甚至可以在注释中继续补全。如下图：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/YCM%20%E7%9A%84%E5%85%B6%E4%BB%96%E8%A1%A5%E5%85%A8.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/YCM%20%E7%9A%84%E5%85%B6%E4%BB%96%E8%A1%A5%E5%85%A8.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（YCM 的其他补全）
&lt;/div&gt;
&lt;p&gt;从我的经验来看，要想获得最好的补全体验，你应综合使用 YCM 的各种补全引擎！&lt;/p&gt;
&lt;p&gt;另外，YCM 不愧是 google 工程师开发的，它的匹配项搜索方式非常智能，你无须从前往后逐一输入，YCM 会对你输入的内容进行模糊搜索，如下：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/YCM%20%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/YCM%20%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（YCM 模糊搜索）
&lt;/div&gt;
此外，YCM 对大小写也非常智能，当你输入全小写时 YCM 对大小写不敏感，当然输入中有大写字母时 YCM 对大小写敏感：
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/YCM%20%E5%A4%A7%E5%B0%8F%E5%86%99%E6%99%BA%E8%83%BD%E6%95%8F%E6%84%9F.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/YCM%20%E5%A4%A7%E5%B0%8F%E5%86%99%E6%99%BA%E8%83%BD%E6%95%8F%E6%84%9F.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（YCM 大小写智能敏感）
&lt;/div&gt;
上图中，当我键入 tia 时这两个对象均匹配，接着输入大写 L 时就只剩  This_Is_A_Long_Name 匹配。
&lt;h3 name="user-content-5.4"&gt;&lt;a id="user-content-54-由接口快速生成实现框架" class="anchor" aria-hidden="true" href="#54-由接口快速生成实现框架"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.4 由接口快速生成实现框架&lt;/h3&gt;
&lt;p&gt;在 *.h 中写成员函数的声明，在 *.cpp 中写成员函数的定义，很麻烦，我希望能根据类声明自动生成类实现的代码框架 —— vim-protodef（&lt;a href="https://github.com/derekwyatt/vim-protodef"&gt;https://github.com/derekwyatt/vim-protodef&lt;/a&gt; ）。vim-protodef 依赖 FSwitch（&lt;a href="https://github.com/derekwyatt/vim-fswitch"&gt;https://github.com/derekwyatt/vim-fswitch&lt;/a&gt; ），请一并安装。请增加如下设置信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 成员函数的实现顺序与声明顺序一致
let g:disable_protodef_sorting=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;protodef 根据文件名进行关联，比如，MyClass.h 与 MyClass.cpp 是一对接口和实现文件，MyClass.h 中接口为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 设置 pullproto.pl 脚本路径
let g:protodefprotogetter='~/.vim/bundle/protodef/pullproto.pl'
" 成员函数的实现顺序与声明顺序一致
let g:disable_protodef_sorting=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;pullproto.pl 是 protodef 自带的 perl 脚本，默认位于 ~/.vim 目录，由于改用 pathogen 管理插件，所以路径需重新设置。&lt;/p&gt;
&lt;p&gt;protodef 根据文件名进行关联，比如，MyClass.h 与 MyClass.cpp 是一对接口和实现文件，MyClass.h 中接口为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class MyClass 
{
    public:
        void printMsg (int = 16);
        virtual int getSize (void) const;
        virtual void doNothing (void) const = 0;
        virtual ~MyClass ();
    private:
        int num_;
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在 MyClass.cpp 中生成成员函数的实现框架，如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E6%8E%A5%E5%8F%A3%E7%94%9F%E6%88%90%E5%AE%9E%E7%8E%B0.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E6%8E%A5%E5%8F%A3%E7%94%9F%E6%88%90%E5%AE%9E%E7%8E%B0.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（接口生成实现）
&lt;/div&gt;
MyClass.cpp 中我键入 protodef 定义的快捷键 \PP，自动生成了函数框架。
&lt;p&gt;上图既突显了 protodef 的优点：优点一，virtual、默认参数等应在函数声明而不应在函数定义中出现的关键字，protodef 已为你过滤；优点二：doNothing() 这类纯虚函数不应有实现的自动被 protodef 忽略。同时也暴露了 protodef 问题：printMsg(int = 16) 的函数声明变更为 printMsg(unsigned)，protodef 无法自动为你更新，它把更改后的函数声明视为新函数添加在实现文件中，老声明对应的实现仍然保留。&lt;/p&gt;
&lt;p&gt;关于缺点，先我计划优化下 protodef 源码再发给原作者，后来想想，protodef 借助 ctags 代码分析实现的，本来就存在某些缺陷，好吧，后续我找个时间写个与 protodef 相同功能但对 C++ 支持更完善的插件，内部当然借助 libclang 啦。&lt;/p&gt;
&lt;p&gt;另外，每个人都有自己的代码风格，比如，return 语句我喜欢&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;return(TODO);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;所以，调整了 protodef.vim 源码，把 239、241、244、246 四行改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;call add(full, "    return(TODO);") 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;比如，函数名与形参列表间习惯添加个空格&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;void MyClass::getSize (void);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;所以，把 217 行改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let proto = substitute(proto, '(\_.*$', ' (' . params . Tail, '') 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 name="user-content-5.5"&gt;&lt;a id="user-content-55-库信息参考" class="anchor" aria-hidden="true" href="#55-库信息参考"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.5 库信息参考&lt;/h3&gt;
&lt;p&gt;有过 win32 SDK 开发经验的朋友对 MSDN 或多或少有些迷恋吧，对于多达 7、8 个参数的 API，如果没有一套函数功能描述、参数讲解、返回值说明的文档，那么软件开发将是人间炼狱。别急，vim 也能做到。&lt;/p&gt;
&lt;p&gt;要使用该功能，系统中必须先安装对应 man。安装 linux 系统函数 man，先下载（&lt;a href="https://www.kernel.org/doc/man-pages/download.html" rel="nofollow"&gt;https://www.kernel.org/doc/man-pages/download.html&lt;/a&gt; ），解压后将 man1/ 至 man8/ 拷贝至 /usr/share/man/，运行 man fork 确认是否安装成功。安装 C++ 标准库 man，先下载（ftp://GCC.gnu.org/pub/GCC/libstdc++/doxygen/ ），选择最新 libstdc++-api-X.X.X.man.tar.bz2，解压后将 man3/ 拷贝至 /usr/share/man/，运行 man std::vector 确认是否安装成功；&lt;/p&gt;
&lt;p&gt;vim 内置的 man.vim 插件可以查看已安装的 man，需在 .vimrc 中配置启动时自动加载该插件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 启用:Man命令查看各类man信息
source $VIMRUNTIME/ftplugin/man.vim
" 定义:Man命令查看各类man信息的快捷键
nmap &amp;lt;Leader&amp;gt;man :Man 3 &amp;lt;cword&amp;gt;&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要查看时，在 vim 中键入输入 :Man fork 或者 :Man std::vector （注意大小写）即可在新建分割子窗口中查看到函数参考信息，为了方便，我设定了快捷键 &amp;lt;Leader&amp;gt;man，这样，光标所在单词将被传递给 :Man 命令，不用再手工键入，如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%BA%93%E4%BF%A1%E6%81%AF%E5%8F%82%E8%80%83.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%BA%93%E4%BF%A1%E6%81%AF%E5%8F%82%E8%80%83.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（库信息参考）
&lt;/div&gt;
&lt;p&gt;另外，我们编码时通常都是先声明使用 std 名字空间，在使用某个标准库中的类时前不会添加 std:: 前缀，所以 vim 取到的当前光标所在单词中也不会含有 std:: 前缀，而，C++ 标准库所有 man 文件名均有 std:: 前缀，所以必须将所有文件的 std:: 前缀去掉才能让 :Man 找到正确的 man 文件。在 libstdc++-api-X.X.X.man/man3/ 执行批量重命名以取消所有 man文件的 std:: 前缀：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rename "std::" "" std::\* 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;顺便说下，很多人以为 rename 命令只是 mv 命令的简单封装，非也，在重命名方面，rename 太专业了，远非 mv 可触及滴，就拿上例来说，mv 必须结合 sed 才能达到这样的效果。&lt;/p&gt;
&lt;p&gt;我认为，好的库信息参考手册不仅有对参数、返回值的描述，还应有使用范例，上面介绍的 linux 系统函数 man 做到了，C++ 标准库 man 还未达到我要求。所以，若有网络条件，我更愿意选择查看在线参考，C++ 推荐 &lt;a href="http://www.cplusplus.com/reference/" rel="nofollow"&gt;http://www.cplusplus.com/reference/&lt;/a&gt; 、&lt;a href="http://en.cppreference.com/w/Cppreference:Archives" rel="nofollow"&gt;http://en.cppreference.com/w/Cppreference:Archives&lt;/a&gt; ，前者范例多、后者更新勤；UNIX 推荐 &lt;a href="http://pubs.opengroup.org/onlinepubs/9699919799/functions/contents.html" rel="nofollow"&gt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/contents.html&lt;/a&gt; 、&lt;a href="http://man7.org/linux/man-pages/dir_all_alphabetic.html" rel="nofollow"&gt;http://man7.org/linux/man-pages/dir_all_alphabetic.html&lt;/a&gt; ，前者基于最新 SUS（Single UNIX Specification，单一 UNIX 规范）、后者偏重 linux 扩展。&lt;/p&gt;
&lt;h2 name="user-content-6"&gt;&lt;a id="user-content-6-工程管理" class="anchor" aria-hidden="true" href="#6-工程管理"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6 工程管理&lt;/h2&gt;
&lt;p&gt;我虽不要求达不到软件工程的高度，但基本的管理还是有必要的，比如，工程文件的管理、多文档编辑、工程环境的保存与恢复。&lt;/p&gt;
&lt;h3 name="user-content-6.1"&gt;&lt;a id="user-content-61-工程文件浏览" class="anchor" aria-hidden="true" href="#61-工程文件浏览"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6.1 工程文件浏览&lt;/h3&gt;
&lt;p&gt;我通常将工程相关的文档放在同个目录下，通过 NERDtree （&lt;a href="https://github.com/scrooloose/nerdtree"&gt;https://github.com/scrooloose/nerdtree&lt;/a&gt; ）插件可以查看文件列表，要打开哪个文件，光标选中后回车即可在新 buffer 中打开。&lt;/p&gt;
&lt;p&gt;安装好 NERDtree 后，请将如下信息加入.vimrc中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 使用 NERDTree 插件查看工程文件。设置快捷键，速记：file list
nmap &amp;lt;Leader&amp;gt;fl :NERDTreeToggle&amp;lt;CR&amp;gt;
" 设置NERDTree子窗口宽度
let NERDTreeWinSize=32
" 设置NERDTree子窗口位置
let NERDTreeWinPos="right"
" 显示隐藏文件
let NERDTreeShowHidden=1
" NERDTree 子窗口中不显示冗余帮助信息
let NERDTreeMinimalUI=1
" 删除文件时自动删除文件对应 buffer
let NERDTreeAutoDeleteBuffer=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;常用操作：回车，打开选中文件；r，刷新工程目录文件列表；I（大写），显示/隐藏隐藏文件；m，出现创建/删除/剪切/拷贝操作列表。键入 &amp;lt;leader&amp;gt;fl 后，右边子窗口为工程项目文件列表，如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（工程文件浏览）
&lt;/div&gt;
&lt;h3 name="user-content-6.2"&gt;&lt;a id="user-content-62-多文档编辑" class="anchor" aria-hidden="true" href="#62-多文档编辑"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6.2 多文档编辑&lt;/h3&gt;
&lt;p&gt;vim 的多文档编辑涉及三个概念：buffer、window、tab，这三个事物与我们常规理解意义大相径庭。vim 把加载进内存的文件叫做 buffer，buffer 不一定可见；若要 buffer 要可见，则必须通过 window 作为载体呈现；同个看面上的多个 window 组合成一个 tab。一句话，vim 的 buffer、window、tab 你可以对应理解成视角、布局、工作区。我所用到的多文档编辑场景几乎不会涉及 tab，重点关注 buffer、window。&lt;/p&gt;
&lt;p&gt;vim 中每打开一个文件，vim 就对应创建一个 buffer，多个文件就有多个 buffer，但默认你只看得到最后 buffer 对应的 window，通过插件 MiniBufExplorer（&lt;a href="https://github.com/fholgado/minibufexpl.vim"&gt;https://github.com/fholgado/minibufexpl.vim&lt;/a&gt; ，原始版本已停止更新且问题较多，该版本是其他人 fork 的新项目）可以把所有 buffer 罗列出来，并且可以显示多个 buffer 对应的 window。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/buffer%20%E5%88%97%E8%A1%A8.png"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/buffer%20%E5%88%97%E8%A1%A8.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（buffer 列表）
&lt;/div&gt;
我在 vim 中打开了 main.cpp、CMakeLists.txt、MyClass.cpp、MyClass.h 这四个文件，最上面子窗口（buffer 列表）罗列出的 [1:main.cpp][4:CMakeLists.txt][5:MyClass.cpp][6:MyClass.h] 就是对应的四个 buffer。当前显示了 main.cpp 和 MyClass.h 的两个 buffer，分别对应绿色区域和橙色区域的 window，这下对 buffer 和 window 有概念了吧。图中关于 buffer 列表再说明两点：
&lt;ul&gt;
&lt;li&gt;* 表示当前有 window 的 buffer，换言之，有 * 的 buffer 是可见的；! 表示当前正在编辑的 window；&lt;/li&gt;
&lt;li&gt;你注意到 buffer 序号 1 和 4 不连续的现象么？只要 vim 打开一个 buffer，序号自动增一，中间不连续有几个可能：可能一，打开了 1、2、3、4 后，用户删除了 2、3 两个 buffer，剩下 1、4；可能二，先打开了其他插件的窗口（如，tagbar）后再打开代码文件；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置：将如下信息加入 .vimrc 中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 显示/隐藏 MiniBufExplorer 窗口
map &amp;lt;Leader&amp;gt;bl :MBEToggle&amp;lt;cr&amp;gt;
" buffer 切换快捷键
map &amp;lt;C-Tab&amp;gt; :MBEbn&amp;lt;cr&amp;gt;
map &amp;lt;C-S-Tab&amp;gt; :MBEbp&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;操作：一般通过 NERDtree 查看工程文件列表，选择打开多个代码文件后，MiniBufExplorer 在顶部自动创建 buffer 列表子窗口。通过前面配置，ctrl-tab 正向遍历 buffer，ctrl-shift-tab 逆向遍历（光标必须在 buffer 列表子窗口外）；在某个 buffer 上键入 d 删除光标所在的 buffer（光标必须在 buffer 列表子窗口内）：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%A4%9A%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%A4%9A%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（多文档编辑）
&lt;/div&gt;
&lt;p&gt;默认时，打开的 window 占据几乎整个 vim 编辑区域，如果你想把多个 window 平铺成多个子窗口可以使用 MiniBufExplorer 的 s 和 v 命令：在某个 buffer 上键入 s 将该 buffer 对应 window 与先前 window 上下排列，键入 v 则左右排列（光标必须在 buffer 列表子窗口内）。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%9C%A8%E5%AD%90%E7%AA%97%E5%8F%A3%E4%B8%AD%E7%BC%96%E8%BE%91%E5%A4%9A%E6%96%87%E6%A1%A3.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%9C%A8%E5%AD%90%E7%AA%97%E5%8F%A3%E4%B8%AD%E7%BC%96%E8%BE%91%E5%A4%9A%E6%96%87%E6%A1%A3.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（在子窗口中编辑多文档）
&lt;/div&gt;
图中，通过 vim 自身的 f 名字查找 buffer 序号可快速选择需要的 buffer。另外，编辑单个文档时，不会出现 buffer 列表。
&lt;h3 name="user-content-6.3"&gt;&lt;a id="user-content-63-环境恢复" class="anchor" aria-hidden="true" href="#63-环境恢复"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6.3 环境恢复*&lt;/h3&gt;
&lt;p&gt;vim 的编辑环境保存与恢复是我一直想要的功能，我希望每当重新打开 vim 时恢复：已打开文件、光标位置、undo/redo、书签、子窗口、窗口大小、窗口位置、命令历史、buffer 列表、代码折叠。vim 文档说 viminfo 特性可以恢复书签、session 特性可以恢复书签外的其他项，所以，请确保你的 vim 支持这两个特性：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim --version | grep mksession
vim --version | grep viminfo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果编译 vim 时添加了 --with-features=huge 选项那就没问题。&lt;/p&gt;
&lt;p&gt;一般说来，保存/恢复环境步骤如下。&lt;/p&gt;
&lt;p&gt;第一步，保存所有文档：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:wa
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第二步，借助 viminfo 和 session 保存当前环境：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:mksession! my.vim
:wviminfo! my.viminfo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第三步，退出 vim：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:qa
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第四步，恢复环境，进入 vim 后执行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:source my.vim
:rviminfo my.viminfo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;具体能保存哪些项，可由 sessionoptions 指定，另外，前面几步可以设定快捷键，在 .vimrc 中增加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 设置环境保存项
set sessionoptions="blank,buffers,globals,localoptions,tabpages,sesdir,folds,help,options,resize,winpos,winsize"
" 保存 undo 历史
set undodir=~/.undo_history/
set undofile
" 保存快捷键
map &amp;lt;leader&amp;gt;ss :mksession! my.vim&amp;lt;cr&amp;gt; :wviminfo! my.viminfo&amp;lt;cr&amp;gt;
" 恢复快捷键
map &amp;lt;leader&amp;gt;rs :source my.vim&amp;lt;cr&amp;gt; :rviminfo my.viminfo&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样，简化第二步、第四步操作。另外，sessionoptions 无法包含 undo 历史，你得先得手工创建存放 undo 历史的目录（如，.undo_history/）再通过开启 undofile 进行单独设置，一旦开启，每次写文件时自动保存 undo 历史，下次加载在文件时自动恢复所有 undo 历史，不再由 :mksession/:wviminfo 和 :source/:rviminfo 控制。&lt;/p&gt;
&lt;p&gt;按此操作，并不能像 vim 文档中描述的那样能保存所有环境，比如，书签、代码折叠、命令历史都无法恢复。这和我预期存在较大差距，暂且用用吧，找个时间再深入研究！&lt;/p&gt;
&lt;h2 name="user-content-7"&gt;&lt;a id="user-content-7-工具链集成" class="anchor" aria-hidden="true" href="#7-工具链集成"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7 工具链集成&lt;/h2&gt;
&lt;p&gt;既然我们要把 vim 打造成 IDE，那必须得集成编译器、构建工具、静态分析器、动态调试器，当然，你可能还需要版本控制、重构工具等等，我暂时还好。&lt;/p&gt;
&lt;h3 name="user-content-7.1"&gt;&lt;a id="user-content-71-编译器构建工具集成" class="anchor" aria-hidden="true" href="#71-编译器构建工具集成"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7.1 编译器/构建工具集成&lt;/h3&gt;
&lt;p&gt;先说下编译器和构建工具。vim 再强大也只能是个优秀的编辑器而非编译器，它能高效地完成代码编辑工作，但必须通过其他外部命令实现将代码转换为二进制可执行文件；一旦工程上规模，你不可能单个单个文件编译，这时构建工具就派上场了。&lt;/p&gt;
&lt;h4 name="user-content-7.1.1"&gt;&lt;a id="user-content-代码编译" class="anchor" aria-hidden="true" href="#代码编译"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码编译&lt;/h4&gt;
&lt;p&gt;GCC 是 linux 上 C/C++ 编译器的事实标准，几乎所有发行套件都默认安装，它很好但不是最好：编译错误提示信息可读性不够（特别对于 C++ 模板错误信息基本就是读天书）、基于 GCC 的二次开发困难重重。我需要更优秀的 C++ 编译器。&lt;/p&gt;
&lt;p&gt;Stanley B. Lippman 先生所推荐宇宙最强 C++ 编译器 —— LLVM/clang。Stanley 何许人也？不是吧，你玩 C++ 居然不认识他。C++ 世界二号人物，当年在贝尔实验室，Bjarne Stroustrup 构思了 C++ 功能框架，Stanley Lippman 实现了第一个版本。还无感？好吧，他是《C++ Primer》的作者。说了大神，再说说大神推荐的编译器。&lt;/p&gt;
&lt;p&gt;LLVM 出自伊利诺伊大学研究项目，由 google 和苹果公司赞助。LLVM 的存在只为两个目的：一是尽可能地模块化现有代码以方便在此基础上进行二次开发、一是提供比传统构建工具链更好的用户体验。LLVM 是个很大很大的项目群，几乎把从编译到调试的各个构建环节都重新实现了一遍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;机器码生成方面：包含 LLVM core 子项目， LLVM core 能把满足它约定的中间语言翻译为高质量的机器码；&lt;/li&gt;
&lt;li&gt;编译器方面：C/C++ 编译器 clang、接管 GCC 生成的 AST 并进行后续机器码生成的后端编译器 dragonegg；&lt;/li&gt;
&lt;li&gt;调试器方面：增强处理模板/重载/多线程等等特性的调试器 LLDB、能根据程序 bug 生成测试用例甚至给出修正代码的符号虚拟机 klee；&lt;/li&gt;
&lt;li&gt;链接器方面：能更好地处理符号链接的链接器 lld；&lt;/li&gt;
&lt;li&gt;标准库方面：满足最新 C++ 规范的高性能实现标准库 libc++ 和 libc++ ABI、OpenCL 标准库的高性能实现 libclc；&lt;/li&gt;
&lt;li&gt;运行期环境方面：支持 OpenMP 规范的运行期环境、Java 和 .NET 的虚拟机 vmkit；&lt;/li&gt;
&lt;li&gt;代码优化方面：用于提升并行计算性能的 polly、针对内存安全检查的调优工具 SAFECode；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;颤抖吧，小伙伴们！&lt;/p&gt;
&lt;p&gt;我们重点介绍 clang 子项目，clang 把标准 C/C++ 代码转换为中间语言，换言之，前端 clang + 后端 LLVM（后简称 LLVM/clang）就是一款可替代 GCC 的优秀编译器。相较 GCC，LLVM/clang 有众多优势，尤其以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;错误信息可读性强。能指出哪行、哪列有错误，并且用波浪线突显出来；另外，尽可能给出修改建议（比如提示你是否拼写错误）；最重要的是对 C++ 模板相关语法错误提示非常友好；（注，GCC 4.8 开始学习 clang 优化错误信息可读性）&lt;/li&gt;
&lt;li&gt;编译速度快且占用资源少。编译速度是 GCC 的 2.5 倍，内存消耗只有 GCC 的 1/5；&lt;/li&gt;
&lt;li&gt;兼容且扩充 GCC。clang 支持 GCC 的所有编译参数，也就是说，使用 GCC 开发的项目，你只需把 makefile 中使用的编译器从 GCC 改为 clang 即可，无须大面积调整构建系统脚本即可重新编译；另外，clang 还对 GCC 的编译参数进行了人性化扩展，比如，GCC 无法打开所有编译警告（-Wall、-Wextra 不够滴），clang 只需 -Weverything；&lt;/li&gt;
&lt;li&gt;高度抽象的模块化设计。弱耦合性带来的模块高度复用、二次开发非常容易，比如，前面介绍的基于语义的 C/C++ 代码补全插件 YouCompleteMe，就是借助 libclang 库实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还在担心采用 clang 编译的源码移到 GCC 下无法编译？安啦，没问题的，你无非担心四方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编译参数是否兼容？前面说过，clang 全面兼容 GCC，所以编译参数完全兼容；&lt;/li&gt;
&lt;li&gt;语言扩展是否兼容？只要不是像 linux 内核那样大规模采用各种复杂语言扩展属性，一般项目中用到的简单扩展是没问题的；&lt;/li&gt;
&lt;li&gt;标准库接口是否兼容？标准库接口是 C++ 规范中指定的，根本不存在标准库接口不兼容一说；&lt;/li&gt;
&lt;li&gt;标准库动/静态库符号是否兼容？你只要确保采用 clang 的标准库头文件对应链接 clang 的动态链接库、采用 GCC 的标准库头文件对应链接 GCC 的动态链接库的要求就不会出现问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在源码安装 clang 前，你需先自行安装 GCC，两个目的，一是你得有个编译器来编译编译器 clang （呵呵，绕了吧），二是其他人的项目可能会用到 GCC。&lt;/p&gt;
&lt;p&gt;下载 LLVM、clang 及辅助库源码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/downloads 
# Checkout LLVM
svn co http://llvm.org/svn/llvm-project/llvm/trunk llvm 
# Checkout Clang
cd llvm/tools 
svn co http://llvm.org/svn/llvm-project/cfe/trunk clang 
cd ../.. 
# Checkout extra Clang Tools
cd llvm/tools/clang/tools 
svn co http://llvm.org/svn/llvm-project/clang-tools-extra/trunk extra 
cd ../../../.. 
# Checkout Compiler-RT
cd llvm/projects 
svn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt 
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;关掉其他应用，尽量多的系统资源留给 GCC 编译 clang 源码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir build
cd build
cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ../llvm
make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来，你先洗个澡，再约个会，回来应该编译好了（thinkpad T410I，CPU 奔腾双核 P6000，MEM 4G DDRIII，耗时 2 小时）。确认下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;clang --version 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;玩 C/C++ 你肯定要用到标准库。概念上，GCC 配套的标准库涉及 libstdc++ 和 libsupc++ 两个子库，前者是接口层（即，上层的封装），后者是实现层（即，底层的具体实现），对应实物文件，你得需要两个子库的头文件和动态链接库（*.so）。openSUSE 的安装源中有，直接安装头文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;zypper in libstdc++47-devel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;位于 /usr/include/c++/4.7/，接着安装链接库&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;zypper in libstdc++6
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;位于 /usr/lib/libstdc++.so.6。呃，是滴，libstdc++、libsupc++ 两个子库的相关文件是合并一起安装的。&lt;/p&gt;
&lt;p&gt;对应到 clang 的标准库，libc++（接口层）和 libc++abi（实现层）也需要安装头文件和动态链接库（*.so）。openSUSE 的安装源中并无 libc++，头文件和动态链接库只能源码安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/downloads/ 
svn co http://llvm.org/svn/llvm-project/libcxx/trunk libcxx 
cd libcxx/lib 
./buildit 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;头文件已经生成到 ~/downloads/libcxx/include/，要让 clang 找到必须复制到 /usr/include/c++/v1/&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cp -r ~/downloads/libcxx/include/ /usr/include/c++/v1/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*.so 文件已生成 ~/downloads/libcxx/lib/libc++.so.1.0，要让 clang 访问必须复制到 /usr/lib/，并创建软链接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ln -s ~/downloads/libcxx/lib/libc++.so.1.0 ~/downloads/libcxx/lib/libc++.so.1
ln -s ~/downloads/libcxx/lib/libc++.so.1.0 ~/downloads/libcxx/lib/libc++.so
cp ~/downloads/libcxx/lib/libc++.so* /usr/lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;类似，源码安装 libc++abi 的头文件和动态链接库：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/downloads/ 
svn co http://llvm.org/svn/llvm-project/libcxxabi/trunk libcxxabi 
cd libcxxabi/lib 
./buildit 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;头文件已经生成到 ~/downloads/libcxxabi/include/，要让 clang 找到必须复制到 /usr/include/c++/v1/&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cp -r ~/downloads/libcxxabi/include/ /usr/include/c++/v1/
\*.so 文件已生成 ~/downloads/libcxx/lib/libc++abi.so.1.0，要让 clang 访问必须复制到 /usr/lib/，并创建软链接
ln -s ~/downloads/libcxxabi/lib/libc++abi.so.1.0 ~/downloads/libcxxabi/lib/libc++abi.so.1
ln -s ~/downloads/libcxxabi/lib/libc++abi.so.1.0 ~/downloads/libcxxabi/lib/libc++abi.so
cp ~/downloads/libcxxabi/lib/libc++abi.so\* /usr/lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;后续可以通过如下选项进行代码编译：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;clang++ -std=c++11 -stdlib=libc++ -Werror -Weverything -Wno-disabled-macro-expansion -Wno-float-equal -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-global-constructors -Wno-exit-time-destructors -Wno-missing-prototypes -Wno-padded -Wno-old-style-cast -lc++ -lc++abi main.cpp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这一大波编译选项很崩溃么 @_@！我来简单说说：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-std=c++11：使用 C++11 新特性；&lt;/li&gt;
&lt;li&gt;-stdlib=libc++：指定使用 clang 的标准库头文件 /usr/include/c++/v1/；&lt;/li&gt;
&lt;li&gt;-Werror：将所有编译警告视为编译错误；&lt;/li&gt;
&lt;li&gt;-Weverything：打开所有编译警告选项。在 GCC 中，无法通过单个选项打开所有编译警告，必须繁琐的同时指定 -Wall、-Wextra、以及大量分散的其他选项，为此 clang 新增了 -Weverything。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，有些警告意义不大，完全可忽略，如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-Wno-disabled-macro-expansion：禁止使用宏表达式，忽略此警告；&lt;/li&gt;
&lt;li&gt;-Wno-float-equal：浮点类型不应使用 != 和 == 运算符，忽略此警告；&lt;/li&gt;
&lt;li&gt;-Wno-c++98-compat、-Wno-c++98-compat-pedantic：采用 C++11 新特性的代码无法兼容 C++98，忽略此警告；&lt;/li&gt;
&lt;li&gt;-Wno-global-constructors：在 main() 之前存在执行的代码，忽略此警告；&lt;/li&gt;
&lt;li&gt;-Wno-exit-time-destructors：在 main() 之后存在执行的代码，忽略此警告；&lt;/li&gt;
&lt;li&gt;-Wno-missing-prototypes：虽有函数定义但缺失函数原型，忽略此警告；&lt;/li&gt;
&lt;li&gt;-Wno-padded：结构体大小应为 4 字节整数倍，忽略此警告（编译器自动调整对齐边界）；&lt;/li&gt;
&lt;li&gt;-Wno-old-style-cast：C 语言的强制类型转换，忽略此警告；&lt;/li&gt;
&lt;li&gt;-lc++：指定链接 /usr/lib/libc++.so 标准库（缺失将导致链接失败！）；&lt;/li&gt;
&lt;li&gt;-lc++abi：指定链接 /usr/lib/libc++abi.so 标准库（缺失将导致链接失败！）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 name="user-content-7.1.2"&gt;&lt;a id="user-content-系统构建" class="anchor" aria-hidden="true" href="#系统构建"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;系统构建&lt;/h4&gt;
&lt;p&gt;对于只有单个代码文件的项目来说，无非是保存代码文件、shell 中调用 GCC 编译、链接这样的简单方式即可实现；但，对于动辄几十上百个文件的工程项目，采用这种方式只会把自己逼疯，必须借助构建工具管理工程的整个构建过程。&lt;/p&gt;
&lt;p&gt;linux 有两类工程构建工具 —— Makefile系 和非 Makefile 系，Makefile 系常见构建工具有 GNU 出品的老牌 autoconf、新生代的 CMake，非 Makefile 系中最著名的要数 SCons。KDE 就是通过 CMake（&lt;a href="http://www.cmake.org/cmake/resources/software.html" rel="nofollow"&gt;http://www.cmake.org/cmake/resources/software.html&lt;/a&gt; ）构建出来的，易用性灵活性兼备，洒泪推荐。&lt;/p&gt;
&lt;p&gt;一般来说，你需要先写个名为 CMakeLists.txt 的构建脚本，然后执行 cmake  CMakeLists.txt 命令将生成 Makefile 文件，最后执行 make 命令即可编译生成可执行程序。&lt;/p&gt;
&lt;p&gt;举例来说，你工程包含 main.cpp 文件，要构建它，你需要执行如下步骤。&lt;/p&gt;
&lt;p&gt;第一步，编写 CMakeLists.txt，内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PROJECT(main) 
SET(SRC_LIST main.cpp) 
SET(CMAKE_CXX_COMPILER "clang++") 
SET(CMAKE_CXX_FLAGS "-std=c++11 -stdlib=libc++ -Werror -Weverything -Wno-deprecated-declarations -Wno-disabled-macro-expansion -Wno-float-equal -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-global-constructors -Wno-exit-time-destructors -Wno-missing-prototypes -Wno-padded -Wno-old-style-cast")
SET(CMAKE_EXE_LINKER_FLAGS "-lc++ -lc++abi") 
SET(CMAKE_BUILD_TYPE Debug) 
ADD_EXECUTABLE(main ${SRC_LIST})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中，PROJECT 指定工程名、SET 是 cmake 变量赋值命令、ADD_EXECUTABLE 指定生成可执行程序的名字。括号内的大写字符串是 cmake 内部预定义变量，这是 CMakeLists.txt 脚本的重点，下面详细讲述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SRC_LIST 指定参与编译的源码文件列表，如果有多个文件请用空格隔开，如，你工程有 main.cpp、lib/MyClass.cpp、lib/MyClass.h 三个文件，那么可以指定为：&lt;/li&gt;
&lt;li&gt;SET(SRC_LIST main.cpp lib/MyClass.cpp)&lt;/li&gt;
&lt;li&gt;CMAKE_CXX_COMPILER 指定选用何种编译器；&lt;/li&gt;
&lt;li&gt;CMAKE_CXX_FLAGS 设定编译选项；&lt;/li&gt;
&lt;li&gt;CMAKE_EXE_LINKER_FLAGS 设定链接选项。一定要将 -lc++ 和 -lc++abi 独立设定到 CMAKE_EXE_LINKER_FLAGS 变量中而不能放在 CMAKE_CXX_FLAGS，否则无法通过链接；&lt;/li&gt;
&lt;li&gt;CMAKE_BUILD_TYPE 设定生成的可执行程序中是否包含调试信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，对于编译选项，我的原则是严己宽人。也就是说，在我本机上使用最严格的编译选项以发现尽量多 bug，发布给其他人的源码包使用最宽松的编译选项以减少环境差异导致编译失败的可能。前面罗列出来的就是严格版的 CMakeLists.txt，宽松版我会考虑：编译器改用 GCC（很多人没装 clang）、忽略所有编译警告、让编译器进行代码优化、去掉调试信息、添加安装路径等要素，具体如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PROJECT(main) 
SET(SRC_LIST main.cpp) 
SET(CMAKE_CXX_COMPILER "g++") 
SET(CMAKE_CXX_FLAGS "-std=c++11 -O3") 
SET(CMAKE_BUILD_TYPE Release) 
ADD_EXECUTABLE(porgram_name ${SRC_LIST})
INSTALL(PROGRAMS porgram_name DESTINATION /usr/bin/)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第二步，基于 CMakeLists.txt 生成 Makefile。在 CMakeLists.txt 所在目录执行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake CMakeLists.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;执行成功的话，你将在该目录下看到 Makefile 文件；&lt;/p&gt;
&lt;p&gt;第三步，基于 Makefile 生成可执行程序。相同目录下执行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这一步，就是在调用编译器进行编译，如果存在代码问题，修正错误后重新执行这一步即可，不用再次执行第一、二步。&lt;/p&gt;
&lt;p&gt;基本上，你的新工程，可以在基于上面的 CMakeLists.txt 进行修改，执行一次第二步后，每次代码调整只需执行第三步即可。&lt;/p&gt;
&lt;h4 name="user-content-7.1.3"&gt;&lt;a id="user-content-一键编译" class="anchor" aria-hidden="true" href="#一键编译"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;一键编译&lt;/h4&gt;
&lt;p&gt;工程项目的构建过程游离于 vim 之外终究不那么方便，前面章节介绍的构建过程是在 shell 中执行的，全在 vim 中执行又是如何操作。第一步的创建 CMakeLists.txt 没问题，vim 这么优秀的编辑器编辑个普通文本文件易如反掌；第二步的生成 Makefile 也没问题，在 vim 内部通过 ! 前缀可以执行 shell 命令，:!cmake CMakeLists.txt 即可；第三步的编译过程更没问题，因为 vim 自身支持 make 命令，直接在 vim 中输入 :make 命令它会调用外部 make 程序读取当前目录中的 Makefile 文件，完成编译、链接操作。当然，一次性编译通过的可能性很小，难免有些语法错误（语义错误只能靠调试器了），vim 将编译器抛出的错误和警告信息输出到 quickfix 中，执行 :cw 命令即可显示 quickfix。说了这么多，概要之，先通过构建工具（CMake 可通过 CMakeLists.txt 文件，autotools 可通过 configure 文件）生成整个工程的 Makefile，再在 vim 中执行 :make，最后显示 quickfix。&lt;/p&gt;
&lt;p&gt;要实现一键编译，无非是把这几步映射为 vim 的快捷键，即：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nmap &amp;lt;Leader&amp;gt;m :wa&amp;lt;CR&amp;gt;:make&amp;lt;CR&amp;gt;&amp;lt;CR&amp;gt;:cw&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;分解说明下，m 为设定的一键编译快捷键，:wa&amp;lt;CR&amp;gt; 保存所有调整文档内容，:make&amp;lt;CR&amp;gt; 调用 make 命令，后面的 &amp;lt;CR&amp;gt; 消除执行完 make 命令屏幕上“Press ENTER or type command to continue”的输入等待提示，:cw&amp;lt;CR&amp;gt; 显示 quickfix（仅当有编译错误或警告时）。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E4%B8%80%E9%94%AE%E7%BC%96%E8%AF%91.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E4%B8%80%E9%94%AE%E7%BC%96%E8%AF%91.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（一键编译）
&lt;/div&gt;
我新建了一个工程，编辑好 CMakeLists.txt，执行 :!cmake CMakeLists.txt，接着 \m 一键编译，quickfix 窗口显示了编译错误，光标自动定位到需要你解决的第一个编译错误，回车后光标自动调整到该错误对应的代码位置，修正后重新 \r，编译通过并运行生成的程序。
&lt;p&gt;你可能会遇到，调整过的代码能通过编译，但是，要么在工程目录中无法找到可执行程序，要么有程序但体现不出代码调整的内容（就像没调整过代码一样）。对于情况一，还算好，至少你晓得生成可程序失败了，肯定哪儿出了问题，不会继续往下新增代码；情况二，就麻烦了，你想通过运行程序检查刚才添加的代码运行是否正常，以为运行的是新程序，其实，代码调整后的新程序并未生成，运行是老程序，“哇，一切正常，往下写新业务逻辑代码”。导致这两个情况的根本原因，代码中存在链接错误导致并未正常创建新的可执行程序。bad news —— 如果编译错误，quickfix 窗口会固定在底部，罗列出所有编译过程中的所有错误，如果编译正常（即便是存在链接错误），quickfix 窗口会出现“Press ENTER or type command to continue”的输入等待提示信息，前面提过，为了省去手工输入回车，已经在 &amp;lt;Leader&amp;gt;m 中为 :make 多绑定个回车符 &amp;lt;CR&amp;gt;，换言之，在编译正确链接错误的情况下，你是无法查看到 quickfix 窗口的；good news —— 有两种方式解决该问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方式一，将前面 &amp;lt;Leader&amp;gt;m 中为 :make 绑定的回车符 &amp;lt;CR&amp;gt; 去掉，即&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;nmap &amp;lt;Leader&amp;gt;m :wa&amp;lt;CR&amp;gt;:make&amp;lt;CR&amp;gt;:cw&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;方式二，先删除老的可执行程序，再编译、链接，发现缺失可执行程序时，再手工执行 :make，这样，可查看具体是什么链接错误了，将如下配置信息加入 .vimrc 中：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;nmap &amp;lt;Leader&amp;gt;m :!rm -rf main&amp;lt;CR&amp;gt;:wa&amp;lt;CR&amp;gt;:make&amp;lt;CR&amp;gt;&amp;lt;CR&amp;gt;:cw&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我选方式二。&lt;/p&gt;
&lt;p&gt;到此，已实现一键编译，要实现一键编译及运行无非就在刚才的快捷键中追加绑定运行程序的外部命令即可。新快捷键设定为 &amp;lt;leader&amp;gt;g，假定生成的可执行程序名为 main，将如下配置信息加入 .vimrc 中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nmap &amp;lt;Leader&amp;gt;g :!rm -rf main&amp;lt;CR&amp;gt;:wa&amp;lt;CR&amp;gt;:make&amp;lt;CR&amp;gt;:cw&amp;lt;CR&amp;gt;&amp;lt;CR&amp;gt;:!./main&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后，再次强调实现一键编译及运行的几个前提：vim 的当前目录必须为工程目录、事前准备好 Makefile 文件且放于工程目录的根目录、生成的程序必须在工程目录的根目录。&lt;/p&gt;
&lt;h3 name="user-content-7.2"&gt;&lt;a id="user-content-72-静态分析器集成" class="anchor" aria-hidden="true" href="#72-静态分析器集成"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7.2 静态分析器集成&lt;/h3&gt;
&lt;p&gt;one take，中意“一次成型”，最早指歌手录歌时一次性通过录制，不存在发现错误-修正错误-重新录制这样的往返动作。one take 在编程环境中，就是一次性通过编译，我个人很享受 one take 带来的快感。当然，要达到 one take，不仅需要扎实的编程功底，还需要工具的辅佐 —— 代码静态分析器。前面介绍的神器 YCM 具备实时语法检查的能力。在它的作用下，编码中、编译前，所有语法错误都将被抓出来并呈现给你。&lt;/p&gt;
&lt;p&gt;YCM 的整个静态分析过程分为如下几步：&lt;/p&gt;
&lt;p&gt;第一步，发现错误。YCM 内部调用 libclang 分析语法错误，通过管道传递给 YCM 呈现。当你保存代码、vim 普通模式下移动光标或者安静 2 秒，错误检查后台任务将自动启动，若有错误，YCM 将接收到；&lt;/p&gt;
&lt;p&gt;第二步，呈现错误。YCM 并不非立马显示错误信息，除非你触发下次击键事件，否则你看不到错误信息，换言之，干等是没结果的，你必须有次击键动作（没办法，vim 内部机制所限，后台任务无法直接更新 GUI，所以才采用变通的击键方式）。对于存在语法错误的代码，在行首有个红色的 &amp;gt;&amp;gt; 高亮显示；&lt;/p&gt;
&lt;p&gt;第三步，查看错误。好了，现在已经知道哪行代码有问题，具体问题描述如何查看？两种方式：一种是将光标移至问题行，vim 将在其底部显示简要错误描述；一种是将光标移至问题行，键入 &amp;lt;leader&amp;gt;d 后，vim 将在其底部显示详细错误描述。&lt;/p&gt;
&lt;p&gt;如下所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（静态代码分析）
&lt;/div&gt;
&lt;h2 name="user-content-8"&gt;&lt;a id="user-content-8-其他辅助" class="anchor" aria-hidden="true" href="#8-其他辅助"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8 其他辅助&lt;/h2&gt;
&lt;p&gt;大家关注的 IDE 核心功能前面都已逐一介绍过了，有些辅助功能我认为也有必要让你知道，不是都在提程序员人文关怀嘛，从我做起！&lt;/p&gt;
&lt;h3 name="user-content-8.1"&gt;&lt;a id="user-content-81-快速编辑结对符" class="anchor" aria-hidden="true" href="#81-快速编辑结对符"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8.1 快速编辑结对符&lt;/h3&gt;
&lt;p&gt;平时，最让我头痛的字符莫过于 {}、""、[] 等这类结对符，输入它们之所以麻烦，主要因为A）盲打很难找准它们位置，B）还得同时按住shift键。两者再一叠加，非常影响我的思维。要高效输入结对符，应该是输入少量几个字母（对，字母，不是字符）后 vim 自动为你输入完整结对符，而非是我输入一半 vim 输入另一半（不用 delimitMate 的原因）。刚好，这在 UltiSnips 能力范围内，只要定义好模板，可完美地解决这类问题，具体模板见上例中最后的结对符部分。&lt;/p&gt;
&lt;p&gt;在定义结对符模板时，你应该考虑加上模板控制参数 i。默认情况下，UltiSnips 只会当模板名前是空白字符或行首时才进行模板补全，比如，定义 () 的模板如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;snippet b "bracket"
(${1})${2} 
endsnippet
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我要调用函数 printf()，在输入完 printf 后应该接着输入括号模板名 b，然后输入模板展开快捷键 &amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;，你会发现 UltiSnips 无法帮你补全模板，因为它看到的不是 b 而是 printfb，这在模板文件中根本未定义。有一种间接解决方式是在 printf 后加个空格，再输入 b&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt; 进行补全，这就成了 printf ()，不喜欢这种编码风格。其实，UltiSnips 的作者也注意到这个问题了，他让你可以通过前面提过的模板控制参数 i 进行解决。重新定义 () 的模板如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;snippet b "bracket" i
(${1})${2} 
endsnippet
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样，UltiSnips 只管光标前 1 个字符是否是 b，若是则补全 ()，不论 b 前是否有其他字符。类似，其他结对符模板都按此加上 i 控制参数。结对符模板完整定义参见上一节 cpp.snippets 示例。如下是几个快速输入结对符的演示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%BF%AB%E9%80%9F%E8%BE%93%E5%85%A5%E7%BB%93%E5%AF%B9%E7%AC%A6.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%BF%AB%E9%80%9F%E8%BE%93%E5%85%A5%E7%BB%93%E5%AF%B9%E7%AC%A6.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（快速输入结对符）
&lt;/div&gt;
&lt;p&gt;另外，要想高效编辑结对符，你得了解 vim 自身的某些快捷键。比如，有如下字符串且光标在该字符串的任意字符上，这时在命令模式下键入 va) 后将选中包括括号在内的整个字符串：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%BF%AB%E9%80%9F%E9%80%89%E4%B8%AD%E7%BB%93%E5%AF%B9%E7%AC%A6.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%BF%AB%E9%80%9F%E9%80%89%E4%B8%AD%E7%BB%93%E5%AF%B9%E7%AC%A6.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（快速选中结对符）
&lt;/div&gt;
其中，v 是动作、a 是范围、) 是结对符。结对符命令的动作包括：选中 v、复制 y、删除 d、删除后插入 c；结对符命令的范围包括：含结对符 a、不含结对符 i。针对不同结对符，组合不同动作和范围就有 4\*2 种方式。比如，di{ 删除不含结对符 {} 的字符串，va\[ 将选中含结对符 [] 内的所有字符。
&lt;p&gt;选中结对符内的文本是我较为频繁的操作之一，通过诸如 vi[ 的命令可以选中当前结对符 [] 内的所有文本，这虽谈不上麻烦，但每次都得去看下是 ]、)、&amp;gt; 还是 }，总是有点别扭。有款叫 wildfire.vim（&lt;a href="https://github.com/gcmt/wildfire.vim"&gt;https://github.com/gcmt/wildfire.vim&lt;/a&gt; ）的插件，让我能更自然地选中结对符内的文本，有了它，我只需按下空格（你也可以设置成其他快捷键），自动选中光标所在区域最近的一层结对符内的文本，如果没有结对符，则选择最近的一个段落。&lt;/p&gt;
&lt;p&gt;简单设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 快捷键
map &amp;lt;SPACE&amp;gt; &amp;lt;Plug&amp;gt;(wildfire-fuel)
vmap &amp;lt;S-SPACE&amp;gt; &amp;lt;Plug&amp;gt;(wildfire-water)
" 适用于哪些结对符
let g:wildfire_objects = ["i'", 'i"', "i)", "i]", "i}", "i&amp;gt;", "ip"]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样，在 vim 的命令模式下，一次空格选中最近一层结对符内的文本，两次则选中近两层内的文本，三次三层，依此类推；或者键入 3space，直接选中三层内的文本；若要取消，键入 shift-space 即可。另外，结对符类型也可以在 wildfire_objects 变量中指定。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%BF%AB%E9%80%9F%E9%80%89%E4%B8%AD%E7%BB%93%E5%AF%B9%E7%AC%A6%E6%96%87%E6%9C%AC.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%BF%AB%E9%80%9F%E9%80%89%E4%B8%AD%E7%BB%93%E5%AF%B9%E7%AC%A6%E6%96%87%E6%9C%AC.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（快速选中结对符文本）
&lt;/div&gt;
&lt;h3 name="user-content-8.2"&gt;&lt;a id="user-content-82-支持分支的-undo" class="anchor" aria-hidden="true" href="#82-支持分支的-undo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8.2 支持分支的 undo&lt;/h3&gt;
&lt;p&gt;undo，编辑器世界中的后悔药，让你有机会撤销最近一步或多步操作，这是任何编辑器都具备的基础功能。比如，第一步输入 A，第二步输入 B，第三步输入 C，当前文本为 ABC，一次 undo 后变成 AB，再次 undo 后变成 A，显然，每次 undo 撤销的均是最后的一步操作，通常采用栈这种数据结构来实现 undo 功能，由于栈具有后进先出的特点，所以，功能实现起来非常自然且便捷，但同时，也引入了致命伤，无法支持分支上的 undo 操作。&lt;/p&gt;
&lt;p&gt;还是前面的例子，分三步依次输入完 ABC 后，一次 undo 变成 AB，这时，输入 D，之后，无论你多少次 undo 都不可能再找回 C，究其原因，D 是彻底覆盖了 C，而不是与 C 形成两个分支，如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E4%B8%8D%E6%94%AF%E6%8C%81%E5%88%86%E6%94%AF%E7%9A%84%20undo.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E4%B8%8D%E6%94%AF%E6%8C%81%E5%88%86%E6%94%AF%E7%9A%84%20undo.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（不支持分支的 undo）
&lt;/div&gt;
&lt;p&gt;在我的使用场景中，非常需要在我输入 D 后还能找回 C 的 undo 功能，即，支持分支的 undo，gundo.vim （&lt;a href="http://sjl.bitbucket.org/gundo.vim/" rel="nofollow"&gt;http://sjl.bitbucket.org/gundo.vim/&lt;/a&gt; ）降临。gundo.vim 采用树这种数据结构来实现 undo，每一次编辑操作均放在树的叶子上，每次 undo 后，先回到主干，新建分支继续后续操作，而不是直接覆盖，从而实现支持分支的 undo 功能。gundo.vim 要求 vim 版本不低于 v7.3 且支持 python v2.4 及以上。&lt;/p&gt;
&lt;p&gt;如下方式设置好调用 gundo.vim 的快捷方式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 调用 gundo 树
nnoremap &amp;lt;Leader&amp;gt;ud :GundoToggle&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;gundo.vim 非常贴心，调用它后，你会在左侧看到一个分割为上下两个区域的子窗口。上半区域以可视化方式显示了整颗 undo 树，同时，用 @ 标识最后一步编辑操作，用序号标识各步编辑操作的先后顺序，用时长显示每步操作距离当前消耗时间。下半区域展示了各个操作间的 diff 信息及其上下文，默认为选中那步操作与前一步操作间的 diff，键入 p 可以查看选中那步操作与最后一步操作（即有 @ 标识的那步）间的 diff，这对于找回多次编辑操作之前的环境非常有用。&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E6%94%AF%E6%8C%81%E5%88%86%E6%94%AF%E7%9A%84%20undo.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E6%94%AF%E6%8C%81%E5%88%86%E6%94%AF%E7%9A%84%20undo.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（支持分支的 undo）
&lt;/div&gt;
&lt;p&gt;另外，我对持久保存 undo 历史也有需求，以便让我关闭 vim 后重新启动也能找到先前的所有 undo 历史，这需要你在 .vimrc 中添加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" 开启保存 undo 历史功能
set undofile
" undo 历史保存路径
set undodir=~/.undo_history/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你得先自行创建 .undo_history/。具体可参见“6.3 环境恢复”章节。&lt;/p&gt;
&lt;h3 name="user-content-8.3"&gt;&lt;a id="user-content-83-快速移动" class="anchor" aria-hidden="true" href="#83-快速移动"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8.3 快速移动&lt;/h3&gt;
&lt;p&gt;vim 有两类快速移动光标的方式：一类是以单词为单位的移动，比如，w 正向移动到相邻单词的首字符、b 逆向移动到相邻单词的首字符、e 正向移动到相邻单词的尾字符、 ge 逆向移动到相邻单词的尾字符；一类是配合查找字符的方式移动，比如，fa 正向移动到第一个字符 a 处、Fa 逆向移动到第一个字符 a 处。你要在非相邻的单词或字符间移动，你可以配合数字参数，比如，正向移动到相隔八个单词的首字符执行 8w、逆向移动到第四个 a 字符处执行 4Fa。&lt;/p&gt;
&lt;p&gt;有如下文本：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;backpage kcal liam jack facebook target luach ajax&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;假定光标在行首，需要移动到 facebook 的字符 a 处，先来数下前面有 1、2 ... 5 个 a，然后用前面所说的 5fa，唔，怎么在 jack 上呢？等等，好像数错了，再数次 1、2 ... 6，对滴，应该是 6fa，这下对了。我的个天，不能让哥太累，得找个插件帮忙 —— easymotion（&lt;a href="https://github.com/Lokaltog/vim-easymotion"&gt;https://github.com/Lokaltog/vim-easymotion&lt;/a&gt; ）。&lt;/p&gt;
&lt;p&gt;easymotion 只做一件事：把满足条件的位置用 [;A&lt;del&gt;Za&lt;/del&gt;z] 间的标签字符标出来，找到你想去的位置再键入对应标签字符即可快速到达。比如，上面的例子，假设光标在行首，我只需键入 &amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;fa （为避免与其他快捷键冲突，easymotion 采用两次 &amp;lt;leader&amp;gt; 作为前缀键），所有的字符 a 都被重新标记成 a、b、c、d、e、f 等等标签（原始内容不会改变），f 标签为希望移动去的位置，随即键入 f 即可到达。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%BF%AB%E9%80%9F%E7%A7%BB%E5%8A%A8.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%BF%AB%E9%80%9F%E7%A7%BB%E5%8A%A8.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（快速移动）
&lt;/div&gt;
&lt;p&gt;类似，前面提过的 w、e、b、ge、F、j、k 等命令在 easymotion 作用下也能实现快速移动，其中，j 和 k 可跨行移动。同时，你还可以搭配 v 选中命令、d 删除命令、y 拷贝命令，比如，v&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;fa，快速选中光标当前位置到指定字符 a 之间的文本，d&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;fa，快速删除光标当前位置到指定字符 a 之间的文本，下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E6%90%AD%E9%85%8D%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E7%9A%84%E5%BF%AB%E9%80%9F%E7%A7%BB%E5%8A%A8.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E6%90%AD%E9%85%8D%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E7%9A%84%E5%BF%AB%E9%80%9F%E7%A7%BB%E5%8A%A8.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（搭配操作命令的快速移动）
&lt;/div&gt;
&lt;h3 name="user-content-8.4"&gt;&lt;a id="user-content-84-markdown-即时预览" class="anchor" aria-hidden="true" href="#84-markdown-即时预览"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8.4 markdown 即时预览&lt;/h3&gt;
&lt;p&gt;作为一枚热衷开源的伪 geek，github.com 与我同在。发布在 github.com 的任何项目你得有个项目简介，README.md，这是一种用 markdown 文书编写语法制作的说明文档。关于 markdown，我有两个需求，一是 vim 要高亮显示 markdown 语法，一是 firefox 要能渲染其语法、即时显示更新结果。&lt;/p&gt;
&lt;p&gt;第一个需求不是问题，新版 vim 已经集成了 markdown 语法高亮插件，无须单独配置。&lt;/p&gt;
&lt;p&gt;第二个需求，按照一般逻辑，应该通过 firefox 的某款插件来实现，的确，Markdown Viewer 看起来是干这个事儿的，但它响应速度缓慢、中文显示乱码、无法即时渲染等等问题让我无法接受。网上倒是有些即时渲染 markdown 的网站，比如，&lt;a href="https://stackedit.io/editor" rel="nofollow"&gt;https://stackedit.io/editor&lt;/a&gt; ，左侧编辑右侧显示，所见即所得，但这又无法让我使用 vim，不行。还是回到 vim 身上想办法，vim-instant-markdown 来了。有了这款 vim 插件，一旦你启用 vim 编辑 markdown 文档，vim-instant-markdown 自动开启 firefox 为你显示 markdown 最终效果，如果你在 vim 中变更了文档内容，vim-instant-markdown 即时渲染、firefox 同步更新，太棒了！&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/markdown%20%E5%8D%B3%E6%97%B6%E6%B8%B2%E6%9F%93.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/markdown%20%E5%8D%B3%E6%97%B6%E6%B8%B2%E6%9F%93.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（markdown 即时渲染）
&lt;/div&gt;
&lt;p&gt;vim-instant-markdown（&lt;a href="https://github.com/suan/vim-instant-markdown"&gt;https://github.com/suan/vim-instant-markdown&lt;/a&gt; ） 的安装相比其他插件较为特殊，它由 ruby 开发，所以你的 vim 必须集成 ruby 解释器（见“1 源码安装编辑器 vim ”），并且安装 pygments.rb、redcarpet、instant-markdown-d 三个依赖库：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gem install pygments.rb
gem install redcarpet
# 若系统提示无 npm 命令，你需要先执行 zypper --no-refresh install nodejs
npm -g install instant-markdown-d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意，以上三条命令均要翻墙。&lt;/p&gt;
&lt;p&gt;对于重内容、轻设计的我这类人来说，markdown 简洁的文书语法太贴心了。推荐三个网站：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;markdown 语法 &lt;a href="http://daringfireball.net/projects/markdown/syntax" rel="nofollow"&gt;http://daringfireball.net/projects/markdown/syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;github.com 扩展 &lt;a href="https://guides.github.com/features/mastering-markdown/"&gt;https://guides.github.com/features/mastering-markdown/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;emoji 符号表情 &lt;a href="http://www.emoji-cheat-sheet.com/" rel="nofollow"&gt;http://www.emoji-cheat-sheet.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 name="user-content-8.5"&gt;&lt;a id="user-content-85-中英输入平滑切换" class="anchor" aria-hidden="true" href="#85-中英输入平滑切换"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8.5 中/英输入平滑切换&lt;/h3&gt;
&lt;p&gt;代码中不可能全是英文，即便注释是英文，用户提示信息也多多少少得用中文吧，所以，在 vim 中输入中文是常有的。中/英文输入切换本身很简单，但是，如果又与 vim 的插入模式和命令模式一纠缠，那么，这事儿就不太自然了。&lt;/p&gt;
&lt;p&gt;比如，我在插入模式下依次输入了中文的一二四三，本意是想输入一二三四，下意识地键入 esc 切换为命令模式，键入 x 剪切三，再键入 P 将三粘贴至四前。谁知，在键入 x 时，由于输入法仍保留在先前的中文状态下，导致 vim 的命令模式无法接收到命令，必须得再次键入 shift 切换至英文状态。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E4%B8%AD%E6%96%87%E7%8A%B6%E6%80%81%E8%AE%A9%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F%E6%97%A0%E6%95%88.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E4%B8%AD%E6%96%87%E7%8A%B6%E6%80%81%E8%AE%A9%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F%E6%97%A0%E6%95%88.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（中文状态让命令模式无效）
&lt;/div&gt;
&lt;p&gt;这很不协调，我希望，在插入模式下输入完中文，切换至命令模式后，即便先前是中文输入状态，也不影响我正常使用命令模式，甚至再次切回插入模式后，能保持先前的输入状态。来了，fcitx.vim（&lt;a href="https://github.com/lilydjwg/fcitx.vim"&gt;https://github.com/lilydjwg/fcitx.vim&lt;/a&gt; ）就是我要的。对，前提是你系统中用的是 fcitx 输入法（为何不用 scim、ibus？&lt;a href="https://github.com/yangyangwithgnu/the_new_world_linux#7.4"&gt;https://github.com/yangyangwithgnu/the_new_world_linux#7.4&lt;/a&gt; ）。装好这个插件后，我们再看看刚才的例子，在中文状态下从插入模式切换至命令模式，键入 x、P 调整完四和三顺序后，重新切换至插入模式，输入法状态仍保持中文。如下图所示：&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yangyangwithgnu/use_vim_as_ide/blob/master/pics/%E5%8D%B3%E4%BE%BF%E4%B8%AD%E6%96%87%E7%8A%B6%E6%80%81%E4%B9%9F%E4%B8%8D%E5%BD%B1%E5%93%8D%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F.gif"&gt;&lt;img src="https://github.com/yangyangwithgnu/use_vim_as_ide/raw/master/pics/%E5%8D%B3%E4%BE%BF%E4%B8%AD%E6%96%87%E7%8A%B6%E6%80%81%E4%B9%9F%E4%B8%8D%E5%BD%B1%E5%93%8D%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
（即便中文状态也不影响命令模式）
&lt;/div&gt;
&lt;p&gt;几乎完美了，唯一问题是，该插件无法保证从其他程序窗口切换至 vim 后仍有效。&lt;/p&gt;
&lt;h2 name="user-content-9"&gt;&lt;a id="user-content-9-尾声" class="anchor" aria-hidden="true" href="#9-尾声"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9 尾声&lt;/h2&gt;
&lt;p&gt;嗷呼，经过以上调教，你的 vim 已经成为非常舒适的 C/C++ 开发环境呢。等等，重装系统后又得折腾一次？不怕，除了 clang 等等几个需要源码安装的工具外，基本上，vim 的插件和相关配置文件你可以提前备份好，装完系统后恢复到对应目录中即可，丝毫不费脑力。&lt;/p&gt;
&lt;p&gt;2011 年 9 月我写了篇《拼装的艺术：vim 之 IDE 进化实录》，原计划近期（2014-09）更新下智能补全部分，后来越改越发觉原版问题太多，加之各插件推陈出新、自己对 vim 的认识加深，索性完全重新。期间，与很多朋友有过交流，有三类问题探讨得最频繁，我的观点简要阐述如下，后续不再欢迎、理会、回复相关问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为何不用 Code::Blocks 这类一站式 IDE？每个人的做事的出发点、性格观念千差万别，我不想拿 linux kernel 是 linus torvalds 用 microemacs（emacs 变种）开发的来说事儿，就我而言，迷恋 vim 的高效编辑能力、无限扩充能力，这是其他编辑器无法超越的。此外，我享受的是过程，不是结果！&lt;/li&gt;
&lt;li&gt;哪个是最适合编码的编辑器？linux 上存在两种编辑器：神之编辑器 emacs，编辑器之神 vim。关于 emacs 与 vim 孰轻谁重之争已是世纪话题，我无意参与其中，在我眼里，它们流淌着自由的血液、继承着创新的基因，作为顶级编辑器，二者在这个领域都作到了极致，让世人重新认识了编辑的本质 —— 用命令规则而非字字键入 —— 去完成编辑任务。emacs，伪装成编辑器的操作系统，太杂、太重，我更喜欢专注于编辑的 vim。&lt;/li&gt;
&lt;li&gt;怎样的 IDE 才算好？对于初入开发的人员而言，Code::Blocks 是最易上手的选择；对于我这类喜欢折腾、追求效率、愿意用脑力换体力的人来说，vim 搭配各类插件是好的 IDE；对于 Donald Knuth 这等宗师，他们站在整个系统的层面，bash 加上几个命令行工具也是某种意义上的 IDE。所以，只要你能得心应手地完成软件开发任务，又察觉不到工具的存在，那这就是最适合你的 IDE。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;末了，写作的过程，是知识体系完整重构的过程，理清了思路、加深了记忆。如果它再能引发你一点思绪，或许，这就是价值！&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>yangyangwithgnu</author><guid isPermaLink="false">https://github.com/yangyangwithgnu/use_vim_as_ide</guid><pubDate>Sat, 01 Feb 2020 00:01:00 GMT</pubDate></item><item><title>amix/vimrc #2 in Vim script, Today</title><link>https://github.com/amix/vimrc</link><description>&lt;p&gt;&lt;i&gt;The ultimate Vim configuration: vimrc&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e03b1147d5d7ca3294db48a228f352a048715280/68747470733a2f2f646e70347065686b766f6f366e2e636c6f756466726f6e742e6e65742f34336335616635393762643563316136346562313832396630313163323038662f61732f556c74696d61746525323056696d72632e737667"&gt;&lt;img src="https://camo.githubusercontent.com/e03b1147d5d7ca3294db48a228f352a048715280/68747470733a2f2f646e70347065686b766f6f366e2e636c6f756466726f6e742e6e65742f34336335616635393762643563316136346562313832396630313163323038662f61732f556c74696d61746525323056696d72632e737667" alt="VIM" data-canonical-src="https://dnp4pehkvoo6n.cloudfront.net/43c5af597bd5c1a64eb1829f011c208f/as/Ultimate%20Vimrc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-ultimate-vimrc" class="anchor" aria-hidden="true" href="#the-ultimate-vimrc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Ultimate vimrc&lt;/h1&gt;
&lt;p&gt;Over the last 10 years, I have used and tweaked Vim. This configuration is the ultimate vimrc (or at least my version of it).&lt;/p&gt;
&lt;p&gt;There are two versions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Basic&lt;/strong&gt;: If you want something small just copy &lt;a href="https://github.com/amix/vimrc/blob/master/vimrcs/basic.vim"&gt;basic.vim&lt;/a&gt; into your ~/.vimrc and you will have a good basic setup&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Awesome&lt;/strong&gt;: Includes a ton of useful plugins, color schemes, and configurations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I would, of course, recommend using the awesome version.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-install-the-awesome-version" class="anchor" aria-hidden="true" href="#how-to-install-the-awesome-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to install the Awesome version?&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-for-your-own-user-only" class="anchor" aria-hidden="true" href="#install-for-your-own-user-only"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install for your own user only&lt;/h3&gt;
&lt;p&gt;The awesome version includes a lot of great plugins, configurations and color schemes that make Vim a lot better. To install it simply do following from your terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
sh ~/.vim_runtime/install_awesome_vimrc.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-install-for-multiple-users" class="anchor" aria-hidden="true" href="#install-for-multiple-users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install for multiple users&lt;/h3&gt;
&lt;p&gt;To install for multiple users, the repository needs to be cloned to a location accessible for all the intended users.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone --depth=1 https://github.com/amix/vimrc.git /opt/vim_runtime
sh ~/.vim_runtime/install_awesome_parameterized.sh /opt/vim_runtime user0 user1 user2
# to install for all users with home directories
sh ~/.vim_runtime/install_awesome_parameterized.sh /opt/vim_runtime --all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Naturally, &lt;code&gt;/opt/vim_runtime&lt;/code&gt; can be any directory, as long as all the users specified have read access.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fonts" class="anchor" aria-hidden="true" href="#fonts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fonts&lt;/h2&gt;
&lt;p&gt;I recommend using &lt;a href="https://github.com/IBM/plex"&gt;IBM Plex Mono font&lt;/a&gt; (it's an open-source and awesome font that can make your code beautiful). The Awesome vimrc is already setup to try to use it.&lt;/p&gt;
&lt;p&gt;Some other fonts that Awesome will try to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://sourcefoundry.org/hack/" rel="nofollow"&gt;Hack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adobe-fonts.github.io/source-code-pro/" rel="nofollow"&gt;Source Code Pro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-install-the-basic-version" class="anchor" aria-hidden="true" href="#how-to-install-the-basic-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to install the Basic version?&lt;/h2&gt;
&lt;p&gt;The basic version is just one file and no plugins. Just copy &lt;a href="https://github.com/amix/vimrc/blob/master/vimrcs/basic.vim"&gt;basic.vim&lt;/a&gt; and paste it into your vimrc.&lt;/p&gt;
&lt;p&gt;The basic version is useful to install on remote servers where you don't need many plugins, and you don't do many edits.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
sh ~/.vim_runtime/install_basic_vimrc.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-install-on-windows" class="anchor" aria-hidden="true" href="#how-to-install-on-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to install on Windows?&lt;/h2&gt;
&lt;p&gt;Use &lt;a href="http://gitforwindows.org/" rel="nofollow"&gt;gitforwindows&lt;/a&gt; to checkout the repository and run the installation instructions above. No special instructions needed ;-)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-install-on-linux" class="anchor" aria-hidden="true" href="#how-to-install-on-linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to install on Linux&lt;/h2&gt;
&lt;p&gt;If you have vim aliased as &lt;code&gt;vi&lt;/code&gt; instead of &lt;code&gt;vim&lt;/code&gt;, make sure to either alias it: &lt;code&gt;alias vi=vim&lt;/code&gt;. Otherwise, &lt;code&gt;apt-get install vim&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-update-to-latest-version" class="anchor" aria-hidden="true" href="#how-to-update-to-latest-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to update to latest version?&lt;/h2&gt;
&lt;p&gt;Just do a git rebase!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.vim_runtime
git pull --rebase
python update_plugins.py
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-some-screenshots" class="anchor" aria-hidden="true" href="#some-screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some screenshots&lt;/h2&gt;
&lt;p&gt;Colors when editing a Python file:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/30d590fbaf209de5e17eca19ee9908d58e38315f/68747470733a2f2f646e70347065686b766f6f366e2e636c6f756466726f6e742e6e65742f30373538333030386534646138383538303136353765383738313737373834342f61732f507974686f6e25323065646974696e672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/30d590fbaf209de5e17eca19ee9908d58e38315f/68747470733a2f2f646e70347065686b766f6f366e2e636c6f756466726f6e742e6e65742f30373538333030386534646138383538303136353765383738313737373834342f61732f507974686f6e25323065646974696e672e706e67" alt="Screenshot 1" data-canonical-src="https://dnp4pehkvoo6n.cloudfront.net/07583008e4da885801657e8781777844/as/Python%20editing.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Opening recently opened files with the &lt;a href="https://github.com/vim-scripts/mru.vim"&gt;mru.vim&lt;/a&gt; plugin:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f596b72798aa9087597caef12a5265732b9719bd/68747470733a2f2f646e70347065686b766f6f366e2e636c6f756466726f6e742e6e65742f31643439613838663962643564303133633032356262316531323732613764382f61732f4d5255253230706c7567696e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/f596b72798aa9087597caef12a5265732b9719bd/68747470733a2f2f646e70347065686b766f6f366e2e636c6f756466726f6e742e6e65742f31643439613838663962643564303133633032356262316531323732613764382f61732f4d5255253230706c7567696e2e706e67" alt="Screenshot 2" data-canonical-src="https://dnp4pehkvoo6n.cloudfront.net/1d49a88f9bd5d013c025bb1e1272a7d8/as/MRU%20plugin.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/scrooloose/nerdtree"&gt;NERD Tree&lt;/a&gt; plugin in a terminal window:
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6edd8971671f0fe9a35b092c420e972285af5f3a/68747470733a2f2f646e70347065686b766f6f366e2e636c6f756466726f6e742e6e65742f61653731393230333136363538356436343732386632383339386634623162372f61732f5465726d696e616c25323075736167652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6edd8971671f0fe9a35b092c420e972285af5f3a/68747470733a2f2f646e70347065686b766f6f366e2e636c6f756466726f6e742e6e65742f61653731393230333136363538356436343732386632383339386634623162372f61732f5465726d696e616c25323075736167652e706e67" alt="Screenshot 3" data-canonical-src="https://dnp4pehkvoo6n.cloudfront.net/ae719203166585d64728f28398f4b1b7/as/Terminal%20usage.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Distraction free mode using &lt;a href="https://github.com/junegunn/goyo.vim"&gt;goyo.vim&lt;/a&gt; and &lt;a href="https://github.com/amix/vim-zenroom2"&gt;vim-zenroom2&lt;/a&gt;:
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9f97ce28c582c68c788f7651492ba02dc10f815c/68747470733a2f2f646e70347065686b766f6f366e2e636c6f756466726f6e742e6e65742f66306463633463393733393134386335366362663832383561393130616334312f61732f5a656e2532306d6f64652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/9f97ce28c582c68c788f7651492ba02dc10f815c/68747470733a2f2f646e70347065686b766f6f366e2e636c6f756466726f6e742e6e65742f66306463633463393733393134386335366362663832383561393130616334312f61732f5a656e2532306d6f64652e706e67" alt="Screenshot 4" data-canonical-src="https://dnp4pehkvoo6n.cloudfront.net/f0dcc4c9739148c56cbf8285a910ac41/as/Zen%20mode.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-included-plugins" class="anchor" aria-hidden="true" href="#included-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Included Plugins&lt;/h2&gt;
&lt;p&gt;I recommend reading the docs of these plugins to understand them better. Each plugin provides a much better Vim experience!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mileszs/ack.vim"&gt;ack.vim&lt;/a&gt;: Vim plugin for &lt;code&gt;the_silver_searcher&lt;/code&gt; (ag) or ack -- a wicked fast grep&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vim-scripts/bufexplorer.zip"&gt;bufexplorer.zip&lt;/a&gt;: Quickly and easily switch between buffers. This plugin can be opened with &lt;code&gt;&amp;lt;leader+o&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ctrlpvim/ctrlp.vim"&gt;ctrlp.vim&lt;/a&gt;: Fuzzy file, buffer, mru and tag finder. It's mapped to &lt;code&gt;&amp;lt;Ctrl+F&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/junegunn/goyo.vim"&gt;goyo.vim&lt;/a&gt; and &lt;a href="https://github.com/amix/vim-zenroom2"&gt;vim-zenroom2&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/itchyny/lightline.vim"&gt;lightline.vim&lt;/a&gt;: A light and configurable statusline/tabline for Vim&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scrooloose/nerdtree"&gt;NERD Tree&lt;/a&gt;: A tree explorer plugin for vim&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vim-scripts/mru.vim"&gt;mru.vim&lt;/a&gt;: Plugin to manage Most Recently Used (MRU) files. This plugin can be opened with &lt;code&gt;&amp;lt;leader+f&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amix/open_file_under_cursor.vim"&gt;open_file_under_cursor.vim&lt;/a&gt;: Open file under cursor when pressing &lt;code&gt;gf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tpope/vim-pathogen"&gt;pathogen.vim&lt;/a&gt;: Manage your vim runtimepath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/garbas/vim-snipmate"&gt;snipmate.vim&lt;/a&gt;: snipmate.vim aims to be a concise vim script that implements some of TextMate's snippets features in Vim&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/w0rp/ale"&gt;ale&lt;/a&gt;: Syntax and lint checking for vim (ALE requires NeoVim &amp;gt;= 0.2.0 or Vim 8 with +timers +job +channel)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tpope/vim-commentary"&gt;vim-commentary&lt;/a&gt;: Comment stuff out.  Use &lt;code&gt;gcc&lt;/code&gt; to comment out a line (takes a count), &lt;code&gt;gc&lt;/code&gt; to comment out the target of a motion. &lt;code&gt;gcu&lt;/code&gt; uncomments a set of adjacent commented lines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terryma/vim-expand-region"&gt;vim-expand-region&lt;/a&gt;: Allows you to visually select increasingly larger regions of text using the same key combination&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tpope/vim-fugitive"&gt;vim-fugitive&lt;/a&gt;: A Git wrapper so awesome, it should be illegal&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/michaeljsmith/vim-indent-object"&gt;vim-indent-object&lt;/a&gt;: Defines a new text object representing lines of code at the same indent level. Useful for python/vim scripts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terryma/vim-multiple-cursors"&gt;vim-multiple-cursors&lt;/a&gt;: Sublime Text style multiple selections for Vim, CTRL+N is remapped to CTRL+S (due to YankRing)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxbrunsfeld/vim-yankstack"&gt;vim-yankstack&lt;/a&gt;: Maintains a history of previous yanks, changes and deletes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amix/vim-zenroom2"&gt;vim-zenroom2&lt;/a&gt; Remove all clutter and focus only on the essential. Similar to iA Writer or Write Room&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattn/gist-vim"&gt;gist-vim&lt;/a&gt; Easily create gists from Vim using the &lt;code&gt;:Gist&lt;/code&gt; command&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-included-color-schemes" class="anchor" aria-hidden="true" href="#included-color-schemes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Included color schemes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vim-scripts/peaksea"&gt;peaksea&lt;/a&gt;: The default&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/altercation/vim-colors-solarized"&gt;vim-colors-solarized&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wgibbs/vim-irblack"&gt;vim-irblack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vim-scripts/mayansmoke"&gt;mayansmoke&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/therubymug/vim-pyte"&gt;vim-pyte&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-included-modes" class="anchor" aria-hidden="true" href="#included-modes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Included modes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kchmck/vim-coffee-script"&gt;vim-coffee-script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groenewege/vim-less"&gt;vim-less&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sophacles/vim-bundle-mako"&gt;vim-bundle-mako&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/plasticboy/vim-markdown"&gt;vim-markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vim-scripts/nginx.vim"&gt;nginx.vim&lt;/a&gt;: Highlights configuration files for nginx&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust.vim"&gt;rust.vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vim-ruby/vim-ruby"&gt;vim-ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/leafgarland/typescript-vim"&gt;typescript-vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pangloss/vim-javascript"&gt;vim-javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Vimjas/vim-python-pep8-indent"&gt;vim-python-pep8-indent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-include-your-own-stuff" class="anchor" aria-hidden="true" href="#how-to-include-your-own-stuff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to include your own stuff?&lt;/h2&gt;
&lt;p&gt;After you have installed the setup, you can create &lt;strong&gt;~/.vim_runtime/my_configs.vim&lt;/strong&gt; to fill in any configurations that are important for you. For instance, my &lt;strong&gt;my_configs.vim&lt;/strong&gt; looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~/.vim_runtime (master)&amp;gt; cat my_configs.vim
map &amp;lt;leader&amp;gt;ct :cd ~/Desktop/Todoist/todoist&amp;lt;cr&amp;gt;
map &amp;lt;leader&amp;gt;cw :cd ~/Desktop/Wedoist/wedoist&amp;lt;cr&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also install your plugins, for instance, via pathogen you can install &lt;a href="https://github.com/tpope/vim-rails"&gt;vim-rails&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.vim_runtime
git clone git://github.com/tpope/vim-rails.git my_plugins/vim-rails
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-key-mappings" class="anchor" aria-hidden="true" href="#key-mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Mappings&lt;/h2&gt;
&lt;p&gt;The &lt;a href="http://learnvimscriptthehardway.stevelosh.com/chapters/06.html#leader" rel="nofollow"&gt;leader&lt;/a&gt; is &lt;code&gt;,&lt;/code&gt;, so whenever you see &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; it means &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-normal-mode-mappings" class="anchor" aria-hidden="true" href="#normal-mode-mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Normal mode mappings&lt;/h3&gt;
&lt;p&gt;Fast saving of a buffer (&lt;code&gt;&amp;lt;leader&amp;gt;w&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nmap &amp;lt;leader&amp;gt;w :w!&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Map &lt;code&gt;&amp;lt;Space&amp;gt;&lt;/code&gt; to &lt;code&gt;/&lt;/code&gt; (search) and &lt;code&gt;&amp;lt;Ctrl&amp;gt;+&amp;lt;Space&amp;gt;&lt;/code&gt; to &lt;code&gt;?&lt;/code&gt; (backwards search):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;space&amp;gt; /
map &amp;lt;C-space&amp;gt; ?
map &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;&amp;lt;cr&amp;gt; :noh&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Disable highlights when you press &lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;cr&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;&amp;lt;cr&amp;gt; :noh&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Smart way to move between windows (&lt;code&gt;&amp;lt;ctrl&amp;gt;j&lt;/code&gt; etc.):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;C-j&amp;gt; &amp;lt;C-W&amp;gt;j
map &amp;lt;C-k&amp;gt; &amp;lt;C-W&amp;gt;k
map &amp;lt;C-h&amp;gt; &amp;lt;C-W&amp;gt;h
map &amp;lt;C-l&amp;gt; &amp;lt;C-W&amp;gt;l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Closing of the current buffer(s) (&lt;code&gt;&amp;lt;leader&amp;gt;bd&lt;/code&gt; and (&lt;code&gt;&amp;lt;leader&amp;gt;ba&lt;/code&gt;)):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" Close current buffer
map &amp;lt;leader&amp;gt;bd :Bclose&amp;lt;cr&amp;gt;

" Close all buffers
map &amp;lt;leader&amp;gt;ba :1,1000 bd!&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Useful mappings for managing tabs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;tn :tabnew&amp;lt;cr&amp;gt;
map &amp;lt;leader&amp;gt;to :tabonly&amp;lt;cr&amp;gt;
map &amp;lt;leader&amp;gt;tc :tabclose&amp;lt;cr&amp;gt;
map &amp;lt;leader&amp;gt;tm :tabmove 

" Opens a new tab with the current buffer's path
" Super useful when editing files in the same directory
map &amp;lt;leader&amp;gt;te :tabedit &amp;lt;C-r&amp;gt;=expand("%:p:h")&amp;lt;cr&amp;gt;/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Switch &lt;a href="http://vim.wikia.com/wiki/Set_working_directory_to_the_current_file" rel="nofollow"&gt;CWD&lt;/a&gt; to the directory of the open buffer:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;cd :cd %:p:h&amp;lt;cr&amp;gt;:pwd&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Open &lt;code&gt;ack.vim&lt;/code&gt; for fast search:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;g :Ack 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quickly open a buffer for scripbble:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;q :e ~/buffer&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Toggle paste mode on and off:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;pp :setlocal paste!&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-visual-mode-mappings" class="anchor" aria-hidden="true" href="#visual-mode-mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual mode mappings&lt;/h3&gt;
&lt;p&gt;Visual mode pressing &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt; searches for the current selection:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vnoremap &amp;lt;silent&amp;gt; * :call VisualSelection('f')&amp;lt;CR&amp;gt;
vnoremap &amp;lt;silent&amp;gt; # :call VisualSelection('b')&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When you press gv you &lt;code&gt;Ack.vim&lt;/code&gt; after the selected text:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vnoremap &amp;lt;silent&amp;gt; gv :call VisualSelection('gv', '')&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When you press &lt;code&gt;&amp;lt;leader&amp;gt;r&lt;/code&gt; you can search and replace the selected text:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vnoremap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;r :call VisualSelection('replace')&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Surround the visual selection in parenthesis/brackets/etc.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vnoremap $1 &amp;lt;esc&amp;gt;`&amp;gt;a)&amp;lt;esc&amp;gt;`&amp;lt;i(&amp;lt;esc&amp;gt;
vnoremap $2 &amp;lt;esc&amp;gt;`&amp;gt;a]&amp;lt;esc&amp;gt;`&amp;lt;i[&amp;lt;esc&amp;gt;
vnoremap $3 &amp;lt;esc&amp;gt;`&amp;gt;a}&amp;lt;esc&amp;gt;`&amp;lt;i{&amp;lt;esc&amp;gt;
vnoremap $$ &amp;lt;esc&amp;gt;`&amp;gt;a"&amp;lt;esc&amp;gt;`&amp;lt;i"&amp;lt;esc&amp;gt;
vnoremap $q &amp;lt;esc&amp;gt;`&amp;gt;a'&amp;lt;esc&amp;gt;`&amp;lt;i'&amp;lt;esc&amp;gt;
vnoremap $e &amp;lt;esc&amp;gt;`&amp;gt;a"&amp;lt;esc&amp;gt;`&amp;lt;i"&amp;lt;esc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-insert-mode-mappings" class="anchor" aria-hidden="true" href="#insert-mode-mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Insert mode mappings&lt;/h3&gt;
&lt;p&gt;Quickly insert parenthesis/brackets/etc.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;inoremap $1 ()&amp;lt;esc&amp;gt;i
inoremap $2 []&amp;lt;esc&amp;gt;i
inoremap $3 {}&amp;lt;esc&amp;gt;i
inoremap $4 {&amp;lt;esc&amp;gt;o}&amp;lt;esc&amp;gt;O
inoremap $q ''&amp;lt;esc&amp;gt;i
inoremap $e ""&amp;lt;esc&amp;gt;i
inoremap $t &amp;lt;&amp;gt;&amp;lt;esc&amp;gt;i
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Insert the current date and time (useful for timestamps):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;iab xdate &amp;lt;C-r&amp;gt;=strftime("%d/%m/%y %H:%M:%S")&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-command-line-mappings" class="anchor" aria-hidden="true" href="#command-line-mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line mappings&lt;/h3&gt;
&lt;p&gt;$q is super useful when browsing on the command line. It deletes everything until the last slash:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cno $q &amp;lt;C-\&amp;gt;eDeleteTillSlash()&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bash like keys for the command line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cnoremap &amp;lt;C-A&amp;gt;		&amp;lt;Home&amp;gt;
cnoremap &amp;lt;C-E&amp;gt;		&amp;lt;End&amp;gt;
cnoremap &amp;lt;C-K&amp;gt;		&amp;lt;C-U&amp;gt;

cnoremap &amp;lt;C-P&amp;gt; &amp;lt;Up&amp;gt;
cnoremap &amp;lt;C-N&amp;gt; &amp;lt;Down&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Write the file as sudo (works only on Unix). Super useful when you open a file and you don't have permissions to save your changes. &lt;a href="http://vim.wikia.com/wiki/Su-write" rel="nofollow"&gt;Vim tip&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:W 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-plugin-related-mappings" class="anchor" aria-hidden="true" href="#plugin-related-mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugin related mappings&lt;/h3&gt;
&lt;p&gt;Open &lt;a href="https://github.com/vim-scripts/bufexplorer.zip"&gt;bufexplorer&lt;/a&gt; to see and manage the current buffers (&lt;code&gt;&amp;lt;leader&amp;gt;o&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;o :BufExplorer&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Open &lt;a href="https://github.com/vim-scripts/mru.vim"&gt;MRU.vim&lt;/a&gt; to see the recently open files (&lt;code&gt;&amp;lt;leader&amp;gt;f&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;f :MRU&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Open &lt;a href="https://github.com/kien/ctrlp.vim"&gt;ctrlp.vim&lt;/a&gt; plugin to quickly find a file or a buffer (&lt;code&gt;&amp;lt;leader&amp;gt;j&lt;/code&gt; or &lt;code&gt;&amp;lt;ctrl&amp;gt;f&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:ctrlp_map = '&amp;lt;C-f&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/scrooloose/nerdtree"&gt;NERD Tree&lt;/a&gt; mappings:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;nn :NERDTreeToggle&amp;lt;cr&amp;gt;
map &amp;lt;leader&amp;gt;nb :NERDTreeFromBookmark 
map &amp;lt;leader&amp;gt;nf :NERDTreeFind&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/junegunn/goyo.vim"&gt;goyo.vim&lt;/a&gt; and &lt;a href="https://github.com/amix/vim-zenroom2"&gt;vim-zenroom2&lt;/a&gt; lets you only focus on one thing at a time. It removes all the distractions and centers the content. It has a special look when editing Markdown, reStructuredText and textfiles. It only has one mapping. (&lt;code&gt;&amp;lt;leader&amp;gt;z&lt;/code&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;z :Goyo&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/terryma/vim-multiple-cursors"&gt;vim-multiple-cursors&lt;/a&gt; mappings to manage multiple cursors at once:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:multi_cursor_start_word_key      = '&amp;lt;C-s&amp;gt;'
let g:multi_cursor_select_all_word_key = '&amp;lt;A-s&amp;gt;'
let g:multi_cursor_start_key           = 'g&amp;lt;C-s&amp;gt;'
let g:multi_cursor_select_all_key      = 'g&amp;lt;A-s&amp;gt;'
let g:multi_cursor_next_key            = '&amp;lt;C-s&amp;gt;'
let g:multi_cursor_prev_key            = '&amp;lt;C-p&amp;gt;'
let g:multi_cursor_skip_key            = '&amp;lt;C-x&amp;gt;'
let g:multi_cursor_quit_key            = '&amp;lt;Esc&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/maxbrunsfeld/vim-yankstack"&gt;vim-yankstack&lt;/a&gt; mappings to manage the kill-ring (clipboard):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nmap &amp;lt;C-p&amp;gt; &amp;lt;Plug&amp;gt;yankstack_substitute_older_paste
nmap &amp;lt;C-n&amp;gt; &amp;lt;Plug&amp;gt;yankstack_substitute_newer_paste
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/ctrlpvim/ctrlp.vim"&gt;ctrl-p&lt;/a&gt; mappings to easily find and open a file, buffer, etc.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:ctrlp_map = '&amp;lt;C-f&amp;gt;'
map &amp;lt;leader&amp;gt;j :CtrlP&amp;lt;cr&amp;gt;
map &amp;lt;C-b&amp;gt; :CtrlPBuffer&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/garbas/vim-snipmate"&gt;vim-snipmate&lt;/a&gt; mappings to autocomplete via snippets:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ino &amp;lt;C-j&amp;gt; &amp;lt;C-r&amp;gt;=snipMate#TriggerSnippet()&amp;lt;cr&amp;gt;
snor &amp;lt;C-j&amp;gt; &amp;lt;esc&amp;gt;i&amp;lt;right&amp;gt;&amp;lt;C-r&amp;gt;=snipMate#TriggerSnippet()&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/tpope/vim-surround"&gt;vim-surround&lt;/a&gt; mappings to easily surround a string with &lt;code&gt;_()&lt;/code&gt; gettext annotation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vmap Si S(i_&amp;lt;esc&amp;gt;f)
au FileType mako vmap Si S"i${ _(&amp;lt;esc&amp;gt;2f"a) }&amp;lt;esc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/dense-analysis/ale"&gt;ale&lt;/a&gt; to easily go to the next Ale syntax/lint error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nmap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;a &amp;lt;Plug&amp;gt;(ale_next_wrap)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-spell-checking" class="anchor" aria-hidden="true" href="#spell-checking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spell checking&lt;/h3&gt;
&lt;p&gt;Pressing &lt;code&gt;&amp;lt;leader&amp;gt;ss&lt;/code&gt; will toggle spell checking:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;ss :setlocal spell!&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Shortcuts using &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; instead of special characters:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;sn ]s
map &amp;lt;leader&amp;gt;sp [s
map &amp;lt;leader&amp;gt;sa zg
map &amp;lt;leader&amp;gt;s? z=
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-cope" class="anchor" aria-hidden="true" href="#cope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cope&lt;/h3&gt;
&lt;p&gt;Query &lt;code&gt;:help cope&lt;/code&gt; if you are unsure what cope is. It's super useful!&lt;/p&gt;
&lt;p&gt;When you search with &lt;code&gt;Ack.vim&lt;/code&gt;, display your results in cope by doing:
&lt;code&gt;&amp;lt;leader&amp;gt;cc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To go to the next search result do:
&lt;code&gt;&amp;lt;leader&amp;gt;n&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To go to the previous search results do:
&lt;code&gt;&amp;lt;leader&amp;gt;p&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Cope mappings:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;cc :botright cope&amp;lt;cr&amp;gt;
map &amp;lt;leader&amp;gt;co ggVGy:tabnew&amp;lt;cr&amp;gt;:set syntax=qf&amp;lt;cr&amp;gt;pgg
map &amp;lt;leader&amp;gt;n :cn&amp;lt;cr&amp;gt;
map &amp;lt;leader&amp;gt;p :cp&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-uninstall" class="anchor" aria-hidden="true" href="#how-to-uninstall"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to uninstall&lt;/h2&gt;
&lt;p&gt;Just do following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;~/.vim_runtime&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Remove any lines that reference &lt;code&gt;.vim_runtime&lt;/code&gt; in your &lt;code&gt;~/.vimrc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-doist" class="anchor" aria-hidden="true" href="#doist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Doist&lt;/h2&gt;
&lt;p&gt;Maintaining this Vim configuration isn't my day job. Daily I am the founder of &lt;a href="https://doist.com/" rel="nofollow"&gt;Doist&lt;/a&gt;. You could come and help us build the workplace of the future while living a balanced life (anywhere in the world &lt;g-emoji class="g-emoji" alias="earth_africa" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30d.png"&gt;🌍&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="earth_americas" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30e.png"&gt;🌎&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="earth_asia" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30f.png"&gt;🌏&lt;/g-emoji&gt;).&lt;/p&gt;
&lt;p&gt;PS: Using Vim isn't a requirement &lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>amix</author><guid isPermaLink="false">https://github.com/amix/vimrc</guid><pubDate>Sat, 01 Feb 2020 00:02:00 GMT</pubDate></item><item><title>mattn/emmet-vim #3 in Vim script, Today</title><link>https://github.com/mattn/emmet-vim</link><description>&lt;p&gt;&lt;i&gt;emmet for vim: http://emmet.io/&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="mkd" data-path="README.mkd"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-emmet-vim" class="anchor" aria-hidden="true" href="#emmet-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emmet-vim&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/mattn/emmet-vim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e200137536c2ef71a536c621aaf8c1894f1a916/68747470733a2f2f7472617669732d63692e6f72672f6d6174746e2f656d6d65742d76696d2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/mattn/emmet-vim.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mattn.github.com/emmet-vim"&gt;emmet-vim&lt;/a&gt; is a vim plug-in
which provides support for expanding abbreviations similar to
&lt;a href="http://emmet.io/" rel="nofollow"&gt;emmet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/mattn/emmet-vim/master/doc/screenshot.gif"&gt;&lt;img src="https://raw.githubusercontent.com/mattn/emmet-vim/master/doc/screenshot.gif" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.vim.org/scripts/script.php?script_id=2981" rel="nofollow"&gt;Download zip file&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.vim
unzip emmet-vim.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install using &lt;a href="https://github.com/tpope/vim-pathogen"&gt;pathogen.vim&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/mattn/emmet-vim.git ~/.vim/bundle/emmet-vim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install using &lt;a href="https://github.com/gmarik/vundle"&gt;Vundle&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" add this line to your .vimrc file
Plugin 'mattn/emmet-vim'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install using &lt;a href="https://github.com/junegunn/vim-plug"&gt;Vim-Plug&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" add this line to your .vimrc file
Plug 'mattn/emmet-vim'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To checkout the source from repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.vim/bundle
git clone https://github.com/mattn/emmet-vim.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/mattn/emmet-vim.git
cd emmet-vim
cp plugin/emmet.vim ~/.vim/plugin/
cp autoload/emmet.vim ~/.vim/autoload/
cp -a autoload/emmet ~/.vim/autoload/
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-quick-tutorial" class="anchor" aria-hidden="true" href="#quick-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Tutorial&lt;/h2&gt;
&lt;p&gt;Open or create a New File:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim index.html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Type ("_" is the cursor position):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;html:5_
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then type &lt;code&gt;&amp;lt;c-y&amp;gt;,&lt;/code&gt; (&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;y&lt;/kbd&gt;&lt;kbd&gt;,&lt;/kbd&gt;), and you should see:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;html&lt;/span&gt; &lt;span class="pl-e"&gt;lang&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;en&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class="pl-ent"&gt;meta&lt;/span&gt; &lt;span class="pl-e"&gt;charset&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UTF-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class="pl-ent"&gt;title&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;title&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;head&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;body&lt;/span&gt;&amp;gt;
	_
&amp;lt;/&lt;span class="pl-ent"&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;html&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mattn/emmet-vim/master/TUTORIAL" rel="nofollow"&gt;More Tutorials&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-enable-in-different-mode" class="anchor" aria-hidden="true" href="#enable-in-different-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enable in different mode&lt;/h2&gt;
&lt;p&gt;If you don't want to enable emmet in all modes,
you can use set these options in &lt;code&gt;vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;user_emmet_mode&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;n&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c"&gt;    &lt;span class="pl-c"&gt;"&lt;/span&gt;only enable normal mode functions.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;user_emmet_mode&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;inv&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt;enable all functions, which is equal to&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;user_emmet_mode&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c"&gt;    &lt;span class="pl-c"&gt;"&lt;/span&gt;enable all function in all mode.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-enable-just-for-htmlcss" class="anchor" aria-hidden="true" href="#enable-just-for-htmlcss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enable just for html/css&lt;/h2&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;user_emmet_install_global&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;FileType&lt;/span&gt; html,css EmmetInstall&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-redefine-trigger-key" class="anchor" aria-hidden="true" href="#redefine-trigger-key"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Redefine trigger key&lt;/h2&gt;
&lt;p&gt;To remap the default &lt;code&gt;&amp;lt;C-Y&amp;gt;&lt;/code&gt; leader:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;user_emmet_leader_key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;C-Z&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the trailing &lt;code&gt;,&lt;/code&gt; still needs to be entered, so the new keymap would be &lt;code&gt;&amp;lt;C-Z&amp;gt;,&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-adding-custom-snippets" class="anchor" aria-hidden="true" href="#adding-custom-snippets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding custom snippets&lt;/h2&gt;
&lt;p&gt;If you have installed the &lt;a href="https://github.com/mattn/webapi-vim"&gt;web-api&lt;/a&gt; for &lt;strong&gt;emmet-vim&lt;/strong&gt; you can also add your own snippets using a custom &lt;strong&gt;snippets.json&lt;/strong&gt; file.&lt;/p&gt;
&lt;p&gt;Once you have installed the &lt;a href="https://github.com/mattn/webapi-vim"&gt;web-api&lt;/a&gt; add this line to your &lt;strong&gt;.vimrc&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:user_emmet_settings = webapi#json#decode(join(readfile(expand('~/.snippets_custom.json')), "\n"))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can change the &lt;strong&gt;path&lt;/strong&gt; to your &lt;strong&gt;snippets_custom.json&lt;/strong&gt; according to your preferences.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.emmet.io/customization/snippets/" rel="nofollow"&gt;Here&lt;/a&gt; you can find instructions about creating your customized &lt;strong&gt;snippets.json&lt;/strong&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-authors" class="anchor" aria-hidden="true" href="#project-authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Authors&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://mattn.kaoriya.net/" rel="nofollow"&gt;Yasuhiro Matsumoto&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-links" class="anchor" aria-hidden="true" href="#links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-emmet-official-site" class="anchor" aria-hidden="true" href="#emmet-official-site"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emmet official site:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://emmet.io/" rel="nofollow"&gt;http://emmet.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-zen-coding-official-site" class="anchor" aria-hidden="true" href="#zen-coding-official-site"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;zen-coding official site:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.google.com/p/zen-coding/" rel="nofollow"&gt;http://code.google.com/p/zen-coding/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-emmetvim" class="anchor" aria-hidden="true" href="#emmetvim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;emmet.vim:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mattn.github.com/emmet-vim"&gt;http://mattn.github.com/emmet-vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-development-repository" class="anchor" aria-hidden="true" href="#development-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;development repository:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mattn/emmet-vim"&gt;https://github.com/mattn/emmet-vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-my-blog-posts-about-zencoding-vim" class="anchor" aria-hidden="true" href="#my-blog-posts-about-zencoding-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;my blog posts about zencoding-vim:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://mattn.kaoriya.net/software/vim/20100222103327.htm" rel="nofollow"&gt;http://mattn.kaoriya.net/software/vim/20100222103327.htm&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://mattn.kaoriya.net/software/vim/20100306021632.htm" rel="nofollow"&gt;http://mattn.kaoriya.net/software/vim/20100306021632.htm&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-japanese-blog-posts-about-zencoding-vim" class="anchor" aria-hidden="true" href="#japanese-blog-posts-about-zencoding-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Japanese blog posts about zencoding-vim:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://d.hatena.ne.jp/idesaku/20100424/1272092255" rel="nofollow"&gt;http://d.hatena.ne.jp/idesaku/20100424/1272092255&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://d.hatena.ne.jp/griefworker/20110118/vim_zen_coding" rel="nofollow"&gt;http://d.hatena.ne.jp/griefworker/20110118/vim_zen_coding&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://d.hatena.ne.jp/sakurako_s/20110126/1295988873" rel="nofollow"&gt;http://d.hatena.ne.jp/sakurako_s/20110126/1295988873&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://looxu.blogspot.jp/2010/02/zencodingvimhtml.html" rel="nofollow"&gt;http://looxu.blogspot.jp/2010/02/zencodingvimhtml.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-a-chinese-translation-of-the-tutorial" class="anchor" aria-hidden="true" href="#a-chinese-translation-of-the-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Chinese translation of the tutorial:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.zfanw.com/blog/zencoding-vim-tutorial-chinese.html" rel="nofollow"&gt;http://www.zfanw.com/blog/zencoding-vim-tutorial-chinese.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mattn</author><guid isPermaLink="false">https://github.com/mattn/emmet-vim</guid><pubDate>Sat, 01 Feb 2020 00:03:00 GMT</pubDate></item><item><title>lambdalisue/fern.vim #4 in Vim script, Today</title><link>https://github.com/lambdalisue/fern.vim</link><description>&lt;p&gt;&lt;i&gt;🌿 General purpose asynchrnonous tree viewer written in Pure Vim script&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--fernvim" class="anchor" aria-hidden="true" href="#-fernvim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="herb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f33f.png"&gt;🌿&lt;/g-emoji&gt; fern.vim&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d0fe6e1a00ebd0ee9d14413827c14759540c76d3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d302e372e302d79656c6c6f772e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d0fe6e1a00ebd0ee9d14413827c14759540c76d3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d302e372e302d79656c6c6f772e737667" alt="Version 0.7.0" data-canonical-src="https://img.shields.io/badge/version-0.7.0-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c145585cc428c0eaa8e880b59c179a655f498278/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f72742d56696d253230382e312532306f7225323061626f76652d79656c6c6f77677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/c145585cc428c0eaa8e880b59c179a655f498278/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f72742d56696d253230382e312532306f7225323061626f76652d79656c6c6f77677265656e2e737667" alt="Support Vim 8.1 or above" data-canonical-src="https://img.shields.io/badge/support-Vim%208.1%20or%20above-yellowgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/62aee229dd5ceb874508d950cec09e9dfbc34029/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f72742d4e656f76696d253230302e342532306f7225323061626f76652d79656c6c6f77677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/62aee229dd5ceb874508d950cec09e9dfbc34029/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f72742d4e656f76696d253230302e342532306f7225323061626f76652d79656c6c6f77677265656e2e737667" alt="Support Neovim 0.4 or above" data-canonical-src="https://img.shields.io/badge/support-Neovim%200.4%20or%20above-yellowgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/vim-jp/vital.vim"&gt;&lt;img src="https://camo.githubusercontent.com/8452e085c71858e9c1572623752fef55dbb5e323/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706f776572656425323062792d766974616c2e76696d2d3830323733662e737667" alt="Powered by vital.vim" data-canonical-src="https://img.shields.io/badge/powered%20by-vital.vim-80273f.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lambdalisue/vital-Whisky"&gt;&lt;img src="https://camo.githubusercontent.com/5638f284f9f5392410709737ae01f35662768695/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706f776572656425323062792d766974616c2d2d576869736b792d3830323733662e737667" alt="Powered by vital-Whisky" data-canonical-src="https://img.shields.io/badge/powered%20by-vital--Whisky-80273f.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/lambdalisue/fern.vim/actions"&gt;&lt;img src="https://github.com/lambdalisue/fern.vim/workflows/reviewdog/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lambdalisue/fern.vim/actions"&gt;&lt;img src="https://github.com/lambdalisue/fern.vim/workflows/linux_vim/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lambdalisue/fern.vim/actions"&gt;&lt;img src="https://github.com/lambdalisue/fern.vim/workflows/linux_neovim/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lambdalisue/fern.vim/actions"&gt;&lt;img src="https://github.com/lambdalisue/fern.vim/workflows/windows_vim/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lambdalisue/fern.vim/actions"&gt;&lt;img src="https://github.com/lambdalisue/fern.vim/workflows/windows_neovim/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lambdalisue/fern.vim/actions"&gt;&lt;img src="https://github.com/lambdalisue/fern.vim/workflows/mac_neovim/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;General purpose asynchronous tree viewer written in Pure Vim script.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WARNING: This project is in beta stage. Any changes are applied without announcements.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/546312/73183241-d89aa980-415d-11ea-876f-30bd4d80f0cd.png"&gt;&lt;img src="https://user-images.githubusercontent.com/546312/73183241-d89aa980-415d-11ea-876f-30bd4d80f0cd.png" alt="Split windows" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;em&gt;Split windows&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/546312/73183310-f10ac400-415d-11ea-80c8-af1609294889.png"&gt;&lt;img src="https://user-images.githubusercontent.com/546312/73183310-f10ac400-415d-11ea-80c8-af1609294889.png" alt="Project drawer" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;em&gt;Project drawer&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-concept" class="anchor" aria-hidden="true" href="#concept"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concept&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Supports both Vim and Neovim without any external dependencies&lt;/li&gt;
&lt;li&gt;Support &lt;em&gt;split windows&lt;/em&gt; and &lt;em&gt;project drawer&lt;/em&gt; explained in &lt;a href="http://vimcasts.org/blog/2013/01/oil-and-vinegar-split-windows-and-project-drawer/" rel="nofollow"&gt;this article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Provide features as actions so that user don't have to remember mappings&lt;/li&gt;
&lt;li&gt;Make operation asynchronous as much as possible to keep latency&lt;/li&gt;
&lt;li&gt;User experience is more important than simplicity (maintainability)&lt;/li&gt;
&lt;li&gt;Custamizability is less important than simplicity (maintainability)&lt;/li&gt;
&lt;li&gt;Easy to create 3rd party plugins to support any kind of trees&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;fern.vim has no extra dependencies so use your favorite Vim plugin manager or see &lt;a href="https://github.com/lambdalisue/fern.vim/wiki/How-to-install"&gt;How to install&lt;/a&gt; page for detail.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-command-split-windows" class="anchor" aria-hidden="true" href="#command-split-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command (Split windows)&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/546312/73183457-29120700-415e-11ea-8d04-cb959659e369.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/546312/73183457-29120700-415e-11ea-8d04-cb959659e369.gif" alt="Screencast of Split windows" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Open fern on a current working directory by:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:Fern .&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or open fern on a parent directory of a current buffer by:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:Fern &lt;span class="pl-k"&gt;%&lt;/span&gt;:&lt;span class="pl-c1"&gt;h&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or open fern on a current working directory with a current buffer focused by:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:Fern . -&lt;span class="pl-en"&gt;reveal&lt;/span&gt;=&lt;span class="pl-k"&gt;%&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/546312/73183700-9aea5080-415e-11ea-8bca-e1dea78d24ca.png"&gt;&lt;img src="https://user-images.githubusercontent.com/546312/73183700-9aea5080-415e-11ea-8bca-e1dea78d24ca.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The following options are available for fern viewer.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-opener&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;edit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An opener to open the buffer. Available value is one of &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;edit&lt;/code&gt;, &lt;code&gt;split&lt;/code&gt;, &lt;code&gt;vsplit&lt;/code&gt;, &lt;code&gt;tabedit&lt;/code&gt;, or those values with modifiers (e.g. &lt;code&gt;topleft vsplit&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-reveal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Recursively expand branches and focus the node. It must be a relative path from the root node of the tree. Otherwise the value is ignored.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;:Fern {url} [-opener={opener}] [-reveal={reveal}]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-command-project-drawer" class="anchor" aria-hidden="true" href="#command-project-drawer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command (Project drawer)&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/546312/73184080-324fa380-415f-11ea-8280-e0b6c7a9989f.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/546312/73184080-324fa380-415f-11ea-8280-e0b6c7a9989f.gif" alt="Screencast of Project drawer" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All usage above open fern as &lt;a href="http://vimcasts.org/blog/2013/01/oil-and-vinegar-split-windows-and-project-drawer/" rel="nofollow"&gt;&lt;em&gt;split windows style&lt;/em&gt;&lt;/a&gt;. To open fern as &lt;a href="http://vimcasts.org/blog/2013/01/oil-and-vinegar-split-windows-and-project-drawer/" rel="nofollow"&gt;&lt;em&gt;project drawer style&lt;/em&gt;&lt;/a&gt;, use &lt;code&gt;-drawer&lt;/code&gt; option like:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:Fern . &lt;span class="pl-k"&gt;-&lt;/span&gt;drawer&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A fern window with &lt;em&gt;project drawer&lt;/em&gt; style always appeared to the most left side of Vim and behaviors of some mappings/actions are slightly modified (e.g. a buffer in the next window will be used as an anchor buffer in a project drawer style to open a new buffer.)&lt;/p&gt;
&lt;p&gt;Note that addtional to the all options available for &lt;em&gt;split windows&lt;/em&gt; style, &lt;em&gt;project drawer&lt;/em&gt; style enables the follwoing options:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-width&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;30&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The width of the project drawer window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-keep&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Disable to quit Vim when there is only one project drawer buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-toggle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Close existing project drawer rather than focus&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;:Fern {url} -drawer [-opener={opener}] [-reveal={reveal}] [-width=30] [-keep] [-toggle]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-actions" class="anchor" aria-hidden="true" href="#actions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Actions&lt;/h3&gt;
&lt;p&gt;To execute actions, hit &lt;code&gt;a&lt;/code&gt; on a fern buffer and input an action to perform.
To see all actions available, hit &lt;code&gt;?&lt;/code&gt; or execute &lt;code&gt;help&lt;/code&gt; action then all available actions will be listed.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/546312/73184453-c91c6000-415f-11ea-8e6b-f1df4b9284de.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/546312/73184453-c91c6000-415f-11ea-8e6b-f1df4b9284de.gif" alt="Actions" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mappings" class="anchor" aria-hidden="true" href="#mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mappings&lt;/h3&gt;
&lt;p&gt;The following mappings/actions are available among any fern buffer&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Mapping&lt;/th&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Open a prompt to input an action name to perform&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Repeat previous action invoked from a prompt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;?&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;help&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Output mappings/actions to a pseudo buffer as help&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;C-c&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Cancel any operation under processing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;C-l&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;redraw&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Redraw content of the buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Show a debug informatin of a node under the cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;F5&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;reload&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Reload node itself and descendent nodes of a node under the cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;expand&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expand (open) a node under the cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;collapse&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Collapse (close) a node under the cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;i&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;reveal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Reveal (recursively focus and expand) a node which input by user&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;enter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Enter a new tree which root node is a node under the cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;BS&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;C-h&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;leave&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Leave to a new tree which root is the parent node of a current root node&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:select&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Select window to open a node under the cursor (like &lt;a href="https://github.com/t9md/vim-choosewin"&gt;t9md/vim-choosewin&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;e&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An alias of &lt;code&gt;open:edit&lt;/code&gt; action&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;E&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:side&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor on right side of the fern buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:edit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An alias of &lt;code&gt;open:edit-or-error&lt;/code&gt; action&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:split&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;split&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:vsplit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;vsplit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:tabedit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;tabedit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:above&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;leftabove split&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:left&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;leftabove vsplit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:below&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;rightbelow split&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:right&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;rightbelow vsplit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:top&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;topleft split&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:leftest&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;topleft vsplit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:bottom&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;botright split&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:rightest&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;botright vsplit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:edit-or-error&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;edit&lt;/code&gt; or throw error when the buffer is &lt;code&gt;modified&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:edit-or-split&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;edit&lt;/code&gt; or &lt;code&gt;split&lt;/code&gt; when the buffer is &lt;code&gt;modified&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:edit-or-vsplit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;edit&lt;/code&gt; or &lt;code&gt;vsplit&lt;/code&gt; when the buffer is &lt;code&gt;modified&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:edit-or-tabedit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with &lt;code&gt;edit&lt;/code&gt; or &lt;code&gt;tabedit&lt;/code&gt; when the buffer is &lt;code&gt;modified&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Return&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;C-m&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Invoke &lt;code&gt;open&lt;/code&gt; whe a node under the cursor is leaf. Otherwise invoke &lt;code&gt;enter&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;l&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Invoke &lt;code&gt;open&lt;/code&gt; whe a node under the cursor is leaf. Otherwise invoke &lt;code&gt;expand&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;zoom&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An alias of &lt;code&gt;zoom:half&lt;/code&gt; action&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;zoom:half&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Temporary increase the width of a project drawer. It does nothing on split windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;zoom:full&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Temporary increase the width of a project drawer. It does nothing on split windows&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;And the following mappings/actions are available in builtin &lt;code&gt;file&lt;/code&gt; scheme&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Mapping&lt;/th&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Chnage directory to the root node of the tree with &lt;code&gt;cd&lt;/code&gt; command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;lcd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Chnage directory to the root node of the tree with &lt;code&gt;lcd&lt;/code&gt; command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;tcd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Chnage directory to the root node of the tree with &lt;code&gt;tcd&lt;/code&gt; command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;x&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;open:system&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open a node under the cursor with a system program&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;new-file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Create a new file under a node under the cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;K&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;new-dir&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Create a new directory under a node under the cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Copy files/directories of selected nodes to new locations sequentially&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;m&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;move&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Move files/directories of selected nodes to new locations sequentially&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;clipboard-copy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Save files/directories of selected nodes to the internal clipboard to copy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;M&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;clipboard-move&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Save files/directories of selected nodes to the internal clipboard to move&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;P&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;clipboard-pate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Paste files/directories to a node under the cursor from the internal clipboard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;clipboard-clear&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Clear the internal clipboard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;D&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;trash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Move files/directries of selected nodes to the system trash-bin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Remove files/directries of selected nodes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;R&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;rename&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Start renamer to rename multiple files/directories by using Vim buffer (like exrename in &lt;a href="https://github.com/Shougo/vimfiler.vim"&gt;Shougo/vimfiler.vim&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-renamer-action-aka-exrename" class="anchor" aria-hidden="true" href="#renamer-action-aka-exrename"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Renamer action (A.k.a exrename)&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;rename&lt;/code&gt; action open a new buffer with path of selected nodes.
Users can edit that buffer and &lt;code&gt;:w&lt;/code&gt; applies the changes.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/546312/73184814-5d86c280-4160-11ea-9ed1-d5a8d66d1774.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/546312/73184814-5d86c280-4160-11ea-9ed1-d5a8d66d1774.gif" alt="Renamer" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customize" class="anchor" aria-hidden="true" href="#customize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;FileType fern&lt;/code&gt; autocmd to execute initialization scripts for fern buffer like:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;init_fern&lt;/span&gt;() &lt;span class="pl-k"&gt;abort&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; Use 'select' instead of 'edit' for default 'open' action&lt;/span&gt;
  &lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(fern&lt;span class="pl-k"&gt;-&lt;/span&gt;action&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;open&lt;/span&gt;) &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(fern&lt;span class="pl-k"&gt;-&lt;/span&gt;action&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;open&lt;/span&gt;:select)
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-k"&gt;augroup&lt;/span&gt; &lt;span class="pl-en"&gt;fern&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;custom&lt;/span&gt;
  &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;
  &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;FileType&lt;/span&gt; fern &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;init_fern&lt;/span&gt;()
&lt;span class="pl-k"&gt;augroup&lt;/span&gt; &lt;span class="pl-k"&gt;END&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;FileType&lt;/code&gt; autocmd will be invoked AFTER a fern buffer has initialized but BEFORE contents of a buffer become ready.
So avoid accessing actual contents in the above function.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/lambdalisue/fern.vim/wiki/Tips"&gt;Tips&lt;/a&gt; pages to find tips, or write pages to share your tips ;-)&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h1&gt;
&lt;p&gt;The fern.vim supports 3rd party plugin system for scheme and mappings.
See &lt;a href="https://github.com/lambdalisue/fern.vim/wiki/Plugins"&gt;Plugins&lt;/a&gt; pages to find 3rd party plugins of fern.vim.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h1&gt;
&lt;p&gt;Any contribution including documentations are welcome.&lt;/p&gt;
&lt;p&gt;Contributors who change codes should install &lt;a href="https://github.com/thinca/vim-themis"&gt;thinca/vim-themis&lt;/a&gt; to run tests before complete a PR.
PRs which does not pass tests won't be accepted.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;The code in fern.vim follows MIT license texted in &lt;a href="./LICENSE"&gt;LICENSE&lt;/a&gt;.
Contributors need to agree that any modifications sent in this repository follow the license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>lambdalisue</author><guid isPermaLink="false">https://github.com/lambdalisue/fern.vim</guid><pubDate>Sat, 01 Feb 2020 00:04:00 GMT</pubDate></item><item><title>GideonWolfe/vim.reaper #5 in Vim script, Today</title><link>https://github.com/GideonWolfe/vim.reaper</link><description>&lt;p&gt;&lt;i&gt;💀 A Hackable, Fully Featured, Rice Friendly Neovim Configuration&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="/ascii.png"&gt;&lt;img src="/ascii.png" width="600" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;&lt;g-emoji class="g-emoji" alias="skull" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f480.png"&gt;💀&lt;/g-emoji&gt; A Hackable, Fully Featured, Rice Friendly Neovim Configuration &lt;g-emoji class="g-emoji" alias="skull" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f480.png"&gt;💀&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="#features"&gt;Features&lt;/a&gt; •
  &lt;a href="#installation"&gt;Installation&lt;/a&gt; •
  &lt;a href="#usage"&gt;Usage&lt;/a&gt; •
  &lt;a href="#required-tools"&gt;Required Tools&lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;a href="https://github.com/gideonwolfe/vim.reaper/stargazers"&gt;
    &lt;img src="https://camo.githubusercontent.com/fe4f429a97ae8aba2db8c1483a13d8057b8e7733/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f676964656f6e776f6c66652f76696d2e7265617065722e7376673f7374796c653d666c61742d737175617265266c6f676f3d6861636b61646179" data-canonical-src="https://img.shields.io/github/stars/gideonwolfe/vim.reaper.svg?style=flat-square&amp;amp;logo=hackaday" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/gideonwolfe/vim.reaper/commits/master"&gt;
    &lt;img src="https://camo.githubusercontent.com/cf80f59defeb55c15a160ec358ef0e649b9a37d2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f676964656f6e776f6c66652f76696d2e7265617065722e7376673f7374796c653d666c61742d737175617265266c6f676f3d76696d" data-canonical-src="https://img.shields.io/github/last-commit/gideonwolfe/vim.reaper.svg?style=flat-square&amp;amp;logo=vim" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9b799a4eff19694b1409dc33f478dd6911d3f844/68747470733a2f2f73746172732e6d6564762e696f2f476964656f6e576f6c66652f76696d2e7265617065722e737667"&gt;&lt;img src="https://camo.githubusercontent.com/9b799a4eff19694b1409dc33f478dd6911d3f844/68747470733a2f2f73746172732e6d6564762e696f2f476964656f6e576f6c66652f76696d2e7265617065722e737667" title="commits" data-canonical-src="https://stars.medv.io/GideonWolfe/vim.reaper.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;🎨&lt;/g-emoji&gt; Colorscheme generated with &lt;a href="https://github.com/dylanaraps/pywal"&gt;pywal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="thought_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ad.png"&gt;💭&lt;/g-emoji&gt; Intellisense, Completion, and Linting with &lt;a href="https://github.com/neoclide/coc.nvim"&gt;coc.nvim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="label" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3f7.png"&gt;🏷️&lt;/g-emoji&gt; Tag management with &lt;a href="https://github.com/liuchengxu/vista.vim"&gt;vista.vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="twisted_rightwards_arrows" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f500.png"&gt;🔀&lt;/g-emoji&gt; Git integration with &lt;a href="https://github.com/tpope/vim-fugitive"&gt;vim-fugitive&lt;/a&gt;, &lt;a href="https://github.com/airblade/vim-gitgutter"&gt;vim-gitgutter&lt;/a&gt; and &lt;a href="https://github.com/jesseduffield/lazygit"&gt;lazygit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="airplane" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2708.png"&gt;✈️&lt;/g-emoji&gt; Informative statusline and tabline with &lt;a href="https://github.com/vim-airline/vim-airline"&gt;vim-airline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="scissors" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2702.png"&gt;✂️&lt;/g-emoji&gt; Code snippets powered by &lt;a href="https://github.com/sirver/UltiSnips"&gt;UltiSnips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; Intelligent suggestions with &lt;a href="https://github.com/zxqfl/tabnine-vim"&gt;vim-tabnine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="file_folder" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c1.png"&gt;📁&lt;/g-emoji&gt; Simple file browsing with &lt;a href="https://github.com/scrooloose/nerdtree"&gt;NERDTree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="scroll" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png"&gt;📜&lt;/g-emoji&gt; Dynamic homepage with &lt;a href="https://github.com/mhinz/vim-startify"&gt;vim-startify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="mag_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png"&gt;🔎&lt;/g-emoji&gt; Distraction free writing with &lt;a href="https://github.com/junegunn/goyo.vim"&gt;Goyo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="wrench" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png"&gt;🔧&lt;/g-emoji&gt; Easily configfurable to suit your needs&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="keyboard" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2328.png"&gt;⌨️&lt;/g-emoji&gt; Common sense keybinds, so you can get right to work&lt;/li&gt;
&lt;li&gt;🧰 Assorted editing enhancements with
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tpope/vim-surround"&gt;vim-surround&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jiangmiao/auto-pairs"&gt;auto-pairs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terryma/vim-multiple-cursors"&gt;vim-multiple-cursors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yggdroot/indentLine"&gt;indentLine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/godlygeek/tabular"&gt;tabular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/comfortable-motion.vim"&gt;comfortable-motion.vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanoasis/vim-devicons"&gt;vim-devicons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scrooloose/nerdcommenter/"&gt;NERD commenter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;update_config.sh&lt;/code&gt; script simply copies the &lt;code&gt;nvim&lt;/code&gt; folder into your &lt;code&gt;$HOME/.config&lt;/code&gt; directory. This script can also be used to update configurations that you have modified or have been updated from git.&lt;/p&gt;
&lt;p&gt;Before installing for the first time, go into the &lt;code&gt;vim.reaper/nvim&lt;/code&gt; directory and run &lt;code&gt;nvim -u init.vim&lt;/code&gt;. This will tell neovim to launch using this configuration file. This lets you fully get everything up and running before you commit to puting it in &lt;code&gt;.config&lt;/code&gt;. Back up any old configs!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-keybindings" class="anchor" aria-hidden="true" href="#keybindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keybindings&lt;/h2&gt;
&lt;p&gt;Click to expand&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;&lt;code&gt;Basic keybinds&lt;/code&gt; &lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt;&lt;/summary&gt;
&lt;p&gt;
&lt;/p&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Keybind&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Leader Key&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SPACE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Exit insert mode&lt;/td&gt;
&lt;td&gt;&lt;code&gt;jk&lt;/code&gt; or &lt;code&gt;kj&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;&lt;code&gt;Editing&lt;/code&gt; 🧬&lt;/summary&gt;
&lt;p&gt;
&lt;/p&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Keybind&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;NERDComment toggle comment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;n&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NERDComment sexy comment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;ns&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NERDComment append comment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;na&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NERDComment uncomment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;nu&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NERDComment comment&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;nc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NERDComment invert&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;ni&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;&lt;code&gt;Navigation&lt;/code&gt; &lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt;&lt;/summary&gt;
&lt;p&gt;
&lt;/p&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Keybind&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Navigate to left window&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl+h&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Navigate to right window&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl+l&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Navigate to top window&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl+k&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Navigate to bottom window&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl+j&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Horizontal split then move to bottom window&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;+Ctrl+s&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Horizontal split then move to right window&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;+Ctrl+l&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Next tab&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Tab&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Previous tab&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Shift+Tab&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kill buffer&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;bk&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Scroll up&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl+j&lt;/code&gt; or mouse scroll&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Scroll down&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl+k&lt;/code&gt; or mouse scroll&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;&lt;code&gt;coc.nvim&lt;/code&gt; &lt;g-emoji class="g-emoji" alias="thought_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ad.png"&gt;💭&lt;/g-emoji&gt;&lt;/summary&gt;
&lt;p&gt;
&lt;/p&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Keybind&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Open completion window&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Tab&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Accept completion&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coc-definition&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;cd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coc-type-definition&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;ctd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coc-type-implementation&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;ci&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coc-references&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;cr&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coc-rename&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;crn&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coc-format-selected&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;cf&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coc-fix-current&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;cfl&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:CocList diagnostics&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;cdi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:CocList extensions&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;ce&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:CocList commands&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;cc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:CocList outline&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;co&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;&lt;code&gt;git&lt;/code&gt; &lt;g-emoji class="g-emoji" alias="twisted_rightwards_arrows" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f500.png"&gt;🔀&lt;/g-emoji&gt;&lt;/summary&gt;
&lt;p&gt;
&lt;/p&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Keybind&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;:Gstatus&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gs&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:Gdiffsplit&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:Gcommit&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:Gpush&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gp&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:Gpull&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gP&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:Gmove&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gm&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:Gmerge&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gM&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:Gbrowse&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gb&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:CocCommand git.browserOpen&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gbl&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:CocCommand git.chunkInfo&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gh&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:CocCommand git.showCommit&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gsc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:CocCommand git.toggleGutters&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;gg&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:ToggleLazyGit&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;lg&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;&lt;code&gt;Translation &lt;/code&gt; &lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt;&lt;/summary&gt;
&lt;p&gt;
&lt;/p&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Keybind&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;:Translate&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:TranslateW&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;tw&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:TranslateR&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;tr&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;&lt;code&gt;LaTeX &lt;/code&gt; &lt;g-emoji class="g-emoji" alias="scroll" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png"&gt;📜&lt;/g-emoji&gt;&lt;/summary&gt;
&lt;p&gt;
&lt;/p&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Keybind&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;:VimtexCompile&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;lc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:VimtexCompileSelected&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;ls&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:VimtexInfo&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;li&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:VimtexTocToggle&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;lt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:VimtexView&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;lv&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;&lt;code&gt;Misc&lt;/code&gt; 🧰&lt;/summary&gt;
&lt;p&gt;
&lt;/p&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Keybind&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;:ToggleLazyDocker&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;ld&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:MarkdownPreview&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;md&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;Check &lt;code&gt;mappings.vim&lt;/code&gt; for a complete list of keybinds.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-startify" class="anchor" aria-hidden="true" href="#startify"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Startify&lt;/h2&gt;
&lt;p&gt;To open Neovim to the startify buffer, simply launch &lt;code&gt;nvim&lt;/code&gt; without any arguments. Your recently edited files will be displayed, as well as recently edited files from the current directory.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/46c923d7eafc7e76a99c239f05069442532f77ee/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f73746172746966792e706e673f"&gt;&lt;img src="https://camo.githubusercontent.com/46c923d7eafc7e76a99c239f05069442532f77ee/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f73746172746966792e706e673f" width="640" height="360" title="startify" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/startify.png?" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-completion" class="anchor" aria-hidden="true" href="#completion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Completion&lt;/h2&gt;
&lt;p&gt;In the middle of a word, you can press &lt;code&gt;Tab&lt;/code&gt; to open the Coc floating completion menu and cycle through options. This menu should be populated with sippets from &lt;code&gt;UltiSnips&lt;/code&gt;, smart complete from &lt;code&gt;TabNine&lt;/code&gt;, and any other completion suggestions. Press &lt;code&gt;Shift+Tab&lt;/code&gt; to go up in the menu, and &lt;code&gt;Enter&lt;/code&gt; to select an option.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e90aca4fa37ff02b37ed0011e9b6a6855809ab68/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f636f6d706c6574696f6e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e90aca4fa37ff02b37ed0011e9b6a6855809ab68/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f636f6d706c6574696f6e2e706e67" width="640" height="360" title="coc" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/completion.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
Note: Windows are set to the background color because the other colors look gross IMO. Ideally we could have a border on the floating windows but that is not implemented in CoC yet.
&lt;h2&gt;&lt;a id="user-content-nerdtree" class="anchor" aria-hidden="true" href="#nerdtree"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NERDTree&lt;/h2&gt;
&lt;p&gt;In any buffer, press &lt;code&gt;F7&lt;/code&gt; to open the NERDTree file browser. Optionally disable the &lt;code&gt;nerdtree-highlights&lt;/code&gt; plugin if you don't want syntax highlighting in NT.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/86340ad4565ab2a2b55b1c86ef4b1b284e1b55d4/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f6e657264747265652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/86340ad4565ab2a2b55b1c86ef4b1b284e1b55d4/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f6e657264747265652e706e67" width="640" height="360" title="nerdtree" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/nerdtree.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-airline" class="anchor" aria-hidden="true" href="#airline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Airline&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-tabline" class="anchor" aria-hidden="true" href="#tabline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tabline&lt;/h3&gt;
&lt;p&gt;The tabline will display the currently open buffers, and whether they have been modified.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ddc4fe62c19713ba50f234245b97b8f1ce1f6d3e/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f7461626c696e652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/ddc4fe62c19713ba50f234245b97b8f1ce1f6d3e/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f7461626c696e652e706e67" width="940" height="13" title="tabline" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/tabline.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-statusbar" class="anchor" aria-hidden="true" href="#statusbar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Statusbar&lt;/h3&gt;
&lt;p&gt;The status bar displays the current editing mode, git hunks, git branch with branch status, the modified status of the buffer, the filename and filetype, the character encoding method, progress through file, and warnings/errors found by linter.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ff2b059d4af657b0090f90e7ff2fa070bc977fc5/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f7374617475736261722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/ff2b059d4af657b0090f90e7ff2fa070bc977fc5/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f7374617475736261722e706e67" width="940" height="23" title="statusbar" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/statusbar.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-vista" class="anchor" aria-hidden="true" href="#vista"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vista&lt;/h2&gt;
&lt;p&gt;I am still ironing out the kinks in my vista config (specifically with C files), but it should work pretty well for most filetypes. Press &lt;code&gt;F8&lt;/code&gt; to toggle the Vista window.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7858d35441b552fccabf5913e9e81036377dc0a6/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f76697374612e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7858d35441b552fccabf5913e9e81036377dc0a6/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f76697374612e706e67" width="640" height="360" title="vista" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/vista.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;For quick location of tags, you can activate the &lt;code&gt;Vista finder&lt;/code&gt; fuzzyfinder by pressing &lt;code&gt;&amp;lt;Leader&amp;gt;ft&lt;/code&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/adaa34e26e7d2ede3bf2b6e8d88234edf34b3add/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f766973746166757a7a792e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/adaa34e26e7d2ede3bf2b6e8d88234edf34b3add/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f766973746166757a7a792e706e67" width="640" height="360" title="vistafzf" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/vistafuzzy.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;To navigate the fzf menu, you can type the name of the tag or use &lt;code&gt;Ctrl+j&lt;/code&gt; or &lt;code&gt;Ctrl+k&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lazygit-and-lazydocker" class="anchor" aria-hidden="true" href="#lazygit-and-lazydocker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LazyGit and LazyDocker&lt;/h2&gt;
&lt;p&gt;LazyGit and LazyDocker give you a convenient TUI portal to your current git repo or docker stack. They can be brought up with &lt;code&gt;&amp;lt;Leader&amp;gt;lg&lt;/code&gt; and &lt;code&gt;&amp;lt;Leader&amp;gt;ld&lt;/code&gt; respectively.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/662c7aa1c750163437e539dfc712352cc97bf5af/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f6c617a796769742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/662c7aa1c750163437e539dfc712352cc97bf5af/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f6c617a796769742e706e67" width="640" height="360" title="lazygit" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/lazygit.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/845a83ddeecdb3deb91957b5e7e15f1ffff17899/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f6c617a79646f636b65722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/845a83ddeecdb3deb91957b5e7e15f1ffff17899/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f6c617a79646f636b65722e706e67" width="640" height="360" title="lazydocker" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/lazydocker.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-translator" class="anchor" aria-hidden="true" href="#translator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translator&lt;/h2&gt;
&lt;p&gt;By default I set the target language to french. This option is configurable in the plugin-settings, plus a ton of other options for that plugin I'm not even using at the moment.&lt;/p&gt;
&lt;p&gt;Here's what it looks like if you translate a phrase to a window with &lt;code&gt;&amp;lt;Leader&amp;gt;tw&lt;/code&gt;.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ac64695d8403532461496a743560455cecc9c5e9/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f7472616e736c6174652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/ac64695d8403532461496a743560455cecc9c5e9/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f7472616e736c6174652e706e67" title="translator" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/translate.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-markdown" class="anchor" aria-hidden="true" href="#markdown"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Markdown&lt;/h2&gt;
&lt;p&gt;While editing a markdown document, press &lt;code&gt;&amp;lt;Leader&amp;gt;md&lt;/code&gt; to open a live preview of your document. You must edit the plugin settings to point to the absolute filepath of the &lt;code&gt;css&lt;/code&gt; file. This shoud just mean changing the username.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/85e9c3231bea76b5ebe21b5e8f6754e5411eff54/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f6d61726b646f776e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/85e9c3231bea76b5ebe21b5e8f6754e5411eff54/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f6d61726b646f776e2e706e67" title="markdown" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/markdown.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;If you are running pywal, your colors will be dynamically sourced!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-latex" class="anchor" aria-hidden="true" href="#latex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LaTeX&lt;/h2&gt;
&lt;p&gt;While editing a LaTeX document, press &lt;code&gt;&amp;lt;Leader&amp;gt;lc&lt;/code&gt; to start automatic compilation.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6f9b04bd7c2e79c0db2dd68286c63ece966895c5/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f6c617465782e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6f9b04bd7c2e79c0db2dd68286c63ece966895c5/68747470733a2f2f676964656f6e776f6c66652e636f6d2f696d672f6e656f76696d2f7265617065722f6c617465782e706e67" title="latex" data-canonical-src="https://gideonwolfe.com/img/neovim/reaper/latex.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;use &lt;a href="https://github.com/GideonWolfe/Zathura-Pywal"&gt;zathura pywal&lt;/a&gt; for the most cohesive theme!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-required-tools" class="anchor" aria-hidden="true" href="#required-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Required tools&lt;/h1&gt;
&lt;p&gt;These must be installed to make use of all the awesome features&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fzf&lt;/code&gt; to enable fuzzy finding&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eslint&lt;/code&gt; &lt;a href="https://www.npmjs.com/package/eslint" rel="nofollow"&gt;npm package&lt;/a&gt; for coc-eslint (only for JavaScript)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ccls&lt;/code&gt; package for C/C++ language servers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OracleJDK&lt;/code&gt; or &lt;code&gt;OpenJDK&lt;/code&gt;, version 8+ (only for Java)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;coc.nvim &lt;a href="https://www.npmjs.com/package/coc.nvim" rel="nofollow"&gt;npm package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dylanaraps/pywal"&gt;pywal&lt;/a&gt; for colorscheme&lt;/li&gt;
&lt;li&gt;&lt;code&gt;neovim&lt;/code&gt; python module from pip&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker"&gt;lazydocker&lt;/a&gt; for TUI docker management&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazygit"&gt;lazygit&lt;/a&gt; for TUI git management&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h1&gt;
&lt;p&gt;vim.reaper is only part of a balanced linux diet. Check out my dotfiles for more ricing goodness. Please feel free to let me know about any errors, or create PRs that expand the configuration or make it more robust on different systems.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://gideonwolfe.com" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/3cf0cbcfd7a6a418258a94656251db7c1a17d612/68747470733a2f2f666f7274686562616467652e636f6d2f696d616765732f6261646765732f36302d70657263656e742d6f662d7468652d74696d652d776f726b732d65766572792d74696d652e737667" data-canonical-src="https://forthebadge.com/images/badges/60-percent-of-the-time-works-every-time.svg" style="max-width:100%;"&gt;
&lt;/a&gt;&lt;/p&gt;&lt;a href="https://gideonwolfe.com" rel="nofollow"&gt;
&lt;/a&gt;&lt;/article&gt;&lt;/div&gt;</description><author>GideonWolfe</author><guid isPermaLink="false">https://github.com/GideonWolfe/vim.reaper</guid><pubDate>Sat, 01 Feb 2020 00:05:00 GMT</pubDate></item><item><title>liuchengxu/vim-clap #6 in Vim script, Today</title><link>https://github.com/liuchengxu/vim-clap</link><description>&lt;p&gt;&lt;i&gt;:clap: Modern performant generic finder and dispatcher for Vim and NeoVim&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8850248/67629807-ee76a500-f8b6-11e9-8777-264a897dd9d4.png"&gt;&lt;img width="300px" src="https://user-images.githubusercontent.com/8850248/67629807-ee76a500-f8b6-11e9-8777-264a897dd9d4.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/liuchengxu/vim-clap/actions?workflow=ci"&gt;&lt;img src="https://github.com/liuchengxu/vim-clap/workflows/ci/badge.svg" alt="CI" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/liuchengxu/vim-clap?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c047b03d862e51664132f10a14ceef729d7cf32/68747470733a2f2f6261646765732e6769747465722e696d2f6c69756368656e6778752f76696d2d636c61702e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/liuchengxu/vim-clap.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vim-clap is a modern generic interactive finder and dispatcher, based on the newly feature: &lt;code&gt;floating_win&lt;/code&gt; of neovim or &lt;code&gt;popup&lt;/code&gt; of vim. The goal of vim-clap is to work everywhere out of the box, with fast response.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8850248/73323347-24467380-4282-11ea-8dac-5ef5a1ee63bb.gif"&gt;&lt;img width="600px" src="https://user-images.githubusercontent.com/8850248/73323347-24467380-4282-11ea-8dac-5ef5a1ee63bb.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/liuchengxu/vim-clap/issues/1"&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; More screenshots&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#caveats"&gt;Caveats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirement"&gt;Requirement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#vim-plug"&gt;vim-plug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#commands"&gt;Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#global-variables"&gt;Global variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keybindings"&gt;Keybindings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#execute-some-code-during-the-process"&gt;Execute some code during the process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#change-highlights"&gt;Change highlights&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-define-your-own-provider"&gt;How to define your own provider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contribution"&gt;Contribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credit"&gt;Credit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Pure vimscript.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Work out of the box, without any extra dependency.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Extensible, easy to add new source providers.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Find or dispatch anything on the fly, with smart cache strategy.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Avoid touching the current window layout, less eye movement.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Support multi-selection, use vim's regexp as filter by default.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Support the preview functionality when navigating the result list.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Support built-in fuzzy match and external fuzzy filter tools.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Flexible UI layout.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Support searching by multiple providers simultaneously.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Add the preview support for more providers.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Add the multi-selection support for more providers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-caveats" class="anchor" aria-hidden="true" href="#caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vim-clap is in a very early stage, breaking changes and bugs are expected.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Windows support is not fully tested. The providers without using any system related command should work smoothly, that is to say, most sync providers are just able to work. Please &lt;a href="https://github.com/liuchengxu/vim-clap/issues/new?assignees=&amp;amp;labels=&amp;amp;template=bug_report.md&amp;amp;title="&gt;create an issue&lt;/a&gt; if you run into any error in Windows. And any help would be appreciated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Although a lot of effort has been made to unify the behavior of vim-clap between vim and neovim, and most part works in the same way, it just can't be exactly the same, for &lt;code&gt;floating_win&lt;/code&gt; and &lt;code&gt;popup&lt;/code&gt; are actually two different things anyway.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirement" class="anchor" aria-hidden="true" href="#requirement"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirement&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vim: &lt;code&gt;:echo has('patch-8.1.2114')&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;NeoVim: &lt;code&gt;:echo has('nvim-0.4.2')&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-vim-plug" class="anchor" aria-hidden="true" href="#vim-plug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;liuchengxu/vim-clap&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Build the extra binary if cargo exists on your system.&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;liuchengxu/vim-clap&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:Clap install-binary&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; The bang version will try to download the prebuilt binary if cargo does not exist.&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;liuchengxu/vim-clap&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:Clap install-binary!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;do&lt;/code&gt; hook for installing the extra binary is highly recommended, which can mostly help you get a performant vim-clap easily. If that does not work for you, please refer to &lt;a href="INSTALL.md"&gt;INSTALL.md&lt;/a&gt; for installing the optional dependencies manually.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Vim-clap is utterly easy to use, just type, press Ctrl-J/K to locate the wanted entry, and press Enter to apply and exit. The default settings should work well for most people in most cases, but it's absolutely hackable too.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h3&gt;
&lt;p&gt;The paradigm is &lt;code&gt;Clap [provider_id_or_alias] {provider_args}&lt;/code&gt;, where the &lt;code&gt;provider_id_or_alias&lt;/code&gt; is obviously either the name or alias of provider. Technically the &lt;code&gt;provider_id&lt;/code&gt; can be anything that can be used a key of a Dict, but I recommend you using an &lt;em&gt;identifier&lt;/em&gt; like name as the provider id, and use the alias rule if you prefer a special name.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Command&lt;/th&gt;
&lt;th align="left"&gt;List&lt;/th&gt;
&lt;th align="left"&gt;Requirement&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap bcommits&lt;/code&gt;&lt;strong&gt;&lt;sup&gt;!&lt;/sup&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;Git commits for the current buffer&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://github.com/git/git"&gt;git&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap blines&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Lines in the current buffer&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap buffers&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open buffers&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap colors&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Colorschemes&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap command&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Command&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap hist:&lt;/code&gt; or &lt;code&gt;Clap command_history&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Command history&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap commits&lt;/code&gt; &lt;strong&gt;&lt;sup&gt;!&lt;/sup&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;Git commits&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://github.com/git/git"&gt;git&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap files&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Files&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://github.com/sharkdp/fd"&gt;fd&lt;/a&gt;&lt;/strong&gt;/&lt;strong&gt;&lt;a href="https://github.com/git/git"&gt;git&lt;/a&gt;&lt;/strong&gt;/&lt;strong&gt;&lt;a href="https://github.com/BurntSushi/ripgrep"&gt;rg&lt;/a&gt;&lt;/strong&gt;/find&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap filetypes&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;File types&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap gfiles&lt;/code&gt; or &lt;code&gt;Clap git_files&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Files managed by git&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://github.com/git/git"&gt;git&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap git_diff_files&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Files managed by git and having uncommitted changes&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://github.com/git/git"&gt;git&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap grep&lt;/code&gt;&lt;strong&gt;&lt;sup&gt;+&lt;/sup&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;Grep on the fly&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://github.com/BurntSushi/ripgrep"&gt;rg&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap history&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open buffers and &lt;code&gt;v:oldfiles&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap help_tags&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Help tags&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap jumps&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Jumps&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap lines&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Lines in the loaded buffers&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap marks&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Marks&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap quickfix&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Entries of the quickfix list&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap loclist&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Entries of the location list&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap registers&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Registers&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap tags&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Tags in the current buffer&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://github.com/liuchengxu/vista.vim"&gt;vista.vim&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap yanks&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Yank stack of the current vim session&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap filer&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Ivy-like file explorer&lt;/td&gt;
&lt;td align="left"&gt;&lt;strong&gt;&lt;a href="https://github.com/liuchengxu/vim-clap/blob/master/INSTALL.md#maple-binary"&gt;maple&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap providers&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;List the vim-clap providers&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;Clap windows&lt;/code&gt; &lt;strong&gt;&lt;sup&gt;!&lt;/sup&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align="left"&gt;Windows&lt;/td&gt;
&lt;td align="left"&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The command with a superscript &lt;code&gt;!&lt;/code&gt; means that it is not yet implemented or not tested.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The command with a superscript &lt;code&gt;+&lt;/code&gt; means that it supports multi-selection via &lt;kbd&gt;Tab&lt;/kbd&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;:Clap grep ++query=&amp;lt;cword&amp;gt;&lt;/code&gt; to grep the word under cursor.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/liuchengxu/vim-clap/pulls"&gt;Send a pull request&lt;/a&gt; if you want to get your provider listed here.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-global-variables" class="anchor" aria-hidden="true" href="#global-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global variables&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:clap_layout&lt;/code&gt;: Dict, &lt;code&gt;{ 'width': '67%', 'height': '33%', 'row': '33%', 'col': '17%' }&lt;/code&gt; by default. This variable controls the size and position of vim-clap window. By default, the vim-clap window is placed relative to the currently active window. To make it relative to the whole editor modify this variable as shown below:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;clap_layout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;relative&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;editor&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:clap_open_action&lt;/code&gt;: Dict, &lt;code&gt;{ 'ctrl-t': 'tab split', 'ctrl-x': 'split', 'ctrl-v': 'vsplit' }&lt;/code&gt;, extra key bindings for opening the selected file in a different way. NOTE: do not define a key binding which is conflicted with the other default bindings of vim-clap, and only &lt;code&gt;ctrl-*&lt;/code&gt; is supported for now.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:clap_provider_alias&lt;/code&gt;: Dict, if you don't want to invoke some clap provider by its id(name), as it's too long or somehow, you can add an alias for that provider.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; The provider name is `command_history`, with the following alias config,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; now you can call it via both `:Clap command_history` and `:Clap hist:`.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;clap_provider_alias&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hist:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;command_history&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:clap_selected_sign&lt;/code&gt;: Dict, &lt;code&gt;{ 'text': ' &amp;gt;', 'texthl': "WarningMsg", "linehl": "ClapSelected"}&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:clap_current_selection_sign&lt;/code&gt;: Dict, &lt;code&gt;{ 'text': '&amp;gt;&amp;gt;', 'texthl': "WarningMsg", "linehl": "ClapCurrentSelection"}&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:clap_no_matches_msg&lt;/code&gt;: String, &lt;code&gt;'NO MATCHES FOUND'&lt;/code&gt;, message to show when there is no matches found.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:clap_popup_input_delay&lt;/code&gt;: Number, &lt;code&gt;200ms&lt;/code&gt; by default, delay for actually responsing to the input, vim only.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:clap_disable_run_rooter&lt;/code&gt;: Bool, &lt;code&gt;v:false&lt;/code&gt;, vim-clap by default will try to run from the project root by changing &lt;code&gt;cwd&lt;/code&gt; temporarily. Set it to &lt;code&gt;v:true&lt;/code&gt; to run from the origin &lt;code&gt;cwd&lt;/code&gt;. The project root here means the git base directory. Create an issue if you want to see more support about the project root.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The option naming convention for provider is &lt;code&gt;g:clap_provider_{provider_id}_{opt}&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:clap_provider_grep_delay&lt;/code&gt;: 300ms by default, delay for actually spawning the grep job in the background.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:clap_provider_grep_blink&lt;/code&gt;: [2, 100] by default, blink 2 times with 100ms timeout when jumping the result. Set it to [0, 0] to disable the blink.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:clap_provider_grep_opts&lt;/code&gt;: An empty string by default, allows you to enable flags such as &lt;code&gt;'--hidden -g "!.git/"'&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;code&gt;:help clap-options&lt;/code&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-keybindings" class="anchor" aria-hidden="true" href="#keybindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keybindings&lt;/h3&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Ctrl-j&lt;/kbd&gt;/&lt;kbd&gt;Down&lt;/kbd&gt; or &lt;kbd&gt;Ctrl-k&lt;/kbd&gt;/&lt;kbd&gt;Up&lt;/kbd&gt; to navigate the result list up and down linewise.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;PageDown&lt;/kbd&gt;/&lt;kbd&gt;PageUp&lt;/kbd&gt; to scroll the result list down and up.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Ctrl-a&lt;/kbd&gt;/&lt;kbd&gt;Home&lt;/kbd&gt; to go to the start of the input.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Ctrl-e&lt;/kbd&gt;/&lt;kbd&gt;End&lt;/kbd&gt; to go to the end of the input.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Ctrl-c&lt;/kbd&gt;, &lt;kbd&gt;Ctrl-g&lt;/kbd&gt;, &lt;kbd&gt;Ctrl-[&lt;/kbd&gt; or &lt;kbd&gt;Esc&lt;/kbd&gt; to exit.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Ctrl-h&lt;/kbd&gt;/&lt;kbd&gt;BS&lt;/kbd&gt; to delete previous character.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Ctrl-d&lt;/kbd&gt; to delete next character.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Ctrl-b&lt;/kbd&gt; to move cursor left one character.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Ctrl-f&lt;/kbd&gt; to move cursor right one character.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Enter&lt;/kbd&gt; to select the entry and exit.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Tab&lt;/kbd&gt; to select multiple entries and open them using the quickfix window.(Need the provider has &lt;code&gt;sink*&lt;/code&gt; support)
&lt;ul&gt;
&lt;li&gt;Use &lt;kbd&gt;Tab&lt;/kbd&gt; to expand the directory for &lt;code&gt;:Clap filer&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Ctrl-t&lt;/kbd&gt; or &lt;kbd&gt;Ctrl-x&lt;/kbd&gt;, &lt;kbd&gt;Ctrl-v&lt;/kbd&gt; to open the selected entry in a new tab or a new split.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Use &lt;kbd&gt;Ctrl-u&lt;/kbd&gt; to clear inputs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;code&gt;:help clap-keybindings&lt;/code&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-execute-some-code-during-the-process" class="anchor" aria-hidden="true" href="#execute-some-code-during-the-process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Execute some code during the process&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;augroup&lt;/span&gt; &lt;span class="pl-en"&gt;YourGroup&lt;/span&gt;
  &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;
  &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; ClapOnEnter   &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;YourFunction&lt;/span&gt;()
  &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; ClapOnExit    &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;YourFunction&lt;/span&gt;()
&lt;span class="pl-k"&gt;augroup&lt;/span&gt; &lt;span class="pl-k"&gt;END&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-change-highlights" class="anchor" aria-hidden="true" href="#change-highlights"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change highlights&lt;/h3&gt;
&lt;p&gt;By default vim-clap will use the colors extracted from your colorscheme, which is not guaranteed to suitable for all the colorschemes. Then you can try the built-in &lt;code&gt;material_design_dark&lt;/code&gt; theme then:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;clap_theme&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;material_design_dark&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8850248/72986238-bd106580-3e22-11ea-98ad-03faa9d6130c.png"&gt;&lt;img src="https://user-images.githubusercontent.com/8850248/72986238-bd106580-3e22-11ea-98ad-03faa9d6130c.png" alt="clap-highlights" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You could also set &lt;code&gt;g:clap_theme&lt;/code&gt; to be a &lt;code&gt;Dict&lt;/code&gt; to specify the palette:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Change the CamelCase of related highlight group name to under_score_case.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;clap_theme&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;search_text&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;guifg&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;red&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ctermfg&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;red&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;} }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ClapDisplay&lt;/code&gt; and &lt;code&gt;ClapPreview&lt;/code&gt; are the most basic highlight groups for the display and preview window, which can be overrided if the provider has its own syntax highlight, then checkout the related &lt;a href="syntax"&gt;syntax&lt;/a&gt; file for more granular highlights directly.&lt;/p&gt;
&lt;p&gt;If you want to write your own clap theme, take &lt;a href="autoload/clap/themes/material_design_dark.vim"&gt;autoload/clap/themes/material_design_dark.vim&lt;/a&gt; as a reference.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:help clap-highlights&lt;/code&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-define-your-own-provider" class="anchor" aria-hidden="true" href="#how-to-define-your-own-provider"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to define your own provider&lt;/h2&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; `:Clap quick_open` to open some dotfiles quickly.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;clap_provider_quick_open&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;source&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.vimrc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.spacevim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.bashrc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.tmux.conf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
      &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sink&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-cce"&gt;\ &lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Find more examples at &lt;a href="https://github.com/liuchengxu/vim-clap/wiki/Examples"&gt;wiki/Examples&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For complete guide about writing a clap provider please see &lt;a href="PROVIDER.md"&gt;PROVIDER.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h2&gt;
&lt;p&gt;Vim-clap is still in beta. Any kinds of contributions are highly welcome.&lt;/p&gt;
&lt;p&gt;If you would like to see support for more providers or share your own provider, please &lt;a href="https://github.com/liuchengxu/vim-clap/issues"&gt;create an issue&lt;/a&gt; or &lt;a href="https://github.com/liuchengxu/vim-clap/pulls"&gt;create a pull request&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you'd liked to discuss the project more directly, check out &lt;a href="https://gitter.im/liuchengxu/vim-clap?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c047b03d862e51664132f10a14ceef729d7cf32/68747470733a2f2f6261646765732e6769747465722e696d2f6c69756368656e6778752f76696d2d636c61702e737667" alt="" data-canonical-src="https://badges.gitter.im/liuchengxu/vim-clap.svg" style="max-width:100%;"&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credit" class="anchor" aria-hidden="true" href="#credit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vim-clap is initially enlightened by &lt;a href="https://github.com/manateelazycat/snails"&gt;snails&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Some providers' idea and code are borrowed from &lt;a href="https://github.com/junegunn/fzf.vim"&gt;fzf.vim&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The built-in fzy python implementation is based on &lt;a href="https://github.com/aslpavel/sweep.py"&gt;sweep.py&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="LICENSE"&gt;License&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>liuchengxu</author><guid isPermaLink="false">https://github.com/liuchengxu/vim-clap</guid><pubDate>Sat, 01 Feb 2020 00:06:00 GMT</pubDate></item><item><title>easymotion/vim-easymotion #7 in Vim script, Today</title><link>https://github.com/easymotion/vim-easymotion</link><description>&lt;p&gt;&lt;i&gt;Vim motions on speed!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vim-motion-on-speed" class="anchor" aria-hidden="true" href="#vim-motion-on-speed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim motion on speed!&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/easymotion/vim-easymotion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52bd70fc1eaf310a7df1bd9abcd60bf47924ea2c/68747470733a2f2f7472617669732d63692e6f72672f656173796d6f74696f6e2f76696d2d656173796d6f74696f6e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/easymotion/vim-easymotion.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/easymotion/vim-easymotion/actions?query=workflow%3Areviewdog+event%3Apush+branch%3Amaster"&gt;&lt;img src="https://github.com/easymotion/vim-easymotion/workflows/reviewdog/badge.svg?branch=master&amp;amp;event=push" alt="reviewdog" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d5f800b9602faaeccc2738c302776a8a11797a0e/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393335392f61386539333864362d383939662d313165332d383738392d3630303235656138333635362e676966"&gt;&lt;img src="https://camo.githubusercontent.com/d5f800b9602faaeccc2738c302776a8a11797a0e/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393335392f61386539333864362d383939662d313165332d383738392d3630303235656138333635362e676966" alt="Animated demonstration" data-canonical-src="https://f.cloud.github.com/assets/3797062/2039359/a8e938d6-899f-11e3-8789-60025ea83656.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-about-the-authors" class="anchor" aria-hidden="true" href="#about-the-authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About the authors&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Authors&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Kim Silkebækken&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Lokaltog"&gt;https://github.com/Lokaltog&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;haya14busa&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/haya14busa"&gt;https://github.com/haya14busa&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-the-easymotion-project-revived" class="anchor" aria-hidden="true" href="#the-easymotion-project-revived"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The EasyMotion project, revived!&lt;/h1&gt;
&lt;p&gt;Starting from version 2.0 &lt;a href="https://github.com/haya14busa"&gt;haya14busa&lt;/a&gt; will be
taking over the project from &lt;a href="https://github.com/Lokaltog"&gt;Lokaltog&lt;/a&gt;. He's
improved the default motions, implemented many useful new features, and fixed
some bugs.&lt;/p&gt;
&lt;p&gt;EasyMotion is now completely:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Well-behaved&lt;/strong&gt;: It's consistent with the default motions of Vim and works
well in all modes. And it now supports repeating with the dot operator.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Configurable&lt;/strong&gt;: You can easily configure its behavior and map it to any key&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sophisticated&lt;/strong&gt;: Provide flawless, smooth and fast motions with minimal keystrokes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Even though some default behaviors were modified and many new features were
added, I carefully considered backward compatibility. So those of you updating
from older versions can do so without worry and start benefiting immediately
from all the new features!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;EasyMotion provides a much simpler way to use some motions in vim. It
takes the &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; out of &lt;code&gt;&amp;lt;number&amp;gt;w&lt;/code&gt; or &lt;code&gt;&amp;lt;number&amp;gt;f{char}&lt;/code&gt; by
highlighting all possible choices and allowing you to press one key to
jump directly to the target.&lt;/p&gt;
&lt;p&gt;When one of the available motions is triggered, all visible text
preceding or following the cursor is faded, and motion targets are
highlighted.&lt;/p&gt;
&lt;p&gt;EasyMotion is triggered by the provided mappings. This readme only covers the
basics; please refer to
&lt;a href="https://github.com/easymotion/vim-easymotion/blob/master/doc/easymotion.txt#L86"&gt;&lt;code&gt;:help easymotion.txt&lt;/code&gt;&lt;/a&gt;
to see all the available mappings.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-important-notes" class="anchor" aria-hidden="true" href="#important-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important notes&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-default-bindings" class="anchor" aria-hidden="true" href="#default-bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default bindings&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;The default leader has been changed to &lt;code&gt;&amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;&lt;/code&gt; to avoid
conflicts with other plugins you may have installed.&lt;/strong&gt; This can easily be
changed back to pre-1.3 behavior by rebinding the leader in your vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;prefix)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All motions will then be triggered with &lt;code&gt;&amp;lt;Leader&amp;gt;&lt;/code&gt; by default, e.g.
&lt;code&gt;&amp;lt;Leader&amp;gt;s&lt;/code&gt;, &lt;code&gt;&amp;lt;Leader&amp;gt;gE&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-for-users-of-the-forked-version" class="anchor" aria-hidden="true" href="#for-users-of-the-forked-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For users of the forked version&lt;/h3&gt;
&lt;p&gt;SelectLines and SelectPhrase are not actually &lt;em&gt;motions&lt;/em&gt;, so I've moved them into
separate plugins.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/haya14busa/vim-easyoperator-line"&gt;https://github.com/haya14busa/vim-easyoperator-line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/haya14busa/vim-easyoperator-phrase"&gt;https://github.com/haya14busa/vim-easyoperator-phrase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-usage-example-for-the-base-features" class="anchor" aria-hidden="true" href="#usage-example-for-the-base-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage example for the base features&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;cursor&amp;gt;Lorem ipsum dolor sit amet.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Type &lt;code&gt;&amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;w&lt;/code&gt;(&lt;code&gt;&amp;lt;Plug&amp;gt;(easymotion-w)&lt;/code&gt;) to trigger the word motion &lt;code&gt;w&lt;/code&gt;.
When the motion is triggered, the text is updated (no braces are actually added,
the text is highlighted in red by default):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;cursor&amp;gt;Lorem {a}psum {b}olor {c}it {d}met.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;c&lt;/code&gt; to jump to the beginning of the word "sit":&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Lorem ipsum dolor &amp;lt;cursor&amp;gt;sit amet.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Similarly, if you're looking for an "o", you can use the &lt;code&gt;f&lt;/code&gt; motion.
Type &lt;code&gt;&amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;fo&lt;/code&gt;, and all "o" characters are highlighted:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;cursor&amp;gt;L{a}rem ipsum d{b}l{c}r sit amet.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;b&lt;/code&gt; to jump to the second "o":&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Lorem ipsum d&amp;lt;cursor&amp;gt;olor sit amet.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jeffrey Way of Nettuts+ has also &lt;a href="http://net.tutsplus.com/tutorials/other/vim-essential-plugin-easymotion/" rel="nofollow"&gt;written
a tutorial&lt;/a&gt;
about EasyMotion.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-new-features-in-version-30" class="anchor" aria-hidden="true" href="#new-features-in-version-30"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New features in version 3.0&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-overwin-motions" class="anchor" aria-hidden="true" href="#overwin-motions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overwin motions&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/haya14busa/i/2753bd4dd1dfdf5962dbdbffabf24244e4e14243/easymotion/overwin-motions.gif"&gt;&lt;img src="https://raw.githubusercontent.com/haya14busa/i/2753bd4dd1dfdf5962dbdbffabf24244e4e14243/easymotion/overwin-motions.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;EasyMotion now supports moving cursor across/over window.
Since it doesn't make sense that moving cursor to other window while Visual or
Operator-pending mode, overwin motions only provides mappings for Normal
mode.  Please use &lt;code&gt;nmap&lt;/code&gt; to use overwin motions. Overwin motions only
supports bi-directional motions.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-example-configuration" class="anchor" aria-hidden="true" href="#example-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example configuration&lt;/h4&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; &amp;lt;Leader&amp;gt;f{char} to move to {char}&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;f&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bd&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;f&lt;/span&gt;)
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;f&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;overwin&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;f&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; s{char}{char} to move to {char}{char}&lt;/span&gt;
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;overwin&lt;span class="pl-k"&gt;-&lt;/span&gt;f2)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Move to line&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;L &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bd&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;jk)
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;L &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;overwin&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;line&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Move to word&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt;  &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;w&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bd&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;w&lt;/span&gt;)
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;w&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;overwin&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;w&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-integration-with-incsearchvim" class="anchor" aria-hidden="true" href="#integration-with-incsearchvim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration with incsearch.vim&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/haya14busa/incsearch.vim"&gt;haya14busa/incsearch.vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/haya14busa/incsearch-easymotion.vim"&gt;haya14busa/incsearch-easymotion.vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; You can use other keymappings like &amp;lt;C-l&amp;gt; instead of &amp;lt;CR&amp;gt; if you want to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; use these mappings as default search and sometimes want to move cursor with&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; EasyMotion.&lt;/span&gt;
&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;incsearch_config&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-k"&gt;abort&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;incsearch#util#deepextend&lt;/span&gt;(&lt;span class="pl-en"&gt;deepcopy&lt;/span&gt;({
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;modules&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-en"&gt;incsearch#config#easymotion#module&lt;/span&gt;({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;overwin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;})],
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;keymap&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: {
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;CR&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;Over&amp;gt;(easymotion)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  },
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;is_expr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;}), &lt;span class="pl-en"&gt;get&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, {}))
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-c1"&gt;noremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&amp;lt;expr&amp;gt;&lt;/span&gt; /  &lt;span class="pl-en"&gt;incsearch#go&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;SID&amp;gt;&lt;/span&gt;&lt;span class="pl-en"&gt;incsearch_config&lt;/span&gt;())
&lt;span class="pl-c1"&gt;noremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&amp;lt;expr&amp;gt;&lt;/span&gt; ?  &lt;span class="pl-en"&gt;incsearch#go&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;SID&amp;gt;&lt;/span&gt;&lt;span class="pl-en"&gt;incsearch_config&lt;/span&gt;({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;command&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;?&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}))
&lt;span class="pl-c1"&gt;noremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;g&lt;/span&gt;/ &lt;span class="pl-en"&gt;incsearch#go&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;SID&amp;gt;&lt;/span&gt;&lt;span class="pl-en"&gt;incsearch_config&lt;/span&gt;({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;is_stay&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;}))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-bonus-fuzzy-search-with-easymotion" class="anchor" aria-hidden="true" href="#bonus-fuzzy-search-with-easymotion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bonus fuzzy-search with EasyMotion&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/haya14busa/i/eab1d12a8bd322223d551956a4fd8a21d5c4bfe9/easymotion/fuzzy-incsearch-easymotion.gif"&gt;&lt;img src="https://raw.githubusercontent.com/haya14busa/i/eab1d12a8bd322223d551956a4fd8a21d5c4bfe9/easymotion/fuzzy-incsearch-easymotion.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/haya14busa/incsearch.vim"&gt;haya14busa/incsearch.vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/haya14busa/incsearch-fuzzy.vim"&gt;haya14busa/incsearch-fuzzy.vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/haya14busa/incsearch-easymotion.vim"&gt;haya14busa/incsearch-easymotion.vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;config_easyfuzzymotion&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-k"&gt;abort&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;extend&lt;/span&gt;(&lt;span class="pl-en"&gt;copy&lt;/span&gt;({
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;converters&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-en"&gt;incsearch#config#fuzzyword#converter&lt;/span&gt;()],
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;modules&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-en"&gt;incsearch#config#easymotion#module&lt;/span&gt;({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;overwin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;})],
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;keymap&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&amp;lt;&lt;/span&gt;CR&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;Over&amp;gt;(easymotion)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;},
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;is_expr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;is_stay&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;}), &lt;span class="pl-en"&gt;get&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, {}))
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-c1"&gt;noremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Space&amp;gt;&lt;/span&gt;/ &lt;span class="pl-en"&gt;incsearch#go&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;SID&amp;gt;&lt;/span&gt;&lt;span class="pl-en"&gt;config_easyfuzzymotion&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-new-features-in-version-20" class="anchor" aria-hidden="true" href="#new-features-in-version-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New features in version 2.0&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-two-key-highlighting" class="anchor" aria-hidden="true" href="#two-key-highlighting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Two key highlighting&lt;/h3&gt;
&lt;p&gt;When EasyMotion runs out of single characters to highlight movement targets, it
immediately shows you the keys you have to press.&lt;/p&gt;
&lt;p&gt;In previous versions you could not see the next character you would need to
press until you entered the first one. This made movement over long distances
less fluid. Now you can see at a glance exactly which characters to select to
get to your destination.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bidirectional-motions" class="anchor" aria-hidden="true" href="#bidirectional-motions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bidirectional motions&lt;/h3&gt;
&lt;p&gt;All motions now come in a bidirectional variants (e.g. &lt;code&gt;&amp;lt;Plug&amp;gt;(easymotion-s)&lt;/code&gt;,
&lt;code&gt;&amp;lt;Plug&amp;gt;(easymotion-bd-w)&lt;/code&gt; and so forth).
By default, you can already jump forward or backward with &lt;code&gt;&amp;lt;Leader&amp;gt;s&lt;/code&gt;. A useful
trick is to map &lt;code&gt;nmap s &amp;lt;Plug&amp;gt;(easymotion-s)&lt;/code&gt; to use &lt;code&gt;s&lt;/code&gt; instead and save one
keystroke!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2-character-search-motion" class="anchor" aria-hidden="true" href="#2-character-search-motion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2-character search motion&lt;/h3&gt;
&lt;p&gt;You can now also perform a 2-character search, similar to &lt;a href="https://github.com/goldfeld/vim-seek"&gt;vim-seek&lt;/a&gt;/&lt;a href="https://github.com/justinmk/vim-sneak"&gt;vim-sneak&lt;/a&gt; with &lt;code&gt;&amp;lt;Plug&amp;gt;(easymotion-s2)&lt;/code&gt;. For example you can highlight all words that start with &lt;code&gt;fu&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5e4ba9c43e744478405ece72de1cd285dc17079a/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393631322f37636166636563382d383961352d313165332d386632632d3566323661366238336566642e676966"&gt;&lt;img src="https://camo.githubusercontent.com/5e4ba9c43e744478405ece72de1cd285dc17079a/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393631322f37636166636563382d383961352d313165332d386632632d3566323661366238336566642e676966" alt="2-key-find-motion" data-canonical-src="https://f.cloud.github.com/assets/3797062/2039612/7cafcec8-89a5-11e3-8f2c-5f26a6b83efd.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Gif config&lt;/span&gt;
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;s2)
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;t2)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-n-character-search-motion" class="anchor" aria-hidden="true" href="#n-character-search-motion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;n-character search motion&lt;/h3&gt;
&lt;p&gt;You can also search for &lt;code&gt;n&lt;/code&gt; characters, which can be used to replace the default search of Vim.
It supports incremental highlighting and you can use &lt;code&gt;&amp;lt;Tab&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;S-Tab&amp;gt;&lt;/code&gt; to scroll down/up a page. If you press
&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;, you get the usual EasyMotion highlighting and can jump to any matching target destination with a
single keystroke.&lt;/p&gt;
&lt;p&gt;What sounds complicated should become clear if you look at the following examples.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3ac76c9ea11d3b95ad5b07a24255e2fe73c131e4/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393235342f34666266373237362d383939652d313165332d396266332d3165343436636162633039372e676966"&gt;&lt;img src="https://camo.githubusercontent.com/3ac76c9ea11d3b95ad5b07a24255e2fe73c131e4/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393235342f34666266373237362d383939652d313165332d396266332d3165343436636162633039372e676966" alt="n-key-motion-scroll" data-canonical-src="https://f.cloud.github.com/assets/3797062/2039254/4fbf7276-899e-11e3-9bf3-1e446cabc097.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6f89c255636bd8bbab1ce58162e3ebdac0caec43/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393735312f36346237326264382d383961382d313165332d383065612d3261366235373830343062322e676966"&gt;&lt;img src="https://camo.githubusercontent.com/6f89c255636bd8bbab1ce58162e3ebdac0caec43/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393735312f36346237326264382d383961382d313165332d383065612d3261366235373830343062322e676966" alt="replace-search" data-canonical-src="https://f.cloud.github.com/assets/3797062/2039751/64b72bd8-89a8-11e3-80ea-2a6b578040b2.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Gif config&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt;  / &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;sn&lt;/span&gt;)
&lt;span class="pl-c1"&gt;omap&lt;/span&gt; / &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;tn&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; These `n` &amp;amp; `N` mappings are options. You do not have to map `n` &amp;amp; `N` to EasyMotion.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Without these mappings, `n` &amp;amp; `N` works fine. (These mappings just provide&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; different highlight method and have some other features )&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt;  &lt;span class="pl-c1"&gt;n&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;next&lt;/span&gt;)
&lt;span class="pl-c1"&gt;map&lt;/span&gt;  &lt;span class="pl-c1"&gt;N&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;prev&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-within-line-motion" class="anchor" aria-hidden="true" href="#within-line-motion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Within line motion&lt;/h3&gt;
&lt;p&gt;Every motion also has variants that are restricted to just the current line
(e.g. &lt;code&gt;&amp;lt;Plug&amp;gt;(easymotion-sl)&lt;/code&gt;, &lt;code&gt;&amp;lt;Plug&amp;gt;(easymotion-bd-wl)&lt;/code&gt;, etc...). This can be
helpful if you find the full search distracting or slows down vim.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hjkl-motions" class="anchor" aria-hidden="true" href="#hjkl-motions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hjkl motions&lt;/h3&gt;
&lt;p&gt;EasyMotion can be configured to avoid repetitive use of the &lt;code&gt;h&lt;/code&gt; &lt;code&gt;j&lt;/code&gt; &lt;code&gt;k&lt;/code&gt; and
&lt;code&gt;l&lt;/code&gt; keys.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b5507bbcadd6385c38e0cff645d9ed61e46ea50e/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393431332f64386233326162322d383961302d313165332d383934662d3365383164623038346366642e676966"&gt;&lt;img src="https://camo.githubusercontent.com/b5507bbcadd6385c38e0cff645d9ed61e46ea50e/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393431332f64386233326162322d383961302d313165332d383934662d3365383164623038346366642e676966" alt="hjkl-motion" data-canonical-src="https://f.cloud.github.com/assets/3797062/2039413/d8b32ab2-89a0-11e3-894f-3e81db084cfd.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Gif config&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;l&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;lineforward)
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;j&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;j&lt;/span&gt;)
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;k&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;k&lt;/span&gt;)
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;linebackward)

&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;EasyMotion_startofline&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;"&lt;/span&gt; keep cursor column when JK motion&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-smartcase--smartsign" class="anchor" aria-hidden="true" href="#smartcase--smartsign"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Smartcase &amp;amp; Smartsign&lt;/h3&gt;
&lt;p&gt;This setting makes EasyMotion work similarly to Vim's &lt;code&gt;smartcase&lt;/code&gt; option for
global searches.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;EasyMotion_smartcase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this option set, &lt;code&gt;v&lt;/code&gt; will match both &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;V&lt;/code&gt;, but &lt;code&gt;V&lt;/code&gt; will match &lt;code&gt;V&lt;/code&gt;
only. Default: 0.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;EasyMotion_use_smartsign_us&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;"&lt;/span&gt; US layout&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; or&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;EasyMotion_use_smartsign_jp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;"&lt;/span&gt; JP layout&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This applies the same concept, but for symbols and numerals. &lt;code&gt;1&lt;/code&gt; will match &lt;code&gt;1&lt;/code&gt;
and &lt;code&gt;!&lt;/code&gt;; &lt;code&gt;!&lt;/code&gt; matches &lt;code&gt;!&lt;/code&gt; only. Default: 0.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-migemo-feature-for-japanese-user" class="anchor" aria-hidden="true" href="#migemo-feature-for-japanese-user"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migemo feature (for Japanese user)&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;EasyMotion_use_migemo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Easymotion can match multibyte Japanese characters with alphabetical input.
For example, &lt;code&gt;&amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;sa&lt;/code&gt; can search 'あ'.
This feature doesn't require cmigemo because Easymotion includes regex
patterns generated by cmigemo. However, installing &lt;code&gt;cmigemo&lt;/code&gt; will make
2-character and n-character search motions to also support the migemo feature.
Default:0&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-repeat-motions" class="anchor" aria-hidden="true" href="#repeat-motions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repeat motions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-repeat-the-last-motion" class="anchor" aria-hidden="true" href="#repeat-the-last-motion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repeat the last motion&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;Plug&amp;gt;(easymotion-repeat)&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-repeat-the-last-find-motion" class="anchor" aria-hidden="true" href="#repeat-the-last-find-motion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repeat the last find motion&lt;/h4&gt;
&lt;p&gt;In a find motion (e.g. &lt;code&gt;&amp;lt;Plug&amp;gt;(easymotion-s)&lt;/code&gt;), type &lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt; without
input characters to find the last motion again.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-jump-to-nextprevious-match-even-on-nextprevious-page" class="anchor" aria-hidden="true" href="#jump-to-nextprevious-match-even-on-nextprevious-page"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jump to next/previous match (even on next/previous page)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Plug&amp;gt;(easymotion-next)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Plug&amp;gt;(easymotion-prev)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-support-for-dot-repeat" class="anchor" aria-hidden="true" href="#support-for-dot-repeat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support for dot repeat&lt;/h4&gt;
&lt;p&gt;This requires &lt;a href="https://github.com/tpope/vim-repeat"&gt;https://github.com/tpope/vim-repeat&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can use EasyMotion with operators and press &lt;code&gt;.&lt;/code&gt; to repeat!
It is well-behaved and consistent with the default behavior of Vim.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7da2af4e3ee55f37e464072b9f54d80d5ae29c65/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393533382f30616566363661612d383961342d313165332d383234322d6332376135323038636663612e676966"&gt;&lt;img src="https://camo.githubusercontent.com/7da2af4e3ee55f37e464072b9f54d80d5ae29c65/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f333739373036322f323033393533382f30616566363661612d383961342d313165332d383234322d6332376135323038636663612e676966" alt="repeat-motion" data-canonical-src="https://f.cloud.github.com/assets/3797062/2039538/0aef66aa-89a4-11e3-8242-c27a5208cfca.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Gif config&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Require tpope/vim-repeat to enable dot repeat support&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Jump to anywhere with only `s{char}{target}`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; `s&amp;lt;CR&amp;gt;` repeat last find motion.&lt;/span&gt;
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;s&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Bidirectional &amp;amp; within line 't' motion&lt;/span&gt;
&lt;span class="pl-c1"&gt;omap&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bd&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;tl&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Use uppercase target labels and type as a lower case&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;EasyMotion_use_upper&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;"&lt;/span&gt; type `l` and match `l`&amp;amp;`L`&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;EasyMotion_smartcase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Smartsign (type `3` and match `3`&amp;amp;`#`)&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;EasyMotion_use_smartsign_us&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-pathogen-httpsgithubcomtpopevim-pathogen" class="anchor" aria-hidden="true" href="#pathogen-httpsgithubcomtpopevim-pathogen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pathogen (&lt;a href="https://github.com/tpope/vim-pathogen"&gt;https://github.com/tpope/vim-pathogen&lt;/a&gt;)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/easymotion/vim-easymotion ~/.vim/bundle/vim-easymotion
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-vundle-httpsgithubcomgmarikvundle" class="anchor" aria-hidden="true" href="#vundle-httpsgithubcomgmarikvundle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vundle (&lt;a href="https://github.com/gmarik/vundle"&gt;https://github.com/gmarik/vundle&lt;/a&gt;)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Plugin 'easymotion/vim-easymotion'
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-neobundle-httpsgithubcomshougoneobundlevim" class="anchor" aria-hidden="true" href="#neobundle-httpsgithubcomshougoneobundlevim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NeoBundle (&lt;a href="https://github.com/Shougo/neobundle.vim"&gt;https://github.com/Shougo/neobundle.vim&lt;/a&gt;)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;NeoBundle 'easymotion/vim-easymotion'
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-minimal-configuration-tutorial" class="anchor" aria-hidden="true" href="#minimal-configuration-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Minimal Configuration Tutorial&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;I recommend configuring and map keys by yourself if you are true Vimmer.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please do not be satisfied with just installing vim-easymotion, configuring it yourself boost your productivity more and more!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Default &lt;code&gt;&amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;&lt;/code&gt; prefix isn't easy to press, and I leave them just for backwards compatibility.
You should at least change the prefix key like this &lt;code&gt;map &amp;lt;Leader&amp;gt; &amp;lt;Plug&amp;gt;(easymotion-prefix)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Minimal but useful vimrc example:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;EasyMotion_do_mapping&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;"&lt;/span&gt; Disable default mappings&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Jump to anywhere you want with minimal keystrokes, with just one key binding.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; `s{char}{label}`&lt;/span&gt;
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;overwin&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;f&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; or&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; `s{char}{char}{label}`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Need one more keystroke, but on average, it may be more comfortable.&lt;/span&gt;
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;s&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;overwin&lt;span class="pl-k"&gt;-&lt;/span&gt;f2)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Turn on case-insensitive feature&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;EasyMotion_smartcase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; JK motions: Line motions&lt;/span&gt;
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;j&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;j&lt;/span&gt;)
&lt;span class="pl-c1"&gt;map&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;k&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(easymotion&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;k&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, all you need to remember is &lt;code&gt;s&lt;/code&gt; and JK motions bindings, and it's good enough to boost your cursor speed!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;s&lt;/code&gt;&lt;/strong&gt; is bidirectional find motion, you can move to anywhere with it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;j&lt;/code&gt;&lt;/strong&gt; &amp;amp; &lt;strong&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;k&lt;/code&gt;&lt;/strong&gt; make it easy to move to the lines.&lt;/p&gt;
&lt;p&gt;Of course you can use any key you want instead of &lt;code&gt;s&lt;/code&gt; such as &lt;code&gt;&amp;lt;Space&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Leader&amp;gt;s&lt;/code&gt;, etc...&lt;/p&gt;
&lt;p&gt;If you want to use more useful mappings, please see &lt;a href="https://github.com/easymotion/vim-easymotion/blob/master/doc/easymotion.txt"&gt;:h easymotion.txt&lt;/a&gt; for more detail.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>easymotion</author><guid isPermaLink="false">https://github.com/easymotion/vim-easymotion</guid><pubDate>Sat, 01 Feb 2020 00:07:00 GMT</pubDate></item><item><title>junegunn/vim-plug #8 in Vim script, Today</title><link>https://github.com/junegunn/vim-plug</link><description>&lt;p&gt;&lt;i&gt;:hibiscus: Minimalist Vim Plugin Manager&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.png"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.png" height="75" alt="vim-plug" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://travis-ci.org/junegunn/vim-plug" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8eb12d9521d9a2d8694d8cecd167589c72163050/68747470733a2f2f7472617669732d63692e6f72672f6a756e6567756e6e2f76696d2d706c75672e7376673f6272616e63683d6d6173746572" alt="travis-ci" data-canonical-src="https://travis-ci.org/junegunn/vim-plug.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;A minimalist Vim plugin manager.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/junegunn/i/master/vim-plug/installer.gif"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/vim-plug/installer.gif" height="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pros" class="anchor" aria-hidden="true" href="#pros"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pros.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Easier to setup: Single file. No boilerplate code required.&lt;/li&gt;
&lt;li&gt;Easier to use: Concise, intuitive syntax&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/i/master/vim-plug/40-in-4.gif" rel="nofollow"&gt;Super-fast&lt;/a&gt; parallel installation/update
(with any of &lt;code&gt;+job&lt;/code&gt;, &lt;code&gt;+python&lt;/code&gt;, &lt;code&gt;+python3&lt;/code&gt;, &lt;code&gt;+ruby&lt;/code&gt;, or &lt;a href="http://neovim.org/" rel="nofollow"&gt;Neovim&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Creates shallow clones to minimize disk space usage and download time&lt;/li&gt;
&lt;li&gt;On-demand loading for &lt;a href="https://github.com/junegunn/vim-startuptime-benchmark#result"&gt;faster startup time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Can review and rollback updates&lt;/li&gt;
&lt;li&gt;Branch/tag/commit support&lt;/li&gt;
&lt;li&gt;Post-update hooks&lt;/li&gt;
&lt;li&gt;Support for externally managed plugins&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim" rel="nofollow"&gt;Download plug.vim&lt;/a&gt;
and put it in the "autoload" directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-vim" class="anchor" aria-hidden="true" href="#vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim&lt;/h4&gt;
&lt;h6&gt;&lt;a id="user-content-unix" class="anchor" aria-hidden="true" href="#unix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unix&lt;/h6&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -fLo &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can automate the process by putting the command in your Vim configuration
file as suggested &lt;a href="https://github.com/junegunn/vim-plug/wiki/tips#automatic-installation"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-windows-powershell" class="anchor" aria-hidden="true" href="#windows-powershell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows (PowerShell)&lt;/h6&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;md ~\vimfiles\autoload
&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
(&lt;span class="pl-c1"&gt;New-Object&lt;/span&gt; Net.WebClient).DownloadFile(
  &lt;span class="pl-smi"&gt;$uri&lt;/span&gt;&lt;span class="pl-k"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;$ExecutionContext&lt;span class="pl-smi"&gt;.SessionState.Path.GetUnresolvedProviderPathFromPSPath&lt;/span&gt;&lt;/span&gt;(
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~\vimfiles\autoload\plug.vim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  )
)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-neovim" class="anchor" aria-hidden="true" href="#neovim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Neovim&lt;/h4&gt;
&lt;h6&gt;&lt;a id="user-content-unix-1" class="anchor" aria-hidden="true" href="#unix-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unix&lt;/h6&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -fLo &lt;span class="pl-k"&gt;~&lt;/span&gt;/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-windows-powershell-1" class="anchor" aria-hidden="true" href="#windows-powershell-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows (PowerShell)&lt;/h6&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;md ~\AppData\Local\nvim\autoload
&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
(&lt;span class="pl-c1"&gt;New-Object&lt;/span&gt; Net.WebClient).DownloadFile(
  &lt;span class="pl-smi"&gt;$uri&lt;/span&gt;&lt;span class="pl-k"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;$ExecutionContext&lt;span class="pl-smi"&gt;.SessionState.Path.GetUnresolvedProviderPathFromPSPath&lt;/span&gt;&lt;/span&gt;(
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~\AppData\Local\nvim\autoload\plug.vim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  )
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;See &lt;a href="https://github.com/junegunn/vim-plug/wiki/tutorial"&gt;tutorial&lt;/a&gt; page to learn the basics of vim-plug&lt;/li&gt;
&lt;li&gt;See &lt;a href="https://github.com/junegunn/vim-plug/wiki/tips"&gt;tips&lt;/a&gt; and &lt;a href="https://github.com/junegunn/vim-plug/wiki/faq"&gt;FAQ&lt;/a&gt; pages for common problems and questions&lt;/li&gt;
&lt;li&gt;See &lt;a href="https://github.com/junegunn/vim-plug/wiki/requirements"&gt;requirements&lt;/a&gt; page for debugging information &amp;amp; tested configurations&lt;/li&gt;
&lt;li&gt;Create an &lt;a href="https://github.com/junegunn/vim-plug/issues/new"&gt;issue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;Add a vim-plug section to your &lt;code&gt;~/.vimrc&lt;/code&gt; (or &lt;code&gt;stdpath('config') . '/init.vim'&lt;/code&gt; for Neovim)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Begin the section with &lt;code&gt;call plug#begin()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;List the plugins with &lt;code&gt;Plug&lt;/code&gt; commands&lt;/li&gt;
&lt;li&gt;&lt;code&gt;call plug#end()&lt;/code&gt; to update &lt;code&gt;&amp;amp;runtimepath&lt;/code&gt; and initialize plugin system
&lt;ul&gt;
&lt;li&gt;Automatically executes &lt;code&gt;filetype plugin indent on&lt;/code&gt; and &lt;code&gt;syntax enable&lt;/code&gt;.
You can revert the settings after the call. e.g. &lt;code&gt;filetype indent off&lt;/code&gt;, &lt;code&gt;syntax off&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h4&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Specify a directory for plugins&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; - For Neovim: stdpath('data') . '/plugged'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; - Avoid using standard Vim directory names like 'plugin'&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#begin&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.vim/plugged&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Make sure you use single quotes&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Shorthand notation; fetches https://github.com/junegunn/vim-easy-align&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/vim-easy-align&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Any valid git URL is allowed&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/junegunn/vim-github-dashboard.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Multiple Plug commands can be written in a single line using | separators&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SirVer/ultisnips&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; | Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;honza/vim-snippets&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; On-demand loading&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scrooloose/nerdtree&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NERDTreeToggle&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tpope/vim-fireplace&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clojure&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Using a non-master branch&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rdnetto/YCM-Generator&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;branch&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stable&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Using a tagged release; wildcard allowed (requires git 1.9.2 or above)&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fatih/vim-go&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tag&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Plugin options&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nsf/gocode&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tag&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v.20150303&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rtp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Plugin outside ~/.vim/plugged with post-update hook&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dir&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./install --all&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Unmanaged plugin (manually installed and updated)&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/my-prototype-plugin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Initialize plugin system&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#end&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reload .vimrc and &lt;code&gt;:PlugInstall&lt;/code&gt; to install plugins.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugInstall [name ...] [#threads]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Install plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugUpdate [name ...] [#threads]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Install or update plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugClean[!]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Remove unlisted plugins (bang version will clean without prompt)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugUpgrade&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Upgrade vim-plug itself&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugStatus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Check the status of plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugDiff&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Examine changes from the previous update and the pending changes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugSnapshot[!] [output path]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Generate script for restoring the current snapshot of the plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-plug-options" class="anchor" aria-hidden="true" href="#plug-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Plug&lt;/code&gt; options&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;branch&lt;/code&gt;/&lt;code&gt;tag&lt;/code&gt;/&lt;code&gt;commit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Branch/tag/commit of the repository to use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rtp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Subdirectory that contains Vim plugin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dir&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Custom directory for the plugin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;as&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use different name for the plugin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;do&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Post-update hook (string or funcref)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;on&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On-demand loading: Commands or &lt;code&gt;&amp;lt;Plug&amp;gt;&lt;/code&gt;-mappings&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;for&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On-demand loading: File types&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;frozen&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do not update unless explicitly specified&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-global-options" class="anchor" aria-hidden="true" href="#global-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global options&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Flag&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_threads&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;Default number of threads to use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_timeout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;Time limit of each task in seconds (&lt;em&gt;Ruby &amp;amp; Python&lt;/em&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_retries&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Number of retries in case of timeout (&lt;em&gt;Ruby &amp;amp; Python&lt;/em&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_shallow&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Use shallow clone&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_window&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vertical topleft new&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Command to open plug window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_pwindow&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;above 12new&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Command to open preview window in &lt;code&gt;PlugDiff&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_url_format&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;https://git::@github.com/%s.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;printf&lt;/code&gt; format to build repo URL (Only applies to the subsequent &lt;code&gt;Plug&lt;/code&gt; commands)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-keybindings" class="anchor" aria-hidden="true" href="#keybindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keybindings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt; - &lt;code&gt;PlugDiff&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;S&lt;/code&gt; - &lt;code&gt;PlugStatus&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;R&lt;/code&gt; - Retry failed update or installation tasks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;U&lt;/code&gt; - Update plugins in the selected range&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt; - Close the window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:PlugStatus&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;L&lt;/code&gt; - Load plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:PlugDiff&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X&lt;/code&gt; - Revert the update&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-example-a-small-sensible-vim-configuration" class="anchor" aria-hidden="true" href="#example-a-small-sensible-vim-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: A small &lt;a href="https://github.com/tpope/vim-sensible"&gt;sensible&lt;/a&gt; Vim configuration&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#begin&lt;/span&gt;()
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tpope/vim-sensible&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#end&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-on-demand-loading-of-plugins" class="anchor" aria-hidden="true" href="#on-demand-loading-of-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;On-demand loading of plugins&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; NERD tree will be loaded on the first invocation of NERDTreeToggle command&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scrooloose/nerdtree&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NERDTreeToggle&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Multiple commands&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/vim-github-dashboard&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GHDashboard&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GHActivity&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Loaded when clojure file is opened&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tpope/vim-fireplace&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clojure&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Multiple file types&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kovisoft/paredit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clojure&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scheme&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; On-demand loading on both conditions&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/vader.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,  { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Vader&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vader&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Code to execute when the plugin is lazily loaded on demand&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/goyo.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; goyo.&lt;span class="pl-c1"&gt;vim&lt;/span&gt; &lt;span class="pl-c1"&gt;echom&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Goyo is now loaded!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;for&lt;/code&gt; option is generally not needed as most plugins for specific file types
usually don't have too much code in &lt;code&gt;plugin&lt;/code&gt; directory. You might want to
examine the output of &lt;code&gt;vim --startuptime&lt;/code&gt; before applying the option.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-post-update-hooks" class="anchor" aria-hidden="true" href="#post-update-hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Post-update hooks&lt;/h3&gt;
&lt;p&gt;There are some plugins that require extra steps after installation or update.
In that case, use &lt;code&gt;do&lt;/code&gt; option to describe the task to be performed.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Shougo/vimproc.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;make&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ycm-core/YouCompleteMe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./install.py&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the value starts with &lt;code&gt;:&lt;/code&gt;, it will be recognized as a Vim command.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fatih/vim-go&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:GoInstallBinaries&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need more control, you can pass a reference to a Vim function that
takes a single argument.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;BuildYCM&lt;/span&gt;(info)
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; info is a dictionary with 3 fields&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; - name:   name of the plugin&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; - status: 'installed', 'updated', or 'unchanged'&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; - force:  set on PlugInstall! or PlugUpdate!&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;info&lt;/span&gt;.status &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;installed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;info&lt;/span&gt;.force
    &lt;span class="pl-k"&gt;!&lt;/span&gt;./install.&lt;span class="pl-c1"&gt;py&lt;/span&gt;
  &lt;span class="pl-k"&gt;endif&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ycm-core/YouCompleteMe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;BuildYCM&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both forms of post-update hook are executed inside the directory of the plugin
and only run when the repository has changed, but you can force it to run
unconditionally with the bang-versions of the commands: &lt;code&gt;PlugInstall!&lt;/code&gt; and
&lt;code&gt;PlugUpdate!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Make sure to escape BARs and double-quotes when you write &lt;code&gt;do&lt;/code&gt; option inline
as they are mistakenly recognized as command separator or the start of the
trailing comment.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;yes \| ./install&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But you can avoid the escaping if you extract the inline specification using a
variable (or any Vimscript expression) as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;fzf_install&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;yes | ./install&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;fzf_install&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-pluginstall-and-plugupdate" class="anchor" aria-hidden="true" href="#pluginstall-and-plugupdate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;PlugInstall!&lt;/code&gt; and &lt;code&gt;PlugUpdate!&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The installer takes the following steps when installing/updating a plugin:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git clone&lt;/code&gt; or &lt;code&gt;git fetch&lt;/code&gt; from its origin&lt;/li&gt;
&lt;li&gt;Check out branch, tag, or commit and optionally &lt;code&gt;git merge&lt;/code&gt; remote branch&lt;/li&gt;
&lt;li&gt;If the plugin was updated (or installed for the first time)
&lt;ol&gt;
&lt;li&gt;Update submodules&lt;/li&gt;
&lt;li&gt;Execute post-update hooks&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The commands with &lt;code&gt;!&lt;/code&gt; suffix ensure that all steps are run unconditionally.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-articles" class="anchor" aria-hidden="true" href="#articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://junegunn.kr/2013/09/writing-my-own-vim-plugin-manager" rel="nofollow"&gt;Writing my own Vim plugin manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://junegunn.kr/2014/07/vim-plugins-and-startup-time" rel="nofollow"&gt;Vim plugins and startup time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href="http://junegunn.kr/2013/09/thoughts-on-vim-plugin-dependency" rel="nofollow"&gt;Thoughts on Vim plugin dependency&lt;/a&gt;&lt;/del&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Support for Plugfile has been removed since 0.5.0&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-collaborators" class="anchor" aria-hidden="true" href="#collaborators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collaborators&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/janlazo"&gt;Jan Edmund Lazo&lt;/a&gt; - Windows support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/starcraftman"&gt;Jeremy Pallats&lt;/a&gt; - Python installer&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>junegunn</author><guid isPermaLink="false">https://github.com/junegunn/vim-plug</guid><pubDate>Sat, 01 Feb 2020 00:08:00 GMT</pubDate></item><item><title>arzg/vim-colors-xcode #9 in Vim script, Today</title><link>https://github.com/arzg/vim-colors-xcode</link><description>&lt;p&gt;&lt;i&gt;Xcode 11’s dark and light colourschemes, now for Vim!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;table&gt;&lt;tbody align="center"&gt;&lt;tr&gt;&lt;td&gt;
&lt;h1&gt;&lt;a id="user-content-vim-colors-xcode" class="anchor" aria-hidden="true" href="#vim-colors-xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vim-colors-xcode&lt;/h1&gt;
&lt;table&gt;&lt;tbody align="center"&gt;&lt;tr&gt;&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcodedark.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcodedark.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcodelight.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcodelight.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-xcode-11s-dark-and-light-colourschemes-now-for-vim" class="anchor" aria-hidden="true" href="#xcode-11s-dark-and-light-colourschemes-now-for-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode 11’s dark and light colourschemes, now for Vim!&lt;/h3&gt;
&lt;em&gt;made in &lt;a href="https://github.com/lifepillar/vim-colortemplate"&gt;Colortemplate&lt;/a&gt;, the Toolkit for Vim Colourscheme Designers&lt;/em&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Use your favorite runtimepath/plugin manager, or place &lt;code&gt;xcodedark.vim&lt;/code&gt; and &lt;code&gt;xcodelight.vim&lt;/code&gt; into &lt;code&gt;~/.vim/colors/&lt;/code&gt; for *nix and &lt;code&gt;%userprofile%\vimfiles\colors\&lt;/code&gt; for Windows.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-language-support" class="anchor" aria-hidden="true" href="#language-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language Support&lt;/h2&gt;
&lt;p&gt;This colourscheme has been carefully tuned for the following language plugins:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS (&lt;a href="https://github.com/hail2u/vim-css3-syntax"&gt;hail2u/vim-css3-syntax&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Git (&lt;a href="https://github.com/tpope/vim-git"&gt;tpope/vim-git&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Go (&lt;a href="https://github.com/fatih/vim-go"&gt;fatih/vim-go&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;HTML (&lt;a href="https://github.com/othree/html5.vim"&gt;othree/html5.vim&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;JSON (built-in)&lt;/li&gt;
&lt;li&gt;JavaScript (&lt;a href="https://github.com/pangloss/vim-javascript"&gt;pangloss/vim-javascript&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Markdown (&lt;a href="https://github.com/tpope/vim-markdown"&gt;tpope/vim-markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Rust (&lt;a href="https://github.com/rust-lang/rust.vim"&gt;rust-lang/rust.vim&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;SCSS (&lt;a href="https://github.com/cakebaker/scss-syntax.vim"&gt;cakebaker/scss-syntax.vim&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;VimL (built-in)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-options" class="anchor" aria-hidden="true" href="#options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Options&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;:help xcodedark&lt;/code&gt; and &lt;code&gt;:help xcodelight&lt;/code&gt; to view a list of all the possible options from within Vim. Add either &lt;code&gt;g:xcodedark_&lt;/code&gt; or &lt;code&gt;g:xcodelight_&lt;/code&gt; in front of every option name for use. For example, &lt;code&gt;emph_funcs&lt;/code&gt; would turn into &lt;code&gt;g:xcodedark_emph_funcs&lt;/code&gt; if you want it to apply to the dark variant and &lt;code&gt;g:xcodelight_emph_funcs&lt;/code&gt; for the light version.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-comment-style" class="anchor" aria-hidden="true" href="#comment-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comment Style&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;sup&gt;&lt;code&gt;green_comments&lt;/code&gt;&lt;/sup&gt;&lt;/th&gt;
&lt;th&gt;Dark&lt;/th&gt;
&lt;th&gt;Light&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcode-green-0-dark.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcode-green-0-dark.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcode-green-0-light.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcode-green-0-light.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcode-green-1-dark.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcode-green-1-dark.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcode-green-1-light.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcode-green-1-light.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-syntax-item-emphasis" class="anchor" aria-hidden="true" href="#syntax-item-emphasis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Syntax Item Emphasis&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;sup&gt;&lt;code&gt;emph_types&lt;/code&gt;, &lt;code&gt;emph_funcs&lt;/code&gt;, &lt;code&gt;emph_idents&lt;/code&gt;&lt;/sup&gt;&lt;/th&gt;
&lt;th&gt;Dark&lt;/th&gt;
&lt;th&gt;Light&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;,&lt;br&gt;&lt;code&gt;0&lt;/code&gt;,&lt;br&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-1-funcs-0-idents-0-dark.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-1-funcs-0-idents-0-dark.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-1-funcs-0-idents-0-light.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-1-funcs-0-idents-0-light.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;,&lt;br&gt;&lt;code&gt;1&lt;/code&gt;,&lt;br&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-0-funcs-1-idents-0-dark.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-0-funcs-1-idents-0-dark.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-0-funcs-1-idents-0-light.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-0-funcs-1-idents-0-light.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;,&lt;br&gt;&lt;code&gt;1&lt;/code&gt;,&lt;br&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-0-funcs-1-idents-1-dark.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-0-funcs-1-idents-1-dark.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-0-funcs-1-idents-1-light.png"&gt;&lt;img src="https://raw.githubusercontent.com/arzg/resources/master/xcode-types-0-funcs-1-idents-1-light.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;If you’re using a GUI, then vim-colors-xcode should work out of the box. However, if you’re planning to use vim-colors-xcode in a terminal, the terminal must support 24-bit colour, also known as True Colour. If you want other terminal output to match with vim-colors-xcode, then set its colours to match the ones below:&lt;/p&gt;
&lt;p&gt;Dark:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Colour&lt;/th&gt;
&lt;th&gt;Normal&lt;/th&gt;
&lt;th&gt;Bright&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Black&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#33343c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#7f8c98&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Red&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#ff8170&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#ff8170&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Green&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#78c2b3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#acf2e4&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Yellow&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#d9c97c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#ffa14f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Blue&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#4eb0cc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#6bdfff&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Magenta&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#ff7ab2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#ff7ab2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cyan&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#b281eb&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#dabaff&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;White&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#dfdfe0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#dfdfe0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Foreground&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#dfdfe0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Background&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#292a30&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Light:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Colour&lt;/th&gt;
&lt;th&gt;Normal&lt;/th&gt;
&lt;th&gt;Bright&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Black&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#e5e5e5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#8a99a6&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Red&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#d12f1b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#d12f1b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Green&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#3e8087&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#23575c&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Yellow&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#78492a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#78492a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Blue&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#0f68a0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#0b4f79&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Magenta&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#ad3da4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#ad3da4&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cyan&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#804fb8&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#4b21b0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;White&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#262626&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#262626&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Foreground&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#262626&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Background&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#ffffff&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;iTerm presets for both of these are included with this repository.&lt;/p&gt;
&lt;p&gt;If you would like to have italic comments add the following to your &lt;code&gt;vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;augroup vim-colors-xcode
    autocmd!
augroup END

autocmd vim-colors-xcode ColorScheme * hi Comment        cterm=italic gui=italic
autocmd vim-colors-xcode ColorScheme * hi SpecialComment cterm=italic gui=italic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The font in the screenshots is &lt;a href="https://developer.apple.com/videos/play/wwdc2016/803/?time=106" rel="nofollow"&gt;SF Mono&lt;/a&gt;, which you can download &lt;a href="https://developer.apple.com/fonts/" rel="nofollow"&gt;from Apple’s website&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>arzg</author><guid isPermaLink="false">https://github.com/arzg/vim-colors-xcode</guid><pubDate>Sat, 01 Feb 2020 00:09:00 GMT</pubDate></item><item><title>python-mode/python-mode #10 in Vim script, Today</title><link>https://github.com/python-mode/python-mode</link><description>&lt;p&gt;&lt;i&gt;Vim python-mode. PyLint, Rope, Pydoc, breakpoints from box.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/python-mode/python-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2972ed0bb969cdd8c98374f2598cb75548b374d4/68747470733a2f2f7472617669732d63692e6f72672f707974686f6e2d6d6f64652f707974686f6e2d6d6f64652e7376673f6272616e63683d646576656c6f70" alt="Build Status" data-canonical-src="https://travis-ci.org/python-mode/python-mode.svg?branch=develop" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/461f0a5cbd75bc7cd641cea326e467f91160ca58/68747470733a2f2f7261772e6769746875622e636f6d2f707974686f6e2d6d6f64652f707974686f6e2d6d6f64652f646576656c6f702f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/461f0a5cbd75bc7cd641cea326e467f91160ca58/68747470733a2f2f7261772e6769746875622e636f6d2f707974686f6e2d6d6f64652f707974686f6e2d6d6f64652f646576656c6f702f6c6f676f2e706e67" alt="" data-canonical-src="https://raw.github.com/python-mode/python-mode/develop/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-python-mode-a-python-ide-for-vim" class="anchor" aria-hidden="true" href="#python-mode-a-python-ide-for-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python-mode, a Python IDE for Vim&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;This project needs contributors.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Documentation:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:help pymode&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/python-mode/python-mode/wiki"&gt;https://github.com/python-mode/python-mode/wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5deeafa90530dd1ad297bc6ca233ad9bc5aaecde/68747470733a2f2f7669676e657474652e77696b69612e6e6f636f6f6b69652e6e65742f73716d656761706f6c69732f696d616765732f342f34322f5761726e696e672d322d3235362e706e672f7265766973696f6e2f6c61746573743f63623d3230313330343033323230373430"&gt;&lt;img width="100" height="100" src="https://camo.githubusercontent.com/5deeafa90530dd1ad297bc6ca233ad9bc5aaecde/68747470733a2f2f7669676e657474652e77696b69612e6e6f636f6f6b69652e6e65742f73716d656761706f6c69732f696d616765732f342f34322f5761726e696e672d322d3235362e706e672f7265766973696f6e2f6c61746573743f63623d3230313330343033323230373430" data-canonical-src="https://vignette.wikia.nocookie.net/sqmegapolis/images/4/42/Warning-2-256.png/revision/latest?cb=20130403220740" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Important notes&lt;/strong&gt;&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;From 2017-11-19 onwards python-mode uses submodules instead of
hard coding 3rd party libraries into its codebase. Please issue the command:
&lt;code&gt;git submodule update --init --recursive&lt;/code&gt; inside your python-mode folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From 2019-12-14 onwards &lt;code&gt;python-mode&lt;/code&gt; &lt;strong&gt;dropped python2 suuport&lt;/strong&gt;. If you
still need to use it with python2 you should look for the &lt;code&gt;last-py2-support&lt;/code&gt;
branch and/or tag.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a new user please clone the repos using the recursive flag:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git clone --recurse-submodules &lt;a href="https://github.com/python-mode/python-mode"&gt;https://github.com/python-mode/python-mode&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Python-mode is a Vim plugin that magically converts Vim into a Python IDE.&lt;/p&gt;
&lt;p&gt;Why Python-mode?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Be more productive&lt;/strong&gt;: Pymode saves time by bringing all the tools
necessary for professional developers so that you can focus on bigger
things. It has been finely tuned based on decades of experience working
with Vim and is constantly kept up to date.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Get smart assistance&lt;/strong&gt;: Pymode knows all about your code. We use the
best-in-class intellisense code completion, on-the-fly error checking and
quick-fixes; easy project navigation and much more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use the full power and capabilities of Vim&lt;/strong&gt;: Unlike traditional IDEs
which can only provide a small subset of Vim functionalities, you can do
everything and anything that you can in Vim.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Modular structure&lt;/strong&gt;: We attempt to create Python-mode with the same
principles of python: i.e. have a modular structure, so that as and when
better libraries evolve, we can provide you the best experience, while
abstracting the details so that you can get back to what you do best.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Written mostly in Python&lt;/strong&gt;: 96.1% written in Python. Well, we love Python
:)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The plugin contains all you need to develop python applications in Vim.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support Python and 3.6+&lt;/li&gt;
&lt;li&gt;Syntax highlighting&lt;/li&gt;
&lt;li&gt;Virtualenv support&lt;/li&gt;
&lt;li&gt;Run python code (&lt;code&gt;&amp;lt;leader&amp;gt;r&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Add/remove breakpoints (&lt;code&gt;&amp;lt;leader&amp;gt;b&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Improved Python indentation&lt;/li&gt;
&lt;li&gt;Python motions and operators (&lt;code&gt;]]&lt;/code&gt;, &lt;code&gt;3[[&lt;/code&gt;, &lt;code&gt;]]M&lt;/code&gt;, &lt;code&gt;vaC&lt;/code&gt;, &lt;code&gt;viM&lt;/code&gt;,
&lt;code&gt;daC&lt;/code&gt;, &lt;code&gt;ciM&lt;/code&gt;, ...)&lt;/li&gt;
&lt;li&gt;Improved Python folding&lt;/li&gt;
&lt;li&gt;Run multiple code checkers simultaneously (&lt;code&gt;:PymodeLint&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Autofix PEP8 errors (&lt;code&gt;:PymodeLintAuto&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Search in python documentation (&lt;code&gt;&amp;lt;leader&amp;gt;K&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Code refactoring&lt;/li&gt;
&lt;li&gt;Intellisense code-completion&lt;/li&gt;
&lt;li&gt;Go to definition (&lt;code&gt;&amp;lt;C-c&amp;gt;g&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;And more, more ...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See a screencast here: &lt;a href="http://www.youtube.com/watch?v=67OZNp9Z0CQ" rel="nofollow"&gt;http://www.youtube.com/watch?v=67OZNp9Z0CQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another old presentation here: &lt;a href="http://www.youtube.com/watch?v=YhqsjUUHj6g" rel="nofollow"&gt;http://www.youtube.com/watch?v=YhqsjUUHj6g&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To read python-mode documentation in Vim, use&lt;/strong&gt; &lt;code&gt;:help pymode&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h1&gt;
&lt;p&gt;Vim &amp;gt;= 7.3 (most features needed +python3 support) (also
&lt;code&gt;--with-features=big&lt;/code&gt; if you want &lt;code&gt;g:pymode_lint_signs&lt;/code&gt;).&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-install" class="anchor" aria-hidden="true" href="#how-to-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to install&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-manually-according-to-vims-package-structure" class="anchor" aria-hidden="true" href="#manually-according-to-vims-package-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually (according to vim's package structure)&lt;/h2&gt;
&lt;p&gt;As of vim8 there is an officially supported way of adding plugins. See &lt;code&gt;:tab help packages&lt;/code&gt; in vim for details.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.vim/pack/python-mode/start
git clone --recurse-submodules https://github.com/python-mode/python-mode.git
cd python-mode
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note. Windows OS users need to add &lt;code&gt;-c core.symlinks=true&lt;/code&gt;. See below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pathogen" class="anchor" aria-hidden="true" href="#pathogen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pathogen&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.vim
mkdir -p bundle &amp;amp;&amp;amp; cd bundle
git clone --recurse-submodules https://github.com/python-mode/python-mode.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enable &lt;a href="https://github.com/tpope/vim-pathogen"&gt;pathogen&lt;/a&gt; in your &lt;code&gt;~/.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" Pathogen load
filetype off

call pathogen#infect()
call pathogen#helptags()

filetype plugin indent on
syntax on
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-vim-plug" class="anchor" aria-hidden="true" href="#vim-plug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vim-plug&lt;/h2&gt;
&lt;p&gt;Include the following in the &lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;
section of your &lt;code&gt;~/.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-neobundle" class="anchor" aria-hidden="true" href="#neobundle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NeoBundle&lt;/h2&gt;
&lt;p&gt;Add the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;" python-mode: PyLint, Rope, Pydoc, breakpoints from box.
" https://github.com/python-mode/python-mode
NeoBundleLazy 'python-mode/python-mode', { 'on_ft': 'python' }
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;% git clone --recurse-submodules https://github.com/python-mode/python-mode.git
% cd python-mode
% cp -R * ~/.vim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then rebuild &lt;strong&gt;helptags&lt;/strong&gt; in vim:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:helptags ~/.vim/doc/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;filetype-plugin&lt;/strong&gt; (&lt;code&gt;:help filetype-plugin-on&lt;/code&gt;) and &lt;strong&gt;filetype-indent&lt;/strong&gt;
(&lt;code&gt;:help filetype-indent-on&lt;/code&gt;) must be enabled to use python-mode.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-troubleshootingdebugging" class="anchor" aria-hidden="true" href="#troubleshootingdebugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting/Debugging&lt;/h1&gt;
&lt;p&gt;First read our short
&lt;a href="https://github.com/python-mode/python-mode/blob/develop/doc/pymode.txt"&gt;FAQ&lt;/a&gt;
or using &lt;code&gt;:help pymode-faq&lt;/code&gt;.
If your question is not described there then you already know what to do
(because you read the first item of our FAQ :) ).&lt;/p&gt;
&lt;p&gt;Nevertheless just a refresher on how to submit bugs:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(From the FAQ)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Clear all python cache/compiled files (&lt;code&gt;*.pyc&lt;/code&gt; files and &lt;code&gt;__pycache__&lt;/code&gt;
directory and everything under it). In Linux/Unix/MacOS you can run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find . -type f -iname '*.pyc' -o -iname '*.pyo' -delete &amp;amp;&amp;amp; find . -type d -name '__pycache__' -delete&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then start python mode with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim -i NONE -u &amp;lt;path_to_pymode&amp;gt;/debugvimrc.vim&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Reproduce the error and submit your python mode debug file. You can check its
location with &lt;code&gt;:messages&lt;/code&gt; for something like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pymode debug msg 1: Starting debug on: 2017-11-18 16:44:13 with file /tmp/pymode_debug_file.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Please submit the entire content of the file along with a reasoning of why the
plugin seems broken.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Do check for sensitive information in the file before submitting.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Please, also provide more contextual information such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;your Operational System (Linux, WIndows, Mac) and which version&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;vim --version&lt;/code&gt; output&lt;/li&gt;
&lt;li&gt;which is your default python (&lt;code&gt;python --version&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;the python version that vim has loaded in your tests:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:PymodePython import sys; print(sys.version_info)&lt;/code&gt; output.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;and if you are using virtualenvs and/or conda, also state that, please.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-frequent-problems" class="anchor" aria-hidden="true" href="#frequent-problems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frequent problems&lt;/h1&gt;
&lt;p&gt;Read this section before opening an issue on the tracker.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-python-3-syntax" class="anchor" aria-hidden="true" href="#python-3-syntax"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python 3 syntax&lt;/h2&gt;
&lt;p&gt;By default python-mode uses python 3 syntax checking.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-symlinks-on-windows" class="anchor" aria-hidden="true" href="#symlinks-on-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Symlinks on Windows&lt;/h2&gt;
&lt;p&gt;Users on Windows OS might need to add &lt;code&gt;-c core.symlinks=true&lt;/code&gt; switch to
correctly clone / pull repository. Example: &lt;code&gt;git clone --recurse-submodules https://github.com/python-mode/python-mode -c core.symlinks=true&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-error-updating-the-plugin" class="anchor" aria-hidden="true" href="#error-updating-the-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error updating the plugin&lt;/h2&gt;
&lt;p&gt;If you are trying to update the plugin (using a plugin manager or manually) and
you are seeing an error such as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Server does not allow request for unadvertised object&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then we probably changed some repo reference or some of our dependencies had a
&lt;code&gt;git push --force&lt;/code&gt; in its git history. So the best way for you to handle it is
to run, inside the &lt;code&gt;python-mode&lt;/code&gt; directory:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git submodule update --recursive --init --force&lt;/code&gt;
&lt;code&gt;git submodule sync --recursive&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;Documentation is available in your vim &lt;code&gt;:help pymode&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-bugtracker" class="anchor" aria-hidden="true" href="#bugtracker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugtracker&lt;/h1&gt;
&lt;p&gt;If you have any suggestions, bug reports or annoyances please report them to
the issue tracker at:
&lt;a href="https://github.com/python-mode/python-mode/issues"&gt;https://github.com/python-mode/python-mode/issues&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;The contributing guidelines for this plugin are outlined at
&lt;code&gt;:help pymode-development&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Author: Kirill Klenov (&lt;a href="https://github.com/klen"&gt;https://github.com/klen&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Maintainers:
&lt;ul&gt;
&lt;li&gt;Felipe Vieira (&lt;a href="https://github.com/fmv1992"&gt;https://github.com/fmv1992&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Diego Rabatone Oliveira (&lt;a href="https://github.com/diraol"&gt;https://github.com/diraol&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also see the AUTHORS file.&lt;/p&gt;
&lt;p&gt;Development of python-mode happens at github:
&lt;a href="https://github.com/python-mode/python-mode"&gt;https://github.com/python-mode/python-mode&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please make a pull request to development branch and add yourself to AUTHORS.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-python-libraries" class="anchor" aria-hidden="true" href="#python-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python libraries&lt;/h3&gt;
&lt;p&gt;Vendored Python modules are located mostly in
&lt;a href="https://github.com/python-mode/python-mode/tree/develop/pymode/libs"&gt;pymode/libs/&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h1&gt;
&lt;p&gt;Copyright © 2013-2015 Kirill Klenov (&lt;a href="https://github.com/klen"&gt;https://github.com/klen&lt;/a&gt;).&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Licensed under a &lt;a href=""&gt;GNU lesser general public license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you like this plugin, I would very appreciated if you kindly send me
a postcard :) My address is here: "Russia, 143500, MO, Istra, pos. Severny 8-3"
to "Kirill Klenov". &lt;strong&gt;Thanks for support!&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>python-mode</author><guid isPermaLink="false">https://github.com/python-mode/python-mode</guid><pubDate>Sat, 01 Feb 2020 00:10:00 GMT</pubDate></item><item><title>spf13/spf13-vim #11 in Vim script, Today</title><link>https://github.com/spf13/spf13-vim</link><description>&lt;p&gt;&lt;i&gt;The ultimate vim distribution&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-spf13-vim--steve-francias-vim-distribution" class="anchor" aria-hidden="true" href="#spf13-vim--steve-francias-vim-distribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;spf13-vim : Steve Francia's Vim Distribution&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;                __ _ _____              _
     ___ _ __  / _/ |___ /      __   __(_)_ __ ___
    / __| '_ \| |_| | |_ \ _____\ \ / /| | '_ ` _ \
    \__ \ |_) |  _| |___) |_____|\ V / | | | | | | |
    |___/ .__/|_| |_|____/        \_/  |_|_| |_| |_|
        |_|
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;spf13-vim is a distribution of vim plugins and resources for Vim, Gvim and &lt;a href="http://code.google.com/p/macvim/" rel="nofollow"&gt;MacVim&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is a good starting point for anyone intending to use VIM for development running equally well on Windows, Linux, *nix and Mac.&lt;/p&gt;
&lt;p&gt;The distribution is completely customisable using a &lt;code&gt;~/.vimrc.local&lt;/code&gt;, &lt;code&gt;~/.vimrc.bundles.local&lt;/code&gt;, and &lt;code&gt;~/.vimrc.before.local&lt;/code&gt; Vim RC files.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/693928543616d498a4203b93a768d94aed45b95d/68747470733a2f2f692e696d6775722e636f6d2f554b546f592e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/693928543616d498a4203b93a768d94aed45b95d/68747470733a2f2f692e696d6775722e636f6d2f554b546f592e706e67" alt="spf13-vim image" data-canonical-src="https://i.imgur.com/UKToY.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unlike traditional VIM plugin structure, which similar to UNIX throws all files into common directories, making updating or disabling plugins a real mess, spf13-vim 3 uses the &lt;a href="https://github.com/gmarik/vundle"&gt;Vundle&lt;/a&gt; plugin management system to have a well organized vim directory (Similar to mac's app folders). Vundle also ensures that the latest versions of your plugins are installed and makes it easy to keep them up to date.&lt;/p&gt;
&lt;p&gt;Great care has been taken to ensure that each plugin plays nicely with others, and optional configuration has been provided for what we believe is the most efficient use.&lt;/p&gt;
&lt;p&gt;Lastly (and perhaps, most importantly) It is completely cross platform. It works well on Windows, Linux and OSX without any modifications or additional configurations. If you are using &lt;a href="http://code.google.com/p/macvim/" rel="nofollow"&gt;MacVim&lt;/a&gt; or Gvim additional features are enabled. So regardless of your environment just clone and run.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;To make all the plugins work, specifically &lt;a href="https://github.com/Shougo/neocomplete.vim"&gt;neocomplete&lt;/a&gt;, you need &lt;a href="https://github.com/Shougo/neocomplete.vim#requirements"&gt;vim with lua&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-linux-nix-mac-osx-installation" class="anchor" aria-hidden="true" href="#linux-nix-mac-osx-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux, *nix, Mac OSX Installation&lt;/h2&gt;
&lt;p&gt;The easiest way to install spf13-vim is to use our &lt;a href="https://j.mp/spf13-vim3" rel="nofollow"&gt;automatic installer&lt;/a&gt; by simply copying and pasting the following line into a terminal. This will install spf13-vim and backup your existing vim configuration. If you are upgrading from a prior version (before 3.0) this is also the recommended installation.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Requires Git 1.7+ and Vim 7.3+&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    curl https://j.mp/spf13-vim3 -L &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; spf13-vim.sh &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sh spf13-vim.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have a bash-compatible shell you can run the script directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    sh &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;curl https://j.mp/spf13-vim3 -L&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installing-on-windows" class="anchor" aria-hidden="true" href="#installing-on-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing on Windows&lt;/h2&gt;
&lt;p&gt;On Windows and *nix &lt;a href="http://git-scm.com" rel="nofollow"&gt;Git&lt;/a&gt; and &lt;a href="http://curl.haxx.se" rel="nofollow"&gt;Curl&lt;/a&gt; are required. Also, if you haven't done so already, you'll need to install &lt;a href="http://www.vim.org/download.php#pc" rel="nofollow"&gt;Vim&lt;/a&gt;.
The quickest option to install all three dependencies (&lt;a href="http://git-scm.com" rel="nofollow"&gt;Git&lt;/a&gt;, &lt;a href="http://curl.haxx.se" rel="nofollow"&gt;Curl&lt;/a&gt;, &lt;a href="http://www.vim.org/download.php#pc" rel="nofollow"&gt;Vim&lt;/a&gt; and &lt;a href="https://github.com/spf13/spf13-vim"&gt;spf13-vim&lt;/a&gt;) is via &lt;a href="http://chocolatey.org/" rel="nofollow"&gt;Chocolatey&lt;/a&gt; NuGet. After installing &lt;a href="http://chocolatey.org/" rel="nofollow"&gt;Chocolatey&lt;/a&gt;, execute the following commands on the &lt;em&gt;command prompt&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:\&amp;gt; choco install spf13-vim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Note: The &lt;a href="https://chocolatey.org/packages/spf13-vim" rel="nofollow"&gt;spf13-vim package&lt;/a&gt; will install Vim also!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you want to install &lt;a href="http://msysgit.github.io" rel="nofollow"&gt;msysgit&lt;/a&gt;, &lt;a href="http://curl.haxx.se" rel="nofollow"&gt;Curl&lt;/a&gt; and &lt;a href="https://github.com/spf13/spf13-vim"&gt;spf13-vim&lt;/a&gt; individually, follow the directions below.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-dependencies" class="anchor" aria-hidden="true" href="#installing-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing dependencies&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-install-vim" class="anchor" aria-hidden="true" href="#install-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install &lt;a href="http://www.vim.org/download.php#pc" rel="nofollow"&gt;Vim&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;After the installation of Vim you must add a new directory to your environment variables path to make it work with the script installation of spf13.&lt;/p&gt;
&lt;p&gt;Open Vim and write the following command, it will show the installed directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:echo $VIMRUNTIME
C:\Program Files (X86)\Vim\vim74
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you need to add it to your environment variable path. After that try execute &lt;code&gt;vim&lt;/code&gt; within command prompt (press Win-R, type &lt;code&gt;cmd&lt;/code&gt;, press Enter) and you’ll see the default vim page.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-install-msysgit" class="anchor" aria-hidden="true" href="#install-msysgit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install &lt;a href="http://msysgit.github.io" rel="nofollow"&gt;msysgit&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;After installation try running &lt;code&gt;git --version&lt;/code&gt; within &lt;em&gt;command prompt&lt;/em&gt; (press Win-R,  type &lt;code&gt;cmd&lt;/code&gt;, press Enter) to make sure all good:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:\&amp;gt; git --version
git version 1.7.4.msysgit.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-setup-curl" class="anchor" aria-hidden="true" href="#setup-curl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup &lt;a href="http://curl.haxx.se" rel="nofollow"&gt;Curl&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Instructions blatently copied from vundle readme&lt;/em&gt;
Installing Curl on Windows is easy as &lt;a href="http://curl.haxx.se" rel="nofollow"&gt;Curl&lt;/a&gt; is bundled with &lt;a href="http://msysgit.github.io" rel="nofollow"&gt;msysgit&lt;/a&gt;!
But before it can be used with &lt;a href="https://github.com/gmarik/vundle"&gt;Vundle&lt;/a&gt; it's required make &lt;code&gt;curl&lt;/code&gt; run in &lt;em&gt;command prompt&lt;/em&gt;.
The easiest way is to create &lt;code&gt;curl.cmd&lt;/code&gt; with &lt;a href="https://gist.github.com/912993"&gt;this content&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@rem Do not use "echo off" to not affect any child calls.
@setlocal

@rem Get the abolute path to the parent directory, which is assumed to be the
@rem Git installation root.
@for /F "delims=" %%I in ("%~dp0..") do @set git_install_root=%%~fI
@set PATH=%git_install_root%\bin;%git_install_root%\mingw\bin;%PATH%

@if not exist "%HOME%" @set HOME=%HOMEDRIVE%%HOMEPATH%
@if not exist "%HOME%" @set HOME=%USERPROFILE%

@curl.exe %*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And copy it to &lt;code&gt;C:\Program Files\Git\cmd\curl.cmd&lt;/code&gt;, assuming &lt;a href="http://msysgit.github.io" rel="nofollow"&gt;msysgit&lt;/a&gt; was installed to &lt;code&gt;c:\Program Files\Git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;to verify all good, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:\&amp;gt; curl --version
curl 7.21.1 (i686-pc-mingw32) libcurl/7.21.1 OpenSSL/0.9.8k zlib/1.2.3
Protocols: dict file ftp ftps http https imap imaps ldap ldaps pop3 pop3s rtsp smtp smtps telnet tftp
Features: Largefile NTLM SSL SSPI libz
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-installing-spf13-vim-on-windows" class="anchor" aria-hidden="true" href="#installing-spf13-vim-on-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing spf13-vim on Windows&lt;/h4&gt;
&lt;p&gt;The easiest way is to download and run the spf13-vim-windows-install.cmd file. Remember to run this file in &lt;strong&gt;Administrator Mode&lt;/strong&gt; if you want the symlinks to be created successfully.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-updating-to-the-latest-version" class="anchor" aria-hidden="true" href="#updating-to-the-latest-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updating to the latest version&lt;/h2&gt;
&lt;p&gt;The simpliest (and safest) way to update is to simply rerun the installer. It will completely and non destructively upgrade to the latest version.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    curl https://j.mp/spf13-vim3 -L -o - &lt;span class="pl-k"&gt;|&lt;/span&gt; sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively you can manually perform the following steps. If anything has changed with the structure of the configuration you will need to create the appropriate symlinks.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    &lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-smi"&gt;$HOME&lt;/span&gt;/to/spf13-vim/
    git pull
    vim +BundleInstall&lt;span class="pl-k"&gt;!&lt;/span&gt; +BundleClean +q&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-fork-me-on-github" class="anchor" aria-hidden="true" href="#fork-me-on-github"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fork me on GitHub&lt;/h3&gt;
&lt;p&gt;I'm always happy to take pull requests from others. A good number of people are already &lt;a href="https://github.com/spf13/spf13-vim/contributors"&gt;contributors&lt;/a&gt; to &lt;a href="https://github.com/spf13/spf13-vim"&gt;spf13-vim&lt;/a&gt;. Go ahead and fork me.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-a-highly-optimized-vimrc-config-file" class="anchor" aria-hidden="true" href="#a-highly-optimized-vimrc-config-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A highly optimized .vimrc config file&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/129d88b395fceb289f88ea9b67de6928e6c46025/68747470733a2f2f692e696d6775722e636f6d2f6b5a576a312e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/129d88b395fceb289f88ea9b67de6928e6c46025/68747470733a2f2f692e696d6775722e636f6d2f6b5a576a312e706e67" alt="spf13-vimrc image" data-canonical-src="https://i.imgur.com/kZWj1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The .vimrc file is suited to programming. It is extremely well organized and folds in sections.
Each section is labeled and each option is commented.&lt;/p&gt;
&lt;p&gt;It fixes many of the inconveniences of vanilla vim including&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A single config can be used across Windows, Mac and linux&lt;/li&gt;
&lt;li&gt;Eliminates swap and backup files from littering directories, preferring to store in a central location.&lt;/li&gt;
&lt;li&gt;Fixes common typos like :W, :Q, etc&lt;/li&gt;
&lt;li&gt;Setup a solid set of settings for Formatting (change to meet your needs)&lt;/li&gt;
&lt;li&gt;Setup the interface to take advantage of vim's features including
&lt;ul&gt;
&lt;li&gt;omnicomplete&lt;/li&gt;
&lt;li&gt;line numbers&lt;/li&gt;
&lt;li&gt;syntax highlighting&lt;/li&gt;
&lt;li&gt;A better ruler &amp;amp; status line&lt;/li&gt;
&lt;li&gt;&amp;amp; more&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Configuring included plugins&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h2&gt;
&lt;p&gt;Create &lt;code&gt;~/.vimrc.local&lt;/code&gt; and &lt;code&gt;~/.gvimrc.local&lt;/code&gt; for any local
customizations.&lt;/p&gt;
&lt;p&gt;For example, to override the default color schemes:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    &lt;span class="pl-c1"&gt;echo&lt;/span&gt; colorscheme ir_black  &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vimrc.local&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-before-file" class="anchor" aria-hidden="true" href="#before-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Before File&lt;/h3&gt;
&lt;p&gt;Create a &lt;code&gt;~/.vimrc.before.local&lt;/code&gt; file to define any customizations
that get loaded &lt;em&gt;before&lt;/em&gt; the spf13-vim &lt;code&gt;.vimrc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, to prevent autocd into a file directory:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-c1"&gt;let&lt;/span&gt; g:spf13_no_autochdir = 1 &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vimrc.before.local&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a list of available spf13-vim specific customization options, look at the &lt;code&gt;~/.vimrc.before&lt;/code&gt; file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fork-customization" class="anchor" aria-hidden="true" href="#fork-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fork Customization&lt;/h3&gt;
&lt;p&gt;There is an additional tier of customization available to those who want to maintain a
fork of spf13-vim specialized for a particular group. These users can create &lt;code&gt;.vimrc.fork&lt;/code&gt;
and &lt;code&gt;.vimrc.bundles.fork&lt;/code&gt; files in the root of their fork.  The load order for the configuration is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;.vimrc.before&lt;/code&gt; - spf13-vim before configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.vimrc.before.fork&lt;/code&gt; - fork before configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.vimrc.before.local&lt;/code&gt; - before user configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.vimrc.bundles&lt;/code&gt; - spf13-vim bundle configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.vimrc.bundles.fork&lt;/code&gt; - fork bundle configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.vimrc.bundles.local&lt;/code&gt; - local user bundle configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.vimrc&lt;/code&gt; - spf13-vim vim configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.vimrc.fork&lt;/code&gt; - fork vim configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.vimrc.local&lt;/code&gt; - local user configuration&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;See &lt;code&gt;.vimrc.bundles&lt;/code&gt; for specifics on what options can be set to override bundle configuration. See &lt;code&gt;.vimrc.before&lt;/code&gt; for specifics
on what options can be overridden. Most vim configuration options should be set in your &lt;code&gt;.vimrc.fork&lt;/code&gt; file, bundle configuration
needs to be set in your &lt;code&gt;.vimrc.bundles.fork&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;You can specify the default bundles for your fork using &lt;code&gt;.vimrc.before.fork&lt;/code&gt; file. Here is how to create an example &lt;code&gt;.vimrc.before.fork&lt;/code&gt; file
in a fork repo for the default bundles.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-c1"&gt;let&lt;/span&gt; g:spf13_bundle_groups=[&lt;span class="pl-cce"&gt;\'&lt;/span&gt;general&lt;span class="pl-cce"&gt;\'&lt;/span&gt;, &lt;span class="pl-cce"&gt;\'&lt;/span&gt;programming&lt;span class="pl-cce"&gt;\'&lt;/span&gt;, &lt;span class="pl-cce"&gt;\'&lt;/span&gt;misc&lt;span class="pl-cce"&gt;\'&lt;/span&gt;, &lt;span class="pl-cce"&gt;\'&lt;/span&gt;youcompleteme&lt;span class="pl-cce"&gt;\'&lt;/span&gt;] &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; .vimrc.before.fork&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once you have this file in your repo, only the bundles you specified will be installed during the first installation of your fork.&lt;/p&gt;
&lt;p&gt;You may also want to update your &lt;code&gt;README.markdown&lt;/code&gt; file so that the &lt;code&gt;bootstrap.sh&lt;/code&gt; link points to your repository and your &lt;code&gt;bootstrap.sh&lt;/code&gt;
file to pull down your fork.&lt;/p&gt;
&lt;p&gt;For an example of a fork of spf13-vim that provides customization in this manner see &lt;a href="https://github.com/taxilian/spf13-vim"&gt;taxilian's fork&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-easily-editing-your-configuration" class="anchor" aria-hidden="true" href="#easily-editing-your-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Easily Editing Your Configuration&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;ev&lt;/code&gt; opens a new tab containing the .vimrc configuration files listed above. This makes it easier to get an overview of your
configuration and make customizations.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;sv&lt;/code&gt; sources the .vimrc file, instantly applying your customizations to the currently running vim instance.&lt;/p&gt;
&lt;p&gt;These two mappings can themselves be customized by setting the following in .vimrc.before.local:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;let&lt;/span&gt; g:spf13_edit_config_mapping=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;Leader&amp;gt;ev&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;let&lt;/span&gt; g:spf13_apply_config_mapping=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;Leader&amp;gt;sv&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h1&gt;
&lt;p&gt;spf13-vim contains a curated set of popular vim plugins, colors, snippets and syntaxes. Great care has been made to ensure that these plugins play well together and have optimal configuration.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-adding-new-plugins" class="anchor" aria-hidden="true" href="#adding-new-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding new plugins&lt;/h2&gt;
&lt;p&gt;Create &lt;code&gt;~/.vimrc.bundles.local&lt;/code&gt; for any additional bundles.&lt;/p&gt;
&lt;p&gt;To add a new bundle, just add one line for each bundle you want to install. The line should start with the word "Bundle" followed by a string of either the vim.org project name or the githubusername/githubprojectname. For example, the github project &lt;a href="https://github.com/spf13/vim-colors"&gt;spf13/vim-colors&lt;/a&gt; can be added with the following command&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    &lt;span class="pl-c1"&gt;echo&lt;/span&gt; Bundle &lt;span class="pl-cce"&gt;\'&lt;/span&gt;spf13/vim-colors&lt;span class="pl-cce"&gt;\'&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vimrc.bundles.local&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once new plugins are added, they have to be installed.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    vim +BundleInstall&lt;span class="pl-k"&gt;!&lt;/span&gt; +BundleClean +q&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-removing-disabling-an-included-plugin" class="anchor" aria-hidden="true" href="#removing-disabling-an-included-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Removing (disabling) an included plugin&lt;/h2&gt;
&lt;p&gt;Create &lt;code&gt;~/.vimrc.local&lt;/code&gt; if it doesn't already exist.&lt;/p&gt;
&lt;p&gt;Add the UnBundle command to this line. It takes the same input as the Bundle line, so simply copy the line you want to disable and add 'Un' to the beginning.&lt;/p&gt;
&lt;p&gt;For example, disabling the 'AutoClose' and 'scrooloose/syntastic' plugins&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    &lt;span class="pl-c1"&gt;echo&lt;/span&gt; UnBundle &lt;span class="pl-cce"&gt;\'&lt;/span&gt;AutoClose&lt;span class="pl-cce"&gt;\'&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vimrc.bundles.local
    &lt;span class="pl-c1"&gt;echo&lt;/span&gt; UnBundle &lt;span class="pl-cce"&gt;\'&lt;/span&gt;scrooloose/syntastic&lt;span class="pl-cce"&gt;\'&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vimrc.bundles.local&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Remember to run ':BundleClean!' after this to remove the existing directories&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here are a few of the plugins:&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-undotree" class="anchor" aria-hidden="true" href="#undotree"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/mbbill/undotree"&gt;Undotree&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you undo changes and then make a new change, in most editors the changes you undid are gone forever, as their undo-history is a simple list.
Since version 7.0 vim uses an undo-tree instead. If you make a new change after undoing changes, a new branch is created in that tree.
Combined with persistent undo, this is nearly as flexible and safe as git ;-)&lt;/p&gt;
&lt;p&gt;Undotree makes that feature more accessible by creating a visual representation of said undo-tree.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QuickStart&lt;/strong&gt; Launch using &lt;code&gt;&amp;lt;Leader&amp;gt;u&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-nerdtree" class="anchor" aria-hidden="true" href="#nerdtree"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/scrooloose/nerdtree"&gt;NERDTree&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;NERDTree is a file explorer plugin that provides "project drawer"
functionality to your vim editing.  You can learn more about it with
&lt;code&gt;:help NERDTree&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QuickStart&lt;/strong&gt; Launch using &lt;code&gt;&amp;lt;Leader&amp;gt;e&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Customizations&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;&amp;lt;C-E&amp;gt;&lt;/code&gt; to toggle NERDTree&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;&amp;lt;leader&amp;gt;e&lt;/code&gt; or &lt;code&gt;&amp;lt;leader&amp;gt;nt&lt;/code&gt; to load NERDTreeFind which opens NERDTree where the current file is located.&lt;/li&gt;
&lt;li&gt;Hide clutter ('.pyc', '.git', '.hg', '.svn', '.bzr')&lt;/li&gt;
&lt;li&gt;Treat NERDTree more like a panel than a split.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-ctrlp" class="anchor" aria-hidden="true" href="#ctrlp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/kien/ctrlp.vim"&gt;ctrlp&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ctrlp replaces the Command-T plugin with a 100% viml plugin. It provides an intuitive and fast mechanism to load files from the file system (with regex and fuzzy find), from open buffers, and from recently used files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QuickStart&lt;/strong&gt; Launch using &lt;code&gt;&amp;lt;c-p&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-surround" class="anchor" aria-hidden="true" href="#surround"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/tpope/vim-surround"&gt;Surround&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This plugin is a tool for dealing with pairs of "surroundings."  Examples
of surroundings include parentheses, quotes, and HTML tags.  They are
closely related to what Vim refers to as text-objects.  Provided
are mappings to allow for removing, changing, and adding surroundings.&lt;/p&gt;
&lt;p&gt;Details follow on the exact semantics, but first, consider the following
examples.  An asterisk (*) is used to denote the cursor position.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Old text                  Command     New text ~
  "Hello *world!"           ds"         Hello world!
  [123+4*56]/2              cs])        (123+456)/2
  "Look ma, I'm *HTML!"     cs"&amp;lt;q&amp;gt;      &amp;lt;q&amp;gt;Look ma, I'm HTML!&amp;lt;/q&amp;gt;
  if *x&amp;gt;3 {                 ysW(        if ( x&amp;gt;3 ) {
  my $str = *whee!;         vllllS'     my $str = 'whee!';
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For instance, if the cursor was inside &lt;code&gt;"foo bar"&lt;/code&gt;, you could type
&lt;code&gt;cs"'&lt;/code&gt; to convert the text to &lt;code&gt;'foo bar'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There's a lot more, check it out at &lt;code&gt;:help surround&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-nerdcommenter" class="anchor" aria-hidden="true" href="#nerdcommenter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/scrooloose/nerdcommenter"&gt;NERDCommenter&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;NERDCommenter allows you to wrangle your code comments, regardless of
filetype. View &lt;code&gt;help :NERDCommenter&lt;/code&gt; or checkout my post on &lt;a href="http://spf13.com/post/vim-plugins-nerd-commenter" rel="nofollow"&gt;NERDCommenter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QuickStart&lt;/strong&gt; Toggle comments using &lt;code&gt;&amp;lt;Leader&amp;gt;c&amp;lt;space&amp;gt;&lt;/code&gt; in Visual or Normal mode.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-neocomplete" class="anchor" aria-hidden="true" href="#neocomplete"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/shougo/neocomplete"&gt;neocomplete&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Neocomplete is an amazing autocomplete plugin with additional support for snippets. It can complete simulatiously from the dictionary, buffer, omnicomplete and snippets. This is the one true plugin that brings Vim autocomplete on par with the best editors.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QuickStart&lt;/strong&gt; Just start typing, it will autocomplete where possible&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Customizations&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automatically present the autocomplete menu&lt;/li&gt;
&lt;li&gt;Support tab and enter for autocomplete&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;C-k&amp;gt;&lt;/code&gt; for completing snippets using &lt;a href="https://github.com/Shougo/neosnippet.vim"&gt;Neosnippet&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/111927aea955ef17eafcfa2e5c973dfad81d3f1f/68747470733a2f2f692e696d6775722e636f6d2f39304767372e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/111927aea955ef17eafcfa2e5c973dfad81d3f1f/68747470733a2f2f692e696d6775722e636f6d2f39304767372e706e67" alt="neocomplete image" data-canonical-src="https://i.imgur.com/90Gg7.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-youcompleteme" class="anchor" aria-hidden="true" href="#youcompleteme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Valloric/YouCompleteMe"&gt;YouCompleteMe&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;YouCompleteMe is another amazing completion engine. It is slightly more involved to set up as it contains a binary component that the user needs to compile before it will work. As a result of this however it is very fast.&lt;/p&gt;
&lt;p&gt;To enable YouCompleteMe add &lt;code&gt;youcompleteme&lt;/code&gt; to your list of groups by overriding it in your &lt;code&gt;.vimrc.before.local&lt;/code&gt; like so: &lt;code&gt;let g:spf13_bundle_groups=['general', 'programming', 'misc', 'scala', 'youcompleteme']&lt;/code&gt; This is just an example. Remember to choose the other groups you want here.&lt;/p&gt;
&lt;p&gt;Once you have done this you will need to get Vundle to grab the latest code from git. You can do this by calling &lt;code&gt;:BundleInstall!&lt;/code&gt;. You should see YouCompleteMe in the list.&lt;/p&gt;
&lt;p&gt;You will now have the code in your bundles directory and can proceed to compile the core. Change to the directory it has been downloaded to. If you have a vanilla install then &lt;code&gt;cd ~/.spf13-vim-3/.vim/bundle/YouCompleteMe/&lt;/code&gt; should do the trick. You should see a file in this directory called install.sh. There are a few options to consider before running the installer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do you want clang support (if you don't know what this is then you likely don't need it)?
&lt;ul&gt;
&lt;li&gt;Do you want to link against a local libclang or have the installer download the latest for you?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Do you want support for c# via the omnisharp server?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The plugin is well documented on the site linked above. Be sure to give that a read and make sure you understand the options you require.&lt;/p&gt;
&lt;p&gt;For java users wanting to use eclim be sure to add &lt;code&gt;let g:EclimCompletionMethod = 'omnifunc'&lt;/code&gt; to your .vimrc.local.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-syntastic" class="anchor" aria-hidden="true" href="#syntastic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/scrooloose/syntastic"&gt;Syntastic&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Syntastic is a syntax checking plugin that runs buffers through external syntax
checkers as they are saved and opened. If syntax errors are detected, the user
is notified and is happy because they didn't have to compile their code or
execute their script to find them.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-autoclose" class="anchor" aria-hidden="true" href="#autoclose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/spf13/vim-autoclose"&gt;AutoClose&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;AutoClose does what you expect. It's simple, if you open a bracket, paren, brace, quote,
etc, it automatically closes it. It handles curlys correctly and doesn't get in the
way of double curlies for things like jinja and twig.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fugitive" class="anchor" aria-hidden="true" href="#fugitive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/tpope/vim-fugitive"&gt;Fugitive&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Fugitive adds pervasive git support to git directories in vim. For more
information, use &lt;code&gt;:help fugitive&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;:Gstatus&lt;/code&gt; to view &lt;code&gt;git status&lt;/code&gt; and type &lt;code&gt;-&lt;/code&gt; on any file to stage or
unstage it. Type &lt;code&gt;p&lt;/code&gt; on a file to enter &lt;code&gt;git add -p&lt;/code&gt; and stage specific
hunks in the file.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;:Gdiff&lt;/code&gt; on an open file to see what changes have been made to that
file&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QuickStart&lt;/strong&gt; &lt;code&gt;&amp;lt;leader&amp;gt;gs&lt;/code&gt; to bring up git status&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Customizations&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gs&lt;/code&gt; :Gstatus&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gd&lt;/code&gt; :Gdiff&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gc&lt;/code&gt; :Gcommit&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gb&lt;/code&gt; :Gblame&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gl&lt;/code&gt; :Glog&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gp&lt;/code&gt; :Git push&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gw&lt;/code&gt; :Gwrite&lt;/li&gt;
&lt;li&gt;:Git ___ will pass anything along to git.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/623be6b2a7b9edac3ad3f2f126fb22c8066f9f92/68747470733a2f2f692e696d6775722e636f6d2f344e7278562e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/623be6b2a7b9edac3ad3f2f126fb22c8066f9f92/68747470733a2f2f692e696d6775722e636f6d2f344e7278562e706e67" alt="fugitive image" data-canonical-src="https://i.imgur.com/4NrxV.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-piv" class="anchor" aria-hidden="true" href="#piv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/spf13/PIV"&gt;PIV&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The most feature complete and up to date PHP Integration for Vim with proper support for PHP 5.3+ including latest syntax, functions, better fold support, etc.&lt;/p&gt;
&lt;p&gt;PIV provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PHP 5.3 support&lt;/li&gt;
&lt;li&gt;Auto generation of PHP Doc (,pd on (function, variable, class) definition line)&lt;/li&gt;
&lt;li&gt;Autocomplete of classes, functions, variables, constants and language keywords&lt;/li&gt;
&lt;li&gt;Better indenting&lt;/li&gt;
&lt;li&gt;Full PHP documentation manual (hit K on any function for full docs)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7650c13f52fd73dc788a218f6d5862be4399cd4d/68747470733a2f2f692e696d6775722e636f6d2f63304747502e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7650c13f52fd73dc788a218f6d5862be4399cd4d/68747470733a2f2f692e696d6775722e636f6d2f63304747502e706e67" alt="php vim itegration image" data-canonical-src="https://i.imgur.com/c0GGP.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ackvim" class="anchor" aria-hidden="true" href="#ackvim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/mileszs/ack.vim"&gt;Ack.vim&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ack.vim uses ack to search inside the current directory for a pattern.
You can learn more about it with &lt;code&gt;:help Ack&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QuickStart&lt;/strong&gt; :Ack&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tabularize" class="anchor" aria-hidden="true" href="#tabularize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/godlygeek/tabular"&gt;Tabularize&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Tabularize lets you align statements on their equal signs and other characters&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Customizations&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;a= :Tabularize /=&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;a: :Tabularize /:&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;a:: :Tabularize /:\zs&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;a, :Tabularize /,&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;a&amp;lt;Bar&amp;gt; :Tabularize /&amp;lt;Bar&amp;gt;&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tagbar" class="anchor" aria-hidden="true" href="#tagbar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/majutsushi/tagbar"&gt;Tagbar&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;spf13-vim includes the Tagbar plugin. This plugin requires exuberant-ctags and will automatically generate tags for your open files. It also provides a panel to navigate easily via tags&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QuickStart&lt;/strong&gt; &lt;code&gt;CTRL-]&lt;/code&gt; while the cursor is on a keyword (such as a function name) to jump to its definition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Customizations&lt;/strong&gt;: spf13-vim binds &lt;code&gt;&amp;lt;Leader&amp;gt;tt&lt;/code&gt; to toggle the tagbar panel&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/71c0d031e452994208e2dfc8f4016d1713606e18/68747470733a2f2f692e696d6775722e636f6d2f636a6272432e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/71c0d031e452994208e2dfc8f4016d1713606e18/68747470733a2f2f692e696d6775722e636f6d2f636a6272432e706e67" alt="tagbar image" data-canonical-src="https://i.imgur.com/cjbrC.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: For full language support, run &lt;code&gt;brew install ctags&lt;/code&gt; to install
exuberant-ctags.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: Check out &lt;code&gt;:help ctags&lt;/code&gt; for information about VIM's built-in
ctag support. Tag navigation creates a stack which can traversed via
&lt;code&gt;Ctrl-]&lt;/code&gt; (to find the source of a token) and &lt;code&gt;Ctrl-T&lt;/code&gt; (to jump back up
one level).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-easymotion" class="anchor" aria-hidden="true" href="#easymotion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Lokaltog/vim-easymotion"&gt;EasyMotion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;EasyMotion provides an interactive way to use motions in Vim.&lt;/p&gt;
&lt;p&gt;It quickly maps each possible jump destination to a key allowing very fast and
straightforward movement.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QuickStart&lt;/strong&gt; EasyMotion is triggered using the normal movements, but prefixing them with &lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example this screen shot demonstrates pressing &lt;code&gt;,,w&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bab086a6e777ef0707ffe995474e41e8fb262952/68747470733a2f2f692e696d6775722e636f6d2f5a7372564c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bab086a6e777ef0707ffe995474e41e8fb262952/68747470733a2f2f692e696d6775722e636f6d2f5a7372564c2e706e67" alt="easymotion image" data-canonical-src="https://i.imgur.com/ZsrVL.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-airline" class="anchor" aria-hidden="true" href="#airline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/bling/vim-airline"&gt;Airline&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Airline provides a lightweight themable statusline with no external dependencies. By default this configuration uses the symbols &lt;code&gt;‹&lt;/code&gt; and &lt;code&gt;›&lt;/code&gt; as separators for different statusline sections but can be configured to use the same symbols as &lt;a href="https://github.com/lokaltog/powerline"&gt;Powerline&lt;/a&gt;. An example first without and then with powerline symbols is shown here:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb00ef4ce113707130df946e7b5654ead37252e1/68747470733a2f2f692e696d6775722e636f6d2f44345a594144722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/eb00ef4ce113707130df946e7b5654ead37252e1/68747470733a2f2f692e696d6775722e636f6d2f44345a594144722e706e67" alt="airline image" data-canonical-src="https://i.imgur.com/D4ZYADr.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To enable powerline symbols first install one of the &lt;a href="https://github.com/Lokaltog/powerline-fonts"&gt;Powerline Fonts&lt;/a&gt; or patch your favorite font using the provided instructions. Configure your terminal, MacVim, or Gvim to use the desired font. Finally add &lt;code&gt;let g:airline_powerline_fonts=1&lt;/code&gt; to your &lt;code&gt;.vimrc.before.local&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-syntaxes" class="anchor" aria-hidden="true" href="#additional-syntaxes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Syntaxes&lt;/h2&gt;
&lt;p&gt;spf13-vim ships with a few additional syntaxes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Markdown (bound to *.markdown, *.md, and *.mk)&lt;/li&gt;
&lt;li&gt;Twig&lt;/li&gt;
&lt;li&gt;Git commits (set your &lt;code&gt;EDITOR&lt;/code&gt; to &lt;code&gt;mvim -f&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-amazing-colors" class="anchor" aria-hidden="true" href="#amazing-colors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Amazing Colors&lt;/h2&gt;
&lt;p&gt;spf13-vim includes &lt;a href="https://github.com/altercation/vim-colors-solarized"&gt;solarized&lt;/a&gt; and &lt;a href="https://github.com/spf13/vim-colors/"&gt;spf13 vim color pack&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ir_black&lt;/li&gt;
&lt;li&gt;molokai&lt;/li&gt;
&lt;li&gt;peaksea&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use &lt;code&gt;:color molokai&lt;/code&gt; to switch to a color scheme.&lt;/p&gt;
&lt;p&gt;Terminal Vim users will benefit from solarizing their terminal emulators and setting solarized support to 16 colors:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:solarized_termcolors=16
color solarized
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Terminal emulator colorschemes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ethanschoonover.com/solarized" rel="nofollow"&gt;http://ethanschoonover.com/solarized&lt;/a&gt; (iTerm2, Terminal.app)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phiggins/konsole-colors-solarized"&gt;https://github.com/phiggins/konsole-colors-solarized&lt;/a&gt; (KDE Konsole)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sigurdga/gnome-terminal-colors-solarized"&gt;https://github.com/sigurdga/gnome-terminal-colors-solarized&lt;/a&gt; (Gnome Terminal)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-snippets" class="anchor" aria-hidden="true" href="#snippets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Snippets&lt;/h2&gt;
&lt;p&gt;It also contains a very complete set of &lt;a href="https://github.com/spf13/snipmate-snippets"&gt;snippets&lt;/a&gt; for use with snipmate or &lt;a href="https://github.com/shougo/neocomplete"&gt;neocomplete&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-intro-to-vim" class="anchor" aria-hidden="true" href="#intro-to-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intro to VIM&lt;/h1&gt;
&lt;p&gt;Here's some tips if you've never used VIM before:&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tutorials" class="anchor" aria-hidden="true" href="#tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorials&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;vimtutor&lt;/code&gt; into a shell to go through a brief interactive
tutorial inside VIM.&lt;/li&gt;
&lt;li&gt;Read the slides at &lt;a href="https://walking-without-crutches.heroku.com/#1" rel="nofollow"&gt;VIM: Walking Without Crutches&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-modes" class="anchor" aria-hidden="true" href="#modes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VIM has two (common) modes:
&lt;ul&gt;
&lt;li&gt;insert mode- stuff you type is added to the buffer&lt;/li&gt;
&lt;li&gt;normal mode- keys you hit are interpreted as commands&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;To enter insert mode, hit &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To exit insert mode, hit &lt;code&gt;&amp;lt;ESC&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-useful-commands" class="anchor" aria-hidden="true" href="#useful-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful commands&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;:q&lt;/code&gt; to exit vim&lt;/li&gt;
&lt;li&gt;Certain commands are prefixed with a &lt;code&gt;&amp;lt;Leader&amp;gt;&lt;/code&gt; key, which by default maps to &lt;code&gt;\&lt;/code&gt;.
Spf13-vim uses &lt;code&gt;let mapleader = ","&lt;/code&gt; to change this to &lt;code&gt;,&lt;/code&gt; which is in a consistent and
convenient location.&lt;/li&gt;
&lt;li&gt;Keyboard &lt;a href="http://www.viemu.com/vi-vim-cheat-sheet.gif" rel="nofollow"&gt;cheat sheet&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/igrigorik/ga-beacon"&gt;&lt;img src="https://camo.githubusercontent.com/29384ca2950ccfe99ed428b8e50b18d57b714ca3/68747470733a2f2f67612d626561636f6e2e61707073706f742e636f6d2f55412d373133313033362d352f73706631332d76696d2f726561646d65" alt="Analytics" data-canonical-src="https://ga-beacon.appspot.com/UA-7131036-5/spf13-vim/readme" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bitdeli.com/free" title="Bitdeli Badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52a9093eef46a29c5cbb6a07728c275ce2fbd9f7/68747470733a2f2f64327765637a68766c38323376302e636c6f756466726f6e742e6e65742f73706631332f73706631332d76696d2f7472656e642e706e67" alt="Bitdeli Badge" data-canonical-src="https://d2weczhvl823v0.cloudfront.net/spf13/spf13-vim/trend.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>spf13</author><guid isPermaLink="false">https://github.com/spf13/spf13-vim</guid><pubDate>Sat, 01 Feb 2020 00:11:00 GMT</pubDate></item><item><title>Blacksuan19/init.nvim #12 in Vim script, Today</title><link>https://github.com/Blacksuan19/init.nvim</link><description>&lt;p&gt;&lt;i&gt;An Opinionated Minimalist Neovim Configuration&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-an-opinionated-neovim-config-for-the-minimalists" class="anchor" aria-hidden="true" href="#an-opinionated-neovim-config-for-the-minimalists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;An opinionated Neovim config for the Minimalists&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#why"&gt;Why?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#supported-languages"&gt;Supported Languages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Setup&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Environment"&gt;Enviroment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#plugins"&gt;Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keyboard-shortcuts"&gt;Keyboard shortcuts&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#legend"&gt;Legend&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#customizations"&gt;Customizations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demos"&gt;Demos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why?&lt;/h2&gt;
&lt;p&gt;Modern Vim distributions are really huge and bloated with way too many fancy features
that you won't ever use or need, for example directory trees like Nerd tree, you
don't need a tree, you can view a project structure with fzf which is faster and has search.
Another example is &lt;a href="https://github.com/hardcoreplayers/ThinkVim"&gt;ThinkVim&lt;/a&gt; has a
separate extension for formatting while also having ALE which can do that as
well, this double functionality is very common, thats one of the things this
distro avoids, KISS!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Single file (you don't want your dotfiles to be all Vim script)&lt;/li&gt;
&lt;li&gt;Super minimal (~400 lines)&lt;/li&gt;
&lt;li&gt;Super fast startup (less than 40ms!)&lt;/li&gt;
&lt;li&gt;Lazy loading plugins&lt;/li&gt;
&lt;li&gt;Highly customizable&lt;/li&gt;
&lt;li&gt;Beautiful Material ocean color scheme&lt;/li&gt;
&lt;li&gt;Vscode like auto completion, multi cursor&lt;/li&gt;
&lt;li&gt;Smooth Scrolling (its really smooth!)&lt;/li&gt;
&lt;li&gt;floating window + borders + file previews on fzf(see &lt;a href="#demos"&gt;demos&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Asynchronous Lint Engine&lt;/li&gt;
&lt;li&gt;Simple, Intuitive shortcuts&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supported-languages" class="anchor" aria-hidden="true" href="#supported-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Languages&lt;/h3&gt;
&lt;p&gt;Neovim provides support for a wide range of languages by default.
There is also support for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://shopify.github.io/liquid/" rel="nofollow"&gt;liquid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linux (not tested on other platforms)&lt;/li&gt;
&lt;li&gt;Neovim (you can try regular Vim)&lt;/li&gt;
&lt;li&gt;Properly set up environment&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;To check if your current environment is correctly set up run &lt;code&gt;:CheckHealth&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-environment" class="anchor" aria-hidden="true" href="#environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Environment&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;python
&lt;ul&gt;
&lt;li&gt;python3 &lt;code&gt;pip3 install --user pynvim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;python2 &lt;code&gt;pip2 install --user pynvim&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ruby &lt;code&gt;gem install neovim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;nodeJS &lt;code&gt;yarn install -g neovim&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/FiraCode"&gt;FiraCode Nerd Font&lt;/a&gt; (not required but Recommended)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tmux/tmux"&gt;tmux&lt;/a&gt; (not required but recommended)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davidhalter/jedi-vim"&gt;jedi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prettier.io/" rel="nofollow"&gt;prettier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;clang (much better C and C++)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;fuzzy finder (fzf)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sharkdp/bat"&gt;bat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/axiros/terminal_markdown_viewer"&gt;Terminal markdown viewer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;After installing the requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/Blacksuan19/init.nvim ~/.config/nvim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start &lt;code&gt;nvim&lt;/code&gt; and it will do the rest&lt;/li&gt;
&lt;li&gt;press enter if there are any errors (don't worry its fine)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Thanks to vim-plug the plugins are lazy loaded (anything that is not needed for
the current buffer is not loaded) for example opening a python file means all
other non python related plugins are not loaded.&lt;br&gt;
Coc extensions are lazy loaded as well, they work the same way as vim-plug plugins.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Plugin&lt;/th&gt;
&lt;th&gt;Functionality&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/vim-airline/vim-airline"&gt;vim-airline&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;airline status line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/vim-airline/vim-airline-themes"&gt;airline-themes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;airline themes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ryanoasis/vim-devicons"&gt;devicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;icons everywhere&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/luochen1990/rainbow"&gt;rainbow&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;rainbow parenthesis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/hzchirs/vim-material"&gt;vim-material&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;material themes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/junegunn/goyo.vim"&gt;goyo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;focus mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/neoclide/coc.nvim"&gt;coc.nvim&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;async completion and more&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/desmap/ale-sensible"&gt;ale-sensible&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;better ALE experience&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/w0rp/ale"&gt;ale&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;diagnostics, linting and more&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;fuzzy finder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/junegunn/fzf.vim"&gt;fzf.vim&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;fuzzy finder vim integration&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/SirVer/ultisnips"&gt;ultisnips&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;snippets engine&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/honza/vim-snippets"&gt;vim-snippets&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;snippets for many languages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/alvan/vim-closetag"&gt;vim-closetag&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;auto html tag closing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Yggdroot/indentLine"&gt;indentLine&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;auto indent lines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/google/vim-searchindex"&gt;vim-searchindex&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;show index of a search string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-liquid"&gt;vim-liquid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;liquid language support&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-commentary"&gt;vim-commentary&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;better comments everywhere&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-sensible"&gt;vim-sensible&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;sensible defaults for vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/lambdalisue/suda.vim"&gt;suda&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;add sudo support&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/907th/vim-auto-save"&gt;vim-auto-save&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;auto save on insert mode exit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/mhinz/vim-startify"&gt;vim-startify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;cool startup thingy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kristijanhusak/vim-carbon-now-sh"&gt;vim-carbon-no-sh&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;cool screen shots powered by carbon now sh&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-fugitive"&gt;vim-fugitive&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;best git integration around&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/machakann/vim-sandwich"&gt;vim-sandwich&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;surround stuff with stuff&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/psliwka/vim-smoothie"&gt;vim-smoothie&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;super smooth scrolling&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/farmergreg/vim-lastplace"&gt;vim-lastplace&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;open a file in the last place cursor was&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/romainl/vim-cool"&gt;vim-cool&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;better search highlight control&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/wellle/tmux-complete.vim"&gt;tmux-complete&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;tmux panes completion&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/liuchengxu/vista.vim"&gt;Vista&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;list of tags&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-eunuch"&gt;vim-eunuch&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;some common Linux commands&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-keyboard-shortcuts" class="anchor" aria-hidden="true" href="#keyboard-shortcuts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keyboard shortcuts&lt;/h2&gt;
&lt;p&gt;To learn the default vim shortcuts run &lt;code&gt;Tutor&lt;/code&gt; and or checkout this &lt;a href="https://vim-adventures.com/" rel="nofollow"&gt;site&lt;/a&gt;.&lt;br&gt;
Not a lot of changes have been done here, the plugins shortcuts are almost
identical, check each plugin under the &lt;a href="#plugins"&gt;plugins&lt;/a&gt; section for its key
mappings, the changes i have made either make a function easier to access and or
expose a hidden functionality within a plugin.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-legend" class="anchor" aria-hidden="true" href="#legend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Legend&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;,&lt;/code&gt; == leader key&lt;br&gt;
&lt;code&gt;S&lt;/code&gt; == Shift key&lt;br&gt;
&lt;code&gt;C&lt;/code&gt; == ctrl key&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Mapping&lt;/th&gt;
&lt;th&gt;functionality&lt;/th&gt;
&lt;th&gt;Replaced Mapping&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;commands key&lt;/td&gt;
&lt;td&gt;:&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,r&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reload nvim config&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Trim white spaces(enabled by default with ALE)&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,q&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;close tab&lt;/td&gt;
&lt;td&gt;:q&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,w&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;save changes(tho save when existing insert mode is enabled by default)&lt;/td&gt;
&lt;td&gt;:q&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;fzf files viewer (shows project files with the ability to search)&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,g&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Goyo (zen mode)&lt;/td&gt;
&lt;td&gt;Default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,m&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;opens markdown preview (only in markdown files)&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,e&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;call :PlugInstall (install plugins)&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;search in vista tags&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,/&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;search in project folder (calls Rg)&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,rn&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;rename globally&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,l&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;easymotion to the left&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;easymotion to the right&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,j&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;easymotion to the bottom&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,k&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;easymotion to the top&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jj&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Escape&lt;/td&gt;
&lt;td&gt;Esc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;use a different register for deletion (so the deleted text wont be copied)&lt;/td&gt;
&lt;td&gt;"_d&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-q&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;close all buffers and exit nvim&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;copy text to system clipboard (only in visual mode)&lt;/td&gt;
&lt;td&gt;+y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;cut text to system clipboard (only in visual mode)&lt;/td&gt;
&lt;td&gt;+d&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-l&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;move to the split on the right&lt;/td&gt;
&lt;td&gt;Default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-k&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;move the split above&lt;/td&gt;
&lt;td&gt;Default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-j&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;move to the split on below&lt;/td&gt;
&lt;td&gt;Default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Move the split to the left&lt;/td&gt;
&lt;td&gt;Default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;highlights character for multi cursor selection (in normal mode)&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Highlights word/selection for multi cursor selection&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ENTER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;insert blank line below in normal mode&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ENTER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;inputs selected snippet in insert mode&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Tab&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;cycles throw coc in insert mode&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Tab&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;switch to the next buffer(tab)&lt;/td&gt;
&lt;td&gt;Default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;S-Tab&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;switch to the previous buffer(tab)&lt;/td&gt;
&lt;td&gt;Default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open vista (tags viewer)&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Rotates splits in current view&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Startify&lt;/td&gt;
&lt;td&gt;Default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F8&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;opens selection in carbon now sh (only in visual mode)&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;]g&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;next diagnostic&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[g&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Previous diagnostic&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;|&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customizations" class="anchor" aria-hidden="true" href="#customizations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizations&lt;/h2&gt;
&lt;p&gt;Since the file is pretty small its very easy to interpret by even those who
don't have any knowledge about vim script, most of the sections have comments
about their functionality, and can be removed, commented out or swapped easily,
there are some defaults that are not everyone's cup of tea (after all this is
highly opinionated).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Disabling autosave:&lt;/em&gt; set &lt;code&gt;let g:auto_save = 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Disabling format on save:&lt;/em&gt; set &lt;code&gt;let g:ale_fix_on_save = 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;removing words from completion:&lt;/em&gt; &lt;code&gt;CocList extensions&lt;/code&gt; highlight extension then press Tab to show
actions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of the included plugins are highly customizable in nature (this is vim),
checkout &lt;a href="#plugins"&gt;Plugins&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-demos" class="anchor" aria-hidden="true" href="#demos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demos&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/Blacksuan19/init.nvim/blob/master/Screens/fzf.png"&gt;&lt;img src="https://github.com/Blacksuan19/init.nvim/raw/master/Screens/fzf.png" alt="fzf preview" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/Blacksuan19/init.nvim/blob/master/Screens/ag.png"&gt;&lt;img src="https://github.com/Blacksuan19/init.nvim/raw/master/Screens/ag.png" alt="Ag preview" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://asciinema.org/a/284399" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d3cb72f639533fddc19048dd29b573f606d13cab/68747470733a2f2f61736369696e656d612e6f72672f612f3238343339392e737667" alt="asciicast" data-canonical-src="https://asciinema.org/a/284399.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://asciinema.org/a/284400" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/44bcbfa2edf119af737aec0212d647798c63bf58/68747470733a2f2f61736369696e656d612e6f72672f612f3238343430302e737667" alt="asciicast" data-canonical-src="https://asciinema.org/a/284400.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://asciinema.org/a/284401" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/87a2c99f9568d3956eea860e316af591c82c4e3f/68747470733a2f2f61736369696e656d612e6f72672f612f3238343430312e737667" alt="asciicast" data-canonical-src="https://asciinema.org/a/284401.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;All the Credit goes to the Neovim team for making most of the extensions
possible and better (async), and to all the plugins developers, and the hacker
who spend time Finding good shortcuts and tricks to make this an even more
superb experience.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Blacksuan19</author><guid isPermaLink="false">https://github.com/Blacksuan19/init.nvim</guid><pubDate>Sat, 01 Feb 2020 00:12:00 GMT</pubDate></item><item><title>chxuan/vimplus #13 in Vim script, Today</title><link>https://github.com/chxuan/vimplus</link><description>&lt;p&gt;&lt;i&gt;:rocket:An automatic configuration program for vim&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/chxuan/vimplus/master/screenshots/vimplus-logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/chxuan/vimplus/master/screenshots/vimplus-logo.png" alt="vimplus-logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-an-automatic-configuration-program-for-vim" class="anchor" aria-hidden="true" href="#an-automatic-configuration-program-for-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;An automatic configuration program for vim&lt;/h1&gt;
&lt;p align="center"&gt;
    &lt;a href="#build" alt="build"&gt;&lt;img src="https://camo.githubusercontent.com/474a2feaf657f12a6d2f1109a07886ba92fe3d31/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6275696c642d70617373696e672d627269676874677265656e2e737667" data-canonical-src="https://img.shields.io/badge/build-passing-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="#安装" alt="platform"&gt;&lt;img src="https://camo.githubusercontent.com/e4d37b18f798006203a4419456c68592a697fca8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d4d61634f53582532302537432532304c696e75782532303634626974253230253743253230446f636b657225323025374325323057534c2d627269676874677265656e2e737667" data-canonical-src="https://img.shields.io/badge/platform-MacOSX%20%7C%20Linux%2064bit%20%7C%20Docker%20%7C%20WSL-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/chxuan/vimplus/stargazers" alt="stars"&gt;&lt;img src="https://camo.githubusercontent.com/fe7be0e84f828fd6549893ab8f9df398cdef6c34/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f63687875616e2f76696d706c75732e7376673f7374796c653d706f706f7574266c6162656c3d7374617273" data-canonical-src="https://img.shields.io/github/stars/chxuan/vimplus.svg?style=popout&amp;amp;label=stars" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/chxuan/vimplus/forks" alt="forks"&gt;&lt;img src="https://camo.githubusercontent.com/d4bbb25285403fab2621195d4e9d2896fd0f72dc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f63687875616e2f76696d706c75732e7376673f7374796c653d706f706f7574266c6162656c3d666f726b73" data-canonical-src="https://img.shields.io/github/forks/chxuan/vimplus.svg?style=popout&amp;amp;label=forks" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/chxuan/vimplus/graphs/contributors" alt="contributors"&gt;&lt;img src="https://camo.githubusercontent.com/085071fbfdd34f80392e49bb9f9bd4cc2acd413a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f63687875616e2f76696d706c7573" data-canonical-src="https://img.shields.io/github/contributors/chxuan/vimplus" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/chxuan/vimplus/blob/master/LICENSE" alt="lincense"&gt;&lt;img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/chxuan/vimplus/master/screenshots/main.png"&gt;&lt;img src="https://raw.githubusercontent.com/chxuan/vimplus/master/screenshots/main.png" alt="main" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-安装" class="anchor" aria-hidden="true" href="#安装"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安装&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-mac-os-x" class="anchor" aria-hidden="true" href="#mac-os-x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac OS X&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-安装homebrew" class="anchor" aria-hidden="true" href="#安装homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安装&lt;a href="https://brew.sh/" rel="nofollow"&gt;HomeBrew&lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-安装vimplus" class="anchor" aria-hidden="true" href="#安装vimplus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安装vimplus&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/chxuan/vimplus.git ~/.vimplus
cd ~/.vimplus
./install.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-设置nerd-font" class="anchor" aria-hidden="true" href="#设置nerd-font"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;设置Nerd Font&lt;/h4&gt;
&lt;p&gt;为防止vimplus显示乱码，需设置mac终端字体为&lt;code&gt;Droid Sans Mono Nerd Font&lt;/code&gt;。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-更新vimplus" class="anchor" aria-hidden="true" href="#更新vimplus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;更新vimplus&lt;/h4&gt;
&lt;p&gt;紧跟vimplus的步伐，尝鲜新特性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./update.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-linux-64-bit" class="anchor" aria-hidden="true" href="#linux-64-bit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux 64-bit&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-支持以下发行版" class="anchor" aria-hidden="true" href="#支持以下发行版"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;支持以下发行版&lt;/h4&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=ubuntu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/de0844c7f8fad93066a3bdd7d4f5c50b7a549af1/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f7562756e74752e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/ubuntu.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=ubuntukylin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e6e9c2de13e87314a5e9aad9831d6d9b4ede593/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f7562756e74756b796c696e2e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/ubuntukylin.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=debian" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/95c8913431844ef63535561bcbd49bc41c413f63/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f64656269616e2e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/debian.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=kali" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a2b48d1383223abce3ff6b399f4c3d484c77fc62/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f6b616c692e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/kali.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=deepin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7cff69a2241262862c04b303513c0273476eef48/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f64656570696e2e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/deepin.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=mint" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c751a02dde97ff4a357527519d3c45330b661f9/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f6d696e742e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/mint.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=elementary" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f63de97865f9b5d6dc356eae0b8df1fb7c2703f0/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f656c656d656e746172792e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/elementary.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=centos" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1eb75b68d1f62a2cc943de0073c6d27cc026622b/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f63656e746f732e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/centos.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=fedora" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/329249a967ccef701e493692c99e8d318ab2b65e/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f6665646f72612e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/fedora.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=arch" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/46cca5f938e477a2d03d786fb77f5f427de25b53/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f617263682e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/arch.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=manjaro" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a107b02b70b15ea11f48a90e1c2a9f6abab9ebbb/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f6d616e6a61726f2e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/manjaro.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://distrowatch.com/table.php?distribution=opensuse" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f74a83cc44c829bf0e09e7bc318a291fa4c50c5b/68747470733a2f2f64697374726f77617463682e636f6d2f696d616765732f79767a6875776270792f6f70656e737573652e706e67" data-canonical-src="https://distrowatch.com/images/yvzhuwbpy/opensuse.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p align="center"&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-安装vimplus-1" class="anchor" aria-hidden="true" href="#安装vimplus-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安装vimplus&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/chxuan/vimplus.git ~/.vimplus
cd ~/.vimplus
./install.sh //不加sudo
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-设置nerd-font-1" class="anchor" aria-hidden="true" href="#设置nerd-font-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;设置Nerd Font&lt;/h4&gt;
&lt;p&gt;为防止vimplus显示乱码，需设置linux终端字体为&lt;code&gt;Droid Sans Mono Nerd Font&lt;/code&gt;。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-多用户支持" class="anchor" aria-hidden="true" href="#多用户支持"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;多用户支持&lt;/h4&gt;
&lt;p&gt;将vimplus在某个用户下安装好后，若需要在其他用户也能够使用vimplus，则执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ./install_to_user.sh username1 username2 //替换为真实用户名
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-更新vimplus-1" class="anchor" aria-hidden="true" href="#更新vimplus-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;更新vimplus&lt;/h4&gt;
&lt;p&gt;紧跟vimplus的步伐，尝鲜新特性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./update.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/chxuan/ubuntu-vimplus" rel="nofollow"&gt;ubuntu-vimplus&lt;/a&gt;是vimplus基于ubuntu18.04的docker镜像，无需安装vimplus，即可快速体验vimplus带来的快乐&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it chxuan/ubuntu-vimplus
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-自定义" class="anchor" aria-hidden="true" href="#自定义"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自定义&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chxuan/vimplus/blob/master/.vimrc"&gt;~/.vimrc&lt;/a&gt;为vimplus的默认配置，一般不做修改&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chxuan/vimplus/blob/master/.vimrc.custom.plugins"&gt;~/.vimrc.custom.plugins&lt;/a&gt;为用户自定义插件列表，用户增加、卸载插件请修改该文件&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chxuan/vimplus/blob/master/.vimrc.custom.config"&gt;~/.vimrc.custom.config&lt;/a&gt;为用户自定义配置文件，一般性配置请放入该文件，可覆盖&lt;a href="https://github.com/chxuan/vimplus/blob/master/.vimrc"&gt;~/.vimrc&lt;/a&gt;里的配置&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-插件列表" class="anchor" aria-hidden="true" href="#插件列表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;插件列表&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;插件&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/cpp-mode"&gt;cpp-mode&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;提供生成函数实现、函数声明/实现跳转、.h .cpp切换等功能(I'm author&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/vim-edit"&gt;vim-edit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;方便的文本编辑插件(I'm author&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/change-colorscheme"&gt;change-colorscheme&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;随心所欲切换主题(I'm author&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/prepare-code"&gt;prepare-code&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;新建文件时，生成预定义代码片段(I'm author&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/vim-buffer"&gt;vim-buffer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;vim缓存操作(I'm author&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/vimplus-startify"&gt;vimplus-startify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;vimplus开始页面(修改自&lt;a href="https://github.com/mhinz/vim-startify"&gt;mhinz/vim-startify&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chxuan/tagbar"&gt;tagbar&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;使用&lt;a href="https://github.com/majutsushi/tagbar"&gt;majutsushi/tagbar&lt;/a&gt;的v2.3版本，&lt;a href="https://github.com/vim-scripts/taglist.vim"&gt;taglist&lt;/a&gt;的替代品，显示类/方法/变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;比&lt;a href="https://github.com/VundleVim/Vundle.vim"&gt;Vundle&lt;/a&gt;下载更快的插件管理软件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Valloric/YouCompleteMe"&gt;YouCompleteMe&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;史上最强大的基于语义的自动补全插件，支持C/C++、C#、Python、PHP等语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/scrooloose/nerdtree"&gt;NerdTree&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;代码资源管理器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tiagofumo/vim-nerdtree-syntax-highlight"&gt;vim-nerdtree-syntax-highlight&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;NerdTree文件类型高亮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Xuyuanp/nerdtree-git-plugin"&gt;nerdtree-git-plugin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;NerdTree显示git状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ryanoasis/vim-devicons"&gt;vim-devicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;显示文件类型图标&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/vim-airline/vim-airline"&gt;Airline&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;可以取代&lt;a href="https://github.com/powerline/powerline"&gt;powerline&lt;/a&gt;的状态栏美化插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jiangmiao/auto-pairs"&gt;auto-pairs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;自动补全引号、圆括号、花括号等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Yggdroot/LeaderF"&gt;LeaderF&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;比&lt;a href="https://github.com/ctrlpvim/ctrlp.vim"&gt;ctrlp&lt;/a&gt;更强大的文件的模糊搜索工具&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/mileszs/ack.vim"&gt;ack&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;强大的文本搜索工具&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-surround"&gt;vim-surround&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;自动增加、替换配对符的插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-commentary"&gt;vim-commentary&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;快速注释代码插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-repeat"&gt;vim-repeat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;重复上一次操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-endwise"&gt;vim-endwise&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;if/end/endif/endfunction补全&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/godlygeek/tabular"&gt;tabular&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;代码、注释、表格对齐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/easymotion/vim-easymotion"&gt;vim-easymotion&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;强大的光标快速移动工具，强大到颠覆你的插件观&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/haya14busa/incsearch.vim"&gt;incsearch.vim&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;模糊字符搜索插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tpope/vim-fugitive"&gt;vim-fugitive&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;集成Git&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/junegunn/gv.vim"&gt;gv&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;显示git提交记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/junegunn/vim-slash"&gt;vim-slash&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;优化搜索，移动光标后清除高亮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Shougo/echodoc.vim"&gt;echodoc&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;补全函数时在命令栏显示函数签名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/terryma/vim-smooth-scroll"&gt;vim-smooth-scroll&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;让翻页更顺畅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/rhysd/clever-f.vim"&gt;clever-f.vim&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;强化f和F键&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-快捷键" class="anchor" aria-hidden="true" href="#快捷键"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;快捷键&lt;/h2&gt;
&lt;p&gt;以下是部分快捷键，可通过vimplus的&lt;code&gt;,h&lt;/code&gt;命令查看&lt;a href="https://github.com/chxuan/vimplus/blob/master/help.md"&gt;vimplus帮助文档&lt;/a&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;,&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Leader Key&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;打开/关闭代码资源管理器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;打开/关闭函数列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;.h .cpp 文件切换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;转到函数声明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;U&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;转到函数实现&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;转到变量声明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;打开include文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;拷贝函数声明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;p&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;生成函数实现&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;w&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;单词跳转&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;搜索~目录下的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;F&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;搜索当前目录下的文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;g&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示git仓库提交记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;G&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示当前文件提交记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示当前文件在某个commit下的完整内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ff&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;语法错误自动修复(FixIt)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-p&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到上一个buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;c-n&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到下一个buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除当前buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;D&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除当前buffer外的所有buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vim&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;运行vim编辑器时,默认启动开始页面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;F5&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示语法错误提示窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;F9&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示上一主题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;F10&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示下一主题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;l&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;按竖线对齐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;按等号对齐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ya&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;复制行文本到字母a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Da&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;剪切行文本到字母a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ca&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;改写行文本到字母a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;替换文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;r&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全局替换，目前只支持单个文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;gcc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;注释代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;gcap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;注释段落&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vif&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;选中函数内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dif&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除函数内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cif&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;改写函数内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vaf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;选中函数内容（包括函数名 花括号）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;daf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除函数内容（包括函数名 花括号）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;caf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;改写函数内容（包括函数名 花括号）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fa&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查找字母a，然后再按f键查找下一个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;e&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;快速编辑~/.vimrc文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;重新加载~/.vimrc文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;vp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;快速编辑~/.vimrc.custom.plugins文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;vc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;快速编辑~/.vimrc.custom.config文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;打开vimplus帮助文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;H&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;打开当前光标所在单词的vim帮助文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;复制当前选中到系统剪切板&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;i&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;安装插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;更新插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除插件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;vimplus安装脚本会在自己电脑上安装哪些软件？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;网络良好情况下，vimplus只需30分钟左右即可将vim cpp环境配置好，vimplus真正的做到了一键配置，不让用户操心。vimplus会安装一些必备软件，比如说python、cmake、gcc、fontconfig等，vimplus也考虑到了有些系统的vim不支持python，它会自动去下载vim源码将python支持编译进去，vimplus也会安装nerd-font不让vim显示出现乱码，最最重要的是vimplus实现了ycm自动编译安装，给折腾了几天ycm都没有安装好的用户带来了新的希望，而且vimplus也支持macos和linux众多发行版，让linux发烧友频繁切换发行版而不用操心vim环境配置。最后说了这么多，不如看&lt;a href="https://github.com/chxuan/vimplus/blob/master/install.sh"&gt;vimplus安装脚本&lt;/a&gt;来的直接&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;启动vim报错：RequestsDependencyWarning: Old version of cryptography ([1, 2, 3]) may cause slowdown.&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以尝试将cryptography删掉，具体见&lt;a href="https://github.com/chxuan/vimplus/issues/208"&gt;issues #208&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;vimplus不支持目前用户正在使用的系统怎么办？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以给作者提&lt;a href="https://github.com/chxuan/vimplus/issues"&gt;Issues&lt;/a&gt;，或者自己fork vimplus来修改，并提交pr，贡献自己的一份力量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;安装vimplus后Airline等插件有乱码，怎么解决？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;linux和mac系统需设置终端字体为&lt;code&gt;Droid Sans Mono Nerd Font&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;xshell连接远程主机不能使用vim-devicons或乱码。&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;windows系统安装&lt;a href="https://github.com/ryanoasis/nerd-fonts"&gt;Nerd Font&lt;/a&gt;字体后并更改xshell字体即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ubuntu18.04安装了nerd font但通过终端属性并没有看到该字体。&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以试试dconf-editor软件来设置，可以参考&lt;a href="https://blog.csdn.net/wang73ying/article/details/82491993" rel="nofollow"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;使用第三方库时怎么让ycm补全第三方库API？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vimplus安装完毕之后，&lt;code&gt;~&lt;/code&gt;目录下将会生成两个隐藏文件分别是.vimrc和.ycm_extra_conf.py，其中.vimrc是vim的配置文件，.ycm_extra_conf.py是ycm插件的配置文件，当你需要创建一个project时，需要将.ycm_extra_conf.py拷贝到project的顶层目录，通过修改该配置文件里面的&lt;code&gt;flags&lt;/code&gt;变量来添加你的第三方库路径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;怎么自定义文件头，比如说添加作者、创建时间？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你可以修改&lt;a href="https://github.com/chxuan/prepare-code"&gt;chxuan/prepare-code&lt;/a&gt;插件来达到目的，可以参考&lt;a href="https://blog.csdn.net/liuyangbo121/article/details/82971736" rel="nofollow"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;安装vimplus在“[ 95%] Building CXX object ycm/CMakeFiles/ycm_core.dir/ycm_core.cpp.o”等进度时出现编译报错&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编译ycm需要消耗较大内存，建议内存大于1G，实在不行也可以开启linux swap分区。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;以上没有我遇到的问题怎么办？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;您可以通过上网找解决方法，或提&lt;a href="https://github.com/chxuan/vimplus/issues"&gt;Issues&lt;/a&gt;，也可以通过加QQ&lt;code&gt;787280310&lt;/code&gt;、发邮件方式&lt;code&gt;787280310@qq.com&lt;/code&gt;一起讨论解决方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;vimplus用起来真的太棒了，怎么办？&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那就麻烦您打赏一颗&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;吧，给予我继续维护的动力。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-代码贡献者" class="anchor" aria-hidden="true" href="#代码贡献者"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码贡献者&lt;/h2&gt;
&lt;a href="https://github.com/chxuan" title="chxuan"&gt;
&lt;img src="https://github.com/chxuan.png?size=64" width="64" height="64" alt="chxuan" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/dofy" title="dofy"&gt;
&lt;img src="https://github.com/dofy.png?size=64" width="64" height="64" alt="dofy" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/urain39" title="urain39"&gt;
&lt;img src="https://github.com/urain39.png?size=64" width="64" height="64" alt="urain39" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/freedomDR" title="freedomDR"&gt;
&lt;img src="https://github.com/freedomDR.png?size=64" width="64" height="64" alt="freedomDR" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/starifly" title="starifly"&gt;
&lt;img src="https://github.com/starifly.png?size=64" width="64" height="64" alt="starifly" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Shaloc" title="Shaloc"&gt;
&lt;img src="https://github.com/Shaloc.png?size=64" width="64" height="64" alt="Shaloc" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/jokerkeny" title="jokerkeny"&gt;
&lt;img src="https://github.com/jokerkeny.png?size=64" width="64" height="64" alt="jokerkeny" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/xuthus5" title="xuthus5"&gt;
&lt;img src="https://github.com/xuthus5.png?size=64" width="64" height="64" alt="xuthus5" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/zhoumengkang" title="zhoumengkang"&gt;
&lt;img src="https://github.com/zhoumengkang.png?size=64" width="64" height="64" alt="zhoumengkang" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/tuberry" title="tuberry"&gt;
&lt;img src="https://github.com/tuberry.png?size=64" width="64" height="64" alt="tuberry" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/wyg1997" title="wyg1997"&gt;
&lt;img src="https://github.com/wyg1997.png?size=64" width="64" height="64" alt="wyg1997" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-支持开源heart" class="anchor" aria-hidden="true" href="#支持开源heart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;支持开源&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;有意愿献爱心的小伙伴，务必将github账号写入捐款备注哦，谢谢大家&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;wechat&lt;/th&gt;
&lt;th&gt;alipay&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#支持开源"&gt;&lt;img src="https://github.com/chxuan/vimplus/raw/master/screenshots/wechat.png" height="150" width="150" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#支持开源"&gt;&lt;img src="https://github.com/chxuan/vimplus/raw/master/screenshots/alipay.png" height="150" width="150" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;支持者&lt;/th&gt;
&lt;th&gt;RMB&lt;/th&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zhoumengkang"&gt;zhoumengkang&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;¥50&lt;/td&gt;
&lt;td&gt;2019-09-28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zhoumengkang"&gt;zhoumengkang&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;¥50&lt;/td&gt;
&lt;td&gt;2019-09-29&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zibraque"&gt;zibraque&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;¥50&lt;/td&gt;
&lt;td&gt;2019-11-25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/gfreewind"&gt;gfreewind&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;¥20&lt;/td&gt;
&lt;td&gt;2019-12-27&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-vimplusstar趋势图" class="anchor" aria-hidden="true" href="#vimplusstar趋势图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vimplus&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;趋势图&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://stars.medv.io/chxuan/vimplus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d94b8ddf255fe58c5f6b4f7a65c50241511d6f7/68747470733a2f2f73746172732e6d6564762e696f2f63687875616e2f76696d706c75732e737667" alt="Sparkline" data-canonical-src="https://stars.medv.io/chxuan/vimplus.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This software is licensed under the &lt;a href="https://github.com/chxuan/vimplus/blob/master/LICENSE"&gt;MIT license&lt;/a&gt;. © 2016 chxuan&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>chxuan</author><guid isPermaLink="false">https://github.com/chxuan/vimplus</guid><pubDate>Sat, 01 Feb 2020 00:13:00 GMT</pubDate></item><item><title>SpaceVim/SpaceVim #14 in Vim script, Today</title><link>https://github.com/SpaceVim/SpaceVim</link><description>&lt;p&gt;&lt;i&gt;A community-driven modular vim distribution - The ultimate vim configuration&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://spacevim.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/73dd69d7837c503fb4690cfe6dbfc23305edf691/68747470733a2f2f737061636576696d2e6f72672f6c6f676f2e706e67" alt="SpaceVim" data-canonical-src="https://spacevim.org/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/SpaceVim/SpaceVim/wiki"&gt;Wiki&lt;/a&gt; |
&lt;a href="https://spacevim.org/documentation/" rel="nofollow"&gt;Documentation&lt;/a&gt; |
&lt;a href="https://twitter.com/SpaceVim" rel="nofollow"&gt;Twitter&lt;/a&gt; |
&lt;a href="https://spacevim.org/community/" rel="nofollow"&gt;Community&lt;/a&gt; |
&lt;a href="https://spacevim.org/sponsors/" rel="nofollow"&gt;Sponsors&lt;/a&gt; |
&lt;a href="https://gitter.im/SpaceVim/SpaceVim" rel="nofollow"&gt;Gitter &lt;strong&gt;Chat&lt;/strong&gt;&lt;/a&gt; |
&lt;a href="https://spacevim.org/cn/" rel="nofollow"&gt;中文官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/SpaceVim/SpaceVim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/007598b4f2e2bc1b91cbbba50b50f4ec2892dda5/68747470733a2f2f7472617669732d63692e6f72672f537061636556696d2f537061636556696d2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/SpaceVim/SpaceVim.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/wsdjeg/spacevim/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c24f62577665d00ff1dd8b3569f1456357709d26/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f65683374356f706837306162703636352f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/eh3t5oph70abp665/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/SpaceVim/SpaceVim/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4063b9d4232019157952efa7f765410e73b29330/68747470733a2f2f636f6465636f762e696f2f67682f537061636556696d2f537061636556696d2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/SpaceVim/SpaceVim/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d59bb9fd0e908dd1103eaf74f050ef8d7e8a0cec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d312e342e302d2d6465762d3837303046462e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d59bb9fd0e908dd1103eaf74f050ef8d7e8a0cec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d312e342e302d2d6465762d3837303046462e737667" alt="Version" data-canonical-src="https://img.shields.io/badge/version-1.4.0--dev-8700FF.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/dcb3a3de32cb31ae6a7edf80d88747f989878809/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c76332d626c75652e737667" alt="GPLv3 License" data-canonical-src="https://img.shields.io/badge/license-GPLv3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="doc/SpaceVim.txt"&gt;&lt;img src="https://camo.githubusercontent.com/6819db8a4c4bc5ff7f7e5bae60e3d145dc9d8b3e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f632d25334168253230537061636556696d2d6f72616e67652e737667" alt="Doc" data-canonical-src="https://img.shields.io/badge/doc-%3Ah%20SpaceVim-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about-spacevim" class="anchor" aria-hidden="true" href="#about-spacevim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About SpaceVim&lt;/h2&gt;
&lt;p&gt;SpaceVim is a community-driven modular Vim distribution. It manages collections
of plugins in layers, which help to collect related packages together to provide IDE-like features.
SpaceVim is not just a vimrc but an ultimate Vim configuration, It contains many built-in features.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/68079142-904e4280-fe1f-11e9-993e-b834ea3d39ea.png"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/68079142-904e4280-fe1f-11e9-993e-b834ea3d39ea.png" alt="welcome-page" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The last release is v1.3.0, check out &lt;a href="https://github.com/SpaceVim/SpaceVim/wiki/Following-HEAD"&gt;following-HEAD&lt;/a&gt; page for what happened since last release.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-instructions" class="anchor" aria-hidden="true" href="#instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instructions&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;See the followings below for more information:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://spacevim.org/quick-start-guide/" rel="nofollow"&gt;Quick Start Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spacevim.org/documentation/" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spacevim.org/layers/" rel="nofollow"&gt;Available Layers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have any questions about SpaceVim, please follow the &lt;a href="https://github.com/SpaceVim/SpaceVim/wiki/Getting-help"&gt;Getting Help Guide&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#new-features"&gt;New Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#project-layout"&gt;Project layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#support-spacevim"&gt;Support SpaceVim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits--thanks"&gt;Credits &amp;amp; Thanks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a id="user-content-new-features" class="anchor" aria-hidden="true" href="#new-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New Features&lt;/h3&gt;
&lt;p&gt;This is a list of latest features implemented in SpaceVim:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use toml as default configuration&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is an example for using toml as SpaceVim config:&lt;/p&gt;
&lt;div class="highlight highlight-source-toml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This is basic configuration example for SpaceVim.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; All SpaceVim options below [options] snippet.&lt;/span&gt;
[&lt;span class="pl-en"&gt;options&lt;/span&gt;]
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Set SpaceVim theme. By default colorscheme layer is not loaded.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you want to use more colorschemes, please load the colorscheme&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; layer.&lt;/span&gt;
    &lt;span class="pl-smi"&gt;colorscheme&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gruvbox&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;colorscheme_bg&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dark&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Disable guicolors in basic mode, many terminal do not support 24bit&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; true colors&lt;/span&gt;
    &lt;span class="pl-smi"&gt;enable_guicolors&lt;/span&gt; = &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Disable statusline separator, if you want to use other value, please&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install nerd fonts&lt;/span&gt;
    &lt;span class="pl-smi"&gt;statusline_separator&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nil&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;statusline_inactive_separator&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;buffer_index_type&lt;/span&gt; = &lt;span class="pl-c1"&gt;4&lt;/span&gt;
    &lt;span class="pl-smi"&gt;windows_index_type&lt;/span&gt; = &lt;span class="pl-c1"&gt;3&lt;/span&gt;
    &lt;span class="pl-smi"&gt;enable_tabline_ft_icon&lt;/span&gt; = &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    &lt;span class="pl-smi"&gt;enable_statusline_mode&lt;/span&gt; = &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    &lt;span class="pl-smi"&gt;statusline_unicode_symbols&lt;/span&gt; = &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Enable Vim compatible mode, avoid changing origin Vim key bindings&lt;/span&gt;
    &lt;span class="pl-smi"&gt;vimcompatible&lt;/span&gt; = &lt;span class="pl-c1"&gt;true&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Enable autocomplete layer&lt;/span&gt;
[[&lt;span class="pl-en"&gt;layers&lt;/span&gt;]]
    &lt;span class="pl-smi"&gt;name&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;autocomplete&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;auto-completion-return-key-behavior&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;complete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;auto-completion-tab-key-behavior&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cycle&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

[[&lt;span class="pl-en"&gt;layers&lt;/span&gt;]]
    &lt;span class="pl-smi"&gt;name&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;shell&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;default_position&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;top&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-smi"&gt;default_height&lt;/span&gt; = &lt;span class="pl-c1"&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Iedit mode&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SpaceVim uses a powerful iedit mode to quick edit multiple occurrences of a symbol or selection. Two new modes:&lt;code&gt;iedit-Normal&lt;/code&gt;/&lt;code&gt;iedit-Insert&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The default color for iedit is &lt;code&gt;red&lt;/code&gt;/&lt;code&gt;green&lt;/code&gt; which is based on the current colorscheme.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/44941560-be2a9800-add2-11e8-8fa5-e6118ff9ddcb.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/44941560-be2a9800-add2-11e8-8fa5-e6118ff9ddcb.gif" alt="iedit mode" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Highlight cursor symbol&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SpaceVim supports highlighting of the current symbol on demand and adds
a transient state to easily navigate and rename this symbol.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/36210381-e6dffde6-1163-11e8-9b35-0bf262e6f22b.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/36210381-e6dffde6-1163-11e8-9b35-0bf262e6f22b.gif" alt="highlight cursor symbol" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spacevim.org/grep-on-the-fly-in-spacevim/" rel="nofollow"&gt;&lt;strong&gt;Fly Grep in Vim&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With this feature, Vim will display the searching result as you type. Of course, it is running
asynchronously. Before using this feature, you need to install a searching tool. FlyGrep works
through search tools: &lt;code&gt;ag&lt;/code&gt;, &lt;code&gt;rg&lt;/code&gt;, &lt;code&gt;ack&lt;/code&gt;, &lt;code&gt;pt&lt;/code&gt; and &lt;code&gt;grep&lt;/code&gt;, Choose one you like.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/35278709-7856ed62-0010-11e8-8b1e-e6cc6374b0dc.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/35278709-7856ed62-0010-11e8-8b1e-e6cc6374b0dc.gif" alt="searching project" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spacevim.org/mnemonic-key-bindings-navigation/" rel="nofollow"&gt;&lt;strong&gt;Mnemonic key bindings navigation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You don't need to remember any key bindings, as the mapping guide will show up after the &lt;kbd&gt;SPC&lt;/kbd&gt; is pressed.
The mapping guide is also available for &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;z&lt;/code&gt;, and &lt;code&gt;s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/35568184-9a318082-058d-11e8-9d88-e0eafd1d498d.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/35568184-9a318082-058d-11e8-9d88-e0eafd1d498d.gif" alt="mapping guide" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spacevim.org/help-description-for-key-bindings/" rel="nofollow"&gt;&lt;strong&gt;Help description for key bindings&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;kbd&gt;SPC h d k&lt;/kbd&gt; to get the help description of a key binding, and &lt;code&gt;gd&lt;/code&gt; to find definition of key bindings.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/35568829-e3c8e74c-058f-11e8-8fa8-c0e046d8add3.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/35568829-e3c8e74c-058f-11e8-8fa8-c0e046d8add3.gif" alt="describe key bindings" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spacevim.org/Asynchronous-plugin-manager/" rel="nofollow"&gt;&lt;strong&gt;Asynchronous plugin manager&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Create an UI for &lt;a href="https://github.com/Shougo/dein.vim/"&gt;dein.vim&lt;/a&gt; - the best asynchronous vim plugin manager&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13142418/34907332-903ae968-f842-11e7-8ac9-07fcc9940a53.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/13142418/34907332-903ae968-f842-11e7-8ac9-07fcc9940a53.gif" alt="UI for dein" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more features, please read &lt;a href="https://spacevim.org/blog/" rel="nofollow"&gt;SpaceVim's Blog&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-project-layout" class="anchor" aria-hidden="true" href="#project-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project layout&lt;/h3&gt;
&lt;pre lang="txt"&gt;&lt;code&gt;├─ .ci/                           build automation
├─ .github/                       issue/PR templates
├─ .SpaceVim.d/                   project specific configuration
├─ autoload/SpaceVim.vim          SpaceVim core file
├─ autoload/SpaceVim/api/         Public APIs
├─ autoload/SpaceVim/layers/      available layers
├─ autoload/SpaceVim/plugins/     buildin plugins
├─ autoload/SpaceVim/mapping/     mapping guide
├─ doc/                           help(cn/en)
├─ docs/                          website(cn/en)
├─ wiki/                          wiki(cn/en)
├─ bin/                           executable
└─ test/                          tests
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-support-spacevim" class="anchor" aria-hidden="true" href="#support-spacevim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support SpaceVim&lt;/h3&gt;
&lt;p&gt;The best way to support SpaceVim is to contribute to it either by reporting bugs.
Helping the community on the &lt;a href="https://gitter.im/SpaceVim/SpaceVim" rel="nofollow"&gt;Gitter Chat&lt;/a&gt; or sending pull requests.&lt;/p&gt;
&lt;p&gt;For more information please check our &lt;a href="https://spacevim.org/development/" rel="nofollow"&gt;development guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to show your support financially you can buy a drink for the maintainer by clicking following icon.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ko-fi.com/spacevim" rel="nofollow"&gt;&lt;img height="36" src="https://camo.githubusercontent.com/36f1700e51bb6878f6dbf43d34db37b38c23c91b/68747470733a2f2f617a3734333730322e766f2e6d7365636e642e6e65742f63646e2f6b6f6669342e706e673f763d66" border="0" alt="Buy Me a Coffee at ko-fi.com" data-canonical-src="https://az743702.vo.msecnd.net/cdn/kofi4.png?v=f" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;wechat&lt;/th&gt;
&lt;th&gt;alipay&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="#support-spacevim"&gt;&lt;img src="https://camo.githubusercontent.com/d949f041945a20d96f39d0c984b26bb56f3b96f0/68747470733a2f2f737061636576696d2e6f72672f696d672f77656978696e2e706e67" height="150" width="150" data-canonical-src="https://spacevim.org/img/weixin.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#support-spacevim"&gt;&lt;img src="https://camo.githubusercontent.com/e4f235211e00a484f0440cddc57d8197d3330ab8/68747470733a2f2f737061636576696d2e6f72672f696d672f7a6869667562616f2e706e67" height="150" width="150" data-canonical-src="https://spacevim.org/img/zhifubao.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Bitcoin: 1DtuVeg81c2L9NEhDaVTAAbrCR3pN5xPFv&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-credits--thanks" class="anchor" aria-hidden="true" href="#credits--thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits &amp;amp; Thanks&lt;/h3&gt;
&lt;p&gt;This project exists to thank all the people who have &lt;a href="CONTRIBUTING.md"&gt;contributed&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/SpaceVim/SpaceVim/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/b4069eac40d0e90091336ef9f0603b1838c6a2e2/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f737061636576696d2f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/spacevim/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Gabirel"&gt;@Gabirel&lt;/a&gt; and his &lt;a href="https://github.com/Gabirel/Hack-SpaceVim"&gt;Hack-SpaceVim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/everettjf"&gt;@everettjf&lt;/a&gt; and his &lt;a href="https://everettjf.gitbooks.io/spacevimtutorial/content/" rel="nofollow"&gt;SpaceVimTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/vimdoc"&gt;vimdoc&lt;/a&gt; generate doc file for SpaceVim&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rafi"&gt;Rafael Bodill&lt;/a&gt; and his vim-config&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bling"&gt;Bailey Ling&lt;/a&gt; and his dotvim&lt;/li&gt;
&lt;li&gt;Authors of all the plugins used in SpaceVim.&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>SpaceVim</author><guid isPermaLink="false">https://github.com/SpaceVim/SpaceVim</guid><pubDate>Sat, 01 Feb 2020 00:14:00 GMT</pubDate></item><item><title>da2k/curso-reactjs-ninja #15 in Vim script, Today</title><link>https://github.com/da2k/curso-reactjs-ninja</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-curso-reactjs-ninja" class="anchor" aria-hidden="true" href="#curso-reactjs-ninja"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Curso ReactJS Ninja&lt;/h1&gt;
&lt;p&gt;Informações sobre o curso: &lt;a href="http://blog.da2k.com.br/curso-reactjs-ninja/" rel="nofollow"&gt;http://blog.da2k.com.br/curso-reactjs-ninja/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ementas" class="anchor" aria-hidden="true" href="#ementas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ementas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="ementa-modulo-01.md"&gt;Módulo #01&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ementa-modulo-02.md"&gt;Módulo #02&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ementa-modulo-03.md"&gt;Módulo #03&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ementa-modulo-04.md"&gt;Módulo #04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Módulo de atualizações (em breve)&lt;/li&gt;
&lt;li&gt;Módulo #05 (em breve)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-problema-com-as-versões-das-dependências" class="anchor" aria-hidden="true" href="#problema-com-as-versões-das-dependências"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Problema com as versões das dependências?&lt;/h2&gt;
&lt;p&gt;Se você estiver tendo qualquer problema para acompanhar o curso por causa das
versões das dependências, &lt;a href="versions-of-dependencies.md"&gt;nesse arquivo&lt;/a&gt; tem listadas todas as versões corretas
que você precisa instalar a cada aula para acompanhar o curso todo sem maiores dificuldades :D&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quer-se-tornar-um-ninja-em-react" class="anchor" aria-hidden="true" href="#quer-se-tornar-um-ninja-em-react"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quer se tornar um ninja em React?&lt;/h2&gt;
&lt;p&gt;Para adquirir o curso, acesse &lt;a href="https://www.udemy.com/curso-reactjs-ninja/?couponCode=PREVENDA" rel="nofollow"&gt;esse link&lt;/a&gt; (já está aplicado o cupom da pré-venda atual)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>da2k</author><guid isPermaLink="false">https://github.com/da2k/curso-reactjs-ninja</guid><pubDate>Sat, 01 Feb 2020 00:15:00 GMT</pubDate></item><item><title>davidhalter/jedi-vim #16 in Vim script, Today</title><link>https://github.com/davidhalter/jedi-vim</link><description>&lt;p&gt;&lt;i&gt;Using the jedi autocompletion library for VIM.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/davidhalter/jedi-vim/blob/master/doc/logotype-a.svg"&gt;&lt;img src="https://github.com/davidhalter/jedi-vim/raw/master/doc/logotype-a.svg?sanitize=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a name="user-content-jedi-vim-awesome-python-autocompletion-with-vim"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-jedi-vim---awesome-python-autocompletion-with-vim" class="anchor" aria-hidden="true" href="#jedi-vim---awesome-python-autocompletion-with-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;jedi-vim - awesome Python autocompletion with VIM&lt;/h2&gt;
&lt;a href="https://travis-ci.org/davidhalter/jedi-vim" rel="nofollow"&gt;&lt;img alt="Travis-CI build status" src="https://camo.githubusercontent.com/3a6c6d6f819f2097c9db969a3431d216cff39daf/68747470733a2f2f7472617669732d63692e6f72672f646176696468616c7465722f6a6564692d76696d2e7376673f6272616e63683d6d6173746572" data-canonical-src="https://travis-ci.org/davidhalter/jedi-vim.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;p&gt;jedi-vim is a VIM binding to the autocompletion library
&lt;a href="http://github.com/davidhalter/jedi"&gt;Jedi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some pictures:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/davidhalter/jedi/raw/master/docs/_screenshots/screenshot_complete.png"&gt;&lt;img alt="https://github.com/davidhalter/jedi/raw/master/docs/_screenshots/screenshot_complete.png" src="https://github.com/davidhalter/jedi/raw/master/docs/_screenshots/screenshot_complete.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Completion for almost anything (Ctrl+Space).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/davidhalter/jedi/raw/master/docs/_screenshots/screenshot_function.png"&gt;&lt;img alt="https://github.com/davidhalter/jedi/raw/master/docs/_screenshots/screenshot_function.png" src="https://github.com/davidhalter/jedi/raw/master/docs/_screenshots/screenshot_function.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Display of function/class bodies, docstrings.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/davidhalter/jedi/raw/master/docs/_screenshots/screenshot_pydoc.png"&gt;&lt;img alt="https://github.com/davidhalter/jedi/raw/master/docs/_screenshots/screenshot_pydoc.png" src="https://github.com/davidhalter/jedi/raw/master/docs/_screenshots/screenshot_pydoc.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Documentation (Pydoc) support (with highlighting, Shift+k).&lt;/p&gt;
&lt;p&gt;There is also support for goto and renaming.&lt;/p&gt;
&lt;p&gt;Get the latest from &lt;a href="http://github.com/davidhalter/jedi-vim"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-documentation"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;p&gt;Documentation is available in your vim: &lt;code&gt;:help jedi-vim&lt;/code&gt;. You can also look
it up &lt;a href="http://github.com/davidhalter/jedi-vim/blob/master/doc/jedi-vim.txt"&gt;on github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can read the Jedi library documentation &lt;a href="http://jedi.readthedocs.io/en/latest/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to report issues, just use the github issue tracker. In case of
questions about the software, please use &lt;a href="https://stackoverflow.com/questions/tagged/jedi-vim" rel="nofollow"&gt;stackoverflow&lt;/a&gt; and tag your question with &lt;code&gt;jedi-vim&lt;/code&gt;.&lt;/p&gt;
&lt;a name="user-content-contributing"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;We love Pull Requests! Read the instructions in &lt;code&gt;CONTRIBUTING.md&lt;/code&gt;.&lt;/p&gt;
&lt;a name="user-content-features"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;p&gt;The Jedi library understands most of Python's core features. From decorators to
generators, there is broad support.&lt;/p&gt;
&lt;p&gt;Apart from that, jedi-vim supports the following commands&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Completion &lt;code&gt;&amp;lt;C-Space&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Goto assignment &lt;code&gt;&amp;lt;leader&amp;gt;g&lt;/code&gt; (typical goto function)&lt;/li&gt;
&lt;li&gt;Goto definition &lt;code&gt;&amp;lt;leader&amp;gt;d&lt;/code&gt; (follow identifier as far as possible,
includes imports and statements)&lt;/li&gt;
&lt;li&gt;Goto (typing) stub &lt;code&gt;&amp;lt;leader&amp;gt;s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Show Documentation/Pydoc &lt;code&gt;K&lt;/code&gt; (shows a popup with assignments)&lt;/li&gt;
&lt;li&gt;Renaming &lt;code&gt;&amp;lt;leader&amp;gt;r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Usages &lt;code&gt;&amp;lt;leader&amp;gt;n&lt;/code&gt; (shows all the usages of a name)&lt;/li&gt;
&lt;li&gt;Open module, e.g. &lt;code&gt;:Pyimport os&lt;/code&gt; (opens the &lt;code&gt;os&lt;/code&gt; module)&lt;/li&gt;
&lt;/ul&gt;
&lt;a name="user-content-installation"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;a name="user-content-requirements"&gt;&lt;/a&gt;
&lt;h4&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h4&gt;
&lt;p&gt;You need a VIM version that was compiled with Python 2.7 or later
(&lt;code&gt;+python&lt;/code&gt; or &lt;code&gt;+python3&lt;/code&gt;).  You can check this from within VIM using
&lt;code&gt;:python3 import sys; print(sys.version)&lt;/code&gt; (use &lt;code&gt;:python&lt;/code&gt; for Python 2).&lt;/p&gt;
&lt;a name="user-content-manual-installation"&gt;&lt;/a&gt;
&lt;h4&gt;&lt;a id="user-content-manual-installation" class="anchor" aria-hidden="true" href="#manual-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual installation&lt;/h4&gt;
&lt;p&gt;You might want to use &lt;a href="https://github.com/tpope/vim-pathogen"&gt;pathogen&lt;/a&gt; or
&lt;a href="https://github.com/gmarik/vundle"&gt;Vundle&lt;/a&gt; to install jedi-vim.&lt;/p&gt;
&lt;p&gt;The first thing you need after that is an up-to-date version of Jedi. Install
&lt;code&gt;git submodule update --init --recursive&lt;/code&gt; in your jedi-vim repository.&lt;/p&gt;
&lt;p&gt;Example installation command using Pathogen:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone --recursive https://github.com/davidhalter/jedi-vim.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/bundle/jedi-vim&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Example installation using Vundle:&lt;/p&gt;
&lt;p&gt;Add the following line in your ~/.vimrc&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Plugin&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;davidhalter/jedi-vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For installing Jedi, &lt;code&gt;pip install jedi&lt;/code&gt; will also work, but you might run
into issues when working in virtual environments. Please use git submodules.&lt;/p&gt;
&lt;a name="user-content-installation-with-your-distribution"&gt;&lt;/a&gt;
&lt;h4&gt;&lt;a id="user-content-installation-with-your-distribution" class="anchor" aria-hidden="true" href="#installation-with-your-distribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation with your distribution&lt;/h4&gt;
&lt;p&gt;On Arch Linux, you can also install jedi-vim from official repositories as
&lt;a href="https://www.archlinux.org/packages/community/any/vim-jedi/" rel="nofollow"&gt;vim-jedi&lt;/a&gt;.
It is also available on
&lt;a href="https://packages.debian.org/vim-python-jedi" rel="nofollow"&gt;Debian (≥8)&lt;/a&gt; and
&lt;a href="http://packages.ubuntu.com/vim-python-jedi" rel="nofollow"&gt;Ubuntu (≥14.04)&lt;/a&gt; as
vim-python-jedi.
On Fedora Linux, it is available as
&lt;a href="https://apps.fedoraproject.org/packages/vim-jedi" rel="nofollow"&gt;vim-jedi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please note that this version might be quite old compared to using jedi-vim
from Git.&lt;/p&gt;
&lt;a name="user-content-caveats"&gt;&lt;/a&gt;
&lt;h4&gt;&lt;a id="user-content-caveats" class="anchor" aria-hidden="true" href="#caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats&lt;/h4&gt;
&lt;p&gt;Note that the &lt;a href="https://github.com/klen/python-mode"&gt;python-mode&lt;/a&gt; VIM plugin seems
to conflict with jedi-vim, therefore you should disable it before enabling
jedi-vim.&lt;/p&gt;
&lt;p&gt;To enjoy the full features of jedi-vim, you should have VIM &amp;gt;= 7.3, compiled with
&lt;code&gt;+conceal&lt;/code&gt; (which is not the case on some platforms, including OS X). If your VIM
does not meet these requirements, the parameter recommendation list may not appear
when you type an open bracket after a function name. Please read
&lt;a href="http://github.com/davidhalter/jedi-vim/blob/master/doc/jedi-vim.txt"&gt;the documentation&lt;/a&gt;
for details.&lt;/p&gt;
&lt;a name="user-content-settings"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-settings" class="anchor" aria-hidden="true" href="#settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Settings&lt;/h3&gt;
&lt;p&gt;Jedi is by default automatically initialized. If you don't want that I suggest
you disable the auto-initialization in your &lt;code&gt;.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#auto_initialization &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are also some VIM options (like &lt;code&gt;completeopt&lt;/code&gt; and key defaults) which
are automatically initialized, but you can skip this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#auto_vim_configuration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can make jedi-vim use tabs when going to a definition etc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#use_tabs_not_buffers &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are a person who likes to use VIM-splits, you might want to put this in your &lt;code&gt;.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#use_splits_not_buffers &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This options could be "left", "right", "top", "bottom" or "winwidth". It will decide the direction where the split open.&lt;/p&gt;
&lt;p&gt;Jedi automatically starts the completion, if you type a dot, e.g. &lt;code&gt;str.&lt;/code&gt;, if
you don't want this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#popup_on_dot &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jedi selects the first line of the completion menu: for a better typing-flow
and usually saves one keypress.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#popup_select_first &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jedi displays function call signatures in insert mode in real-time, highlighting
the current argument. The call signatures can be displayed as a pop-up in the
buffer (set to 1, the default), which has the advantage of being easier to refer
to, or in Vim's command line aligned with the function call (set to 2), which
can improve the integrity of Vim's undo history.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#show_call_signatures &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here are a few more defaults for actions, read the docs (&lt;code&gt;:help jedi-vim&lt;/code&gt;) to
get more information. If you set them to &lt;code&gt;""&lt;/code&gt;, they are not assigned.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;NOTE: subject &lt;span class="pl-c1"&gt;to&lt;/span&gt; &lt;span class="pl-c1"&gt;change&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#goto_command &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;leader&amp;gt;d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#goto_assignments_command &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;leader&amp;gt;g&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#goto_stubs_command &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;leader&amp;gt;s&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#goto_definitions_command &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#documentation_command &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;K&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#usages_command &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;leader&amp;gt;n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#completions_command &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;C-Space&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#rename_command &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;leader&amp;gt;r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, if you don't want completion, but all the other features, use:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#completions_enabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;a name="user-content-faq"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h3&gt;
&lt;a name="user-content-i-don-t-want-the-docstring-window-to-popup-during-completion"&gt;&lt;/a&gt;
&lt;h4&gt;&lt;a id="user-content-i-dont-want-the-docstring-window-to-popup-during-completion" class="anchor" aria-hidden="true" href="#i-dont-want-the-docstring-window-to-popup-during-completion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I don't want the docstring window to popup during completion&lt;/h4&gt;
&lt;p&gt;This depends on the &lt;code&gt;completeopt&lt;/code&gt; option. Jedi initializes it in its
&lt;code&gt;ftplugin&lt;/code&gt;. Add the following line to your &lt;code&gt;.vimrc&lt;/code&gt; to disable it:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;FileType&lt;/span&gt; &lt;span class="pl-c1"&gt;python&lt;/span&gt; &lt;span class="pl-c1"&gt;setlocal&lt;/span&gt; &lt;span class="pl-c1"&gt;completeopt&lt;/span&gt;&lt;span class="pl-k"&gt;-=&lt;/span&gt;preview&lt;/pre&gt;&lt;/div&gt;
&lt;a name="user-content-i-want-tab-to-do-autocompletion"&gt;&lt;/a&gt;
&lt;h4&gt;&lt;a id="user-content-i-want-tab-to-do-autocompletion" class="anchor" aria-hidden="true" href="#i-want-tab-to-do-autocompletion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I want &amp;lt;Tab&amp;gt; to do autocompletion&lt;/h4&gt;
&lt;p&gt;Don't even think about changing the Jedi command to &lt;code&gt;&amp;lt;Tab&amp;gt;&lt;/code&gt;,
use &lt;a href="https://github.com/ervandew/supertab"&gt;supertab&lt;/a&gt;!&lt;/p&gt;
&lt;a name="user-content-the-completion-is-too-slow"&gt;&lt;/a&gt;
&lt;h4&gt;&lt;a id="user-content-the-completion-is-too-slow" class="anchor" aria-hidden="true" href="#the-completion-is-too-slow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The completion is too slow!&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Completion of complex libraries (like Numpy) should only be slow the first
time you complete them. After that the results should be cached and very fast.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If it is still slow after the initial completion and you have installed the
python-mode Vim plugin, try disabling its rope mode:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;pymode_rope&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See issue &lt;a href="https://github.com/davidhalter/jedi-vim/issues/163"&gt;#163&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can also use &lt;a href="https://github.com/zchee/deoplete-jedi"&gt;deoplete-jedi&lt;/a&gt;
for completions, which uses Jedi, but does completions asynchronously
(requires Neovim).
It makes sense to use both jedi-vim and deoplete-jedi, but you should disable
jedi-vim's completions then:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;jedi&lt;/span&gt;#completions_enabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;a name="user-content-testing"&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h3&gt;
&lt;p&gt;jedi-vim is being tested with a combination of &lt;a href="https://github.com/kana/vim-vspec"&gt;vspec&lt;/a&gt; and &lt;a href="http://pytest.org/" rel="nofollow"&gt;py.test&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The tests are in the &lt;code&gt;test&lt;/code&gt; subdirectory, you can run them calling:&lt;/p&gt;
&lt;pre&gt;py.test
&lt;/pre&gt;
&lt;p&gt;The tests are automatically run with &lt;a href="https://travis-ci.org/davidhalter/jedi-vim" rel="nofollow"&gt;travis&lt;/a&gt;.&lt;/p&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>davidhalter</author><guid isPermaLink="false">https://github.com/davidhalter/jedi-vim</guid><pubDate>Sat, 01 Feb 2020 00:16:00 GMT</pubDate></item><item><title>airblade/vim-gitgutter #17 in Vim script, Today</title><link>https://github.com/airblade/vim-gitgutter</link><description>&lt;p&gt;&lt;i&gt;A Vim plugin which shows a git diff in the gutter (sign column) and stages/undoes hunks and partial hunks.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="mkd" data-path="README.mkd"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-vim-gitgutter" class="anchor" aria-hidden="true" href="#vim-gitgutter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vim-gitgutter&lt;/h2&gt;
&lt;p&gt;A Vim plugin which shows a git diff in the 'gutter' (sign column).  It shows which lines have been added, modified, or removed.  You can also preview, stage, and undo individual hunks; and stage partial hunks.  The plugin also provides a hunk text object.&lt;/p&gt;
&lt;p&gt;The signs are always up to date and the plugin never saves your buffer.&lt;/p&gt;
&lt;p&gt;Features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shows signs for added, modified, and removed lines.&lt;/li&gt;
&lt;li&gt;Runs the diffs asynchronously where possible.&lt;/li&gt;
&lt;li&gt;Ensures signs are always up to date.&lt;/li&gt;
&lt;li&gt;Never saves the buffer.&lt;/li&gt;
&lt;li&gt;Quick jumping between blocks of changed lines ("hunks").&lt;/li&gt;
&lt;li&gt;Stage/undo/preview individual hunks.&lt;/li&gt;
&lt;li&gt;Previews highlight intra-line changes.&lt;/li&gt;
&lt;li&gt;Stage partial hunks.&lt;/li&gt;
&lt;li&gt;Provides a hunk text object.&lt;/li&gt;
&lt;li&gt;Diffs against index (default) or any commit.&lt;/li&gt;
&lt;li&gt;Allows folding all unchanged text.&lt;/li&gt;
&lt;li&gt;Provides fold text showing whether folded lines have been changed.&lt;/li&gt;
&lt;li&gt;Can load all hunk locations into quickfix list or the current window's location list.&lt;/li&gt;
&lt;li&gt;Handles line endings correctly, even with repos that do CRLF conversion.&lt;/li&gt;
&lt;li&gt;Optional line highlighting.&lt;/li&gt;
&lt;li&gt;Optional line number highlighting. (Only available in Neovim 0.3.2 or higher)&lt;/li&gt;
&lt;li&gt;Fully customisable (signs, sign column, line (number) highlights, mappings, extra git-diff arguments, etc).&lt;/li&gt;
&lt;li&gt;Can be toggled on/off, globally or per buffer.&lt;/li&gt;
&lt;li&gt;Preserves signs from other plugins.&lt;/li&gt;
&lt;li&gt;Easy to integrate diff stats into status line; built-in integration with &lt;a href="https://github.com/bling/vim-airline/"&gt;vim-airline&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Works with fish shell (in addition to the usual shells).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Constraints:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supports git only.  If you work with other version control systems, I recommend &lt;a href="https://github.com/mhinz/vim-signify"&gt;vim-signify&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Relies on the &lt;code&gt;FocusGained&lt;/code&gt; event.  If your terminal doesn't report focus events, either use something like &lt;a href="https://github.com/wincent/terminus"&gt;Terminus&lt;/a&gt; or set &lt;code&gt;let g:gitgutter_terminal_reports_focus=0&lt;/code&gt;.  For tmux, &lt;code&gt;set -g focus-events on&lt;/code&gt; in your tmux.conf.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-screenshot" class="anchor" aria-hidden="true" href="#screenshot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshot&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./screenshot.png?raw=true"&gt;&lt;img src="./screenshot.png?raw=true" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the screenshot above you can see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lines 183-184 are new.&lt;/li&gt;
&lt;li&gt;Lines 186-187 have been modified.&lt;/li&gt;
&lt;li&gt;The preview for the modified lines highlights changed regions within the line.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;Install using your favourite package manager, or use Vim's built-in package support.&lt;/p&gt;
&lt;p&gt;Vim:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p ~/.vim/pack/airblade/start
cd ~/.vim/pack/airblade/start
git clone https://github.com/airblade/vim-gitgutter.git
vim -u NONE -c "helptags vim-gitgutter/doc" -c q
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Neovim:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p ~/.config/nvim/pack/airblade/start
cd ~/.config/nvim/pack/airblade/start
git clone https://github.com/airblade/vim-gitgutter.git
nvim -u NONE -c "helptags vim-gitgutter/doc" -c q
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;I recommend configuring vim-gitgutter with the full path to your git executable.  For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_git_executable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;C:\Program Files\Git\bin\git.exe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is to avoid a problem which occurs if you have file named &lt;code&gt;git.*&lt;/code&gt; (i.e. with any extension in &lt;code&gt;PATHEXT&lt;/code&gt;) in your current folder.  &lt;code&gt;cmd.exe&lt;/code&gt; prioritises the current folder over folders in &lt;code&gt;PATH&lt;/code&gt; and will try to execute your file instead of the &lt;code&gt;git&lt;/code&gt; binary.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h3&gt;
&lt;p&gt;When you make a change to a file tracked by git, the diff markers should appear automatically.  The delay is governed by vim's &lt;code&gt;updatetime&lt;/code&gt; option; the default value is &lt;code&gt;4000&lt;/code&gt;, i.e. 4 seconds, but I suggest reducing it to around 100ms (add &lt;code&gt;set updatetime=100&lt;/code&gt; to your vimrc).  Note &lt;code&gt;updatetime&lt;/code&gt; also controls the delay before vim writes its swap file (see &lt;code&gt;:help updatetime&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;You can jump between hunks with &lt;code&gt;[c&lt;/code&gt; and &lt;code&gt;]c&lt;/code&gt;.  You can preview, stage, and undo hunks with &lt;code&gt;&amp;lt;leader&amp;gt;hp&lt;/code&gt;, &lt;code&gt;&amp;lt;leader&amp;gt;hs&lt;/code&gt;, and &lt;code&gt;&amp;lt;leader&amp;gt;hu&lt;/code&gt; respectively.&lt;/p&gt;
&lt;p&gt;You cannot unstage a staged hunk.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-activation" class="anchor" aria-hidden="true" href="#activation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Activation&lt;/h4&gt;
&lt;p&gt;You can explicitly turn vim-gitgutter off and on (defaults to on):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;turn off with &lt;code&gt;:GitGutterDisable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;turn on with &lt;code&gt;:GitGutterEnable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;toggle with &lt;code&gt;:GitGutterToggle&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To toggle vim-gitgutter per buffer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;turn off with &lt;code&gt;:GitGutterBufferDisable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;turn on with &lt;code&gt;:GitGutterBufferEnable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;toggle with &lt;code&gt;:GitGutterBufferToggle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can turn the signs on and off (defaults to on):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;turn on with &lt;code&gt;:GitGutterSignsEnable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;turn off with &lt;code&gt;:GitGutterSignsDisable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;toggle with &lt;code&gt;:GitGutterSignsToggle&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And you can turn line highlighting on and off (defaults to off):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;turn on with &lt;code&gt;:GitGutterLineHighlightsEnable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;turn off with &lt;code&gt;:GitGutterLineHighlightsDisable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;toggle with &lt;code&gt;:GitGutterLineHighlightsToggle&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that if you have line highlighting on and signs off, you will have an empty sign column – more accurately, a sign column with invisible signs.  This is because line highlighting requires signs and Vim/NeoVim always shows the sign column when there are signs even if the signs are invisible.&lt;/p&gt;
&lt;p&gt;With Neovim 0.3.2 or higher, you can turn line number highlighting on and off (defaults to off):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;turn on with &lt;code&gt;:GitGutterLineNrHighlightsEnable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;turn off with &lt;code&gt;:GitGutterLineNrHighlightsDisable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;toggle with &lt;code&gt;:GitGutterLineNrHighlightsToggle&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The same caveat applies to line number highlighting as to line highlighting just above.&lt;/p&gt;
&lt;p&gt;If you switch off both line highlighting and signs, you won't see the sign column.&lt;/p&gt;
&lt;p&gt;To keep your Vim snappy, vim-gitgutter will suppress the signs when a file has more than 500 changes.  As soon as the number of changes falls below the limit vim-gitgutter will show the signs again.  You can configure the threshold with:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_max_signs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;500&lt;/span&gt;&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; default value&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-hunks" class="anchor" aria-hidden="true" href="#hunks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hunks&lt;/h4&gt;
&lt;p&gt;You can jump between hunks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jump to next hunk (change): &lt;code&gt;]c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;jump to previous hunk (change): &lt;code&gt;[c&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both of those take a preceding count.&lt;/p&gt;
&lt;p&gt;To set your own mappings for these, for example &lt;code&gt;]h&lt;/code&gt; and &lt;code&gt;[h&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; ]&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(GitGutterNextHunk)
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; [&lt;span class="pl-c1"&gt;h&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(GitGutterPrevHunk)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can load all your hunks into the quickfix list with &lt;code&gt;:GitGutterQuickFix&lt;/code&gt;.  Note this ignores any unsaved changes in your buffers. If the option &lt;code&gt;g:gitgutter_use_location_list&lt;/code&gt; is set, this command will load hunks into the current window's location list instead.&lt;/p&gt;
&lt;p&gt;You can stage or undo an individual hunk when your cursor is in it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;stage the hunk with &lt;code&gt;&amp;lt;Leader&amp;gt;hs&lt;/code&gt; or&lt;/li&gt;
&lt;li&gt;undo it with &lt;code&gt;&amp;lt;Leader&amp;gt;hu&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To stage part of an additions-only hunk by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;either visually selecting the part you want and staging with your mapping, e.g. &lt;code&gt;&amp;lt;Leader&amp;gt;hs&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;or using a range with the &lt;code&gt;GitGutterStageHunk&lt;/code&gt; command, e.g. &lt;code&gt;:42,45GitGutterStageHunk&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To stage part of any hunk:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;preview the hunk, e.g. &lt;code&gt;&amp;lt;Leader&amp;gt;hp&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;move to the preview window, e.g. &lt;code&gt;:wincmd P&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;delete the lines you do not want to stage;&lt;/li&gt;
&lt;li&gt;stage the remaining lines: either write (&lt;code&gt;:w&lt;/code&gt;) the window or stage via &lt;code&gt;&amp;lt;Leader&amp;gt;hs&lt;/code&gt; or &lt;code&gt;:GitGutterStageHunk&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note the above workflow is not possible if you have opted in to preview hunks with Vim's popup windows.&lt;/p&gt;
&lt;p&gt;See the FAQ if you want to unstage staged changes.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;.&lt;/code&gt; command will work with both these if you install &lt;a href="https://github.com/tpope/vim-repeat"&gt;repeat.vim&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To set your own mappings for these, for example if you prefer &lt;code&gt;g&lt;/code&gt;-based maps:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; ghs &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(GitGutterStageHunk)
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; ghu &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(GitGutterUndoHunk)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And you can preview a hunk's changes with &lt;code&gt;&amp;lt;Leader&amp;gt;hp&lt;/code&gt;.  The location of the preview window is configured with &lt;code&gt;g:gitgutter_preview_win_location&lt;/code&gt; (default &lt;code&gt;'bo'&lt;/code&gt;).  You can of course change this mapping, e.g:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; ghp &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(GitGutterPreviewHunk)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A hunk text object is provided which works in visual and operator-pending modes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ic&lt;/code&gt; operates on all lines in the current hunk.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ac&lt;/code&gt; operates on all lines in the current hunk and any trailing empty lines.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To re-map these, for example to &lt;code&gt;ih&lt;/code&gt; and &lt;code&gt;ah&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;omap&lt;/span&gt; ih &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(GitGutterTextObjectInnerPending)
&lt;span class="pl-c1"&gt;omap&lt;/span&gt; ah &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(GitGutterTextObjectOuterPending)
&lt;span class="pl-c1"&gt;xmap&lt;/span&gt; ih &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(GitGutterTextObjectInnerVisual)
&lt;span class="pl-c1"&gt;xmap&lt;/span&gt; ah &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(GitGutterTextObjectOuterVisual)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don't want vim-gitgutter to set up any mappings at all, use this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_map_keys&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, you can force vim-gitgutter to update its signs across all visible buffers with &lt;code&gt;:GitGutterAll&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See the customisation section below for how to change the defaults.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-folding" class="anchor" aria-hidden="true" href="#folding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Folding&lt;/h3&gt;
&lt;p&gt;Use the &lt;code&gt;GitGutterFold&lt;/code&gt; command to fold all unchanged lines, leaving just the hunks visible.  Use &lt;code&gt;zr&lt;/code&gt; to unfold 3 lines of context above and below a hunk.&lt;/p&gt;
&lt;p&gt;Execute &lt;code&gt;GitGutterFold&lt;/code&gt; a second time to restore the previous view.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;gitgutter#fold#foldtext()&lt;/code&gt; to augment the default &lt;code&gt;foldtext()&lt;/code&gt; with an indicator of whether the folded lines have been changed.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;foldtext&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-en"&gt;gitgutter#fold#foldtext&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a closed fold with changed lines:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Default foldtext():         +-- 45 lines: abcdef
gitgutter#fold#foldtext():  +-- 45 lines (*): abcdef
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can use &lt;code&gt;gitgutter#fold#is_changed()&lt;/code&gt; in your own &lt;code&gt;foldtext&lt;/code&gt; expression to find out whether the folded lines have been changed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-status-line" class="anchor" aria-hidden="true" href="#status-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status line&lt;/h3&gt;
&lt;p&gt;Call the &lt;code&gt;GitGutterGetHunkSummary()&lt;/code&gt; function from your status line to get a list of counts of added, modified, and removed lines in the current buffer.  For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Your vimrc&lt;/span&gt;
&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;GitStatus&lt;/span&gt;()
  &lt;span class="pl-k"&gt;let&lt;/span&gt; [&lt;span class="pl-c1"&gt;a&lt;/span&gt;,&lt;span class="pl-c1"&gt;m&lt;/span&gt;,&lt;span class="pl-c1"&gt;r&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;GitGutterGetHunkSummary&lt;/span&gt;()
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;printf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;+%d ~%d -%d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;a&lt;/span&gt;, &lt;span class="pl-c1"&gt;m&lt;/span&gt;, &lt;span class="pl-c1"&gt;r&lt;/span&gt;)
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;statusline&lt;/span&gt;&lt;span class="pl-k"&gt;+=&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;{&lt;span class="pl-en"&gt;GitStatus&lt;/span&gt;()}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-customisation" class="anchor" aria-hidden="true" href="#customisation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customisation&lt;/h3&gt;
&lt;p&gt;You can customise:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The sign column's colours&lt;/li&gt;
&lt;li&gt;Whether or not the sign column is shown when there aren't any signs (defaults to no)&lt;/li&gt;
&lt;li&gt;How to handle non-gitgutter signs&lt;/li&gt;
&lt;li&gt;The signs' colours and symbols&lt;/li&gt;
&lt;li&gt;Line highlights&lt;/li&gt;
&lt;li&gt;Whether the diff is relative to the index (default) or working tree.&lt;/li&gt;
&lt;li&gt;The base of the diff&lt;/li&gt;
&lt;li&gt;Extra arguments for &lt;code&gt;git&lt;/code&gt; when running &lt;code&gt;git diff&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Extra arguments for &lt;code&gt;git diff&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Key mappings&lt;/li&gt;
&lt;li&gt;Whether vim-gitgutter is on initially (defaults to on)&lt;/li&gt;
&lt;li&gt;Whether signs are shown (defaults to yes)&lt;/li&gt;
&lt;li&gt;Whether line highlighting is on initially (defaults to off)&lt;/li&gt;
&lt;li&gt;Whether line number highlighting is on initially (defaults to off)&lt;/li&gt;
&lt;li&gt;Whether vim-gitgutter runs asynchronously (defaults to yes)&lt;/li&gt;
&lt;li&gt;Whether to clobber or preserve non-gitgutter signs&lt;/li&gt;
&lt;li&gt;The priority of gitgutter's signs.&lt;/li&gt;
&lt;li&gt;Whether to use a floating/popup window for hunk previews&lt;/li&gt;
&lt;li&gt;Whether to populate the quickfix list or a location list with all hunks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please note that vim-gitgutter won't override any colours or highlights you've set in your colorscheme.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sign-column" class="anchor" aria-hidden="true" href="#sign-column"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sign column&lt;/h4&gt;
&lt;p&gt;By default vim-gitgutter will make the sign column look like the line number column.&lt;/p&gt;
&lt;p&gt;To customise your sign column's background color, first tell vim-gitgutter to leave it alone:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_override_sign_column_highlight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then either update your colorscheme's &lt;code&gt;SignColumn&lt;/code&gt; highlight group or set it in your vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;SignColumn&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;whatever&lt;span class="pl-c"&gt;    &lt;span class="pl-c"&gt;"&lt;/span&gt; terminal Vim&lt;/span&gt;
&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;SignColumn&lt;/span&gt; guibg&lt;span class="pl-k"&gt;=&lt;/span&gt;whatever&lt;span class="pl-c"&gt;      &lt;span class="pl-c"&gt;"&lt;/span&gt; gVim/MacVim&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default the sign column will appear when there are signs to show and disappear when there aren't.  To always have the sign column, add to your vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Vim 7.4.2201&lt;/span&gt;
&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;signcolumn&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;yes&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GitGutter can preserve or ignore non-gitgutter signs.  For Vim v8.1.0614 and later you can set gitgutter's signs' priorities with &lt;code&gt;g:gitgutter_sign_priority&lt;/code&gt;, so gitgutter defaults to clobbering other signs.  For Neovim v0.4.0 and later you can set an expanding sign column so gitgutter again defaults to clobbering other signs.  Otherwise, gitgutter defaults to preserving other signs.  You can configure this with:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_sign_allow_clobber&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-signs-colours-and-symbols" class="anchor" aria-hidden="true" href="#signs-colours-and-symbols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Signs' colours and symbols&lt;/h4&gt;
&lt;p&gt;By default vim-gitgutter uses your colourscheme's &lt;code&gt;Diff*&lt;/code&gt; highlight groups' foreground colours for the signs' foreground colours.  For example, your &lt;code&gt;DiffAdd&lt;/code&gt; foreground colour will be used for the &lt;code&gt;+&lt;/code&gt; sign's foreground colour.&lt;/p&gt;
&lt;p&gt;The signs' background colours will all be set to the sign column's background colour.&lt;/p&gt;
&lt;p&gt;If you don't like the default colours, you can either fix your colourscheme's &lt;code&gt;Diff*&lt;/code&gt; highlights or configure your own &lt;code&gt;GitGutter*&lt;/code&gt; highlight groups.  These groups are:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;GitGutterAdd&lt;span class="pl-c"&gt;          &lt;span class="pl-c"&gt;"&lt;/span&gt; an added line             (default: links to DiffAdd)&lt;/span&gt;
GitGutterChange&lt;span class="pl-c"&gt;       &lt;span class="pl-c"&gt;"&lt;/span&gt; a changed line            (default: links to DiffChange)&lt;/span&gt;
GitGutterDelete&lt;span class="pl-c"&gt;       &lt;span class="pl-c"&gt;"&lt;/span&gt; at least one removed line (default: links to DiffDelete)&lt;/span&gt;
GitGutterChangeDelete&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;"&lt;/span&gt; a changed line followed by at least one removed line (default: links to GitGutterChange)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can either set these with &lt;code&gt;highlight GitGutterAdd {key}={arg}...&lt;/code&gt; or link them to existing highlight groups with, say, &lt;code&gt;highlight link GitGutterAdd MyDiffAdd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To get vim-gitgutter's original colours (based on git-diff's colours in my terminal):&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; GitGutterAdd    guifg&lt;span class="pl-k"&gt;=&lt;/span&gt;#&lt;span class="pl-c1"&gt;009900&lt;/span&gt; guibg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;X&amp;gt;&lt;/span&gt; ctermfg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;Y&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; GitGutterChange guifg&lt;span class="pl-k"&gt;=&lt;/span&gt;#bbbb00 guibg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;X&amp;gt;&lt;/span&gt; ctermfg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;Y&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; GitGutterDelete guifg&lt;span class="pl-k"&gt;=&lt;/span&gt;#ff2222 guibg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;X&amp;gt;&lt;/span&gt; ctermfg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;Y&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;– where you would replace &lt;code&gt;&amp;lt;X&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Y&amp;gt;&lt;/code&gt; with the background colour of your &lt;code&gt;SignColumn&lt;/code&gt; in the gui and the terminal respectively.  For example, with the solarized colorscheme and a dark background, &lt;code&gt;guibg=#073642&lt;/code&gt; and &lt;code&gt;ctermbg=0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To customise the symbols, add the following to your &lt;code&gt;~/.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_sign_added&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_sign_modified&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;yy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_sign_removed&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;zz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_sign_removed_first_line&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;^^&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_sign_modified_removed&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ww&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-line-highlights" class="anchor" aria-hidden="true" href="#line-highlights"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Line highlights&lt;/h4&gt;
&lt;p&gt;Similarly to the signs' colours, set up the following highlight groups in your colorscheme or &lt;code&gt;~/.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;GitGutterAddLine&lt;span class="pl-c"&gt;          &lt;span class="pl-c"&gt;"&lt;/span&gt; default: links to DiffAdd&lt;/span&gt;
GitGutterChangeLine&lt;span class="pl-c"&gt;       &lt;span class="pl-c"&gt;"&lt;/span&gt; default: links to DiffChange&lt;/span&gt;
GitGutterDeleteLine&lt;span class="pl-c"&gt;       &lt;span class="pl-c"&gt;"&lt;/span&gt; default: links to DiffDelete&lt;/span&gt;
GitGutterChangeDeleteLine&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;"&lt;/span&gt; default: links to GitGutterChangeLineDefault, i.e. DiffChange&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, in some colorschemes the &lt;code&gt;DiffText&lt;/code&gt; highlight group is easier to read than &lt;code&gt;DiffChange&lt;/code&gt;.  You could use it like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt; &lt;span class="pl-v"&gt;GitGutterChangeLine&lt;/span&gt; &lt;span class="pl-v"&gt;DiffText&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-line-number-highlights" class="anchor" aria-hidden="true" href="#line-number-highlights"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Line number highlights&lt;/h4&gt;
&lt;p&gt;NOTE: This feature requires Neovim 0.3.2 or higher.&lt;/p&gt;
&lt;p&gt;Similarly to the signs' colours, set up the following highlight groups in your colorscheme or &lt;code&gt;~/.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;GitGutterAddLineNr&lt;span class="pl-c"&gt;          &lt;span class="pl-c"&gt;"&lt;/span&gt; default: links to CursorLineNr&lt;/span&gt;
GitGutterChangeLineNr&lt;span class="pl-c"&gt;       &lt;span class="pl-c"&gt;"&lt;/span&gt; default: links to CursorLineNr&lt;/span&gt;
GitGutterDeleteLineNr&lt;span class="pl-c"&gt;       &lt;span class="pl-c"&gt;"&lt;/span&gt; default: links to CursorLineNr&lt;/span&gt;
GitGutterChangeDeleteLineNr&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;"&lt;/span&gt; default: links to CursorLineNr&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Maybe you think &lt;code&gt;CursorLineNr&lt;/code&gt; is a bit annoying.  For example, you could use &lt;code&gt;Underlined&lt;/code&gt; for this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt; &lt;span class="pl-v"&gt;GitGutterChangeLineNr&lt;/span&gt; &lt;span class="pl-v"&gt;Underlined&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-whether-the-diff-is-relative-to-the-index-or-working-tree" class="anchor" aria-hidden="true" href="#whether-the-diff-is-relative-to-the-index-or-working-tree"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Whether the diff is relative to the index or working tree&lt;/h4&gt;
&lt;p&gt;By default diffs are relative to the index.  How you can make them relative to the working tree:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_diff_relative_to&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;working_tree&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-the-base-of-the-diff" class="anchor" aria-hidden="true" href="#the-base-of-the-diff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The base of the diff&lt;/h4&gt;
&lt;p&gt;By default buffers are diffed against the index.  However you can diff against any commit by setting:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_diff_base&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;commit SHA&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This setting is ignored when the diffs are relative to the working tree.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-extra-arguments-for-git-when-running-git-diff" class="anchor" aria-hidden="true" href="#extra-arguments-for-git-when-running-git-diff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extra arguments for &lt;code&gt;git&lt;/code&gt; when running &lt;code&gt;git diff&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;If you want to pass extra arguments to &lt;code&gt;git&lt;/code&gt; when running &lt;code&gt;git diff&lt;/code&gt;, do so like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_git_args&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--git-dir-""&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-extra-arguments-for-git-diff" class="anchor" aria-hidden="true" href="#extra-arguments-for-git-diff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extra arguments for &lt;code&gt;git diff&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;If you want to pass extra arguments to &lt;code&gt;git diff&lt;/code&gt;, for example to ignore whitespace, do so like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_diff_args&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-w&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-key-mappings" class="anchor" aria-hidden="true" href="#key-mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key mappings&lt;/h4&gt;
&lt;p&gt;To disable all key mappings:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_map_keys&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See above for configuring maps for hunk-jumping and staging/undoing.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-use-a-custom-grep-command" class="anchor" aria-hidden="true" href="#use-a-custom-grep-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use a custom &lt;code&gt;grep&lt;/code&gt; command&lt;/h4&gt;
&lt;p&gt;If you use an alternative to grep, you can tell vim-gitgutter to use it here.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt; Default:&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_grep&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;grep&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-to-turn-off-vim-gitgutter-by-default" class="anchor" aria-hidden="true" href="#to-turn-off-vim-gitgutter-by-default"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To turn off vim-gitgutter by default&lt;/h4&gt;
&lt;p&gt;Add &lt;code&gt;let g:gitgutter_enabled = 0&lt;/code&gt; to your &lt;code&gt;~/.vimrc&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-to-turn-off-signs-by-default" class="anchor" aria-hidden="true" href="#to-turn-off-signs-by-default"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To turn off signs by default&lt;/h4&gt;
&lt;p&gt;Add &lt;code&gt;let g:gitgutter_signs = 0&lt;/code&gt; to your &lt;code&gt;~/.vimrc&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-to-turn-on-line-highlighting-by-default" class="anchor" aria-hidden="true" href="#to-turn-on-line-highlighting-by-default"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To turn on line highlighting by default&lt;/h4&gt;
&lt;p&gt;Add &lt;code&gt;let g:gitgutter_highlight_lines = 1&lt;/code&gt; to your &lt;code&gt;~/.vimrc&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-to-turn-on-line-number-highlighting-by-default" class="anchor" aria-hidden="true" href="#to-turn-on-line-number-highlighting-by-default"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To turn on line number highlighting by default&lt;/h4&gt;
&lt;p&gt;Add &lt;code&gt;let g:gitgutter_highlight_linenrs = 1&lt;/code&gt; to your &lt;code&gt;~/.vimrc&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-to-turn-off-asynchronous-updates" class="anchor" aria-hidden="true" href="#to-turn-off-asynchronous-updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To turn off asynchronous updates&lt;/h4&gt;
&lt;p&gt;By default diffs are run asynchronously.  To run diffs synchronously instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;gitgutter_async&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-to-use-floatingpopup-windows-for-hunk-previews" class="anchor" aria-hidden="true" href="#to-use-floatingpopup-windows-for-hunk-previews"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To use floating/popup windows for hunk previews&lt;/h4&gt;
&lt;p&gt;Add &lt;code&gt;let g:gitgutter_preview_win_floating = 1&lt;/code&gt; to your &lt;code&gt;~/.vimrc&lt;/code&gt;.  Note that on Vim this prevents you staging (partial) hunks via the preview window.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-to-load-all-hunks-into-the-current-windows-location-list-instead-of-the-quickfix-list" class="anchor" aria-hidden="true" href="#to-load-all-hunks-into-the-current-windows-location-list-instead-of-the-quickfix-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To load all hunks into the current window's location list instead of the quickfix list&lt;/h4&gt;
&lt;p&gt;Add &lt;code&gt;let g:gitgutter_use_location_list = 1&lt;/code&gt; to your &lt;code&gt;~/.vimrc&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-operate-on-every-line-in-a-hunk" class="anchor" aria-hidden="true" href="#operate-on-every-line-in-a-hunk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Operate on every line in a hunk&lt;/h4&gt;
&lt;p&gt;You can map an operator to do whatever you want to every line in a hunk.&lt;/p&gt;
&lt;p&gt;Let's say, for example, you want to remove trailing whitespace.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;CleanUp&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;0&lt;/span&gt;&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; opfunc&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; [&lt;span class="pl-c1"&gt;first&lt;/span&gt;, &lt;span class="pl-c1"&gt;last&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;']&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
  &lt;span class="pl-k"&gt;else&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; [&lt;span class="pl-c1"&gt;first&lt;/span&gt;, &lt;span class="pl-c1"&gt;last&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'&amp;lt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
  &lt;span class="pl-k"&gt;endif&lt;/span&gt;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; lnum &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-en"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;first&lt;/span&gt;, &lt;span class="pl-c1"&gt;last&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;line&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;getline&lt;/span&gt;(lnum)

&lt;span class="pl-c"&gt;    &lt;span class="pl-c"&gt;"&lt;/span&gt; clean up the text, e.g.:&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;line&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;substitute&lt;/span&gt;(&lt;span class="pl-c1"&gt;line&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\s\+$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

    &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;setline&lt;/span&gt;(lnum, &lt;span class="pl-c1"&gt;line&lt;/span&gt;)
  &lt;span class="pl-k"&gt;endfor&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Leader&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;x&lt;/span&gt; :&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;opfunc&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;CleanUp&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;g&lt;/span&gt;&lt;span class="pl-smi"&gt;@&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then place your cursor in a hunk and type &lt;code&gt;\xic&lt;/code&gt; (assuming a leader of &lt;code&gt;\&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Alternatively you could place your cursor in a hunk, type &lt;code&gt;vic&lt;/code&gt; to select it, then &lt;code&gt;:call CleanUp()&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-operate-on-every-changed-line-in-a-file" class="anchor" aria-hidden="true" href="#operate-on-every-changed-line-in-a-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Operate on every changed line in a file&lt;/h4&gt;
&lt;p&gt;You can write a command to do whatever you want to every changed line in a file.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;GlobalChangedLines&lt;/span&gt;(ex_cmd)
  &lt;span class="pl-k"&gt;for&lt;/span&gt; hunk &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-en"&gt;GitGutterGetHunks&lt;/span&gt;()
    &lt;span class="pl-k"&gt;for&lt;/span&gt; lnum &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-en"&gt;range&lt;/span&gt;(hunk[&lt;span class="pl-c1"&gt;2&lt;/span&gt;], hunk[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]&lt;span class="pl-k"&gt;+&lt;/span&gt;hunk[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]&lt;span class="pl-c1"&gt;-1&lt;/span&gt;)
      &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;cursor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;getcurpos&lt;/span&gt;()
      &lt;span class="pl-c1"&gt;silent&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;execute&lt;/span&gt; lnum.&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;ex_cmd&lt;/span&gt;
      &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;setpos&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;cursor&lt;/span&gt;)
    &lt;span class="pl-k"&gt;endfor&lt;/span&gt;
  &lt;span class="pl-k"&gt;endfor&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-c1"&gt;command&lt;/span&gt; -&lt;span class="pl-en"&gt;nargs&lt;/span&gt;=&lt;span class="pl-c1"&gt;1&lt;/span&gt; Glines &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;GlobalChangedLines&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;q-args&amp;gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's say, for example, you want to remove trailing whitespace from all changed lines:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:Glines &lt;span class="pl-c1"&gt;s&lt;/span&gt;&lt;span class="pl-sr"&gt;/\s\+$/&lt;/span&gt;/&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-cycle-through-hunks-in-current-buffer" class="anchor" aria-hidden="true" href="#cycle-through-hunks-in-current-buffer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cycle through hunks in current buffer&lt;/h4&gt;
&lt;p&gt;This is like &lt;code&gt;:GitGutterNextHunk&lt;/code&gt; but when it gets to the last hunk in the buffer it cycles around to the first.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;GitGutterNextHunkCycle&lt;/span&gt;()
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;line&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;silent&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; GitGutterNextHunk
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;line&lt;/span&gt;
    &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    GitGutterNextHunk
  &lt;span class="pl-k"&gt;endif&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-cycle-through-hunks-in-all-buffers" class="anchor" aria-hidden="true" href="#cycle-through-hunks-in-all-buffers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cycle through hunks in all buffers&lt;/h4&gt;
&lt;p&gt;You can use &lt;code&gt;:GitGutterQuickFix&lt;/code&gt; to load all hunks into the quickfix list or the current window's location list.&lt;/p&gt;
&lt;p&gt;Alternatively, given that&lt;code&gt;]c&lt;/code&gt; and &lt;code&gt;[c&lt;/code&gt; jump from one hunk to the next in the current buffer, you can use this code to jump to the next hunk no matter which buffer it's in.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;NextHunkAllBuffers&lt;/span&gt;()
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;line&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  GitGutterNextHunk
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;line&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt;
  &lt;span class="pl-k"&gt;endif&lt;/span&gt;

  &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;bufnr&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;bufnr&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    &lt;span class="pl-c1"&gt;bnext&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;bufnr&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;bufnr&lt;/span&gt;
      &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;endif&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;empty&lt;/span&gt;(&lt;span class="pl-en"&gt;GitGutterGetHunks&lt;/span&gt;())
      &lt;span class="pl-c1"&gt;1&lt;/span&gt;
      GitGutterNextHunk
      &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;endif&lt;/span&gt;
  &lt;span class="pl-k"&gt;endwhile&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;PrevHunkAllBuffers&lt;/span&gt;()
  &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;line&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  GitGutterPrevHunk
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;line&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;line&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt;
  &lt;span class="pl-k"&gt;endif&lt;/span&gt;

  &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;bufnr&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;bufnr&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    &lt;span class="pl-c1"&gt;bprevious&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;bufnr&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;bufnr&lt;/span&gt;
      &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;endif&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-en"&gt;empty&lt;/span&gt;(&lt;span class="pl-en"&gt;GitGutterGetHunks&lt;/span&gt;())
      &lt;span class="pl-c1"&gt;normal&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; G
      GitGutterPrevHunk
      &lt;span class="pl-k"&gt;return&lt;/span&gt;
    &lt;span class="pl-k"&gt;endif&lt;/span&gt;
  &lt;span class="pl-k"&gt;endwhile&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&lt;/span&gt; ]&lt;span class="pl-c1"&gt;c&lt;/span&gt; :&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;NextHunkAllBuffers&lt;/span&gt;()&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&lt;/span&gt; [&lt;span class="pl-c1"&gt;c&lt;/span&gt; :&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;PrevHunkAllBuffers&lt;/span&gt;()&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;How can I turn off realtime updates?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Add this to your vim configuration (in an &lt;code&gt;/after/plugin&lt;/code&gt; directory):&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; .vim/after/plugin/gitgutter.vim&lt;/span&gt;
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; gitgutter &lt;span class="pl-c1"&gt;CursorHold&lt;/span&gt;,&lt;span class="pl-c1"&gt;CursorHoldI&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;I turned off realtime updates, how can I have signs updated when I save a file?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you really want to update the signs when you save a file, add this to your vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufWritePost&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; GitGutter&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Why can't I unstage staged changes?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This plugin is for showing changes between the buffer and the index (and staging/undoing those changes).  Unstaging a staged hunk would require showing changes between the index and HEAD, which is out of scope.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why are the colours in the sign column weird?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Your colorscheme is configuring the &lt;code&gt;SignColumn&lt;/code&gt; highlight group weirdly.  Please see the section above on customising the sign column.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why are the colours in the preview window weird?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Probably because your colourscheme doesn't configure the &lt;code&gt;diff{Added,Changed,Removed}&lt;/code&gt; highlight groups.  Try this in &lt;code&gt;after/syntax/diff.vim&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt; &lt;span class="pl-v"&gt;diffAdded&lt;/span&gt; &lt;span class="pl-v"&gt;DiffAdd&lt;/span&gt;
&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt; &lt;span class="pl-v"&gt;diffChanged&lt;/span&gt; &lt;span class="pl-v"&gt;DiffChange&lt;/span&gt;
&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt; &lt;span class="pl-v"&gt;diffRemoved&lt;/span&gt; &lt;span class="pl-v"&gt;DiffDelete&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;What happens if I also use another plugin which uses signs (e.g. Syntastic)?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can configure whether GitGutter preserves or clobbers other signs using &lt;code&gt;g:gitgutter_sign_allow_clobber&lt;/code&gt;.  Set to &lt;code&gt;1&lt;/code&gt; to clobber other signs (default on Vim &amp;gt;= 8.1.0614 and NeoVim &amp;gt;= 0.4.0) or &lt;code&gt;0&lt;/code&gt; to preserve them.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-when-no-signs-are-showing-at-all" class="anchor" aria-hidden="true" href="#when-no-signs-are-showing-at-all"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;When no signs are showing at all&lt;/h4&gt;
&lt;p&gt;Here are some things you can check:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Try adding &lt;code&gt;let g:gitgutter_grep=''&lt;/code&gt; to your vimrc.  If it works, the problem is grep producing non-plain output; e.g. ANSI escape codes or colours.&lt;/li&gt;
&lt;li&gt;Verify &lt;code&gt;:echo system("git --version")&lt;/code&gt; succeeds.&lt;/li&gt;
&lt;li&gt;Verify your git config is compatible with the version of git returned by the command above.&lt;/li&gt;
&lt;li&gt;Verify your Vim supports signs (&lt;code&gt;:echo has('signs')&lt;/code&gt; should give &lt;code&gt;1&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Verify your file is being tracked by git and has unstaged changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-when-the-whole-file-is-marked-as-added" class="anchor" aria-hidden="true" href="#when-the-whole-file-is-marked-as-added"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;When the whole file is marked as added&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;If you use zsh, and you set &lt;code&gt;CDPATH&lt;/code&gt;, make sure &lt;code&gt;CDPATH&lt;/code&gt; doesn't include the current directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-when-signs-take-a-few-seconds-to-appear" class="anchor" aria-hidden="true" href="#when-signs-take-a-few-seconds-to-appear"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;When signs take a few seconds to appear&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Try reducing &lt;code&gt;updatetime&lt;/code&gt;, e.g. &lt;code&gt;set updatetime=100&lt;/code&gt;.  Note this also controls the delay before vim writes its swap file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-when-signs-dont-update-after-focusing-vim" class="anchor" aria-hidden="true" href="#when-signs-dont-update-after-focusing-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;When signs don't update after focusing Vim&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Your terminal probably isn't reporting focus events.  Either try installing &lt;a href="https://github.com/wincent/terminus"&gt;Terminus&lt;/a&gt; or set &lt;code&gt;let g:gitgutter_terminal_reports_focus=0&lt;/code&gt;.  For tmux, try &lt;code&gt;set -g focus-events on&lt;/code&gt; in your tmux.conf.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-shameless-plug" class="anchor" aria-hidden="true" href="#shameless-plug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shameless Plug&lt;/h3&gt;
&lt;p&gt;If this plugin has helped you, or you'd like to learn more about Vim, why not check out this screencast I wrote for PeepCode:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pluralsight.com/training/Courses/TableOfContents/smash-into-vim" rel="nofollow"&gt;Smash Into Vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This was one of PeepCode's all-time top three bestsellers and is now available at Pluralsight.&lt;/p&gt;
&lt;p&gt;You can read reviews on my &lt;a href="http://airbladesoftware.com/peepcode-vim" rel="nofollow"&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-intellectual-property" class="anchor" aria-hidden="true" href="#intellectual-property"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intellectual Property&lt;/h3&gt;
&lt;p&gt;Copyright Andrew Stewart, AirBlade Software Ltd.  Released under the MIT licence.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>airblade</author><guid isPermaLink="false">https://github.com/airblade/vim-gitgutter</guid><pubDate>Sat, 01 Feb 2020 00:17:00 GMT</pubDate></item><item><title>wincent/wincent #18 in Vim script, Today</title><link>https://github.com/wincent/wincent</link><description>&lt;p&gt;&lt;i&gt;💾 Dot-files&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dotfiles-and-system-configuration" class="anchor" aria-hidden="true" href="#dotfiles-and-system-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;"dotfiles" and system configuration&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wincent/wincent/media/screenshot.png"&gt;&lt;img src="https://raw.githubusercontent.com/wincent/wincent/media/screenshot.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Target platforms: macOS and Red Hat-like Linuxes (eg. CentOS).&lt;/li&gt;
&lt;li&gt;Set-up method: &lt;del&gt;Beautiful and intricate snowflake&lt;/del&gt; incredibly over-engineered &lt;a href="https://www.ansible.com/" rel="nofollow"&gt;Ansible&lt;/a&gt; orchestration.&lt;/li&gt;
&lt;li&gt;Visible in the screenshot:
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://chriskempson.com/projects/base16/" rel="nofollow"&gt;default-dark Base16&lt;/a&gt; color scheme.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adobe-fonts/source-code-pro"&gt;Adobe Source Code Pro&lt;/a&gt; (Light) font.&lt;/li&gt;
&lt;li&gt;Vim, running inside tmux, inside iTerm2, on macOS "High Sierra".&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-dotfiles" class="anchor" aria-hidden="true" href="#dotfiles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dotfiles&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/wincent/wincent/tree/master/roles/dotfiles/files"&gt;A set of dotfiles&lt;/a&gt; that I've been tweaking and twiddling since the early 2000s (&lt;a href="https://github.com/wincent/wincent/commit/61a7e2a830edb7"&gt;under version control&lt;/a&gt; since 2009). Characteristics include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sane Vim pasting via bracketed paste mode.&lt;/li&gt;
&lt;li&gt;Write access to local clipboard from local and remote hosts, inside and outside of tmux (via &lt;a href="https://github.com/wincent/clipper"&gt;Clipper&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Full mouse support (pane/split resizing, scrolling, text selection) in Vim and tmux.&lt;/li&gt;
&lt;li&gt;Focus/lost events for Vim inside tmux.&lt;/li&gt;
&lt;li&gt;Cursor shape toggles on entering Vim.&lt;/li&gt;
&lt;li&gt;Italics in the terminal.&lt;/li&gt;
&lt;li&gt;Bundles a (not-excessive) number of &lt;a href="https://github.com/wincent/wincent/tree/master/roles/dotfiles/files/.vim/pack"&gt;useful Vim plug-ins&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Conservative Vim configuration (very few overrides of core functionality; most changes are unobtrusive enhancements; some additional functionality exposed via &lt;code&gt;&amp;lt;Leader&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;LocalLeader&amp;gt;&lt;/code&gt; mappings.&lt;/li&gt;
&lt;li&gt;Relatively restrained Zsh config, Bash-like but with a few Zsh perks, such as right-side prompt, auto-cd hooks, command elapsed time printing and such.&lt;/li&gt;
&lt;li&gt;Unified color-handling (across iTerm2 and Vim) via &lt;a href="https://github.com/chriskempson/base16-shell"&gt;Base16 Shell&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Encrypted versioning of files with sensitive content (via &lt;a href="https://github.com/wincent/git-cipher"&gt;git-cipher&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Comprehensive &lt;a href="http://www.hammerspoon.org/" rel="nofollow"&gt;Hammerspoon&lt;/a&gt; &lt;a href="https://github.com/wincent/wincent/tree/master/roles/dotfiles/files/.hammerspoon"&gt;config&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-homebrew" class="anchor" aria-hidden="true" href="#homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homebrew&lt;/h3&gt;
&lt;p&gt;On macOS, &lt;a href="https://github.com/wincent/wincent/tree/master/roles/homebrew"&gt;the &lt;code&gt;homebrew&lt;/code&gt; role&lt;/a&gt; installs &lt;a href="https://github.com/wincent/wincent/blob/master/roles/homebrew/templates/Brewfile"&gt;a bunch of useful software&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-keyboard-customization" class="anchor" aria-hidden="true" href="#keyboard-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keyboard customization&lt;/h3&gt;
&lt;p&gt;On macOS, &lt;a href="https://github.com/tekezo/Karabiner-Elements/"&gt;Karabiner-Elements&lt;/a&gt; is used for the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make Caps Lock serve as Backspace (when tapped) and Left Control (when chorded with another key). When held down alone, Caps Lock fires repeated Backspace events.&lt;/li&gt;
&lt;li&gt;Make Return serve as Return (when tapped) and Right Control (when chorded with another key). When held down alone, Return fires repeated Return events.&lt;/li&gt;
&lt;li&gt;Maps Control-I to F6 (only in MacVim and the terminal) so that it can be mapped independently from Tab in Vim.&lt;/li&gt;
&lt;li&gt;Toggle Caps Lock on by tapping both Shift keys simultaneously.&lt;/li&gt;
&lt;li&gt;Makes the function keys on my external Realforce keyboard behave like the "media" keys on Apple's keyboards.&lt;/li&gt;
&lt;li&gt;Swap Option and Command keys on my external Realforce keyboard.&lt;/li&gt;
&lt;li&gt;Make the "application" key (extra modifier key on right-hand side) behave as "fn" on Realforce keyboard.&lt;/li&gt;
&lt;li&gt;Make "pause" (at far-right of function key row) behave as "power" (effectively, sleep) on Realforce keyboard.&lt;/li&gt;
&lt;li&gt;Adds a "SpaceFN" layer that can be activated by holding down Space while hitting other keys; I use this to make the cursor keys available on or near the home row in any app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-zsh" class="anchor" aria-hidden="true" href="#zsh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zsh&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ag&lt;/code&gt;: Transparently wraps the &lt;code&gt;ag&lt;/code&gt; executable so as to provide a centralized place to set defaults for that command (seeing as it has no "rc" file).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bounce&lt;/code&gt;: bounce the macOS Dock icon if the terminal is not in the foreground.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;color&lt;/code&gt;: change terminal and Vim color scheme.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;email&lt;/code&gt;: convenience wrapper to spawn (or attach to) a tmux session running &lt;code&gt;mutt&lt;/code&gt; and &lt;code&gt;mbsync&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fd&lt;/code&gt;: "find directory" using fast &lt;code&gt;bfs&lt;/code&gt; and &lt;code&gt;fzf&lt;/code&gt;; automatically &lt;code&gt;cd&lt;/code&gt;s into the selected directory.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fh&lt;/code&gt;: "find [in] history"; selecting a history item inserts it into the command line but does not execute it.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;history&lt;/code&gt;: overrides the (tiny) default history count.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jump&lt;/code&gt; (aliased to &lt;code&gt;j&lt;/code&gt;): to jump to hashed directories.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;regmv&lt;/code&gt;: bulk-rename files (eg. &lt;code&gt;regmv '/\.tif$/.tiff/' *&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scratch&lt;/code&gt;: create a random temporary scratch directory and &lt;code&gt;cd&lt;/code&gt; into it.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tick&lt;/code&gt;: moves an existing time warp (eg. &lt;code&gt;tick +1h&lt;/code&gt;); see &lt;code&gt;tw&lt;/code&gt; below for a description of time warp.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tmux&lt;/code&gt;: wrapper that reattches to pre-existing sessions, or creates new ones based on the current directory name; additionally, looks for a &lt;code&gt;.tmux&lt;/code&gt; file to set up windows and panes (note that the first time a given &lt;code&gt;.tmux&lt;/code&gt; file is encountered the wrapper asks the user whether to trust or skip it).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tw&lt;/code&gt; ("time warp"): overrides &lt;code&gt;GIT_AUTHOR_DATE&lt;/code&gt; and &lt;code&gt;GIT_COMMITTER_DATE&lt;/code&gt; (eg. &lt;code&gt;tw -1d&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-prompt" class="anchor" aria-hidden="true" href="#prompt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prompt&lt;/h4&gt;
&lt;p&gt;Zsh is configured with the following prompt:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wincent/wincent/media/prompt.png"&gt;&lt;img src="https://raw.githubusercontent.com/wincent/wincent/media/prompt.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visible here are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Concise left-hand prompt consisting of:
&lt;ul&gt;
&lt;li&gt;Last component of current directory (abbreviates &lt;code&gt;$HOME&lt;/code&gt; to &lt;code&gt;~&lt;/code&gt; if possible).&lt;/li&gt;
&lt;li&gt;Prompt marker, &lt;code&gt;❯&lt;/code&gt;, the "&lt;a href="https://codepoints.net/U+276F" rel="nofollow"&gt;HEAVY RIGHT-POINTING ANGLE QUOTATION MARK ORNAMENT&lt;/a&gt;" (that's &lt;code&gt;\u276f&lt;/code&gt;, or &lt;code&gt;e2 9d af&lt;/code&gt; in UTF-8).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Extended right-hand size prompt which auto-hides when necessary to make room for long commands and contains:
&lt;ul&gt;
&lt;li&gt;Duration of previous command in adaptive units (seconds, minutes, hours, days, depending on duration).&lt;/li&gt;
&lt;li&gt;Current version control branch name.&lt;/li&gt;
&lt;li&gt;Current version control worktree status using colors that match those used in &lt;code&gt;git status&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;Green dot indicates staged changes.&lt;/li&gt;
&lt;li&gt;Red dot indicates unstaged changes.&lt;/li&gt;
&lt;li&gt;Blue dot indicates untracked files.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Full version of current working directory (again, abbreviating &lt;code&gt;$HOME&lt;/code&gt; to &lt;code&gt;~&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nested shells are indicated with additional prompt characters. For example, one nested shell:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wincent/wincent/media/prompt-shlvl-2.png"&gt;&lt;img src="https://raw.githubusercontent.com/wincent/wincent/media/prompt-shlvl-2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Two nested shells:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wincent/wincent/media/prompt-shlvl-3.png"&gt;&lt;img src="https://raw.githubusercontent.com/wincent/wincent/media/prompt-shlvl-3.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Root shells are indicated with a different color prompt character and the word "root":&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wincent/wincent/media/prompt-root.png"&gt;&lt;img src="https://raw.githubusercontent.com/wincent/wincent/media/prompt-root.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nesting within a root shell is indicated like this:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wincent/wincent/media/prompt-root-shlvl-2.png"&gt;&lt;img src="https://raw.githubusercontent.com/wincent/wincent/media/prompt-root-shlvl-2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Two nested shells:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wincent/wincent/media/prompt-root-shlvl-3.png"&gt;&lt;img src="https://raw.githubusercontent.com/wincent/wincent/media/prompt-root-shlvl-3.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If the last command exited with a non-zero status (usually indicative of an error), a yellow exclamation is shown:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wincent/wincent/media/prompt-error.png"&gt;&lt;img src="https://raw.githubusercontent.com/wincent/wincent/media/prompt-error.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If there are background processes, a yellow asterisk is shown:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wincent/wincent/media/prompt-bg.png"&gt;&lt;img src="https://raw.githubusercontent.com/wincent/wincent/media/prompt-bg.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mutt" class="anchor" aria-hidden="true" href="#mutt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mutt&lt;/h3&gt;
&lt;p&gt;A number of tools are used to provide command-line access to Gmail and Office IMAP accounts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.mutt.org/" rel="nofollow"&gt;mutt&lt;/a&gt;: For reading email.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://isync.sourceforge.net/" rel="nofollow"&gt;isync&lt;/a&gt;: For maintaining a local cache of messages for offline access.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notmuchmail.org/" rel="nofollow"&gt;notmuch&lt;/a&gt;: For fast search.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msmtp.sourceforge.net/" rel="nofollow"&gt;msmtp&lt;/a&gt;: For sending email.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://elinks.or.cz/" rel="nofollow"&gt;elinks&lt;/a&gt;: For viewing HTML emails.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://packages.debian.org/sid/misc/urlview" rel="nofollow"&gt;urlview&lt;/a&gt;: For opening URLs from inside mutt.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/julienXX/terminal-notifier"&gt;terminal-notifier&lt;/a&gt;: For notifications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.spinnaker.de/lbdb/" rel="nofollow"&gt;lbdb&lt;/a&gt;: Contact autocompletion drawing from a number of sources, such as previous messages, aliases, and macOS Contacts (which can be configured to synchronize Google contacts as well).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lefcha/imapfilter/"&gt;imapfilter&lt;/a&gt;: For filtering.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wincent/passage"&gt;passage&lt;/a&gt;: For mediating interaction with the macOS keychain.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order for all this to work, a few items have to be stored in the macOS keychain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A "generic" (A.K.A. "application") keychain items (that is, without protocols, only hostnames):
&lt;ul&gt;
&lt;li&gt;"Keychain Item Name": example.net (corresponds to the "host" field in &lt;code&gt;~/.msmtprc&lt;/code&gt;, and "Host" field in &lt;code&gt;~/.mbsyncrc&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;"Account Name": &lt;a href="mailto:username+mutt@example.net"&gt;username+mutt@example.net&lt;/a&gt; (corresponds to the "user" field in &lt;code&gt;~/.msmtprc&lt;/code&gt;, and "PassCmd" field in &lt;code&gt;~/.mbsynrc&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following Gmail-like/Vim-like bindings are configured:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;e&lt;/code&gt;: Archive (but note: leaves copy of mail in mailbox until next sync; force an immediate sync with &lt;code&gt;$&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt;: Trash mail.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!&lt;/code&gt;: Mark as spam.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gi&lt;/code&gt;: Go to inbox.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ga&lt;/code&gt;: Go to archive.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gt&lt;/code&gt;: Go to sent mail.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gd&lt;/code&gt;: Go to drafts.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gs&lt;/code&gt;: Go to starred mail.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gl&lt;/code&gt;: Go to a label (folder).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;: Toggle selection on entry (see also &lt;code&gt;t&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c&lt;/code&gt;: Compose new message.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt;: Toggle star.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*a&lt;/code&gt;: Select all.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*n&lt;/code&gt;: Deselect all (mnemonic: "select none").&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*r&lt;/code&gt;: Select read messages.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*u&lt;/code&gt;: Select unread messages.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shift-U&lt;/code&gt;: Mark as unread.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shift-I&lt;/code&gt;: Mark as read.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Standard &lt;code&gt;mutt&lt;/code&gt; stuff:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;v&lt;/code&gt;: View attachments (including alternate parts for a multipart message).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Non-Gmail extensions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;t&lt;/code&gt;: Toggle selection on entire thread (see also &lt;code&gt;x&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A&lt;/code&gt;: Show alternate MIME-type in MIME-multipart messages.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;O&lt;/code&gt;: Save original message.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;S&lt;/code&gt;: Search all using &lt;a href="https://xapian.org/docs/queryparser.html" rel="nofollow"&gt;Xapian query syntax&lt;/a&gt; (&lt;a href="https://notmuchmail.org/manpages/notmuch-search-terms-7/" rel="nofollow"&gt;notmuch-specific reference documentation&lt;/a&gt;):
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+foo&lt;/code&gt;: Must include "foo".&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-bar&lt;/code&gt;: Must not include "bar".&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AND&lt;/code&gt;, &lt;code&gt;OR&lt;/code&gt;, &lt;code&gt;NOT&lt;/code&gt;, &lt;code&gt;XOR&lt;/code&gt;: Self-evident.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;foo NEAR bar&lt;/code&gt;: "foo" within 10 words of "bar" (order-independent).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;foo ADJ bar&lt;/code&gt;: Like &lt;code&gt;NEAR&lt;/code&gt;, but "foo" must appear earlier than "bar".&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"foo bar"&lt;/code&gt;: Match entire phrase.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;foo*&lt;/code&gt;: Match "foo", "food", "foobar" etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subject:this&lt;/code&gt;, &lt;code&gt;subject:"one two"&lt;/code&gt; (two consecutive words), &lt;code&gt;subject:(one two)&lt;/code&gt; (either or both words anywhere in subject), &lt;code&gt;subject:one AND subject:two&lt;/code&gt; (both words anywhere in subject).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subject:/regex.*/&lt;/code&gt; (but note, quotes are needed for patterns containing spaces; eg. &lt;code&gt;subject:"/a b/"&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;from:john&lt;/code&gt;, &lt;code&gt;from:me@example.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to:john&lt;/code&gt;, &lt;code&gt;to:me@example.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date:today&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date:yesterday&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date:3d&lt;/code&gt; (exactly 3 days ago)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date:14d..7d&lt;/code&gt; (a week ago)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date:10d..&lt;/code&gt; (since 10 days ago)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date:..3d&lt;/code&gt; (until 3 days ago)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date:"last week"&lt;/code&gt; (preceding Monday through Sunday)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date:"this week"&lt;/code&gt; or &lt;code&gt;date:this_week&lt;/code&gt; or &lt;code&gt;date:this-week&lt;/code&gt; (Monday to present day)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date:"last year"&lt;/code&gt; (also works with &lt;code&gt;years&lt;/code&gt;, &lt;code&gt;months&lt;/code&gt;, &lt;code&gt;hours&lt;/code&gt;/&lt;code&gt;hrs&lt;/code&gt;, &lt;code&gt;minutes&lt;/code&gt;/&lt;code&gt;mins&lt;/code&gt;, &lt;code&gt;seconds&lt;/code&gt;/&lt;code&gt;secs&lt;/code&gt; etc).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date:june&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date:2018-06-01&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is:{tag}&lt;/code&gt;: eg. &lt;code&gt;is:unread&lt;/code&gt;, &lt;code&gt;is:flagged&lt;/code&gt; (ie. starred); to see all tags, run &lt;code&gt;notmuch search --output=tags '*'&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;attachment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flagged&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inbox&lt;/code&gt; (not very meaningful as &lt;em&gt;everything&lt;/em&gt; gets this tag when indexed via &lt;code&gt;notmuch new&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;replied&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;signed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unread&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id:messageId@example.net&lt;/code&gt; (search by Message-Id).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;: Limit listed messages:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~f bob&lt;/code&gt; (from bob)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~s foo&lt;/code&gt; (subject contains "foo"; "Foo" would search case-sensitively)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~s foo.+bar&lt;/code&gt; (subject contains pattern)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!~s foo&lt;/code&gt; (subject does not contain "foo")&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~d &amp;gt;1m&lt;/code&gt; (messages more than 1 month old)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\u&lt;/code&gt;: Open list of URLs in message (via &lt;code&gt;urlview&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;: Toggle (mailboxes) sidebar.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;m&lt;/code&gt;: Move message(s).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other stuff:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Tab&amp;gt;&lt;/code&gt; autocompletes addresses from the lbdb database.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;C-t&amp;gt;&lt;/code&gt; autocompletes aliases.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Attachment menu bindings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;S&lt;/code&gt;: Save all attachments.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To have &lt;code&gt;mailto&lt;/code&gt; links open up in &lt;code&gt;mutt&lt;/code&gt; in iTerm:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In &lt;em&gt;iTerm2&lt;/em&gt; → &lt;em&gt;Preferences&lt;/em&gt; → &lt;em&gt;Profiles&lt;/em&gt; → &lt;em&gt;General&lt;/em&gt;, select the "Mutt" profile.&lt;/li&gt;
&lt;li&gt;Under &lt;em&gt;URL Schemes&lt;/em&gt; → &lt;em&gt;Schemes handled:&lt;/em&gt;, select &lt;code&gt;mailto&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$$URL$$&lt;/code&gt; is documented &lt;a href="https://groups.google.com/d/msg/iterm2-discuss/TFPl1D_miIU/uDVV2ZZpYWQJ" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The convoluted use of &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;zsh&lt;/code&gt; is required to get terminal colors working correctly.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tmux.sourceforge.net/" rel="nofollow"&gt;tmux&lt;/a&gt; 2.3 or later.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neovim.io" rel="nofollow"&gt;Neovim&lt;/a&gt; or &lt;a href="http://www.vim.org/" rel="nofollow"&gt;Vim&lt;/a&gt; 8.0 or later with Ruby and Python support (although there's a reasonable amount of feature detection in order to degrade gracefully).&lt;/li&gt;
&lt;li&gt;Relatively recent &lt;a href="http://www.zsh.org/" rel="nofollow"&gt;Zsh&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Relatively recent &lt;a href="http://git-scm.com/" rel="nofollow"&gt;Git&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wincent.com/products/clipper" rel="nofollow"&gt;Clipper&lt;/a&gt; for transparent access to the local system clipboard.&lt;/li&gt;
&lt;li&gt;On macOS, &lt;a href="http://www.iterm2.com/" rel="nofollow"&gt;iTerm2&lt;/a&gt;. Additionally, only the latest version of macOS (although at the time of writing, I'm still on High Sierra) gets actively tested.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/" rel="nofollow"&gt;Python&lt;/a&gt; to perform setup via the included &lt;code&gt;install&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ruby-lang.org/" rel="nofollow"&gt;Ruby&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adobe-fonts/source-code-pro"&gt;Adobe Source Code Pro&lt;/a&gt; or any other fixed-width font that includes the &lt;a href="http://powerline.readthedocs.io/en/master/installation.html#fonts-installation" rel="nofollow"&gt;Powerline glyphs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-clone" class="anchor" aria-hidden="true" href="#clone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clone&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone --recursive https://github.com/wincent/wincent.git&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that if you're behind a firewall you may need to set up a temporary &lt;code&gt;~/.gitconfig&lt;/code&gt; with appropriate proxy configuration with a format such as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[http]
	proxy = fwdproxy:8080
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or alternatively:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;env http_proxy=http://fwdproxy:8080 https_proxy=http://fwdproxy:8080 git clone --recursive https://github.com/wincent/wincent&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./install          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Installs everything on the local machine.&lt;/span&gt;
./install --help   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Info on installing specific roles, force-installing etc.&lt;/span&gt;
./install dotfiles &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Just install dotfiles.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This sets up a local Python environment using the bundled virtualenv, bootstraps Ansible, and then uses Ansible to copy the dotfiles and configure the machine.&lt;/p&gt;
&lt;p&gt;Again, if you're behind a firewall, you may need to make use of a proxy during the initial run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;env http_proxy=http://fwdproxy:8080 https_proxy=http://fwdproxy:8080 ./install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a fallback strategy, in case the &lt;code&gt;install&lt;/code&gt; script fails, you can symlink the dotfiles by hand with a command like the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;DOTFILE&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;find roles/dotfiles/files -maxdepth 1 -name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; tail -n +2&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  ln -sf &lt;span class="pl-smi"&gt;$PWD&lt;/span&gt;/&lt;span class="pl-smi"&gt;$DOTFILE&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;
&lt;span class="pl-k"&gt;done&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;ln -sf&lt;/code&gt; command will overwrite existing files, but will fail to overwrite existing directories.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Given that &lt;code&gt;~/.gitconfig&lt;/code&gt; is included with these dotfiles, any local modifications or overrides that you apply should be added to &lt;code&gt;~/.gitconfig.local&lt;/code&gt; instead; for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git config --file &lt;span class="pl-k"&gt;~&lt;/span&gt;/.gitconfig.local user.name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John Doe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
git config --file &lt;span class="pl-k"&gt;~&lt;/span&gt;/.gitconfig.local user.email johndoe@example.com&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-general-ansible-troubleshooting" class="anchor" aria-hidden="true" href="#general-ansible-troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General Ansible troubleshooting&lt;/h4&gt;
&lt;p&gt;Flags passed to &lt;code&gt;./install&lt;/code&gt; are propagated to the underlying Ansible invocation, which means that you can do things like:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run in "check" (dry-run) mode.&lt;/span&gt;
./install --check

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Show before-and-after delta of changes.&lt;/span&gt;
./install --diff

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Both of the above together.&lt;/span&gt;
./install --check --diff

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Show various levels of debug output.&lt;/span&gt;
./install --verbose
./install -vv
./install -vvv
./install -vvvv

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Confirm each task before running it (--step), and begin&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; execution from a specific task (--start-at-task).&lt;/span&gt;
./install --step --start-at-task=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dotfiles | create backup directory&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also inspect variables by adding a task that uses the "debug" module in a role:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;- &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;buggy task&lt;/span&gt;
  &lt;span class="pl-ent"&gt;stat&lt;/span&gt;: &lt;span class="pl-s"&gt;path="~/{{ item }}"&lt;/span&gt;
  &lt;span class="pl-ent"&gt;register&lt;/span&gt;: &lt;span class="pl-s"&gt;stat_result&lt;/span&gt;
  &lt;span class="pl-ent"&gt;with_items&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{{ dotfile_files + dotfile_templates }}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

- &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;debugging bad stat info&lt;/span&gt;
  &lt;span class="pl-ent"&gt;debug&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;var&lt;/span&gt;: &lt;span class="pl-s"&gt;stat_result&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that for convenience, "debug" tasks have already been inserted for all variables that are &lt;code&gt;register&lt;/code&gt;-ed in the existing roles, with verbosity thresholds of 2, meaning that they will be logged automatically when the install is run using &lt;code&gt;./install -vv&lt;/code&gt; or more.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-pycrypto-install-fails-with-gmph-file-not-found" class="anchor" aria-hidden="true" href="#pycrypto-install-fails-with-gmph-file-not-found"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pycrypto install fails with "'gmp.h' file not found"&lt;/h4&gt;
&lt;p&gt;If pycrypto causes the install to fail at:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;src/_fastmath.c:36:11: fatal error: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gmp.h&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; file not found&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;due to &lt;a href="http://stackoverflow.com/questions/15375171/pycrypto-install-fatal-error-gmp-h-file-not-found" rel="nofollow"&gt;a missing GMP dependency&lt;/a&gt;, try:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install gmp
env &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CFLAGS=-I/usr/local/include -L/usr/local/lib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pip install pycrypto&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then installing again:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./install --force&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-broken-unicode-in-vim-linux" class="anchor" aria-hidden="true" href="#broken-unicode-in-vim-linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Broken Unicode in Vim (Linux)&lt;/h4&gt;
&lt;p&gt;If Unicode symbols appear missing or corrupted in Vim, first ensure that your terminal emulator supports UTF-8. Then, check to see if you've properly configured your system-wide UTF-8 support.&lt;/p&gt;
&lt;p&gt;Issue this test command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; LC_ALL=en_US.UTF-8&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;vim&lt;/code&gt;. Unicode in the statusline should be working.&lt;/p&gt;
&lt;p&gt;To persist this &lt;code&gt;LC_*&lt;/code&gt; variable binding, edit your &lt;code&gt;locale&lt;/code&gt; accordingly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;/etc/locale.conf

LANG=en_US.UTF-8
LC_ALL=en_US.UTF-8&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/__0Dquj7y9g" rel="nofollow"&gt;High-level overview of how this repo works (screencast)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;Unless otherwise noted, the contents of this repo are in the public domain. See the &lt;a href="LICENSE.md"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h3&gt;
&lt;p&gt;The repo is written and maintained by Greg Hurrell &amp;lt;&lt;a href="mailto:greg@hurrell.net"&gt;greg@hurrell.net&lt;/a&gt;&amp;gt;. Other contributors that have submitted patches include, in alphabetical order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Joe Lencioni&lt;/li&gt;
&lt;li&gt;Jonathan Wilkins&lt;/li&gt;
&lt;li&gt;Mark Stenglein&lt;/li&gt;
&lt;li&gt;Matthew Byrne&lt;/li&gt;
&lt;li&gt;Stone C. Lasley&lt;/li&gt;
&lt;li&gt;Victor Igor&lt;/li&gt;
&lt;li&gt;Zac Collier&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This list produced with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:read !git shortlog -s HEAD | grep -v 'Greg Hurrell' | cut -f 2-3 | sed -e 's/^/- /'
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>wincent</author><guid isPermaLink="false">https://github.com/wincent/wincent</guid><pubDate>Sat, 01 Feb 2020 00:18:00 GMT</pubDate></item><item><title>majutsushi/tagbar #19 in Vim script, Today</title><link>https://github.com/majutsushi/tagbar</link><description>&lt;p&gt;&lt;i&gt;Vim plugin that displays tags in a window, ordered by scope&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-tagbar-a-class-outline-viewer-for-vim" class="anchor" aria-hidden="true" href="#tagbar-a-class-outline-viewer-for-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tagbar: a class outline viewer for Vim&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/majutsushi/tagbar/actions?workflow=Vint"&gt;&lt;img src="https://github.com/majutsushi/tagbar/workflows/Vint/badge.svg" alt="Vint" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/majutsushi/tagbar/actions?workflow=Check"&gt;&lt;img src="https://github.com/majutsushi/tagbar/workflows/Check/badge.svg" alt="Check" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-tagbar-is" class="anchor" aria-hidden="true" href="#what-tagbar-is"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What Tagbar is&lt;/h2&gt;
&lt;p&gt;Tagbar is a Vim plugin that provides an easy way to browse the tags of the
current file and get an overview of its structure. It does this by creating a
sidebar that displays the ctags-generated tags of the current file, ordered by
their scope. This means that for example methods in C++ are displayed under
the class they are defined in.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-tagbar-is-not" class="anchor" aria-hidden="true" href="#what-tagbar-is-not"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What Tagbar is not&lt;/h2&gt;
&lt;p&gt;Tagbar is not a general-purpose tool for managing &lt;code&gt;tags&lt;/code&gt; files. It only
creates the tags it needs on-the-fly in-memory without creating any files.
&lt;code&gt;tags&lt;/code&gt; file management is provided by other plugins, like for example
&lt;a href="https://github.com/xolox/vim-easytags"&gt;easytags&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.vim.org/" rel="nofollow"&gt;Vim&lt;/a&gt; &amp;gt;= 7.3.1058
or any version of &lt;a href="https://neovim.io/" rel="nofollow"&gt;NeoVim&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ctags.sourceforge.net/" rel="nofollow"&gt;Exuberant Ctags&lt;/a&gt; &amp;gt;= 5.5,
or (&lt;strong&gt;highly recommended&lt;/strong&gt;) any version of &lt;a href="https://ctags.io" rel="nofollow"&gt;Universal
Ctags&lt;/a&gt; which is a currently maintained fork of Exuberant
Ctags with many bugfixes, support for many more formats, and proper Unicode
support. Some additional formats can also be handled by other providers such
as &lt;a href="https://github.com/sergioramos/jsctags"&gt;jsctags&lt;/a&gt;,
&lt;a href="https://github.com/vim-php/phpctags"&gt;phpctags&lt;/a&gt;, or others.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Extract the archive or clone the repository into a directory in your
&lt;code&gt;'runtimepath'&lt;/code&gt;, or use a plugin manager of your choice like
&lt;a href="https://github.com/tpope/vim-pathogen"&gt;pathogen&lt;/a&gt;. Don't forget to run
&lt;code&gt;:helptags&lt;/code&gt; if your plugin manager doesn't do it for you so you can access the
documentation with &lt;code&gt;:help tagbar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the ctags executable is not installed in one of the directories in your
&lt;code&gt;$PATH&lt;/code&gt; environment variable you have to set the &lt;code&gt;g:tagbar_ctags_bin&lt;/code&gt;
variable, see the documentation for more info.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;Put something like the following into your ~/.vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;F8&amp;gt;&lt;/span&gt; :TagbarToggle&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do this the F8 key will toggle the Tagbar window. You can of course use
any shortcut you want. For more flexible ways to open and close the window
(and the rest of the functionality) see the documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support-for-additional-filetypes" class="anchor" aria-hidden="true" href="#support-for-additional-filetypes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support for additional filetypes&lt;/h2&gt;
&lt;p&gt;For filetypes that are not supported by Exuberant Ctags check out &lt;a href="https://github.com/majutsushi/tagbar/wiki"&gt;the
wiki&lt;/a&gt; to see whether other projects
offer support for them and how to use them. Please add any other
projects/configurations that you find or create yourself so that others can
benefit from them, too.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-note-if-the-file-structure-display-is-wrong" class="anchor" aria-hidden="true" href="#note-if-the-file-structure-display-is-wrong"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note: If the file structure display is wrong&lt;/h2&gt;
&lt;p&gt;If you notice that there are some errors in the way your file's structure is
displayed in Tagbar, please make sure that the bug is actually in Tagbar
before you report an issue. Since Tagbar uses
&lt;a href="http://ctags.sourceforge.net/" rel="nofollow"&gt;exuberant-ctags&lt;/a&gt; and compatible programs to do
the actual file parsing, it is likely that the bug is actually in the program
responsible for that filetype instead.&lt;/p&gt;
&lt;p&gt;There is an example in &lt;code&gt;:h tagbar-issues&lt;/code&gt; about how to run ctags manually so
you can determine where the bug actually is. If the bug is actually in ctags,
please report it on their website instead, as there is nothing I can do about
it in Tagbar. Thank you!&lt;/p&gt;
&lt;p&gt;You can also have a look at &lt;a href="https://github.com/majutsushi/tagbar/issues?labels=ctags-bug&amp;amp;page=1&amp;amp;state=closed"&gt;ctags bugs that have previously been filed
against Tagbar&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/fc85311154723793776aed28488befdfaab36c42/68747470733a2f2f692e696d6775722e636f6d2f5366394c7332722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/fc85311154723793776aed28488befdfaab36c42/68747470733a2f2f692e696d6775722e636f6d2f5366394c7332722e706e67" alt="screenshot1" data-canonical-src="https://i.imgur.com/Sf9Ls2r.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f5065c1dda4cbd6df6eed89c4086e31fc1774b2e/68747470733a2f2f692e696d6775722e636f6d2f6e3462705076332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/f5065c1dda4cbd6df6eed89c4086e31fc1774b2e/68747470733a2f2f692e696d6775722e636f6d2f6e3462705076332e706e67" alt="screenshot2" data-canonical-src="https://i.imgur.com/n4bpPv3.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Tagbar is distributed under the terms of the &lt;em&gt;Vim license&lt;/em&gt;, see the included [LICENSE][] file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;Tagbar was originally written by &lt;a href="https://github.com/majutsushi"&gt;Jan Larres&lt;/a&gt;.
It is actively maintained by &lt;a href="https://github.com/alerque"&gt;Caleb Maclennan&lt;/a&gt;.
At least &lt;a href="https://github.com/majutsushi/tagbar/graphs/contributors"&gt;45 others have contributed&lt;/a&gt; features and bug fixes over the years.
Please document &lt;a href="https://github.com/majutsushi/tagbar/issues"&gt;issues&lt;/a&gt; or submit &lt;a href="https://github.com/majutsushi/tagbar/issues"&gt;pull requests&lt;/a&gt; on Github.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>majutsushi</author><guid isPermaLink="false">https://github.com/majutsushi/tagbar</guid><pubDate>Sat, 01 Feb 2020 00:19:00 GMT</pubDate></item><item><title>dhruvasagar/vim-table-mode #20 in Vim script, Today</title><link>https://github.com/dhruvasagar/vim-table-mode</link><description>&lt;p&gt;&lt;i&gt;VIM Table Mode for instant table creation.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vim-table-mode-v467-" class="anchor" aria-hidden="true" href="#vim-table-mode-v467-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VIM Table Mode v4.6.7 &lt;a href="https://travis-ci.org/dhruvasagar/vim-table-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ea8826323ded4f07a7b223cccf6c1a406d1e21d3/68747470733a2f2f7472617669732d63692e6f72672f64687275766173616761722f76696d2d7461626c652d6d6f64652e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dhruvasagar/vim-table-mode.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;An awesome automatic table creator &amp;amp; formatter allowing one to create neat
tables as you type.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;There are several ways to do this&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;I recommend installing &lt;a href="https://github.com/Shougo/neobundle.vim"&gt;NeoBundle&lt;/a&gt; and then just
add &lt;code&gt;NeoBundle 'dhruvasagar/vim-table-mode'&lt;/code&gt; to your ~/.vimrc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are using &lt;a href="https://github.com/tpope/vim-pathogen"&gt;pathogen.vim&lt;/a&gt;, then
add a git submodule for your plugin:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim
$ git submodule add git@github.com:dhruvasagar/vim-table-mode.git bundle/table-mode&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Copy all files under autoload/, plugin/, doc/ to respective
~/.vim/autoload/, ~/.vim/plugin and ~/.vim/doc under UNIX or
vimfiles/autoload/, vimfiles/plugin/ and vimfiles/doc under WINDOWS and
restart VIM&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-creating-table-on-the-fly" class="anchor" aria-hidden="true" href="#creating-table-on-the-fly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating table on-the-fly&lt;/h3&gt;
&lt;p&gt;To start using the plugin in the on-the-fly mode use &lt;code&gt;:TableModeToggle&lt;/code&gt; mapped to &lt;kbd&gt;&amp;lt;Leader&amp;gt;tm&lt;/kbd&gt; by default (which means &lt;kbd&gt;\&lt;/kbd&gt; &lt;kbd&gt;t&lt;/kbd&gt; &lt;kbd&gt;m&lt;/kbd&gt; if you didn't override the  by &lt;code&gt;:let mapleader = ','&lt;/code&gt; to have &lt;kbd&gt;,&lt;/kbd&gt; &lt;kbd&gt;t&lt;/kbd&gt; &lt;kbd&gt;m&lt;/kbd&gt;).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip :
You can use the following to quickly enable / disable table mode in insert
mode by using &lt;code&gt;||&lt;/code&gt; or &lt;code&gt;__&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;isAtStartOfLine&lt;/span&gt;(&lt;span class="pl-c1"&gt;mapping&lt;/span&gt;)
  &lt;span class="pl-k"&gt;let&lt;/span&gt; text_before_cursor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;getline&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)[&lt;span class="pl-c1"&gt;0&lt;/span&gt; : &lt;span class="pl-en"&gt;col&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;-1&lt;/span&gt;]
  &lt;span class="pl-k"&gt;let&lt;/span&gt; mapping_pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\V&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; . &lt;span class="pl-en"&gt;escape&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;mapping&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;let&lt;/span&gt; comment_pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\V&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; . &lt;span class="pl-en"&gt;escape&lt;/span&gt;(&lt;span class="pl-en"&gt;substitute&lt;/span&gt;(&amp;amp;&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;l:&lt;/span&gt;commentstring&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%s.*$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;return&lt;/span&gt; (text_before_cursor &lt;span class="pl-k"&gt;=&lt;/span&gt;~? &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;^&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; . (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\v(&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; . comment_pattern . &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\v)?&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) . &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\s*\v&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; . mapping_pattern . &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\v$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

inoreabbrev &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;bar&amp;gt;&amp;lt;bar&amp;gt;&lt;/span&gt;
          &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;SID&amp;gt;&lt;/span&gt;&lt;span class="pl-en"&gt;isAtStartOfLine&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\|\|&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) ?
          &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;c-o&amp;gt;:TableModeEnable&amp;lt;cr&amp;gt;&amp;lt;bar&amp;gt;&amp;lt;space&amp;gt;&amp;lt;bar&amp;gt;&amp;lt;left&amp;gt;&amp;lt;left&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; : &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;bar&amp;gt;&amp;lt;bar&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
inoreabbrev &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; __
          &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;SID&amp;gt;&lt;/span&gt;&lt;span class="pl-en"&gt;isAtStartOfLine&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) ?
          &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;c-o&amp;gt;:silent! TableModeDisable&amp;lt;cr&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; : &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Enter the first line, delimiting columns by the &lt;code&gt;|&lt;/code&gt; symbol. The plugin reacts by inserting spaces between the text and the separator if you omit them:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| name | address | phone |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the second line (without leaving Insert mode), enter &lt;code&gt;|&lt;/code&gt; twice. The plugin will write a properly formatted horizontal line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| name | address | phone |
|------+---------+-------|
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When you enter the subsequent lines, the plugin will automatically adjust the formatting to match the text you’re entering every time you press &lt;code&gt;|&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| name       | address | phone |
|------------+---------+-------|
| John Adams |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Go on until the table is ready:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| name            | address                  | phone      |
|-----------------+--------------------------+------------|
| John Adams      | 1600 Pennsylvania Avenue | 0123456789 |
|-----------------+--------------------------+------------|
| Sherlock Holmes | 221B Baker Street        | 0987654321 |
|-----------------+--------------------------+------------|
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can return to the first line and above it enter &lt;code&gt;||&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;|-----------------+--------------------------+------------|
| name            | address                  | phone      |
|-----------------+--------------------------+------------|
| John Adams      | 1600 Pennsylvania Avenue | 0123456789 |
|-----------------+--------------------------+------------|
| Sherlock Holmes | 221B Baker Street        | 0987654321 |
|-----------------+--------------------------+------------|
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Corner separators are adjustable:&lt;/p&gt;
&lt;p&gt;For Markdown-compatible tables use&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:table_mode_corner='|'


|-----------------|--------------------------|------------|
| name            | address                  | phone      |
|-----------------|--------------------------|------------|
| John Adams      | 1600 Pennsylvania Avenue | 0123456789 |
|-----------------|--------------------------|------------|
| Sherlock Holmes | 221B Baker Street        | 0987654321 |
|-----------------|--------------------------|------------|
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To get ReST-compatible tables use&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:table_mode_corner_corner='+'
let g:table_mode_header_fillchar='='


+-----------------+--------------------------+------------+
| name            | address                  | phone      |
+=================+==========================+============+
| John Adams      | 1600 Pennsylvania Avenue | 0123456789 |
+-----------------+--------------------------+------------+
| Sherlock Holmes | 221B Baker Street        | 0987654321 |
+-----------------+--------------------------+------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Markdown and ReST filetypes have automatically configured corners.&lt;/p&gt;
&lt;p&gt;You can also define in a table header border how it's content should be
aligned, whether center, right or left by using a &lt;code&gt;:&lt;/code&gt; character defined by
&lt;code&gt;g:table_mode_align_char&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;If you manipulate the table when table mode is disabled or copy paste a table
from clipboard from outside and it ends up being misaligned, you can realign
it using &lt;code&gt;:TableModeRealign&lt;/code&gt; or using the default mapping
&lt;kbd&gt;&amp;lt;Leader&amp;gt;tr&lt;/kbd&gt; defined by &lt;code&gt;g:table_mode_relign_map&lt;/code&gt; option.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-formatting-existing-content-into-a-table" class="anchor" aria-hidden="true" href="#formatting-existing-content-into-a-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Formatting existing content into a table&lt;/h3&gt;
&lt;p&gt;Table Mode wouldn't justify it's name if it didn't allow formatting
existing content into a table. And it does as promised. Like table creation
on the fly as you type, formatting existing content into a table is equally
simple. You can visually select multiple lines and call &lt;code&gt;:Tableize&lt;/code&gt; on it,
or alternatively use the mapping &lt;kbd&gt;&amp;lt;Leader&amp;gt;tt&lt;/kbd&gt; defined by the
&lt;code&gt;g:table_mode_tableize_map&lt;/code&gt; option which would convert CSV (Comma Separated
Value) data into a table and use &lt;code&gt;,&lt;/code&gt; defined by &lt;code&gt;g:table_mode_delimiter&lt;/code&gt;
option as the delimiter.&lt;/p&gt;
&lt;p&gt;If however you wish to use a different delimiter, you can use the command
&lt;code&gt;:Tableize/{pattern}&lt;/code&gt; in a similar fashion as you use tabular (eg.
&lt;code&gt;:Tableize/;&lt;/code&gt; uses ';' as the delimiter) or use the mapping &lt;kbd&gt;&amp;lt;Leader&amp;gt;T&lt;/kbd&gt;
defined by &lt;code&gt;g:table_mode_tableize_op_map&lt;/code&gt; option which takes input in the
cmd-line and uses the &lt;code&gt;{pattern}&lt;/code&gt; input as the delimiter.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:Tableize&lt;/code&gt; also accepts a range and so you can also call it by giving
lines manually like &lt;code&gt;:line1,line2Tableize&lt;/code&gt;, but this is not very intuitive.
You can use the mapping &lt;kbd&gt;&amp;lt;Leader&amp;gt;T&lt;/kbd&gt; with a &lt;code&gt;[count]&lt;/code&gt; to apply it to the
next &lt;code&gt;[count]&lt;/code&gt; lines in standard vim style.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-moving-around" class="anchor" aria-hidden="true" href="#moving-around"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Moving around&lt;/h3&gt;
&lt;p&gt;Now you can move between cells using table mode motions &lt;kbd&gt;[|&lt;/kbd&gt;,
&lt;kbd&gt;]|&lt;/kbd&gt;, &lt;kbd&gt;{|&lt;/kbd&gt; &amp;amp; &lt;kbd&gt;}|&lt;/kbd&gt; to move left | right | up |
down cells respectively. The left | right motions wrap around the table
and move to the next | previous row after the last | first cell in the
current row if one exists.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-manipulating-table" class="anchor" aria-hidden="true" href="#manipulating-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manipulating Table&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cell Text Object&lt;/strong&gt; :&lt;/p&gt;
&lt;p&gt;Tableize provides a text object for manipulating table cells. Following
the vim philosophy the you have &lt;kbd&gt;i|&lt;/kbd&gt; &amp;amp; &lt;kbd&gt;a|&lt;/kbd&gt; for the
inner and around (including the immidiate right table separator) the
table cell.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Delete Row&lt;/strong&gt; :&lt;/p&gt;
&lt;p&gt;You can use the &lt;kbd&gt;&amp;lt;Leader&amp;gt;tdd&lt;/kbd&gt; mapping defined by the option
&lt;code&gt;g:table_mode_delete_row_map&lt;/code&gt; to delete the current table row (provided
you are within a table row), this can be preceeded with a [count] to
delete multiple rows just like you would with 'dd'.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Delete Column&lt;/strong&gt; :&lt;/p&gt;
&lt;p&gt;You can use the &lt;kbd&gt;&amp;lt;Leader&amp;gt;tdc&lt;/kbd&gt; mapping defined by the option
&lt;code&gt;g:table_mode_delete_column_map&lt;/code&gt; to delete the entire current column
(provided you are within a table row), this can also be preceeded with a
[count] to delete multiple columns.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-advanced-usage-spreadsheet-capabilities" class="anchor" aria-hidden="true" href="#advanced-usage-spreadsheet-capabilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Usage: Spreadsheet Capabilities&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-table-formulas" class="anchor" aria-hidden="true" href="#table-formulas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table Formulas&lt;/h3&gt;
&lt;p&gt;Table Mode now has support for formulas like a spreadsheet. There are 2 ways
of defining formulas :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can add formulas using &lt;code&gt;:TableAddFormula&lt;/code&gt; or the mapping &lt;kbd&gt;&amp;lt;Leader&amp;gt;tfa&lt;/kbd&gt;
defined by the option &lt;code&gt;g:table_mode_add_formula_map&lt;/code&gt; from within a table
cell, which will ask for input on the cmd-line with a &lt;code&gt;f=&lt;/code&gt; prompt. The
input formula will be appended to the formula line if one exists or a new
one will be created with the input formula taking the current cell as the
target cell. The formula line is evaluated immidiately to reflect the
results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can directly add / manipulate formula expressions in the formula line.
The formula line is a commented line right after the table, beginning with
'tmf:' (table mode formula). eg) &lt;code&gt;# tmf: $3=$2*$1&lt;/code&gt;.  You can add multiple
formulas on the line separated with a ';' eg) &lt;code&gt;# tmf: $3=$2*$1;$4=$3/3.14&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can evaluate the formula line using &lt;code&gt;:TableEvalFormulaLine&lt;/code&gt; or the
mapping &lt;kbd&gt;&amp;lt;Leader&amp;gt;tfe&lt;/kbd&gt; defined by the option &lt;code&gt;g:table_mode_eval_expr_map&lt;/code&gt;
from anywhere inside the table or while on the formula line.&lt;/p&gt;
&lt;p&gt;NOTE: You can now use the mapping &lt;kbd&gt;&amp;lt;Leader&amp;gt;t?&lt;/kbd&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-formula-expressions" class="anchor" aria-hidden="true" href="#formula-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Formula Expressions&lt;/h3&gt;
&lt;p&gt;Expressions are of the format &lt;code&gt;$target = formula&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;target&lt;/code&gt; can be of 2 forms :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$n&lt;/code&gt;: This matches the table column number &lt;code&gt;n&lt;/code&gt;. So the &lt;code&gt;formula&lt;/code&gt; would
be evaluated for each cell in that column and the result would be placed
in it. You can use negative indice to represent column relative to the
last, -1 being the last.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$n,m&lt;/code&gt;: This matches the table cell n,m (row, column). So in this case
the formula would be evaluated and the result will be placed in this
cell. You can also use negative values to refer to cells relative to
the size, -1 being the last (row or column).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;formula&lt;/code&gt; can be a simple mathematical expression involving cells
which are also defined by the same format as that of the target cell.  You
can use all native vim functions within the formula. Apart from that table
mode also provides 2 special functions &lt;code&gt;Sum&lt;/code&gt; and &lt;code&gt;Average&lt;/code&gt;. Both these
functions take a range as input. A range can be of two forms :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;r1:r2&lt;/code&gt;: This represents cells in the current column from row &lt;code&gt;r1&lt;/code&gt;
through &lt;code&gt;r2&lt;/code&gt;. If &lt;code&gt;r2&lt;/code&gt; is negative it represents &lt;code&gt;r2&lt;/code&gt; rows above the
current row (of the target cell).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;r1,c1:r2,c2&lt;/code&gt;: This represents cells in the table from cell r1,c1
through cell r2,c2 (row, column).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Examples :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$2 = $1 * $1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$2 = pow($1, 5)&lt;/code&gt; NOTE: Remember to put space between the $1, and 5
here otherwise it will be treated like a table cell.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$2 = $1 / $1,3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$1,2 = $1,1 * $1,1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$5,1 = Sum(1:-1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$5,1 = float2nr(Sum(1:-1))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$5,3 = Sum(1,2:5,2)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$5,3 = Sum(1,2:5,2)/$5,1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$5,3 = Average(1,2:5,2)/$5,1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=9lVQ0VJY3ps" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/509bbdfb9dbfc7b79cc06f1ffc835a4564e39d40/68747470733a2f2f7261772e6769746875622e636f6d2f6178696c2f76696d2d7461626c652d6d6f64652f6d61737465722f796f75747562652e706e67" data-canonical-src="https://raw.github.com/axil/vim-table-mode/master/youtube.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-change-log" class="anchor" aria-hidden="true" href="#change-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Log&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/dhruvasagar/vim-table-mode/blob/master/CHANGELOG.md"&gt;
CHANGELOG.md &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-an-issue-" class="anchor" aria-hidden="true" href="#reporting-an-issue-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting an Issue :&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href="https://github.com/dhruvasagar/vim-table-mode/issues"&gt;Github
Issue Tracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-contributing-to-code-" class="anchor" aria-hidden="true" href="#contributing-to-code-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to code :&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fork it.&lt;/li&gt;
&lt;li&gt;Commit your changes and give your commit message some love.&lt;/li&gt;
&lt;li&gt;Push to your fork on github.&lt;/li&gt;
&lt;li&gt;Open a Pull Request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credit" class="anchor" aria-hidden="true" href="#credit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credit&lt;/h2&gt;
&lt;p&gt;I must thank Tim Pope for inspiration. The initial concept was created by him
named &lt;a href="https://gist.github.com/tpope/287147"&gt;cucumbertables.vim&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also a shout out to godlygeek who developed the incredible &lt;a href="http://github.com/godlygeek/tabular"&gt;Tabular&lt;/a&gt; plugin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-code-contributors" class="anchor" aria-hidden="true" href="#code-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Contributors&lt;/h3&gt;
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href="CONTRIBUTING.md"&gt;Contribute&lt;/a&gt;].
&lt;a href="https://github.com/dhruvasagar/vim-table-mode/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/371aeef3ad6477eb77674172a5eb26de67ba9e64/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/vim-table-mode/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-financial-contributors" class="anchor" aria-hidden="true" href="#financial-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Financial Contributors&lt;/h3&gt;
&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href="https://opencollective.com/vim-table-mode/contribute" rel="nofollow"&gt;Contribute&lt;/a&gt;]&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-individuals" class="anchor" aria-hidden="true" href="#individuals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Individuals&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/vim-table-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a961687cb8fa350b069256c3b579cbca49c525d9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f696e646976696475616c732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/vim-table-mode/individuals.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-organizations" class="anchor" aria-hidden="true" href="#organizations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Organizations&lt;/h4&gt;
&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/vim-table-mode/contribute" rel="nofollow"&gt;Contribute&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/vim-table-mode/organization/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/66e5212a3a0394b01b32476e9435deaa1fedfa6d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f6f7267616e697a6174696f6e2f302f6176617461722e737667" data-canonical-src="https://opencollective.com/vim-table-mode/organization/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vim-table-mode/organization/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f97bcc14a09d1bf880181661ae98162668daa19/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f6f7267616e697a6174696f6e2f312f6176617461722e737667" data-canonical-src="https://opencollective.com/vim-table-mode/organization/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vim-table-mode/organization/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/737ff9dce80195b9605597682e6d095b2165a496/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f6f7267616e697a6174696f6e2f322f6176617461722e737667" data-canonical-src="https://opencollective.com/vim-table-mode/organization/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vim-table-mode/organization/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b1ee9c68c93310795b0d7333b0306ee0a704f2a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f6f7267616e697a6174696f6e2f332f6176617461722e737667" data-canonical-src="https://opencollective.com/vim-table-mode/organization/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vim-table-mode/organization/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8640dadc9c91aab510839d7b21baa586196e7e0/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f6f7267616e697a6174696f6e2f342f6176617461722e737667" data-canonical-src="https://opencollective.com/vim-table-mode/organization/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vim-table-mode/organization/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc9cf003f3e9da54f391e3698a0096046b329c43/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f6f7267616e697a6174696f6e2f352f6176617461722e737667" data-canonical-src="https://opencollective.com/vim-table-mode/organization/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vim-table-mode/organization/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a2aad3f08d2a43047c84852514d8d1c11b8f6157/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f6f7267616e697a6174696f6e2f362f6176617461722e737667" data-canonical-src="https://opencollective.com/vim-table-mode/organization/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vim-table-mode/organization/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7878756dba89d269ca67139845768aad8b16277b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f6f7267616e697a6174696f6e2f372f6176617461722e737667" data-canonical-src="https://opencollective.com/vim-table-mode/organization/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vim-table-mode/organization/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e2d98c85df8017f8c5c1d1fbd49e3935f664cbf5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f6f7267616e697a6174696f6e2f382f6176617461722e737667" data-canonical-src="https://opencollective.com/vim-table-mode/organization/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vim-table-mode/organization/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dce733a3d51cefec37781434afb7d08ab651e3db/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76696d2d7461626c652d6d6f64652f6f7267616e697a6174696f6e2f392f6176617461722e737667" data-canonical-src="https://opencollective.com/vim-table-mode/organization/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dhruvasagar</author><guid isPermaLink="false">https://github.com/dhruvasagar/vim-table-mode</guid><pubDate>Sat, 01 Feb 2020 00:20:00 GMT</pubDate></item><item><title>junegunn/goyo.vim #21 in Vim script, Today</title><link>https://github.com/junegunn/goyo.vim</link><description>&lt;p&gt;&lt;i&gt;:tulip: Distraction-free writing in Vim&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-goyovim-고요" class="anchor" aria-hidden="true" href="#goyovim-고요"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;goyo.vim (&lt;a href="http://en.wiktionary.org/wiki/%EA%B3%A0%EC%9A%94%ED%95%98%EB%8B%A4" rel="nofollow"&gt;고요&lt;/a&gt;)&lt;/h1&gt;
&lt;p&gt;Distraction-free writing in Vim.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/58569256e607d63a1c6c930d64d80b8d93e8e8c1/68747470733a2f2f7261772e6769746875622e636f6d2f6a756e6567756e6e2f692f6d61737465722f676f796f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/58569256e607d63a1c6c930d64d80b8d93e8e8c1/68747470733a2f2f7261772e6769746875622e636f6d2f6a756e6567756e6e2f692f6d61737465722f676f796f2e706e67" alt="" data-canonical-src="https://raw.github.com/junegunn/i/master/goyo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Color scheme: &lt;a href="https://github.com/junegunn/seoul256.vim"&gt;seoul256&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Best served with &lt;a href="https://github.com/junegunn/limelight.vim"&gt;limelight.vim&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Use your favorite plugin manager.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;Plug 'junegunn/goyo.vim'&lt;/code&gt; to .vimrc&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;:PlugInstall&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:Goyo&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Toggle Goyo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:Goyo [dimension]&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Turn on or resize Goyo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:Goyo!&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Turn Goyo off&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The window can be resized with the usual &lt;code&gt;[count]&amp;lt;CTRL-W&amp;gt;&lt;/code&gt; + &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;,
&lt;code&gt;-&lt;/code&gt; keys, and &lt;code&gt;&amp;lt;CTRL-W&amp;gt;&lt;/code&gt; + &lt;code&gt;=&lt;/code&gt; will resize it back to the initial size.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dimension-expression" class="anchor" aria-hidden="true" href="#dimension-expression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dimension expression&lt;/h3&gt;
&lt;p&gt;The expected format of a dimension expression is
&lt;code&gt;[WIDTH][XOFFSET][x[HEIGHT][YOFFSET]]&lt;/code&gt;. &lt;code&gt;XOFFSET&lt;/code&gt; and &lt;code&gt;YOFFSET&lt;/code&gt; should be
prefixed by &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;. Each component can be given in percentage.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Width&lt;/span&gt;
Goyo &lt;span class="pl-c1"&gt;120&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Height&lt;/span&gt;
Goyo x30

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Both&lt;/span&gt;
Goyo &lt;span class="pl-c1"&gt;120&lt;/span&gt;x30

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; In percentage&lt;/span&gt;
Goyo &lt;span class="pl-c1"&gt;120&lt;/span&gt;x50&lt;span class="pl-k"&gt;%&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; With offsets&lt;/span&gt;
Goyo &lt;span class="pl-c1"&gt;50&lt;/span&gt;&lt;span class="pl-k"&gt;%+&lt;/span&gt;&lt;span class="pl-c1"&gt;25&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;x50&lt;span class="pl-k"&gt;%&lt;/span&gt;&lt;span class="pl-c1"&gt;-25&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;g:goyo_width&lt;/code&gt; (default: 80)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g:goyo_height&lt;/code&gt; (default: 85%)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g:goyo_linenr&lt;/code&gt; (default: 0)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-callbacks" class="anchor" aria-hidden="true" href="#callbacks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Callbacks&lt;/h3&gt;
&lt;p&gt;By default, &lt;a href="https://github.com/bling/vim-airline"&gt;vim-airline&lt;/a&gt;,
&lt;a href="https://github.com/Lokaltog/vim-powerline"&gt;vim-powerline&lt;/a&gt;,
&lt;a href="https://github.com/Lokaltog/powerline"&gt;powerline&lt;/a&gt;,
&lt;a href="https://github.com/itchyny/lightline.vim"&gt;lightline.vim&lt;/a&gt;,
&lt;a href="https://github.com/mhinz/vim-signify"&gt;vim-signify&lt;/a&gt;,
and &lt;a href="https://github.com/airblade/vim-gitgutter"&gt;vim-gitgutter&lt;/a&gt; are temporarily
disabled while in Goyo mode.&lt;/p&gt;
&lt;p&gt;If you have other plugins that you want to disable/enable, or if you want to
change the default settings of Goyo window, you can set up custom routines
to be triggered on &lt;code&gt;GoyoEnter&lt;/code&gt; and &lt;code&gt;GoyoLeave&lt;/code&gt; events.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;goyo_enter&lt;/span&gt;()
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;executable&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tmux&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;strlen&lt;/span&gt;(&lt;span class="pl-c1"&gt;$TMUX&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;silent&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;tmux &lt;span class="pl-c1"&gt;set&lt;/span&gt; status &lt;span class="pl-c1"&gt;off&lt;/span&gt;
    &lt;span class="pl-c1"&gt;silent&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;tmux &lt;span class="pl-c1"&gt;list&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;panes &lt;span class="pl-k"&gt;-&lt;/span&gt;F &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\#F&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; | &lt;span class="pl-c1"&gt;grep&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;q&lt;/span&gt; Z &lt;span class="pl-k"&gt;||&lt;/span&gt; tmux &lt;span class="pl-c1"&gt;resize&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;pane &lt;span class="pl-k"&gt;-&lt;/span&gt;Z
  &lt;span class="pl-k"&gt;endif&lt;/span&gt;
  &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;noshowmode&lt;/span&gt;
  &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;noshowcmd&lt;/span&gt;
  &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;scrolloff&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;999&lt;/span&gt;
  Limelight
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;goyo_leave&lt;/span&gt;()
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;executable&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tmux&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-en"&gt;strlen&lt;/span&gt;(&lt;span class="pl-c1"&gt;$TMUX&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;silent&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;tmux &lt;span class="pl-c1"&gt;set&lt;/span&gt; status &lt;span class="pl-c1"&gt;on&lt;/span&gt;
    &lt;span class="pl-c1"&gt;silent&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;tmux &lt;span class="pl-c1"&gt;list&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;panes &lt;span class="pl-k"&gt;-&lt;/span&gt;F &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\#F&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; | &lt;span class="pl-c1"&gt;grep&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;q&lt;/span&gt; Z &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; tmux &lt;span class="pl-c1"&gt;resize&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;pane &lt;span class="pl-k"&gt;-&lt;/span&gt;Z
  &lt;span class="pl-k"&gt;endif&lt;/span&gt;
  &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;showmode&lt;/span&gt;
  &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;showcmd&lt;/span&gt;
  &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;scrolloff&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;
  Limelight&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; GoyoEnter nested &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;SID&amp;gt;&lt;/span&gt;&lt;span class="pl-en"&gt;goyo_enter&lt;/span&gt;()
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; GoyoLeave nested &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;SID&amp;gt;&lt;/span&gt;&lt;span class="pl-en"&gt;goyo_leave&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More examples can be found here:
&lt;a href="https://github.com/junegunn/goyo.vim/wiki/Customization"&gt;Customization&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-inspiration" class="anchor" aria-hidden="true" href="#inspiration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inspiration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bilalq/lite-dfm"&gt;LiteDFM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.mikewest.org/vimroom/" rel="nofollow"&gt;VimRoom&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-pros" class="anchor" aria-hidden="true" href="#pros"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pros.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Works well with splits. Doesn't mess up with the current window arrangement&lt;/li&gt;
&lt;li&gt;Works well with popular statusline plugins&lt;/li&gt;
&lt;li&gt;Prevents accessing the empty windows around the central buffer&lt;/li&gt;
&lt;li&gt;Can be closed with any of &lt;code&gt;:q[uit]&lt;/code&gt;, &lt;code&gt;:clo[se]&lt;/code&gt;, &lt;code&gt;:tabc[lose]&lt;/code&gt;, or &lt;code&gt;:Goyo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Can dynamically change the width of the window&lt;/li&gt;
&lt;li&gt;Adjusts its colors when color scheme is changed&lt;/li&gt;
&lt;li&gt;Realigns the window when the terminal (or window) is resized or when the size
of the font is changed&lt;/li&gt;
&lt;li&gt;Correctly hides colorcolumns and Emojis in statusline&lt;/li&gt;
&lt;li&gt;Highly customizable with callbacks&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>junegunn</author><guid isPermaLink="false">https://github.com/junegunn/goyo.vim</guid><pubDate>Sat, 01 Feb 2020 00:21:00 GMT</pubDate></item><item><title>plasticboy/vim-markdown #22 in Vim script, Today</title><link>https://github.com/plasticboy/vim-markdown</link><description>&lt;p&gt;&lt;i&gt;Markdown Vim Mode&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vim-markdown" class="anchor" aria-hidden="true" href="#vim-markdown"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim Markdown&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/plasticboy/vim-markdown" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/616cdca214d6ac60e1972d4b216d48f08b3f3f19/68747470733a2f2f7472617669732d63692e6f72672f706c6173746963626f792f76696d2d6d61726b646f776e2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/plasticboy/vim-markdown.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Syntax highlighting, matching rules and mappings for &lt;a href="http://daringfireball.net/projects/markdown/" rel="nofollow"&gt;the original Markdown&lt;/a&gt; and extensions.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#basic-usage"&gt;Basic usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#options"&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mappings"&gt;Mappings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#commands"&gt;Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;If you use &lt;a href="https://github.com/gmarik/vundle"&gt;Vundle&lt;/a&gt;, add the following lines to your &lt;code&gt;~/.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Plugin&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;godlygeek/tabular&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Plugin&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;plasticboy/vim-markdown&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;tabular&lt;/code&gt; plugin must come &lt;em&gt;before&lt;/em&gt; &lt;code&gt;vim-markdown&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then run inside Vim:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:&lt;span class="pl-c1"&gt;so&lt;/span&gt; &lt;span class="pl-c1"&gt;~/.vimrc&lt;/span&gt;
:PluginInstall&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you use &lt;a href="https://github.com/tpope/vim-pathogen"&gt;Pathogen&lt;/a&gt;, do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/bundle
git clone https://github.com/plasticboy/vim-markdown.git&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To install without Pathogen using the Debian &lt;a href="http://packages.qa.debian.org/v/vim-addon-manager.html" rel="nofollow"&gt;vim-addon-manager&lt;/a&gt;, do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/plasticboy/vim-markdown.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; vim-markdown
sudo make install
vim-addon-manager install markdown&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are not using any package manager, download the &lt;a href="https://github.com/plasticboy/vim-markdown/archive/master.tar.gz"&gt;tarball&lt;/a&gt; and do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim
tar --strip=1 -zxf vim-markdown-master.tar.gz&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-folding" class="anchor" aria-hidden="true" href="#folding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Folding&lt;/h3&gt;
&lt;p&gt;Folding is enabled for headers by default.&lt;/p&gt;
&lt;p&gt;The following commands are useful to open and close folds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;zr&lt;/code&gt;: reduces fold level throughout the buffer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zR&lt;/code&gt;: opens all folds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zm&lt;/code&gt;: increases fold level throughout the buffer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zM&lt;/code&gt;: folds everything all the way&lt;/li&gt;
&lt;li&gt;&lt;code&gt;za&lt;/code&gt;: open a fold your cursor is on&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zA&lt;/code&gt;: open a fold your cursor is on recursively&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zc&lt;/code&gt;: close a fold your cursor is on&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zC&lt;/code&gt;: close a fold your cursor is on recursively&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#options"&gt;Options&lt;/a&gt; are available to disable folding or change folding style.&lt;/p&gt;
&lt;p&gt;Try &lt;code&gt;:help fold-expr&lt;/code&gt; and &lt;code&gt;:help fold-commands&lt;/code&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-concealing" class="anchor" aria-hidden="true" href="#concealing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concealing&lt;/h3&gt;
&lt;p&gt;Concealing is set for some syntax such as bold, italic, code block and link.&lt;/p&gt;
&lt;p&gt;Concealing lets you conceal text with other text. The actual source text is not modified. If you put your cursor on the concealed line, the conceal goes away.&lt;/p&gt;
&lt;p&gt;&lt;a href="#options"&gt;Options&lt;/a&gt; are available to disable or change concealing.&lt;/p&gt;
&lt;p&gt;Try &lt;code&gt;:help concealcursor&lt;/code&gt; and &lt;code&gt;:help conceallevel&lt;/code&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-options" class="anchor" aria-hidden="true" href="#options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Options&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-disable-folding" class="anchor" aria-hidden="true" href="#disable-folding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disable Folding&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_folding_disabled&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add the following line to your &lt;code&gt;.vimrc&lt;/code&gt; to disable the folding configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_folding_disabled = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This option only controls Vim Markdown specific folding configuration.&lt;/p&gt;
&lt;p&gt;To enable/disable folding use Vim's standard folding configuration.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set [no]foldenable
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-change-fold-style" class="anchor" aria-hidden="true" href="#change-fold-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change fold style&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_folding_style_pythonic&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To fold in a style like &lt;a href="https://github.com/klen/python-mode"&gt;python-mode&lt;/a&gt;, add the following to your &lt;code&gt;.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_folding_style_pythonic = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_folding_level&lt;/code&gt; setting (default 1) is set to &lt;code&gt;foldlevel&lt;/code&gt;.
Thus level 1 heading which is served as a document title is expanded by default.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_override_foldtext&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To prevent foldtext from being set add the following to your &lt;code&gt;.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_override_foldtext = 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-set-header-folding-level" class="anchor" aria-hidden="true" href="#set-header-folding-level"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Set header folding level&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_folding_level&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Folding level is a number between 1 and 6. By default, if not specified, it is set to 1.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_folding_level = 6
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tip: it can be changed on the fly with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:let g:vim_markdown_folding_level = 1
:edit
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disable-default-key-mappings" class="anchor" aria-hidden="true" href="#disable-default-key-mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disable Default Key Mappings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_no_default_key_mappings&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add the following line to your &lt;code&gt;.vimrc&lt;/code&gt; to disable default key mappings:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_no_default_key_mappings = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also map them by yourself with &lt;code&gt;&amp;lt;Plug&amp;gt;&lt;/code&gt; mappings.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-enable-toc-window-auto-fit" class="anchor" aria-hidden="true" href="#enable-toc-window-auto-fit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enable TOC window auto-fit&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_toc_autofit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Allow for the TOC window to auto-fit when it's possible for it to shrink.
It never increases its default size (half screen), it only shrinks.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_toc_autofit = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-text-emphasis-restriction-to-single-lines" class="anchor" aria-hidden="true" href="#text-emphasis-restriction-to-single-lines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Text emphasis restriction to single-lines&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_emphasis_multiline&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;By default text emphasis works across multiple lines until a closing token is found. However, it's possible to restrict text emphasis to a single line (i.e., for it to be applied a closing token must be found on the same line). To do so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_emphasis_multiline = 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-syntax-concealing" class="anchor" aria-hidden="true" href="#syntax-concealing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Syntax Concealing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_conceal&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Concealing is set for some syntax.&lt;/p&gt;
&lt;p&gt;For example, conceal &lt;code&gt;[link text](link url)&lt;/code&gt; as just &lt;code&gt;link text&lt;/code&gt;.
Also, &lt;code&gt;_italic_&lt;/code&gt; and &lt;code&gt;*italic*&lt;/code&gt; will conceal to just &lt;em&gt;italic&lt;/em&gt;.
Similarly &lt;code&gt;__bold__&lt;/code&gt;, &lt;code&gt;**bold**&lt;/code&gt;, &lt;code&gt;___italic bold___&lt;/code&gt;, and &lt;code&gt;***italic bold***&lt;/code&gt;
will conceal to just &lt;strong&gt;bold&lt;/strong&gt;, &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;&lt;strong&gt;italic bold&lt;/strong&gt;&lt;/em&gt;, and &lt;em&gt;&lt;strong&gt;italic bold&lt;/strong&gt;&lt;/em&gt; respectively.&lt;/p&gt;
&lt;p&gt;To enable conceal use Vim's standard conceal configuration.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set conceallevel=2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To disable conceal regardless of &lt;code&gt;conceallevel&lt;/code&gt; setting, add the following to your &lt;code&gt;.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_conceal = 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To disable math conceal with LaTeX math syntax enabled, add the following to your &lt;code&gt;.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:tex_conceal = ""
let g:vim_markdown_math = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_conceal_code_blocks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Disabling conceal for code fences requires an additional setting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_conceal_code_blocks = 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-fenced-code-block-languages" class="anchor" aria-hidden="true" href="#fenced-code-block-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fenced code block languages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_fenced_languages&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can use filetype name as fenced code block languages for syntax highlighting.
If you want to use different name from filetype, you can add it in your &lt;code&gt;.vimrc&lt;/code&gt; like so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_fenced_languages = ['csharp=cs']
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will cause the following to be highlighted using the &lt;code&gt;cs&lt;/code&gt; filetype syntax.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```csharp
...
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Default is &lt;code&gt;['c++=cpp', 'viml=vim', 'bash=sh', 'ini=dosini']&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-follow-named-anchors" class="anchor" aria-hidden="true" href="#follow-named-anchors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Follow named anchors&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_follow_anchor&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This feature allows the &lt;code&gt;ge&lt;/code&gt; command to follow named anchors in links of the form
&lt;code&gt;file#anchor&lt;/code&gt; or just &lt;code&gt;#anchor&lt;/code&gt;, where file may omit the &lt;code&gt;.md&lt;/code&gt; extension as
usual. Two variables control its operation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_follow_anchor = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This tells vim-markdown whether to attempt to follow a named anchor in a link or
not. When it is 1, and only if a link can be split in two parts by the pattern
'#', then the first part is interpreted as the file and the second one as the
named anchor. This also includes urls of the form &lt;code&gt;#anchor&lt;/code&gt;, for which the first
part is considered empty, meaning that the target file is the current one. After
the file is opened, the anchor will be searched.&lt;/p&gt;
&lt;p&gt;Default is &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_anchorexpr&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_anchorexpr = "'&amp;lt;&amp;lt;'.v:anchor.'&amp;gt;&amp;gt;'"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This expression will be evaluated substituting &lt;code&gt;v:anchor&lt;/code&gt; with a quoted string
that contains the anchor to visit. The result of the evaluation will become the
real anchor to search in the target file. This is useful in order to convert
anchors of the form, say, &lt;code&gt;my-section-title&lt;/code&gt; to searches of the form &lt;code&gt;My Section Title&lt;/code&gt; or &lt;code&gt;&amp;lt;&amp;lt;my-section-title&amp;gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Default is &lt;code&gt;''&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-syntax-extensions" class="anchor" aria-hidden="true" href="#syntax-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Syntax extensions&lt;/h3&gt;
&lt;p&gt;The following options control which syntax extensions will be turned on. They are off by default.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-latex-math" class="anchor" aria-hidden="true" href="#latex-math"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LaTeX math&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_math&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Used as &lt;code&gt;$x^2$&lt;/code&gt;, &lt;code&gt;$$x^2$$&lt;/code&gt;, escapable as &lt;code&gt;\$x\$&lt;/code&gt; and &lt;code&gt;\$\$x\$\$&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_math = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-yaml-front-matter" class="anchor" aria-hidden="true" href="#yaml-front-matter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;YAML Front Matter&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_frontmatter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Highlight YAML front matter as used by Jekyll or &lt;a href="https://gohugo.io/content/front-matter/" rel="nofollow"&gt;Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_frontmatter = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-toml-front-matter" class="anchor" aria-hidden="true" href="#toml-front-matter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TOML Front Matter&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_toml_frontmatter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Highlight TOML front matter as used by &lt;a href="https://gohugo.io/content/front-matter/" rel="nofollow"&gt;Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;TOML syntax highlight requires &lt;a href="https://github.com/cespare/vim-toml"&gt;vim-toml&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_toml_frontmatter = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-json-front-matter" class="anchor" aria-hidden="true" href="#json-front-matter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Front Matter&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_json_frontmatter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Highlight JSON front matter as used by &lt;a href="https://gohugo.io/content/front-matter/" rel="nofollow"&gt;Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;JSON syntax highlight requires &lt;a href="https://github.com/elzr/vim-json"&gt;vim-json&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_json_frontmatter = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-strikethrough" class="anchor" aria-hidden="true" href="#strikethrough"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strikethrough&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_strikethrough&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Strikethrough uses two tildes. &lt;code&gt;~~Scratch this.~~&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_strikethrough = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-adjust-new-list-item-indent" class="anchor" aria-hidden="true" href="#adjust-new-list-item-indent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adjust new list item indent&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_new_list_item_indent&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can adjust a new list indent. For example, you insert a single line like below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* item1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then if you type &lt;code&gt;o&lt;/code&gt; to insert new line in vim and type &lt;code&gt;* item2&lt;/code&gt;, the result will be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* item1
    * item2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;vim-markdown automatically insert the indent. By default, the number of spaces of indent is 4. If you'd like to change the number as 2, just write:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_new_list_item_indent = 2
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-do-not-require-md-extensions-for-markdown-links" class="anchor" aria-hidden="true" href="#do-not-require-md-extensions-for-markdown-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Do not require .md extensions for Markdown links&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_no_extensions_in_markdown&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you want to have a link like this &lt;code&gt;[link text](link-url)&lt;/code&gt; and follow it for editing in vim using the &lt;code&gt;ge&lt;/code&gt; command, but have it open the file "link-url.md" instead of the file "link-url", then use this option:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_no_extensions_in_markdown = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is super useful for GitLab and GitHub wiki repositories.&lt;/p&gt;
&lt;p&gt;Normal behaviour would be that vim-markup required you to do this &lt;code&gt;[link text](link-url.md)&lt;/code&gt;, but this is not how the Gitlab and GitHub wiki repositories work. So this option adds some consistency between the two.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-auto-write-when-following-link" class="anchor" aria-hidden="true" href="#auto-write-when-following-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto-write when following link&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_autowrite&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you follow a link like this &lt;code&gt;[link text](link-url)&lt;/code&gt; using the &lt;code&gt;ge&lt;/code&gt; shortcut, this option will automatically save any edits you made before moving you:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_autowrite = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-change-default-file-extension" class="anchor" aria-hidden="true" href="#change-default-file-extension"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change default file extension&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_auto_extension_ext&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you would like to use a file extension other than &lt;code&gt;.md&lt;/code&gt; you may do so using the &lt;code&gt;vim_markdown_auto_extension_ext&lt;/code&gt; variable:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_auto_extension_ext = 'txt'
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-do-not-automatically-insert-bulletpoints" class="anchor" aria-hidden="true" href="#do-not-automatically-insert-bulletpoints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Do not automatically insert bulletpoints&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_auto_insert_bullets&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Automatically inserting bulletpoints can lead to problems when wrapping text
(see issue #232 for details), so it can be disabled:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_auto_insert_bullets = 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In that case, you probably also want to set the new list item indent to 0 as
well, or you will have to remove an indent each time you add a new list item:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_new_list_item_indent = 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-change-how-to-open-new-files" class="anchor" aria-hidden="true" href="#change-how-to-open-new-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change how to open new files&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g:vim_markdown_edit_url_in&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;By default when following a link the target file will be opened in your current buffer.  This behavior can change if you prefer using splits or tabs by using the &lt;code&gt;vim_markdown_edit_url_in&lt;/code&gt; variable.  Possible values are &lt;code&gt;tab&lt;/code&gt;, &lt;code&gt;vsplit&lt;/code&gt;, &lt;code&gt;hsplit&lt;/code&gt;, &lt;code&gt;current&lt;/code&gt; opening in a new tab, vertical split, horizontal split, and current buffer respectively.  Defaults to current buffer if not set:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:vim_markdown_edit_url_in = 'tab'
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-mappings" class="anchor" aria-hidden="true" href="#mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mappings&lt;/h2&gt;
&lt;p&gt;The following work on normal and visual modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gx&lt;/code&gt;: open the link under the cursor in the same browser as the standard &lt;code&gt;gx&lt;/code&gt; command. &lt;code&gt;&amp;lt;Plug&amp;gt;Markdown_OpenUrlUnderCursor&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The standard &lt;code&gt;gx&lt;/code&gt; is extended by allowing you to put your cursor anywhere inside a link.&lt;/p&gt;
&lt;p&gt;For example, all the following cursor positions will work:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Example](http://example.com)
^  ^    ^^   ^       ^
1  2    34   5       6

&amp;lt;http://example.com&amp;gt;
^  ^               ^
1  2               3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Known limitation: does not work for links that span multiple lines.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ge&lt;/code&gt;: open the link under the cursor in Vim for editing. Useful for relative markdown links. &lt;code&gt;&amp;lt;Plug&amp;gt;Markdown_EditUrlUnderCursor&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The rules for the cursor position are the same as the &lt;code&gt;gx&lt;/code&gt; command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;]]&lt;/code&gt;: go to next header. &lt;code&gt;&amp;lt;Plug&amp;gt;Markdown_MoveToNextHeader&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[[&lt;/code&gt;: go to previous header. Contrast with &lt;code&gt;]c&lt;/code&gt;. &lt;code&gt;&amp;lt;Plug&amp;gt;Markdown_MoveToPreviousHeader&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;][&lt;/code&gt;: go to next sibling header if any. &lt;code&gt;&amp;lt;Plug&amp;gt;Markdown_MoveToNextSiblingHeader&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[]&lt;/code&gt;: go to previous sibling header if any. &lt;code&gt;&amp;lt;Plug&amp;gt;Markdown_MoveToPreviousSiblingHeader&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;]c&lt;/code&gt;: go to Current header. &lt;code&gt;&amp;lt;Plug&amp;gt;Markdown_MoveToCurHeader&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;]u&lt;/code&gt;: go to parent header (Up). &lt;code&gt;&amp;lt;Plug&amp;gt;Markdown_MoveToParentHeader&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This plugin follows the recommended Vim plugin mapping interface, so to change the map &lt;code&gt;]u&lt;/code&gt; to &lt;code&gt;asdf&lt;/code&gt;, add to your &lt;code&gt;.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map asdf &amp;lt;Plug&amp;gt;Markdown_MoveToParentHeader
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To disable a map use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;Plug&amp;gt; &amp;lt;Plug&amp;gt;Markdown_MoveToParentHeader
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h2&gt;
&lt;p&gt;The following requires &lt;code&gt;:filetype plugin on&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:HeaderDecrease&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Decrease level of all headers in buffer: &lt;code&gt;h2&lt;/code&gt; to &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;h3&lt;/code&gt; to &lt;code&gt;h2&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;If range is given, only operate in the range.&lt;/p&gt;
&lt;p&gt;If an &lt;code&gt;h1&lt;/code&gt; would be decreased, abort.&lt;/p&gt;
&lt;p&gt;For simplicity of implementation, Setex headers are converted to Atx.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:HeaderIncrease&lt;/code&gt;: Analogous to &lt;code&gt;:HeaderDecrease&lt;/code&gt;, but increase levels instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:SetexToAtx&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Convert all Setex style headers in buffer to Atx.&lt;/p&gt;
&lt;p&gt;If a range is given, e.g. hit &lt;code&gt;:&lt;/code&gt; from visual mode, only operate on the range.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:TableFormat&lt;/code&gt;: Format the table under the cursor &lt;a href="http://www.cirosantilli.com/markdown-style-guide/#tables" rel="nofollow"&gt;like this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Requires &lt;a href="https://github.com/godlygeek/tabular"&gt;Tabular&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The input table &lt;em&gt;must&lt;/em&gt; already have a separator line as the second line of the table.
That line only needs to contain the correct pipes &lt;code&gt;|&lt;/code&gt;, nothing else is required.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:Toc&lt;/code&gt;: create a quickfix vertical window navigable table of contents with the headers.&lt;/p&gt;
&lt;p&gt;Hit &lt;code&gt;&amp;lt;Enter&amp;gt;&lt;/code&gt; on a line to jump to the corresponding line of the markdown file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:Toch&lt;/code&gt;: Same as &lt;code&gt;:Toc&lt;/code&gt; but in an horizontal window.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:Toct&lt;/code&gt;: Same as &lt;code&gt;:Toc&lt;/code&gt; but in a new tab.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:Tocv&lt;/code&gt;: Same as &lt;code&gt;:Toc&lt;/code&gt; for symmetry with &lt;code&gt;:Toch&lt;/code&gt; and &lt;code&gt;:Tocv&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;The main contributors of vim-markdown are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ben Williams&lt;/strong&gt; (A.K.A. &lt;strong&gt;plasticboy&lt;/strong&gt;). The original developer of vim-markdown. &lt;a href="http://plasticboy.com/" rel="nofollow"&gt;Homepage&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you feel that your name should be on this list, please make a pull request listing your contributions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The MIT License (MIT)&lt;/p&gt;
&lt;p&gt;Copyright (c) 2012 Benjamin D. Williams&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>plasticboy</author><guid isPermaLink="false">https://github.com/plasticboy/vim-markdown</guid><pubDate>Sat, 01 Feb 2020 00:22:00 GMT</pubDate></item><item><title>sonph/onehalf #23 in Vim script, Today</title><link>https://github.com/sonph/onehalf</link><description>&lt;p&gt;&lt;i&gt;Clean, vibrant and pleasing color schemes for Vim, Sublime Text, iTerm, gnome-terminal and more.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-one-half---" class="anchor" aria-hidden="true" href="#one-half---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One Half ½ &lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;🎨&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="desktop_computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5a5.png"&gt;🖥&lt;/g-emoji&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/sonph/onehalf/releases"&gt;&lt;img src="https://camo.githubusercontent.com/682376e0f6063c82cfa295d2c8569a44c0c69dbf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f736f6e70682f6f6e6568616c662e7376673f7374796c653d666c61742d737175617265" alt="version tag" data-canonical-src="https://img.shields.io/github/tag/sonph/onehalf.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/sonph/onehalf/blob/master/LICENSE.txt"&gt;&lt;img src="https://camo.githubusercontent.com/920528a062862ada9b77e31d532b6c314a48e560/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f736f6e70682f6f6e6568616c662e7376673f7374796c653d666c61742d737175617265" alt="license tag" data-canonical-src="https://img.shields.io/github/license/sonph/onehalf.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://packagecontrol.io/packages/One%20Half%20Color%20Schemes" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a000c463df36ea5fa8f2b0ce51b978ee8f4bd676/68747470733a2f2f696d672e736869656c64732e696f2f7061636b616765636f6e74726f6c2f64742f4f6e6525323048616c66253230436f6c6f72253230536368656d65732e7376673f7374796c653d666c61742d737175617265" alt="package control" data-canonical-src="https://img.shields.io/packagecontrol/dt/One%20Half%20Color%20Schemes.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A color scheme for Sublime Text, (Neo)Vim, iTerm, and more. Based on Atom's One.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name: One Half&lt;/li&gt;
&lt;li&gt;Author: Son A. Pham &lt;a href="http://github.com/sonph"&gt;@sonph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Repo: &lt;a href="https://github.com/sonph/onehalf"&gt;https://github.com/sonph/onehalf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;License: MIT&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./screenshots/dark.png"&gt;&lt;img src="./screenshots/dark.png" alt="dark" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./screenshots/light.png"&gt;&lt;img src="./screenshots/light.png" alt="light" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./screenshots/desktop_dark.png"&gt;&lt;img src="./screenshots/desktop_dark.png" alt="desktop_dark" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./screenshots/desktop_light.png"&gt;&lt;img src="./screenshots/desktop_light.png" alt="desktop_light" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation--usage"&gt;Installation &amp;amp; Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing--troubleshooting--bug-reports"&gt;Contributing / Troubleshooting / Bug Reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="LICENSE.txt"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Light and dark color schemes.&lt;/li&gt;
&lt;li&gt;Support a wide range of editors and terminals for a consistent color theme.
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./sublimetext"&gt;TextMate&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./sublimetext"&gt;Sublime Text 2/3&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./vim"&gt;GVim, MacVim, NeoVim, vim-airline (GUI/true colors)&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./terminal"&gt;OS X Terminal.app&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./iterm"&gt;iTerm2&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./vim"&gt;Terminal Vim, vim-airline (256 colors)&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./gnome-terminal"&gt;Gnome Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./konsole"&gt;Konsole&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./alacritty"&gt;Alacritty&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./xcode"&gt;Xcode&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./mintty"&gt;Mintty/WSLtty&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./fluentterminal"&gt;FluentTerminal&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./windowsterminal"&gt;Windows Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="https://github.com/sharkdp/bat"&gt;bat&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="https://github.com/dylanaraps/pywal"&gt;pywal&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./putty"&gt;PuTTY&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="./kitty"&gt;Kitty&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Hyper&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; ConEmu&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; IntelliJ&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Eclipse&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; GNU Emacs&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Pygments&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Prism&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sonph/onehalf/issues/new"&gt;Add Your Suggestion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;                        light     dark
0   normal  black       #383a42   #282c34
1   normal  red         #e45649   #e06c75
2   normal  green       #50a14f   #98c379
3   normal  yellow      #c18401   #e5c07b
4   normal  blue        #0184bc   #61afef
5   normal  magenta     #a626a4   #c678dd
6   normal  cyan        #0997b3   #56b6c2
7   normal  white       #fafafa   #dcdfe4
            foreground  #383a42   #dcdfe4
            background  #fafafa   #282c34
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;All screenshots are available in the &lt;a href="./screenshots"&gt;screenshots folder&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation--usage" class="anchor" aria-hidden="true" href="#installation--usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation &amp;amp; Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-vim" class="anchor" aria-hidden="true" href="#vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim&lt;/h3&gt;
&lt;p&gt;Install with Vundle then set &lt;code&gt;colorscheme&lt;/code&gt; and &lt;code&gt;g:airline_theme&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Bundle 'sonph/onehalf', {'rtp': 'vim/'}
colorscheme onehalflight
let g:airline_theme='onehalfdark'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or if you are using lightline, set &lt;code&gt;g:lightline.colorscheme&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:lightline.colorscheme='onehalfdark'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want your vim and terminal colors to match exactly, you must enable true colors in vim.&lt;/p&gt;
&lt;p&gt;For more details and manual installation, see &lt;a href="./vim/README.md"&gt;vim README&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sublime-text-23" class="anchor" aria-hidden="true" href="#sublime-text-23"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sublime Text 2/3&lt;/h3&gt;
&lt;p&gt;Install with &lt;a href="https://packagecontrol.io/packages/One%20Half%20Color%20Schemes" rel="nofollow"&gt;Package Control&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more details and manual installation, see &lt;a href="./sublimetext/README.md"&gt;sublime text README&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-iterm2" class="anchor" aria-hidden="true" href="#iterm2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iTerm2&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Download the theme files in the &lt;a href="./iterm"&gt;iterm&lt;/a&gt; folder.&lt;/li&gt;
&lt;li&gt;Import the color schemes:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Either&lt;/em&gt; double click on the files to import.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Or&lt;/em&gt; open iTerm Preferences &amp;gt; Profiles &amp;gt; Colors &amp;gt; Color Presets &amp;gt; Import
then select the downloaded files.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Select Preferences &amp;gt; Profiles &amp;gt; Colors &amp;gt; Color Presets &amp;gt; One Half Light (Dark).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-os-x-terminalapp" class="anchor" aria-hidden="true" href="#os-x-terminalapp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OS X Terminal.app&lt;/h3&gt;
&lt;p&gt;Download the files in the &lt;a href="./terminal"&gt;terminal&lt;/a&gt; folder and simply open the files. Terminal.app will
automatically recognize and import the color schemes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pywal" class="anchor" aria-hidden="true" href="#pywal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pywal&lt;/h3&gt;
&lt;p&gt;Copy the files in the &lt;a href="./wal/colorschemes"&gt;wal/colorschemes&lt;/a&gt; folder under the matching
directories in &lt;code&gt;~/.config/wal/colorschemes&lt;/code&gt;, then enable the schemes (&lt;code&gt;-l&lt;/code&gt; is for light theme):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; wal -l --theme one-half-light
# or
&amp;gt; wal --theme one-half-dark
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contributing--troubleshooting--bug-reports" class="anchor" aria-hidden="true" href="#contributing--troubleshooting--bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing / Troubleshooting / Bug Reports&lt;/h2&gt;
&lt;p&gt;Contributions are welcome. Feel free to &lt;a href="https://github.com/sonph/onehalf/issues/new"&gt;open an issue&lt;/a&gt;
if you have problems installing and using the color schemes.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>sonph</author><guid isPermaLink="false">https://github.com/sonph/onehalf</guid><pubDate>Sat, 01 Feb 2020 00:23:00 GMT</pubDate></item><item><title>tpope/vim-sensible #24 in Vim script, Today</title><link>https://github.com/tpope/vim-sensible</link><description>&lt;p&gt;&lt;i&gt;sensible.vim: Defaults everyone can agree on&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sensiblevim" class="anchor" aria-hidden="true" href="#sensiblevim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sensible.vim&lt;/h1&gt;
&lt;p&gt;Think of sensible.vim as one step above &lt;code&gt;'nocompatible'&lt;/code&gt; mode: a universal
set of defaults that (hopefully) everyone can agree on.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you're new to Vim, you can install this as a starting point, rather than
copying some random vimrc you found.&lt;/li&gt;
&lt;li&gt;If you're pair programming and you can't agree on whose vimrc to use, this
can be your neutral territory.&lt;/li&gt;
&lt;li&gt;If you're administrating a server with an account that's not exclusively
yours, you can &lt;code&gt;scp&lt;/code&gt; this up to make things a bit more tolerable.&lt;/li&gt;
&lt;li&gt;If you're troubleshooting a plugin and need to rule out interference from
your vimrc, having this installed will ensure you still have some basic
amenities.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Install using your favorite package manager, or use Vim's built-in package
support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p ~/.vim/pack/tpope/start
cd ~/.vim/pack/tpope/start
git clone https://tpope.io/vim/sensible.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/tpope/vim-sensible/tree/master/plugin/sensible.vim"&gt;source&lt;/a&gt; for the authoritative list of features.  (Don't worry, it's
mostly &lt;code&gt;:set&lt;/code&gt; calls.)  Here's a taste:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;'backspace'&lt;/code&gt;: Backspace through anything in insert mode.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'incsearch'&lt;/code&gt;: Start searching before pressing enter.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'listchars'&lt;/code&gt;: Makes &lt;code&gt;:set list&lt;/code&gt; (visible whitespace) prettier.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'scrolloff'&lt;/code&gt;: Always show at least one line above/below the cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'autoread'&lt;/code&gt;: Autoload file changes. You can undo by pressing &lt;code&gt;u&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;runtime! macros/matchit.vim&lt;/code&gt;: Load the version of matchit.vim that ships
with Vim.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;How can I see what this plugin actually does?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;a href="https://github.com/tpope/vim-sensible/tree/master/plugin/sensible.vim"&gt;source&lt;/a&gt; is authoritative.  Use &lt;code&gt;:help 'option'&lt;/code&gt; to see the
documentation for an option.  If you install &lt;a href="https://github.com/tpope/vim-scriptease"&gt;scriptease.vim&lt;/a&gt;, you can press
&lt;code&gt;K&lt;/code&gt; on an option (or command, or function) to jump to its documentation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How can I override a setting?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Normally, sensible.vim loads after your vimrc, making it a bit tricky to
override (although you could use &lt;code&gt;after/plugin/sensible.vim&lt;/code&gt;).  If you want to
load it earlier, add the following line to your vimrc, then put your overrides
below.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;runtime! plugin/sensible.vim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Feel free to &lt;a href="http://github.com/tpope/vim-sensible/issues"&gt;let me know&lt;/a&gt; which setting you object to, so I
can reassess whether it makes sense to include it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;I want this to be a plugin nobody objects to installing.  &lt;a href="http://github.com/tpope/vim-sensible/issues"&gt;Let me
know&lt;/a&gt; if you have any objections to &lt;em&gt;anything&lt;/em&gt;.  There are a
handful of settings I figured &lt;em&gt;might&lt;/em&gt; be controversial, but I included
anyways, just to settle the question once and for all.  It won't take much
persuasion for me to remove them.  Everything else is negotiable.&lt;/p&gt;
&lt;p&gt;Feel free to ask a question if you're not sure why I've set something, as I
haven't put much effort into documenting that.&lt;/p&gt;
&lt;p&gt;I'm a stickler for &lt;a href="http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html" rel="nofollow"&gt;commit messages&lt;/a&gt;, so if you send me a pull request with
so much as a superfluous period in the subject line, I will close it without
so much as a second thought, and save my precious attention for someone who
can actually follow directions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-self-promotion" class="anchor" aria-hidden="true" href="#self-promotion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Self-Promotion&lt;/h2&gt;
&lt;p&gt;Like sensible.vim? Follow the repository on
&lt;a href="https://github.com/tpope/vim-sensible"&gt;GitHub&lt;/a&gt; and vote for it on
&lt;a href="http://www.vim.org/scripts/script.php?script_id=4391" rel="nofollow"&gt;vim.org&lt;/a&gt;. And if
you're feeling especially charitable, follow &lt;a href="http://tpo.pe/" rel="nofollow"&gt;tpope&lt;/a&gt; on
&lt;a href="http://twitter.com/tpope" rel="nofollow"&gt;Twitter&lt;/a&gt; and
&lt;a href="https://github.com/tpope"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This pairs great with &lt;a href="https://github.com/tpope/vim-sleuth"&gt;sleuth.vim&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © Tim Pope.  Distributed under the same terms as Vim itself.
See &lt;code&gt;:help license&lt;/code&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tpope</author><guid isPermaLink="false">https://github.com/tpope/vim-sensible</guid><pubDate>Sat, 01 Feb 2020 00:24:00 GMT</pubDate></item></channel></rss>