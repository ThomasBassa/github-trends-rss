<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Groovy, Today</title><link>https://github.com/trending/groovy?since=daily</link><description>The top repositories on GitHub for groovy, measured daily</description><pubDate>Tue, 28 Jan 2020 01:12:57 GMT</pubDate><lastBuildDate>Tue, 28 Jan 2020 01:12:57 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>SmartThingsCommunity/SmartThingsPublic #1 in Groovy, Today</title><link>https://github.com/SmartThingsCommunity/SmartThingsPublic</link><description>&lt;p&gt;&lt;i&gt;SmartThings open-source DeviceTypeHandlers and SmartApps code&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-smartthings-public-github-repo" class="anchor" aria-hidden="true" href="#smartthings-public-github-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SmartThings Public GitHub Repo&lt;/h1&gt;
&lt;p&gt;An official list of SmartApps and Device Types from SmartThings.&lt;/p&gt;
&lt;p&gt;Here are some links to help you get started coding right away:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.smartthings.com/en/latest/tools-and-ide/github-integration.html" rel="nofollow"&gt;GitHub-specific Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.smartthings.com" rel="nofollow"&gt;Full Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ide.smartthings.com" rel="nofollow"&gt;IDE &amp;amp; Simulator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://community.smartthings.com" rel="nofollow"&gt;Community Forums&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Follow us on the web:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Twitter: &lt;a href="http://twitter.com/smartthingsdev" rel="nofollow"&gt;http://twitter.com/smartthingsdev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Facebook: &lt;a href="http://facebook.com/smartthingsdevelopers" rel="nofollow"&gt;http://facebook.com/smartthingsdevelopers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SmartThingsCommunity</author><guid isPermaLink="false">https://github.com/SmartThingsCommunity/SmartThingsPublic</guid><pubDate>Tue, 28 Jan 2020 00:01:00 GMT</pubDate></item><item><title>ksemaev/project_template #2 in Groovy, Today</title><link>https://github.com/ksemaev/project_template</link><description>&lt;p&gt;&lt;i&gt;Typical repo for new devops project&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-project_template" class="anchor" aria-hidden="true" href="#project_template"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;project_template&lt;/h1&gt;
&lt;p&gt;Typical repo for new devops project&lt;/p&gt;
&lt;p&gt;./ansible - ansible roles for mahaging the project
./openshift - templates for openshift objects&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ksemaev</author><guid isPermaLink="false">https://github.com/ksemaev/project_template</guid><pubDate>Tue, 28 Jan 2020 00:02:00 GMT</pubDate></item><item><title>gradle/gradle #3 in Groovy, Today</title><link>https://github.com/gradle/gradle</link><description>&lt;p&gt;&lt;i&gt;Adaptable, fast automation for all&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="gradle.png"&gt;&lt;img src="gradle.png" width="350px" alt="Gradle Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gradle is a build tool with a focus on build automation and support for multi-language development. If you are building, testing, publishing, and deploying software on any platform, Gradle offers a flexible model that can support the entire development lifecycle from compiling and packaging code to publishing web sites. Gradle has been designed to support build automation across multiple languages and platforms including Java, Scala, Android, C/C++, and Groovy, and is closely integrated with development tools and continuous integration servers including Eclipse, IntelliJ, and Jenkins.&lt;/p&gt;
&lt;p&gt;For more information about Gradle, please visit: &lt;a href="https://gradle.org" rel="nofollow"&gt;https://gradle.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project adheres to the &lt;a href="https://gradle.org/conduct/" rel="nofollow"&gt;Gradle Code of Conduct&lt;/a&gt;. By participating, you are expected to uphold this code.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-downloading" class="anchor" aria-hidden="true" href="#downloading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading&lt;/h2&gt;
&lt;p&gt;You can download released versions and nightly build artifacts from: &lt;a href="https://gradle.org/downloads" rel="nofollow"&gt;https://gradle.org/downloads&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-from-source" class="anchor" aria-hidden="true" href="#installing-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing from source&lt;/h3&gt;
&lt;p&gt;To create an install from the source tree you can run either of the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew install -Pgradle_installPath=/usr/local/gradle-source-build
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will create a minimal installation; just what's needed to run Gradle (i.e. no docs).&lt;/p&gt;
&lt;p&gt;You can then build a Gradle based project with this installation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/usr/local/gradle-source-build/bin/gradle «some task»
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create a full installation (includes docs):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew installAll -Pgradle_installPath=/usr/local/gradle-source-build
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you're looking to contribute to Gradle or provide a patch/pull request, you can find more info &lt;a href="https://github.com/gradle/gradle/blob/master/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gradle</author><guid isPermaLink="false">https://github.com/gradle/gradle</guid><pubDate>Tue, 28 Jan 2020 00:03:00 GMT</pubDate></item><item><title>wardviaene/jenkins-course #4 in Groovy, Today</title><link>https://github.com/wardviaene/jenkins-course</link><description>&lt;p&gt;&lt;i&gt;This is the repository with all the resources for the Jenkins training on Udemy&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jenkins-course" class="anchor" aria-hidden="true" href="#jenkins-course"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;jenkins-course&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;This is the course material for the Jenkins Course on Udemy. See &lt;a href="https://www.udemy.com/learn-devops-ci-cd-with-jenkins-using-pipelines-and-docker/?couponCode=JENKINS_GIT" rel="nofollow"&gt;https://www.udemy.com/learn-devops-ci-cd-with-jenkins-using-pipelines-and-docker/?couponCode=JENKINS_GIT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>wardviaene</author><guid isPermaLink="false">https://github.com/wardviaene/jenkins-course</guid><pubDate>Tue, 28 Jan 2020 00:04:00 GMT</pubDate></item><item><title>asciidoctor/asciidoctor-gradle-plugin #5 in Groovy, Today</title><link>https://github.com/asciidoctor/asciidoctor-gradle-plugin</link><description>&lt;p&gt;&lt;i&gt;A Gradle plugin that uses Asciidoctor via JRuby to process AsciiDoc source files within the project.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="adoc" data-path="README.adoc"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-asciidoctor-gradle-plugin" class="anchor" aria-hidden="true" href="#asciidoctor-gradle-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asciidoctor Gradle Plugin&lt;/h1&gt;
&lt;div&gt;
&lt;p&gt;&lt;span&gt;&lt;a href="https://travis-ci.org/asciidoctor/asciidoctor-gradle-plugin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15efae9ecf5f152413c77b1d0f7a8b1ccf3ac923/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6173636969646f63746f722f6173636969646f63746f722d677261646c652d706c7567696e2f646576656c6f706d656e742d332e782e737667" alt="Build Status" data-canonical-src="http://img.shields.io/travis/asciidoctor/asciidoctor-gradle-plugin/development-3.x.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span&gt;&lt;a href="https://ci.appveyor.com/project/asciidoctor/asciidoctor-gradle-plugin/branch/development-3.x" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/135ae818c7c2cb73e75f240cfa75a4851d44ab1e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f64623130327270687375356c766976362f6272616e63682f646576656c6f706d656e742d332e783f7376673d747275652670617373696e67546578743d646576656c6f706d656e742d332e782532302d2532304f4b266661696c696e67546578743d646576656c6f706d656e742d332e782532302d2532304661696c732670656e64696e67546578743d646576656c6f706d656e742d332e782532302d25323050656e64696e67" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/db102rphsu5lviv6/branch/development-3.x?svg=true&amp;amp;passingText=development-3.x%20-%20OK&amp;amp;failingText=development-3.x%20-%20Fails&amp;amp;pendingText=development-3.x%20-%20Pending" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span&gt;&lt;a href="https://coveralls.io/r/asciidoctor/asciidoctor-gradle-plugin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7473a3472c8fe52726ec5b82a6cb2f2c0dfa0972/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6173636969646f63746f722f6173636969646f63746f722d677261646c652d706c7567696e2f646576656c6f706d656e742d332e782e737667" alt="Coverage Status" data-canonical-src="http://img.shields.io/coveralls/asciidoctor/asciidoctor-gradle-plugin/development-3.x.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0.txt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7886620a5008c48b2493d4dbdfc413f8a06c7bdc/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d415346322d626c75652e737667" alt="Apache License 2" data-canonical-src="http://img.shields.io/badge/license-ASF2-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span&gt;&lt;a href="https://gitlab.com/asciidoctor/asciidoctor-gradle-plugin/commits/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2a725a3b958a985a899338c3688c63e2bdd8c6ca/68747470733a2f2f6769746c61622e636f6d2f6173636969646f63746f722f6173636969646f63746f722d677261646c652d706c7567696e2f6261646765732f6d61737465722f706970656c696e652e737667" alt="pipeline" title="pipeline status" data-canonical-src="https://gitlab.com/asciidoctor/asciidoctor-gradle-plugin/badges/master/pipeline.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span&gt;&lt;a href="https://github.com/asciidoctor/asciidoctor-gradle-plugin/actions"&gt;&lt;img src="https://github.com/asciidoctor/asciidoctor-gradle-plugin/workflows/Build/badge.svg" alt="GitHub Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;The Asciidoctor Gradle Plugin is the official means of using &lt;a href="http://asciidoctor.org" rel="nofollow"&gt;Asciidoctor&lt;/a&gt; to convert all your &lt;a href="http://asciidoc.org" rel="nofollow"&gt;AsciiDoc&lt;/a&gt; documentation using &lt;a href="http://gradle.org/" rel="nofollow"&gt;Gradle&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;dl&gt;
&lt;dt&gt;Documentation&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;We are migrating our documentation to the new Asciidoctor Antora-based site when it is ready. In the meantime you can read a snapshot of the new documentation at &lt;a href="https://asciidoctor.github.io/asciidoctor-gradle-plugin/development-3.x" rel="nofollow"&gt;https://asciidoctor.github.io/asciidoctor-gradle-plugin/development-3.x&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Structure&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;code&gt;master&lt;/code&gt; now represents the code for the latest 2.x release of these plugins. Development for for 2.x is against the &lt;a href="https://github.com/asciidoctor/asciidoctor-gradle-plugin/tree/development-2.0"&gt;development-2.0&lt;/a&gt; branch. PRs are preferably taking against that branch. The 1.5.x series of the plugin is now in maintenance only mode. PRs for that should be raised against the &lt;a href="https://github.com/asciidoctor/asciidoctor-gradle-plugin/tree/maintenance-1.5"&gt;maintenance-1.5&lt;/a&gt; branch. PRs for the next generation work could preferably be raised against &lt;a href="https://github.com/asciidoctor/asciidoctor-gradle-plugin/tree/development-3.x"&gt;development-3.x&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;</description><author>asciidoctor</author><guid isPermaLink="false">https://github.com/asciidoctor/asciidoctor-gradle-plugin</guid><pubDate>Tue, 28 Jan 2020 00:05:00 GMT</pubDate></item><item><title>rundeck/rundeck #6 in Groovy, Today</title><link>https://github.com/rundeck/rundeck</link><description>&lt;p&gt;&lt;i&gt;Enable Self-Service Operations: Give specific users access to your existing tools, services, and scripts&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rundeck" class="anchor" aria-hidden="true" href="#rundeck"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rundeck&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Travis&lt;/th&gt;
&lt;th&gt;Deb&lt;/th&gt;
&lt;th&gt;RPM&lt;/th&gt;
&lt;th&gt;War&lt;/th&gt;
&lt;th&gt;Jar&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://travis-ci.org/rundeck/rundeck/builds#" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2dda49a2885d03097bc7cef1a981e4bfb9f5e532/68747470733a2f2f7472617669732d63692e6f72672f72756e6465636b2f72756e6465636b2e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://travis-ci.org/rundeck/rundeck.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bintray.com/rundeck/rundeck-deb/rundeck/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2df5f9b20d0f95d6bbc4113d5182a59a955466a2/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f72756e6465636b2f72756e6465636b2d6465622f72756e6465636b2f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/rundeck/rundeck-deb/rundeck/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bintray.com/rundeck/rundeck-rpm/rundeck/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/597f19bcb89c0617f4ace1c700864befe0310e41/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f72756e6465636b2f72756e6465636b2d72706d2f72756e6465636b2f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/rundeck/rundeck-rpm/rundeck/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bintray.com/rundeck/rundeck-maven/rundeck/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/38451784d92f325647d975b407376d90570ab513/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f72756e6465636b2f72756e6465636b2d6d6176656e2f72756e6465636b2f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/rundeck/rundeck-maven/rundeck/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bintray.com/rundeck/rundeck-maven/rundeck-launcher/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/219c136268d4031917fdf022c2c30cf0b06cb410/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f72756e6465636b2f72756e6465636b2d6d6176656e2f72756e6465636b2d6c61756e636865722f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/rundeck/rundeck-maven/rundeck-launcher/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Rundeck is an open source automation service with a web console,
command line tools and a WebAPI.
It lets you easily run automation tasks across a set of nodes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Site: &lt;a href="http://rundeck.org" rel="nofollow"&gt;http://rundeck.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Latest documentation: &lt;a href="http://rundeck.org/docs/" rel="nofollow"&gt;http://rundeck.org/docs/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get Help: &lt;a href="http://rundeck.org/help.html" rel="nofollow"&gt;http://rundeck.org/help.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="RELEASE.md"&gt;Release Notes&lt;/a&gt; for the latest version information.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-to-build" class="anchor" aria-hidden="true" href="#to-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To Build:&lt;/h1&gt;
&lt;p&gt;Primary build is supported with gradle. More info in the &lt;a href="https://github.com/rundeck/rundeck/wiki/Building-and-Testing"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-gradle-build" class="anchor" aria-hidden="true" href="#gradle-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle Build&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;./gradlew build
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Artifacts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rundeckapp/build/libs/rundeck-X.Y.war&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-other-builds" class="anchor" aria-hidden="true" href="#other-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other builds&lt;/h1&gt;
&lt;p&gt;The documentation can be built with &lt;a href="http://johnmacfarlane.net/pandoc/" rel="nofollow"&gt;pandoc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Build the documentation. Artifacts in &lt;code&gt;docs/en/dist&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd docs
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can build .rpm or .deb files (requires pandoc to build the docs):&lt;/p&gt;
&lt;p&gt;Build the RPM. Artifacts in &lt;code&gt;packaging/rpmdist/RPMS/noarch/*.rpm&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Build the .deb. Artifacts in &lt;code&gt;packaging/*.deb&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make deb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build clean:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make clean
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;There are several install options: a self-contained war file, or RPM, or Debian.&lt;/p&gt;
&lt;p&gt;To start from the rundeck-X.Y.war, put it in a directory named ~/rundeck, then execute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -Xmx1024m -Xms256m -XX:MaxMetaspaceSize=256m -server -jar rundeck-X.Y.war
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you'd like to install via RPM, you can use Yum:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rpm -Uvh http://repo.rundeck.org/latest.rpm 
yum install rundeck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OR install directly from RPM:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rpm -ivh rundeck-2.0.0-xxx.rpm rundeck-config-2.0.0-xxx.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the RPM is installed, execute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/rundeckd start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The server should launch on port 4440, with default username/password of &lt;code&gt;admin/admin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For Debian, download the .deb from the &lt;a href="http://rundeck.org/downloads.html" rel="nofollow"&gt;downloads page&lt;/a&gt;, then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg -i rundeck-2.0.0-x.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;For more info and configuration information, see the &lt;a href="http://docs.rundeck.org" rel="nofollow"&gt;Rundeck docs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h1&gt;
&lt;p&gt;Java 8 (openjdk, oracle)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://johnmacfarlane.net/pandoc/" rel="nofollow"&gt;Pandoc&lt;/a&gt; (documentation build only)&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;Available online at &lt;a href="http://rundeck.org/docs" rel="nofollow"&gt;http://rundeck.org/docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;FAQ: &lt;a href="https://github.com/rundeck/rundeck/wiki/FAQ"&gt;https://github.com/rundeck/rundeck/wiki/FAQ&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h1&gt;
&lt;p&gt;Refer to the &lt;a href="https://github.com/rundeck/rundeck/wiki/IDE-Development-Environment"&gt;IDE Development Environment&lt;/a&gt; to get set up using IntelliJ IDEA or Eclipse/STS.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rundeck/rundeck/issues"&gt;Issue tracker&lt;/a&gt; at github.com&lt;/li&gt;
&lt;li&gt;&lt;a href="http://build.rundeck.org" rel="nofollow"&gt;Fresh builds&lt;/a&gt; served by Jenkins&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Do you have changes to contribute? Please see the &lt;a href="https://github.com/rundeck/rundeck/wiki/Development"&gt;Development&lt;/a&gt; wiki page.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Copyright 2018 Rundeck, Inc.&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rundeck</author><guid isPermaLink="false">https://github.com/rundeck/rundeck</guid><pubDate>Tue, 28 Jan 2020 00:06:00 GMT</pubDate></item><item><title>jenkinsci/JenkinsPipelineUnit #7 in Groovy, Today</title><link>https://github.com/jenkinsci/JenkinsPipelineUnit</link><description>&lt;p&gt;&lt;i&gt;Framework for unit testing Jenkins pipelines &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jenkins-pipeline-unit-testing-framework" class="anchor" aria-hidden="true" href="#jenkins-pipeline-unit-testing-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jenkins Pipeline Unit testing framework&lt;/h1&gt;
&lt;p&gt;Jenkins Pipeline Unit is a testing framework for unit testing Jenkins pipelines, written in
&lt;a href="https://jenkins.io/doc/book/pipeline/" rel="nofollow"&gt;Groovy Pipeline DSL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/jenkinsci/JenkinsPipelineUnit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/95b91c222a87feefc7090c3abb83f181e855aeb0/68747470733a2f2f7472617669732d63692e6f72672f6a656e6b696e7363692f4a656e6b696e73506970656c696e65556e69742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jenkinsci/JenkinsPipelineUnit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/ozangunalp/jenkinspipelineunit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/14e28cb6aa9103cb661350a9709dd91fce98b861/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f797837366a776b64676a746b793978753f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/yx76jwkdgjtky9xu?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/JenkinsPipelineUnit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/20d7543bc8280bf8134b686c46c7b7e2c0a467fd/68747470733a2f2f6261646765732e6769747465722e696d2f67697474657248512f6769747465722e706e67" alt="Gitter chat" data-canonical-src="https://badges.gitter.im/gitterHQ/gitter.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you use Jenkins as your CI workhorse (like us @ &lt;a href="https://www.lesfurets.com" rel="nofollow"&gt;lesfurets.com&lt;/a&gt;) and you enjoy writing &lt;em&gt;pipeline-as-code&lt;/em&gt;,
you already know that pipeline code is very powerful but can get pretty complex.&lt;/p&gt;
&lt;p&gt;This testing framework lets you write unit tests on the configuration and conditional logic of the pipeline code, by providing a mock execution of the pipeline.
You can mock built-in Jenkins commands, job configurations, see the stacktrace of the whole execution and even track regressions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-add-to-your-project-as-test-dependency" class="anchor" aria-hidden="true" href="#add-to-your-project-as-test-dependency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add to your project as test dependency&lt;/h3&gt;
&lt;p&gt;Maven:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;    &amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.lesfurets&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;jenkins-pipeline-unit&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;1.1&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;test&amp;lt;/&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Gradle:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;testCompile &lt;span class="pl-c1"&gt;group&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.lesfurets&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;jenkins-pipeline-unit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;version&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-start-writing-tests" class="anchor" aria-hidden="true" href="#start-writing-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start writing tests&lt;/h3&gt;
&lt;p&gt;You can write your tests in Groovy or Java 8, using the test framework you prefer.
The easiest entry point is extending the abstract class &lt;code&gt;BasePipelineTest&lt;/code&gt;, which initializes the framework with JUnit.&lt;/p&gt;
&lt;p&gt;Let's say you wrote this awesome pipeline script, which builds and tests your project :&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() {
   node() {
       &lt;span class="pl-k"&gt;def&lt;/span&gt; utils &lt;span class="pl-k"&gt;=&lt;/span&gt; load &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/test/jenkins/lib/utils.jenkins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
       &lt;span class="pl-k"&gt;String&lt;/span&gt; revision &lt;span class="pl-k"&gt;=&lt;/span&gt; stage(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Checkout&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) {
           checkout scm
           &lt;span class="pl-k"&gt;return&lt;/span&gt; utils&lt;span class="pl-k"&gt;.&lt;/span&gt;currentRevision()
       }
       gitlabBuilds(&lt;span class="pl-c1"&gt;builds&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) {
           stage(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
               gitlabCommitStatus(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
                   sh &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mvn clean package -DskipTests -DgitRevision=&lt;span class="pl-smi"&gt;$r&lt;span class="pl-smi"&gt;evision&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
               }
           }

           stage(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
               gitlabCommitStatus(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
                   sh &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mvn verify -DgitRevision=&lt;span class="pl-smi"&gt;$r&lt;span class="pl-smi"&gt;evision&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
               }
           }
       }
   }
}

&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;this&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now using the Jenkins Pipeline Unit you can unit test if it does the job :&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.lesfurets.jenkins.unit.BasePipelineTest&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestExampleJob&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;BasePipelineTest&lt;/span&gt; {
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;...&lt;/span&gt;
        
        &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
        &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;should_execute_without_errors&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;Exception&lt;/span&gt; {
            &lt;span class="pl-k"&gt;def&lt;/span&gt; script &lt;span class="pl-k"&gt;=&lt;/span&gt; loadScript(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;job/exampleJob.jenkins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            script&lt;span class="pl-k"&gt;.&lt;/span&gt;execute()
            printCallStack()
        }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This test will print the call stack of the execution :&lt;/p&gt;
&lt;pre lang="text"&gt;&lt;code&gt;   exampleJob.run()
   exampleJob.execute()
      exampleJob.node(groovy.lang.Closure)
         exampleJob.load(src/test/jenkins/lib/utils.jenkins)
            utils.run()
         exampleJob.stage(Checkout, groovy.lang.Closure)
            exampleJob.checkout({$class=GitSCM, branches=[{name=feature_test}], doGenerateSubmoduleConfigurations=false, extensions=[], submoduleCfg=[], userRemoteConfigs=[{credentialsId=gitlab_git_ssh, url=github.com/lesfurets/JenkinsPipelineUnit.git}]})
            utils.currentRevision()
               utils.sh({returnStdout=true, script=git rev-parse HEAD})
         exampleJob.gitlabBuilds({builds=[build, test]}, groovy.lang.Closure)
            exampleJob.stage(build, groovy.lang.Closure)
               exampleJob.gitlabCommitStatus(build, groovy.lang.Closure)
                  exampleJob.sh(mvn clean package -DskipTests -DgitRevision=bcc19744)
            exampleJob.stage(test, groovy.lang.Closure)
               exampleJob.gitlabCommitStatus(test, groovy.lang.Closure)
                  exampleJob.sh(mvn verify -DgitRevision=bcc19744)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-mock-jenkins-variables" class="anchor" aria-hidden="true" href="#mock-jenkins-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mock Jenkins variables&lt;/h3&gt;
&lt;p&gt;You can define both environment variables and job execution parameters.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;@Override&lt;/span&gt;
    &lt;span class="pl-k"&gt;@Before&lt;/span&gt;
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;setUp&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;Exception&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;setUp()
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assigns false to a job parameter ENABLE_TEST_STAGE &lt;/span&gt;
        binding&lt;span class="pl-k"&gt;.&lt;/span&gt;setVariable(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ENABLE_TEST_STAGE&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;false&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Defines the previous execution status&lt;/span&gt;
        binding&lt;span class="pl-k"&gt;.&lt;/span&gt;getVariable(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;currentBuild&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;previousBuild &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;result&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;UNSTABLE&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The test helper already provides basic variables such as a very simple currentBuild definition.
You can redefine them as you wish.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mock-jenkins-commands" class="anchor" aria-hidden="true" href="#mock-jenkins-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mock Jenkins commands&lt;/h3&gt;
&lt;p&gt;You can register interceptors to mock pipeline methods, including Jenkins commands, which may or may not return a result.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;@Override&lt;/span&gt;
    &lt;span class="pl-k"&gt;@Before&lt;/span&gt;
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;setUp&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;Exception&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;setUp()
        helper&lt;span class="pl-k"&gt;.&lt;/span&gt;registerAllowedMethod(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-k"&gt;Map&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class], {&lt;span class="pl-v"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bcc19744&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
        helper&lt;span class="pl-k"&gt;.&lt;/span&gt;registerAllowedMethod(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;timeout&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-k"&gt;Map&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class, &lt;span class="pl-k"&gt;Closure&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class], &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
        helper&lt;span class="pl-k"&gt;.&lt;/span&gt;registerAllowedMethod(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;timestamps&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [], { &lt;span class="pl-c1"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Printing timestamp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; })
        helper&lt;span class="pl-k"&gt;.&lt;/span&gt;registerAllowedMethod(method(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;readFile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class), { &lt;span class="pl-v"&gt;file&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;Files&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;contentOf(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;File&lt;/span&gt;(file), &lt;span class="pl-k"&gt;Charset&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;forName(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UTF-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
        })
        helper&lt;span class="pl-k"&gt;.&lt;/span&gt;registerAllowedMethod(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;customMethodWithArguments&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-k"&gt;String&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt;, &lt;span class="pl-k"&gt;Collection&lt;/span&gt;], { &lt;span class="pl-k"&gt;String&lt;/span&gt; &lt;span class="pl-v"&gt;stringArg&lt;/span&gt;, &lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-v"&gt;intArg&lt;/span&gt;, &lt;span class="pl-k"&gt;Collection&lt;/span&gt; &lt;span class="pl-v"&gt;collectionArg&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;println&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;executing mock closure with arguments (arguments: '&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;stringArg&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;', '&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;intArg&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;', '&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;collectionArg&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        })
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The test helper already includes some mocks, but the list is far from complete.
You need to &lt;em&gt;register allowed methods&lt;/em&gt; if you want to override these mocks and add others.
Note that you need to provide a method signature and a callback (closure or lambda) in order to allow a method.
Any method call which is not recognized will throw an exception.&lt;/p&gt;
&lt;p&gt;You can take a look at the &lt;code&gt;BasePipelineTest&lt;/code&gt; class to have the short list of allowed methods.&lt;/p&gt;
&lt;p&gt;Some tricky methods such as &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;parallel&lt;/code&gt; are implemented directly in the helper.
If you want to override those, make sure that you extend the &lt;code&gt;PipelineTestHelper&lt;/code&gt; class.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-analyze-the-mock-execution" class="anchor" aria-hidden="true" href="#analyze-the-mock-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Analyze the mock execution&lt;/h3&gt;
&lt;p&gt;The helper registers every method call to provide a stacktrace of the mock execution.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Test&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;should_execute_without_errors&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;Exception&lt;/span&gt; {
    runScript(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jenkinsfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;assertThat&lt;/span&gt;(helper&lt;span class="pl-k"&gt;.&lt;/span&gt;callStack&lt;span class="pl-k"&gt;.&lt;/span&gt;findAll { &lt;span class="pl-v"&gt;call&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
        call&lt;span class="pl-k"&gt;.&lt;/span&gt;methodName &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }&lt;span class="pl-k"&gt;.&lt;/span&gt;any { &lt;span class="pl-v"&gt;call&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
        callArgsToString(call)&lt;span class="pl-k"&gt;.&lt;/span&gt;contains(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mvn verify&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;span class="pl-k"&gt;.&lt;/span&gt;isTrue()
    assertJobStatusSuccess()
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will check as well &lt;code&gt;mvn verify&lt;/code&gt; has been called during the job execution.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-check-pipeline-status" class="anchor" aria-hidden="true" href="#check-pipeline-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Check Pipeline status&lt;/h3&gt;
&lt;p&gt;Let's say you have a simple script and you'd like to check it behaviour if a step is failing&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Jenkinsfile&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
node() {
    git(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some_repo_url&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    sh &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;make&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can mock &lt;code&gt;sh&lt;/code&gt; step to just update the pipeline status to &lt;code&gt;FAILURE&lt;/code&gt;.
To verify your pipeline is failing you need to check the status with &lt;code&gt;BasePipelineTest.assertJobStatusFailure()&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestCase&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;BasePipelineTest&lt;/span&gt; {
  &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
  &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;check_build_status&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;Exception&lt;/span&gt; {
      helper&lt;span class="pl-k"&gt;.&lt;/span&gt;registerAllowedMethod(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-k"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class], {&lt;span class="pl-v"&gt;cmd&lt;/span&gt;&lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; 
          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; cmd.contains is helpful to filter sh call which should fail the pipeline&lt;/span&gt;
          &lt;span class="pl-k"&gt;if&lt;/span&gt; (cmd&lt;span class="pl-k"&gt;.&lt;/span&gt;contains(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;make&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) { 
              binding&lt;span class="pl-k"&gt;.&lt;/span&gt;getVariable(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;currentBuild&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;result &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;FAILURE&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
          }
      })
      loadScript(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jenkinsfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
      assertJobStatusFailure()
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-check-pipeline-exceptions" class="anchor" aria-hidden="true" href="#check-pipeline-exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Check Pipeline exceptions&lt;/h3&gt;
&lt;p&gt;Sometimes it is useful to verify exactly that exception is thrown during the pipeline run.
For example by one of your &lt;code&gt;SharedLib&lt;/code&gt; module&lt;/p&gt;
&lt;p&gt;To do so you can use &lt;code&gt;org.junit.rules.ExpectedException&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.Rule&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.rules.ExpectedException&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-k"&gt;@Rule&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;ExpectedException&lt;/span&gt; thrown &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;ExpectedException&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;none();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is a simple example to verify exception type and the message:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.Rule&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.rules.ExpectedException&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestCase&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;BasePipelineTest&lt;/span&gt; {
    &lt;span class="pl-k"&gt;@Rule&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;ExpectedException&lt;/span&gt; thrown &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;ExpectedException&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;none();

    &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;verify_exception&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;Exception&lt;/span&gt; {
        loadScript(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jenkinsfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        thrown&lt;span class="pl-k"&gt;.&lt;/span&gt;expect(&lt;span class="pl-k"&gt;Exception&lt;/span&gt;)
        thrown&lt;span class="pl-k"&gt;.&lt;/span&gt;expectMessage(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-compare-the-callstacks-with-a-previous-implementation" class="anchor" aria-hidden="true" href="#compare-the-callstacks-with-a-previous-implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compare the callstacks with a previous implementation&lt;/h3&gt;
&lt;p&gt;One other use of the callstacks is to check your pipeline executions for possible regressions.
You have a dedicated method you can call if you extend &lt;code&gt;BaseRegressionTest&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;testNonReg&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;Exception&lt;/span&gt; {
        &lt;span class="pl-k"&gt;def&lt;/span&gt; script &lt;span class="pl-k"&gt;=&lt;/span&gt; loadScript(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;job/exampleJob.jenkins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        script&lt;span class="pl-k"&gt;.&lt;/span&gt;execute()
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;testNonRegression(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;example&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will compare the current callstack of the job to the one you have in a text callstack reference file.
To update this file with new callstack, just set this JVM argument when running your tests: &lt;code&gt;-Dpipeline.stack.write=true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You then can go ahead and commit this change in your SCM to check in the change.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The abstract class &lt;code&gt;BasePipelineTest&lt;/code&gt; configures the helper with useful conventions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It looks for pipeline scripts in your project in root (&lt;code&gt;./.&lt;/code&gt;) and &lt;code&gt;src/main/jenkins&lt;/code&gt; paths.&lt;/li&gt;
&lt;li&gt;Jenkins pipelines let you load other scripts from a parent script with &lt;code&gt;load&lt;/code&gt; command.
However &lt;code&gt;load&lt;/code&gt; takes the full path relative to the project root.
The test helper mock successfully the &lt;code&gt;load&lt;/code&gt; command to load the scripts.
To make relative paths work, you need to configure the path of the project where your pipeline scripts are,
which defaults to &lt;code&gt;.&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Pipeline script extension, which defaults to jenkins (matches any &lt;code&gt;*.jenkins&lt;/code&gt; file)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overriding these default values is easy:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestExampleJob&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;BasePipelineTest&lt;/span&gt; {

    &lt;span class="pl-k"&gt;@Override&lt;/span&gt;
    &lt;span class="pl-k"&gt;@Before&lt;/span&gt;
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;setUp&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;Exception&lt;/span&gt; {
        baseScriptRoot &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;jenkinsJobs&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        scriptRoots &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;src/main/groovy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        scriptExtension &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pipeline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;setUp()
    }
    
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will work fine for such a project structure:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; jenkinsJobs
 └── src
     ├── main
     │   └── groovy
     │       └── ExampleJob.pipeline
     └── test
         └── groovy
             └── TestExampleJob.groovy
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-testing-shared-libraries" class="anchor" aria-hidden="true" href="#testing-shared-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing Shared Libraries&lt;/h2&gt;
&lt;p&gt;With &lt;a href="https://jenkins.io/doc/book/pipeline/shared-libraries/" rel="nofollow"&gt;Shared Libraries&lt;/a&gt; Jenkins lets you share common code
on pipelines across different repositories of your organization.
Shared libraries are configured via a settings interface in Jenkins and imported
with &lt;code&gt;@Library&lt;/code&gt; annotation in your scripts.&lt;/p&gt;
&lt;p&gt;Testing pipeline scripts using external libraries is not trivial because the shared library code
is checked in another repository.
JenkinsPipelineUnit lets you test shared libraries and pipelines depending on these libraries.&lt;/p&gt;
&lt;p&gt;Here is an example pipeline using a shared library:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Library&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;commons&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;net.courtanet.jenkins.Utils&lt;/span&gt;

sayHello &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;World&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

node() {
    stage (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Checkout&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) {
        &lt;span class="pl-k"&gt;def&lt;/span&gt; utils &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;Utils&lt;/span&gt;()
        checkout &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;utils.gitTools()&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    stage (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Build&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) {
        sh &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./gradlew build&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    }
    stage (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Post Build&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) {
        &lt;span class="pl-k"&gt;String&lt;/span&gt; json &lt;span class="pl-k"&gt;=&lt;/span&gt; libraryResource &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;net/courtanet/jenkins/request.json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        sh &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;curl -H 'Content-Type: application/json' -X POST -d '&lt;span class="pl-smi"&gt;$j&lt;span class="pl-smi"&gt;son&lt;/span&gt;&lt;/span&gt;' &lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;acme.url&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This pipeline is using a shared library called &lt;code&gt;commons&lt;/code&gt;.
Now let's test it:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;String&lt;/span&gt; clonePath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;path/to/clone&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; library &lt;span class="pl-k"&gt;=&lt;/span&gt; library()
                    .name(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;commons&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
                    .retriever(gitSource(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git@gitlab.admin.courtanet.net:devteam/lesfurets-jenkins-shared.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
                    .targetPath(clonePath)
                    .defaultVersion(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;master&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                    .allowOverride(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
                    .implicit(&lt;span class="pl-c1"&gt;false&lt;/span&gt;)
                    .build()
    helper&lt;span class="pl-k"&gt;.&lt;/span&gt;registerSharedLibrary(library)
    
    runScript(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;job/library/exampleJob.jenkins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    printCallStack()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice how we defined the shared library and registered it to the helper.
Library definition is done via a fluent API which lets you set the same configurations as in
&lt;a href="https://jenkins.io/doc/book/pipeline/shared-libraries/#using-libraries" rel="nofollow"&gt;Jenkins Global Pipeline Libraries&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;retriever&lt;/code&gt; and &lt;code&gt;targetPath&lt;/code&gt; fields tell the framework how to fetch the sources of the library, in which local path.
The framework comes with two naive but useful retrievers, &lt;code&gt;gitSource&lt;/code&gt; and &lt;code&gt;localSource&lt;/code&gt;.
You can write your own retriever by implementing the &lt;code&gt;SourceRetriever&lt;/code&gt; interface.&lt;/p&gt;
&lt;p&gt;Note that properties &lt;code&gt;defaultVersion&lt;/code&gt;, &lt;code&gt;allowOverride&lt;/code&gt; and &lt;code&gt;implicit&lt;/code&gt; are optional with
default values &lt;code&gt;master&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now if we execute this test, the framework will fetch the sources from the Git repository and
load classes, scripts, global variables and resources found in the library.
The callstack of this execution will look like the following:&lt;/p&gt;
&lt;pre lang="text"&gt;&lt;code&gt;Loading shared library commons with version master
libraryJob.run()
  libraryJob.sayHello(World)
  sayHello.echo(Hello, World.)
  libraryJob.node(groovy.lang.Closure)
     libraryJob.stage(Checkout, groovy.lang.Closure)
        Utils.gitTools()
        libraryJob.checkout({branch=master})
     libraryJob.stage(Build, groovy.lang.Closure)
        libraryJob.sh(./gradlew build)
     libraryJob.stage(Post Build, groovy.lang.Closure)
        libraryJob.libraryResource(net/courtanet/jenkins/request.json)
        libraryJob.sh(curl -H 'Content-Type: application/json' -X POST -d '{"name" : "Ben"}' http://acme.com)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-loading-library-dynamically" class="anchor" aria-hidden="true" href="#loading-library-dynamically"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Loading library dynamically&lt;/h4&gt;
&lt;p&gt;There is a partial support of dynamic library loading.
It does't implement all the features, however sometimes it could be useful.&lt;/p&gt;
&lt;p&gt;Pipeline example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def lib = library 'commons'

// by the moment you call library method it enables vars
sayHello 'World'

// creates an instance of a library's class
def utils = net.courtanet.jenkins.Utils.new()

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Test class example:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;String&lt;/span&gt; clonePath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;path/to/clone&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; library &lt;span class="pl-k"&gt;=&lt;/span&gt; library()
                    .name(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;commons&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
                    .retriever(gitSource(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git@gitlab.admin.courtanet.net:devteam/lesfurets-jenkins-shared.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
                    .targetPath(clonePath)
                    .defaultVersion(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;master&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                    .allowOverride(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
                    .implicit(&lt;span class="pl-c1"&gt;false&lt;/span&gt;)
                    .build()

    helper&lt;span class="pl-k"&gt;.&lt;/span&gt;registerSharedLibrary(library)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Registration fo pipeline method 'library'&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; should be after you register the shared library&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; so unfortenatly you cannot move it to the super class&lt;/span&gt;
    helper&lt;span class="pl-k"&gt;.&lt;/span&gt;registerAllowedMethod(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;library&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-k"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class], {&lt;span class="pl-k"&gt;String&lt;/span&gt; &lt;span class="pl-v"&gt;expression&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
        helper&lt;span class="pl-k"&gt;.&lt;/span&gt;getLibLoader()&lt;span class="pl-k"&gt;.&lt;/span&gt;loadLibrary(expression)
        &lt;span class="pl-c1"&gt;println&lt;/span&gt; helper&lt;span class="pl-k"&gt;.&lt;/span&gt;getLibLoader()&lt;span class="pl-k"&gt;.&lt;/span&gt;libRecords
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;LibClassLoader&lt;/span&gt;(helper,&lt;span class="pl-c1"&gt;null&lt;/span&gt;)
    })

    loadScript(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;job/library/exampleJob.jenkins&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    printCallStack()&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-note-on-cps" class="anchor" aria-hidden="true" href="#note-on-cps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note on CPS&lt;/h2&gt;
&lt;p&gt;If you already fiddled with Jenkins pipeline DSL, you experienced strange errors during execution on Jenkins.
This is because Jenkins does not directly execute your pipeline in Groovy,
but transforms the pipeline code into an intermediate format in order to run Groovy code in
&lt;a href="https://en.wikipedia.org/wiki/Continuation-passing_style" rel="nofollow"&gt;Continuation Passing Style&lt;/a&gt; (CPS).&lt;/p&gt;
&lt;p&gt;The usual errors are partly due to the
&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Script+Security+Plugin#ScriptSecurityPlugin-GroovySandboxing" rel="nofollow"&gt;the sandboxing Jenkins applies&lt;/a&gt;
for security reasons, and partly due to the
&lt;a href="https://github.com/jenkinsci/pipeline-plugin/blob/master/TUTORIAL.md#serializing-local-variables"&gt;serializability Jenkins imposes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Jenkins requires that at each execution step, the whole script context is serializable, in order to stop and resume the job execution.
To simulate this aspect, CPS versions of the helpers transform your scripts into the CPS format and check if at each step your script context is serializable.&lt;/p&gt;
&lt;p&gt;To use this &lt;em&gt;&lt;em&gt;experimental&lt;/em&gt;&lt;/em&gt; feature, you can use the abstract class &lt;code&gt;BasePipelineTestCPS&lt;/code&gt; instead of &lt;code&gt;BasePipelineTest&lt;/code&gt;.
You may see some changes in the call stacks that the helper registers.
Note also that the serialization used to test is not the same as what Jenkins uses.
You may find some incoherence in that level.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;JenkinsPipelineUnit aims to help devops code and test Jenkins pipelines with a shorter development cycle.
It addresses some of the requirements traced in &lt;a href="https://issues.jenkins-ci.org/browse/JENKINS-33925" rel="nofollow"&gt;JENKINS-33925&lt;/a&gt;.
If you are willing to contribute please don't hesitate to discuss in issues and open a pull-request.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jenkinsci</author><guid isPermaLink="false">https://github.com/jenkinsci/JenkinsPipelineUnit</guid><pubDate>Tue, 28 Jan 2020 00:07:00 GMT</pubDate></item></channel></rss>