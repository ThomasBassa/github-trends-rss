<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: R, Today</title><link>https://github.com/trending/r?since=daily</link><description>The top repositories on GitHub for r, measured daily</description><pubDate>Fri, 15 Nov 2019 01:06:03 GMT</pubDate><lastBuildDate>Fri, 15 Nov 2019 01:06:03 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>tidyverse/dtplyr #1 in R, Today</title><link>https://github.com/tidyverse/dtplyr</link><description>&lt;p&gt;&lt;i&gt;Data table backend for dplyr&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-dtplyr" class="anchor" aria-hidden="true" href="#dtplyr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dtplyr&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://cran.r-project.org/package=dtplyr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2083cffa202d409f067b0a4bcfc6b0bd62c3e241/68747470733a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f6474706c7972" alt="CRAN status" data-canonical-src="https://www.r-pkg.org/badges/version/dtplyr" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/tidyverse/dtplyr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90b99e076b82d308b97e312840ba9434a56ec8c1/68747470733a2f2f7472617669732d63692e6f72672f7469647976657273652f6474706c79722e7376673f6272616e63683d6d6173746572" alt="Travis build status" data-canonical-src="https://travis-ci.org/tidyverse/dtplyr.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/tidyverse/dtplyr?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64e2b3803508af3f2a0230f43698107c38ea0670/68747470733a2f2f636f6465636f762e696f2f67682f7469647976657273652f6474706c79722f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov test coverage" data-canonical-src="https://codecov.io/gh/tidyverse/dtplyr/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.tidyverse.org/lifecycle/#maturing" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/646b448bd38200d1c7f3cd622b3cb9aa79d5abe0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="Lifecycle: maturing" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;dtplyr provides a &lt;a href="http://r-datatable.com/" rel="nofollow"&gt;data.table&lt;/a&gt; backend for
dplyr. The goal of dtplyr is to allow you to write dplyr code that is
automatically translated to the equivalent, but usually much faster,
data.table code.&lt;/p&gt;
&lt;p&gt;Compared to the previous release, this version of dtplyr is a complete
rewrite that focusses only on lazy evaluation triggered by use of
&lt;code&gt;lazy_dt()&lt;/code&gt;. This means that no computation is performed until you
explicitly request it with &lt;code&gt;as.data.table()&lt;/code&gt;, &lt;code&gt;as.data.frame()&lt;/code&gt; or
&lt;code&gt;as_tibble()&lt;/code&gt;. This has a considerable advantage over the previous
version (which eagerly evaluated each step) because it allows dtplyr to
generate significantly more performant translations. This is a large
change that breaks all existing uses of dtplyr. But frankly, dtplyr was
pretty useless before because it did such a bad job of generating
data.table code. Fortunately few people used it, so a major overhaul was
possible.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;vignette("translation")&lt;/code&gt; for details of the current translations,
and &lt;a href="https://github.com/asardaes/table.express"&gt;table.express&lt;/a&gt; and
&lt;a href="https://github.com/WinVector/rqdatatable/"&gt;rqdatatable&lt;/a&gt; for related
work.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can install from CRAN with:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dtplyr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or try the development version from GitHub with:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install.packages("devtools")&lt;/span&gt;
&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tidyverse/dtplyr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;To use dtplyr, you must at least load dtplyr and dplyr. You may also
want to load &lt;a href="http://r-datatable.com/" rel="nofollow"&gt;data.table&lt;/a&gt; so you can access the
other goodies that it provides:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;data.table&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;dtplyr&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;dplyr&lt;/span&gt;, &lt;span class="pl-v"&gt;warn.conflicts&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then use &lt;code&gt;lazy_dt()&lt;/code&gt; to create a “lazy” data table that tracks the
operations performed on it.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;mtcars2&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; lazy_dt(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can preview the transformation (including the generated data.table
code) by printing the result:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;mtcars2&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
  filter(&lt;span class="pl-smi"&gt;wt&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
  mutate(&lt;span class="pl-v"&gt;l100k&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;235.21&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; liters / 100 km&lt;/span&gt;
  group_by(&lt;span class="pl-smi"&gt;cyl&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
  summarise(&lt;span class="pl-v"&gt;l100k&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; mean(&lt;span class="pl-smi"&gt;l100k&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; Source: local data table [?? x 2]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; Call:   `_DT1`[wt &amp;lt; 5][, `:=`(l100k = 235.21/mpg)][, .(l100k = mean(l100k)), &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;     keyby = .(cyl)]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;     cyl l100k&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 1     4  9.05&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 2     6 12.0 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 3     8 14.9 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # Use as.data.table()/as.data.frame()/as_tibble() to access results&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But generally you should reserve this only for debugging, and use
&lt;code&gt;as.data.table()&lt;/code&gt;, &lt;code&gt;as.data.frame()&lt;/code&gt;, or &lt;code&gt;as_tibble()&lt;/code&gt; to indicate that
you’re done with the transformation and want to access the results:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;mtcars2&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
  filter(&lt;span class="pl-smi"&gt;wt&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
  mutate(&lt;span class="pl-v"&gt;l100k&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;235.21&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; liters / 100 km&lt;/span&gt;
  group_by(&lt;span class="pl-smi"&gt;cyl&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
  summarise(&lt;span class="pl-v"&gt;l100k&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; mean(&lt;span class="pl-smi"&gt;l100k&lt;/span&gt;)) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
  as_tibble()
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # A tibble: 3 x 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;     cyl l100k&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 1     4  9.05&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 2     6 12.0 &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 3     8 14.9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-why-is-dtplyr-slower-than-datatable" class="anchor" aria-hidden="true" href="#why-is-dtplyr-slower-than-datatable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why is dtplyr slower than data.table?&lt;/h2&gt;
&lt;p&gt;There are three primary reasons that dtplyr will always be somewhat
slower than data.table:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Each dplyr verb must do some work to convert dplyr syntax to
data.table syntax. This takes time proportional to the complexity of
the input code, not the input &lt;em&gt;data&lt;/em&gt;, so should be a negligible
overhead for large datasets. &lt;a href="https://dtplyr.tidyverse.org/articles/translation.html#performance" rel="nofollow"&gt;Initial
benchmarks&lt;/a&gt;
suggest that the overhead should be under 1ms per dplyr call.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some data.table expressions have no direct dplyr equivalent. For
example, there’s no way to express cross- or rolling-joins with
dplyr.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To match dplyr semantics, &lt;code&gt;mutate()&lt;/code&gt; does not modify in place by
default. This means that most expressions involving &lt;code&gt;mutate()&lt;/code&gt; must
make a copy that would not be necessary if you were using data.table
directly. (You can opt out of this behaviour in &lt;code&gt;lazy_dt()&lt;/code&gt; with
&lt;code&gt;immutable = FALSE&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;Please note that the dtplyr project is released with a &lt;a href="https://dtplyr.tidyverse.org/CODE_OF_CONDUCT.html" rel="nofollow"&gt;Contributor Code of Conduct&lt;/a&gt;. By contributing to this project, you agree to abide by its terms.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tidyverse</author><guid isPermaLink="false">https://github.com/tidyverse/dtplyr</guid><pubDate>Fri, 15 Nov 2019 00:01:00 GMT</pubDate></item><item><title>satijalab/seurat #2 in R, Today</title><link>https://github.com/satijalab/seurat</link><description>&lt;p&gt;&lt;i&gt;R toolkit for single cell genomics&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.com/satijalab/seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b4198e3101857fb90f7a1c9ece82ef77a3c24d4b/68747470733a2f2f7472617669732d63692e636f6d2f736174696a616c61622f7365757261742e737667" alt="Build Status" data-canonical-src="https://travis-ci.com/satijalab/seurat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/satijalab/seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3f97cad37286f12acbb7868bffc4119c0e6d75b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f736174696a616c61622f7365757261743f7376673d74727565" alt="AppVeyor build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/satijalab/seurat?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=Seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f41aaffd0745b04e91bef2deb22c61155581231/68747470733a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f536575726174" alt="CRAN Version" data-canonical-src="https://www.r-pkg.org/badges/version/Seurat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=Seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3de70c3ddcccdf931f9ad808e71008c3185033a5/68747470733a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f536575726174" alt="CRAN Downloads" data-canonical-src="https://cranlogs.r-pkg.org/badges/Seurat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-seurat-v311" class="anchor" aria-hidden="true" href="#seurat-v311"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Seurat v3.1.1&lt;/h1&gt;
&lt;p&gt;Seurat is an R toolkit for single cell genomics, developed and maintained by the Satija Lab at NYGC.&lt;/p&gt;
&lt;p&gt;Instructions, documentation, and tutorials can be found at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://satijalab.org/seurat" rel="nofollow"&gt;https://satijalab.org/seurat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seurat is also hosted on GitHub, you can view and clone the repository at&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/satijalab/seurat"&gt;https://github.com/satijalab/seurat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seurat has been successfully installed on Mac OS X, Linux, and Windows, using the devtools package to install directly from GitHub&lt;/p&gt;
&lt;p&gt;Improvements and new features will be added on a regular basis, please contact &lt;a href="mailto:seuratpackage@gmail.com"&gt;seuratpackage@gmail.com&lt;/a&gt; with any questions or if you would like to contribute&lt;/p&gt;
&lt;p&gt;Version History&lt;/p&gt;
&lt;p&gt;August 20, 2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 3.1&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for SCTransform integration workflows&lt;/li&gt;
&lt;li&gt;Integration speed ups: reference-based integration + reciprocal PCA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;April 12, 2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 3.0&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Preprint published describing new methods for identifying anchors across single-cell datasets&lt;/li&gt;
&lt;li&gt;Restructured Seurat object with native support for multimodal data&lt;/li&gt;
&lt;li&gt;Parallelization support via future&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;July 20, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.4&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Java dependency removed and functionality rewritten in Rcpp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;March 22, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.3&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;New utility functions&lt;/li&gt;
&lt;li&gt;Speed and efficiency improvments&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;January 10, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.2&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for multiple-dataset alignment with RunMultiCCA and AlignSubspace&lt;/li&gt;
&lt;li&gt;New methods for evaluating alignment performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;October 12, 2017&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.1&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for using MAST and DESeq2 packages for differential expression testing in FindMarkers&lt;/li&gt;
&lt;li&gt;Support for multi-modal single-cell data via @assay slot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;July 26, 2017&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.0&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Preprint released for integrated analysis of scRNA-seq across conditions, technologies and species&lt;/li&gt;
&lt;li&gt;Significant restructuring of code to support clarity and dataset exploration&lt;/li&gt;
&lt;li&gt;Methods for scoring gene expression and cell-cycle phase&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;October 4, 2016&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 1.4 released&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Improved tools for cluster evaluation/visualizations&lt;/li&gt;
&lt;li&gt;Methods for combining and adding to datasets&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;August 22, 2016:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 1.3 released&lt;/li&gt;
&lt;li&gt;Changes :
&lt;ul&gt;
&lt;li&gt;Improved clustering approach - see FAQ for details&lt;/li&gt;
&lt;li&gt;All functions support sparse matrices&lt;/li&gt;
&lt;li&gt;Methods for removing unwanted sources of variation&lt;/li&gt;
&lt;li&gt;Consistent function names&lt;/li&gt;
&lt;li&gt;Updated visualizations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;May 21, 2015:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Drop-Seq manuscript published. Version 1.2 released&lt;/li&gt;
&lt;li&gt;Changes :
&lt;ul&gt;
&lt;li&gt;Added support for spectral t-SNE and density clustering&lt;/li&gt;
&lt;li&gt;New visualizations - including pcHeatmap, dot.plot, and feature.plot&lt;/li&gt;
&lt;li&gt;Expanded package documentation, reduced import package burden&lt;/li&gt;
&lt;li&gt;Seurat code is now hosted on GitHub, enables easy install through devtools&lt;/li&gt;
&lt;li&gt;Small bug fixes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;April 13, 2015:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spatial mapping manuscript published. Version 1.1 released (initial release)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>satijalab</author><guid isPermaLink="false">https://github.com/satijalab/seurat</guid><pubDate>Fri, 15 Nov 2019 00:02:00 GMT</pubDate></item><item><title>tylermorganwall/rayshader #3 in R, Today</title><link>https://github.com/tylermorganwall/rayshader</link><description>&lt;p&gt;&lt;i&gt;R Package for 2D and 3D mapping and data visualization&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rayshader" class="anchor" aria-hidden="true" href="#rayshader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rayshader&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/raylogosmall.png"&gt;&lt;img src="man/figures/raylogosmall.png" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/smallhobart.gif"&gt;&lt;img src="man/figures/smallhobart.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;rayshader&lt;/strong&gt; is an open source package for producing 2D and 3D data
visualizations in R. &lt;strong&gt;rayshader&lt;/strong&gt; uses elevation data in a base R
matrix and a combination of raytracing, spherical texture mapping,
overlays, and ambient occlusion to generate beautiful topographic 2D and
3D maps. In addition to maps, &lt;strong&gt;rayshader&lt;/strong&gt; also allows the user to
translate &lt;strong&gt;ggplot2&lt;/strong&gt; objects into beautiful 3D data visualizations.&lt;/p&gt;
&lt;p&gt;The models can be rotated and examined interactively or the camera
movement can be scripted to create animations. The user can also create
a cinematic depth of field post-processing effect to direct the user’s
focus to important regions in the figure. The 3D models can also be
exported to a 3D-printable format with a built-in STL export function.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; To install the latest version from Github:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install.packages("devtools")&lt;/span&gt;
&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tylermorganwall/rayshader&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functions&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/smallfeature.png"&gt;&lt;img src="man/figures/smallfeature.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rayshader has seven functions related to mapping:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ray_shade&lt;/code&gt; uses user specified light directions to calculate a
global shadow map for an elevation matrix. By default, this also
scales the light intensity at each point by the dot product of the
mean ray direction and the surface normal (also implemented in
function &lt;code&gt;lamb_shade&lt;/code&gt;, this can be turned off by setting
&lt;code&gt;lambert=FALSE&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sphere_shade&lt;/code&gt; maps an RGB texture to a hillshade by spherical
mapping. A texture can be generated with the &lt;code&gt;create_texture&lt;/code&gt;
function, or loaded from an image. &lt;code&gt;sphere_shade&lt;/code&gt; also includes 7
built-in palettes: “imhof1”, “imhof2”, “imhof3”,
imhof4“,”desert“,”bw“,”unicorn".&lt;/li&gt;
&lt;li&gt;&lt;code&gt;create_texture&lt;/code&gt; programmatically creates texture maps given five
colors: a highlight, a shadow, a left fill light, a right fill
light, and a center color for flat areas. The user can also
optionally specify the colors at the corners, but &lt;code&gt;create_texture&lt;/code&gt;
will interpolate those if they aren’t given.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ambient_shade&lt;/code&gt; creates an ambient occlusion shadow layer, darkening
areas that have less scattered light from the atmosphere. This
results in valleys being darker than flat areas and ridges.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lamb_shade&lt;/code&gt; uses a single user specified light direction to
calculate a local shadow map based on the dot product between the
surface normal and the light direction for an elevation matrix.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add_shadow&lt;/code&gt; takes two of the shadow maps above and combines them,
scaling the second one (or, if the second is an RGB array, the
matrix) as specified by the user.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add_overlay&lt;/code&gt; takes a 3 or 4-layer RGB/RGBA array and overlays it on
the current map. If the map includes transparency, this is taken
into account when overlaying the image. Otherwise, the user can
specify a single color that will be marked as completely
transparent, or set the full overlay as partly transparent.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rayshader also has three functions to detect and add water to maps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;detect_water&lt;/code&gt; uses a flood-fill algorithm to detect bodies of water
of a user-specified minimum area.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add_water&lt;/code&gt; uses the output of &lt;code&gt;detect_water&lt;/code&gt; to add a water color
to the map. The user can input their own color, or pass the name of
one of the pre-defined palettes from &lt;code&gt;sphere_shade&lt;/code&gt; to get a
matching hue.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;render_water&lt;/code&gt; adds a 3D tranparent water layer to 3D maps, after
the rgl device has already been created. This can either add to a
map that does not already have a water layer, or replace an existing
water layer on the map.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also included are two functions to add additional effects and
information to your 3D visualizations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;render_depth&lt;/code&gt; generates a depth of field effect for the 3D map. The
user can specify the focal distance, focal length, and f-stop of the
camera, as well as aperture shape and bokeh intensity. This either
plots the image to the local device, or saves it to a file if given
a filename.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;render_label&lt;/code&gt; adds a text label to the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; coordinate of
the map at a specified altitude &lt;code&gt;z&lt;/code&gt; (in units of the matrix). The
altitude can either be specified relative to the elevation at that
point (the default), or absolutely.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And four functions to display and save your visualizations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;plot_map&lt;/code&gt; Plots the current map. Accepts either a matrix or an
array.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;write_png&lt;/code&gt; Writes the current map to disk with a user-specified
filename.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot_3d&lt;/code&gt; Creates a 3D map, given a texture and an elevation matrix.
You can customize the appearance of the map, as well as add a
user-defined water level.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;render_snapshot&lt;/code&gt; Saves an image of the current 3D view to disk (if
given a filename), or plots the 3D view to the current device
(useful for including images in R Markdown files).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;render_movie&lt;/code&gt; Creates and saves a mp4 file of the camera rotating
around the 3D scene by either using a built-in orbit or by using one
provided by the user.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, rayshader has a single function to generate 3D plots using
ggplot2 objects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;plot_gg&lt;/code&gt; Takes a ggplot2 object (or a list of two ggplot2 objects)
and uses the fill or color aesthetic to transform the plot into a 3D
surface. You can pass any of the arguments used to specify the
camera and the background/shadow colors in &lt;code&gt;plot_3d()&lt;/code&gt;, and
manipulate the displayed 3D plot using &lt;code&gt;render_camera()&lt;/code&gt; and
&lt;code&gt;render_depth()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these functions are designed to be used with the magrittr pipe
&lt;code&gt;%&amp;gt;%&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Rayshader can be used for two purposes: both creating hillshaded maps
and 3D data visualizations plots. First, let’s look at rayshader’s
mapping capabilities. For the latter, scroll below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mapping-with-rayshader" class="anchor" aria-hidden="true" href="#mapping-with-rayshader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mapping with rayshader&lt;/h2&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;rayshader&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Here, I load a map with the raster package.&lt;/span&gt;
&lt;span class="pl-v"&gt;loadzip&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; tempfile() 
download.file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://tylermw.com/data/dem_01.tif.zip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;loadzip&lt;/span&gt;)
&lt;span class="pl-v"&gt;localtif&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-e"&gt;raster&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;raster(unzip(&lt;span class="pl-smi"&gt;loadzip&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dem_01.tif&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
unlink(&lt;span class="pl-smi"&gt;loadzip&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;And convert it to a matrix:&lt;/span&gt;
&lt;span class="pl-v"&gt;elmat&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; raster_to_matrix(&lt;span class="pl-smi"&gt;localtif&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;We use another one of rayshader's built-in textures:&lt;/span&gt;
&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_map()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_basicmapping-1.png"&gt;&lt;img src="man/figures/README_basicmapping-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;sphere_shade can shift the sun direction:&lt;/span&gt;
&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;sunangle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_map()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_basicmapping-2.png"&gt;&lt;img src="man/figures/README_basicmapping-2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;detect_water and add_water adds a water layer to the map:&lt;/span&gt;
&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_map()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_basicmapping-3.png"&gt;&lt;img src="man/figures/README_basicmapping-3.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;And we can add a raytraced layer from that sun direction as well:&lt;/span&gt;
&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ray_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;)) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_map()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_basicmapping-4.png"&gt;&lt;img src="man/figures/README_basicmapping-4.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;And here we add an ambient occlusion shadow layer, which models &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;lighting from atmospheric scattering:&lt;/span&gt;

&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ray_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;)) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ambient_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;)) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_map()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_basicmapping-5.png"&gt;&lt;img src="man/figures/README_basicmapping-5.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rayshader also supports 3D mapping by passing a texture map (either
external or one produced by rayshader) into the &lt;code&gt;plot_3d&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ray_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ambient_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_3d(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;135&lt;/span&gt;, &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.75&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;))
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-d-1.png"&gt;&lt;img src="man/figures/README_three-d-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also render using the built-in pathtracer, powered by
&lt;a href="https://www.rayrender.net" rel="nofollow"&gt;rayrender&lt;/a&gt;. Simply replace
&lt;code&gt;render_snapshot()&lt;/code&gt; with &lt;code&gt;render_highquality()&lt;/code&gt;. When
&lt;code&gt;render_highquality()&lt;/code&gt; is called, there’s no need to pre-compute the
shadows with any of the &lt;code&gt;_shade()&lt;/code&gt; functions, so we remove those:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_3d(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;135&lt;/span&gt;, &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.75&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;))
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_highquality()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-dhq-1.png"&gt;&lt;img src="man/figures/README_three-dhq-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also easily add a water layer by setting &lt;code&gt;water = TRUE&lt;/code&gt; in
&lt;code&gt;plot_3d()&lt;/code&gt; (and setting &lt;code&gt;waterdepth&lt;/code&gt; if the water level is not 0), or
by using the function &lt;code&gt;render_water()&lt;/code&gt; after the 3D map has been
rendered. You can customize the appearance and transparancy of the water
layer via function arguments. Here’s an example using
bathymetric/topographic data of Monterey Bay, CA (included with
rayshader):&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-v"&gt;montshadow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ray_shade(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;lambert&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;)
&lt;span class="pl-v"&gt;montamb&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ambient_shade(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;)
&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    sphere_shade(&lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;imhof1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    add_shadow(&lt;span class="pl-smi"&gt;montshadow&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    add_shadow(&lt;span class="pl-smi"&gt;montamb&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    plot_3d(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, 
            &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.75&lt;/span&gt;,
            &lt;span class="pl-v"&gt;water&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;waterdepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;wateralpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;watercolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-v"&gt;waterlinecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinealpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-d-water-1.png"&gt;&lt;img src="man/figures/README_three-d-water-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Water is also supported in &lt;code&gt;render_highquality()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    sphere_shade(&lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;imhof1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    plot_3d(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;70&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;, 
            &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;, 
            &lt;span class="pl-v"&gt;water&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;waterdepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;wateralpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;watercolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-v"&gt;waterlinecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinealpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_highquality(&lt;span class="pl-v"&gt;lightdirection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;lightaltitude&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;clamp_value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, 
                   &lt;span class="pl-v"&gt;samples&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-v"&gt;clear&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/unnamed-chunk-2-1.png"&gt;&lt;img src="man/figures/unnamed-chunk-2-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rayshader also has map shapes other than rectangular included &lt;code&gt;c("hex", "circle")&lt;/code&gt;, and you can customize the map into any shape you want by
setting the areas you do not want to display to &lt;code&gt;NA&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    sphere_shade(&lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;imhof1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    add_shadow(&lt;span class="pl-smi"&gt;montshadow&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    add_shadow(&lt;span class="pl-smi"&gt;montamb&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    plot_3d(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;,
            &lt;span class="pl-v"&gt;water&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;waterdepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;wateralpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;watercolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-v"&gt;waterlinecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinealpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;baseshape&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;circle&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)

&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    sphere_shade(&lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;imhof1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    add_shadow(&lt;span class="pl-smi"&gt;montshadow&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    add_shadow(&lt;span class="pl-smi"&gt;montamb&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    plot_3d(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;,
            &lt;span class="pl-v"&gt;water&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;waterdepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;wateralpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;watercolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-v"&gt;waterlinecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinealpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;baseshape&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-d-shapes-1.png"&gt;&lt;img src="man/figures/README_three-d-shapes-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Adding text labels is done with the &lt;code&gt;render_label()&lt;/code&gt; function, which
also allows you to customize the line type, color, and size along with
the font:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    sphere_shade(&lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;imhof1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    add_shadow(&lt;span class="pl-smi"&gt;montshadow&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    add_shadow(&lt;span class="pl-smi"&gt;montamb&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    plot_3d(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;,
            &lt;span class="pl-v"&gt;water&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;waterdepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinealpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;,
            &lt;span class="pl-v"&gt;wateralpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;watercolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
render_label(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;350&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;240&lt;/span&gt;, &lt;span class="pl-v"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4000&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;,
             &lt;span class="pl-v"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Moss Landing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;textsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-v"&gt;linewidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
render_label(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;220&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;330&lt;/span&gt;, &lt;span class="pl-v"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;6000&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;,
             &lt;span class="pl-v"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Santa Cruz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;textcolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;darkred&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;linecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;darkred&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
             &lt;span class="pl-v"&gt;textsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-v"&gt;linewidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
render_label(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;130&lt;/span&gt;, &lt;span class="pl-v"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4000&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;,
             &lt;span class="pl-v"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Monterey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;dashed&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;textsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-v"&gt;linewidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
render_label(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;130&lt;/span&gt;, &lt;span class="pl-v"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;,
             &lt;span class="pl-v"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Monterey Canyon&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;relativez&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;, &lt;span class="pl-v"&gt;textsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-v"&gt;linewidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-d-labels-1.png"&gt;&lt;img src="man/figures/README_three-d-labels-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also apply a post-processing effect to the 3D maps to render
maps with depth of field with the &lt;code&gt;render_depth()&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ray_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ambient_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_3d(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;225&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.3&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_depth(&lt;span class="pl-v"&gt;focus&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;, &lt;span class="pl-v"&gt;focallength&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-d-depth-1.png"&gt;&lt;img src="man/figures/README_three-d-depth-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3d-plotting-with-rayshader-and-ggplot2" class="anchor" aria-hidden="true" href="#3d-plotting-with-rayshader-and-ggplot2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3D plotting with rayshader and ggplot2&lt;/h2&gt;
&lt;p&gt;Rayshader can also be used to make 3D plots out of ggplot2 objects using
the &lt;code&gt;plot_gg()&lt;/code&gt; function. Here, I turn a color density plot into a 3D
density plot. &lt;code&gt;plot_gg()&lt;/code&gt; detects that the user mapped the &lt;code&gt;fill&lt;/code&gt;
aesthetic to color and uses that information to project the figure into
3D.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;ggplot2&lt;/span&gt;)
&lt;span class="pl-v"&gt;ggdiamonds&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;diamonds&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  stat_density_2d(aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;depth&lt;/span&gt;, &lt;span class="pl-v"&gt;fill&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; stat(&lt;span class="pl-smi"&gt;nlevel&lt;/span&gt;)), 
                  &lt;span class="pl-v"&gt;geom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;polygon&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-v"&gt;bins&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;contour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  facet_wrap(&lt;span class="pl-smi"&gt;clarity&lt;/span&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt;.) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_fill_viridis_c(&lt;span class="pl-v"&gt;option&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))

plot_gg(&lt;span class="pl-smi"&gt;ggdiamonds&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;raytrace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;, &lt;span class="pl-v"&gt;preview&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)
plot_gg(&lt;span class="pl-smi"&gt;ggdiamonds&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;multicore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;scale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;250&lt;/span&gt;, 
        &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.7&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;800&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;))
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_ggplots-1.png"&gt;&lt;img src="man/figures/README_ggplots-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rayshader will automatically ignore lines and other elements that should
not be mapped to 3D. Here’s a contour plot of the &lt;code&gt;volcano&lt;/code&gt; dataset.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;reshape2&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Contours and other lines will automatically be ignored. Here is the volcano dataset:&lt;/span&gt;

&lt;span class="pl-v"&gt;ggvolcano&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;volcano&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
  melt() %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  ggplot() &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_tile(aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Var1&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Var2&lt;/span&gt;, &lt;span class="pl-v"&gt;fill&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_contour(aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Var1&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Var2&lt;/span&gt;, &lt;span class="pl-v"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_x_continuous(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;expand&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_y_continuous(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Y&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;expand&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_fill_gradientn(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Z&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;colours&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; terrain.colors(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  coord_fixed()

par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
plot_gg(&lt;span class="pl-smi"&gt;ggvolcano&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-v"&gt;raytrace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;, &lt;span class="pl-v"&gt;preview&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1861 rows containing missing values (geom_path).
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;plot_gg(&lt;span class="pl-smi"&gt;ggvolcano&lt;/span&gt;, &lt;span class="pl-v"&gt;multicore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;raytrace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, 
        &lt;span class="pl-v"&gt;scale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1400&lt;/span&gt;, &lt;span class="pl-c1"&gt;866&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1861 rows containing missing values (geom_path).
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_ggplots_2-1.png"&gt;&lt;img src="man/figures/README_ggplots_2-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rayshader also detects when the user passes the &lt;code&gt;color&lt;/code&gt; aesthetic, and
maps those values to 3D. If both &lt;code&gt;color&lt;/code&gt; and &lt;code&gt;fill&lt;/code&gt; are passed, however,
rayshader will default to &lt;code&gt;fill&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-v"&gt;mtplot&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  geom_point(aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;disp&lt;/span&gt;, &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;cyl&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  scale_color_continuous(&lt;span class="pl-v"&gt;limits&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;))

par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
plot_gg(&lt;span class="pl-smi"&gt;mtplot&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3.5&lt;/span&gt;, &lt;span class="pl-v"&gt;raytrace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;, &lt;span class="pl-v"&gt;preview&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)

plot_gg(&lt;span class="pl-smi"&gt;mtplot&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3.5&lt;/span&gt;, &lt;span class="pl-v"&gt;multicore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;800&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), 
        &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.85&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;35&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;sunangle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;225&lt;/span&gt;, &lt;span class="pl-v"&gt;soliddepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_ggplots_3-1.png"&gt;&lt;img src="man/figures/README_ggplots_3-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Utilize combinations of line color and fill to create different effects.
Here is a terraced hexbin plot, created by mapping the line colors of
the hexagons to black.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-v"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.9&lt;/span&gt;), &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;))
&lt;span class="pl-v"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;14.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.9&lt;/span&gt;), &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;14.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.9&lt;/span&gt;))
&lt;span class="pl-v"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;9.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.9&lt;/span&gt;), &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;15.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.9&lt;/span&gt;))
&lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rbind(&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;c&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Lines&lt;/span&gt;
&lt;span class="pl-v"&gt;pp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;data&lt;/span&gt;, aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_hex(&lt;span class="pl-v"&gt;bins&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-v"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_fill_viridis_c(&lt;span class="pl-v"&gt;option&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
plot_gg(&lt;span class="pl-smi"&gt;pp&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-v"&gt;scale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-v"&gt;raytrace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;, &lt;span class="pl-v"&gt;preview&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)
plot_gg(&lt;span class="pl-smi"&gt;pp&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-v"&gt;scale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-v"&gt;multicore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;))
render_camera(&lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;70&lt;/span&gt;, &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;130&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;35&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_ggplots_4-1.png"&gt;&lt;img src="man/figures/README_ggplots_4-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also use the &lt;code&gt;render_depth()&lt;/code&gt; function to direct the viewer’s
focus to a important areas in the figure.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
plot_gg(&lt;span class="pl-smi"&gt;pp&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-v"&gt;scale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-v"&gt;multicore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1200&lt;/span&gt;, &lt;span class="pl-c1"&gt;960&lt;/span&gt;),
        &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;70&lt;/span&gt;, &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.4&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;330&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;40&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_depth(&lt;span class="pl-v"&gt;focus&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.68&lt;/span&gt;, &lt;span class="pl-v"&gt;focallength&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;200&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_ggplots_5-1.png"&gt;&lt;img src="man/figures/README_ggplots_5-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tylermorganwall</author><guid isPermaLink="false">https://github.com/tylermorganwall/rayshader</guid><pubDate>Fri, 15 Nov 2019 00:03:00 GMT</pubDate></item><item><title>tidyverse/website-analytics #4 in R, Today</title><link>https://github.com/tidyverse/website-analytics</link><description>&lt;p&gt;&lt;i&gt;Web analytics for tidyverse + r-lib sites&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-website-analytics" class="anchor" aria-hidden="true" href="#website-analytics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;website-analytics&lt;/h1&gt;


&lt;p&gt;Website analytics for the tidyverse, r-lib, and and a few others. To run this code, you'll need read permission for the tidyverse google analytics account (id 115082821) and the tidyverse search console account, which is usually only available to members of the tidyverse team at RStudio.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tidyverse</author><guid isPermaLink="false">https://github.com/tidyverse/website-analytics</guid><pubDate>Fri, 15 Nov 2019 00:04:00 GMT</pubDate></item><item><title>tidyverse/ggplot2 #5 in R, Today</title><link>https://github.com/tidyverse/ggplot2</link><description>&lt;p&gt;&lt;i&gt;An implementation of the Grammar of Graphics in R&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-ggplot2-" class="anchor" aria-hidden="true" href="#ggplot2-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ggplot2 &lt;a target="_blank" rel="noopener noreferrer" href="man/figures/logo.png"&gt;&lt;img src="man/figures/logo.png" align="right" width="120" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/tidyverse/ggplot2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3621740a79d3a99f071c5954af024016233423a9/68747470733a2f2f7472617669732d63692e6f72672f7469647976657273652f6767706c6f74322e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/tidyverse/ggplot2.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/tidyverse/ggplot2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e19fd752aaa9f769980bd884d47a3888e9ed04f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f7469647976657273652f6767706c6f74323f6272616e63683d6d6173746572267376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/tidyverse/ggplot2?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/tidyverse/ggplot2?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c823e70511a557ba865b59883c0ff295a53a4e31/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f7469647976657273652f6767706c6f74322f6d61737465722e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/codecov/c/github/tidyverse/ggplot2/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=ggplot2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3563f2e7d300ad449ddde9d6b9150899b63857bc/687474703a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f6767706c6f7432" alt="CRAN_Status_Badge" data-canonical-src="http://www.r-pkg.org/badges/version/ggplot2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;ggplot2 is a system for declaratively creating graphics, based on &lt;a href="http://amzn.to/2ef1eWp" rel="nofollow"&gt;The
Grammar of Graphics&lt;/a&gt;. You provide the data, tell
ggplot2 how to map variables to aesthetics, what graphical primitives to
use, and it takes care of the details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The easiest way to get ggplot2 is to install the whole tidyverse:&lt;/span&gt;
install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tidyverse&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Alternatively, install just ggplot2:&lt;/span&gt;
install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ggplot2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or the the development version from GitHub:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install.packages("devtools")&lt;/span&gt;
&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tidyverse/ggplot2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-cheatsheet" class="anchor" aria-hidden="true" href="#cheatsheet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cheatsheet&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/rstudio/cheatsheets/blob/master/data-visualization-2.1.pdf"&gt;&lt;img src="https://raw.githubusercontent.com/rstudio/cheatsheets/master/pngs/thumbnails/data-visualization-cheatsheet-thumbs.png" width="630" height="252" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;It’s hard to succinctly describe how ggplot2 works because it embodies a
deep philosophy of visualisation. However, in most cases you start with
&lt;code&gt;ggplot()&lt;/code&gt;, supply a dataset and aesthetic mapping (with &lt;code&gt;aes()&lt;/code&gt;). You
then add on layers (like &lt;code&gt;geom_point()&lt;/code&gt; or &lt;code&gt;geom_histogram()&lt;/code&gt;), scales
(like &lt;code&gt;scale_colour_brewer()&lt;/code&gt;), faceting specifications (like
&lt;code&gt;facet_wrap()&lt;/code&gt;) and coordinate systems (like &lt;code&gt;coord_flip()&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;ggplot2&lt;/span&gt;)

ggplot(&lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;displ&lt;/span&gt;, &lt;span class="pl-smi"&gt;hwy&lt;/span&gt;, &lt;span class="pl-v"&gt;colour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;class&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  geom_point()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README-example-1.png"&gt;&lt;img src="man/figures/README-example-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lifecycle" class="anchor" aria-hidden="true" href="#lifecycle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lifecycle&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.tidyverse.org/lifecycle/#stable" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57bc311ca33c5dda60526cb1bb5cf3da0d393cee/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d737461626c652d627269676874677265656e2e737667" alt="lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-stable-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ggplot2 is now over 10 years old and is used by hundreds of thousands of
people to make millions of plots. That means, by-and-large, ggplot2
itself changes relatively little. When we do make changes, they will be
generally to add new functions or arguments rather than changing the
behaviour of existing functions, and if we do make changes to existing
behaviour we will do them for compelling reasons.&lt;/p&gt;
&lt;p&gt;If you are looking for innovation, look to ggplot2’s rich ecosystem of
extensions. See a community maintained list at
&lt;a href="http://www.ggplot2-exts.org/gallery/" rel="nofollow"&gt;http://www.ggplot2-exts.org/gallery/&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learning-ggplot2" class="anchor" aria-hidden="true" href="#learning-ggplot2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learning ggplot2&lt;/h2&gt;
&lt;p&gt;If you are new to ggplot2 you are better off starting with a systematic
introduction, rather than trying to learn from reading individual
documentation pages. Currently, there are three good places to start:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="http://r4ds.had.co.nz/data-visualisation.html" rel="nofollow"&gt;data
visualisation&lt;/a&gt; and
&lt;a href="http://r4ds.had.co.nz/graphics-for-communication.html" rel="nofollow"&gt;graphics for
communication&lt;/a&gt;
chapters in &lt;a href="http://r4ds.had.co.nz" rel="nofollow"&gt;R for data science&lt;/a&gt;. R for data
science is designed to give you a comprehensive introduction to the
&lt;a href="http://tidyverse.org" rel="nofollow"&gt;tidyverse&lt;/a&gt;, and these two chapters will get
you up to speed with the essentials of ggplot2 as quickly as
possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you’d like to take an online course, try &lt;a href="http://shop.oreilly.com/product/0636920052807.do" rel="nofollow"&gt;Data Visualization in R
With ggplot2&lt;/a&gt; by
Kara Woo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to dive into making common graphics as quickly as
possible, I recommend &lt;a href="https://amzn.to/2TU78ip" rel="nofollow"&gt;The R Graphics
Cookbook&lt;/a&gt; by Winston Chang. It provides a
set of recipes to solve common graphics problems.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you’ve mastered the basics and want to learn more, read &lt;a href="http://amzn.to/2fncG50" rel="nofollow"&gt;ggplot2:
Elegant Graphics for Data Analysis&lt;/a&gt;. It
describes the theoretical underpinnings of ggplot2 and shows you how all
the pieces fit together. This book helps you understand the theory that
underpins ggplot2, and will help you create new types of graphics
specifically tailored to your needs. The book is not available for free,
but you can find the complete source for the book at
&lt;a href="https://github.com/hadley/ggplot2-book"&gt;https://github.com/hadley/ggplot2-book&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting help&lt;/h2&gt;
&lt;p&gt;There are two main places to get help with ggplot2:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="https://community.rstudio.com/" rel="nofollow"&gt;RStudio community&lt;/a&gt; is a
friendly place to ask any questions about ggplot2.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/ggplot2?sort=frequent&amp;amp;pageSize=50" rel="nofollow"&gt;Stack
Overflow&lt;/a&gt;
is a great source of answers to common ggplot2 questions. It is also
a great place to get help, once you have created a reproducible
example that illustrates your problem.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tidyverse</author><guid isPermaLink="false">https://github.com/tidyverse/ggplot2</guid><pubDate>Fri, 15 Nov 2019 00:05:00 GMT</pubDate></item><item><title>ucb-stat133/stat133-fall-2019 #6 in R, Today</title><link>https://github.com/ucb-stat133/stat133-fall-2019</link><description>&lt;p&gt;&lt;i&gt;Course materials for Stat 133, Fall 2019, at UC Berkeley&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-stat-133-concepts-in-computing-with-data" class="anchor" aria-hidden="true" href="#stat-133-concepts-in-computing-with-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stat 133: Concepts in Computing with Data&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="syllabus/policies.md"&gt;Policies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="syllabus/staff.md"&gt;Staff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="syllabus/faqs.md"&gt;FAQs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-calendar" class="anchor" aria-hidden="true" href="#calendar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calendar&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Instructor:&lt;/strong&gt; Gaston Sanchez&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lecture:&lt;/strong&gt; MWF 9:00-10:00am, 245 Li Ka Shing&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OH:&lt;/strong&gt; MWF 10:30am - 11:30am, 309 Evans&lt;/li&gt;
&lt;li&gt;Tentative topics and dates, subject to change depending on the pace of the course.&lt;/li&gt;
&lt;li&gt;Notes (&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt;) involves material discussed in lecture.&lt;/li&gt;
&lt;li&gt;Reading (&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt;) involves material that expands lecture topics, as well as coding examples that you should review/practice outside of class.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-0-course-introduction" class="anchor" aria-hidden="true" href="#0-course-introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0. Course Introduction&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Aug-28&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: Welcome to Stat 133. We begin with the usual review of the course policies, logistics, overall expectations, topics in a nutshell, etc.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Welcome to Stat 133 (talk and chalk)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="syllabus/policies.md"&gt;Course policies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="syllabus/faqs.md"&gt;FAQs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="microscope" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f52c.png"&gt;🔬&lt;/g-emoji&gt; &lt;strong&gt;Lab&lt;/strong&gt;: No lab&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speaker" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f508.png"&gt;🔈&lt;/g-emoji&gt; &lt;strong&gt;To Do&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://cran.cnr.berkeley.edu/" rel="nofollow"&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.rstudio.com/products/rstudio/download/#download" rel="nofollow"&gt;RStudio&lt;/a&gt; Desktop (open source version, free)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-1-the-big-picture" class="anchor" aria-hidden="true" href="#1-the-big-picture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. The Big Picture&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Aug-30, Sep-04&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: Let's start with an unconventional introduction to &lt;em&gt;computing with data&lt;/em&gt; using my favorite analogy "Data Analysis is a lot like Cooking". At the conceptual level we'll identify the main stages of the data analysis cycle. Also, we should keep in mind that data analysis projects usually start with a Research Question. In addition, we'll describe how Data can actually be seen from a triangular perspective (i.e. my "3 Views of Data").&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="slides/stat133-01-dac-cooking.pdf"&gt;Data Analysis is a lot like cooking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-02-dac-example.pdf"&gt;Data Analysis Cycle: Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-03-research-question.pdf"&gt;The Starting Point: Research Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-04-data-perspectives.pdf"&gt;The Three Views of Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ucb-stat133/stat133-misc/blob/master/what-is-data-science.pdf"&gt;What is Data Science?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-2-r-survival-skills" class="anchor" aria-hidden="true" href="#2-r-survival-skills"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. R Survival Skills&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Sep 04-05, &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;em&gt;mostly in lab&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: In addition to the "Big Picture" concepts, you'll begin learning basic survival skills for R. The main idea is to get a first contact with the RStudio workspace, and the Markdown syntax.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="tutorials/01-intro-to-R.md"&gt;First contact with R&lt;/a&gt; (tutorial)&lt;/li&gt;
&lt;li&gt;&lt;a href="tutorials/02-intro-to-Rmd-files.md"&gt;Intro to Rmd files&lt;/a&gt; (tutorial)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rmarkdown.rstudio.com/lesson-1.html" rel="nofollow"&gt;Introduction to R Markdown&lt;/a&gt; (by RStudio)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheatsheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/rstudio-IDE-cheatsheet.pdf"&gt;RStudio cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="cheatsheets/rmarkdown-cheatsheet-2.0.pdf"&gt;R markdown cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="cheatsheets/base-r-cheatsheet.pdf"&gt;Base R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-3-intro-to-data-technologies-data-types-and-data-objects" class="anchor" aria-hidden="true" href="#3-intro-to-data-technologies-data-types-and-data-objects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Intro to Data Technologies: Data Types, and Data Objects.&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Sep 06-11&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: How do programming languages and computing environments handle data? To answer this question we'll discuss a couple of fundamental topics such as &lt;em&gt;data types&lt;/em&gt; and their implementation in R around &lt;em&gt;vectors&lt;/em&gt; and &lt;em&gt;arrays&lt;/em&gt;. More specifically, we'll focus on concepts like atomicity, vectorization, recycling, and subsetting. Likewise, we will also describe more generic data objects such as lists.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="slides/stat133-06-data-types.pdf"&gt;Data Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-07-vectors.pdf"&gt;Vectors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-08-arrays-factors.pdf"&gt;Arrays and Factors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-09-lists.pdf"&gt;Lists&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="tutorials/03-intro-to-vectors.md"&gt;Intro to vectors&lt;/a&gt; (tutorial)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://r4ds.had.co.nz/vectors.html" rel="nofollow"&gt;chapter 20: Vectors&lt;/a&gt; (&lt;em&gt;R for Data Science&lt;/em&gt; by Grolemund and Wickham)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheatsheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/base-r-cheatsheet.pdf"&gt;Base R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-4-intro-to-data-technologies-contd-data-frames" class="anchor" aria-hidden="true" href="#4-intro-to-data-technologies-contd-data-frames"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. Intro to Data Technologies (cont'd): Data Frames&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Sep 11-12, &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;em&gt;mostly in lab&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: Besides atomic data objects, we also need to talk about R data frames which provide a nice structure to handle tabular data. You will learn how to manipulate data frames from two approaches: 1) using classic bracket notation, and 2) using a more modern and syntactic way following the &lt;em&gt;data plying&lt;/em&gt; framework provided by the package &lt;code&gt;"dplyr"&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Data Frames &lt;a href="slides/stat133-10-data-frames1.pdf"&gt;part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Data Frames &lt;a href="slides/stat133-11-data-frames2.pdf"&gt;part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/dplyr-wickham.pdf"&gt;"dplyr" tutorial slides&lt;/a&gt; (by Hadley Wickham)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cran.r-project.org/web/packages/dplyr/vignettes/dplyr.html" rel="nofollow"&gt;Introduction to dplyr&lt;/a&gt; (by Hadley Wickham)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cran.r-project.org/web/packages/tibble/vignettes/tibble.html" rel="nofollow"&gt;tibbles vignette&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheatsheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/data-transformation-cheatsheet.pdf"&gt;Data transformation cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-5-housekeeping-filesystem-and-bash-commands" class="anchor" aria-hidden="true" href="#5-housekeeping-filesystem-and-bash-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. Housekeeping: Filesystem and Bash Commands&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Sep 13-16&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: At the lowest level, Data Analysis Projects (DAPs) are essentially made of files and directories. Therefore, we need to review some fundamental concepts such as the file-system, the command line interface, and some basic shell commands.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="slides/stat133-12-filesystem-basics.pdf"&gt;Filesystem Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-13-file-paths.pdf"&gt;File Paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-14-shell-basics.pdf"&gt;Shell Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-15-command-line.pdf"&gt;Command Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-16-working-with-files.pdf"&gt;Working with files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ryanstutorials.net/linuxtutorial/" rel="nofollow"&gt;Linux Tutorial&lt;/a&gt; lessons 1-5 (by Ryan Chadwick)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://swcarpentry.github.io/shell-novice/" rel="nofollow"&gt;The Unix Shell&lt;/a&gt; lessons 1-3 (by Software Carpentry)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.guru99.com/terminal-file-manager.html" rel="nofollow"&gt;Linux Command Line tutorial&lt;/a&gt; (by Guru99)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheat sheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/command-line-cheatsheet.pdf"&gt;command line cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-6-data-tables-storage-organization-importing-and-unix-filters" class="anchor" aria-hidden="true" href="#6-data-tables-storage-organization-importing-and-unix-filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6. Data Tables: Storage, Organization, Importing, and Unix filters&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Sep 18-25&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: We continue with a fundamental topic of data technologies: &lt;em&gt;Data Tables&lt;/em&gt;, the most common form in which data is stored, handled, and manipulated. Because datasets in tabular format are so ubiquitous, we need to talk about how tables are typically stored, learn good principles of data organization, and the so-called notion of "tidy data". You will also learn how to perform basic manipulation of data-table files with some unix filters. Also, we'll examine the relationship between tables and R data frames, as well as some considerations when importing (and exporting) tables in R.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="slides/stat133-23-data-tables.pdf"&gt;Data Tables&lt;/a&gt; (introduction)&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-24-data-spreadsheets.pdf"&gt;Spreadsheets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unix command line: Redirection and Pipes&lt;/li&gt;
&lt;li&gt;Unix filters: &lt;code&gt;cut&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;uniq&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Importing tables &lt;a href="slides/stat133-24-importing-tables1.pdf"&gt;part 1&lt;/a&gt; and &lt;a href="slides/stat133-25-importing-tables2.pdf"&gt;part 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kbroman.org/dataorg/" rel="nofollow"&gt;Organizing data in spreadsheets&lt;/a&gt; (by Karl Broman)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stat.auckland.ac.nz/~paul/ItDT/itdt-2010-11-01.pdf" rel="nofollow"&gt;Intro to Data Technologies&lt;/a&gt; (preface, chapter 1, and chapter 5) (by Paul Murrell)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ucb-stat133/stat133-misc/blob/master/tidy-data-wickham.pdf"&gt;Tidy Data&lt;/a&gt; (by Hadley Wickham)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheat sheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/command-line-cheatsheet.pdf"&gt;command line cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-7-housekeeping-version-control-with-git-and-github" class="anchor" aria-hidden="true" href="#7-housekeeping-version-control-with-git-and-github"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7. Housekeeping: Version Control with Git and GitHub&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Oct -02-03, &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;em&gt;mostly in lab&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: We continue talking about filestructure topics, and we introduce basic notions of version control systems (VCS) using Git, and the companion hosting platform GitHub.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="slides/stat133-19-git-intro.pdf"&gt;Git Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-20-git-workflow.pdf"&gt;Git Workflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Read sections 4 to 9 in Part I &lt;a href="https://happygitwithr.com/install-git.html" rel="nofollow"&gt;Installation&lt;/a&gt; (&lt;em&gt;Happy Git and GitHub for the useR&lt;/em&gt; by Jenny Bryan et al.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheat sheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/data-import-cheatsheet.pdf"&gt;Data import cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="cheatsheets/git-cheatsheet.pdf"&gt;git cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-8-data-visualization" class="anchor" aria-hidden="true" href="#8-data-visualization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8. Data Visualization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Sep 30, Oct-09&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: Paraphrasing the old saying "a graphic is word a thousand numbers". No other means of data representation allows us to understand data than visual displays. But in order to make good graphics we need to learn the fundamental concepts for data visualization.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="slides/stat133-26-datavis-classic-examples.pdf"&gt;Datavis: Classic Examples&lt;/a&gt; and &lt;a href="slides/stat133-27-datavis-intro.pdf"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-28-encoding-data-in-graphs.pdf"&gt;Datavis: Encoding Data in Graphs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-30-visual-system.pdf"&gt;Datavis: The Visual System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-32-using-color.pdf"&gt;Datavis: Using Color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/stat133-33-effective-charts.pdf"&gt;Datavis: Effective Charts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/show-me-the-numbers-Few.pdf"&gt;Stephen Few's Data Visualization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="slides/ggplot-karthik.pdf"&gt;"ggplot2" lecture&lt;/a&gt; (by Karthik Ram)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheat sheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/ggplot2-cheatsheet-2.1.pdf"&gt;Data visualization with ggplot2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="mortar_board" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f393.png"&gt;🎓&lt;/g-emoji&gt; &lt;strong&gt;MIDTERM 1&lt;/strong&gt;: Friday Oct-11&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-9-transition-to-programming-basics-for-data-analysis-part-1" class="anchor" aria-hidden="true" href="#9-transition-to-programming-basics-for-data-analysis-part-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9. Transition to Programming Basics for Data Analysis (part 1)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Oct 14-18&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: You don’t need to be an expert programmer to be a data scientist, but learning more about programming allows you to automate common tasks, and solve new problems with greater ease. We'll discuss how to write basic functions, the notion of R expressions, and an introduction to conditionals.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="tutorials/06-creating-functions.md"&gt;Creating functions&lt;/a&gt; (tutorial)&lt;/li&gt;
&lt;li&gt;&lt;a href="tutorials/07-intro-to-functions.md"&gt;Introduction to functions&lt;/a&gt; (tutorial)&lt;/li&gt;
&lt;li&gt;&lt;a href="tutorials/08-intro-to-expressions-conditionals.md"&gt;Introduction to R expressions and conditionals&lt;/a&gt; (tutorial)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://r4ds.had.co.nz/functions.html" rel="nofollow"&gt;chapter 19: Functions&lt;/a&gt; (&lt;em&gt;R for Data Science&lt;/em&gt; by Grolemund and Wickham)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-10-programming-basics-for-data-analysis-part-2" class="anchor" aria-hidden="true" href="#10-programming-basics-for-data-analysis-part-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10. Programming Basics for Data Analysis (part 2)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Oct 21-25&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: In addition to writing functions to reduce duplication in your code, you also need to learn about iteration, which helps you when you need to do the same operation several times. Namely, we review control flow structures such as &lt;code&gt;for&lt;/code&gt; loops, &lt;code&gt;while&lt;/code&gt; loops, &lt;code&gt;repeat&lt;/code&gt; loops, and the &lt;code&gt;apply&lt;/code&gt; family functions.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="tutorials/09-intro-to-loops.md"&gt;Introduction to loops&lt;/a&gt; (tutorial)&lt;/li&gt;
&lt;li&gt;&lt;a href="tutorials/10-more-functions.md"&gt;More about functions&lt;/a&gt; (tutorial)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adv-r.had.co.nz/Functions.html" rel="nofollow"&gt;Functions&lt;/a&gt; (&lt;em&gt;Advanced R&lt;/em&gt; by H. Wickham)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://adv-r.had.co.nz/Environments.html" rel="nofollow"&gt;Environments&lt;/a&gt; (&lt;em&gt;Advanced R&lt;/em&gt; by H. Wickham)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-11-testing-functions" class="anchor" aria-hidden="true" href="#11-testing-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11. Testing Functions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Oct 28-Nov 01&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: We begin with an introduction to the package &lt;code&gt;"testthat"&lt;/code&gt; which provides a nice framework for testing functions. Jointly, we will discuss Shiny apps which provide an interesting companion to R, making it quick and simple to deliver interactive analysis and graphics on any web browser. In lab, you'll learn how to perform basic manipulation of strings.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="tutorials/11-testing-functions.md"&gt;Intro to testing functions&lt;/a&gt; (tutorial)&lt;/li&gt;
&lt;li&gt;&lt;a href="slides/shiny-tutorial.pdf"&gt;shiny tutorial&lt;/a&gt; (by Grolemund)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="papers/testthat-wickham.pdf"&gt;testthat: Get started with testing&lt;/a&gt; (by Wickham)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gastonsanchez.com/r4strings/chars.html" rel="nofollow"&gt;Character strings in R&lt;/a&gt; (&lt;em&gt;r4strings&lt;/em&gt; by Sanchez)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gastonsanchez.com/r4strings/manip.html" rel="nofollow"&gt;Basic string manipulations&lt;/a&gt; (&lt;em&gt;r4strings&lt;/em&gt; by Sanchez)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://r4ds.had.co.nz/strings.html" rel="nofollow"&gt;chapter 14: Strings&lt;/a&gt; (&lt;em&gt;R for Data Science&lt;/em&gt; by Grolemund and Wickham)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheat sheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/stringr-cheatsheet.pdf"&gt;Stringr cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-12-shiny-apps" class="anchor" aria-hidden="true" href="#12-shiny-apps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12. Shiny Apps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Oct 28-Nov 01&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: We will discuss Shiny apps which provide an interesting companion to R, making it quick and simple to deliver interactive analysis and graphics on any web browser.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="slides/shiny-tutorial.pdf"&gt;shiny tutorial&lt;/a&gt; (by Grolemund)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="papers/testthat-wickham.pdf"&gt;testthat: Get started with testing&lt;/a&gt; (by Wickham)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gastonsanchez.com/r4strings/chars.html" rel="nofollow"&gt;Character strings in R&lt;/a&gt; (&lt;em&gt;r4strings&lt;/em&gt; by Sanchez)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gastonsanchez.com/r4strings/manip.html" rel="nofollow"&gt;Basic string manipulations&lt;/a&gt; (&lt;em&gt;r4strings&lt;/em&gt; by Sanchez)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://r4ds.had.co.nz/strings.html" rel="nofollow"&gt;chapter 14: Strings&lt;/a&gt; (&lt;em&gt;R for Data Science&lt;/em&gt; by Grolemund and Wickham)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheat sheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/stringr-cheatsheet.pdf"&gt;Stringr cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-13-more-shiny-apps-and-introduction-to-regular-expressions" class="anchor" aria-hidden="true" href="#13-more-shiny-apps-and-introduction-to-regular-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13. More Shiny Apps and Introduction to Regular Expressions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Nov 04-08&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt;  &lt;strong&gt;Topics&lt;/strong&gt;: Random numbers have many applications in science and computer programming, especially when there are significant uncertainties in a phenomenon of interest. In this part of the course we'll look at some basic problems involving working with random numbers and creating simulations. Additionally, we continue the discussion about character strings with a first contact to Regular Expressions.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="tutorials/12-intro-to-random-numbers.md"&gt;Introduction to random numbers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ucb-stat133/stat133-fall-2018/tree/master/apps/coin-toss"&gt;Coin toss shiny app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://regexpal.com.s3-website-us-east-1.amazonaws.com/" rel="nofollow"&gt;Regexpal&lt;/a&gt; tester tool.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vimeo.com/rstudioinc/review/131218530/212d8a5a7a/#t=0m0s" rel="nofollow"&gt;Part 1 - How to build a Shiny app&lt;/a&gt; (video)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vimeo.com/rstudioinc/review/131218530/212d8a5a7a/#t=42m2s" rel="nofollow"&gt;Part 2 - How to customize reactions&lt;/a&gt; (video)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vimeo.com/rstudioinc/review/131218530/212d8a5a7a/#t=1h32m41s" rel="nofollow"&gt;Part 3 - How to customize appearance&lt;/a&gt; (video)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheat sheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/shiny-cheatsheet.pdf"&gt;shiny cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-14-more-regular-expressions" class="anchor" aria-hidden="true" href="#14-more-regular-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14. More Regular Expressions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Nov 11-15&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt;  &lt;strong&gt;Topics&lt;/strong&gt;: At its heart, computing involves working with numbers. However, a considerable amount of information and data is in the form of text. To unleash the power of strings manipulation, we need to take things to the next level and learn about Regular Expressions. Namely, Regular expressions are a tool that allows us to describe a certain amount of text called "patterns". We'll describe the basic concepts of regex and the common operations to match text patterns.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gastonsanchez.com/r4strings/cleaning.html" rel="nofollow"&gt;Long Jump World Record example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gastonsanchez.com/r4strings/logs.html" rel="nofollow"&gt;Log file example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gastonsanchez.com/r4strings" rel="nofollow"&gt;Handling Strings in R&lt;/a&gt; (by Sanchez)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheat sheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/regular-expressions-cheatsheet.pdf"&gt;Regular Expressions cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-15-r-packaging-part-1" class="anchor" aria-hidden="true" href="#15-r-packaging-part-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;15. R packaging (part 1)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Nov 18-22&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: Packages are the fundamental units of reproducible R code. They include reusable functions, the documentation that describes how to use them, and sample data. In this part we'll start describing how to turn your code into an R package.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gastonsanchez.com/packyourcode/coin.html" rel="nofollow"&gt;Programming S3 Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gastonsanchez.com/packyourcode/methods1.html" rel="nofollow"&gt;Methods&lt;/a&gt; (by Sanchez)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://r-pkgs.had.co.nz/package.html" rel="nofollow"&gt;Package Structure&lt;/a&gt; (R packages by Wickham)&lt;/li&gt;
&lt;li&gt;See package components: &lt;a href="http://r-pkgs.had.co.nz/" rel="nofollow"&gt;http://r-pkgs.had.co.nz/&lt;/a&gt; (R packages by Wickham)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheat sheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/packages-cheatsheet.pdf"&gt;Package Development cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-16-r-packaging-part-2" class="anchor" aria-hidden="true" href="#16-r-packaging-part-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;16. R Packaging (part 2)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Dec 02-06&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: Creating an R package can seem overwhelming at first. So we'll keep working on the creation of a relatively basic package. This will give you the opportunity to apply most of the concepts seen in the course.&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gastonsanchez.com/packyourcode" rel="nofollow"&gt;Pack YouR Code&lt;/a&gt; (by Sanchez)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; &lt;strong&gt;Reading&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;See package components: &lt;a href="http://r-pkgs.had.co.nz/" rel="nofollow"&gt;http://r-pkgs.had.co.nz&lt;/a&gt; (R packages by Wickham)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Cheat sheet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href="cheatsheets/packages-cheatsheet.pdf"&gt;Package Development cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-17-rrr-week-and-final-exam" class="anchor" aria-hidden="true" href="#17-rrr-week-and-final-exam"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;17. RRR Week and Final Exam&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="card_index" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png"&gt;📇&lt;/g-emoji&gt; &lt;strong&gt;Dates&lt;/strong&gt;: Dec 09-13&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; &lt;strong&gt;Topics&lt;/strong&gt;: Prepare for final examination&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;No lecture. Instructor will hold OH (in 309 Evans)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="mortar_board" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f393.png"&gt;🎓&lt;/g-emoji&gt; &lt;strong&gt;FINAL&lt;/strong&gt;: Dec-19th, 7-10 pm, room TBD
&lt;ul&gt;
&lt;li&gt;More details about the final will be posted on bCourses&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ucb-stat133</author><guid isPermaLink="false">https://github.com/ucb-stat133/stat133-fall-2019</guid><pubDate>Fri, 15 Nov 2019 00:06:00 GMT</pubDate></item><item><title>griffithlab/rnaseq_tutorial #7 in R, Today</title><link>https://github.com/griffithlab/rnaseq_tutorial</link><description>&lt;p&gt;&lt;i&gt;Informatics for RNA-seq: A web resource for analysis on the cloud. Educational tutorials and working pipelines for RNA-seq analysis including an introduction to: cloud computing, critical file formats, reference genomes, gene annotation, expression, differential expression, alternative splicing, data visualization, and interpretation.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h3&gt;&lt;a id="user-content-informatics-for-rna-seq-a-web-resource-for-analysis-on-the-cloud" class="anchor" aria-hidden="true" href="#informatics-for-rna-seq-a-web-resource-for-analysis-on-the-cloud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Informatics for RNA-seq: A web resource for analysis on the cloud&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;An educational tutorial and working demonstration pipeline for RNA-seq analysis including an introduction to: cloud computing, next generation sequence file formats, reference genomes, gene annotation, expression analysis, differential expression analysis, alternative splicing analysis, data visualization, and interpretation.&lt;/p&gt;
&lt;p&gt;This repository is used to store code and certain raw materials for a detailed RNA-seq tutorial.  To actually complete this tutorial, go to the &lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki"&gt;RNA-seq tutorial wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Citation:
Malachi Griffith*, Jason R. Walker, Nicholas C. Spies, Benjamin J. Ainscough, Obi L. Griffith*. 2015. &lt;a href="http://dx.doi.org/10.1371/journal.pcbi.1004393" rel="nofollow"&gt;Informatics for RNA-seq: A web resource for analysis on the cloud&lt;/a&gt;. PLoS Comp Biol. 11(8):e1004393.&lt;/p&gt;
&lt;p&gt;*To whom correspondence should be addressed: E-mail: mgriffit[AT]genome.wustl.edu, ogriffit[AT]genome.wustl.edu&lt;/p&gt;
&lt;p&gt;Note: An archived version of this tutorial exists &lt;a href="https://github.com/griffithlab/rnaseq_tutorial_v1"&gt;here&lt;/a&gt;. This version is maintained for consistency with the published materials (&lt;a href="http://dx.doi.org/10.1371/journal.pcbi.1004393" rel="nofollow"&gt;Griffith et al. 2015. PLoS Comp Biol.&lt;/a&gt;) and for past students wishing to review covered material. However, we strongly suggest that you continue with the current version of the tutorial below.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-want-to-contribute-to-the-rna-seq-wiki" class="anchor" aria-hidden="true" href="#want-to-contribute-to-the-rna-seq-wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to contribute to the RNA-seq Wiki?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial_wiki.git"&gt;Fork it and send a pull request.&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-tutorial-table-of-contents" class="anchor" aria-hidden="true" href="#tutorial-table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorial Table of Contents&lt;/h3&gt;
&lt;ol start="0"&gt;
  &lt;li&gt;&lt;strong&gt;Module 0 - Introduction and Cloud Computing&lt;/strong&gt;&lt;/li&gt;
  &lt;ol start="i"&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Authors"&gt;Authors&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Citation"&gt;Citation and Supplementary Materials&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Syntax"&gt;Syntax&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Intro-to-AWS-Cloud-Computing"&gt;Intro to AWS Cloud Computing&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Logging-into-Amazon-Cloud"&gt;Logging into Amazon Cloud&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Unix-Bootcamp"&gt;Unix Bootcamp&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Environment"&gt;Environment&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Resources"&gt;Resources&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;
  &lt;li&gt;&lt;strong&gt;Module 1 - Introduction to RNA sequencing&lt;/strong&gt;&lt;/li&gt;
  &lt;ol start="i"&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Reference-Genome"&gt;Reference Genomes&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Annotation"&gt;Annotations&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Indexing"&gt;Indexing&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/RNAseq-Data"&gt;RNA-seq Data&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/PreAlignment-QC"&gt;Pre-Alignment QC&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;
  &lt;li&gt;&lt;strong&gt;Module 2 - RNA-seq Alignment and Visualization&lt;/strong&gt;&lt;/li&gt;
  &lt;ol start="i"&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Adapter-Trim"&gt;Adapter Trim&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Alignment"&gt;Alignment&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/IGV-Tutorial"&gt;IGV&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/PostAlignment-Visualization"&gt;Alignment Visualization&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/PostAlignment-QC"&gt;Alignment QC&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;
  &lt;li&gt;&lt;strong&gt;Module 3 - Expression and Differential Expression&lt;/strong&gt;&lt;/li&gt;
  &lt;ol start="i"&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Expression"&gt;Expression&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Differential-Expression"&gt;Differential Expression&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/DE-Visualization"&gt;DE Visualization&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Kallisto"&gt;Kallisto for Reference-Free Abundance Estimation&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;
  &lt;li&gt;&lt;strong&gt;Module 4 - Isoform Discovery and Alternative Expression&lt;/strong&gt;&lt;/li&gt;
  &lt;ol start="i"&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Reference-Guided-Transcript-Assembly"&gt;Reference Guided Transcript Assembly&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/de-novo-Transcript-Assembly"&gt;de novo Transcript Assembly&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Transcript-Assembly-Merge"&gt;Transcript Assembly Merge&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Differential-Splicing"&gt;Differential Splicing&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Transcript-Assembly-Visualization"&gt;Splicing Visualization&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;
  &lt;li&gt;&lt;strong&gt;Module 5 - De novo transcript reconstruction&lt;/strong&gt;&lt;/li&gt;
    &lt;ol start="i"&gt;
    &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Trinity-Assembly-And-Analysis"&gt;De novo RNA-Seq Assembly and Analysis Using Trinity&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;li&gt;&lt;strong&gt;Module 6 - Functional Annotation of Transcripts&lt;/strong&gt;&lt;/li&gt;
    &lt;ol start="i"&gt;
    &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Trinotate-Functional-Annotation"&gt;Functional Annotation of Assembled Transcripts Using Trinotate&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;li&gt;&lt;strong&gt;Appendix&lt;/strong&gt;&lt;/li&gt;
  &lt;ol start="i"&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Saving-Your-Results"&gt;Saving Your Results&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Abbreviations"&gt;Abbreviations&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Lectures"&gt;Lectures&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Solutions"&gt;Practical Exercise Solutions&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Integrated-Assignment"&gt;Integrated Assignment&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Proposed-Improvements"&gt;Proposed Improvements&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/AWS-Setup"&gt;AWS Setup&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>griffithlab</author><guid isPermaLink="false">https://github.com/griffithlab/rnaseq_tutorial</guid><pubDate>Fri, 15 Nov 2019 00:07:00 GMT</pubDate></item><item><title>r-spatial/sf #8 in R, Today</title><link>https://github.com/r-spatial/sf</link><description>&lt;p&gt;&lt;i&gt;Simple Features for R&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/r-spatial/sf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8af59eece043f7e097910e0bc7151681785b54c6/68747470733a2f2f7472617669732d63692e6f72672f722d7370617469616c2f73662e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/r-spatial/sf.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/edzerpebesma/sf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ad075efe6d5a79320a140ae77557312beba164d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f722d7370617469616c2f73663f6272616e63683d6d6173746572267376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/r-spatial/sf?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/r-spatial/sf?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c5ae96422cbd4a277b93e84a62968372d7f1033d/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f722d7370617469616c2f73662f6d61737465722e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/codecov/c/github/r-spatial/sf/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.gnu.org/licenses/gpl-2.0.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f0c5dfebd36c920de813790f6bc2f3a89a8de790/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c2532302532382533453d253230322532392d627269676874677265656e2e7376673f7374796c653d666c6174" alt="License" data-canonical-src="http://img.shields.io/badge/license-GPL%20%28%3E=%202%29-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=sf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5aa6c07fdcf2357766f382a5eec6be75d3b18329/687474703a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f7366" alt="CRAN" data-canonical-src="http://www.r-pkg.org/badges/version/sf" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/web/checks/check_results_sf.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c67a1a6c79e2017a12ee702f602aa254bf4b44c/68747470733a2f2f6372616e636865636b732e696e666f2f6261646765732f776f7273742f7366" alt="cran checks" data-canonical-src="https://cranchecks.info/badges/worst/sf" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.r-pkg.org/pkg/sf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/af8eeb62012c02d12de8d9a9279ec9d5320a0583/687474703a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f73663f636f6c6f723d627269676874677265656e" alt="Downloads" data-canonical-src="http://cranlogs.r-pkg.org/badges/sf?color=brightgreen" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-simple-features-for-r" class="anchor" aria-hidden="true" href="#simple-features-for-r"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Simple Features for R&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/edzer/f461a3a95570c4ab7edf3125c2f19d20"&gt;&lt;img align="right" src="https://user-images.githubusercontent.com/520851/34887433-ce1d130e-f7c6-11e7-83fc-d60ad4fae6bd.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A package that provides &lt;a href="https://en.wikipedia.org/wiki/Simple_Features" rel="nofollow"&gt;simple features access&lt;/a&gt; for R. Package sf:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;provides simple features are &lt;code&gt;data.frames&lt;/code&gt; or &lt;code&gt;tibbles&lt;/code&gt; with a geometry list-column&lt;/li&gt;
&lt;li&gt;represents natively in R all 17 simple feature types for all dimensions (XY, XYZ, XYM, XYZM)&lt;/li&gt;
&lt;li&gt;interfaces to &lt;a href="https://trac.osgeo.org/geos" rel="nofollow"&gt;GEOS&lt;/a&gt; to support the &lt;a href="https://en.wikipedia.org/wiki/DE-9IM" rel="nofollow"&gt;DE9-IM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;interfaces to &lt;a href="http://www.gdal.org/" rel="nofollow"&gt;GDAL&lt;/a&gt;, supporting all driver options, Date and DateTime (&lt;code&gt;POSIXct&lt;/code&gt;) columns, and coordinate reference system transformations through &lt;a href="http://proj4.org/" rel="nofollow"&gt;PROJ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;uses &lt;a href="https://en.wikipedia.org/wiki/Well-known_text#Well-known_binary" rel="nofollow"&gt;well-known-binary&lt;/a&gt; serialisations written in C++/Rcpp for fast I/O with GDAL and GEOS&lt;/li&gt;
&lt;li&gt;reads from and writes to spatial databases such as &lt;a href="http://postgis.net/" rel="nofollow"&gt;PostGIS&lt;/a&gt; using &lt;a href="https://cran.r-project.org/web/packages/DBI/index.html" rel="nofollow"&gt;DBI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;is extended by pkg &lt;a href="https://github.com/r-spatial/lwgeom/"&gt;lwgeom&lt;/a&gt; for further liblwgeom/PostGIS functions, including spherical geometry functions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/edzer/442d74a5775abcd5068cf3e73b23687b"&gt;&lt;img align="left" src="https://user-images.githubusercontent.com/520851/50280460-e35c1880-044c-11e9-9ed7-cc46754e49db.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Illustration (c) by &lt;a href="https://twitter.com/allison_horst/status/1071456081308614656" rel="nofollow"&gt;Allison Horst&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-blogs-presentations-vignettes-sp-sf-wiki" class="anchor" aria-hidden="true" href="#blogs-presentations-vignettes-sp-sf-wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blogs, presentations, vignettes, sp-sf wiki&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;an open access &lt;a href="https://journal.r-project.org/archive/2018/RJ-2018-009/index.html" rel="nofollow"&gt;R Journal article&lt;/a&gt; summarizes the package&lt;/li&gt;
&lt;li&gt;package vignettes: &lt;a href="https://r-spatial.github.io/sf/articles/sf1.html" rel="nofollow"&gt;first&lt;/a&gt;, &lt;a href="https://r-spatial.github.io/sf/articles/sf2.html" rel="nofollow"&gt;second&lt;/a&gt;, &lt;a href="https://r-spatial.github.io/sf/articles/sf3.html" rel="nofollow"&gt;third&lt;/a&gt;, &lt;a href="https://r-spatial.github.io/sf/articles/sf4.html" rel="nofollow"&gt;forth&lt;/a&gt;, &lt;a href="https://r-spatial.github.io/sf/articles/sf5.html" rel="nofollow"&gt;fifth&lt;/a&gt;, &lt;a href="https://r-spatial.github.io/sf/articles/sf6.html" rel="nofollow"&gt;sixth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;blog posts: &lt;a href="http://r-spatial.org/r/2016/02/15/simple-features-for-r.html" rel="nofollow"&gt;first&lt;/a&gt;, &lt;a href="http://r-spatial.org/r/2016/07/18/sf2.html" rel="nofollow"&gt;second&lt;/a&gt;, &lt;a href="http://r-spatial.org/r/2016/11/02/sfcran.html" rel="nofollow"&gt;third&lt;/a&gt;, &lt;a href="http://r-spatial.org/r/2017/01/12/newssf.html" rel="nofollow"&gt;fourth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the original R Consortium ISC &lt;a href="PROPOSAL.md"&gt;proposal&lt;/a&gt;, the R Consortium &lt;a href="https://www.r-consortium.org/blog/2017/01/03/simple-features-now-on-cran" rel="nofollow"&gt;blog post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;presentations: &lt;a href="https://edzer.github.io/rstudio_conf/#1" rel="nofollow"&gt;rstudio::conf 2018&lt;/a&gt; (&lt;a href="https://www.rstudio.com/resources/videos/tidy-spatial-data-analysis/" rel="nofollow"&gt;video&lt;/a&gt;), &lt;a href="http://pebesma.staff.ifgi.de/pebesma_sfr.pdf" rel="nofollow"&gt;UseR! 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;wiki page describing &lt;a href="https://github.com/r-spatial/sf/wiki/Migrating"&gt;sp-sf migration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cheatsheet" class="anchor" aria-hidden="true" href="#cheatsheet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cheatsheet&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://creativecommons.org/licenses/by/4.0/" rel="nofollow"&gt;CC 4.0&lt;/a&gt; BY &lt;a href="http://github.com/ryangarnett"&gt;Ryan Garnett&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rstudio/cheatsheets/blob/master/sf.pdf"&gt;&lt;img src="https://raw.githubusercontent.com/rstudio/cheatsheets/master/pngs/sf.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;Install either from CRAN with:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;this will install binary packages on Windows and MacOS, unless you configured R such that it tries to install source packages; in that case, see below.&lt;/p&gt;
&lt;p&gt;Install development versions from github with&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;devtools&lt;/span&gt;)
install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;r-spatial/sf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;Installing sf from source works under windows when &lt;a href="https://cran.r-project.org/bin/windows/Rtools/" rel="nofollow"&gt;Rtools&lt;/a&gt; is installed. This downloads the system requirements from &lt;a href="https://github.com/rwinlib/"&gt;rwinlib&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MacOS&lt;/h3&gt;
&lt;p&gt;The easiest way to install &lt;code&gt;gdal&lt;/code&gt; is using Homebrew. Recent version of homebrew include a full-featured up-to-date &lt;a href="https://github.com/Homebrew/homebrew-core/blob/master/Formula/gdal.rb"&gt;gdal formula&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install pkg-config
brew install gdal
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once gdal is installed, you will be able to install &lt;code&gt;sf&lt;/code&gt; package from source in R.&lt;/p&gt;
&lt;p&gt;Alternatively &lt;a href="https://stat.ethz.ch/pipermail/r-sig-mac/2017-June/012429.html" rel="nofollow"&gt;these instructions&lt;/a&gt; explain how to install gdal using kyngchaos frameworks.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h3&gt;
&lt;p&gt;For Unix-alikes, GDAL (&amp;gt;= 2.0.1), GEOS (&amp;gt;= 3.4.0) and Proj.4 (&amp;gt;= 4.8.0) are required.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ubuntu" class="anchor" aria-hidden="true" href="#ubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu&lt;/h4&gt;
&lt;p&gt;To install the dependencies on Ubuntu, either add &lt;a href="http://ppa.launchpad.net/ubuntugis/ubuntugis-unstable/ubuntu/" rel="nofollow"&gt;ubuntugis-unstable&lt;/a&gt; to the package repositories:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
sudo apt-get update
sudo apt-get install libudunits2-dev libgdal-dev libgeos-dev libproj-dev &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or install dependencies from source; see e.g. an older &lt;a href="https://github.com/r-spatial/sf/blob/593ee48b34001fe3b383ea73ea57063ecf690732/.travis.yml"&gt;travis&lt;/a&gt; config file for hints.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-fedora" class="anchor" aria-hidden="true" href="#fedora"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fedora&lt;/h4&gt;
&lt;p&gt;The following command installs all required dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo dnf install gdal-devel proj-devel proj-epsg proj-nad geos-devel udunits2-devel&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-arch" class="anchor" aria-hidden="true" href="#arch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arch&lt;/h4&gt;
&lt;p&gt;Get gdal, proj and geos from the main repos and udunits from the AUR:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pacman -S gdal proj geos
pacaur/yaourt/whatever -S udunits
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h4&gt;
&lt;p&gt;To install on Debian, the &lt;a href="https://github.com/rocker-org/geospatial"&gt;rocker geospatial&lt;/a&gt; Dockerfiles may be helpful. Ubuntu Dockerfiles are found &lt;a href="https://github.com/r-spatial/sf/tree/master/inst/docker"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-gdal-geos-andor-proj-versions-on-your-system" class="anchor" aria-hidden="true" href="#multiple-gdal-geos-andor-proj-versions-on-your-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple GDAL, GEOS and/or PROJ versions on your system&lt;/h3&gt;
&lt;p&gt;In case you use dynamic linking (installation from source) and have multiple versions of these libraries installed (e.g. one from ubuntugis-unstable, another installed from source in &lt;code&gt;/usr/local/lib&lt;/code&gt;) then this will in general not work, even when setting &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; manually. See &lt;a href="https://github.com/r-spatial/sf/issues/844"&gt;here&lt;/a&gt; for the reason why.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-lwgeom" class="anchor" aria-hidden="true" href="#lwgeom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lwgeom&lt;/h3&gt;
&lt;p&gt;Functions and methods that require &lt;code&gt;liblwgeom&lt;/code&gt;, including &lt;code&gt;st_make_valid&lt;/code&gt; and all spherical or ellipsoidal metrics (area, distances), have since sf 0.5-5 been moved to their own package, &lt;a href="https://github.com/r-spatial/lwgeom"&gt;lwgeom&lt;/a&gt;, which is also on &lt;a href="https://cran.r-project.org/package=lwgeom" rel="nofollow"&gt;CRAN&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Contributions of all sorts are most welcome, issues and pull requests are the preferred ways of sharing them.&lt;/li&gt;
&lt;li&gt;When contributing pull requests, please adhere to the package style (in package code use &lt;code&gt;=&lt;/code&gt; rather than &lt;code&gt;&amp;lt;-&lt;/code&gt;; don't change indentation; tab stops of 4 spaces are preferred)&lt;/li&gt;
&lt;li&gt;This project is released with a &lt;a href="CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgment" class="anchor" aria-hidden="true" href="#acknowledgment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgment&lt;/h2&gt;
&lt;p&gt;This project gratefully acknowledges financial &lt;a href="https://www.r-consortium.org/projects" rel="nofollow"&gt;support&lt;/a&gt; from the&lt;/p&gt;
&lt;a href="https://www.r-consortium.org/projects/awarded-projects" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/01023eddc01fbb0367b3fa85a78851a5ef920e55/687474703a2f2f70656265736d612e73746166662e696667692e64652f52436f6e736f727469756d5f486f72697a6f6e74616c5f50616e746f6e652e706e67" width="300" data-canonical-src="http://pebesma.staff.ifgi.de/RConsortium_Horizontal_Pantone.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>r-spatial</author><guid isPermaLink="false">https://github.com/r-spatial/sf</guid><pubDate>Fri, 15 Nov 2019 00:08:00 GMT</pubDate></item><item><title>r-lib/roxygen2 #9 in R, Today</title><link>https://github.com/r-lib/roxygen2</link><description>&lt;p&gt;&lt;i&gt;Generate R package documentation from inline R comments&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-roxygen2-" class="anchor" aria-hidden="true" href="#roxygen2-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;roxygen2 &lt;a target="_blank" rel="noopener noreferrer" href="man/figures/logo.png"&gt;&lt;img src="man/figures/logo.png" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://CRAN.R-project.org/package=roxygen2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8a8acd425772baa943be8bade6f2679888364b27/68747470733a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f726f787967656e32" alt="CRAN status" data-canonical-src="https://www.r-pkg.org/badges/version/roxygen2" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/r-lib/roxygen2/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3858263efe56667824661739e97d8909bc016e5/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f6275696c642f722d6c69622f726f787967656e322f38" alt="Azure pipelines build status" data-canonical-src="https://img.shields.io/azure-devops/build/r-lib/roxygen2/8" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/r-lib/roxygen2/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b8de865ae0d3a573988af60a2cb0e2f964210e31/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f74657374732f722d6c69622f726f787967656e322f383f636f6c6f723d627269676874677265656e26636f6d706163745f6d657373616765" alt="Azure pipelines test status" data-canonical-src="https://img.shields.io/azure-devops/tests/r-lib/roxygen2/8?color=brightgreen&amp;amp;compact_message" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/r-lib/roxygen2/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2a6943adc13c2e1e8bb102407843b217f9405a6c/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f636f7665726167652f722d6c69622f726f787967656e322f38" alt="Azure pipelines coverage status" data-canonical-src="https://img.shields.io/azure-devops/coverage/r-lib/roxygen2/8" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The premise of roxygen2 is simple: describe your functions in comments next to their definitions and roxygen2 will process your source code and comments to automatically generate &lt;code&gt;.Rd&lt;/code&gt; files in &lt;code&gt;man/&lt;/code&gt;, &lt;code&gt;NAMESPACE&lt;/code&gt;, and, if needed, the &lt;code&gt;Collate&lt;/code&gt; field in &lt;code&gt;DESCRIPTION&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Install devtools from CRAN&lt;/span&gt;
install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;roxygen2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or the development version from GitHub:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install.packages("devtools")&lt;/span&gt;
&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;r-lib/roxygen2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;The premise of roxygen2 is simple: describe your functions in comments next to their definitions and roxygen2 will process your source code and comments to produce Rd files in the &lt;code&gt;man/&lt;/code&gt; directory.  Here's a &lt;a href="https://stringr.tidyverse.org/reference/str_length.html" rel="nofollow"&gt;simple example&lt;/a&gt; from the stringr package:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' The length of a string&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' Technically this returns the number of "code points", in a string. One&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' code point usually corresponds to one character, but not always. For example,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' an u with a umlaut might be represented as a single character or as the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' combination a u and an umlaut.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' @inheritParams str_detect&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' @return A numeric vector giving number of characters (code points) in each&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;'    element of the character vector. Missing string have missing length.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' @seealso [stringi::stri_length()] which this function wraps.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' @export&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' @examples&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' str_length(letters)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' str_length(NA)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' str_length(factor("abc"))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;' str_length(c("i", "like", "programming", NA))&lt;/span&gt;
&lt;span class="pl-en"&gt;str_length&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;string&lt;/span&gt;) {
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you &lt;code&gt;roxygenise()&lt;/code&gt; (or &lt;code&gt;devtools::document()&lt;/code&gt;) your package these comments will be automatically transformed to the &lt;code&gt;.Rd&lt;/code&gt; that R uses to generate the documentation you see when you type &lt;code&gt;?str_length&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn more&lt;/h2&gt;
&lt;p&gt;To get started, first read &lt;code&gt;vignette("roxygen2")&lt;/code&gt;. Then read more about the specific package component that you want to generate:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;code&gt;.Rd&lt;/code&gt; documentation files, read &lt;code&gt;vignette("rd")&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For the &lt;code&gt;NAMESPACE&lt;/code&gt;, read &lt;code&gt;vignette("namespace")&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For the &lt;code&gt;Collate&lt;/code&gt; field in the &lt;code&gt;DESCRIPTION&lt;/code&gt;, read &lt;code&gt;update_collate()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>r-lib</author><guid isPermaLink="false">https://github.com/r-lib/roxygen2</guid><pubDate>Fri, 15 Nov 2019 00:09:00 GMT</pubDate></item></channel></rss>